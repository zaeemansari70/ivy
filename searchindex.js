Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_container", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_container.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_container", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 123, 125, 130, 131, 132, 133, 137, 138, 140, 141, 142, 152, 153, 154, 274, 325, 328, 367, 369, 686, 693, 732, 738, 774, 776, 778, 780, 813, 860, 864, 915, 916, 1026, 1028, 1038, 1063, 1066, 1144, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 171, 176, 181, 186, 191, 196, 201, 202, 203, 204, 205, 208, 212, 213, 218, 221, 226, 227, 232, 235, 238, 243, 248, 251, 256, 261, 266, 269, 274, 279, 280, 281, 286, 291, 296, 301, 302, 303, 306, 307, 308, 313, 314, 319, 322, 325, 330, 331, 336, 341, 346, 351, 352, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 608, 609, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 681, 686, 687, 692, 693, 694, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 767, 768, 769, 770, 771, 772, 773, 774, 776, 781, 785, 788, 792, 797, 801, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 827, 828, 829, 830, 831, 832, 833, 838, 843, 848, 853, 857, 860, 865, 869, 874, 878, 883, 888, 893, 896, 901, 905, 910, 915, 920, 925, 930, 935, 940, 945, 946, 951, 956, 961, 962, 967, 971, 975, 979, 983, 987, 992, 996, 1001, 1002, 1006, 1010, 1014, 1018, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1050, 1051, 1052, 1055, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1074, 1079, 1084, 1089, 1090, 1095, 1100, 1101, 1105, 1109, 1113, 1117, 1121, 1125, 1129, 1133, 1134, 1139, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1144], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 71, 72, 73, 76, 77, 78, 79, 116, 117, 125, 126, 127, 128, 130, 134, 135, 137, 138, 140, 142, 153, 154, 686, 739, 1050, 1051, 1055, 1144, 1152, 1153, 1154, 1155, 1156, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 130, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192], "base": [0, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 125, 129, 131, 137, 153, 204, 235, 236, 237, 274, 367, 369, 402, 508, 511, 563, 566, 568, 569, 570, 571, 572, 573, 576, 578, 579, 580, 581, 582, 630, 631, 633, 686, 722, 747, 756, 774, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1101, 1104, 1152, 1153, 1154, 1157, 1159, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "object": [0, 73, 76, 77, 78, 79, 96, 97, 125, 139, 142, 204, 221, 224, 274, 314, 317, 367, 393, 397, 774, 1026, 1029, 1031, 1033, 1034, 1035, 1040, 1041, 1042, 1043, 1050, 1062, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1178, 1179], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 73, 76, 77, 78, 79, 119, 128, 132, 137, 139, 140, 141, 142, 274, 275, 276, 277, 278, 367, 368, 369, 774, 775, 1050, 1051, 1055, 1144, 1152, 1153, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "choose_random_backend": 0, "exclud": [0, 2, 123, 137, 204, 205, 206, 1050, 1056, 1059], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 141, 142, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 298, 300, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 317, 318, 319, 321, 322, 324, 325, 327, 328, 329, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 352, 354, 356, 366, 367, 372, 373, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 726, 728, 729, 733, 739, 741, 744, 745, 746, 747, 748, 749, 751, 755, 756, 762, 763, 765, 768, 769, 770, 771, 774, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1032, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1155, 1156, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 73, 78, 79, 119, 127], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 32, 76, 77, 137, 139, 141, 367, 392, 686, 745, 1155, 1156, 1178, 1179], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 137, 139, 141, 686, 738, 1155, 1156, 1178, 1179], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1147, 1149, 1155, 1156, 1166, 1175, 1176, 1182, 1186], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 73, 76, 77, 78, 79, 127, 131, 133, 137, 142, 153, 154, 274, 307, 319, 320, 322, 323, 330, 365, 366, 367, 379, 380, 381, 382, 386, 388, 686, 720, 721, 724, 729, 733, 740, 742, 754, 774, 814, 1026, 1027, 1036, 1037, 1144], "prioriti": [0, 4, 19, 76, 77, 134], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 31, 32, 33, 34, 73, 76, 77, 78, 79, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 135, 137, 139, 140, 201, 202, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 352, 355, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 692, 693, 697, 707, 714, 738, 745, 815, 818, 822, 825, 831, 832, 833, 836, 848, 851, 860, 864, 915, 916, 961, 996, 999, 1026, 1032, 1044, 1045, 1048, 1068, 1074, 1078, 1100, 1105, 1108, 1125, 1128, 1133, 1134, 1137, 1147, 1149, 1155, 1156, 1178, 1179], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 33, 34, 35, 36, 76, 77, 118, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 203, 204, 238, 241, 256, 258, 260, 261, 263, 265, 274, 319, 320, 322, 323, 367, 373, 380, 381, 391, 402, 635, 638, 686, 695, 774, 781, 783, 788, 790, 797, 799, 805, 807, 832, 910, 914, 915, 919, 1026, 1032, 1038, 1100, 1121, 1124, 1129, 1132, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "paramet": [0, 4, 5, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 122, 125, 139, 140, 153, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 313, 314, 317, 319, 320, 322, 323, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 355, 357, 358, 359, 360, 361, 366, 367, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 745, 747, 748, 750, 752, 753, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1149, 1155, 1156, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 55, 56, 59, 60, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 94, 95, 100, 101, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 204, 205, 206, 208, 209, 213, 214, 216, 221, 224, 226, 227, 228, 229, 230, 231, 238, 241, 243, 244, 246, 251, 252, 254, 269, 271, 273, 274, 296, 297, 298, 299, 300, 352, 355, 367, 373, 382, 386, 391, 392, 402, 528, 531, 660, 663, 686, 707, 714, 715, 716, 717, 718, 719, 760, 774, 781, 783, 797, 799, 815, 822, 823, 824, 825, 826, 827, 830, 832, 848, 851, 910, 914, 930, 934, 961, 979, 982, 992, 993, 994, 995, 1002, 1005, 1022, 1023, 1024, 1025, 1026, 1028, 1038, 1039, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1067, 1068, 1069, 1073, 1079, 1083, 1100, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1150, 1155, 1156, 1166, 1174, 1177, 1182, 1183, 1184, 1185, 1186, 1187], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 35, 36, 37, 38, 43, 44, 53, 54, 55, 56, 59, 60, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 286, 288, 290, 296, 297, 298, 299, 300, 301, 308, 311, 314, 317, 325, 328, 330, 366, 367, 374, 377, 382, 386, 388, 390, 391, 392, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 638, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 704, 705, 707, 714, 715, 716, 717, 718, 719, 720, 728, 732, 740, 741, 742, 744, 745, 762, 763, 765, 772, 774, 781, 783, 785, 786, 788, 790, 792, 794, 796, 797, 799, 801, 803, 805, 807, 810, 812, 813, 815, 830, 832, 833, 835, 837, 838, 841, 848, 851, 869, 872, 905, 908, 910, 914, 930, 934, 935, 939, 945, 946, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 966, 967, 970, 979, 982, 987, 990, 992, 994, 996, 997, 998, 999, 1000, 1001, 1006, 1009, 1026, 1031, 1032, 1033, 1034, 1039, 1040, 1041, 1042, 1043, 1045, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1147, 1149, 1155, 1156, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 76, 77, 130, 131, 135, 139, 154, 686, 768, 1144], "infer": [0, 4, 35, 36, 55, 56, 80, 81, 100, 101, 118, 128, 132, 133, 137, 142, 201, 202, 204, 205, 206, 208, 209, 213, 214, 216, 226, 227, 228, 229, 230, 231, 243, 244, 246, 251, 252, 254, 269, 271, 273, 274, 307, 402, 528, 531, 686, 725, 753, 961, 992, 993, 994, 995], "when": [0, 4, 14, 15, 18, 19, 20, 53, 54, 59, 60, 73, 76, 77, 78, 79, 98, 99, 104, 105, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 154, 274, 281, 284, 402, 418, 421, 513, 516, 630, 633, 686, 697, 732, 756, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1026, 1037, 1050, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1067, 1100, 1105, 1108, 1113, 1116, 1121, 1124, 1129, 1132, 1144, 1178, 1179], "global": [0, 4, 5, 6, 12, 57, 58, 73, 76, 77, 78, 79, 102, 103, 127, 128, 132, 133, 137, 274, 302, 303, 304, 306, 307, 367, 390, 391, 392, 686, 722, 723, 743, 747, 748, 750, 755, 756, 774, 814, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 33, 34, 43, 44, 45, 46, 64, 76, 77, 88, 89, 90, 91, 96, 97, 109, 118, 119, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 274, 307, 357, 360, 367, 373, 389, 390, 391, 392, 402, 438, 441, 686, 687, 688, 689, 690, 691, 746, 747, 748, 749, 750, 751, 752, 774, 781, 783, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 832, 838, 841, 869, 872, 878, 881, 893, 895, 905, 908, 1026, 1027, 1036, 1037, 1038, 1042, 1043, 1050, 1061, 1063, 1064, 1069, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1121, 1124, 1129, 1132, 1166, 1175, 1182, 1183, 1184, 1185, 1186, 1187], "ret": [0, 4, 5, 12, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 122, 126, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 279, 280, 281, 284, 286, 287, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 308, 311, 313, 314, 317, 319, 320, 322, 323, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 355, 366, 367, 370, 371, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 723, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 745, 753, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1149, 1155, 1156, 1182, 1186], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 266, 268, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 307, 308, 311, 314, 317, 319, 320, 322, 323, 325, 328, 341, 344, 346, 349, 357, 360, 365, 366, 367, 373, 374, 377, 379, 382, 383, 384, 385, 386, 389, 390, 391, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 716, 717, 718, 719, 721, 723, 724, 735, 737, 746, 749, 751, 753, 754, 760, 762, 763, 764, 765, 766, 767, 769, 770, 771, 774, 776, 777, 778, 779, 780, 792, 793, 794, 795, 796, 814, 815, 816, 818, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 860, 863, 878, 881, 888, 891, 910, 914, 915, 919, 920, 924, 925, 929, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1121, 1124, 1125, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 33, 34, 35, 36, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 205, 206, 208, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 288, 290, 291, 294, 296, 298, 300, 307, 352, 355, 367, 373, 391, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 610, 612, 613, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 691, 715, 717, 719, 732, 762, 763, 765, 774, 781, 783, 788, 790, 792, 794, 796, 797, 799, 801, 803, 805, 807, 814, 832, 833, 834, 835, 836, 837, 838, 841, 869, 872, 878, 881, 893, 895, 896, 899, 905, 908, 910, 914, 930, 934, 935, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 966, 975, 978, 979, 982, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1022, 1023, 1024, 1026, 1038, 1039, 1045, 1047, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "import": [0, 4, 15, 19, 20, 71, 72, 116, 117, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 154, 367, 389, 390, 1144, 1150], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 43, 44, 76, 77, 88, 89, 120, 121, 125, 126, 128, 132, 133, 134, 137, 139, 142, 686, 762, 763, 764, 765, 766, 1100, 1101, 1104, 1144], "np": [0, 4, 120, 121, 125, 130, 132, 133, 134, 139, 140, 142, 402, 543, 546, 1144], "x": [0, 4, 12, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 134, 135, 137, 139, 140, 141, 142, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 208, 210, 211, 213, 216, 217, 221, 224, 225, 227, 228, 229, 230, 231, 238, 241, 243, 246, 247, 251, 254, 255, 256, 257, 260, 261, 262, 265, 266, 268, 269, 270, 273, 274, 281, 284, 285, 291, 294, 295, 296, 297, 298, 299, 300, 307, 308, 311, 312, 314, 317, 325, 328, 341, 344, 367, 373, 374, 377, 378, 382, 386, 391, 393, 394, 397, 398, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 451, 453, 456, 457, 463, 464, 465, 466, 467, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 503, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 528, 531, 533, 536, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 558, 561, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 593, 596, 597, 608, 609, 615, 618, 619, 625, 628, 629, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 668, 669, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 694, 695, 696, 698, 699, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 723, 725, 727, 728, 730, 731, 732, 734, 735, 736, 737, 741, 753, 757, 760, 762, 763, 764, 765, 766, 767, 772, 773, 774, 785, 786, 792, 793, 794, 795, 796, 810, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 847, 848, 851, 852, 853, 856, 857, 859, 860, 863, 869, 872, 873, 874, 876, 877, 878, 881, 882, 883, 886, 887, 888, 891, 893, 895, 896, 899, 900, 901, 903, 904, 910, 911, 914, 915, 919, 920, 924, 925, 926, 929, 935, 936, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1026, 1027, 1029, 1032, 1036, 1037, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1088, 1089, 1090, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1177], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 154, 155, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 240, 241, 242, 243, 246, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 281, 284, 286, 288, 289, 290, 291, 294, 296, 298, 299, 300, 307, 308, 311, 314, 317, 325, 328, 331, 334, 336, 339, 341, 344, 346, 349, 352, 355, 361, 367, 373, 374, 377, 382, 386, 388, 392, 393, 397, 402, 403, 405, 406, 407, 408, 411, 412, 413, 416, 417, 418, 420, 421, 422, 423, 426, 427, 428, 430, 431, 432, 433, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 622, 623, 624, 625, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 663, 664, 665, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 685, 686, 687, 689, 690, 691, 694, 695, 696, 698, 699, 701, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 725, 727, 728, 729, 730, 731, 732, 734, 735, 737, 740, 741, 742, 744, 745, 746, 751, 753, 757, 760, 762, 763, 765, 766, 767, 769, 771, 772, 773, 774, 776, 778, 779, 780, 781, 783, 788, 790, 792, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 874, 876, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 958, 959, 960, 961, 962, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 989, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1038, 1039, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1147, 1149, 1166, 1174, 1177], "2": [0, 4, 18, 19, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 123, 125, 128, 131, 136, 137, 139, 140, 141, 142, 154, 165, 171, 172, 173, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 189, 196, 197, 198, 199, 200, 203, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 308, 311, 314, 317, 341, 344, 367, 373, 374, 377, 379, 382, 384, 386, 390, 393, 397, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 578, 579, 580, 581, 582, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 694, 695, 698, 699, 701, 704, 711, 714, 715, 716, 717, 718, 719, 735, 737, 753, 760, 774, 776, 777, 778, 779, 780, 792, 793, 794, 795, 796, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 849, 850, 851, 852, 860, 863, 865, 868, 869, 872, 878, 881, 888, 891, 893, 895, 896, 899, 910, 914, 915, 919, 920, 921, 922, 923, 924, 925, 929, 935, 936, 937, 938, 939, 945, 946, 947, 948, 949, 950, 951, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1117, 1120, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "0": [0, 4, 19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 123, 125, 126, 137, 139, 140, 141, 142, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 218, 219, 220, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 296, 298, 299, 300, 308, 311, 314, 317, 325, 328, 341, 344, 367, 370, 373, 374, 377, 379, 382, 386, 389, 390, 391, 392, 398, 400, 402, 403, 404, 406, 407, 408, 411, 413, 416, 418, 421, 422, 423, 426, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 446, 448, 451, 458, 461, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 563, 566, 568, 571, 578, 581, 608, 609, 610, 613, 615, 618, 620, 623, 630, 633, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 681, 685, 686, 687, 688, 689, 690, 691, 694, 695, 698, 699, 701, 703, 704, 705, 711, 714, 715, 716, 717, 718, 719, 726, 735, 737, 741, 744, 745, 753, 760, 762, 763, 764, 765, 766, 767, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 815, 816, 818, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 849, 850, 851, 852, 860, 863, 910, 914, 915, 919, 920, 924, 925, 926, 927, 928, 929, 935, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 982, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1018, 1020, 1026, 1029, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189], "print": [0, 4, 5, 6, 12, 18, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 123, 125, 131, 137, 139, 140, 141, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 266, 268, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 308, 311, 319, 320, 322, 323, 341, 344, 366, 367, 374, 377, 382, 383, 384, 385, 386, 388, 391, 398, 399, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 508, 511, 513, 514, 515, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 716, 717, 718, 719, 723, 742, 753, 760, 762, 763, 764, 765, 766, 767, 774, 776, 777, 779, 780, 792, 793, 794, 795, 796, 814, 815, 816, 818, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 860, 863, 888, 891, 910, 914, 915, 919, 920, 924, 925, 929, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 975, 978, 979, 982, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1117, 1120, 1121, 1124, 1125, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 313, 314, 317, 319, 320, 322, 323, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 864, 865, 868, 869, 872, 874, 876, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 916, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1147, 1149, 1152, 1153, 1154, 1182, 1185, 1187], "py": [0, 4, 5, 19, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 135, 137, 139, 141, 142, 1050, 1051, 1055, 1182, 1183, 1184, 1185, 1187], "noqa": [0, 4, 5, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 418, 421, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 660, 663, 665, 668, 675, 679, 680, 832, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1100, 1105, 1108], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 153, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 221, 224, 227, 229, 231, 235, 236, 256, 258, 260, 261, 263, 265, 274, 279, 280, 281, 284, 286, 288, 290, 296, 298, 300, 301, 313, 319, 320, 322, 323, 330, 336, 339, 346, 349, 351, 360, 361, 366, 367, 370, 371, 372, 373, 379, 380, 381, 382, 386, 387, 388, 389, 390, 391, 392, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 694, 697, 698, 706, 707, 713, 715, 716, 717, 718, 719, 730, 731, 732, 734, 735, 736, 737, 739, 744, 745, 747, 748, 750, 755, 756, 759, 761, 762, 763, 765, 773, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 792, 794, 796, 797, 799, 801, 803, 805, 807, 810, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 998, 1000, 1001, 1014, 1017, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1058, 1060, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1155, 1156, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186], "set_backend": [0, 4, 5, 12, 127, 128, 129, 132, 274, 319, 320, 322, 323, 367, 389, 390, 1144], "ha": [0, 4, 5, 14, 15, 16, 19, 63, 64, 76, 77, 108, 109, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 135, 137, 139, 141, 142, 153, 154, 204, 238, 241, 367, 373, 402, 403, 406, 610, 613, 630, 633, 774, 814, 832, 865, 868, 901, 903, 905, 908, 910, 914, 925, 929, 961, 975, 978, 1002, 1005, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1100, 1109, 1112, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "over": [0, 4, 14, 16, 18, 69, 70, 71, 72, 76, 77, 96, 97, 114, 115, 116, 117, 122, 123, 125, 128, 134, 139, 154, 832, 869, 872, 920, 924, 930, 934, 935, 939, 1044, 1045, 1048, 1050, 1056, 1059, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1180, 1181], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 69, 70, 71, 72, 76, 77, 86, 87, 88, 89, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 243, 246, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 367, 393, 397, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 498, 499, 500, 501, 502, 513, 516, 518, 521, 533, 536, 543, 546, 558, 561, 608, 609, 620, 621, 622, 623, 624, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 687, 688, 689, 690, 691, 707, 708, 709, 710, 711, 714, 727, 734, 735, 736, 755, 756, 774, 785, 786, 815, 818, 822, 825, 829, 831, 832, 833, 836, 848, 851, 961, 996, 999, 1022, 1023, 1024, 1025, 1026, 1029, 1032, 1036, 1042, 1043, 1044, 1045, 1048, 1050, 1056, 1059, 1068, 1074, 1078, 1100, 1105, 1108, 1133, 1134, 1137, 1143, 1144], "pass": [0, 4, 20, 71, 72, 73, 76, 77, 78, 79, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 139, 154, 274, 301, 367, 392, 402, 438, 441, 686, 697, 732, 774, 813, 860, 864, 915, 916, 1022, 1023, 1024, 1155, 1156, 1178, 1179, 1182, 1186, 1188, 1189], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 45, 46, 90, 91, 120, 121, 125, 126, 128, 132, 133, 134, 137, 139, 142, 154, 774, 792, 793, 794, 795, 796, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1144], "get_backend": [0, 127, 128], "specifi": [0, 5, 35, 36, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 96, 97, 98, 99, 100, 101, 104, 105, 114, 115, 118, 120, 125, 126, 127, 132, 133, 134, 137, 140, 141, 142, 171, 173, 175, 204, 205, 206, 212, 226, 232, 233, 235, 236, 248, 249, 256, 258, 260, 261, 263, 265, 266, 268, 274, 281, 284, 291, 294, 367, 382, 386, 388, 391, 392, 393, 397, 402, 635, 638, 686, 692, 704, 714, 715, 718, 727, 772, 832, 848, 851, 869, 872, 920, 924, 925, 929, 930, 934, 935, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 967, 970, 971, 974, 979, 982, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1018, 1021, 1026, 1031, 1033, 1034, 1040, 1041, 1042, 1043, 1050, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1100, 1101, 1104, 1117, 1120, 1125, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "isn": [0, 5, 19, 140, 154], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 71, 72, 116, 117, 123, 125, 132, 137, 139, 140, 141, 142, 154, 686, 695, 815, 828, 829], "associ": [0, 5, 19, 125, 127, 129, 154, 402, 418, 421, 610, 613, 832, 878, 881, 893, 895, 940, 944], "option": [0, 5, 18, 19, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 142, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 288, 290, 291, 294, 296, 298, 300, 301, 302, 303, 304, 306, 307, 330, 366, 367, 373, 390, 391, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 698, 699, 701, 704, 705, 706, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 728, 739, 741, 744, 745, 755, 756, 762, 763, 765, 774, 792, 794, 796, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1032, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1067, 1068, 1074, 1075, 1077, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1182, 1183, 1184, 1186], "str": [0, 5, 29, 31, 32, 49, 50, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 132, 133, 135, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 227, 229, 231, 238, 241, 274, 279, 286, 288, 290, 296, 298, 300, 301, 302, 303, 304, 313, 314, 317, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 357, 358, 359, 360, 366, 367, 370, 392, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 706, 708, 709, 710, 715, 717, 719, 739, 744, 745, 762, 763, 765, 792, 794, 796, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 832, 833, 835, 837, 896, 899, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1022, 1023, 1024, 1025, 1026, 1032, 1042, 1045, 1047, 1052, 1054, 1056, 1058, 1060, 1074, 1075, 1077, 1100, 1101, 1104, 1134, 1136, 1138, 1139, 1141, 1143], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 153, 154, 774, 785, 786, 1144, 1150], "want": [0, 5, 15, 17, 18, 19, 71, 72, 116, 117, 125, 140, 141, 142, 154], "retriev": [0, 5, 19, 686, 692], "i": [0, 5, 19, 21, 118, 125, 137, 140, 142, 204, 205, 206, 238, 241, 402, 403, 406, 438, 441, 458, 461, 468, 471, 478, 481, 518, 521, 523, 526, 538, 541, 608, 609, 615, 618, 630, 633, 635, 638, 686, 694, 695, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 822, 825, 832, 838, 841, 865, 868, 878, 881, 893, 895, 905, 908, 910, 914, 925, 929, 935, 939, 961, 1006, 1009, 1026, 1029, 1042, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132], "e": [0, 5, 15, 16, 17, 19, 21, 59, 60, 104, 105, 118, 125, 131, 140, 154, 203, 204, 238, 241, 274, 280, 352, 355, 367, 370, 402, 403, 406, 438, 441, 458, 461, 468, 471, 478, 481, 508, 511, 518, 521, 523, 526, 538, 541, 563, 566, 573, 576, 608, 609, 615, 618, 630, 633, 635, 638, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 832, 838, 841, 860, 864, 865, 868, 878, 881, 893, 895, 905, 908, 910, 914, 915, 916, 935, 939, 961, 1006, 1009, 1026, 1029, 1042, 1043, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 63, 64, 76, 77, 86, 87, 88, 89, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 120, 123, 125, 126, 127, 130, 131, 132, 134, 135, 136, 139, 140, 142, 154, 204, 205, 206, 238, 241, 274, 286, 289, 296, 299, 367, 392, 402, 418, 422, 463, 467, 608, 609, 686, 687, 689, 690, 691, 715, 719, 738, 741, 744, 745, 762, 763, 765, 832, 833, 837, 865, 868, 869, 872, 888, 891, 896, 899, 930, 934, 935, 939, 961, 962, 966, 975, 978, 979, 982, 996, 999, 1000, 1002, 1005, 1044, 1045, 1047, 1048, 1049, 1052, 1054, 1063, 1064, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1100, 1101, 1104, 1144], "default": [0, 5, 19, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 122, 123, 125, 126, 127, 128, 131, 132, 133, 141, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 288, 290, 291, 294, 296, 298, 300, 302, 303, 304, 306, 307, 308, 311, 357, 360, 365, 367, 373, 374, 377, 384, 387, 388, 389, 390, 391, 392, 393, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 698, 699, 701, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 737, 738, 739, 741, 743, 744, 745, 750, 753, 755, 756, 762, 763, 765, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1155, 1156, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "torch": [0, 5, 12, 19, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 201, 202, 274, 319, 320, 322, 323, 341, 344, 367, 389, 390, 832, 915, 919, 961, 975, 978, 1002, 1005, 1144], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 120, 121, 125, 126, 132, 133, 134, 137, 142, 154, 1144], "mxnet": [0, 5, 15, 20, 132, 133, 134, 137, 142, 1144], "either": [0, 5, 12, 18, 19, 21, 41, 42, 76, 77, 86, 87, 122, 123, 125, 127, 128, 131, 132, 133, 137, 139, 140, 154, 204, 221, 224, 402, 418, 421, 438, 441, 543, 544, 545, 546, 547, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 635, 638, 645, 648, 650, 653, 675, 679, 686, 707, 734, 738, 739, 832, 860, 864, 865, 868, 915, 916, 1022, 1023, 1024, 1025, 1100, 1117, 1120, 1125, 1128, 1166, 1177, 1178, 1179], "doesn": [0, 5, 18, 21, 123, 125, 132, 137, 154], "matter": [0, 5, 14, 123], "been": [0, 5, 19, 120, 122, 125, 127, 128, 131, 132, 133, 135, 137, 153, 154, 367, 373, 686, 708, 709, 710, 1050, 1051], "ivy_np": [0, 5, 125], "us": [0, 5, 12, 15, 16, 17, 19, 20, 55, 56, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 153, 154, 165, 166, 168, 170, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 200, 203, 274, 313, 314, 317, 325, 328, 367, 383, 387, 390, 391, 392, 393, 397, 399, 401, 402, 423, 426, 448, 451, 463, 465, 473, 476, 488, 491, 533, 536, 558, 561, 615, 618, 620, 623, 660, 663, 686, 714, 722, 723, 738, 744, 745, 747, 748, 755, 756, 774, 776, 779, 781, 783, 797, 799, 801, 803, 815, 821, 827, 828, 830, 831, 832, 843, 846, 848, 851, 860, 864, 869, 872, 915, 916, 919, 945, 946, 949, 961, 975, 978, 979, 982, 987, 990, 992, 994, 996, 997, 998, 999, 1000, 1010, 1013, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1035, 1036, 1037, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1100, 1101, 1104, 1133, 1134, 1137, 1144, 1166, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 120, 123, 125, 127, 130, 134, 141], "call": [0, 6, 12, 15, 21, 73, 78, 79, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 367, 392, 686, 743, 750, 768, 774, 785, 786, 860, 864, 915, 916, 1026, 1027, 1032, 1036, 1037, 1166, 1177, 1178, 1179, 1182, 1186], "nativ": [0, 6, 29, 32, 33, 34, 35, 36, 76, 77, 125, 126, 132, 134, 139, 140, 204, 243, 244, 246, 274, 279, 280, 301, 307, 367, 370, 371, 372, 373, 374, 377, 387, 398, 401, 686, 732, 734, 737, 761, 1155, 1156], "native_arrai": [0, 6, 12, 35, 36, 37, 38, 41, 42, 43, 44, 80, 81, 86, 87, 88, 89, 125, 165, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 200, 204, 227, 230, 238, 241, 269, 273, 274, 286, 287, 289, 296, 299, 308, 311, 314, 317, 325, 328, 341, 344, 367, 386, 402, 403, 406, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 493, 494, 496, 498, 499, 501, 513, 516, 518, 521, 523, 524, 526, 533, 536, 543, 546, 558, 561, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 680, 686, 687, 688, 689, 690, 691, 695, 703, 704, 711, 714, 715, 718, 737, 760, 762, 763, 765, 766, 767, 774, 776, 779, 792, 795, 815, 818, 821, 822, 825, 831, 832, 838, 841, 843, 846, 848, 851, 915, 919, 920, 924, 945, 946, 949, 956, 959, 961, 962, 965, 975, 978, 979, 982, 987, 990, 992, 995, 996, 999, 1001, 1002, 1005, 1010, 1013, 1050, 1051, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1078, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1137], "1": [0, 6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 123, 125, 126, 127, 131, 134, 135, 136, 137, 139, 140, 141, 142, 154, 165, 166, 167, 168, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 197, 198, 199, 200, 204, 205, 206, 207, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 308, 311, 314, 317, 341, 344, 367, 373, 374, 377, 382, 385, 386, 393, 397, 402, 403, 404, 405, 406, 408, 411, 413, 416, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 508, 511, 513, 514, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 608, 609, 615, 618, 620, 623, 630, 633, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 716, 717, 718, 719, 735, 737, 741, 744, 745, 753, 756, 760, 762, 763, 764, 765, 766, 767, 772, 774, 776, 777, 778, 779, 780, 792, 794, 795, 796, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 848, 849, 850, 851, 852, 860, 863, 878, 881, 888, 891, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 931, 932, 933, 934, 935, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1009, 1010, 1013, 1026, 1029, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1104, 1105, 1108, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 133, 134, 135, 137, 139, 140, 142, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 697, 698, 699, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 727, 728, 730, 731, 732, 734, 735, 736, 737, 741, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 765, 766, 767, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 784, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 805, 806, 807, 808, 810, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1037, 1038, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "ndarrai": [0, 6, 35, 36, 120, 121, 130, 132, 133, 134, 139, 204, 208, 209, 210, 243, 246, 686, 762, 766], "Or": [0, 6, 140], "jaxlib": [0, 6, 18, 120, 121, 132, 133, 139], "xla_extens": [0, 6, 120, 121, 132, 133, 139], "devicearrai": [0, 6, 139], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 125, 131, 134, 135, 140, 141, 142, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 274, 281, 283, 284, 285, 286, 288, 290, 291, 293, 295, 296, 297, 298, 299, 300, 303, 305, 308, 309, 310, 311, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 346, 348, 349, 350, 352, 354, 356, 366, 367, 373, 374, 375, 376, 377, 378, 383, 384, 387, 392, 399, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 623, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 699, 700, 704, 707, 711, 713, 715, 717, 719, 721, 724, 725, 732, 734, 735, 737, 738, 746, 749, 751, 753, 754, 762, 763, 765, 769, 770, 771, 772, 774, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 814, 832, 833, 834, 835, 836, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 865, 867, 869, 870, 871, 872, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 913, 914, 915, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 937, 938, 939, 940, 941, 943, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 993, 994, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1036, 1037, 1038, 1039, 1045, 1047, 1049, 1050, 1051, 1056, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1155, 1156, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 128], "unset": [0, 12, 128, 137, 139], "adjust": [0, 12, 1100, 1121, 1124, 1129, 1132], "dict": [0, 12, 29, 31, 32, 33, 34, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 126, 131, 135, 140, 141, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 367, 373, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 708, 709, 710, 715, 717, 719, 762, 763, 765, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1026, 1028, 1029, 1032, 1035, 1038, 1039, 1042, 1043, 1045, 1047, 1052, 1054, 1056, 1058, 1060, 1074, 1075, 1077, 1134, 1136, 1138, 1139, 1141, 1143], "previous": [0, 12, 18, 21, 125, 127, 137, 686, 697], "otherwis": [0, 12, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 45, 46, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 125, 130, 131, 132, 133, 137, 139, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 205, 206, 227, 229, 231, 274, 281, 284, 286, 288, 290, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 331, 334, 341, 344, 367, 373, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 696, 715, 717, 719, 762, 763, 765, 768, 774, 792, 793, 794, 795, 796, 810, 832, 833, 834, 835, 836, 837, 843, 846, 930, 934, 935, 939, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 992, 993, 994, 995, 996, 998, 1000, 1022, 1023, 1024, 1026, 1039, 1045, 1047, 1049, 1056, 1058, 1060, 1063, 1064, 1065, 1067, 1074, 1075, 1077, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "implement": [0, 12, 20, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 274, 281, 284, 352, 355, 367, 393, 397, 402, 403, 406, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 610, 613, 630, 633, 635, 638, 650, 653, 655, 658, 675, 679, 680, 832, 853, 856, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1144], "wa": [0, 12, 15, 19, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 123, 137, 139, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 715, 717, 719, 762, 763, 765, 768, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1026, 1039, 1045, 1047, 1049, 1056, 1058, 1060, 1074, 1075, 1077, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "last": [0, 12, 16, 19, 53, 54, 69, 70, 76, 77, 98, 99, 114, 115, 123, 125, 128, 135, 154, 165, 186, 189, 367, 373, 774, 814, 815, 829, 832, 838, 841, 848, 851, 869, 872, 925, 929, 930, 934, 945, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 979, 982, 996, 999, 1001, 1006, 1009, 1089, 1090, 1093, 1095, 1098, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1176], "henc": [0, 12, 125, 131, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "here": [0, 12, 18, 19, 20, 119, 120, 121, 123, 125, 126, 131, 137, 138, 139, 140, 141, 142, 153, 154], "tensor": [0, 12, 14, 76, 77, 119, 120, 121, 126, 127, 128, 130, 132, 133, 134, 137, 139, 140, 141, 142, 154, 204, 232, 233, 235, 236, 274, 308, 311, 402, 448, 451, 608, 609, 686, 741, 744, 745, 815, 827, 829, 832, 920, 924, 961, 975, 978, 1001, 1050, 1051, 1063, 1066, 1144, 1166, 1174, 1176], "howev": [0, 12, 15, 18, 20, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 139, 140, 141, 142, 154], "befor": [0, 12, 18, 19, 20, 76, 77, 122, 125, 130, 132, 133, 134, 137, 140, 154, 367, 392, 402, 681, 685, 815, 830, 831, 1022, 1023, 1024, 1026, 1038, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1117, 1120, 1125, 1128], "becom": [0, 12, 14, 16, 19, 123, 131, 137, 142, 154, 961, 962, 965], "swap": [0, 12, 961, 1010, 1013], "python": [0, 12, 13, 14, 15, 18, 19, 21, 125, 135, 137, 139, 140, 154, 204, 205, 206, 367, 387, 401, 402, 635, 638, 860, 864, 915, 916, 1144, 1150], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 133, 136, 139, 142, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192], "op": [0, 12, 119, 137, 154], "eagertensor": [0, 12], "def": [1, 20, 119, 120, 121, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 275, 276, 277, 278, 368, 775, 860, 864, 915, 916, 1144, 1158, 1161, 1164], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1148, 1149, 1150, 1153, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 32, 34, 76, 77, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 142, 274, 319, 320, 322, 323, 330, 366, 367, 380, 381, 383, 385, 399, 686, 729, 732, 733, 739, 761, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 813, 1144, 1150, 1155, 1156, 1182, 1183, 1184, 1185, 1186, 1187], "ml": [13, 15, 16, 17, 136, 137, 138, 140, 141, 142, 153, 1144, 1150], "explos": [13, 15, 1144], "A": [13, 14, 15, 16, 21, 35, 36, 37, 38, 69, 70, 73, 76, 77, 78, 79, 82, 83, 100, 101, 114, 115, 118, 125, 127, 131, 132, 133, 137, 140, 154, 204, 218, 219, 243, 244, 246, 274, 286, 287, 288, 289, 290, 367, 392, 402, 625, 628, 686, 723, 760, 832, 860, 864, 888, 891, 901, 903, 905, 908, 910, 914, 915, 916, 961, 962, 964, 966, 1001, 1006, 1009, 1026, 1027, 1029, 1031, 1033, 1034, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1100, 1101, 1104, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1188, 1189], "huge": [13, 15, 140, 1144], "number": [13, 14, 18, 23, 26, 27, 37, 38, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 82, 83, 100, 101, 108, 109, 114, 115, 123, 125, 131, 133, 134, 137, 140, 142, 201, 202, 203, 204, 205, 206, 208, 210, 218, 219, 232, 233, 235, 236, 238, 241, 243, 246, 274, 286, 287, 288, 289, 290, 307, 313, 314, 317, 325, 328, 331, 334, 336, 339, 341, 344, 346, 349, 352, 355, 367, 384, 385, 386, 402, 418, 421, 438, 441, 478, 481, 518, 521, 523, 526, 608, 610, 613, 630, 633, 635, 638, 640, 643, 645, 648, 681, 685, 686, 687, 690, 713, 723, 725, 740, 767, 773, 815, 830, 832, 848, 851, 853, 856, 878, 881, 901, 903, 910, 914, 930, 934, 961, 962, 963, 964, 965, 966, 971, 974, 983, 986, 987, 990, 996, 997, 998, 999, 1000, 1001, 1006, 1009, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1050, 1051, 1061, 1063, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "tool": [13, 16, 19, 138, 142, 153, 154, 1144], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 153, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 314, 317, 367, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 792, 793, 794, 795, 796, 810, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "explod": [13, 14, 1144], "onto": [13, 14, 1026, 1032, 1038, 1144], "scene": [13, 14, 118, 136, 138, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1144], "b": [13, 16, 17, 23, 26, 27, 41, 42, 73, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 123, 127, 128, 131, 136, 137, 138, 140, 141, 142, 152, 196, 197, 199, 204, 227, 229, 230, 231, 269, 273, 274, 286, 288, 289, 290, 296, 298, 299, 300, 308, 311, 341, 344, 402, 403, 405, 406, 407, 418, 420, 421, 422, 423, 426, 428, 430, 431, 432, 438, 440, 441, 442, 448, 451, 463, 465, 466, 467, 473, 476, 478, 480, 481, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 513, 515, 516, 518, 520, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 687, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 717, 718, 719, 762, 763, 765, 766, 767, 774, 776, 778, 779, 780, 792, 794, 795, 796, 815, 818, 821, 822, 824, 825, 826, 831, 832, 833, 835, 836, 837, 838, 841, 843, 846, 848, 851, 888, 891, 905, 908, 915, 919, 920, 924, 940, 944, 945, 946, 948, 949, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 965, 966, 975, 978, 979, 982, 987, 989, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1002, 1004, 1005, 1006, 1009, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1063, 1065, 1066, 1067, 1068, 1074, 1075, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1143, 1144, 1150], "why": [13, 15, 19, 120, 131, 134, 139, 1144], "unifi": [13, 15, 76, 77, 130, 137, 154, 367, 392, 1144], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 35, 36, 41, 42, 51, 52, 55, 56, 73, 74, 75, 76, 77, 78, 79, 86, 87, 96, 97, 100, 101, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 186, 188, 190, 196, 197, 198, 199, 201, 202, 204, 238, 241, 256, 258, 260, 261, 263, 265, 274, 291, 294, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 623, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 697, 732, 741, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 860, 863, 865, 868, 878, 881, 888, 891, 893, 895, 896, 899, 905, 908, 910, 914, 920, 924, 925, 929, 930, 934, 935, 939, 961, 992, 993, 994, 995, 1050, 1062, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1144], "them": [13, 14, 15, 16, 118, 125, 128, 130, 131, 137, 139, 140, 141, 154, 1144], "c": [13, 15, 16, 17, 45, 46, 86, 87, 90, 91, 104, 105, 118, 123, 127, 131, 136, 137, 138, 140, 154, 274, 314, 317, 325, 328, 402, 620, 623, 645, 647, 648, 686, 694, 695, 703, 767, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 821, 860, 864, 915, 916, 961, 1006, 1009, 1026, 1029, 1042, 1043, 1052, 1054, 1063, 1066, 1100, 1101, 1104, 1121, 1124, 1129, 1132, 1144, 1150], "standard": [13, 57, 58, 102, 103, 118, 119, 120, 122, 124, 125, 130, 134, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 832, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1055, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1121, 1124, 1129, 1132, 1133, 1134, 1137, 1144, 1150, 1180, 1181], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 142, 154, 367, 392, 686, 708, 832, 920, 924, 961, 996, 999, 1063, 1067, 1144], "collabor": [13, 14, 15, 1144], "consortium": [13, 15, 1144, 1150], "data": [13, 15, 23, 26, 27, 28, 35, 36, 38, 41, 42, 45, 46, 51, 52, 55, 56, 59, 60, 63, 64, 69, 70, 73, 76, 77, 78, 79, 80, 81, 83, 86, 87, 90, 91, 96, 97, 100, 101, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 127, 129, 131, 133, 134, 139, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 279, 280, 281, 284, 291, 294, 296, 297, 298, 299, 300, 301, 308, 311, 313, 314, 317, 319, 320, 322, 323, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 357, 361, 366, 367, 370, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 694, 695, 734, 735, 737, 757, 774, 792, 793, 794, 795, 796, 813, 815, 828, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 905, 908, 910, 914, 920, 924, 925, 929, 930, 934, 935, 939, 961, 975, 978, 979, 982, 983, 986, 992, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1050, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1075, 1076, 1077, 1089, 1090, 1093, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1150, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "api": [13, 14, 18, 19, 118, 120, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 832, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137, 1144, 1150], "open": [14, 15, 16, 17, 18, 21, 104, 105, 122, 153, 204, 205, 206, 1050, 1052, 1053, 1054, 1056, 1059, 1144], "project": [14, 15, 16, 18, 19, 21, 119, 125, 128, 139, 141, 153, 154, 1050, 1051, 1055, 1182, 1183, 1184, 1185, 1187], "grown": 14, "consider": [14, 120, 123], "recent": [14, 15, 18, 19, 125], "year": [14, 16, 154, 1144], "especi": [14, 18], "deep": [14, 17, 19, 20, 76, 77, 131, 136, 140, 1144], "learn": [14, 15, 18, 20, 118, 127, 136, 142, 153, 402, 528, 531, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1022, 1023, 1024, 1025, 1144, 1182, 1183, 1184, 1185, 1186, 1187], "can": [14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 55, 56, 59, 60, 82, 83, 100, 101, 104, 105, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 204, 208, 209, 210, 243, 246, 274, 296, 297, 298, 299, 300, 367, 390, 391, 392, 832, 860, 863, 864, 915, 916, 961, 992, 993, 994, 995, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1144, 1150], "seen": [14, 15, 123, 125, 139, 140], "rapidli": 14, "increas": [14, 961, 971, 974, 1018, 1021, 1026, 1038], "github": [14, 19, 20, 122, 125], "repo": [14, 15, 16, 18, 19, 124, 137, 139, 140, 141, 142, 153, 1144, 1150], "contain": [14, 18, 20, 21, 23, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 125, 127, 132, 134, 136, 137, 138, 141, 142, 154, 165, 166, 171, 176, 179, 181, 184, 186, 191, 194, 196, 198, 204, 205, 206, 208, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 243, 248, 249, 251, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 273, 274, 281, 286, 287, 289, 291, 296, 299, 303, 308, 311, 314, 317, 319, 322, 325, 328, 331, 334, 336, 341, 344, 346, 352, 367, 374, 382, 386, 393, 402, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 508, 509, 511, 513, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 672, 674, 675, 677, 679, 680, 681, 683, 685, 686, 687, 690, 692, 695, 698, 699, 701, 703, 704, 711, 714, 715, 718, 724, 727, 736, 749, 760, 762, 766, 767, 770, 774, 776, 779, 781, 785, 788, 792, 795, 797, 801, 805, 815, 818, 821, 822, 825, 831, 832, 833, 834, 836, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 874, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 945, 946, 947, 949, 951, 952, 954, 956, 957, 959, 961, 962, 963, 965, 967, 971, 975, 978, 979, 982, 983, 986, 987, 990, 992, 995, 996, 999, 1001, 1002, 1005, 1006, 1010, 1013, 1014, 1018, 1022, 1023, 1024, 1025, 1026, 1039, 1042, 1044, 1045, 1048, 1050, 1051, 1052, 1055, 1056, 1059, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1076, 1078, 1079, 1084, 1088, 1089, 1090, 1093, 1095, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1137, 1139, 1140, 1142, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "term": [14, 19, 131, 815, 829, 1166, 1176], "time": [14, 15, 16, 18, 19, 20, 63, 64, 108, 109, 120, 121, 125, 127, 131, 132, 137, 140, 142, 154, 774, 781, 783, 797, 799, 815, 829, 961, 1014, 1017, 1022, 1023, 1024, 1025, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1166, 1177, 1178, 1179], "These": [14, 15, 16, 19, 120, 122, 123, 125, 126, 127, 131, 132, 134, 137, 138, 140, 141, 142, 154, 832, 853, 856, 1144, 1150], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 41, 42, 43, 44, 55, 56, 59, 60, 73, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 96, 97, 100, 101, 104, 105, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 155, 163, 204, 205, 206, 227, 229, 231, 367, 382, 386, 388, 392, 402, 483, 484, 485, 486, 487, 593, 596, 598, 601, 640, 643, 650, 651, 652, 653, 654, 675, 676, 677, 678, 679, 686, 687, 688, 689, 690, 691, 694, 695, 696, 720, 724, 728, 729, 733, 740, 742, 749, 757, 770, 774, 814, 815, 828, 832, 838, 841, 860, 864, 865, 868, 869, 872, 878, 881, 893, 895, 910, 914, 915, 916, 919, 930, 934, 961, 962, 963, 964, 965, 966, 979, 982, 996, 997, 998, 999, 1000, 1026, 1028, 1032, 1038, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1144, 1188, 1189], "written": [14, 18, 119, 120, 122, 125, 126, 130, 134, 137, 139, 142, 154], "mani": [14, 15, 16, 18, 19, 20, 76, 77, 120, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 154, 961, 1001], "differ": [14, 15, 16, 18, 19, 41, 42, 73, 76, 77, 78, 79, 118, 119, 120, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 154, 274, 314, 317, 402, 418, 421, 610, 613, 670, 672, 674, 815, 828, 961, 1006, 1009, 1100, 1117, 1120, 1125, 1128, 1144], "while": [14, 15, 18, 19, 73, 76, 77, 78, 79, 123, 125, 128, 134, 135, 141, 142, 154, 402, 593, 596, 598, 601, 1068, 1069, 1073, 1100, 1109, 1112], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 286, 287, 288, 290, 296, 297, 298, 299, 300, 314, 317, 325, 328, 331, 334, 341, 344, 367, 374, 375, 376, 378, 387, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 713, 714, 715, 716, 717, 719, 732, 743, 750, 762, 763, 764, 765, 774, 776, 777, 778, 780, 781, 783, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 813, 814, 815, 818, 822, 823, 824, 825, 826, 828, 831, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 860, 864, 869, 872, 901, 903, 915, 916, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 964, 966, 975, 978, 979, 982, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1006, 1009, 1026, 1032, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1063, 1064, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1100, 1105, 1108, 1109, 1112, 1121, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1150, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187], "wonder": [14, 16, 139], "thing": [14, 15, 16, 18, 19, 20, 125, 128, 139, 140], "research": [14, 153], "develop": [14, 15, 16, 17, 18, 19, 20, 153, 154, 1144], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 286, 287, 288, 290, 296, 297, 298, 299, 300, 331, 334, 341, 344, 374, 375, 376, 378, 393, 394, 395, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 714, 715, 716, 717, 719, 732, 762, 763, 764, 765, 774, 776, 777, 778, 780, 781, 783, 792, 793, 794, 796, 815, 818, 822, 823, 824, 825, 826, 828, 831, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 964, 966, 975, 978, 979, 982, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1166, 1176], "consid": [14, 15, 76, 77, 96, 97, 119, 127, 138, 139, 140, 402, 593, 596, 598, 601, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "speed": [14, 125], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 41, 42, 73, 76, 77, 78, 79, 90, 91, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 154, 165, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 200, 367, 393, 397, 402, 473, 476, 635, 636, 665, 668, 774, 776, 778, 779, 780, 814, 815, 821, 822, 825, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1144, 1150], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 23, 26, 27, 126, 137, 142, 152, 154, 367, 393, 397, 402, 513, 516, 593, 596, 598, 601, 832, 853, 856, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1144], "outdat": 14, "month": 14, "rigor": [14, 125], "maintain": [14, 19, 1089, 1090, 1093, 1095, 1098], "against": [14, 37, 38, 76, 77, 82, 83, 96, 97, 125, 154, 274, 286, 287, 288, 289, 832, 865, 868, 869, 872, 878, 881, 893, 895, 1063, 1064], "newest": 14, "version": [14, 15, 16, 18, 19, 122, 126, 132, 137, 139, 832, 853, 856, 1144], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 45, 46, 90, 91, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 204, 205, 206, 238, 241, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 774, 792, 793, 794, 795, 796, 813, 832, 860, 864, 910, 914, 915, 916, 925, 929, 961, 962, 965, 1006, 1009, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1113, 1116, 1125, 1128, 1155, 1156], "softwar": [14, 15, 18, 19], "pipelin": [14, 130, 142], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 35, 36, 55, 56, 59, 60, 69, 70, 73, 76, 77, 78, 79, 100, 101, 104, 105, 114, 115, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 154, 204, 226, 227, 228, 230, 238, 241, 402, 438, 441, 508, 511, 573, 576, 610, 613, 630, 633, 686, 728, 732, 741, 774, 814, 832, 853, 856, 878, 881, 893, 895, 896, 899, 910, 914, 915, 919, 925, 929, 930, 934, 961, 962, 963, 964, 965, 966, 971, 974, 975, 978, 983, 986, 1006, 1009, 1018, 1021, 1026, 1027, 1037, 1050, 1051, 1056, 1057, 1058, 1059, 1060, 1063, 1066, 1100, 1121, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 142], "signific": [14, 15, 154], "bottleneck": 14, "As": [14, 19, 71, 72, 116, 117, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 154, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 43, 44, 55, 56, 57, 58, 76, 77, 82, 83, 88, 89, 100, 101, 102, 103, 118, 119, 122, 123, 125, 129, 131, 132, 134, 136, 139, 142, 153, 204, 212, 221, 224, 226, 227, 230, 248, 249, 251, 254, 266, 268, 269, 273, 274, 361, 402, 443, 446, 573, 576, 625, 628, 686, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 744, 745, 747, 748, 755, 756, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 961, 975, 978, 992, 993, 994, 995, 1006, 1009, 1026, 1031, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1144, 1155, 1156, 1166, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "futur": [14, 16, 18, 19, 139, 154, 832, 853, 856], "avail": [14, 18, 19, 76, 77, 122, 126, 133, 154, 367, 373, 383, 384, 385, 399, 686, 709], "specif": [14, 20, 76, 77, 118, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 153, 154, 274, 352, 355, 367, 390, 393, 397, 402, 593, 596, 598, 601, 686, 708, 709, 710, 739, 832, 853, 856, 920, 924, 961, 1006, 1009, 1022, 1023, 1024, 1025, 1050, 1051, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1144, 1147, 1149, 1150, 1178, 1179], "quickli": [14, 16, 18, 19, 140, 141], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 125, 126, 128, 131, 134, 136, 154, 1166, 1177, 1178, 1179], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 71, 72, 116, 117, 123, 125, 126, 131, 135, 136, 139, 140, 141, 142, 154, 1144], "desir": [14, 37, 38, 76, 77, 82, 83, 126, 274, 281, 284, 296, 297, 298, 299, 300, 367, 393, 397, 686, 728, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "provid": [14, 18, 19, 69, 70, 76, 77, 114, 115, 120, 122, 123, 125, 127, 130, 131, 132, 133, 134, 137, 141, 153, 154, 201, 202, 204, 238, 241, 274, 302, 303, 304, 306, 307, 330, 352, 355, 366, 367, 373, 686, 707, 741, 745, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 832, 930, 934, 961, 979, 982, 1006, 1009, 1063, 1064, 1100, 1121, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1182, 1183, 1184, 1185, 1186, 1187], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 43, 44, 55, 56, 59, 60, 69, 70, 71, 72, 76, 77, 88, 89, 96, 97, 100, 101, 104, 105, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 155, 163, 201, 202, 204, 205, 206, 256, 258, 260, 261, 263, 265, 367, 382, 388, 686, 687, 690, 694, 695, 720, 742, 762, 763, 764, 765, 766, 815, 829, 832, 905, 908, 920, 924, 935, 939, 961, 979, 982, 996, 997, 998, 999, 1000, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1037, 1038, 1039, 1050, 1051, 1056, 1057, 1058, 1059, 1060, 1133, 1138, 1144, 1147, 1149], "modern": [14, 15], "simpl": [14, 18, 19, 119, 122, 123, 125, 127, 130, 131, 132, 133, 134, 137, 139, 141, 142, 154, 686, 711], "scalabl": [14, 137], "manner": [14, 29, 33, 34, 76, 77, 119, 122, 125, 133, 140, 153, 154, 1026, 1038], "must": [14, 16, 18, 19, 20, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 127, 130, 131, 132, 133, 137, 141, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 367, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1182, 1186], "determin": [14, 23, 26, 27, 41, 42, 51, 52, 69, 70, 73, 76, 77, 78, 79, 86, 87, 96, 97, 114, 115, 122, 127, 131, 132, 133, 196, 197, 198, 199, 274, 296, 299, 301, 313, 330, 331, 334, 336, 339, 341, 344, 346, 349, 366, 367, 383, 384, 385, 399, 402, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 510, 511, 512, 513, 515, 516, 517, 523, 524, 525, 527, 538, 541, 543, 546, 548, 551, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 603, 606, 610, 611, 612, 613, 614, 630, 631, 632, 633, 634, 635, 636, 638, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 686, 687, 690, 694, 695, 727, 729, 733, 734, 735, 736, 737, 757, 773, 774, 792, 795, 815, 830, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 860, 863, 865, 868, 878, 881, 888, 891, 893, 895, 901, 903, 905, 908, 925, 929, 930, 934, 935, 939, 1022, 1023, 1024, 1025, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "exactli": [14, 16, 123, 131, 133, 1144, 1150], "common": [14, 20, 76, 77, 121, 123, 127, 129, 131, 133, 135, 154], "ground": [14, 125], "li": 14, "between": [14, 53, 54, 73, 76, 77, 78, 79, 98, 99, 120, 123, 125, 127, 130, 131, 136, 138, 139, 140, 142, 153, 204, 205, 206, 274, 314, 317, 402, 438, 441, 630, 633, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 975, 978, 1006, 1009, 1026, 1032, 1050, 1052, 1053, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1144, 1182, 1184], "find": [14, 18, 19, 76, 77, 125, 137, 140, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1144], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 55, 56, 73, 76, 77, 78, 79, 100, 101, 121, 122, 123, 124, 125, 127, 128, 129, 134, 137, 154, 686, 707, 961, 992, 993, 994, 995, 1182, 1186], "essenti": [14, 15, 20, 123, 127, 133], "order": [14, 18, 19, 21, 73, 76, 77, 78, 79, 96, 97, 120, 122, 123, 126, 128, 130, 131, 132, 133, 139, 140, 142, 154, 402, 438, 441, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 832, 853, 856, 869, 872, 910, 914, 915, 919, 935, 939, 961, 979, 982, 1022, 1023, 1024, 1063, 1066, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1188, 1189], "design": [14, 15, 118, 134, 137, 139, 154], "univers": 14, "abstract": [14, 131, 141, 154, 367, 369, 1182, 1186], "In": [14, 16, 18, 19, 55, 56, 100, 101, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 367, 387, 393, 397, 398, 401, 402, 418, 421, 610, 613, 635, 638, 686, 692, 732, 961, 992, 993, 994, 995, 1050, 1056, 1059, 1144], "search": [14, 18, 29, 33, 34, 62, 76, 77, 107, 119, 123, 125, 1064, 1065, 1066, 1067], "languag": [14, 16, 137], "first": [14, 15, 18, 19, 21, 23, 26, 27, 41, 42, 63, 64, 73, 78, 79, 86, 87, 108, 109, 120, 123, 125, 127, 130, 131, 137, 139, 140, 142, 201, 202, 204, 232, 233, 235, 236, 274, 351, 361, 367, 373, 402, 418, 419, 420, 421, 422, 438, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 498, 499, 501, 523, 526, 528, 529, 533, 534, 536, 553, 554, 556, 558, 559, 561, 583, 584, 586, 588, 589, 591, 598, 599, 601, 603, 604, 606, 610, 611, 613, 620, 621, 623, 630, 631, 633, 670, 671, 672, 673, 674, 686, 694, 774, 785, 786, 832, 838, 841, 848, 851, 853, 856, 860, 864, 865, 868, 888, 891, 896, 899, 910, 914, 915, 916, 920, 924, 930, 934, 961, 967, 970, 996, 999, 1006, 1009, 1010, 1013, 1022, 1023, 1024, 1025, 1026, 1027, 1036, 1037, 1050, 1062, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1166, 1177, 1178, 1179, 1182, 1186], "see": [14, 17, 18, 19, 20, 23, 26, 27, 41, 42, 69, 70, 73, 78, 79, 86, 87, 114, 115, 120, 124, 127, 131, 133, 139, 140, 153, 154, 204, 205, 206, 221, 224, 232, 233, 235, 236, 274, 291, 294, 352, 355, 402, 418, 419, 420, 421, 422, 438, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 502, 513, 516, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 553, 554, 555, 556, 557, 558, 559, 560, 562, 583, 584, 585, 586, 587, 588, 589, 590, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 832, 860, 864, 878, 881, 893, 895, 905, 908, 915, 916, 930, 934, 935, 939, 1063, 1065, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "clear": [14, 15, 16, 19, 20, 123, 132, 133, 137, 139, 367, 372], "front": [14, 136, 137, 140, 1144, 1150], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 121, 123, 125, 126, 127, 128, 131, 132, 133, 137, 139, 141, 142, 1144], "littl": [14, 139], "deeper": [14, 19, 118, 136, 1026, 1037, 1038], "follow": [14, 15, 18, 19, 20, 21, 76, 77, 119, 122, 123, 125, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 154, 274, 325, 328, 367, 392, 402, 635, 638, 686, 730, 731, 732, 755, 756, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 830, 831, 832, 896, 899, 935, 939, 1026, 1032, 1038, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1144, 1166, 1176, 1182, 1186], "same": [14, 16, 18, 19, 21, 29, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 63, 64, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 104, 105, 108, 109, 119, 120, 121, 123, 125, 126, 127, 130, 131, 133, 134, 135, 137, 139, 141, 142, 204, 205, 206, 213, 214, 216, 227, 228, 229, 230, 231, 238, 241, 251, 252, 254, 256, 258, 260, 261, 263, 265, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 367, 392, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 418, 421, 423, 424, 433, 434, 453, 454, 455, 456, 457, 463, 464, 465, 467, 478, 479, 480, 481, 482, 518, 519, 520, 521, 522, 610, 613, 615, 616, 617, 619, 625, 626, 627, 629, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 681, 682, 683, 684, 685, 686, 712, 714, 715, 716, 717, 718, 719, 741, 744, 745, 774, 792, 793, 794, 795, 796, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 883, 886, 893, 895, 896, 899, 905, 908, 910, 914, 925, 929, 930, 934, 961, 967, 970, 979, 982, 983, 986, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1022, 1023, 1024, 1026, 1039, 1050, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1125, 1128, 1129, 1132, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "core": [14, 18, 20, 133, 137, 142, 367, 384, 1144], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 49, 50, 73, 76, 77, 78, 79, 94, 95, 122, 123, 125, 126, 127, 130, 131, 133, 134, 140, 141, 204, 232, 233, 235, 236, 274, 352, 355, 402, 418, 421, 468, 471, 473, 476, 533, 536, 615, 618, 620, 623, 635, 638, 665, 668, 686, 696, 708, 709, 710, 757, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828], "expos": [14, 137, 141, 686, 702], "almost": [14, 19, 131, 138, 140], "ident": [14, 16, 76, 77, 121, 126, 127, 129, 131, 139, 140, 154, 367, 382, 1026, 1039, 1144], "uniqu": [14, 63, 64, 108, 109, 125, 127, 131, 154, 1022, 1023, 1024, 1025, 1026, 1032, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088], "syntax": [14, 15, 135], "There": [14, 18, 19, 123, 126, 127, 130, 131, 132, 135, 137, 140, 154], "onli": [14, 17, 18, 19, 23, 26, 27, 59, 60, 76, 77, 104, 105, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 152, 154, 367, 388, 402, 593, 596, 598, 601, 832, 865, 868, 896, 899, 961, 979, 982, 1026, 1027, 1028, 1036, 1037, 1050, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1100, 1109, 1112, 1144, 1182, 1183, 1184, 1185, 1186, 1187], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 154, 155, 163, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 286, 287, 288, 290, 296, 297, 298, 300, 374, 375, 376, 378, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 762, 763, 764, 765, 776, 777, 778, 780, 792, 793, 794, 796, 822, 823, 824, 826, 833, 834, 835, 837, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1002, 1003, 1004, 1026, 1027, 1037, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144], "wai": [14, 15, 18, 125, 128, 134, 139, 140, 141, 142, 154], "manipul": [14, 56, 101, 119, 142, 153, 962, 965, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 995, 996, 999, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021], "unsurprisingli": [14, 123], "fundament": [14, 131, 137], "consist": [14, 76, 77, 130, 132, 134, 832, 853, 856, 1100, 1101, 1104, 1178, 1179], "each": [14, 15, 16, 19, 20, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 63, 64, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 153, 154, 165, 176, 179, 181, 184, 191, 194, 196, 197, 198, 199, 204, 238, 241, 274, 286, 287, 288, 289, 290, 367, 392, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 501, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 588, 591, 593, 595, 596, 597, 598, 601, 603, 606, 610, 613, 615, 616, 617, 618, 619, 620, 623, 625, 626, 627, 628, 629, 630, 633, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 853, 856, 865, 868, 878, 881, 883, 886, 893, 895, 905, 908, 910, 914, 961, 971, 974, 987, 990, 996, 997, 998, 999, 1000, 1001, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1032, 1039, 1050, 1051, 1063, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1100, 1101, 1104, 1144, 1150, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "veri": [14, 15, 18, 19, 119, 120, 123, 125, 127, 131, 133, 134, 138, 140, 141, 142, 154, 1144], "similar": [14, 119, 125, 131, 132, 133, 140, 154, 402, 635, 638, 815, 830, 860, 864, 915, 916, 1166, 1177], "convent": [14, 153, 832, 865, 868, 1100, 1101, 1104], "those": [14, 18, 19, 20, 55, 56, 76, 77, 100, 101, 125, 131, 137, 142, 204, 205, 206, 774, 813, 832, 860, 864, 896, 899, 910, 914, 915, 916, 961, 962, 963, 964, 965, 966], "introduc": [14, 131, 140, 961, 996, 999, 1068, 1069, 1073], "2006": 14, "layer": [14, 50, 57, 58, 95, 102, 103, 119, 122, 137, 138, 141, 816, 817, 818, 819, 820, 821, 822, 825, 827, 828, 829, 830, 831, 1044, 1045, 1046, 1047, 1048, 1049, 1144, 1157, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 141, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 848, 851, 961, 996, 999, 1044, 1045, 1048, 1068, 1074, 1078, 1100, 1105, 1108, 1133, 1134, 1137], "present": [14, 19, 76, 77, 120, 124, 131, 132, 133, 134, 137], "itself": [14, 18, 19, 120, 126, 131, 134, 141, 153, 154, 686, 692, 1026, 1038], "cut": 14, "cloth": 14, "adher": [14, 15, 122, 124, 137, 142], "semant": [14, 137, 142, 402, 635, 638], "round": [14, 15, 16, 18, 19, 20, 21, 41, 42, 86, 87, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 402, 418, 421, 478, 479, 480, 481, 482, 518, 519, 520, 521, 522, 523, 526, 610, 613, 644, 660, 663, 681, 682, 683, 684, 685, 1144], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 153, 154], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153], "paint": [14, 137], "pictur": [14, 137], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 153, 154, 1144, 1150, 1166, 1177, 1178, 1179], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1144], "check": [14, 15, 16, 18, 19, 29, 31, 32, 33, 34, 45, 46, 76, 77, 90, 91, 121, 125, 131, 136, 137, 139, 140, 141, 142, 153, 274, 301, 319, 320, 322, 323, 330, 336, 339, 346, 349, 366, 367, 380, 381, 387, 401, 686, 696, 711, 724, 727, 734, 735, 736, 737, 749, 757, 770, 773, 774, 792, 793, 794, 795, 796, 832, 853, 856, 1026, 1027, 1036, 1037, 1038, 1144], "out": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 153, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 308, 310, 312, 367, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 700, 701, 703, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1067, 1068, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1174], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1144], "faq": [14, 15, 16, 137, 139, 140, 141, 142, 153], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1026, 1038], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1144], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 153, 154, 1144, 1150], "question": [14, 15, 16, 18, 19, 123, 125, 137, 139, 140, 141, 142, 153, 154, 1144], "With": [15, 16, 18, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 123, 125, 126, 137, 165, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 200, 204, 227, 228, 229, 230, 231, 238, 241, 269, 273, 274, 286, 287, 288, 289, 290, 296, 299, 308, 311, 314, 317, 325, 328, 341, 344, 357, 367, 386, 402, 403, 406, 418, 421, 422, 423, 426, 428, 431, 438, 441, 448, 451, 463, 466, 467, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 513, 516, 518, 521, 523, 524, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 675, 679, 680, 686, 687, 688, 689, 690, 691, 695, 703, 704, 711, 714, 715, 718, 719, 760, 762, 763, 764, 765, 766, 767, 774, 776, 777, 779, 792, 793, 794, 795, 796, 815, 818, 821, 822, 825, 831, 832, 833, 836, 837, 838, 841, 843, 846, 848, 851, 869, 872, 915, 919, 920, 924, 945, 946, 949, 950, 951, 955, 956, 959, 960, 961, 962, 965, 966, 975, 978, 979, 982, 987, 990, 992, 995, 996, 999, 1000, 1001, 1002, 1005, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1137], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 76, 77, 120, 123, 125, 129, 130, 131, 132, 133, 134, 135, 137, 140, 153, 154, 204, 205, 206, 686, 743, 750, 1068, 1079, 1083, 1144], "would": [15, 18, 19, 21, 55, 56, 100, 101, 118, 120, 122, 123, 125, 128, 129, 130, 131, 134, 136, 137, 139, 141, 142, 154, 165, 186, 189, 367, 393, 397, 961, 992, 993, 994, 995, 1144], "entir": [15, 16, 19, 69, 70, 76, 77, 114, 115, 123, 124, 125, 130, 131, 134, 139, 140, 141, 142, 154, 367, 392, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1175], "forgiven": 15, "rais": [15, 19, 55, 56, 59, 60, 69, 70, 76, 77, 100, 101, 104, 105, 114, 115, 121, 134, 135, 137, 139, 274, 291, 294, 402, 508, 511, 630, 633, 686, 696, 722, 732, 747, 756, 768, 774, 814, 832, 865, 868, 874, 876, 930, 934, 961, 992, 993, 994, 995, 1002, 1005, 1006, 1009, 1050, 1056, 1057, 1058, 1059, 1060, 1063, 1066, 1100, 1105, 1108, 1113, 1116, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1178, 1179, 1182, 1186], "an": [15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 45, 46, 51, 52, 55, 56, 63, 64, 69, 70, 71, 72, 76, 77, 80, 81, 82, 83, 86, 87, 90, 91, 96, 97, 100, 101, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 165, 176, 179, 181, 184, 191, 194, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 296, 299, 314, 317, 325, 328, 331, 334, 341, 344, 352, 355, 367, 393, 397, 402, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 501, 503, 504, 508, 509, 511, 513, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 658, 659, 660, 661, 663, 665, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 697, 698, 699, 701, 703, 712, 713, 714, 728, 732, 734, 735, 736, 737, 762, 766, 767, 768, 774, 792, 793, 794, 795, 796, 810, 812, 813, 814, 815, 818, 822, 825, 831, 832, 833, 834, 836, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 864, 865, 868, 874, 876, 878, 881, 883, 886, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 916, 925, 929, 930, 934, 935, 939, 961, 962, 963, 965, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 992, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1026, 1032, 1044, 1045, 1048, 1050, 1052, 1053, 1054, 1062, 1063, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1155, 1156, 1178, 1179, 1182, 1183, 1184, 1186], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 120, 126, 127, 132, 133, 134, 137, 139, 142, 154, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1144, 1182, 1183, 1184, 1185, 1186, 1187], "other": [15, 18, 19, 23, 26, 27, 37, 38, 43, 44, 73, 76, 77, 78, 79, 82, 83, 88, 89, 119, 122, 123, 125, 126, 127, 130, 131, 134, 135, 137, 139, 141, 142, 152, 153, 154, 201, 202, 204, 205, 206, 286, 287, 288, 402, 513, 516, 686, 687, 688, 689, 690, 691, 692, 774, 785, 786, 1050, 1056, 1059, 1068, 1079, 1083, 1100, 1121, 1124, 1129, 1132, 1144], "strong": [15, 154], "industri": 15, "back": [15, 130, 136, 137, 139, 154, 686, 746, 769, 1144, 1150, 1178, 1179, 1182, 1186], "momentum": 15, "won": [15, 16, 19, 142], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 137, 141, 154, 686, 755, 756, 832, 853, 856, 961, 975, 978, 1188, 1189], "just": [15, 16, 18, 19, 122, 123, 125, 126, 127, 134, 137, 139, 140, 154, 1100, 1101, 1104, 1166, 1175], "make": [15, 16, 18, 19, 20, 119, 120, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142], "problem": [15, 19, 130, 139], "even": [15, 16, 18, 19, 120, 122, 127, 132, 133, 139, 140, 141, 142, 154, 402, 630, 633, 640, 643], "wors": 15, "rather": [15, 19, 45, 46, 76, 77, 90, 91, 119, 122, 125, 131, 142, 154, 204, 205, 206, 367, 392, 686, 734, 735, 737, 774, 792, 793, 794, 795, 796], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 127, 131], "feasibl": 15, "space": [15, 204, 205, 206, 232, 233, 235, 236, 686, 713, 774, 814], "case": [15, 18, 19, 20, 29, 33, 34, 55, 56, 73, 76, 77, 78, 79, 96, 97, 100, 101, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 154, 204, 238, 241, 367, 387, 398, 401, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 473, 476, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 686, 732, 744, 745, 832, 869, 872, 961, 992, 993, 994, 995, 1026, 1029, 1035, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132, 1166, 1177, 1178, 1179, 1182, 1186], "unlik": [15, 123, 131], "charger": 15, "charact": [15, 135], "encod": [15, 140, 686, 713], "instant": [15, 1144], "messag": [15, 19, 135, 137, 139, 1191, 1192], "much": [15, 19, 119, 130, 131, 134, 137, 139, 140], "doe": [15, 19, 21, 76, 77, 118, 119, 120, 122, 123, 125, 126, 127, 128, 132, 134, 137, 139, 140, 154, 402, 473, 476, 686, 732, 860, 864, 915, 916, 961, 1001], "mandat": [15, 125, 134], "adopt": [15, 19, 130], "continu": [15, 16, 124, 125, 135, 154], "own": [15, 16, 18, 121, 122, 125, 135, 137, 154], "signatur": [15, 119, 120, 122, 123, 125, 131, 132, 133, 134, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 832, 848, 851, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108], "replac": [15, 19, 21, 55, 56, 76, 77, 100, 101, 123, 125, 129, 131, 132, 133, 137, 139, 142, 154, 686, 744, 745, 961, 962, 963, 964, 965, 966, 1050, 1051], "your": [15, 16, 17, 18, 20, 21, 119, 122, 140, 141, 154, 1144], "10": [15, 18, 21, 41, 42, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 125, 131, 137, 139, 140, 204, 226, 227, 229, 230, 231, 235, 236, 237, 402, 448, 451, 453, 456, 488, 489, 490, 491, 492, 513, 516, 533, 536, 558, 561, 568, 569, 570, 571, 572, 655, 656, 657, 658, 659, 660, 663, 686, 704, 714, 743, 750, 774, 797, 798, 799, 800, 815, 821, 832, 843, 846, 848, 851, 888, 891, 915, 919, 920, 924, 961, 979, 982, 992, 994, 1001, 1002, 1004, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1066, 1068, 1069, 1073, 1100, 1101, 1104, 1105, 1108, 1182, 1184], "100": [15, 16, 104, 105, 125, 140, 141, 142, 154, 402, 660, 663, 1052, 1054, 1144], "despit": [15, 131, 133], "distinct": [15, 122, 131, 134, 136, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1144], "still": [15, 19, 76, 77, 122, 125, 132, 139, 141, 154, 1144], "believ": [15, 19], "share": [15, 76, 77, 123, 125, 127, 128, 131, 137, 274, 361], "bring": [15, 125, 137, 138], "benefit": [15, 16, 18, 19, 130, 131, 134, 139, 140, 154], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 122, 123, 125, 129, 131, 135, 136, 137, 139, 140, 141, 142, 153, 154, 1144], "again": [15, 16, 19, 119, 123, 125, 131, 134, 140, 142, 154], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 140], "most": [15, 18, 19, 76, 77, 119, 120, 125, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 154, 832, 853, 856], "technolog": 15, "sector": [15, 41, 42, 86, 87, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447], "full": [15, 16, 19, 23, 26, 27, 73, 78, 79, 120, 122, 125, 132, 137, 154, 204, 274, 314, 317, 402, 533, 536, 558, 561, 815, 821, 832, 896, 899, 905, 908, 910, 914], "success": 15, "reason": [15, 19, 119, 123, 127, 130, 131, 132, 134, 137, 139, 402, 635, 638], "build": [15, 17, 18, 127, 136, 138, 141, 142, 154, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1144, 1166, 1177, 1178, 1179], "custom": [15, 125, 141], "comput": [15, 16, 18, 23, 26, 27, 41, 42, 53, 54, 74, 75, 76, 77, 86, 87, 96, 97, 98, 99, 125, 126, 127, 131, 137, 140, 154, 186, 188, 190, 367, 392, 402, 418, 421, 448, 451, 463, 466, 473, 476, 498, 501, 503, 504, 505, 506, 507, 528, 531, 533, 536, 553, 556, 558, 561, 588, 591, 593, 596, 598, 601, 603, 606, 610, 613, 615, 618, 620, 623, 686, 698, 699, 701, 704, 705, 774, 776, 779, 781, 783, 785, 786, 788, 790, 797, 799, 801, 803, 805, 807, 810, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 828, 830, 832, 833, 836, 838, 841, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 896, 899, 901, 903, 905, 908, 910, 914, 930, 934, 935, 939, 945, 946, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1026, 1032, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "thank": [15, 140], "interoper": 15, "compon": [15, 137, 774, 814], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 73, 76, 77, 78, 79, 125, 128, 132, 133, 815, 829, 1159, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1182, 1186], "pcie": 15, "interfac": [15, 142, 154], "motherboard": 15, "raid": 15, "storag": [15, 140], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 31, 32, 33, 34, 35, 36, 51, 52, 76, 77, 96, 97, 125, 127, 141, 142, 204, 208, 209, 210, 243, 246, 256, 258, 260, 261, 263, 265, 686, 692, 759, 761, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 878, 881, 883, 886, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929, 1026, 1028, 1038], "factor": [15, 45, 46, 49, 50, 51, 52, 90, 91, 94, 95, 96, 97, 367, 390, 391, 392, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 801, 803, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 832, 833, 834, 835, 836, 837, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1182, 1183, 1184, 1185], "sata": 15, "connect": [15, 18, 141, 142, 1166, 1176, 1177], "host": [15, 154], "bu": 15, "adapt": [15, 774, 801, 803, 1182, 1185], "devic": [15, 19, 23, 26, 27, 35, 36, 40, 43, 44, 59, 60, 76, 77, 80, 81, 85, 88, 89, 104, 105, 118, 119, 121, 127, 129, 132, 139, 140, 154, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 686, 714, 715, 716, 717, 718, 719, 741, 744, 745, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1155, 1156, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "html": [15, 21, 122, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 832, 848, 851, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108], "enabl": [15, 18, 19, 73, 76, 77, 78, 79, 125, 127, 130, 131, 134, 136, 137, 138, 140, 142, 154, 774, 814], "anyon": [15, 17, 154], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 76, 77, 131, 1026, 1027, 1036, 1037], "commun": [15, 17, 19, 20, 154, 1144, 1150], "network": [15, 127, 131, 137, 141, 153, 815, 828, 1144, 1152, 1166, 1178, 1179], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 55, 56, 100, 101, 122, 123, 125, 131, 132, 134, 137, 140, 153, 154, 686, 738, 760, 961, 992, 993, 994, 995, 1100, 1105, 1108, 1113, 1116], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 203, 274, 314, 317, 402, 418, 421, 513, 516, 610, 613, 635, 638, 660, 663], "754": [15, 203, 274, 314, 317, 402, 418, 421, 513, 516, 610, 613, 635, 638, 660, 663], "allow": [15, 19, 125, 126, 137, 154, 204, 232, 233, 235, 236, 686, 738, 1178, 1179], "calcul": [15, 53, 54, 73, 76, 77, 78, 79, 98, 99, 122, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 493, 496, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 610, 613, 630, 633, 650, 653, 655, 658, 660, 663, 670, 674, 675, 679, 680, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 122, 125, 126, 129, 131, 132, 137, 154, 274, 281, 284, 402, 403, 406, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 630, 633, 650, 653, 655, 658, 675, 679, 680, 832, 853, 856, 896, 899, 905, 908, 910, 914, 1063, 1067, 1089, 1090, 1093, 1095, 1098], "did": [15, 20, 142], "aris": [15, 154], "until": [15, 19, 135, 154, 1144], "substanti": [15, 19, 125, 130], "innov": 15, "growth": 15, "usag": [15, 137, 367, 392], "relev": [15, 18, 20, 123, 131, 132, 140, 1182, 1183, 1184, 1185, 1186, 1187], "area": [15, 41, 42, 86, 87, 134, 152, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 1144], "necess": 15, "parti": [15, 154], "could": [15, 16, 18, 19, 123, 125, 131, 132, 134, 137, 139, 140, 141, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "easili": [15, 19, 140, 141, 142, 154, 1144], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "regard": [15, 131], "effect": [15, 120, 122, 130, 131, 154, 204, 238, 241, 774, 805, 807, 1100, 1121, 1124, 1129, 1132], "2015": 15, "sinc": [15, 18, 19, 125, 154], "alongsid": 15, "machin": [15, 18, 127, 153, 274, 314, 317, 325, 328, 402, 528, 531, 832, 878, 881, 893, 895], "given": [15, 16, 18, 19, 20, 21, 43, 44, 53, 54, 55, 56, 59, 60, 76, 77, 88, 89, 98, 99, 100, 101, 104, 105, 119, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 141, 142, 153, 204, 205, 206, 212, 232, 233, 235, 236, 274, 307, 367, 379, 387, 389, 390, 391, 392, 398, 401, 686, 704, 705, 715, 716, 717, 718, 719, 744, 745, 751, 772, 774, 776, 779, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 816, 817, 818, 819, 820, 821, 822, 825, 832, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 975, 978, 979, 982, 987, 990, 996, 997, 998, 999, 1000, 1001, 1014, 1017, 1026, 1033, 1034, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1089, 1095, 1098, 1155, 1156], "frame": [15, 153], "less": [15, 19, 23, 26, 27, 41, 42, 59, 60, 76, 77, 86, 87, 104, 105, 120, 123, 131, 136, 137, 402, 408, 411, 413, 416, 423, 426, 438, 441, 478, 481, 557, 563, 566, 568, 571, 578, 581, 630, 633, 635, 638, 645, 648, 660, 663, 832, 878, 881, 893, 895, 935, 939, 1050, 1056, 1057, 1058, 1059, 1060, 1100, 1129, 1132], "matur": [15, 154], "state": [15, 120, 122, 125, 136, 137, 138, 140, 153, 274, 365, 402, 610, 613, 686, 721, 754, 769, 770, 771, 815, 829, 1144, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "than": [15, 19, 23, 26, 27, 45, 46, 59, 60, 63, 64, 76, 77, 90, 91, 104, 105, 108, 109, 119, 123, 125, 131, 134, 137, 140, 141, 142, 154, 204, 205, 206, 274, 314, 317, 367, 392, 402, 408, 411, 413, 416, 423, 426, 438, 441, 458, 461, 468, 471, 478, 481, 518, 521, 523, 526, 563, 566, 568, 571, 578, 581, 608, 630, 633, 635, 638, 645, 648, 660, 663, 681, 685, 686, 734, 735, 737, 774, 792, 793, 794, 795, 796, 832, 838, 841, 865, 868, 878, 881, 893, 895, 935, 939, 961, 962, 965, 979, 982, 1002, 1005, 1050, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1100, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "preced": [15, 141], "mention": [15, 18, 19, 120, 123, 127, 134], "aros": 15, "70": [15, 832, 888, 891, 1100, 1101, 1104], "80": [15, 832, 888, 891, 1100, 1101, 1104], "90": [15, 86, 87, 104, 105, 402, 473, 476, 640, 642, 643, 644, 832, 888, 891, 1052, 1054, 1100, 1101, 1104], "effort": [15, 17, 125, 154], "stage": [15, 17, 19, 21, 118, 135, 1144], "complet": [15, 19, 20, 76, 77, 130, 131, 139, 140, 832, 896, 899], "natur": [15, 123, 130, 131, 153, 402, 508, 511, 563, 566, 573, 576, 832, 901, 903], "like": [15, 18, 19, 21, 45, 46, 90, 91, 118, 119, 120, 122, 123, 125, 126, 133, 134, 136, 137, 139, 140, 141, 142, 153, 154, 774, 792, 793, 794, 795, 796, 1050, 1056, 1059, 1144], "certainli": 15, "mission": [15, 1144], "creat": [15, 17, 18, 19, 21, 35, 36, 43, 44, 59, 60, 76, 77, 80, 81, 88, 89, 104, 105, 118, 121, 125, 126, 132, 133, 134, 137, 138, 141, 152, 153, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 246, 248, 249, 251, 252, 254, 266, 268, 269, 271, 273, 686, 714, 715, 716, 717, 718, 719, 741, 744, 745, 760, 774, 812, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1144, 1150, 1155, 1156, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "At": [15, 20, 121], "process": [15, 16, 17, 18, 19, 21, 125, 127, 131, 137, 142, 367, 387, 401], "ourselv": 15, "lead": [15, 16, 73, 76, 77, 78, 79, 154, 832, 896, 899, 910, 914], "quansight": 15, "compani": 15, "made": [15, 19, 20, 131, 134, 137, 139], "organ": [15, 119, 127, 130, 131], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 137, 142], "sympi": 15, "rai": [15, 402, 438, 441], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 35, 36, 69, 70, 76, 77, 114, 115, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 153, 154, 204, 205, 206, 208, 209, 210, 243, 246, 686, 727, 773, 832, 935, 939, 1026, 1027, 1050, 1056, 1059, 1063, 1065, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1149, 1166, 1176, 1177, 1180, 1181], "member": [15, 19], "googl": [15, 1144], "octoml": 15, "einop": [15, 76, 77, 686, 708, 709, 710], "further": [15, 16, 19, 21, 123, 126, 130, 136, 140, 141, 1144], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 49, 50, 94, 95, 104, 105, 118, 131, 140, 686, 695, 703, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 832, 848, 851, 888, 891, 1026, 1029, 1042, 1043, 1052, 1054, 1144, 1150], "shaw": 15, "co": [15, 41, 42, 86, 87, 137, 153, 402, 487, 686, 713, 1144], "intel": 15, "togeth": [15, 76, 77, 130, 131, 135, 141, 142, 154, 1188, 1189], "major": [15, 125, 126, 132, 133, 154, 1063, 1066], "involv": [15, 17, 21, 118, 132, 142, 274, 352, 355, 402, 418, 421, 610, 613, 1144, 1150], "anoth": [15, 18, 19, 76, 77, 125, 126, 127, 131, 132, 139, 142, 204, 221, 224, 274, 286, 289, 296, 299], "promis": 15, "sign": [15, 18, 41, 42, 86, 87, 138, 142, 204, 205, 206, 402, 403, 406, 418, 421, 438, 441, 468, 471, 610, 613, 635, 636, 637, 638, 639, 649, 832, 901, 903, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1117, 1120, 1125, 1128], "pursuit": 15, "unif": [15, 17, 139, 1144, 1150], "clearli": [15, 19, 20, 123, 125], "lot": [15, 16, 129, 139, 154], "thought": [15, 18, 19, 120], "care": [15, 19, 142], "attent": [15, 19, 130, 131, 815, 830, 831, 1166, 1177], "gone": [15, 136], "simplifi": [15, 137, 138, 139, 141], "compat": [15, 23, 26, 27, 41, 42, 55, 56, 69, 70, 73, 78, 79, 86, 87, 100, 101, 114, 115, 120, 121, 154, 274, 291, 294, 402, 418, 419, 420, 421, 422, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 832, 878, 881, 893, 895, 905, 908, 920, 924, 930, 934, 935, 939, 961, 992, 993, 994, 995, 1063, 1065, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "excit": [15, 17, 118, 1144], "complianc": 15, "hope": [15, 154], "due": [15, 18, 23, 26, 27, 126, 131, 134, 402, 610, 613], "suit": [15, 18, 118, 124, 125, 140, 153], "some": [15, 16, 18, 19, 20, 76, 77, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 153, 154, 402, 513, 516, 774, 776, 779, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 813, 815, 827, 1144, 1166, 1174], "motiv": [15, 139], "great": [15, 16, 125, 137, 139], "convinc": 15, "celebr": 15, "encourag": [15, 153, 154, 1144, 1150], "foundat": 15, "point": [16, 19, 41, 42, 51, 52, 59, 60, 86, 87, 96, 97, 104, 105, 120, 122, 123, 125, 130, 134, 137, 139, 140, 153, 196, 197, 198, 199, 203, 204, 205, 206, 208, 210, 212, 218, 219, 226, 248, 249, 266, 268, 274, 281, 284, 314, 317, 336, 339, 352, 355, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 610, 613, 630, 633, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 675, 676, 677, 678, 679, 680, 681, 685, 832, 833, 834, 835, 836, 837, 843, 846, 853, 856, 857, 859, 860, 863, 878, 881, 893, 895, 896, 899, 905, 908, 910, 914, 935, 939, 1050, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "mai": [16, 18, 19, 23, 26, 27, 41, 42, 86, 87, 125, 126, 131, 139, 141, 204, 205, 206, 221, 224, 367, 393, 397, 402, 498, 499, 500, 501, 502, 533, 536, 558, 561, 593, 596, 598, 601, 620, 621, 622, 624, 686, 707, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116], "ask": [16, 137, 139, 154, 1144], "perfectli": 16, "happi": [16, 18, 154], "abund": 16, "better": [16, 118, 121, 126, 135, 136, 139, 140, 141], "ll": [16, 17, 19, 123, 131, 134, 140], "give": [16, 18, 19, 118, 120, 122, 123, 128, 139, 961, 992, 995], "two": [16, 35, 36, 51, 52, 73, 78, 79, 96, 97, 122, 123, 125, 126, 130, 131, 136, 140, 142, 204, 205, 206, 218, 219, 238, 241, 256, 258, 260, 261, 263, 265, 274, 351, 361, 402, 468, 471, 640, 643, 686, 694, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 925, 929, 930, 934, 961, 1010, 1013, 1068, 1069, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1144], "streamlin": 16, "workflow": [16, 19, 140, 152, 1144], "save": [16, 76, 77, 125, 135, 154, 686, 752, 1178, 1179], "week": [16, 19, 20, 1144], "let": [16, 121, 122, 123, 125, 126, 131, 132, 133, 137, 139, 140, 141, 142, 1100, 1109, 1112, 1121, 1124, 1125, 1128, 1129, 1132, 1144], "sai": [16, 18, 129, 139], "deepmind": 16, "releas": [16, 18, 20, 1144], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 134, 140, 1100, 1121, 1124, 1129, 1132], "perceiverio": 16, "happen": [16, 18, 19, 125, 140], "slew": 16, "rush": 16, "f": [16, 21, 118, 125, 131, 135, 137, 140, 142, 402, 528, 531, 686, 729, 733, 860, 864, 915, 916, 1026, 1029, 1042, 1043], "g": [16, 59, 60, 104, 105, 118, 131, 154, 274, 280, 352, 355, 367, 370, 860, 864, 915, 916, 1026, 1029, 1042, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1113, 1116, 1117, 1120, 1125, 1128], "inevit": 16, "deviat": [16, 57, 58, 102, 103, 125, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1055, 1100, 1121, 1124, 1180, 1181], "origin": [16, 19, 55, 56, 73, 76, 77, 78, 79, 96, 97, 100, 101, 126, 128, 129, 132, 137, 139, 402, 438, 441, 832, 869, 872, 961, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "often": [16, 125, 127, 135, 154], "erron": 16, "train": [16, 45, 46, 90, 91, 127, 131, 133, 140, 141, 142, 152, 153, 154, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1144], "poor": 16, "converg": 16, "perform": [16, 69, 70, 76, 77, 114, 115, 119, 120, 123, 125, 127, 128, 130, 131, 133, 134, 137, 140, 154, 165, 186, 189, 204, 232, 233, 235, 236, 686, 704, 708, 709, 710, 730, 731, 732, 746, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 827, 829, 832, 910, 914, 1022, 1023, 1024, 1025, 1026, 1033, 1034, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "issu": [16, 17, 20, 125, 137, 139, 141, 154], "etc": [16, 18, 19, 20, 43, 44, 59, 60, 71, 72, 76, 77, 88, 89, 104, 105, 116, 117, 119, 120, 123, 125, 130, 131, 132, 137, 139, 140, 154, 204, 232, 233, 235, 236, 686, 714, 715, 716, 717, 718, 719, 741, 744, 745, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "publish": [16, 154], "manag": [16, 17, 134, 154], "get": [16, 17, 18, 20, 76, 77, 118, 125, 127, 132, 133, 134, 137, 138, 139, 140, 141, 274, 308, 311, 313, 314, 317, 325, 328, 367, 373, 374, 377, 379, 382, 387, 391, 398, 401, 686, 693, 720, 721, 722, 723, 724, 743, 754, 1144, 1150, 1166, 1175], "work": [16, 18, 19, 20, 118, 125, 126, 131, 132, 133, 136, 137, 138, 139, 141, 142, 1144, 1150], "repositori": [16, 18, 19, 21, 124, 135], "pull": [16, 17, 18, 21, 119, 154], "request": [16, 17, 119, 367, 384], "confus": [16, 134], "do": [16, 18, 19, 20, 45, 46, 76, 77, 90, 91, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 402, 635, 638, 686, 732, 774, 792, 793, 794, 795, 796, 813, 1026, 1027, 1036, 1037, 1038], "don": [16, 18, 19, 20, 71, 72, 116, 117, 125, 132, 141, 154], "expect": [16, 19, 125, 154, 686, 693, 1144], "codebas": [16, 17, 118, 119, 134, 136, 367, 390, 391, 1144], "total": [16, 17, 19, 73, 76, 77, 78, 79, 123, 125, 133, 140, 141, 154, 367, 398, 1063, 1066, 1100, 1121, 1124, 1129, 1132], "hour": 16, "spent": 16, "spin": 16, "off": [16, 136, 832, 848, 851, 925, 929], "test": [16, 18, 20, 41, 42, 69, 70, 86, 87, 114, 115, 118, 123, 135, 154, 274, 331, 334, 341, 344, 402, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "error": [16, 18, 41, 42, 76, 77, 86, 87, 120, 121, 123, 125, 130, 133, 135, 139, 154, 165, 166, 169, 402, 503, 504, 505, 506, 507, 832, 915, 919, 1100, 1105, 1108, 1113, 1116, 1178, 1179, 1182, 1186], "iter": [16, 29, 31, 32, 33, 34, 43, 44, 71, 72, 73, 76, 77, 78, 79, 88, 89, 116, 117, 131, 137, 140, 201, 202, 367, 392, 686, 687, 688, 689, 690, 691, 961, 971, 974, 987, 990, 1001, 1014, 1017, 1018, 1021, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043], "address": [16, 19, 20, 130, 137], "sake": 16, "singl": [16, 19, 59, 60, 76, 77, 104, 105, 119, 120, 123, 125, 127, 129, 131, 134, 137, 140, 141, 142, 154, 686, 767, 773, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073], "multipl": [16, 19, 57, 58, 69, 70, 76, 77, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 114, 115, 123, 127, 131, 154, 402, 418, 422, 463, 467, 608, 609, 610, 613, 686, 687, 689, 690, 691, 715, 719, 738, 774, 792, 794, 795, 796, 832, 833, 836, 837, 860, 863, 961, 962, 965, 966, 996, 999, 1000, 1001, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1063, 1064, 1065, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1176], "line": [16, 18, 123, 125, 130, 135, 138, 139, 140, 141, 152, 1144, 1150], "convert": [16, 29, 31, 32, 33, 34, 35, 36, 76, 77, 125, 130, 137, 154, 155, 163, 204, 208, 209, 210, 243, 246, 274, 279, 280, 367, 370, 371, 372, 373, 387, 398, 401, 686, 746, 759, 761, 762, 766, 767, 769, 832, 860, 864, 915, 916, 940, 944, 1026, 1028, 1038, 1039, 1156], "directli": [16, 19, 119, 120, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 141, 142, 153, 154, 1026, 1038], "graph": [16, 23, 26, 27, 127, 131, 138, 154, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1178, 1179], "guarante": [16, 130, 154, 1068, 1069, 1073], "turn": [16, 123, 125, 131], "4": [16, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 45, 46, 51, 52, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 125, 128, 131, 137, 139, 140, 141, 142, 165, 171, 174, 176, 179, 186, 189, 196, 197, 199, 204, 227, 228, 229, 230, 231, 238, 241, 251, 254, 269, 273, 274, 286, 287, 288, 289, 290, 296, 298, 299, 300, 308, 311, 314, 317, 341, 344, 367, 379, 386, 390, 402, 403, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 438, 440, 441, 442, 448, 451, 463, 464, 465, 466, 467, 473, 476, 478, 480, 481, 483, 486, 488, 491, 493, 494, 495, 496, 497, 498, 500, 501, 513, 515, 516, 518, 520, 521, 523, 524, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 650, 652, 653, 654, 655, 658, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 695, 704, 713, 714, 715, 717, 718, 719, 737, 760, 774, 776, 778, 779, 780, 792, 793, 794, 795, 796, 815, 818, 819, 820, 822, 825, 829, 831, 832, 833, 834, 836, 838, 841, 843, 846, 848, 851, 860, 863, 878, 881, 888, 891, 915, 919, 920, 924, 925, 929, 945, 956, 959, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 987, 989, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1005, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1137, 1144, 1182, 1183, 1184, 1185, 1187], "step": [16, 18, 19, 21, 45, 46, 76, 77, 80, 81, 90, 91, 123, 128, 130, 131, 132, 133, 137, 140, 141, 142, 153, 204, 205, 206, 207, 232, 233, 235, 236, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 788, 790, 797, 798, 799, 800, 801, 803, 805, 807, 1022, 1023, 1024, 1025, 1144, 1182, 1183, 1184, 1185, 1186, 1187], "take": [16, 17, 18, 19, 122, 123, 125, 131, 132, 133, 137, 139, 141, 142, 154, 402, 473, 476, 1144, 1150], "few": [16, 19, 20, 125, 127, 131, 132, 133, 134, 135, 138, 139, 140, 141, 152, 1144, 1150], "second": [16, 18, 23, 26, 27, 41, 42, 45, 46, 63, 64, 73, 78, 79, 86, 87, 90, 91, 108, 109, 123, 125, 126, 134, 139, 274, 351, 361, 402, 418, 419, 420, 421, 422, 438, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 498, 499, 501, 523, 526, 528, 529, 533, 534, 536, 553, 554, 556, 558, 559, 561, 583, 584, 586, 588, 589, 591, 598, 599, 601, 603, 604, 606, 610, 611, 613, 620, 621, 623, 630, 631, 633, 670, 671, 672, 673, 674, 686, 694, 743, 750, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 832, 838, 841, 848, 851, 853, 856, 865, 868, 888, 891, 896, 899, 910, 914, 920, 924, 930, 934, 961, 1006, 1009, 1010, 1013, 1022, 1024, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1182, 1183, 1184], "automat": [16, 18, 19, 118, 120, 127, 131, 136, 137, 138, 141, 142, 1144], "convers": [16, 30, 31, 32, 33, 34, 76, 77, 136, 138, 142, 153, 154, 686, 746, 1144, 1150], "everyon": [16, 17, 19, 154], "regardless": [16, 17, 76, 77, 139, 142, 201, 202], "wouldn": 16, "nice": [16, 125], "write": [16, 19, 20, 21, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 122, 123, 127, 128, 134, 137, 139, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 291, 294, 367, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1067, 1068, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "onc": [16, 18, 19, 125, 131, 132, 133, 137, 140, 154, 367, 392, 832, 860, 863, 910, 914, 1050, 1051], "know": [16, 19, 125, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "among": [16, 76, 77, 125], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 127, 137], "understand": [16, 18, 19, 20, 21, 118, 120, 122, 123, 124, 126, 135, 136], "pattern": [16, 76, 77, 122, 132, 686, 708, 709, 710], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 122, 124, 125, 126, 131, 137, 141, 154, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 286, 287, 288, 290, 296, 297, 298, 300, 374, 375, 376, 378, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 762, 763, 764, 765, 776, 777, 778, 780, 792, 793, 794, 796, 822, 823, 824, 826, 832, 833, 834, 835, 837, 838, 841, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1026, 1028, 1038, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1150], "now": [16, 18, 21, 76, 77, 119, 120, 125, 129, 131, 132, 135, 139, 140, 142, 153, 154, 204, 269, 273, 1166, 1177, 1178, 1179], "spend": 16, "torchvis": 16, "probabl": [16, 125, 815, 827, 1050, 1051, 1166, 1174], "sonnet": 16, "about": [16, 18, 19, 124, 125, 136, 137, 141, 142, 154, 274, 314, 317, 325, 328], "next": [16, 18, 19, 20, 21, 122, 123, 128, 129, 135, 139, 140, 274, 314, 317, 1144, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187], "everyth": [16, 19, 20, 125, 138, 154], "zero": [16, 23, 26, 27, 35, 36, 37, 38, 41, 42, 45, 46, 69, 70, 73, 76, 77, 78, 79, 82, 83, 86, 87, 90, 91, 104, 105, 114, 115, 120, 123, 125, 130, 131, 132, 133, 137, 140, 141, 165, 171, 174, 176, 179, 204, 212, 218, 219, 238, 241, 256, 258, 260, 261, 263, 265, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 402, 418, 421, 423, 426, 428, 431, 438, 441, 458, 461, 483, 484, 486, 488, 489, 490, 491, 492, 513, 516, 518, 521, 543, 546, 593, 596, 598, 601, 608, 609, 610, 613, 615, 618, 620, 623, 630, 633, 635, 638, 640, 643, 650, 653, 655, 656, 657, 659, 660, 663, 665, 668, 675, 679, 680, 686, 704, 741, 744, 745, 774, 776, 777, 778, 779, 780, 781, 783, 792, 795, 797, 799, 801, 803, 815, 827, 832, 833, 836, 843, 846, 865, 868, 878, 881, 893, 895, 930, 934, 935, 939, 961, 975, 978, 979, 982, 996, 999, 1018, 1021, 1044, 1045, 1048, 1050, 1052, 1053, 1056, 1058, 1059, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1182, 1183, 1184, 1185], "need": [16, 18, 19, 20, 21, 119, 122, 123, 124, 126, 127, 130, 131, 134, 137, 139, 140, 153, 154, 686, 698, 699, 701, 961, 962, 965, 975, 978], "said": 16, "high": [16, 20, 59, 60, 76, 77, 104, 105, 140, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060], "level": [16, 17, 20, 127, 136, 137, 140, 141, 142, 154], "optim": [16, 134, 138, 140, 142, 153, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1022, 1023, 1024, 1025, 1144, 1183, 1184, 1185, 1187], "trainer": [16, 152, 154, 1144], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 142], "flax": [16, 142, 154], "trax": [16, 142], "objax": [16, 142], "idea": [16, 121, 126, 135, 153], "fulli": [16, 120, 130, 131, 137, 138, 139, 140, 141, 142, 154, 1166, 1176, 1177], "offer": [16, 141], "strongli": [17, 18, 1144, 1150], "welcom": [17, 18, 19, 1144, 1150], "absolut": [17, 41, 42, 76, 77, 86, 87, 402, 403, 404, 405, 406, 407, 832, 901, 903], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 31, 32, 33, 34, 43, 44, 45, 46, 55, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 131, 132, 134, 165, 166, 168, 169, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 208, 210, 227, 229, 231, 274, 281, 284, 286, 288, 290, 296, 298, 300, 307, 308, 311, 330, 331, 334, 336, 339, 341, 344, 346, 349, 366, 367, 373, 374, 377, 383, 384, 387, 388, 392, 399, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 551, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 704, 707, 711, 713, 715, 717, 719, 724, 725, 727, 729, 732, 733, 734, 735, 736, 737, 738, 746, 749, 751, 753, 757, 762, 763, 765, 770, 772, 773, 774, 781, 783, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 814, 815, 827, 832, 833, 835, 837, 853, 856, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 992, 993, 994, 995, 996, 998, 1000, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1036, 1037, 1038, 1039, 1045, 1047, 1049, 1050, 1051, 1056, 1058, 1060, 1074, 1075, 1077, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1155, 1156, 1166, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 76, 77, 80, 81, 118, 122, 123, 126, 132, 136, 137, 139, 140, 141, 153, 154, 204, 205, 206, 207, 232, 233, 234, 235, 236, 237, 367, 369], "aspect": [17, 140, 1144], "guid": [17, 18, 19, 135, 1144], "through": [17, 19, 20, 118, 123, 125, 126, 127, 128, 131, 135, 136, 137, 139, 140, 141, 142, 153, 402, 438, 441, 1026, 1029], "journei": [17, 1144, 1150], "inclusvi": 17, "big": [17, 154], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 136, 1144], "split": [17, 19, 23, 26, 27, 76, 77, 136, 137, 154, 367, 390, 391, 392, 686, 738, 961, 1144], "section": [17, 19, 20, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "below": [17, 18, 20, 21, 35, 36, 118, 119, 121, 123, 125, 127, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 153, 204, 256, 258, 260, 261, 263, 265, 402, 438, 441, 448, 451, 473, 476, 488, 491, 640, 643, 680, 832, 843, 846, 848, 851, 925, 929, 961, 975, 978, 979, 982, 1068, 1069, 1073, 1089, 1090, 1093, 1144], "best": [17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 686, 738], "go": [17, 18, 19, 20, 118, 119, 123, 126, 131, 136, 140, 154, 1026, 1037], "finish": [17, 18, 118, 1144], "dive": [17, 19, 20, 131, 136, 139, 140, 154, 1144], "right": [17, 18, 19, 76, 77, 118, 123, 140, 402, 458, 461, 468, 471, 832, 910, 914], "environ": [17, 19, 21, 153], "basic": [17, 20, 21], "fork": [17, 18, 686, 739], "doc": [17, 20, 120, 122, 137, 140, 141, 1144], "document": [17, 19, 125, 126, 138, 140, 142], "local": [17, 18, 21, 127], "task": [17, 19, 153, 1022, 1023, 1024, 1025, 1144], "help": [17, 18, 123, 125, 126, 128, 130, 131, 139, 140, 141, 152, 686, 692, 1100, 1125, 1128, 1144], "video": [17, 19, 119, 120, 122, 123, 125, 126, 127, 128], "realli": [18, 131, 154], "contribut": [18, 19, 20, 137, 1150], "toward": [18, 55, 56, 100, 101, 137, 961, 996, 997, 998, 999, 1000, 1144, 1150], "page": [18, 19, 138, 142, 152, 1144, 1150], "explain": [18, 19, 20, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 1144, 1150], "main": [18, 21, 35, 36, 129, 131, 204, 218, 219, 256, 258, 260, 261, 263, 265, 832, 848, 851, 925, 929], "prefer": [18, 126, 131], "mode": [18, 19, 51, 52, 76, 77, 96, 97, 123, 131, 154, 201, 202, 367, 392, 402, 418, 421, 610, 613, 686, 724, 746, 749, 751, 769, 770, 771, 832, 896, 897, 898, 899, 900], "git": [18, 19, 125], "recurs": [18, 21, 29, 31, 32, 33, 34, 76, 77, 127, 131, 141, 154, 1026, 1027, 1028, 1036, 1037, 1038], "submodul": [18, 19, 20, 21, 118, 124, 125, 127, 133, 136, 137, 141, 1144, 1180, 1181, 1188, 1189], "com": 18, "unifyai": [18, 19, 21], "http": [18, 122, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 774, 776, 779, 781, 783, 832, 848, 851, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108], "gh": 18, "your_fold": 18, "id": [18, 130, 131, 135, 367, 373, 1178, 1179], "cours": [18, 19, 123, 140, 154], "whatev": [18, 154], "integr": [18, 274, 281, 284], "familiar": [18, 20], "decid": [18, 76, 77, 126, 1026, 1037], "sure": [18, 20, 124, 125], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 153, 1144], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 141, 154], "miss": [18, 123, 125, 130, 131, 135, 1182, 1186], "add": [18, 19, 20, 23, 26, 27, 41, 42, 57, 58, 71, 72, 73, 76, 77, 78, 79, 86, 87, 88, 89, 102, 103, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 130, 131, 137, 139, 154, 402, 403, 406, 422, 608, 609, 687, 691, 774, 814, 1044, 1045, 1046, 1047, 1048, 1049, 1144, 1150, 1180, 1181], "explicit": [18, 21, 131, 132, 134, 137, 154], "remind": 18, "channel": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 686, 713, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "pace": 18, "updat": [18, 19, 20, 21, 45, 46, 76, 77, 90, 91, 118, 120, 123, 124, 129, 130, 131, 132, 137, 139, 140, 142, 154, 686, 732, 744, 745, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 829, 1022, 1023, 1024, 1026, 1033, 1034, 1042, 1043, 1155, 1156, 1182, 1183, 1184, 1185, 1186, 1187], "suggest": [18, 19, 119, 125], "latest": [18, 19, 20, 21, 122, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 832, 848, 851, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1166, 1175], "packag": [18, 21, 126, 135, 154], "ensur": [18, 19, 120, 121, 125, 126, 130, 132, 135, 686, 732], "align": [18, 76, 77, 137, 139, 1144, 1150], "accord": [18, 21, 37, 38, 76, 77, 82, 83, 126, 127, 132, 274, 296, 297, 298, 299, 300, 307, 314, 317, 402, 418, 421, 468, 471, 610, 613, 686, 714, 744, 745, 832, 930, 934, 961, 971, 974, 1018, 1021, 1100, 1121, 1124, 1129, 1132], "stabl": [18, 65, 66, 110, 111, 137, 154, 686, 722, 723, 747, 748, 755, 756, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "pypi": [18, 20, 154], "mayb": [18, 29, 33, 34, 137, 139], "person": [18, 19], "experi": [18, 138, 140, 154], "avoid": [18, 19, 121, 125, 128, 129, 131, 135, 139, 402, 513, 516], "pip": [18, 153, 1144], "instal": [18, 19, 21, 135, 153, 1144], "abil": [18, 138, 154], "certain": [18, 76, 77, 125, 126, 132, 154, 204, 205, 206, 232, 233, 235, 236], "perhap": [18, 139, 140, 141, 154], "keep": [18, 19, 76, 77, 121, 124, 125, 131, 138, 140, 142, 686, 772], "track": [18, 19, 1026, 1038, 1178, 1179], "termin": [18, 19, 21, 73, 76, 77, 78, 79, 131, 137, 140], "run": [18, 21, 45, 46, 90, 91, 120, 123, 124, 125, 128, 135, 137, 138, 139, 140, 141, 142, 153, 154, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1022, 1023, 1024, 1025, 1166, 1177, 1178, 1179], "command": [18, 21, 1144], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 63, 64, 108, 109, 121, 122, 125, 126, 132, 135, 137, 139, 140, 142, 201, 202, 686, 692, 832, 853, 856, 896, 899, 910, 914, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078], "3": [18, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 123, 125, 128, 131, 137, 139, 140, 141, 142, 165, 166, 167, 168, 170, 171, 174, 176, 179, 181, 184, 186, 189, 196, 197, 199, 203, 204, 227, 228, 229, 230, 231, 238, 241, 251, 254, 266, 268, 269, 273, 274, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 308, 311, 314, 317, 341, 344, 367, 373, 386, 390, 393, 397, 402, 403, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 448, 451, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 480, 481, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 687, 688, 689, 694, 695, 704, 711, 714, 715, 716, 717, 718, 719, 737, 753, 760, 767, 774, 776, 777, 778, 779, 780, 792, 795, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 860, 863, 878, 881, 888, 891, 910, 914, 915, 919, 920, 924, 925, 929, 940, 944, 945, 946, 948, 949, 950, 951, 953, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 987, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1005, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1117, 1120, 1125, 1128, 1133, 1134, 1137, 1144], "8": [18, 21, 23, 26, 27, 41, 42, 53, 54, 55, 56, 59, 60, 73, 78, 79, 86, 87, 90, 91, 98, 99, 100, 101, 104, 105, 123, 125, 131, 136, 140, 165, 181, 184, 204, 227, 230, 269, 273, 274, 307, 314, 317, 367, 379, 398, 402, 418, 421, 422, 428, 431, 432, 448, 451, 478, 481, 488, 491, 523, 524, 525, 526, 527, 533, 536, 558, 561, 608, 609, 635, 636, 640, 642, 643, 644, 645, 646, 647, 648, 649, 660, 663, 665, 668, 680, 686, 695, 714, 737, 774, 776, 779, 792, 794, 795, 796, 815, 822, 825, 832, 838, 841, 843, 846, 848, 851, 888, 891, 915, 919, 920, 924, 945, 946, 947, 948, 949, 950, 951, 953, 955, 956, 957, 958, 960, 961, 962, 963, 965, 979, 982, 992, 994, 1001, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1067, 1068, 1069, 1073, 1100, 1101, 1104, 1144, 1166, 1177], "activ": [18, 19, 21, 25, 71, 72, 75, 116, 117, 119, 141, 166, 169, 171, 174, 176, 178, 179, 180, 181, 184, 186, 189, 191, 194, 196, 200, 1144, 1153, 1154], "setup": [18, 19], "click": [18, 19, 122, 1144], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 142, 367, 393, 397, 402, 593, 596, 598, 601, 1063, 1067, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116], "left": [18, 19, 76, 77, 96, 97, 123, 132, 402, 458, 461, 832, 853, 856, 869, 872, 910, 914, 1063, 1064, 1144], "panel": 18, "select": [18, 19, 125, 137, 139, 142, 154], "drop": [18, 154], "down": [18, 125, 139], "path": [18, 21], "manual": [18, 19, 125, 141, 1026, 1027, 1036, 1037], "builtin": [18, 21, 139, 141, 860, 864, 915, 916], "requir": [18, 21, 119, 120, 121, 122, 123, 125, 129, 130, 132, 133, 139, 154, 201, 202, 402, 660, 663, 832, 853, 856, 961, 1006, 1009, 1155, 1156], "cmd": [18, 21], "directori": [18, 19, 21, 125, 126, 686, 752], "folder": [18, 19, 21, 119, 124, 125, 127], "file": [18, 19, 21, 76, 77, 119, 122, 125, 127, 128, 130, 131, 135, 137, 140, 686, 752, 1178, 1179], "abov": [18, 19, 21, 35, 36, 104, 105, 120, 122, 123, 125, 126, 127, 128, 130, 131, 134, 135, 139, 140, 141, 142, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 610, 613, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 853, 856, 925, 929, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1048, 1050, 1052, 1053, 1054, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1117, 1120, 1121, 1124, 1125, 1128, 1133, 1134, 1137], "m": [18, 19, 21, 35, 36, 51, 52, 59, 60, 96, 97, 104, 105, 118, 137, 204, 238, 241, 256, 258, 260, 261, 263, 265, 686, 695, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929, 1050, 1055, 1056, 1057, 1058, 1059, 1060], "python3": [18, 19, 21], "script": [18, 19, 21, 123, 137, 154], "bat": [18, 19, 21], "OR": [18, 19, 21, 69, 70, 114, 115, 402, 463, 466, 598, 601, 1133, 1139, 1140, 1141, 1142, 1143], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 73, 76, 77, 78, 79, 122, 130, 131, 135, 367, 382, 860, 864, 915, 916], "os": 18, "note": [18, 19, 119, 122, 123, 125, 131, 132, 402, 635, 638, 832, 853, 856, 910, 914, 961, 1006, 1009, 1068, 1074, 1078, 1100, 1109, 1112], "tick": [18, 19], "abl": [18, 19, 76, 77, 127, 132, 134, 135, 139, 142], "To": [18, 121, 123, 125, 127, 131, 135, 140, 141, 142, 860, 864, 915, 916, 1144], "ivy_test": [18, 19], "test_array_api": [18, 19, 124, 125], "cd": [18, 19, 21], "r": [18, 76, 77, 686, 695, 772, 832, 896, 899, 940, 944], "txt": 18, "visual": [18, 135, 154], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 136, 402, 513, 516], "conflict": [18, 19, 140], "addit": [18, 19, 57, 58, 76, 77, 102, 103, 119, 122, 125, 126, 131, 132, 139, 140, 142, 367, 393, 397, 402, 418, 421, 686, 708, 709, 710, 1044, 1045, 1046, 1047, 1048, 1049, 1166, 1176], "yet": [18, 20, 131], "particular": [18, 19, 119, 121, 123, 125, 132, 134, 402, 403, 406], "system": [18, 19, 154, 832, 905, 908], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": [18, 126], "imag": [18, 21, 48, 49, 50, 93, 94, 95, 119, 137, 138, 140, 142, 153, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 1144], "profession": 18, "execut": [18, 19, 21, 131, 134, 137, 139, 142, 154, 686, 768], "deploy": 18, "top": [18, 19, 125, 126, 140, 141, 1144], "press": [18, 140, 1144], "ok": 18, "correctli": [18, 76, 77, 96, 97, 120, 125, 131, 132, 135, 141, 154, 832, 869, 872, 1063, 1064], "caus": [18, 19, 123, 125, 131, 134, 135, 154], "earlier": [18, 19], "might": [18, 19, 119, 125, 129, 132, 137, 139, 140, 686, 707], "necessari": [18, 55, 56, 100, 101, 123, 128, 131, 134, 961, 992, 993, 994, 995], "virtualis": 18, "detail": [18, 19, 20, 119, 120, 124, 125, 127, 128, 129, 131, 140, 141, 204, 221, 224, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 76, 77, 88, 89, 96, 97, 118, 204, 238, 241, 686, 698, 699, 700, 701, 815, 827, 832, 869, 872, 935, 939, 1166, 1174], "keyr": 18, "fssl": 18, "download": [18, 125], "gpg": 18, "dearmor": 18, "o": [18, 118, 137, 686, 695], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 142, 154], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 57, 58, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 123, 125, 126, 131, 132, 133, 135, 137, 140, 141, 142, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 205, 206, 208, 209, 210, 227, 229, 231, 238, 239, 241, 243, 246, 274, 286, 287, 288, 289, 290, 296, 298, 300, 367, 373, 392, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 695, 715, 717, 719, 760, 762, 763, 765, 772, 774, 776, 778, 780, 792, 794, 796, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 832, 833, 835, 837, 920, 924, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 967, 970, 979, 982, 992, 994, 996, 998, 1000, 1001, 1006, 1009, 1026, 1027, 1028, 1029, 1032, 1037, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1056, 1058, 1060, 1063, 1066, 1068, 1074, 1075, 1077, 1078, 1134, 1136, 1138, 1139, 1141, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "dev": [18, 39, 40, 76, 77, 84, 85, 127, 133, 137, 139, 141, 367, 378, 382], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 125, 131, 154], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 121, 125, 135, 153, 367], "post": [18, 57, 58, 102, 103, 142, 1044, 1045, 1046, 1047, 1048, 1049, 1144, 1150], "It": [18, 19, 21, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 122, 123, 125, 126, 128, 130, 131, 132, 134, 137, 139, 140, 141, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 291, 294, 367, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 864, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 901, 903, 905, 908, 910, 914, 915, 916, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1067, 1068, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 122, 123, 125, 127, 131, 134, 137, 139, 140, 154], "featur": [18, 119, 120, 140, 1144], "vm": 18, "azur": 18, "cloud": [18, 153], "mean": [18, 19, 67, 68, 76, 77, 112, 113, 116, 117, 118, 121, 123, 125, 127, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 367, 392, 686, 709, 1022, 1023, 1024, 1025, 1026, 1032, 1050, 1055, 1068, 1069, 1073, 1100, 1144, 1157], "configur": [18, 19, 21, 76, 77, 132, 367, 391, 1026, 1039], "defin": [18, 20, 104, 105, 119, 120, 122, 125, 132, 139, 141, 154, 402, 610, 613, 635, 638, 686, 741, 832, 838, 841, 853, 856, 905, 908, 1050, 1052, 1053, 1054, 1100, 1105, 1108, 1109, 1112, 1113, 1116], "dockerfil": [18, 21], "longer": [18, 125, 132, 134], "worri": 18, "platform": 18, "agnost": [18, 120, 130, 137, 139, 142, 154, 1144], "usual": [18, 125, 126], "studio": 18, "favourit": 18, "extens": [18, 19, 122, 125, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 832, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137], "theme": 18, "too": [18, 19, 135, 154, 402, 418, 421, 610, 613], "done": [18, 19, 123, 125, 135, 140], "unsupport": [18, 126, 135, 274, 322, 323, 367, 381], "old": [18, 76, 77, 134], "slow": 18, "ipad": 18, "long": [18, 19, 123, 815, 829], "browser": 18, "cool": [18, 119], "requisit": 18, "head": [18, 131, 815, 830, 1144, 1166, 1177], "pane": [18, 19], "readi": [18, 20], "begin": [18, 1026, 1027, 1037], "outlin": [18, 19, 20, 118, 122, 125, 127, 131, 134, 139], "green": [18, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1191, 1192], "dropdown": 18, "tab": [18, 140, 1144], "master": [18, 19, 131], "vs": [18, 125], "view": [18, 19, 204, 221, 224, 815, 818, 822, 825], "log": [18, 19, 41, 42, 86, 87, 127, 131, 134, 137, 140, 204, 235, 236, 402, 567, 573, 576, 583, 586, 832, 901, 903, 1144], "built": [18, 19, 125, 138, 204, 205, 206, 1166, 1177, 1178, 1179], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 41, 42, 80, 81, 104, 105, 123, 125, 204, 227, 229, 230, 231, 274, 314, 317, 402, 448, 451, 493, 496, 635, 636, 638, 640, 643, 645, 646, 815, 818, 832, 848, 851, 888, 891, 915, 919, 920, 924, 961, 996, 999, 1050, 1052, 1053, 1054, 1063, 1066, 1068, 1069, 1073, 1100, 1101, 1104], "minut": 18, "launch": 18, "12": [18, 41, 42, 59, 60, 86, 87, 100, 101, 102, 103, 104, 105, 123, 125, 131, 402, 448, 451, 473, 476, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 640, 643, 655, 657, 659, 686, 704, 723, 774, 776, 779, 832, 848, 851, 888, 891, 920, 924, 961, 979, 982, 996, 999, 1002, 1004, 1044, 1045, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1063, 1067, 1068, 1069, 1073, 1100, 1101, 1104], "output": [18, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 122, 123, 125, 127, 130, 131, 133, 134, 137, 139, 141, 142, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 291, 294, 367, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 697, 698, 699, 701, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 728, 741, 744, 745, 746, 769, 774, 785, 786, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1026, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1067, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177], "That": [18, 19, 125, 139, 140, 141, 402, 635, 638], "alreadi": [18, 19, 76, 77, 120, 128, 131, 132, 139, 154, 402, 478, 481, 518, 521, 610, 613, 640, 643, 681, 685, 832, 888, 891, 1144], "refer": [18, 19, 69, 70, 114, 115, 120, 125, 126, 127, 132, 154, 204, 218, 219, 402, 513, 516, 573, 576, 774, 776, 779, 781, 783, 832, 930, 934, 940, 944, 1100, 1121, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1176], "approach": [18, 19, 125, 127, 131, 139, 140, 154], "colour": 18, "applic": [18, 132, 133, 141, 815, 830, 831, 1026, 1032, 1038], "good": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 141], "chanc": 18, "vscode": 18, "show": [18, 19, 76, 77, 123, 125, 134, 153, 154, 1144], "explor": [18, 19, 138, 142, 153], "troubleshoot": 18, "sometim": [18, 19, 125], "ever": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "64": [18, 49, 50, 94, 95, 125, 140, 141, 402, 660, 663, 665, 668, 815, 821, 822, 823, 824, 825, 826, 832, 888, 891, 915, 919, 1100, 1101, 1104, 1144, 1166, 1177], "bit": [18, 123, 125, 127, 131, 139, 274, 313, 314, 317, 325, 328, 402, 453, 456, 458, 461, 468, 471, 1100, 1117, 1120, 1125, 1128], "usr": 18, "more": [18, 19, 20, 23, 26, 27, 63, 64, 108, 109, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 204, 205, 206, 274, 286, 289, 402, 513, 516, 832, 860, 864, 865, 868, 915, 916, 961, 979, 982, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1144], "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 122, 123, 125, 127, 130, 131, 133, 134, 139, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 593, 596, 598, 601, 608, 609, 620, 623, 635, 638, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1048, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1109, 1112, 1133, 1134, 1137, 1144], "fix": [18, 19], "fail": [18, 20, 124, 125, 135, 137, 139], "attempt": [18, 135, 154], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 123, 125, 127, 129, 131, 132, 133, 134, 137, 139, 140, 141, 142, 152, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 274, 286, 287, 288, 290, 296, 297, 298, 300, 352, 355, 374, 375, 376, 378, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 686, 687, 688, 689, 691, 708, 709, 710, 715, 716, 717, 719, 762, 763, 764, 765, 774, 776, 777, 778, 780, 792, 793, 794, 796, 797, 799, 801, 803, 815, 822, 823, 824, 826, 828, 830, 831, 832, 833, 834, 835, 837, 878, 881, 893, 895, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1002, 1003, 1004, 1006, 1009, 1022, 1023, 1024, 1026, 1032, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1152, 1153, 1154, 1180, 1181], "proce": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "modifi": [18, 19, 122, 127, 132, 133, 135, 137], "properli": [18, 118], "enter": [18, 19, 120, 130, 132, 133, 367, 774, 814], "unsur": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "feel": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 1144], "server": [19, 1144], "appropri": [19, 71, 72, 116, 117, 125, 129, 402, 418, 421, 610, 613, 1063, 1064], "context": [19, 123, 125, 131, 132, 133, 367, 686, 739, 815, 830, 1166, 1177], "suitabl": [19, 119, 131], "quick": [19, 118, 141], "alwai": [19, 20, 45, 46, 55, 56, 76, 77, 90, 91, 100, 101, 119, 120, 122, 125, 127, 128, 130, 131, 134, 135, 137, 139, 154, 274, 281, 284, 402, 418, 421, 610, 613, 686, 732, 774, 792, 793, 794, 795, 796, 810, 961, 992, 993, 994, 995], "correct": [19, 20, 67, 68, 112, 113, 118, 120, 127, 131, 132, 133, 135, 274, 361, 961, 962, 965, 1100, 1121, 1122, 1123, 1124, 1129, 1130, 1131, 1132, 1144], "tendenc": 19, "gener": [19, 20, 21, 44, 45, 46, 59, 60, 71, 72, 76, 77, 89, 90, 91, 104, 105, 116, 117, 118, 119, 120, 122, 123, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 153, 154, 201, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 635, 638, 650, 653, 660, 663, 665, 668, 687, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 766, 767, 768, 769, 770, 771, 772, 773, 774, 792, 793, 794, 795, 796, 832, 848, 851, 961, 975, 978, 996, 999, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1144, 1182, 1186], "land": 19, "end": [19, 131, 134, 136, 153, 154, 204, 205, 206, 402, 438, 441, 1144, 1150], "world": 19, "come": [19, 20, 125, 141, 152, 1144, 1150], "fly": 19, "hard": [19, 139], "receiv": [19, 125, 132, 133, 686, 693, 738, 860, 864, 915, 916, 1166, 1176], "respons": [19, 21], "internship": 19, "comment": [19, 135], "trigger": 19, "unansw": 19, "label": [19, 53, 54, 98, 99, 137, 138, 142, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "respond": 19, "remov": [19, 20, 21, 76, 77, 122, 125, 127, 132, 134, 142, 832, 848, 851, 865, 868, 925, 929, 961, 1002, 1005, 1022, 1023, 1024], "someon": [19, 154], "els": [19, 20, 59, 60, 104, 105, 119, 121, 127, 128, 134, 137, 139, 141, 142, 154, 274, 307, 686, 696, 707, 711, 1026, 1036, 1050, 1056, 1057, 1058, 1059, 1060], "strive": [19, 125, 154], "repli": 19, "newli": [19, 125, 134, 201, 202, 274, 281, 284, 686, 697], "place": [19, 35, 36, 55, 56, 76, 77, 80, 81, 100, 101, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 133, 135, 142, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 260, 261, 265, 266, 268, 269, 271, 273, 274, 296, 299, 331, 334, 341, 344, 367, 393, 397, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 730, 731, 732, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 997, 998, 999, 1000, 1044, 1045, 1048, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137, 1182, 1183, 1184, 1185, 1186, 1187], "bug": [19, 125], "serv": [19, 120, 125, 127, 130, 131, 136, 1144], "suspect": 19, "behaviour": [19, 120, 122, 125, 126, 130, 131, 134, 139], "observ": 19, "confid": 19, "noth": [19, 76, 77], "wrong": 19, "someth": [19, 119, 140, 141, 154], "bet": 19, "act": [19, 123, 126, 154], "placehold": [19, 120, 130, 135, 1026, 1038], "sub": [19, 20, 76, 77, 96, 97, 118, 125, 126, 131, 139, 140, 141, 832, 848, 851, 961, 1001, 1022, 1023, 1024, 1025, 1144], "mark": [19, 125], "ii": [19, 1100, 1101, 1104], "iii": 19, "titl": [19, 1144], "issue_numb": 19, "delet": [19, 21], "No": [19, 137], "wait": [19, 73, 76, 77, 78, 79], "progress": [19, 131, 138, 142], "pr": 19, "soon": [19, 131, 152, 154, 1144, 1150], "partial": [19, 76, 77, 1178, 1179], "solut": [19, 125, 131, 832, 905, 908], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 35, 36, 43, 44, 88, 89, 120, 123, 124, 125, 127, 128, 129, 131, 132, 134, 137, 139, 141, 204, 226, 227, 228, 230, 686, 687, 688, 689, 690, 691], "shape": [19, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 125, 132, 133, 134, 137, 139, 140, 141, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 250, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 367, 388, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 725, 728, 741, 744, 745, 751, 759, 761, 771, 774, 776, 778, 780, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1075, 1076, 1077, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1180, 1181], "move": [19, 76, 77, 119, 367, 393, 397], "within": [19, 29, 33, 34, 125, 141, 154, 204, 205, 206, 1050, 1056, 1059], "7": [19, 21, 23, 26, 27, 41, 42, 45, 46, 53, 54, 55, 56, 59, 60, 73, 78, 79, 86, 87, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 123, 125, 127, 131, 134, 165, 171, 174, 176, 179, 274, 314, 317, 325, 328, 367, 379, 402, 403, 406, 418, 419, 420, 421, 422, 428, 430, 448, 451, 453, 456, 463, 464, 465, 466, 467, 473, 476, 478, 481, 488, 490, 491, 492, 493, 494, 496, 498, 499, 501, 508, 511, 518, 521, 523, 524, 525, 526, 527, 533, 536, 558, 561, 608, 609, 635, 638, 640, 642, 643, 644, 645, 646, 647, 648, 650, 653, 655, 658, 660, 663, 675, 679, 680, 686, 695, 704, 714, 737, 774, 776, 777, 778, 779, 780, 781, 783, 792, 793, 795, 797, 799, 815, 821, 822, 825, 831, 832, 838, 841, 843, 846, 848, 851, 888, 891, 915, 919, 920, 924, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 975, 978, 979, 982, 992, 994, 1001, 1010, 1013, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1067, 1068, 1069, 1073, 1100, 1101, 1104], "dai": 19, "close": [19, 122, 125, 402, 513, 516, 640, 643, 832, 910, 914], "likewis": [19, 120, 122, 127, 131, 132, 140], "freed": 19, "flag": [19, 45, 46, 76, 77, 90, 91, 132, 134, 139, 367, 373, 774, 792, 793, 794, 795, 796], "purpos": [19, 21, 120, 121, 123, 125, 127, 129, 130, 131, 136, 139, 402, 513, 516, 1144], "remain": [19, 55, 56, 100, 101, 123, 154, 402, 418, 421, 610, 613, 635, 638, 961, 992, 993, 994, 995, 1026, 1032], "access": [19, 21, 76, 77, 126, 132], "short": [19, 141, 815, 829], "basi": [19, 124, 140], "situat": [19, 142], "alloc": [19, 35, 36, 154, 204, 256, 258, 260, 261, 263, 265, 274, 281, 284], "upon": [19, 123, 125, 134, 154], "period": 19, "prevent": [19, 45, 46, 90, 91, 134, 135, 139, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1100, 1125, 1128, 1182, 1183, 1184], "unabl": 19, "obvious": 19, "never": [19, 55, 56, 100, 101, 125, 131, 961, 992, 993, 994, 995], "reflect": [19, 130], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 139, 142], "becaus": [19, 120, 122, 125, 126, 127, 128, 130, 132, 133, 134, 137, 141, 142, 154], "inact": 19, "limit": [19, 73, 76, 77, 78, 79, 123, 125, 135, 137, 140, 142, 154, 274, 314, 317, 325, 328, 686, 698, 699, 701, 961, 962, 965], "me": 19, "unfairli": 19, "definit": [19, 51, 52, 96, 97, 127, 132, 139, 832, 833, 834, 835, 836, 837, 838, 841], "investig": 19, "Then": [19, 21, 121, 126, 139, 154], "practic": 19, "separ": [19, 125, 130, 131, 135, 137, 139, 140], "branch": [19, 131, 154, 201, 202, 402, 438, 441], "simpli": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 122, 123, 125, 126, 127, 130, 131, 133, 134, 137, 141, 142, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 286, 287, 288, 290, 296, 297, 298, 300, 374, 375, 376, 378, 393, 394, 395, 396, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 762, 763, 764, 765, 776, 777, 778, 780, 792, 793, 794, 796, 822, 823, 824, 826, 833, 834, 835, 837, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1002, 1003, 1004, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143], "role": [19, 126, 138], "kept": [19, 73, 76, 77, 78, 79, 134, 1022, 1023, 1024], "date": 19, "upstream": [19, 124], "complic": [19, 137], "root": [19, 21, 41, 42, 86, 87, 140, 402, 660, 661, 662, 663, 664, 1050, 1051, 1055, 1182, 1183, 1184, 1185, 1187], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1100, 1117, 1120, 1125, 1128], "clone": [19, 21, 76, 77], "push": [19, 124, 135], "both": [19, 120, 121, 122, 123, 125, 126, 127, 131, 133, 134, 137, 139, 140, 141, 142, 153, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 351, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 630, 633, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 714, 774, 776, 779, 815, 818, 822, 825, 831, 832, 833, 836, 838, 841, 848, 851, 860, 864, 865, 868, 915, 916, 930, 934, 961, 996, 999, 1044, 1045, 1048, 1068, 1074, 1078, 1100, 1105, 1108, 1133, 1134, 1137], "abort": 19, "tediou": 19, "resolut": [19, 274, 314, 317], "stash": 19, "reinstat": 19, "correspond": [19, 37, 38, 41, 42, 55, 56, 73, 76, 77, 78, 79, 82, 83, 86, 87, 100, 101, 120, 122, 123, 124, 125, 127, 130, 131, 132, 274, 286, 287, 288, 289, 290, 402, 438, 439, 440, 441, 442, 630, 631, 633, 832, 838, 841, 853, 856, 905, 908, 961, 967, 970, 996, 997, 998, 999, 1000, 1050, 1051, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 122, 126, 131, 139], "atlassian": 19, "tutori": [19, 126], "wrote": 19, "piec": [19, 127, 129, 130, 137], "inform": [19, 125, 131, 135, 274, 314, 317, 325, 328, 686, 692, 774, 810], "tag": 19, "describ": [19, 125, 138, 142, 1100, 1101, 1104, 1117, 1120, 1121, 1124, 1125, 1128], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1144], "eg": [19, 125], "16": [19, 51, 52, 86, 87, 104, 105, 123, 125, 140, 274, 325, 328, 402, 675, 676, 678, 679, 815, 821, 822, 825, 832, 833, 834, 836, 848, 851, 888, 891, 915, 919, 1050, 1052, 1054, 1056, 1058, 1059, 1060, 1063, 1067, 1100, 1101, 1104], "5": [19, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 51, 52, 55, 56, 57, 58, 59, 60, 73, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 120, 123, 125, 128, 139, 140, 141, 165, 171, 174, 176, 179, 186, 189, 196, 197, 199, 204, 227, 228, 229, 230, 231, 238, 241, 251, 254, 266, 268, 269, 273, 274, 286, 287, 288, 289, 290, 296, 298, 299, 300, 308, 311, 314, 317, 341, 344, 367, 386, 390, 402, 403, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 438, 439, 440, 441, 442, 443, 446, 448, 451, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 488, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 513, 514, 515, 516, 518, 519, 520, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 687, 688, 695, 704, 714, 715, 718, 719, 737, 760, 774, 776, 778, 779, 780, 792, 795, 815, 818, 820, 821, 822, 825, 831, 832, 833, 834, 836, 838, 841, 843, 846, 848, 851, 860, 863, 888, 891, 915, 919, 920, 924, 925, 929, 945, 956, 959, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 987, 989, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1005, 1010, 1013, 1026, 1029, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1137, 1166, 1177], "past": 19, "l": [19, 51, 52, 96, 97, 118, 832, 833, 834, 835, 836, 837, 853, 856, 865, 868, 925, 929], "filepath": [19, 76, 77], "grep": 19, "v": [19, 137, 140, 141, 142, 815, 831, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1186, 1188, 1189], "commit_id": 19, "handi": [19, 125], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 123], "previou": [19, 120, 125, 126, 142, 154, 274, 365, 686, 769, 770, 771, 774, 781, 783, 797, 799], "shown": [19, 71, 72, 76, 77, 116, 117, 120, 121, 123, 125, 126, 135, 137, 139, 154, 402, 438, 441, 448, 451, 473, 476, 488, 491, 640, 643, 680, 832, 843, 846, 961, 975, 978, 979, 982, 1068, 1069, 1073, 1089, 1090, 1093], "whenev": [19, 125, 139, 140], "think": [19, 123], "gain": [19, 136, 141, 1157], "quit": [19, 20, 122, 125, 127, 129, 130], "repeat": [19, 55, 56, 76, 77, 100, 101, 122, 123, 125, 128, 130, 131, 132, 135, 686, 710, 961, 991, 1014, 1017], "yourself": [19, 20, 125, 153], "simpler": [19, 139], "cannot": [19, 121, 126, 128, 132, 142], "least": [19, 123, 125, 127, 130, 832, 865, 868], "final": [19, 122, 123, 127, 130, 132, 134, 135, 137, 139, 140, 204, 232, 233, 235, 236, 686, 713, 1166, 1177], "tickbox": 19, "lower": [19, 35, 36, 51, 52, 59, 60, 76, 77, 96, 97, 104, 105, 123, 125, 137, 154, 204, 218, 219, 256, 258, 260, 402, 608, 832, 833, 834, 835, 836, 837, 1050, 1056, 1057, 1058, 1059, 1060], "corner": 19, "without": [19, 76, 77, 119, 120, 121, 123, 126, 127, 130, 131, 133, 135, 137, 139, 140, 141, 153, 154, 686, 743, 750, 961, 992, 995, 1026, 1028, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "span": 19, "intent": [19, 134], "larg": [19, 140, 402, 418, 421, 610, 613], "discourag": 19, "philosophi": 19, "increment": [19, 686, 731], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1144], "wast": 19, "spot": [19, 127], "mistak": [19, 135], "propos": 19, "mountain": 19, "around": [19, 73, 76, 77, 78, 79, 120, 127, 130, 139, 154], "advoc": [19, 154], "individu": [19, 20, 127], "per": [19, 49, 50, 94, 95, 125, 140, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "style": [19, 1063, 1066], "ve": [19, 136, 139, 1050, 1051, 1144], "were": [19, 76, 77, 119, 125, 131, 135], "actual": [19, 118, 127, 134, 136, 139, 141, 154], "aim": [19, 136], "part": [19, 35, 36, 119, 124, 125, 127, 137, 138, 142, 153, 154, 204, 256, 258, 260, 261, 263, 265, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1178, 1179], "subsect": 19, "session": [19, 1144], "block": [19, 125, 127, 135, 136, 138, 142, 154, 367, 774, 814, 1144], "smaller": [19, 55, 56, 100, 101, 137, 142, 961, 962, 965, 996, 997, 998, 999, 1000, 1100, 1117, 1120, 1125, 1128], "edit": 19, "exact": [19, 74, 75, 76, 77, 137, 166, 168, 170, 1068, 1069, 1073], "beauti": 19, "particularli": [19, 125, 140, 154], "concern": [19, 118, 123, 131, 134, 136], "effici": [19, 120, 125, 127, 131, 134, 135, 137, 140, 154], "difficult": [19, 125, 154, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "undo": 19, "stress": 19, "frequenc": [19, 686, 713], "advantag": 19, "nifti": 19, "reassur": 19, "isol": 19, "bash": [19, 21], "shell": 19, "rm": 19, "structur": [19, 21, 73, 76, 77, 78, 79, 119, 127, 130, 131, 140, 141, 686, 702, 1026, 1039], "fact": [19, 125, 140], "mount": 19, "local_path_to_ivi": 19, "overwrit": [19, 76, 77, 134, 137, 367, 392], "subfold": [19, 119, 125], "insid": [19, 21, 119, 125, 131, 132], "wide": [19, 125], "via": [19, 119, 131, 132, 133, 134, 137, 139, 140, 153, 1026, 1027, 1036, 1037], "dep": 19, "fresh": 19, "copi": [19, 21, 35, 36, 37, 38, 43, 44, 55, 56, 76, 77, 80, 81, 82, 83, 88, 89, 100, 101, 122, 128, 132, 137, 139, 140, 153, 154, 204, 208, 209, 210, 211, 221, 224, 274, 281, 282, 283, 284, 285, 367, 393, 397, 686, 703, 762, 763, 764, 765, 766, 767, 961, 992, 993, 994, 995, 1026, 1028, 1089, 1095, 1098], "arsen": 19, "pycharm": 19, "pytest": [19, 125], "button": 19, "declar": [19, 860, 864, 915, 916], "exec": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "test_ivi": [19, 125], "test_funct": [19, 125], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 76, 77, 82, 83, 125, 274, 302, 303, 304, 306, 358, 359, 686, 702, 706, 726, 774, 809], "q": [19, 154, 815, 831, 832, 853, 856, 896, 899], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "variou": [19, 120, 122, 129, 153], "valu": [19, 23, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 55, 56, 57, 58, 59, 60, 63, 64, 73, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 120, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 142, 154, 196, 197, 198, 199, 204, 205, 206, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 274, 281, 284, 302, 303, 304, 306, 367, 391, 392, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 418, 421, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 439, 440, 442, 478, 481, 493, 494, 495, 497, 498, 501, 503, 506, 508, 510, 512, 513, 515, 517, 518, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 603, 604, 608, 609, 610, 611, 612, 613, 614, 620, 623, 625, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 643, 660, 661, 662, 664, 665, 666, 667, 669, 670, 672, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 702, 707, 713, 714, 715, 716, 717, 718, 719, 726, 729, 733, 743, 744, 745, 747, 748, 750, 773, 774, 776, 777, 778, 779, 780, 781, 783, 785, 786, 797, 799, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 831, 832, 878, 881, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 935, 939, 961, 962, 963, 964, 965, 966, 971, 972, 973, 974, 987, 990, 992, 993, 994, 995, 1018, 1020, 1021, 1022, 1023, 1024, 1026, 1030, 1031, 1032, 1033, 1034, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186], "cpu": [19, 43, 44, 59, 60, 76, 77, 88, 89, 104, 105, 133, 154, 204, 232, 233, 235, 236, 269, 273, 367, 373, 374, 377, 379, 384, 387, 389, 390, 393, 397, 398, 400, 401, 686, 714, 715, 716, 717, 718, 719, 741, 744, 745, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "gpu": [19, 104, 105, 133, 139, 154, 367, 373, 379, 383, 385, 389, 390, 391, 398, 400, 1052, 1054], "combin": [19, 73, 76, 77, 78, 79, 123, 125, 127, 130, 131, 142, 832, 838, 841], "wherebi": [20, 131, 1026, 1038], "broad": 20, "distribut": [20, 53, 54, 59, 60, 76, 77, 98, 99, 104, 105, 125, 133, 154, 815, 827, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1166, 1174, 1178, 1179], "across": [20, 76, 77, 96, 97, 120, 123, 125, 127, 131, 132, 367, 390, 391, 686, 694, 695, 1026, 1032, 1063, 1065], "todo": 20, "commit": [20, 125], "NOT": [20, 402, 593, 596], "static": [20, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 122, 123, 127, 154, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 195, 196, 197, 201, 202, 227, 231, 286, 290, 296, 300, 374, 378, 402, 403, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 516, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 602, 603, 607, 610, 614, 615, 619, 620, 624, 625, 629, 630, 634, 635, 639, 640, 644, 645, 649, 650, 654, 660, 664, 665, 669, 670, 671, 675, 676, 681, 682, 687, 691, 715, 719, 762, 763, 792, 796, 822, 826, 833, 837, 860, 864, 915, 916, 946, 950, 951, 955, 956, 960, 962, 966, 987, 991, 992, 994, 996, 1000, 1045, 1049, 1052, 1054, 1056, 1060, 1074, 1075, 1134, 1138, 1139, 1143], "method": [20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 130, 135, 137, 138, 141, 142, 154, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 208, 209, 213, 214, 221, 222, 224, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 273, 274, 286, 287, 288, 290, 296, 297, 298, 300, 308, 311, 314, 317, 325, 328, 374, 375, 376, 378, 393, 394, 395, 396, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 702, 703, 714, 715, 716, 717, 719, 744, 745, 760, 762, 763, 764, 765, 766, 767, 774, 776, 777, 778, 780, 792, 793, 794, 796, 797, 799, 801, 803, 814, 815, 821, 822, 823, 824, 826, 831, 832, 833, 834, 835, 837, 838, 841, 843, 846, 860, 864, 915, 916, 919, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 964, 966, 975, 978, 979, 982, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1010, 1013, 1026, 1027, 1037, 1038, 1039, 1045, 1046, 1047, 1049, 1050, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1166, 1177, 1178, 1179], "instanc": [20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 122, 123, 125, 126, 127, 130, 132, 134, 140, 141, 142, 155, 163, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 241, 243, 244, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 286, 287, 288, 296, 297, 298, 299, 308, 311, 314, 317, 325, 328, 331, 334, 341, 344, 367, 374, 375, 376, 389, 393, 394, 395, 396, 402, 403, 404, 405, 406, 408, 409, 410, 413, 414, 415, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 488, 489, 490, 491, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 553, 554, 555, 558, 559, 560, 561, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 598, 599, 600, 603, 604, 605, 608, 609, 610, 611, 612, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 672, 673, 675, 677, 678, 679, 680, 681, 683, 684, 686, 687, 688, 689, 703, 714, 715, 716, 717, 732, 751, 760, 762, 764, 765, 766, 767, 776, 777, 778, 780, 792, 793, 794, 815, 818, 821, 822, 823, 824, 825, 831, 832, 833, 834, 835, 836, 838, 841, 843, 846, 848, 851, 860, 864, 915, 916, 919, 945, 946, 947, 948, 949, 951, 952, 953, 956, 957, 958, 961, 962, 963, 964, 975, 978, 979, 982, 987, 988, 989, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1010, 1013, 1044, 1045, 1046, 1047, 1048, 1050, 1055, 1056, 1057, 1058, 1059, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1155, 1156], "revers": [20, 23, 26, 27, 73, 78, 79, 122, 123, 142, 154, 686, 707, 961, 979, 982], "resourc": 20, "content": [20, 21, 76, 77, 126, 134, 137, 140], "thei": [20, 76, 77, 118, 119, 123, 125, 127, 129, 131, 132, 133, 134, 135, 139, 140, 141, 142, 154, 274, 351, 1022, 1023, 1024, 1050, 1051, 1144, 1188, 1189], "hypothesi": 20, "cover": [20, 122, 123, 125, 127, 129, 136], "lambda": [20, 137, 140, 1182, 1185, 1187], "direct": [20, 126, 141, 142, 153, 1089, 1095, 1098], "bind": [20, 131], "special": [20, 23, 26, 27, 73, 78, 79, 119, 120, 122, 123, 130, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 473, 476, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132], "aforement": 20, "categori": [20, 119, 126, 130, 131, 132, 136, 1144], "parent": [20, 139, 774, 814], "arraywithelementwis": [20, 23, 26, 27, 41, 130], "containerwithmanipul": [20, 73, 78, 79, 100], "hint": [20, 119, 120, 122, 127, 130, 134, 135, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1048, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137], "its": [20, 21, 37, 38, 55, 56, 82, 83, 100, 101, 121, 122, 125, 126, 135, 142, 274, 286, 287, 288, 289, 290, 367, 392, 686, 761, 832, 865, 868, 961, 975, 978, 992, 995, 996, 997, 998, 999, 1000, 1010, 1013], "docstr": [20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 127, 131, 135, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 241, 243, 244, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 286, 287, 288, 290, 296, 297, 298, 299, 300, 314, 317, 325, 328, 374, 375, 376, 378, 393, 394, 395, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 762, 763, 764, 765, 776, 777, 778, 780, 792, 793, 794, 796, 822, 823, 824, 826, 832, 833, 834, 835, 837, 843, 846, 848, 851, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 964, 966, 975, 978, 979, 982, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143], "thorough": [20, 120, 122, 125], "transpil": [20, 126, 136, 138, 1144, 1150], "builder": [21, 152, 154, 1144], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 55, 56, 80, 81, 100, 101, 227, 229, 231, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 832, 848, 851, 878, 881, 893, 895, 925, 929, 961, 979, 982, 996, 997, 998, 999, 1000, 1089, 1090, 1093, 1095, 1098, 1144], "synchron": 21, "rest": [21, 138, 142], "remove_doc": 21, "_": [21, 41, 42, 86, 87, 122, 125, 131, 134, 139, 140, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 514, 515, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 774, 776, 779, 781, 783, 832, 848, 851, 915, 919, 940, 944, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1089, 1090, 1093, 1100, 1105, 1108], "indic": [21, 43, 44, 49, 50, 55, 56, 57, 58, 76, 77, 88, 89, 94, 95, 100, 101, 102, 103, 126, 135, 138, 142, 165, 186, 189, 204, 208, 210, 402, 645, 648, 686, 714, 715, 716, 717, 718, 719, 728, 741, 744, 745, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 832, 935, 939, 961, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1026, 1027, 1029, 1031, 1033, 1034, 1035, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1079, 1083, 1089, 1090, 1093, 1095, 1098, 1144, 1147, 1149, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1178, 1179], "privat": [21, 125, 1182, 1186], "fulfil": [21, 136, 1144], "autogenerated_sourc": 21, "format": [21, 76, 77, 118, 122, 132, 133, 137, 139, 140, 274, 308, 311, 367, 374, 377, 1100, 1101, 1104, 1144], "png": [21, 140], "_imag": 21, "lastli": 21, "rst": 21, "skip": [21, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 762, 763, 765, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1026, 1039, 1045, 1047, 1049, 1056, 1058, 1060, 1074, 1075, 1077, 1134, 1136, 1138, 1139, 1141, 1143], "read": [21, 76, 77, 1144], "partial_sourc": 21, "conf": 21, "create_rst_fil": 21, "filter": [21, 49, 50, 94, 95, 125, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "repres": [21, 41, 42, 86, 87, 125, 139, 196, 197, 198, 199, 204, 238, 241, 274, 313, 402, 413, 414, 415, 416, 417, 418, 421, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 488, 489, 490, 491, 492, 610, 613, 655, 656, 657, 658, 659, 680, 774, 814, 815, 828, 832, 901, 903, 905, 908], "overal": [21, 122, 131, 132, 133, 142], "markup": 21, "6": [21, 23, 26, 27, 35, 36, 41, 42, 45, 46, 55, 56, 73, 78, 79, 80, 81, 86, 87, 88, 89, 98, 99, 100, 101, 102, 103, 104, 105, 123, 125, 128, 131, 139, 140, 141, 165, 171, 174, 176, 179, 186, 189, 204, 227, 228, 229, 230, 231, 269, 273, 274, 286, 289, 308, 311, 314, 317, 367, 386, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 431, 438, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 473, 476, 478, 479, 480, 481, 483, 485, 486, 487, 488, 491, 493, 495, 496, 497, 498, 499, 500, 501, 513, 515, 518, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 635, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 660, 663, 665, 668, 675, 679, 680, 686, 695, 704, 714, 715, 718, 719, 737, 760, 774, 776, 777, 779, 815, 818, 821, 822, 825, 831, 832, 838, 841, 843, 846, 848, 851, 888, 891, 910, 914, 915, 919, 920, 924, 945, 946, 948, 949, 950, 951, 953, 955, 956, 958, 959, 960, 961, 962, 963, 965, 967, 970, 975, 978, 979, 982, 987, 990, 992, 994, 995, 996, 999, 1001, 1002, 1005, 1010, 1013, 1026, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1059, 1060, 1063, 1064, 1067, 1068, 1069, 1073, 1074, 1078, 1100, 1101, 1104, 1105, 1108, 1117, 1120], "extract": [21, 119, 121], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 154], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 76, 77, 125, 137, 140, 402, 458, 461, 832, 848, 851, 865, 868], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 41, 42, 45, 46, 55, 56, 59, 60, 73, 78, 79, 86, 87, 90, 91, 100, 101, 104, 105, 123, 125, 140, 141, 274, 307, 314, 317, 325, 328, 402, 418, 419, 420, 421, 422, 428, 431, 448, 451, 453, 456, 493, 494, 495, 496, 497, 498, 499, 500, 501, 523, 525, 526, 527, 608, 609, 640, 642, 643, 644, 645, 648, 660, 663, 665, 668, 686, 714, 737, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 792, 795, 797, 798, 799, 800, 815, 818, 821, 822, 825, 832, 838, 841, 843, 846, 848, 851, 888, 891, 910, 914, 915, 919, 920, 924, 961, 962, 963, 965, 979, 982, 992, 994, 996, 999, 1001, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1067, 1068, 1069, 1073, 1100, 1101, 1104, 1182, 1183, 1184], "index": [21, 35, 36, 43, 44, 63, 64, 76, 77, 80, 81, 88, 89, 108, 109, 127, 131, 139, 203, 204, 218, 219, 238, 239, 240, 241, 242, 367, 389, 686, 692, 714, 715, 716, 717, 718, 719, 961, 1006, 1009, 1026, 1029, 1030, 1033, 1034, 1035, 1040, 1042, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1147, 1149], "create_index_rst": 21, "14": [21, 41, 42, 59, 60, 86, 87, 102, 103, 104, 105, 123, 125, 131, 274, 314, 317, 325, 328, 402, 428, 431, 438, 439, 440, 441, 442, 473, 476, 645, 649, 655, 657, 659, 774, 776, 779, 815, 831, 832, 848, 851, 888, 891, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1057, 1059, 1068, 1069, 1073, 1100, 1101, 1104], "\u03c0": [21, 402, 408, 411, 423, 426, 433, 436, 438, 441], "namespac": [21, 119, 132, 137, 142], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 35], "arraywithdatatyp": [23, 26, 27, 37], "arraywithdevic": [23, 26, 27, 39, 139], "arraywithgener": [23, 26, 27, 43, 139], "arraywithgradi": [23, 26, 27, 45, 139], "arraywithimag": [23, 26, 27, 47, 139], "arraywithlay": [23, 26, 27, 49], "arraywithlinearalgebra": [23, 26, 27, 51], "arraywithloss": [23, 26, 27, 53], "arraywithmanipul": [23, 26, 27, 55], "arraywithnorm": [23, 26, 27, 57], "arraywithrandom": [23, 26, 27, 59, 139], "arraywithsearch": [23, 26, 27, 61], "arraywithset": [23, 26, 27, 63], "arraywithsort": [23, 26, 27, 65], "arraywithstatist": [23, 26, 27, 67], "arraywithutil": [23, 26, 27, 69], "properti": [23, 26, 27, 76, 77, 123, 125, 127, 131, 139, 140, 141, 1178, 1179, 1182, 1183, 1184, 1185, 1187], "__add__": [23, 26, 27, 73, 78, 79, 120, 122, 123, 130, 131, 139], "variant": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 122, 123, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 286, 287, 288, 290, 296, 297, 298, 300, 374, 375, 376, 378, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 762, 763, 764, 765, 776, 777, 778, 780, 792, 793, 794, 796, 822, 823, 824, 826, 833, 834, 835, 837, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1002, 1003, 1004, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143], "wrap": [23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 117, 118, 120, 122, 125, 127, 128, 130, 131, 132, 133, 134, 137, 139, 142, 154, 155, 163, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 286, 287, 288, 290, 296, 297, 298, 300, 374, 375, 376, 378, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 686, 687, 688, 689, 691, 697, 715, 716, 717, 719, 762, 763, 764, 765, 774, 776, 777, 778, 780, 792, 793, 794, 796, 813, 822, 823, 824, 826, 833, 834, 835, 837, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1002, 1003, 1004, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143], "minim": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 122, 134, 137, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 286, 287, 288, 290, 296, 297, 298, 300, 374, 375, 376, 378, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 762, 763, 764, 765, 776, 777, 778, 780, 792, 793, 794, 796, 822, 823, 824, 826, 833, 834, 835, 837, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 962, 963, 964, 966, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1002, 1003, 1004, 1045, 1046, 1047, 1049, 1052, 1054, 1056, 1057, 1058, 1060, 1074, 1075, 1076, 1077, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143], "self": [23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 130, 131, 137, 139, 140, 141, 142, 166, 167, 168, 171, 172, 173, 176, 177, 178, 181, 182, 183, 186, 187, 188, 191, 192, 193, 196, 198, 199, 208, 209, 213, 214, 215, 221, 222, 223, 227, 228, 229, 231, 238, 239, 240, 243, 244, 245, 251, 252, 253, 256, 258, 259, 261, 263, 264, 269, 271, 272, 281, 282, 283, 286, 287, 288, 291, 292, 293, 296, 297, 298, 308, 309, 310, 314, 315, 316, 325, 326, 327, 331, 332, 333, 336, 337, 338, 341, 342, 343, 346, 347, 348, 352, 353, 354, 367, 374, 375, 376, 393, 395, 396, 403, 404, 405, 408, 409, 410, 413, 414, 415, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 439, 440, 443, 444, 445, 448, 449, 450, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 523, 524, 525, 528, 529, 530, 533, 534, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 554, 555, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 598, 599, 600, 603, 604, 605, 610, 611, 612, 615, 616, 617, 620, 621, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 645, 646, 647, 650, 651, 652, 655, 656, 657, 660, 661, 662, 665, 666, 667, 670, 672, 673, 675, 677, 678, 681, 683, 684, 687, 688, 689, 699, 700, 715, 716, 717, 762, 763, 764, 765, 776, 777, 778, 781, 782, 788, 789, 792, 793, 794, 797, 798, 801, 802, 805, 806, 822, 823, 824, 833, 834, 835, 837, 838, 839, 840, 843, 844, 845, 848, 849, 850, 853, 854, 855, 857, 858, 860, 861, 862, 865, 866, 867, 869, 870, 871, 874, 875, 878, 879, 880, 883, 884, 885, 888, 889, 890, 893, 894, 896, 897, 898, 901, 902, 905, 906, 907, 910, 912, 913, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 938, 940, 942, 943, 946, 947, 948, 951, 952, 953, 956, 957, 958, 962, 963, 964, 967, 968, 969, 971, 972, 973, 975, 976, 977, 979, 980, 981, 983, 984, 985, 987, 988, 989, 992, 993, 994, 996, 997, 998, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1045, 1046, 1047, 1056, 1057, 1058, 1069, 1071, 1072, 1074, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1090, 1091, 1092, 1095, 1096, 1097, 1101, 1102, 1103, 1105, 1106, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1182, 1186], "input": [23, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 155, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 317, 325, 328, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 355, 357, 361, 366, 367, 373, 374, 377, 386, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 727, 728, 730, 731, 732, 734, 735, 736, 737, 741, 744, 745, 746, 749, 753, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 772, 773, 774, 776, 777, 778, 779, 780, 785, 786, 792, 793, 794, 795, 796, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1181], "numer": [23, 26, 27, 41, 42, 59, 60, 73, 78, 79, 86, 87, 104, 105, 119, 141, 204, 238, 241, 274, 281, 284, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 478, 479, 480, 481, 482, 493, 496, 513, 516, 518, 519, 520, 521, 522, 523, 526, 538, 541, 543, 546, 548, 551, 553, 556, 593, 596, 598, 601, 610, 613, 615, 616, 617, 618, 619, 620, 623, 625, 626, 627, 629, 630, 633, 635, 638, 640, 641, 642, 644, 645, 646, 647, 648, 649, 665, 668, 670, 671, 673, 674, 681, 685, 686, 722, 723, 747, 748, 755, 756, 832, 838, 841, 865, 868, 888, 891, 910, 914, 920, 924, 925, 929, 930, 934, 1050, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1100, 1105, 1108, 1117, 1120, 1125, 1128, 1157], "broadcast": [23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 122, 123, 125, 131, 132, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 367, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1067, 1068, 1084, 1088, 1089, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "element": [23, 26, 27, 35, 36, 41, 42, 43, 44, 55, 56, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 108, 109, 122, 125, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 226, 227, 228, 229, 230, 231, 256, 258, 260, 261, 263, 265, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 694, 695, 698, 699, 701, 704, 705, 712, 728, 762, 763, 764, 765, 766, 767, 774, 814, 815, 827, 832, 838, 841, 853, 856, 865, 868, 896, 899, 910, 914, 961, 962, 963, 964, 965, 966, 979, 982, 987, 990, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1026, 1029, 1050, 1051, 1063, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1137, 1139, 1142, 1166, 1174], "wise": [23, 26, 27, 41, 42, 73, 74, 75, 76, 77, 78, 79, 86, 87, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 200, 402, 403, 406, 408, 411, 418, 419, 420, 421, 422, 423, 426, 433, 436, 438, 441, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 686, 712, 961, 962, 965, 1182, 1185], "sum": [23, 26, 27, 41, 42, 67, 68, 73, 76, 77, 78, 79, 86, 87, 112, 113, 127, 131, 132, 134, 137, 367, 392, 402, 418, 419, 420, 421, 422, 583, 586, 670, 671, 673, 686, 705, 709, 744, 745, 815, 831, 832, 910, 914, 925, 929, 935, 939, 1100, 1101, 1104, 1121, 1124], "promot": [23, 26, 27, 37, 38, 41, 42, 51, 52, 73, 78, 79, 82, 83, 86, 87, 96, 97, 122, 127, 132, 196, 197, 198, 199, 274, 281, 284, 296, 297, 298, 299, 300, 351, 352, 355, 361, 402, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 510, 511, 512, 513, 515, 516, 517, 523, 524, 525, 527, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 603, 606, 610, 611, 612, 613, 614, 630, 631, 632, 633, 634, 635, 636, 638, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 832, 833, 834, 835, 836, 837, 838, 841, 860, 863, 865, 868, 878, 881, 888, 891, 893, 895, 905, 908, 930, 934, 935, 939, 961, 1006, 1009, 1100, 1109, 1112], "y": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 69, 70, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 114, 115, 119, 123, 126, 128, 131, 137, 139, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 308, 311, 314, 317, 325, 328, 367, 374, 377, 382, 386, 391, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 533, 536, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 712, 714, 715, 716, 717, 718, 719, 753, 760, 762, 763, 764, 765, 766, 767, 774, 785, 786, 815, 821, 822, 823, 824, 825, 826, 828, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 860, 863, 888, 891, 915, 919, 920, 924, 925, 929, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 975, 978, 979, 982, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1010, 1013, 1026, 1029, 1042, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1074, 1075, 1076, 1077, 1078, 1089, 1090, 1093, 1100, 1101, 1104, 1105, 1108, 1121, 1124, 1125, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143], "z": [23, 26, 27, 41, 42, 43, 44, 53, 54, 59, 60, 73, 78, 79, 86, 87, 88, 89, 98, 99, 104, 105, 123, 128, 131, 137, 139, 367, 382, 402, 418, 419, 420, 421, 422, 438, 439, 440, 441, 442, 448, 451, 463, 464, 465, 466, 467, 473, 476, 533, 536, 543, 546, 558, 561, 608, 609, 686, 694, 695, 714, 715, 716, 717, 719, 753, 832, 838, 841, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 962, 965, 1026, 1029, 1042, 1050, 1056, 1057, 1058, 1059, 1063, 1064, 1100, 1101, 1104, 1105, 1108, 1117, 1120], "mix": [23, 26, 27, 37, 38, 41, 42, 43, 44, 73, 78, 79, 82, 83, 86, 87, 98, 99, 104, 105, 118, 123, 125, 137, 274, 286, 287, 288, 289, 290, 352, 355, 367, 386, 402, 418, 421, 448, 451, 463, 466, 473, 476, 493, 494, 496, 498, 499, 500, 501, 523, 524, 525, 526, 527, 533, 536, 558, 561, 620, 623, 635, 636, 637, 638, 639, 686, 687, 688, 703, 711, 714, 715, 718, 760, 762, 766, 767, 815, 818, 821, 822, 825, 831, 832, 833, 836, 920, 924, 945, 946, 949, 950, 951, 955, 956, 959, 960, 961, 962, 965, 1044, 1045, 1048, 1056, 1060, 1063, 1067, 1100, 1101, 1104, 1109, 1112], "__le__": [23, 26, 27], "equal": [23, 26, 27, 35, 36, 41, 42, 43, 44, 59, 60, 76, 77, 86, 87, 88, 89, 104, 105, 123, 131, 132, 204, 218, 219, 226, 227, 228, 230, 274, 281, 284, 402, 458, 461, 468, 471, 502, 538, 541, 543, 546, 630, 633, 640, 643, 686, 687, 688, 689, 690, 691, 694, 695, 832, 848, 851, 878, 881, 893, 895, 961, 962, 965, 971, 974, 1001, 1018, 1021, 1050, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1109, 1112, 1121, 1124, 1125, 1128, 1129, 1132], "result": [23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 122, 123, 125, 126, 130, 131, 132, 134, 140, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 281, 284, 291, 294, 352, 355, 367, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 728, 741, 744, 745, 774, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1026, 1029, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1073, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "bool": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 121, 123, 131, 132, 134, 135, 142, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 208, 210, 226, 227, 229, 231, 274, 281, 284, 286, 288, 290, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 311, 330, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 347, 349, 357, 366, 367, 373, 374, 377, 383, 384, 387, 388, 392, 399, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462, 463, 465, 466, 467, 468, 470, 472, 473, 475, 476, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 610, 612, 614, 615, 617, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 704, 707, 711, 713, 715, 717, 719, 721, 724, 725, 727, 732, 734, 735, 736, 737, 753, 754, 762, 763, 765, 772, 773, 774, 792, 793, 794, 795, 796, 810, 814, 832, 833, 834, 835, 836, 837, 869, 872, 910, 914, 935, 939, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 992, 993, 994, 995, 996, 998, 1000, 1001, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1036, 1037, 1038, 1045, 1047, 1050, 1051, 1056, 1058, 1060, 1063, 1064, 1065, 1074, 1075, 1077, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1182, 1183, 1184, 1185, 1186, 1187], "true": [23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 125, 126, 127, 131, 132, 134, 135, 137, 139, 140, 141, 142, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 233, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 274, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 295, 296, 297, 298, 299, 300, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 346, 348, 349, 350, 352, 354, 356, 366, 367, 373, 384, 388, 389, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 476, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 623, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 699, 700, 704, 711, 713, 715, 717, 719, 721, 724, 727, 728, 735, 737, 746, 749, 751, 753, 754, 760, 762, 763, 765, 767, 769, 770, 771, 773, 774, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 814, 815, 827, 832, 833, 834, 835, 836, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 865, 867, 869, 871, 872, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 912, 913, 914, 915, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 939, 940, 941, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 966, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 993, 994, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1036, 1037, 1039, 1045, 1047, 1049, 1050, 1051, 1056, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1107, 1108, 1109, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "__radd__": [23, 26, 27, 73, 78, 79, 122, 123], "adam_upd": [23, 26, 27, 90, 91, 141, 774], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "variabl": [23, 26, 27, 28, 29, 31, 32, 33, 34, 45, 46, 57, 58, 73, 76, 77, 78, 79, 90, 91, 102, 103, 120, 121, 122, 125, 128, 131, 132, 134, 135, 140, 141, 142, 154, 686, 696, 730, 731, 732, 733, 734, 735, 737, 757, 774, 781, 783, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 813, 815, 830, 832, 905, 908, 1022, 1023, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1144, 1155, 1156, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "arang": [23, 26, 27, 73, 78, 79, 132, 204, 232, 233, 235, 236, 1100, 1101, 1104, 1144], "arg_info": [23, 26, 27, 73, 78, 79, 686], "arg_nam": [23, 26, 27, 73, 78, 79, 686], "argmax": [23, 26, 27, 73, 78, 79, 1063, 1144], "argmin": [23, 26, 27, 73, 78, 79, 1063, 1144], "array_equ": [23, 26, 27, 73, 78, 79, 686], "arrays_equ": [23, 26, 27, 73, 76, 77, 78, 79, 686], "as_ivy_dev": [23, 26, 27, 73, 78, 79, 139, 367], "as_ivy_dtyp": [23, 26, 27, 73, 78, 79, 126, 274], "as_native_dev": [23, 26, 27, 73, 78, 79, 367], "as_native_dtyp": [23, 26, 27, 73, 78, 79, 274], "assert_supports_inplac": [23, 26, 27, 73, 78, 79, 686], "cache_fn": [23, 26, 27, 73, 78, 79, 127, 686], "clear_mem_on_dev": [23, 26, 27, 73, 78, 79, 367], "clip_matrix_norm": [23, 26, 27, 73, 78, 79, 686], "clip_vector_norm": [23, 26, 27, 88, 89, 686], "closest_valid_dtyp": [23, 26, 27, 73, 78, 79, 274], "container_typ": [23, 26, 27, 73, 78, 79, 686], "conv1d": [23, 26, 27, 73, 78, 79, 815, 1166], "conv1d_transpos": [23, 26, 27, 73, 78, 79, 815], "conv2d": [23, 26, 27, 73, 78, 79, 815, 1144, 1166], "conv2d_transpos": [23, 26, 27, 73, 78, 79, 815], "conv3d": [23, 26, 27, 73, 78, 79, 815, 1166], "conv3d_transpos": [23, 26, 27, 73, 78, 79, 815], "copy_arrai": [23, 26, 27, 73, 78, 79, 686], "cumprod": [23, 26, 27, 73, 78, 79, 142, 686], "cumsum": [23, 26, 27, 73, 78, 79, 686, 1144], "current_backend_str": [23, 26, 27, 73, 78, 79, 121, 686], "default_devic": [23, 26, 27, 73, 78, 79, 133, 137, 367, 386, 389, 390, 400], "default_dtyp": [23, 26, 27, 73, 78, 79, 127, 132, 274], "default_float_dtyp": [23, 26, 27, 73, 78, 79, 132, 274], "default_int_dtyp": [23, 26, 27, 73, 78, 79, 132, 274], "default_uint_dtyp": [23, 26, 27, 73, 78, 79, 274, 360, 365], "dev_util": [23, 26, 27, 73, 78, 79, 133, 367], "dropout": [23, 26, 27, 73, 78, 79, 140, 815, 1166, 1177], "dtype": [23, 26, 27, 35, 36, 37, 38, 59, 60, 67, 68, 76, 77, 80, 81, 82, 83, 88, 89, 104, 105, 112, 113, 119, 121, 123, 125, 126, 127, 132, 133, 135, 139, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 313, 314, 317, 319, 320, 322, 323, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 353, 355, 357, 358, 359, 360, 365, 366, 367, 388, 402, 468, 471, 686, 694, 695, 741, 762, 763, 765, 766, 815, 827, 961, 975, 978, 1050, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1089, 1095, 1098, 1100, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1133, 1134, 1137, 1144, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1188, 1189], "dtype_bit": [23, 26, 27, 73, 78, 79, 274], "einops_rearrang": [23, 26, 27, 76, 77, 686], "einops_reduc": [23, 26, 27, 76, 77, 686], "einops_repeat": [23, 26, 27, 76, 77, 686], "empti": [23, 26, 27, 73, 76, 77, 78, 79, 130, 132, 133, 204, 205, 206, 774, 814, 1100, 1121, 1124, 1125, 1128, 1133, 1134, 1137, 1139, 1142], "execute_with_gradi": [23, 26, 27, 73, 78, 79, 131, 140, 141, 142, 154, 774, 1144], "ey": [23, 26, 27, 73, 78, 79, 142, 204, 815, 818, 822, 825], "floormod": [23, 26, 27, 73, 78, 79, 686, 1144], "fourier_encod": [23, 26, 27, 73, 78, 79, 686], "function_supported_devic": [23, 26, 27, 73, 78, 79, 367], "function_supported_dtyp": [23, 26, 27, 73, 78, 79, 121, 274], "function_unsupported_devic": [23, 26, 27, 73, 78, 79, 367], "function_unsupported_dtyp": [23, 26, 27, 73, 78, 79, 121, 274], "gather": [23, 26, 27, 43, 44, 76, 77, 88, 89, 686, 715, 716, 717, 718, 719], "get_all_arrays_in_memori": [23, 26, 27, 73, 78, 79, 686], "get_all_ivy_arrays_on_dev": [23, 26, 27, 73, 78, 79, 133, 367], "get_array_mod": [23, 26, 27, 73, 78, 79, 686, 746, 769], "get_min_bas": [23, 26, 27, 73, 78, 79, 686], "get_min_denomin": [23, 26, 27, 73, 78, 79, 686], "get_nestable_mod": [23, 26, 27, 73, 78, 79, 686, 749, 770], "get_num_dim": [23, 26, 27, 73, 78, 79, 686, 1144], "get_referrers_recurs": [23, 26, 27, 73, 78, 79, 686], "gpu_is_avail": [23, 26, 27, 73, 78, 79, 367], "gradient_descent_upd": [23, 26, 27, 90, 91, 774, 1022, 1023, 1024, 1025, 1144], "handle_nest": [23, 26, 27, 73, 78, 79, 127, 131, 155], "handle_out_argu": [23, 26, 27, 73, 78, 79, 120, 129, 132, 133, 134, 155], "has_nan": [23, 26, 27, 76, 77, 686], "indices_wher": [23, 26, 27, 73, 78, 79, 135, 686, 1144], "infer_devic": [23, 26, 27, 73, 78, 79, 120, 132, 133, 155], "infer_dtyp": [23, 26, 27, 73, 78, 79, 120, 132, 133, 155], "inplace_arrays_support": [23, 26, 27, 73, 78, 79, 686], "inplace_decr": [23, 26, 27, 73, 78, 79, 686], "inplace_incr": [23, 26, 27, 73, 78, 79, 686], "inplace_upd": [23, 26, 27, 76, 77, 134, 686, 1155, 1156], "inplace_variables_support": [23, 26, 27, 73, 78, 79, 686], "inputs_to_native_arrai": [23, 26, 27, 73, 78, 79, 130, 155], "invalid_dtyp": [23, 26, 27, 73, 78, 79, 121, 132, 274], "is_arrai": [23, 26, 27, 126, 686], "is_ivy_arrai": [23, 26, 27, 134, 139, 686], "is_ivy_contain": [23, 26, 27, 73, 78, 79, 686], "is_native_arrai": [23, 26, 27, 139, 686], "is_vari": [23, 26, 27, 45, 46, 90, 91, 134, 774, 796], "boolean": [23, 26, 27, 41, 42, 43, 44, 45, 46, 55, 56, 76, 77, 86, 87, 88, 89, 90, 91, 100, 101, 125, 131, 204, 208, 210, 226, 274, 281, 284, 330, 366, 367, 383, 399, 402, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 686, 687, 688, 689, 690, 691, 694, 695, 727, 728, 729, 733, 734, 735, 736, 737, 746, 749, 751, 757, 773, 774, 792, 793, 794, 795, 796, 814, 961, 992, 993, 994, 995, 1022, 1023, 1024, 1026, 1036, 1100, 1113, 1116], "trainabl": [23, 26, 27, 45, 46, 90, 91, 122, 138, 140, 141, 774, 792, 793, 794, 795, 796, 1155, 1156, 1178, 1179, 1188], "lamb_upd": [23, 26, 27, 90, 91, 774], "lars_upd": [23, 26, 27, 90, 91, 774], "linear": [23, 26, 27, 73, 74, 75, 78, 79, 122, 137, 140, 141, 142, 165, 166, 169, 171, 174, 176, 178, 179, 180, 686, 713, 815, 827, 905, 908, 1144, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "linspac": [23, 26, 27, 73, 78, 79, 137, 204, 205, 206, 1144], "logspac": [23, 26, 27, 73, 78, 79, 137, 204], "lstm_updat": [23, 26, 27, 73, 78, 79, 137, 815], "mt": [23, 26, 27, 139], "match_kwarg": [23, 26, 27, 73, 78, 79, 686], "matrix_pow": [23, 26, 27, 96, 97, 832], "maximum": [23, 26, 27, 55, 56, 73, 76, 77, 78, 79, 100, 101, 123, 137, 140, 142, 367, 392, 402, 686, 698, 699, 701, 713, 774, 797, 799, 961, 962, 963, 964, 965, 966, 1026, 1038, 1063, 1064, 1100, 1105, 1108, 1113, 1116, 1144], "minimum": [23, 26, 27, 55, 56, 76, 77, 100, 101, 137, 142, 402, 403, 406, 686, 722, 723, 747, 748, 755, 756, 961, 962, 963, 964, 965, 966, 1063, 1065, 1100, 1105, 1108, 1113, 1116, 1144], "multi_head_attent": [23, 26, 27, 73, 78, 79, 131, 134, 815], "multinomi": [23, 26, 27, 73, 78, 79, 1050], "multiprocess": [23, 26, 27, 73, 76, 77, 78, 79, 140, 154, 686], "ndim": [23, 26, 27, 125, 139, 832, 896, 899, 910, 914], "dimens": [23, 26, 27, 35, 36, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 114, 115, 123, 125, 126, 137, 140, 165, 186, 189, 204, 256, 258, 260, 261, 263, 265, 686, 708, 709, 710, 713, 725, 741, 772, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929, 930, 934, 935, 939, 945, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 967, 970, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1022, 1023, 1024, 1025, 1050, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1177], "ax": [23, 26, 27, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 96, 97, 100, 101, 114, 115, 119, 123, 125, 132, 139, 186, 188, 190, 367, 392, 686, 704, 832, 869, 872, 905, 908, 920, 921, 922, 923, 924, 935, 939, 961, 971, 974, 979, 982, 983, 984, 985, 986, 996, 997, 998, 999, 1000, 1002, 1005, 1010, 1013, 1018, 1021, 1063, 1064, 1065, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "nonzero": [23, 26, 27, 73, 78, 79, 402, 418, 421, 610, 613, 1063], "num_arrays_in_memori": [23, 26, 27, 73, 78, 79, 686], "num_cpu_cor": [23, 26, 27, 73, 78, 79, 133, 367], "num_gpu": [23, 26, 27, 73, 78, 79, 125, 133, 367], "num_ivy_arrays_on_dev": [23, 26, 27, 73, 78, 79, 367], "one_hot": [23, 26, 27, 73, 78, 79, 142, 686, 1144], "ones": [23, 26, 27, 35, 36, 59, 60, 73, 76, 77, 78, 79, 104, 105, 125, 137, 139, 140, 204, 218, 219, 227, 228, 230, 251, 252, 254, 269, 273, 402, 478, 481, 686, 741, 1050, 1056, 1057, 1058, 1059, 1144], "optimizer_upd": [23, 26, 27, 90, 91, 774], "outputs_to_ivy_arrai": [23, 26, 27, 73, 78, 79, 120, 130, 132, 133, 155], "percent_used_mem_on_dev": [23, 26, 27, 73, 78, 79, 367], "print_all_arrays_in_memori": [23, 26, 27, 73, 78, 79, 686], "print_all_ivy_arrays_on_dev": [23, 26, 27, 73, 78, 79, 367], "promote_typ": [23, 26, 27, 73, 78, 79, 274], "queue_timeout": [23, 26, 27, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 686], "randint": [23, 26, 27, 49, 50, 73, 78, 79, 94, 95, 104, 105, 822, 823, 824, 826, 1050, 1054, 1144], "random_norm": [23, 26, 27, 49, 50, 73, 78, 79, 94, 95, 125, 815, 818, 821, 822, 823, 824, 825, 826, 832, 910, 914, 1050, 1068, 1069, 1073], "scaled_dot_product_attent": [23, 26, 27, 73, 78, 79, 815], "scatter_flat": [23, 26, 27, 73, 78, 79, 686], "scatter_nd": [23, 26, 27, 73, 78, 79, 139, 686, 1144], "seed": [23, 26, 27, 73, 76, 77, 78, 79, 1050, 1144], "set_array_mod": [23, 26, 27, 73, 78, 79, 686, 721, 769], "set_default_devic": [23, 26, 27, 73, 78, 79, 133, 367, 400], "set_default_dtyp": [23, 26, 27, 73, 78, 79, 127, 132, 274], "set_default_float_dtyp": [23, 26, 27, 73, 78, 79, 132, 274], "set_default_int_dtyp": [23, 26, 27, 73, 78, 79, 132, 274], "set_default_uint_dtyp": [23, 26, 27, 73, 78, 79, 274, 307, 365], "set_min_bas": [23, 26, 27, 73, 78, 79, 686], "set_min_denomin": [23, 26, 27, 73, 78, 79, 686], "set_nestable_mod": [23, 26, 27, 73, 78, 79, 686, 724, 770], "set_queue_timeout": [23, 26, 27, 73, 78, 79, 686], "set_shape_array_mod": [23, 26, 27, 73, 78, 79, 686, 754, 771], "set_split_factor": [23, 26, 27, 73, 78, 79, 367], "set_tmp_dir": [23, 26, 27, 73, 78, 79, 686], "set_with_grad": [23, 26, 27, 73, 78, 79, 774, 814], "shape_array_mod": [23, 26, 27, 73, 78, 79, 686, 751, 771], "shuffl": [23, 26, 27, 76, 77, 1050, 1144], "size": [23, 26, 27, 55, 56, 73, 76, 77, 78, 79, 96, 97, 100, 101, 125, 139, 140, 204, 232, 233, 235, 236, 367, 390, 391, 392, 686, 744, 815, 831, 832, 848, 851, 869, 872, 888, 891, 896, 899, 910, 914, 915, 919, 930, 934, 961, 975, 978, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1050, 1051, 1055, 1063, 1064, 1066, 1133, 1134, 1137, 1139, 1142, 1166, 1167, 1168], "product": [23, 26, 27, 41, 42, 131, 402, 610, 611, 613, 686, 704, 815, 830, 831, 832, 838, 841, 865, 868, 888, 891, 920, 924, 930, 934, 1100, 1101, 1104, 1117, 1120, 1166, 1177], "unknown": [23, 26, 27], "model": [23, 26, 27, 140, 141, 1144], "slogdet": [23, 26, 27, 96, 97, 832], "split_factor": [23, 26, 27, 73, 78, 79, 367, 390], "split_func_cal": [23, 26, 27, 73, 78, 79, 367], "stable_divid": [23, 26, 27, 73, 78, 79, 127, 686], "stable_pow": [23, 26, 27, 73, 78, 79, 686], "stop_gradi": [23, 26, 27, 73, 76, 77, 78, 79, 90, 91, 141, 367, 392, 774, 781, 782, 783, 784, 788, 789, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 1022, 1023, 1024, 1025, 1144, 1182, 1183, 1184, 1185, 1186, 1187], "supports_inplac": [23, 26, 27, 73, 78, 79, 686], "tmp_dir": [23, 26, 27, 73, 78, 79, 686], "to_ivy_shap": [23, 26, 27, 73, 78, 79, 686], "to_list": [23, 26, 27, 76, 77, 686, 1144], "to_native_arrays_and_back": [23, 26, 27, 73, 78, 79, 120, 129, 155], "to_native_shap": [23, 26, 27, 73, 78, 79, 686], "to_scalar": [23, 26, 27, 73, 78, 79, 686], "total_mem_on_dev": [23, 26, 27, 73, 78, 79, 133, 367], "tpu_is_avail": [23, 26, 27, 73, 78, 79, 367], "try_else_non": [23, 26, 27, 73, 78, 79, 686], "type_promote_arrai": [23, 26, 27, 73, 78, 79, 274], "unset_array_mod": [23, 26, 27, 73, 78, 79, 686], "unset_default_devic": [23, 26, 27, 73, 78, 79, 367], "unset_default_dtyp": [23, 26, 27, 73, 78, 79, 274, 357], "unset_default_float_dtyp": [23, 26, 27, 73, 78, 79, 274], "unset_default_int_dtyp": [23, 26, 27, 73, 78, 79, 274], "unset_default_uint_dtyp": [23, 26, 27, 73, 78, 79, 274], "unset_nestable_mod": [23, 26, 27, 73, 78, 79, 686], "unset_shape_array_mod": [23, 26, 27, 73, 78, 79, 686, 769], "unset_with_grad": [23, 26, 27, 73, 78, 79, 774], "unstack": [23, 26, 27, 76, 77, 131, 137, 140, 686, 1144], "used_mem_on_dev": [23, 26, 27, 73, 78, 79, 367], "valid_dtyp": [23, 26, 27, 73, 78, 79, 274], "value_is_nan": [23, 26, 27, 73, 78, 79, 686], "variable_data": [23, 26, 27, 73, 78, 79, 774], "with_grad": [23, 26, 27, 73, 78, 79, 774, 809], "abc": [24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 139, 367, 369, 686, 711, 1026, 1043, 1178, 1179, 1182, 1186], "gelu": [24, 25, 74, 75, 165, 170, 1152], "approxim": [24, 25, 74, 75, 122, 165, 166, 167, 168, 169, 170, 402, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 630, 633, 650, 653, 655, 658, 675, 679, 680, 832, 878, 881, 893, 895], "185": [24, 25, 74, 75, 166, 167, 168, 170], "046": [24, 25, 74, 75, 166, 167, 168, 170], "leaky_relu": [24, 25, 74, 75, 125, 165, 175, 1144], "alpha": [24, 25, 74, 75, 125, 126, 165, 171, 172, 173, 174, 175], "39": [24, 25, 74, 75, 165, 171, 172, 173, 174, 175, 402, 428, 431, 508, 511, 774, 776, 779, 832, 888, 891, 1100, 1101, 1104], "85": [24, 25, 74, 75, 165, 171, 172, 173, 174, 175, 402, 473, 476, 1050, 1056, 1059], "17": [24, 25, 74, 75, 104, 105, 123, 131, 165, 171, 172, 173, 174, 175, 402, 493, 496, 832, 848, 851, 915, 919, 1050, 1055, 1056, 1058, 1059, 1060], "relu": [24, 25, 71, 72, 74, 75, 140, 141, 165, 171, 173, 174, 175, 180, 1144], "sigmoid": [24, 25, 74, 75, 137, 140, 141, 165, 185, 1144], "269": [24, 25, 74, 75, 165, 181, 182, 183, 184, 185], "731": [24, 25, 74, 75, 165, 181, 182, 183, 184, 185], "881": [24, 25, 41, 42, 74, 75, 86, 87, 165, 181, 182, 183, 184, 185, 402, 428, 429, 430, 431], "softmax": [24, 25, 71, 72, 74, 75, 165, 190, 815, 830, 831, 1144], "axi": [24, 25, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 120, 123, 125, 126, 127, 131, 132, 134, 135, 137, 139, 142, 153, 165, 186, 187, 188, 189, 190, 204, 232, 233, 234, 235, 236, 237, 367, 392, 686, 704, 705, 714, 772, 832, 838, 839, 840, 841, 842, 848, 851, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 945, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 987, 988, 989, 990, 991, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1050, 1062, 1063, 1064, 1065, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "422": [24, 25, 74, 75, 165, 186, 187, 188, 189, 190], "155": [24, 25, 74, 75, 165, 186, 187, 188, 189, 190], "softplu": [24, 25, 74, 75, 165, 195, 1144], "3461": [24, 25, 74, 75, 165, 191, 192, 193, 194, 195], "6491": [24, 25, 74, 75, 165, 191, 192, 193, 194, 195], "535": [24, 25, 74, 75, 165, 191, 192, 193, 194, 195], "42": [24, 25, 74, 75, 102, 103, 104, 105, 142, 165, 191, 192, 193, 194, 195, 774, 776, 779, 832, 888, 891, 1045, 1047, 1049, 1050, 1052, 1054, 1061, 1100, 1101, 1104], "tanh": [24, 25, 41, 42, 74, 75, 86, 87, 137, 165, 197, 402, 1144], "55": [24, 25, 74, 75, 104, 105, 165, 196, 200, 815, 821, 832, 888, 891, 915, 919, 1050, 1056, 1058, 1059, 1100, 1101, 1104], "501": [24, 25, 74, 75, 165, 196, 200], "collect": [29, 76, 77, 125, 153, 165, 201, 367, 686, 774, 815, 945, 1026, 1039, 1044, 1050, 1152, 1166, 1180, 1182], "args_to_contain": 29, "include_deriv": [29, 30, 31, 32, 33, 34, 1026, 1028, 1038], "args_to_ivi": 29, "keyword": [29, 31, 32, 73, 76, 77, 78, 79, 119, 120, 125, 126, 132, 133, 134, 140, 204, 238, 241, 686, 693, 738, 1026, 1032, 1100, 1125, 1128, 1178, 1179], "nest": [29, 31, 32, 33, 34, 73, 76, 77, 78, 79, 119, 125, 127, 130, 131, 139, 140, 141, 154, 686, 760, 774, 814, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187], "unchang": [29, 31, 32, 33, 34], "posit": [29, 31, 32, 41, 42, 51, 52, 55, 56, 86, 87, 96, 97, 100, 101, 120, 125, 126, 140, 153, 203, 204, 218, 219, 274, 314, 317, 402, 403, 406, 538, 541, 543, 544, 545, 546, 547, 610, 613, 629, 635, 638, 686, 713, 832, 833, 834, 835, 836, 837, 961, 975, 978, 996, 997, 998, 999, 1000, 1050, 1061, 1063, 1066, 1133, 1134, 1137, 1139, 1142, 1155, 1156], "deriv": [29, 31, 32, 33, 34, 35, 36, 45, 46, 90, 91, 132, 133, 139, 141, 204, 213, 214, 216, 227, 228, 230, 251, 252, 254, 269, 271, 273, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1026, 1028, 1038, 1178, 1182, 1186, 1188], "tupl": [29, 31, 32, 33, 34, 35, 36, 49, 50, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 125, 126, 131, 132, 133, 135, 139, 140, 141, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 208, 209, 210, 227, 229, 231, 243, 246, 274, 286, 288, 290, 291, 294, 296, 298, 300, 319, 320, 322, 323, 361, 367, 373, 380, 381, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 713, 715, 717, 719, 762, 763, 765, 792, 794, 796, 815, 818, 821, 822, 823, 824, 825, 826, 829, 832, 833, 835, 837, 878, 881, 893, 895, 910, 911, 912, 913, 914, 920, 924, 935, 939, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 967, 970, 971, 974, 979, 982, 983, 986, 992, 994, 996, 997, 998, 999, 1000, 1002, 1005, 1006, 1009, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1031, 1033, 1034, 1035, 1037, 1038, 1040, 1041, 1042, 1043, 1045, 1047, 1049, 1056, 1058, 1060, 1063, 1066, 1068, 1074, 1075, 1077, 1078, 1079, 1083, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "kei": [29, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125, 131, 135, 140, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 702, 715, 717, 719, 762, 763, 765, 792, 794, 796, 815, 830, 831, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1022, 1023, 1024, 1026, 1029, 1035, 1039, 1045, 1047, 1049, 1052, 1054, 1056, 1058, 1060, 1074, 1075, 1077, 1134, 1136, 1138, 1139, 1141, 1143, 1155, 1156, 1166, 1177, 1182, 1186], "word": [29, 31, 32, 131, 204, 205, 206, 1050, 1056, 1059, 1155, 1156], "args_to_n": [29, 134, 139], "to_ivi": [29, 76, 77, 139, 1026, 1039], "leaf": [29, 33, 34, 76, 77, 127, 131, 140, 1026, 1027, 1036, 1037], "union": [29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 123, 127, 130, 131, 132, 133, 134, 135, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 254, 256, 260, 261, 265, 266, 268, 269, 271, 273, 274, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 294, 296, 298, 300, 301, 302, 303, 304, 306, 307, 308, 311, 313, 314, 317, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 355, 357, 358, 359, 360, 361, 366, 367, 370, 371, 372, 373, 374, 375, 377, 379, 382, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 694, 695, 698, 699, 701, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 725, 727, 728, 730, 731, 732, 737, 741, 744, 745, 753, 759, 760, 761, 762, 763, 765, 766, 767, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 792, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 831, 832, 833, 835, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 911, 912, 913, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1037, 1038, 1042, 1043, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1077, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1182, 1183, 1184, 1186], "nativearrai": [29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 59, 60, 74, 75, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 114, 115, 119, 120, 123, 127, 130, 131, 134, 135, 137, 139, 142, 155, 163, 165, 166, 169, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 186, 189, 190, 191, 194, 195, 196, 200, 204, 205, 206, 208, 210, 213, 216, 227, 230, 232, 233, 235, 236, 238, 241, 243, 244, 246, 251, 254, 256, 260, 261, 265, 269, 273, 274, 281, 284, 286, 287, 288, 289, 290, 291, 294, 296, 299, 308, 311, 314, 317, 325, 328, 331, 334, 336, 339, 341, 344, 346, 349, 352, 355, 361, 367, 373, 374, 377, 386, 392, 393, 397, 402, 403, 406, 407, 408, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 431, 433, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 486, 488, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 511, 512, 513, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 645, 648, 649, 650, 653, 655, 658, 660, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 685, 686, 687, 688, 690, 694, 695, 698, 699, 701, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 725, 727, 728, 730, 731, 732, 737, 741, 744, 745, 746, 753, 760, 762, 763, 766, 767, 769, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 792, 795, 796, 797, 799, 801, 803, 805, 807, 810, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 831, 832, 833, 836, 837, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 992, 995, 996, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1026, 1028, 1029, 1038, 1042, 1043, 1044, 1045, 1048, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1078, 1079, 1083, 1084, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1137, 1138, 1139, 1142, 1143], "travers": [29, 33, 34, 76, 77, 131, 137, 139, 1026, 1038], "lowest": [29, 33, 34, 76, 77, 104, 105, 127, 154, 1026, 1038, 1050, 1052, 1053, 1054], "leav": [29, 33, 34, 73, 76, 77, 78, 79, 120, 122, 123, 125, 127, 131, 132, 134, 140, 141, 961, 1006, 1009, 1026, 1027, 1028, 1036, 1037, 1038], "to_n": [29, 76, 77], "item": [29, 34, 71, 72, 76, 77, 132, 137, 139, 140, 142, 274, 302, 367, 373, 686, 702, 726, 755, 756, 1026, 1031, 1032, 1033, 1034, 1038, 1042, 1043, 1144, 1178, 1179], "asarrai": [35, 36, 73, 78, 79, 125, 134, 204, 815, 816, 1068, 1074, 1078], "nativedtyp": [35, 36, 59, 60, 80, 81, 104, 105, 119, 120, 132, 133, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 243, 244, 246, 248, 249, 251, 252, 254, 266, 268, 269, 271, 273, 274, 280, 281, 284, 303, 304, 306, 307, 308, 311, 351, 357, 366, 1050, 1056, 1057, 1058, 1059, 1060, 1100, 1125, 1128], "datatyp": [35, 36, 76, 77, 82, 83, 204, 208, 209, 227, 228, 230, 243, 244, 246, 274, 301, 351, 357], "nativedevic": [35, 36, 39, 40, 59, 60, 80, 81, 104, 105, 119, 120, 132, 133, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 246, 248, 249, 251, 252, 254, 266, 268, 269, 271, 273, 367, 371, 372, 373, 374, 375, 377, 379, 382, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 686, 741, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1182, 1183, 1184, 1186], "interpret": [35, 36, 204, 208, 209, 210, 243, 244, 246], "empty_lik": [35, 36, 80, 81, 204], "uniniti": [35, 36, 204, 212, 213, 214, 216], "from_dlpack": [35, 36, 80, 81, 204], "full_lik": [35, 36, 80, 81, 121, 204, 231], "fill_valu": [35, 36, 80, 81, 121, 132, 204, 226, 227, 228, 229, 230, 231, 402, 533, 536, 558, 561], "float": [35, 36, 41, 42, 45, 46, 51, 52, 53, 54, 57, 58, 59, 60, 80, 81, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 120, 121, 122, 125, 127, 131, 132, 134, 139, 141, 165, 171, 174, 196, 197, 198, 199, 203, 204, 205, 206, 208, 210, 212, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 266, 268, 274, 281, 284, 303, 304, 314, 317, 336, 339, 352, 355, 367, 379, 387, 390, 391, 398, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 499, 501, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 523, 526, 528, 531, 533, 536, 543, 546, 553, 556, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 685, 686, 698, 699, 701, 713, 722, 723, 747, 748, 755, 756, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 818, 822, 825, 831, 832, 833, 834, 835, 836, 837, 843, 846, 853, 856, 857, 859, 860, 863, 878, 881, 893, 895, 896, 899, 905, 908, 910, 914, 935, 939, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1022, 1023, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1182, 1183, 1184, 1185, 1186, 1187], "scalar": [35, 36, 74, 75, 80, 81, 132, 137, 142, 154, 171, 173, 175, 204, 227, 228, 229, 230, 231, 686, 741, 767, 773, 832, 935, 939], "fill": [35, 36, 76, 77, 80, 81, 104, 105, 204, 212, 226, 227, 228, 229, 230, 231, 248, 249, 251, 252, 254, 266, 268, 269, 271, 273, 1050, 1052, 1053, 1054], "int": [35, 36, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 69, 70, 80, 81, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 121, 123, 126, 127, 131, 132, 133, 134, 135, 142, 165, 186, 189, 201, 202, 204, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 256, 258, 260, 261, 263, 265, 274, 291, 294, 306, 313, 314, 317, 325, 328, 341, 344, 367, 384, 385, 386, 392, 393, 397, 402, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 686, 692, 704, 705, 708, 709, 710, 713, 714, 725, 741, 744, 772, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 815, 816, 818, 820, 821, 822, 823, 824, 825, 826, 832, 833, 835, 837, 838, 841, 848, 851, 920, 924, 925, 929, 930, 934, 935, 939, 945, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 967, 970, 971, 974, 975, 978, 979, 982, 983, 986, 987, 990, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1038, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1061, 1063, 1064, 1065, 1089, 1090, 1093, 1095, 1098, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "000123": [35, 36, 204, 227, 228, 230], "meshgrid": [35, 36, 80, 81, 204], "xy": [35, 36, 80, 81, 204, 238, 239, 240, 241, 242], "ones_lik": [35, 36, 80, 81, 142, 204, 1144], "tril": [35, 36, 80, 81, 204], "k": [35, 36, 59, 60, 80, 81, 104, 105, 118, 126, 137, 204, 218, 219, 220, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 686, 694, 815, 831, 832, 865, 868, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1066], "n": [35, 36, 59, 60, 69, 70, 96, 97, 104, 105, 114, 115, 118, 125, 204, 238, 241, 256, 258, 260, 261, 263, 265, 686, 695, 815, 827, 832, 848, 851, 865, 868, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 910, 914, 915, 919, 925, 929, 930, 934, 935, 939, 940, 944, 961, 971, 974, 975, 978, 983, 986, 1006, 1009, 1018, 1021, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1066, 1100, 1109, 1112, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "whose": [35, 36, 41, 42, 51, 52, 55, 56, 63, 64, 80, 81, 86, 87, 96, 97, 100, 101, 108, 109, 122, 125, 196, 197, 198, 199, 204, 227, 229, 231, 256, 258, 260, 261, 263, 265, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 630, 631, 633, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 675, 676, 677, 678, 679, 680, 686, 697, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929, 961, 979, 982, 996, 997, 998, 999, 1000, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1100, 1101, 1104], "innermost": [35, 36, 51, 52, 96, 97, 204, 256, 258, 260, 261, 263, 265, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 878, 881, 883, 886, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929], "mxn": [35, 36, 204, 256, 258, 260, 261, 263, 265, 832, 848, 851, 878, 881, 883, 886, 893, 895, 896, 899, 915, 919, 925, 929], "matric": [35, 36, 51, 52, 96, 97, 153, 204, 238, 241, 256, 258, 260, 261, 263, 265, 815, 828, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 874, 876, 878, 881, 883, 886, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929], "diagon": [35, 36, 51, 52, 96, 97, 204, 218, 219, 256, 258, 260, 261, 263, 265, 832, 925, 929], "triangular": [35, 36, 51, 52, 96, 97, 204, 256, 258, 260, 261, 263, 265, 832, 833, 834, 835, 836, 837, 896, 899], "triu": [35, 36, 80, 81, 204], "upper": [35, 36, 51, 52, 59, 60, 76, 77, 96, 97, 104, 105, 125, 204, 218, 219, 261, 263, 265, 832, 833, 834, 835, 836, 837, 896, 899, 1050, 1056, 1057, 1058, 1059, 1060], "zeros_lik": [35, 36, 80, 81, 126, 204, 815, 822, 825, 961, 962, 965, 1144], "creation": [36, 73, 76, 77, 78, 79, 81, 119, 121, 125, 132, 133, 137, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 243, 246, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273], "data_typ": [37, 38, 82, 83, 119, 121, 125, 132, 274, 279, 280, 281, 284, 286, 289, 291, 294, 296, 299, 301, 302, 303, 304, 306, 307, 308, 311, 313, 314, 317, 319, 320, 322, 323, 325, 328, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 352, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "astyp": [37, 38, 49, 50, 82, 83, 94, 95, 126, 132, 134, 274, 822, 823, 824, 826], "broadcast_arrai": [37, 38, 82, 83, 274, 290], "arbitrari": [37, 38, 76, 77, 82, 83, 120, 125, 127, 131, 134, 141, 154, 204, 238, 241, 274, 286, 287, 288, 289, 290, 352, 355], "x1": [37, 38, 41, 42, 43, 44, 82, 83, 86, 87, 88, 89, 96, 97, 120, 123, 126, 204, 269, 273, 274, 286, 287, 288, 289, 290, 308, 311, 361, 367, 386, 402, 418, 421, 422, 438, 441, 442, 448, 451, 452, 458, 461, 462, 463, 466, 467, 468, 471, 472, 473, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 523, 524, 525, 526, 527, 528, 531, 532, 533, 536, 537, 553, 556, 557, 558, 561, 562, 583, 586, 587, 588, 591, 592, 598, 601, 602, 603, 606, 607, 608, 609, 610, 613, 614, 620, 623, 624, 630, 633, 634, 635, 636, 637, 638, 639, 670, 671, 674, 686, 687, 688, 689, 690, 691, 694, 815, 820, 832, 838, 841, 842, 865, 868, 888, 891, 892, 905, 908, 909, 920, 921, 924, 930, 931, 934, 1063, 1067], "x2": [37, 38, 41, 42, 43, 44, 51, 52, 76, 77, 82, 83, 86, 87, 88, 89, 96, 97, 120, 123, 126, 204, 269, 273, 274, 286, 287, 288, 289, 290, 361, 367, 386, 402, 418, 419, 420, 421, 422, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 686, 687, 688, 689, 690, 691, 815, 820, 832, 838, 839, 840, 841, 842, 865, 866, 867, 868, 888, 889, 890, 891, 892, 905, 906, 907, 908, 909, 920, 921, 922, 923, 924, 930, 931, 932, 933, 934, 1063, 1067], "x3": [37, 38, 204, 269, 273, 274, 286, 287, 289, 367, 386], "broadcast_to": [37, 38, 82, 83, 132, 274], "can_cast": [37, 38, 82, 83, 127, 132, 274, 300, 314, 317], "cast": [37, 38, 82, 83, 126, 127, 132, 274, 281, 284, 296, 297, 298, 299, 300, 961, 967, 970, 1100, 1117, 1120, 1125, 1128, 1144], "occur": [37, 38, 63, 64, 82, 83, 108, 109, 274, 296, 297, 298, 299, 300, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088], "rule": [37, 38, 51, 52, 82, 83, 96, 97, 123, 125, 127, 130, 131, 132, 135, 274, 281, 284, 296, 297, 298, 299, 300, 352, 355, 402, 443, 446, 468, 471, 493, 496, 610, 613, 635, 638, 832, 833, 834, 835, 836, 837, 838, 841, 888, 891, 905, 908], "float32": [37, 38, 49, 50, 82, 83, 88, 89, 94, 95, 123, 125, 132, 204, 269, 273, 274, 279, 280, 296, 297, 298, 300, 308, 311, 314, 317, 341, 344, 366, 686, 762, 763, 766, 822, 823, 824, 826], "float64": [37, 38, 59, 60, 104, 105, 125, 132, 274, 281, 284, 296, 297, 299, 314, 317, 341, 344, 357, 366, 1050, 1056, 1057, 1058, 1059, 1060], "as_n": [37, 38, 39, 40, 82, 83, 84, 85, 132, 274, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 367, 373, 374, 375, 376, 377, 378, 389], "finfo": [37, 38, 82, 83, 274], "iinfo": [37, 38, 82, 83, 135, 274], "is_bool_dtyp": [37, 38, 82, 83, 274], "is_float_dtyp": [37, 38, 82, 83, 121, 274], "is_int_dtyp": [37, 38, 82, 83, 121, 274, 686, 767], "is_uint_dtyp": [37, 38, 82, 83, 121, 274], "result_typ": [37, 38, 82, 83, 132, 274], "arrays_and_dtyp": [37, 38, 82, 83, 274, 352, 353, 354, 355, 356], "to_devic": [39, 40, 76, 77, 84, 85, 367, 373, 394], "stream": [39, 40, 84, 85, 367, 393, 394, 395, 396, 397], "ab": [41, 42, 86, 87, 125, 129, 402, 407, 630, 633, 832, 915, 919, 935, 939, 1144], "aco": [41, 42, 86, 87, 402, 412, 1144], "real": [41, 42, 86, 87, 196, 197, 198, 199, 402, 408, 409, 410, 412, 413, 414, 423, 424, 425, 427, 433, 434, 435, 437, 438, 439, 440, 442, 493, 494, 495, 497, 508, 510, 512, 513, 515, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 603, 604, 610, 611, 612, 614, 630, 631, 632, 634, 635, 636, 637, 639, 660, 661, 662, 664, 665, 666, 667, 669, 670, 672, 680, 681, 682, 683, 684], "invers": [41, 42, 86, 87, 139, 153, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 832, 860, 863, 893, 895], "cosin": [41, 42, 86, 87, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "acosh": [41, 42, 86, 87, 274, 319, 320, 322, 323, 402, 1144], "hyperbol": [41, 42, 74, 75, 86, 87, 165, 196, 197, 198, 199, 200, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 488, 489, 490, 491, 492, 655, 656, 657, 658, 659, 680], "asin": [41, 42, 86, 87, 402, 427, 1144], "sine": [41, 42, 86, 87, 402, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "asinh": [41, 42, 86, 87, 402, 432, 1144], "82": [41, 42, 428, 429, 1050, 1056, 1059], "atan": [41, 42, 86, 87, 402, 437, 1144], "tangent": [41, 42, 74, 75, 86, 87, 122, 165, 196, 197, 198, 199, 200, 402, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 675, 676, 677, 678, 679, 680], "atan2": [41, 42, 86, 87, 402, 442, 1144], "coordin": [41, 42, 86, 87, 204, 238, 241, 402, 438, 439, 440, 441, 442], "quotient": [41, 42, 86, 87, 402, 438, 439, 440, 441, 442], "785": [41, 42, 86, 87, 402, 438, 439, 440, 441, 442], "245": [41, 42, 438, 439], "57": [41, 42, 367, 379, 402, 423, 426, 428, 431, 438, 439, 441, 473, 476, 488, 491], "atanh": [41, 42, 86, 87, 402, 447, 1144], "bitwise_and": [41, 42, 86, 87, 402, 452], "integ": [41, 42, 69, 70, 76, 77, 86, 87, 96, 97, 104, 105, 114, 115, 125, 131, 132, 139, 204, 205, 206, 226, 274, 325, 328, 341, 344, 352, 355, 402, 403, 406, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 518, 521, 523, 526, 603, 606, 630, 633, 635, 638, 640, 643, 681, 685, 832, 874, 876, 930, 934, 935, 939, 961, 1001, 1050, 1052, 1053, 1054, 1061, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "bitwise_invert": [41, 42, 86, 87, 402, 457], "bitiwse_invert": [41, 42, 453, 454], "bitwise_left_shift": [41, 42, 86, 87, 402, 462], "bitwise_or": [41, 42, 86, 87, 402, 467], "bitwise_right_shift": [41, 42, 86, 87, 402, 472], "bitwise_xor": [41, 42, 86, 87, 402, 477], "ceil": [41, 42, 86, 87, 204, 205, 206, 402, 482, 1144], "express": [41, 42, 86, 87, 122, 135, 137, 142, 402, 408, 411, 423, 426, 433, 436, 438, 441, 483, 484, 485, 486, 487, 650, 651, 652, 653, 654, 675, 676, 677, 678, 679], "radian": [41, 42, 86, 87, 122, 402, 408, 411, 423, 426, 433, 436, 438, 441, 483, 484, 485, 486, 487, 650, 651, 652, 653, 654, 675, 676, 677, 678, 679], "54": [41, 42, 86, 87, 102, 103, 104, 105, 123, 402, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 660, 663, 815, 831, 832, 888, 891, 1045, 1047, 1049, 1050, 1055, 1056, 1058, 1059, 1060, 1100, 1101, 1104], "416": [41, 42, 402, 483, 484, 486], "99": [41, 42, 402, 428, 431, 483, 484, 1100, 1101, 1104], "cosh": [41, 42, 86, 87, 402, 413, 417, 492, 1144], "angl": [41, 42, 86, 87, 153, 196, 197, 198, 199, 402, 438, 441, 488, 489, 490, 491, 492, 655, 656, 657, 658, 659, 680], "76": [41, 42, 86, 87, 196, 197, 274, 325, 328, 402, 488, 489, 490, 491, 492, 655, 657, 659, 774, 776, 779, 832, 920, 924, 1100, 1101, 1104], "23": [41, 42, 80, 81, 86, 87, 104, 105, 204, 227, 229, 230, 231, 402, 438, 441, 473, 476, 488, 489, 490, 492, 543, 546, 635, 638, 645, 648, 655, 656, 657, 658, 659, 815, 821, 832, 848, 851, 915, 919, 1050, 1056, 1058, 1059, 1060, 1063, 1067], "03": [41, 42, 86, 87, 104, 105, 488, 489, 490, 492, 815, 831, 1044, 1045, 1048, 1056, 1060], "81": [41, 42, 274, 325, 328, 402, 488, 489, 640, 643, 665, 668, 1050, 1056, 1059, 1100, 1101, 1104], "divid": [41, 42, 76, 77, 86, 87, 123, 130, 402, 497, 523, 526, 686, 755, 961, 1001], "dividend": [41, 42, 86, 87, 402, 493, 494, 495, 496, 497, 523, 524, 525, 527, 635, 636, 638], "divisor": [41, 42, 45, 46, 86, 87, 90, 91, 402, 493, 494, 495, 496, 497, 523, 524, 525, 527, 528, 530, 532, 635, 636, 638, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1100, 1121, 1124, 1129, 1132, 1182, 1183, 1184], "375": [41, 42, 402, 498, 499, 501], "erf": [41, 42, 86, 87, 402, 507], "exponenti": [41, 42, 86, 87, 402, 503, 504, 505, 506, 507, 508, 509, 511, 583, 586, 630, 631, 633], "gauss": [41, 42, 86, 87, 402, 503, 504, 505, 506, 507], "exp": [41, 42, 86, 87, 402, 512, 513, 516, 583, 586, 1144], "evalu": [41, 42, 76, 77, 86, 87, 131, 402, 508, 509, 510, 511, 512, 513, 515, 516, 517, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 593, 595, 597, 615, 616, 617, 618, 619, 625, 626, 627, 629, 645, 646, 647, 648, 649, 665, 668, 1026, 1027, 1036, 1037, 1133, 1134, 1137, 1139, 1142], "expm1": [41, 42, 86, 87, 402, 517], "244": [41, 42, 513, 514], "918": [41, 42, 513, 514], "48": [41, 42, 104, 105, 165, 171, 174, 402, 513, 514, 660, 663, 774, 776, 779, 832, 888, 891, 1056, 1060, 1100, 1101, 1104], "147": [41, 42, 165, 186, 189, 402, 513, 514, 516], "floor": [41, 42, 86, 87, 402, 468, 471, 522, 686, 712, 1144], "floor_divid": [41, 42, 86, 87, 402, 527], "13": [41, 42, 104, 105, 123, 125, 131, 274, 325, 328, 367, 379, 402, 448, 451, 473, 476, 488, 491, 513, 516, 523, 524, 526, 660, 663, 686, 704, 774, 776, 779, 815, 831, 832, 848, 851, 888, 891, 915, 919, 1050, 1052, 1054, 1056, 1058, 1059, 1063, 1067, 1068, 1069, 1073, 1100, 1101, 1104], "greater": [41, 42, 59, 60, 76, 77, 86, 87, 104, 105, 402, 408, 411, 423, 426, 438, 441, 458, 461, 468, 471, 518, 521, 523, 526, 532, 630, 633, 635, 638, 645, 648, 681, 685, 832, 838, 841, 961, 1002, 1005, 1050, 1056, 1057, 1058, 1059, 1060], "greater_equ": [41, 42, 86, 87, 402, 537, 583, 585, 587], "isfinit": [41, 42, 86, 87, 125, 402, 542], "out_i": [41, 42, 86, 87, 402, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552], "self_i": [41, 42, 86, 87, 538, 539, 540, 543, 544, 545, 548, 549, 550], "finit": [41, 42, 86, 87, 402, 418, 421, 438, 441, 538, 539, 540, 541, 542, 610, 613, 630, 633, 635, 638], "isinf": [41, 42, 86, 87, 402, 547], "neg": [41, 42, 55, 56, 69, 70, 74, 75, 86, 87, 100, 101, 114, 115, 127, 131, 134, 165, 171, 173, 174, 175, 204, 205, 206, 218, 219, 402, 538, 541, 543, 544, 545, 546, 547, 610, 613, 619, 630, 633, 635, 638, 832, 910, 914, 930, 934, 935, 939, 961, 979, 982, 996, 997, 998, 999, 1000, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "infin": [41, 42, 86, 87, 122, 203, 274, 281, 284, 402, 403, 406, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 523, 526, 538, 541, 543, 544, 545, 546, 547, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 832, 935, 939, 1100, 1105, 1108, 1113, 1116, 1133, 1134, 1137, 1139, 1142], "isnan": [41, 42, 86, 87, 402, 552], "nan": [41, 42, 76, 77, 86, 87, 119, 122, 125, 203, 274, 281, 284, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 538, 541, 548, 549, 550, 551, 552, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 686, 727, 773, 815, 831, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1137, 1139, 1142], "less_equ": [41, 42, 86, 87, 402, 562], "log10": [41, 42, 86, 87, 402, 572], "logarithm": [41, 42, 86, 87, 402, 508, 511, 563, 566, 568, 569, 570, 571, 572, 573, 576, 578, 579, 580, 581, 582, 583, 586, 832, 901, 903], "log1p": [41, 42, 86, 87, 402, 577], "log2": [41, 42, 86, 87, 402, 582], "logaddexp": [41, 42, 86, 87, 402], "logical_and": [41, 42, 86, 87, 402, 592, 1144], "logical_not": [41, 42, 86, 87, 402, 597, 1144], "logical_or": [41, 42, 86, 87, 402, 602, 1144], "logical_xor": [41, 42, 86, 87, 402, 607], "multipli": [41, 42, 86, 87, 123, 128, 130, 402, 614, 686, 704], "not_equ": [41, 42, 86, 87, 402, 624], "pow": [41, 42, 86, 87, 402, 634], "expon": [41, 42, 402, 630, 631, 633, 686, 756], "remaind": [41, 42, 76, 77, 86, 87, 402, 639, 686, 712, 961, 1001], "respect": [41, 42, 45, 46, 86, 87, 90, 91, 120, 121, 123, 125, 130, 131, 132, 135, 204, 238, 241, 402, 403, 406, 418, 421, 438, 441, 448, 451, 458, 461, 463, 466, 468, 471, 473, 476, 493, 496, 498, 501, 523, 526, 528, 531, 533, 536, 553, 556, 558, 561, 583, 586, 588, 591, 598, 601, 603, 606, 610, 613, 620, 623, 635, 636, 637, 638, 639, 670, 674, 774, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 790, 797, 799, 801, 803, 805, 807, 832, 896, 899, 1022, 1023, 1024, 1025], "x2_i": [41, 42, 86, 87, 402, 418, 421, 438, 441, 448, 451, 458, 461, 463, 466, 468, 471, 473, 476, 493, 496, 498, 501, 523, 526, 528, 531, 533, 536, 553, 556, 558, 561, 583, 586, 588, 591, 598, 601, 603, 606, 610, 613, 620, 623, 630, 633, 635, 636, 637, 638, 639, 670, 674], "11": [41, 42, 45, 46, 73, 78, 79, 86, 87, 100, 101, 104, 105, 123, 125, 131, 402, 418, 420, 421, 422, 448, 451, 513, 515, 635, 636, 638, 640, 643, 686, 704, 714, 776, 777, 832, 848, 851, 888, 891, 915, 919, 945, 956, 959, 961, 979, 982, 992, 994, 1002, 1004, 1026, 1043, 1050, 1052, 1053, 1054, 1056, 1058, 1059, 1063, 1067, 1068, 1069, 1073, 1100, 1101, 1104], "18": [41, 42, 86, 87, 104, 105, 123, 131, 402, 438, 441, 473, 476, 493, 496, 635, 636, 655, 656, 657, 658, 659, 832, 848, 851, 888, 891, 1050, 1056, 1058, 1059, 1060, 1100, 1101, 1104], "94": [41, 42, 86, 87, 428, 432, 645, 646, 1050, 1056, 1059], "256": [41, 42, 645, 646, 815, 821], "0001": [41, 42, 645, 646, 1182, 1183, 1184], "36": [41, 42, 402, 438, 441, 645, 646, 832, 888, 891, 915, 919, 1100, 1101, 1104], "67": [41, 42, 86, 87, 131, 402, 473, 476, 488, 490, 491, 492, 645, 646, 655, 657, 659, 1050, 1056, 1059], "45": [41, 42, 86, 87, 104, 105, 125, 402, 438, 440, 441, 442, 493, 495, 496, 497, 645, 646, 774, 776, 779, 832, 888, 891, 961, 1001, 1044, 1045, 1048, 1050, 1056, 1058, 1059, 1100, 1101, 1104], "24": [41, 42, 102, 103, 402, 473, 476, 645, 646, 660, 663, 686, 704, 774, 776, 779, 832, 848, 851, 888, 891, 1044, 1045, 1047, 1048, 1049, 1050, 1056, 1059, 1100, 1101, 1104], "678": [41, 42, 645, 646], "32": [41, 42, 45, 46, 104, 105, 125, 140, 165, 171, 174, 402, 473, 476, 645, 646, 776, 777, 815, 818, 821, 822, 825, 832, 888, 891, 1050, 1056, 1058, 1059, 1060, 1063, 1067, 1100, 1101, 1104], "sin": [41, 42, 86, 87, 130, 137, 402, 654, 686, 713, 1144], "841": [41, 42, 86, 87, 402, 650, 651, 652, 653, 654], "909": [41, 42, 86, 87, 402, 650, 651, 652, 653, 654], "141": [41, 42, 86, 87, 402, 650, 651, 652, 653, 654], "sinh": [41, 42, 86, 87, 402, 659, 1144], "63": [41, 42, 45, 46, 86, 87, 96, 97, 402, 655, 656, 657, 658, 659, 660, 663, 776, 777, 832, 833, 835, 836, 837, 888, 891, 1100, 1101, 1104], "232": [41, 42, 86, 87, 402, 655, 656, 657, 658, 659], "51": [41, 42, 402, 473, 476, 655, 656, 658, 1050, 1056, 1059], "sqrt": [41, 42, 86, 87, 402, 664, 832, 935, 939], "squar": [41, 42, 51, 52, 86, 87, 96, 97, 125, 402, 660, 661, 662, 663, 664, 669, 815, 818, 832, 833, 834, 835, 836, 837, 843, 846, 853, 856, 857, 859, 860, 863, 874, 876, 901, 903, 905, 908, 910, 914], "subtract": [41, 42, 86, 87, 123, 130, 402, 671], "tan": [41, 42, 86, 87, 120, 122, 126, 127, 131, 134, 137, 402, 423, 426, 428, 431, 676, 832, 848, 851, 1068, 1069, 1073, 1089, 1090, 1093, 1144], "56": [41, 42, 86, 87, 123, 402, 660, 663, 675, 676, 677, 678, 679, 774, 776, 779, 832, 888, 891, 915, 919, 1100, 1101, 1104], "19": [41, 42, 86, 87, 104, 105, 123, 402, 428, 430, 432, 473, 476, 675, 676, 677, 678, 679, 832, 848, 851, 1050, 1056, 1058, 1059, 1060], "762": [41, 42, 86, 87, 165, 196, 198, 199, 200, 402, 680], "964": [41, 42, 86, 87, 165, 196, 198, 199, 200, 402, 680], "trunc": [41, 42, 86, 87, 402, 682], "elementwis": [42, 76, 77, 87, 119, 127, 137, 142, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 596, 598, 601, 603, 606, 608, 609, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 674, 675, 679, 680, 681, 685], "all_equ": [43, 44, 88, 89, 686, 691], "equality_matrix": [43, 44, 88, 89, 686, 687, 688, 689, 690, 691], "compar": [43, 44, 76, 77, 88, 89, 125, 135, 140, 686, 687, 688, 689, 690, 691, 694, 695, 832, 915, 919, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1089, 1090, 1093, 1095, 1098], "matrix": [43, 44, 51, 52, 76, 77, 88, 89, 96, 97, 204, 238, 241, 256, 260, 261, 265, 686, 687, 688, 689, 690, 691, 698, 815, 828, 832, 833, 834, 835, 836, 837, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 874, 876, 878, 881, 883, 886, 893, 895, 896, 899, 905, 908, 910, 914, 915, 919, 925, 929, 940, 944, 1166, 1176], "gather_nd": [43, 44, 76, 77, 88, 89, 686, 719, 1144], "cuda": [43, 44, 59, 60, 76, 77, 88, 89, 104, 105, 137, 140, 154, 204, 232, 233, 235, 236, 367, 370, 389, 390, 686, 714, 715, 716, 717, 718, 719, 741, 744, 745, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189], "to_numpi": [43, 44, 76, 77, 88, 89, 140, 686, 763, 1144], "adam_step": [45, 46, 90, 91, 774, 780], "mw": [45, 46, 90, 91, 141, 774, 776, 777, 778, 779, 780, 781, 783], "vw": [45, 46, 90, 91, 141, 774, 776, 777, 778, 779, 780, 781, 783], "beta1": [45, 46, 90, 91, 141, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 797, 798, 799, 800, 1182, 1183, 1184], "beta2": [45, 46, 90, 91, 141, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 797, 798, 799, 800, 1182, 1183, 1184], "999": [45, 46, 86, 87, 90, 91, 141, 196, 197, 199, 402, 680, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 797, 798, 799, 800, 1182, 1183, 1184], "epsilon": [45, 46, 53, 54, 57, 58, 90, 91, 98, 99, 102, 103, 127, 131, 134, 141, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 797, 798, 799, 800, 832, 878, 881, 893, 895, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181, 1182, 1183, 1184], "1e": [45, 46, 53, 54, 57, 58, 90, 91, 98, 99, 102, 103, 127, 131, 134, 141, 142, 274, 314, 317, 686, 723, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 797, 798, 799, 800, 832, 910, 914, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1044, 1045, 1046, 1047, 1048, 1049, 1144, 1182, 1183, 1184, 1185, 1187], "07": [45, 46, 53, 54, 86, 87, 90, 91, 98, 99, 141, 402, 438, 440, 441, 442, 645, 648, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 797, 798, 799, 800, 832, 915, 919, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1182, 1183, 1184], "cost": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1022, 1023, 1024, 1025], "weight": [45, 46, 90, 91, 127, 131, 141, 142, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 815, 828, 829, 831, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1178, 1179, 1182, 1184, 1185], "ws": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807], "dc": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807], "dw": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807], "w": [45, 46, 49, 50, 76, 77, 90, 91, 94, 95, 137, 140, 141, 686, 695, 774, 776, 777, 778, 779, 780, 781, 783, 784, 788, 790, 791, 797, 799, 800, 801, 803, 804, 805, 807, 808, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "averag": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1022, 1023, 1024], "moment": [45, 46, 90, 91, 128, 154, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1182, 1183, 1184], "forget": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1182, 1183, 1184], "dure": [45, 46, 76, 77, 90, 91, 127, 131, 132, 133, 134, 154, 201, 202, 367, 393, 397, 686, 768, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 832, 865, 868, 1022, 1023, 1024, 1025, 1100, 1121, 1124, 1129, 1132, 1178, 1179, 1182, 1183, 1184, 1186], "adam": [45, 46, 90, 91, 140, 141, 142, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1144, 1182, 1184], "divis": [45, 46, 90, 91, 127, 402, 468, 471, 493, 496, 523, 526, 635, 638, 686, 712, 723, 748, 755, 756, 774, 776, 777, 778, 779, 780, 781, 783, 797, 799, 1182, 1183, 1184], "delta": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780], "dcdw": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 788, 789, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804], "adam_step_delta": [45, 46, 90, 91, 774, 776, 777, 778, 779, 780], "639": [45, 46, 774, 776, 777, 779], "00121": [45, 46, 776, 777], "0102": [45, 46, 776, 777], "0397": [45, 46, 776, 777], "exclus": [45, 46, 76, 77, 90, 91, 125, 127, 131, 142, 204, 205, 206, 686, 704, 734, 735, 737, 774, 792, 793, 794, 795, 796, 1050, 1052, 1053], "is_var": [45, 46, 90, 91, 774, 792, 793, 794, 795, 796], "gradient": [46, 76, 77, 91, 119, 131, 140, 141, 153, 154, 367, 392, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 790, 792, 795, 797, 799, 801, 803, 805, 807, 809, 810, 811, 812, 813, 814, 1022, 1023, 1024, 1025, 1144, 1182, 1183, 1184, 1185, 1186, 1187], "depthwise_conv2d": [49, 50, 94, 95, 815, 826, 1144], "stride": [49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "pad": [49, 50, 94, 95, 686, 713, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 961, 971, 974, 1018, 1021, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "data_format": [49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "nhwc": [49, 50, 94, 95, 815, 818, 819, 822, 823, 824, 825, 826, 1166, 1169, 1170, 1173], "dilat": [49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "batch_siz": [49, 50, 94, 95, 140, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1050, 1051], "h": [49, 50, 94, 95, 118, 131, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1026, 1029, 1042], "convolut": [49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "fh": [49, 50, 94, 95, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826], "fw": [49, 50, 94, 95, 125, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "d_in": [49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "slide": [49, 50, 94, 95, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "valid": [49, 50, 69, 70, 94, 95, 114, 115, 125, 126, 132, 137, 274, 301, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 961, 1006, 1009, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "algorithm": [49, 50, 74, 75, 94, 95, 154, 166, 168, 170, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173], "nchw": [49, 50, 94, 95, 815, 818, 819, 822, 823, 824, 825, 826, 1166, 1169, 1170, 1173], "255": [49, 50, 94, 95, 822, 823, 824, 826], "128": [49, 50, 94, 95, 274, 325, 328, 815, 821, 822, 823, 824, 826, 832, 888, 891], "linear_algebra": [51, 52, 96, 97, 119, 139, 832, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 869, 872, 874, 876, 878, 881, 883, 886, 888, 891, 893, 895, 896, 899, 901, 903, 905, 908, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944], "choleski": [51, 52, 96, 97, 832, 837], "symmetr": [51, 52, 96, 97, 131, 832, 833, 834, 835, 836, 837, 853, 856, 857, 859, 940, 944], "u": [51, 52, 96, 97, 832, 833, 834, 835, 836, 837, 910, 914], "625": [51, 52, 832, 833, 834, 836], "25": [51, 52, 53, 54, 86, 87, 102, 103, 131, 402, 493, 495, 496, 497, 655, 658, 660, 663, 665, 668, 832, 833, 834, 836, 848, 851, 860, 863, 945, 951, 952, 954, 1044, 1045, 1047, 1048, 1049, 1050, 1056, 1059, 1100, 1101, 1104], "cross": [51, 52, 53, 54, 96, 97, 98, 99, 832, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1144], "det": [51, 52, 96, 97, 832], "offset": [51, 52, 57, 58, 96, 97, 102, 103, 832, 848, 849, 850, 851, 852, 925, 926, 927, 928, 929, 1044, 1045, 1046, 1047, 1048, 1049], "axis1": [51, 52, 55, 56, 96, 97, 100, 101, 832, 848, 849, 850, 851, 852, 961, 1010, 1011, 1012, 1013], "axis2": [51, 52, 96, 97, 832, 848, 849, 850, 851, 852], "eigh": [51, 52, 96, 97, 832], "namedtupl": [51, 52, 63, 64, 96, 97, 108, 109, 832, 853, 854, 855, 856, 896, 897, 899, 910, 914, 1068, 1069, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1083], "eigvalsh": [51, 52, 73, 78, 79, 832], "inv": [51, 52, 96, 97, 139, 832, 1144], "matmul": [51, 52, 96, 97, 119, 125, 128, 137, 832, 910, 914, 1144], "matrix_norm": [51, 52, 76, 77, 96, 97, 832], "ord": [51, 52, 76, 77, 96, 97, 832, 869, 870, 871, 872, 873, 935, 936, 937, 938, 939], "fro": [51, 52, 96, 97, 832, 869, 870, 871, 872, 873], "keepdim": [51, 52, 67, 68, 69, 70, 76, 77, 96, 97, 112, 113, 114, 115, 135, 686, 772, 832, 869, 870, 871, 872, 873, 935, 936, 937, 938, 939, 1063, 1064, 1065, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "matrix_rank": [51, 52, 96, 97, 832], "rtol": [51, 52, 96, 97, 832, 878, 879, 880, 881, 882, 893, 894, 895], "matrix_transpos": [51, 52, 96, 97, 139, 832], "outer": [51, 52, 96, 97, 832, 1022, 1023, 1024, 1025], "pinv": [51, 52, 73, 78, 79, 832, 1144], "qr": [51, 52, 96, 97, 832], "reduc": [51, 52, 69, 70, 76, 77, 96, 97, 114, 115, 139, 367, 392, 686, 709, 832, 896, 897, 898, 899, 900, 1063, 1064, 1065, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "solv": [51, 52, 96, 97, 138, 153, 832], "svd": [51, 52, 96, 97, 832, 915, 919, 1144], "full_matric": [51, 52, 96, 97, 832, 910, 911, 912, 913, 914], "svdval": [51, 52, 96, 97, 832], "tensordot": [51, 52, 96, 97, 832], "trace": [51, 52, 76, 77, 96, 97, 137, 154, 686, 734, 735, 737, 832], "vecdot": [51, 52, 96, 97, 832], "vector_norm": [51, 52, 76, 77, 96, 97, 832], "vector_to_skew_symmetric_matrix": [51, 52, 96, 97, 832, 1144], "binary_cross_entropi": [53, 54, 98, 99, 945, 950], "pred": [53, 54, 98, 99, 127, 131, 134, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "predict": [53, 54, 98, 99, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "amount": [53, 54, 98, 99, 133, 367, 398, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "smooth": [53, 54, 98, 99, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "binari": [53, 54, 98, 99, 402, 448, 451, 463, 466, 473, 476, 603, 606, 945, 946, 947, 948, 949, 950], "entropi": [53, 54, 98, 99, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "357": [53, 54, 98, 99, 945, 946, 947, 948, 949, 950, 956, 957, 959, 960], "223": [53, 54, 98, 99, 945, 946, 947, 948, 949, 950, 956, 957, 958, 960], "cross_entropi": [53, 54, 98, 99, 127, 131, 134, 945, 955, 956, 959], "along": [53, 54, 55, 56, 69, 70, 74, 75, 76, 77, 96, 97, 98, 99, 100, 101, 114, 115, 119, 134, 186, 188, 190, 204, 232, 233, 235, 236, 367, 392, 686, 704, 705, 714, 772, 832, 869, 872, 925, 929, 930, 934, 935, 939, 945, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 967, 970, 979, 982, 987, 990, 996, 997, 998, 999, 1000, 1001, 1006, 1009, 1014, 1017, 1022, 1023, 1024, 1025, 1050, 1062, 1063, 1064, 1065, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "3862944": [53, 54, 945, 951, 952, 954], "sparse_cross_entropi": [53, 54, 98, 99, 945, 960], "logit": [53, 54, 98, 99, 945, 956, 957, 958, 959, 960], "spars": [53, 54, 98, 99, 945, 956, 957, 958, 959, 960], "loss": [54, 99, 119, 127, 140, 141, 142, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1144], "clip": [55, 56, 76, 77, 100, 101, 127, 131, 134, 137, 140, 142, 402, 608, 609, 686, 698, 699, 701, 961, 966, 1144], "x_min": [55, 56, 76, 77, 100, 101, 137, 142, 961, 962, 963, 964, 965, 966], "x_max": [55, 56, 76, 77, 100, 101, 137, 142, 961, 962, 963, 964, 965, 966], "roll": [55, 56, 100, 101, 120, 131, 961, 962, 963, 1000], "concat": [55, 56, 76, 77, 100, 101, 126, 367, 392, 686, 713, 961, 1144], "xs": [55, 56, 90, 91, 100, 101, 131, 686, 687, 690, 695, 774, 785, 786, 787, 961, 967, 968, 969, 970], "constant_pad": [55, 56, 100, 101, 961], "pad_width": [55, 56, 100, 101, 961, 971, 972, 973, 974, 1018, 1019, 1020, 1021], "expand_dim": [55, 56, 100, 101, 137, 140, 961, 1144], "flip": [55, 56, 100, 101, 139, 140, 142, 402, 453, 456, 961, 1144], "permute_dim": [55, 56, 100, 101, 961], "reshap": [55, 56, 76, 77, 100, 101, 125, 134, 137, 139, 142, 961, 1144], "nativeshap": [55, 56, 59, 60, 100, 101, 104, 105, 204, 212, 226, 248, 249, 266, 268, 686, 745, 753, 759, 761, 815, 817, 819, 821, 961, 992, 993, 994, 995, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060], "One": [55, 56, 76, 77, 100, 101, 104, 105, 125, 132, 137, 139, 140, 686, 709, 961, 992, 993, 994, 995, 1050, 1052, 1053, 1054], "length": [55, 56, 73, 76, 77, 78, 79, 100, 101, 125, 135, 140, 204, 205, 206, 238, 241, 832, 910, 914, 915, 919, 961, 992, 993, 994, 995], "valueerror": [55, 56, 100, 101, 137, 961, 992, 993, 994, 995, 1002, 1005], "reus": [55, 56, 100, 101, 125, 961, 992, 993, 994, 995], "memori": [55, 56, 100, 101, 133, 134, 152, 154, 367, 372, 387, 392, 398, 401, 815, 829, 961, 992, 993, 994, 995, 1144], "buffer": [55, 56, 100, 101, 154, 961, 992, 993, 994, 995], "shift": [55, 56, 80, 81, 100, 101, 120, 123, 227, 229, 231, 402, 458, 461, 468, 471, 961, 996, 997, 998, 999, 1000], "sequenc": [55, 56, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 123, 125, 126, 132, 135, 153, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 695, 715, 717, 719, 738, 762, 763, 765, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 961, 962, 964, 966, 992, 994, 996, 997, 998, 999, 1000, 1001, 1006, 1009, 1026, 1042, 1045, 1047, 1049, 1050, 1052, 1053, 1054, 1056, 1058, 1060, 1074, 1075, 1077, 1100, 1105, 1108, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1166, 1175, 1180, 1181, 1188, 1189], "larger": [55, 56, 100, 101, 125, 137, 142, 274, 314, 317, 961, 962, 965, 996, 997, 998, 999, 1000, 1100, 1121, 1124, 1129, 1132], "flatten": [55, 56, 63, 64, 76, 77, 96, 97, 100, 101, 108, 109, 686, 713, 832, 888, 891, 935, 939, 961, 987, 990, 996, 997, 998, 999, 1000, 1063, 1064, 1065, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1088], "restor": [55, 56, 100, 101, 961, 996, 997, 998, 999, 1000], "squeez": [55, 56, 100, 101, 961, 1144], "stack": [55, 56, 76, 77, 100, 101, 137, 204, 256, 260, 261, 265, 832, 843, 846, 848, 851, 853, 856, 857, 859, 860, 863, 865, 868, 874, 876, 878, 881, 883, 886, 893, 895, 896, 899, 910, 914, 915, 919, 925, 929, 961, 1026, 1027, 1036, 1037, 1144, 1166, 1175], "swapax": [55, 56, 100, 101, 961], "axis0": [55, 56, 100, 101, 961, 1010, 1011, 1012, 1013], "tile": [55, 56, 100, 101, 961, 1144], "rep": [55, 56, 100, 101, 961, 1014, 1015, 1016, 1017], "zero_pad": [55, 56, 100, 101, 961, 1144], "layer_norm": [57, 58, 102, 103, 1044, 1049], "normalized_idx": [57, 58, 102, 103, 1044, 1045, 1046, 1047, 1048, 1049], "05": [57, 58, 102, 103, 125, 774, 776, 779, 1044, 1045, 1046, 1047, 1048, 1049], "scale": [57, 58, 102, 103, 126, 131, 367, 390, 391, 774, 801, 803, 815, 827, 830, 831, 1044, 1045, 1046, 1047, 1048, 1049, 1166, 1174, 1177, 1182, 1185], "new_std": [57, 58, 102, 103, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181], "normal": [57, 58, 102, 103, 140, 961, 1006, 1009, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1055, 1180, 1181], "small": [57, 58, 102, 103, 123, 127, 137, 141, 154, 402, 610, 613, 832, 878, 881, 893, 895, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181], "constant": [57, 58, 102, 103, 119, 127, 141, 142, 154, 961, 971, 974, 1026, 1032, 1044, 1045, 1046, 1047, 1048, 1049, 1157, 1158, 1162, 1165, 1178, 1179, 1180, 1181], "denomin": [57, 58, 102, 103, 127, 154, 686, 712, 723, 748, 755, 756, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181], "_min_bas": [57, 58, 102, 103, 686, 756, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181], "learnabl": [57, 58, 102, 103, 142, 1044, 1045, 1046, 1047, 1048, 1049, 1180, 1181], "gamma": [57, 58, 102, 103, 1044, 1045, 1046, 1047, 1048, 1049], "beta": [57, 58, 102, 103, 1044, 1045, 1046, 1047, 1048, 1049], "after": [57, 58, 76, 77, 102, 103, 123, 125, 126, 131, 132, 136, 274, 361, 367, 402, 660, 663, 774, 781, 783, 785, 786, 788, 790, 797, 799, 801, 803, 805, 807, 1044, 1045, 1046, 1047, 1048, 1049, 1182, 1183, 1184, 1185, 1186, 1187], "0976": [57, 58, 1044, 1045, 1046, 1048], "3452": [57, 58, 1044, 1045, 1046, 1048], "2740": [57, 58, 1044, 1045, 1046, 1048], "1047": [57, 58, 1044, 1045, 1046, 1048], "5886": [57, 58, 1044, 1045, 1046, 1048], "2732": [57, 58, 1044, 1045, 1046, 1048], "7696": [57, 58, 1044, 1045, 1046, 1048], "7024": [57, 58, 1044, 1045, 1046, 1048], "2518": [57, 58, 1044, 1045, 1046, 1048], "001": [57, 58, 140, 141, 274, 314, 317, 402, 645, 648, 774, 776, 779, 1044, 1045, 1046, 1048], "576": [57, 58, 1044, 1045, 1046, 1048], "292": [57, 58, 1044, 1045, 1046, 1048], "33": [57, 58, 86, 87, 428, 430, 832, 888, 891, 1026, 1043, 1044, 1045, 1046, 1048, 1100, 1101, 1104], "581": [57, 58, 774, 776, 779, 1044, 1045, 1046, 1048], "891": [57, 58, 165, 181, 184, 1044, 1045, 1046, 1048], "01": [57, 58, 104, 105, 142, 402, 640, 643, 645, 648, 832, 915, 919, 1044, 1045, 1046, 1048, 1050, 1056, 1058, 1059], "579": [57, 58, 1044, 1045, 1046, 1048], "931": [57, 58, 1044, 1045, 1046, 1048], "norm": [58, 76, 77, 96, 97, 103, 119, 686, 698, 699, 701, 832, 869, 872, 935, 939, 1045, 1046, 1047, 1048, 1049, 1144, 1181, 1182, 1184], "random_uniform": [59, 60, 104, 105, 125, 133, 141, 1050, 1060, 1144], "boundari": [59, 60, 76, 77, 104, 105, 1050, 1056, 1057, 1058, 1059, 1060], "interv": [59, 60, 69, 70, 76, 77, 104, 105, 114, 115, 137, 142, 204, 205, 206, 232, 233, 235, 236, 832, 930, 934, 961, 962, 965, 1006, 1009, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "low": [59, 60, 76, 77, 104, 105, 137, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060], "sampl": [59, 60, 104, 105, 125, 815, 827, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1100, 1121, 1124, 1129, 1132, 1166, 1174], "drawn": [59, 60, 104, 105, 125, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060], "except": [59, 60, 69, 70, 76, 77, 104, 105, 114, 115, 121, 122, 130, 134, 135, 139, 154, 274, 291, 294, 686, 696, 707, 732, 768, 832, 893, 895, 961, 967, 970, 1006, 1009, 1050, 1056, 1057, 1058, 1059, 1060, 1063, 1066, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "parameter": [59, 60, 104, 105, 1050, 1055, 1056, 1057, 1058, 1059, 1060], "uniform": [59, 60, 76, 77, 104, 105, 141, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1157, 1159, 1160, 1163, 1164], "86": [59, 60, 774, 776, 779, 1050, 1056, 1057, 1059], "89": [59, 60, 125, 274, 325, 328, 402, 473, 476, 832, 920, 924, 1050, 1056, 1057, 1059, 1100, 1125, 1128], "06": [59, 60, 86, 87, 125, 274, 314, 317, 488, 490, 492, 774, 776, 779, 1050, 1056, 1057, 1059], "47": [59, 60, 402, 660, 663, 1050, 1056, 1057, 1059], "random": [60, 76, 77, 105, 119, 133, 142, 153, 1051, 1052, 1053, 1055, 1056, 1059, 1061, 1062, 1144], "unique_al": [63, 64, 108, 109, 1068], "unique_count": [63, 64, 108, 109, 1068, 1075], "count": [63, 64, 69, 70, 108, 109, 114, 115, 123, 140, 367, 386, 832, 930, 934, 961, 979, 982, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "field": [63, 64, 108, 109, 153, 832, 853, 856, 896, 899, 910, 914, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078], "uc": [63, 64, 1074, 1076], "unique_invers": [63, 64, 108, 109, 1068], "unique_valu": [63, 64, 108, 109, 1068], "argsort": [65, 66, 110, 111, 1089], "descend": [65, 66, 110, 111, 832, 910, 914, 915, 919, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "sort": [66, 73, 76, 77, 78, 79, 111, 119, 832, 853, 856, 910, 914, 915, 919, 1090, 1093], "einsum": [67, 68, 112, 113, 1100], "equat": [67, 68, 112, 113, 832, 905, 908, 1100, 1101, 1102, 1103, 1104], "max": [67, 68, 76, 77, 112, 113, 274, 314, 317, 325, 328, 402, 608, 686, 698, 699, 701, 709, 744, 745, 832, 878, 881, 893, 895, 1100, 1182, 1184], "min": [67, 68, 76, 77, 112, 113, 274, 314, 317, 325, 328, 402, 609, 686, 709, 744, 745, 755, 832, 896, 899, 910, 914, 915, 919, 935, 939, 1100], "prod": [67, 68, 76, 77, 112, 113, 123, 132, 686, 709, 1100], "std": [67, 68, 112, 113, 123, 1050, 1055, 1068, 1069, 1073, 1100], "var": [67, 68, 112, 113, 116, 117, 123, 137, 1022, 1023, 1024, 1100], "statist": [68, 113, 116, 117, 119, 125, 132, 1101, 1104, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132], "logic": [69, 70, 114, 115, 125, 129, 130, 132, 133, 139, 367, 384, 402, 588, 591, 593, 596, 598, 601, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "AND": [69, 70, 114, 115, 402, 448, 451, 588, 591, 1133, 1134, 1135, 1136, 1137, 1138], "reduct": [69, 70, 76, 77, 114, 115, 125, 132, 139, 686, 709, 744, 745, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "By": [69, 70, 114, 115, 123, 126, 127, 131, 134, 141, 142, 686, 704, 705, 832, 930, 934, 961, 987, 990, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "rank": [69, 70, 114, 115, 204, 238, 241, 686, 772, 832, 838, 841, 878, 881, 896, 899, 905, 908, 925, 929, 930, 934, 935, 939, 961, 971, 974, 975, 978, 1006, 1009, 1018, 1021, 1063, 1066, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "backward": [69, 70, 114, 115, 154, 402, 635, 638, 832, 930, 934, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "invalid": [69, 70, 114, 115, 126, 132, 135, 832, 930, 934, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "singleton": [69, 70, 114, 115, 832, 935, 939, 961, 1002, 1005, 1063, 1065, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "accordingli": [69, 70, 114, 115, 126, 135, 204, 238, 241, 402, 513, 516, 832, 935, 939, 1063, 1065, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "dimension": [69, 70, 76, 77, 114, 115, 204, 205, 206, 218, 219, 238, 241, 832, 838, 841, 843, 846, 865, 868, 878, 881, 888, 891, 893, 895, 930, 934, 935, 939, 961, 1001, 1063, 1064, 1065, 1066, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "non": [69, 70, 114, 115, 123, 131, 132, 137, 201, 202, 274, 281, 284, 330, 402, 593, 596, 598, 601, 815, 818, 832, 843, 846, 878, 881, 910, 914, 920, 924, 930, 934, 935, 939, 1063, 1064, 1065, 1066, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1117, 1120, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1178, 1179, 1182, 1186], "util": [70, 115, 119, 133, 367, 379, 1134, 1137, 1139, 1142], "add_ivy_array_instance_method": 71, "cl": [71, 72, 116, 117], "to_ignor": [71, 72, 116, 117, 1026, 1037], "loop": [71, 72, 116, 117, 128, 135, 154, 1022, 1023, 1024, 1025], "_wrap_funct": [71, 72, 116, 117, 127, 129], "toi": [71, 72, 116, 117], "arrayexampl": [71, 72], "hasattr": [71, 72, 116, 117, 121, 139], "dict_in": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 686, 743, 750], "queue_load_s": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "container_combine_method": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "list_join": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "key_length_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_ind": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_line_spac": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ivyh": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_key_color": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "keyword_color_dict": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "rebuild_child_contain": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "types_to_iteratively_nest": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "alphabetical_kei": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "containerwithactiv": [73, 74, 78, 79], "containerwithcr": [73, 78, 79, 80], "containerwithdatatyp": [73, 78, 79, 82], "containerwithdevic": [73, 78, 79, 84], "containerwithelementwis": [73, 78, 79, 86, 131], "containerwithgener": [73, 78, 79, 88], "containerwithgradi": [73, 78, 79, 90], "containerwithimag": [73, 78, 79, 92], "containerwithlay": [73, 78, 79, 94], "containerwithlinearalgebra": [73, 78, 79, 96], "containerwithloss": [73, 78, 79, 98], "containerwithnorm": [73, 78, 79, 102], "containerwithrandom": [73, 78, 79, 104], "containerwithsearch": [73, 78, 79, 106], "containerwithset": [73, 78, 79, 108], "containerwithsort": [73, 78, 79, 110], "containerwithstatist": [73, 78, 79, 112], "containerwithutil": [73, 78, 79, 114], "represent": [73, 76, 77, 78, 79, 153, 203, 274, 279, 280, 314, 317, 325, 328, 367, 370, 371, 402, 403, 406, 418, 421, 448, 451, 463, 466, 473, 476, 603, 606, 610, 613, 686, 692, 760], "dictionari": [73, 76, 77, 78, 79, 140, 154, 367, 391], "asynchron": [73, 76, 77, 78, 79], "arriv": [73, 76, 77, 78, 79], "timeout": [73, 76, 77, 78, 79, 686, 743, 750], "whitespac": [73, 76, 77, 78, 79], "indent": [73, 76, 77, 78, 79, 140], "extra": [73, 76, 77, 78, 79, 123, 125, 126, 129, 130, 137, 774, 785, 786], "newlin": [73, 76, 77, 78, 79, 122], "handl": [73, 76, 77, 78, 79, 118, 120, 125, 126, 127, 129, 131, 132, 133, 134, 141, 154, 201, 202, 367, 370, 371, 372, 373, 374, 377, 382, 386, 387, 398, 401, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1182, 1183, 1184, 1185, 1186, 1187], "color": [73, 76, 77, 78, 79, 1191, 1192], "map": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 125, 127, 131, 140, 153, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 762, 763, 765, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1026, 1033, 1034, 1038, 1039, 1045, 1047, 1049, 1056, 1058, 1060, 1074, 1075, 1077, 1134, 1136, 1138, 1139, 1141, 1143, 1166, 1177], "termcolor": [73, 76, 77, 78, 79], "rebuild": [73, 76, 77, 78, 79], "constructor": [73, 76, 77, 78, 79, 132, 133, 139, 686, 693, 1188, 1189], "param": [73, 76, 77, 78, 79, 88, 89, 137, 142, 686, 692, 714, 715, 718, 719], "alphabet": [73, 76, 77, 78, 79], "preserv": [73, 76, 77, 78, 79, 125, 142, 154, 774, 810, 961, 979, 982], "key_chain": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 281, 283, 285, 286, 288, 290, 291, 293, 295, 296, 298, 300, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 352, 354, 356, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 762, 763, 765, 781, 782, 784, 785, 787, 788, 789, 791, 792, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 833, 835, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 865, 867, 869, 871, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 913, 915, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1026, 1039, 1045, 1047, 1049, 1052, 1054, 1056, 1058, 1060, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1134, 1136, 1138, 1139, 1141, 1143], "to_appli": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 281, 283, 285, 286, 288, 290, 291, 293, 295, 296, 298, 300, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 352, 354, 356, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 762, 763, 765, 781, 782, 784, 785, 787, 788, 789, 791, 792, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 833, 835, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 865, 867, 869, 871, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 913, 915, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1026, 1039, 1045, 1047, 1049, 1056, 1058, 1060, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1134, 1136, 1138, 1139, 1141, 1143], "prune_unappli": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 281, 283, 285, 286, 288, 290, 291, 293, 295, 296, 298, 300, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 352, 354, 356, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 762, 763, 765, 781, 782, 784, 785, 787, 788, 789, 791, 792, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 833, 835, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 865, 867, 869, 871, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 913, 915, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1026, 1039, 1045, 1047, 1049, 1056, 1058, 1060, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1134, 1136, 1138, 1139, 1141, 1143], "map_sequ": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 281, 283, 285, 286, 288, 290, 291, 293, 295, 296, 298, 300, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 352, 354, 356, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 762, 763, 765, 781, 782, 784, 785, 787, 788, 789, 791, 792, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 833, 835, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 869, 871, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 913, 915, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 994, 996, 998, 1000, 1002, 1004, 1010, 1012, 1014, 1016, 1018, 1020, 1045, 1047, 1049, 1056, 1058, 1060, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1134, 1136, 1138, 1139, 1141, 1143], "static_arg_info": [73, 78, 79], "static_arg_nam": [73, 78, 79], "static_argmax": [73, 78, 79], "static_argmin": [73, 78, 79], "static_arrai": [73, 78, 79], "static_array_equ": [73, 78, 79], "static_arrays_equ": [73, 78, 79], "static_as_ivy_dev": [73, 78, 79], "static_as_ivy_dtyp": [73, 78, 79], "static_as_native_dev": [73, 78, 79], "static_as_native_dtyp": [73, 78, 79], "static_assert_supports_inplac": [73, 78, 79], "static_cache_fn": [73, 78, 79], "static_clear_mem_on_dev": [73, 78, 79], "static_clip_matrix_norm": [73, 78, 79], "static_clip_vector_norm": [73, 78, 79], "static_closest_valid_dtyp": [73, 78, 79], "static_concat": [73, 78, 79], "static_constant_pad": [73, 78, 79], "static_container_typ": [73, 78, 79], "static_conv1d": [73, 78, 79], "static_conv1d_transpos": [73, 78, 79], "static_conv2d": [73, 78, 79], "static_conv2d_transpos": [73, 78, 79], "static_conv3d": [73, 78, 79], "static_conv3d_transpos": [73, 78, 79], "static_copy_arrai": [73, 78, 79], "static_cumprod": [73, 78, 79], "static_cumsum": [73, 78, 79], "static_current_backend": [73, 78, 79], "static_current_backend_str": [73, 78, 79], "static_default": [73, 78, 79], "static_default_devic": [73, 78, 79], "static_default_dtyp": [73, 78, 79], "static_default_int_dtyp": [73, 78, 79], "static_default_uint_dtyp": [73, 78, 79], "static_dev_util": [73, 78, 79], "static_dropout": [73, 78, 79], "static_dtype_bit": [73, 78, 79], "static_eigh": [73, 78, 79], "static_eigvalsh": [73, 78, 79], "static_einops_rearrang": [73, 78, 79], "static_einops_reduc": [73, 78, 79], "static_einops_repeat": [73, 78, 79], "static_einsum": [73, 78, 79], "static_empti": [73, 78, 79], "static_exist": [73, 78, 79], "static_expand_dim": [73, 78, 79], "static_flip": [73, 78, 79], "static_floormod": [73, 78, 79], "static_fourier_encod": [73, 78, 79], "static_ful": [73, 78, 79], "static_function_supported_devic": [73, 78, 79], "static_function_unsupported_devic": [73, 78, 79], "static_gath": [73, 78, 79], "static_get_all_arrays_in_memori": [73, 78, 79], "static_get_all_ivy_arrays_on_dev": [73, 78, 79], "static_get_array_mod": [73, 78, 79], "static_get_min_bas": [73, 78, 79], "static_get_min_denomin": [73, 78, 79], "static_get_nestable_mod": [73, 78, 79], "static_get_num_dim": [73, 78, 79], "static_get_referrers_recurs": [73, 78, 79], "static_gpu_is_avail": [73, 78, 79], "static_handle_nest": [73, 78, 79], "static_handle_out_argu": [73, 78, 79], "static_has_nan": [73, 78, 79], "static_indices_wher": [73, 78, 79], "static_infer_devic": [73, 78, 79], "static_infer_dtyp": [73, 78, 79], "static_inplace_arrays_support": [73, 78, 79], "static_inplace_decr": [73, 78, 79], "static_inplace_incr": [73, 78, 79], "static_inplace_upd": [73, 78, 79], "static_inplace_variables_support": [73, 78, 79], "static_inputs_to_native_arrai": [73, 78, 79], "static_invalid_dtyp": [73, 78, 79], "static_is_arrai": [73, 78, 79], "static_is_ivy_arrai": [73, 78, 79], "static_is_ivy_contain": [73, 78, 79], "static_is_native_arrai": [73, 78, 79], "static_linear": [73, 78, 79], "static_lstm_upd": [73, 78, 79], "static_match_kwarg": [73, 78, 79], "static_matmul": [73, 78, 79], "static_max": [73, 78, 79], "static_maximum": [73, 78, 79], "static_mean": [73, 78, 79], "static_min": [73, 78, 79], "static_minimum": [73, 78, 79], "static_multi_head_attent": [73, 78, 79], "static_multinomi": [73, 78, 79], "static_multiprocess": [73, 78, 79], "static_nonzero": [73, 78, 79], "static_num_arrays_in_memori": [73, 78, 79], "static_num_cpu_cor": [73, 78, 79], "static_num_gpu": [73, 78, 79], "static_num_ivy_arrays_on_dev": [73, 78, 79], "static_one_hot": [73, 78, 79], "static_outputs_to_ivy_arrai": [73, 78, 79], "static_percent_used_mem_on_dev": [73, 78, 79], "static_permute_dim": [73, 78, 79], "static_pinv": [73, 78, 79], "static_print_all_arrays_in_memori": [73, 78, 79], "static_print_all_ivy_arrays_on_dev": [73, 78, 79], "static_prod": [73, 78, 79], "static_promote_typ": [73, 78, 79], "static_queue_timeout": [73, 78, 79], "static_random_norm": [73, 78, 79], "static_reshap": [73, 78, 79], "static_scaled_dot_product_attent": [73, 78, 79], "static_scatter_flat": [73, 78, 79], "static_scatter_nd": [73, 78, 79], "static_se": [73, 78, 79], "static_set_array_mod": [73, 78, 79], "static_set_default_devic": [73, 78, 79], "static_set_default_dtyp": [73, 78, 79], "static_set_default_float_dtyp": [73, 78, 79], "static_set_default_int_dtyp": [73, 78, 79], "static_set_default_uint_dtyp": [73, 78, 79], "static_set_min_bas": [73, 78, 79], "static_set_min_denomin": [73, 78, 79], "static_set_nestable_mod": [73, 78, 79], "static_set_queue_timeout": [73, 78, 79], "static_set_shape_array_mod": [73, 78, 79], "static_set_split_factor": [73, 78, 79], "static_set_tmp_dir": [73, 78, 79], "static_set_with_grad": [73, 78, 79], "static_shap": [73, 78, 79], "static_shape_array_mod": [73, 78, 79], "static_shuffl": [73, 78, 79], "static_split": [73, 78, 79], "static_split_factor": [73, 78, 79], "static_split_func_cal": [73, 78, 79], "static_squeez": [73, 78, 79], "static_stable_divid": [73, 78, 79], "static_stable_pow": [73, 78, 79], "static_stack": [73, 78, 79], "static_std": [73, 78, 79], "static_stop_gradi": [73, 78, 79], "static_sum": [73, 78, 79], "static_supports_inplac": [73, 78, 79], "static_swapax": [73, 78, 79], "static_til": [73, 78, 79], "static_tmp_dir": [73, 78, 79], "static_to_ivy_shap": [73, 78, 79], "static_to_list": [73, 78, 79], "static_to_native_arrays_and_back": [73, 78, 79], "static_to_native_shap": [73, 78, 79], "static_to_scalar": [73, 78, 79], "static_total_mem_on_dev": [73, 78, 79], "static_tpu_is_avail": [73, 78, 79], "static_try_else_non": [73, 78, 79], "static_type_promote_arrai": [73, 78, 79], "static_unset_array_mod": [73, 78, 79], "static_unset_default_devic": [73, 78, 79], "static_unset_default_dtyp": [73, 78, 79], "static_unset_default_float_dtyp": [73, 78, 79], "static_unset_default_int_dtyp": [73, 78, 79], "static_unset_default_uint_dtyp": [73, 78, 79], "static_unset_nestable_mod": [73, 78, 79], "static_unset_shape_array_mod": [73, 78, 79], "static_unset_with_grad": [73, 78, 79], "static_unstack": [73, 78, 79], "static_used_mem_on_dev": [73, 78, 79], "static_valid_dtyp": [73, 78, 79], "static_value_is_nan": [73, 78, 79], "static_var": [73, 78, 79], "static_vari": [73, 78, 79], "static_variable_data": [73, 78, 79], "static_wher": [73, 78, 79], "static_with_grad": [73, 78, 79], "static_zero_pad": [73, 78, 79], "containerbas": [74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131], "formul": [74, 75, 166, 168, 170], "chain": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 130, 131, 141, 142, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 762, 763, 765, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1022, 1023, 1024, 1026, 1039, 1045, 1047, 1049, 1052, 1054, 1056, 1058, 1060, 1074, 1075, 1077, 1134, 1136, 1138, 1139, 1141, 1143, 1188, 1189], "prune": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 286, 288, 290, 296, 298, 300, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 762, 763, 765, 792, 794, 796, 833, 835, 837, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 992, 994, 996, 998, 1000, 1026, 1039, 1040, 1041, 1045, 1047, 1049, 1056, 1058, 1060, 1074, 1075, 1077, 1134, 1136, 1138, 1139, 1141, 1143], "unit": [74, 75, 124, 125, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195], "slope": [74, 75, 165, 171, 173, 174, 175], "leaki": [74, 75, 165, 171, 173, 174, 175], "rectifi": [74, 75, 165, 171, 174, 176, 178, 179, 180], "static_gelu": [74, 75, 166], "static_leaky_relu": [74, 75, 171], "static_relu": [74, 75, 176], "static_sigmoid": [74, 75, 181], "static_softmax": [74, 75, 186], "static_softplu": [74, 75, 191], "static_tanh": [74, 75, 86, 87, 196], "__getitem__": [76, 77, 131], "queri": [76, 77, 131, 132, 139, 367, 379, 391, 815, 830, 831, 1166, 1177], "slice": [76, 77, 686, 714, 715, 718, 1026, 1035], "__setitem__": [76, 77, 130, 131, 139], "val": [76, 77, 134, 139, 686, 730, 731, 732, 747, 748], "all_fals": [76, 77], "assert_is_bool": [76, 77], "entri": [76, 77, 204, 232, 233, 235, 236, 961, 1001, 1026, 1039], "assert": [76, 77, 121, 125, 135, 139, 140, 686, 696], "all_key_chain": [76, 77], "include_empti": [76, 77], "all_tru": [76, 77, 131, 140], "arrays_as_list": [76, 77], "intermedi": [76, 77], "as_arrai": [76, 77, 686, 725, 753], "as_bool": [76, 77], "as_on": [76, 77], "as_random_uniform": [76, 77], "as_vari": [76, 77, 125], "as_zero": [76, 77], "assert_contains_sub_contain": [76, 77], "sub_cont": [76, 77], "diff": [76, 77, 131, 140], "screen": [76, 77, 140], "assert_contains_sub_structur": [76, 77], "check_shap": [76, 77], "assert_ident": [76, 77], "check_typ": [76, 77], "same_arrai": [76, 77, 140], "assert_identical_structur": [76, 77], "at_key_chain": [76, 77], "ignore_key_error": [76, 77], "ignore_non": [76, 77], "at_kei": [76, 77], "ignor": [76, 77, 123, 125, 154, 204, 238, 241, 860, 864, 915, 916, 1026, 1037, 1182, 1186], "substr": [76, 77], "clip_min": [76, 77], "clip_max": [76, 77], "config": [76, 77, 140, 1026, 1039], "duplic": [76, 77, 122, 128, 129, 135, 139, 141], "container_rightmost": [76, 77], "common_key_chain": [76, 77, 131], "contains_sub_contain": [76, 77], "match": [76, 77, 131, 274, 281, 284, 402, 635, 638, 686, 738], "contains_sub_structur": [76, 77], "create_if_abs": [76, 77], "inplac": [76, 77, 90, 91, 118, 120, 123, 129, 130, 139, 141, 686, 696, 729, 732, 733, 757, 774, 781, 782, 783, 784, 788, 789, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 1155, 1156, 1182, 1183, 1184, 1185, 1186, 1187], "cutoff_at_depth": [76, 77], "depth_cutoff": [76, 77], "cutoff_at_height": [76, 77], "height_cutoff": [76, 77], "deep_copi": [76, 77, 140], "intern": [76, 77, 122, 125, 130, 131, 133, 134, 774, 813, 1026, 1027, 1036, 1037, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1188, 1189], "belong": [76, 77, 141], "dev_clon": [76, 77], "dev_dist": [76, 77], "dev_str": [76, 77], "diff_kei": [76, 77], "detect_key_diff": [76, 77], "detect_value_diff": [76, 77], "detect_shape_diff": [76, 77], "treat": [76, 77, 125, 138, 142, 201, 202], "detect": [76, 77, 120, 125, 131, 135, 140, 141, 1026, 1027, 1037], "container0": [76, 77], "axes_length": [76, 77, 686, 708, 709, 710], "rearrang": [76, 77, 686, 708, 710], "callabl": [76, 77, 121, 125, 131, 137, 155, 156, 157, 158, 159, 160, 161, 162, 163, 201, 202, 274, 319, 320, 322, 323, 367, 380, 381, 392, 686, 692, 697, 707, 709, 1022, 1023, 1024, 1025, 1026, 1032, 1033, 1034, 1036, 1037, 1038, 1039], "find_sub_contain": [76, 77], "sub_cont_to_find": [76, 77], "exsit": [76, 77], "find_sub_structur": [76, 77], "sub_struc_to_find": [76, 77], "flatten_key_chain": [76, 77, 140, 1178, 1179], "__": [76, 77, 123, 140], "above_height": [76, 77, 140], "below_depth": [76, 77, 140], "format_key_chain": [76, 77], "format_fn": [76, 77], "string": [76, 77, 128, 132, 133, 135, 137, 140, 274, 279, 280, 308, 311, 330, 366, 367, 370, 371, 372, 373, 379, 387, 393, 397, 398, 401, 686, 706], "from_disk_as_hdf5": [76, 77, 140], "h5_obj_or_filepath": [76, 77], "slice_obj": [76, 77], "load": [76, 77, 154], "disk": [76, 77, 140], "h5py": [76, 77], "hdf5": [76, 77, 140, 1178, 1179], "h5": [76, 77], "from_disk_as_json": [76, 77, 140], "json_filepath": [76, 77], "json": [76, 77, 140], "from_disk_as_pickl": [76, 77, 140], "pickle_filepath": [76, 77], "pickl": [76, 77, 131, 140], "from_flat_list": [76, 77], "flat_list": [76, 77], "hierarchi": [76, 77, 140], "flat": [76, 77, 686, 744, 961, 987, 990], "popul": [76, 77, 125, 132, 133, 137, 1050, 1051, 1100, 1121, 1124, 1129, 1132], "from_numpi": [76, 77, 140], "h5_file_s": [76, 77], "batch": [76, 77, 127, 131, 140, 367, 390, 391, 686, 713, 815, 828, 832, 935, 939, 1022, 1023, 1024, 1025, 1044, 1045, 1048, 1180, 1181], "handle_inplac": [76, 77], "prime": [76, 77], "overwritten": [76, 77, 128, 130], "has_kei": [76, 77], "query_kei": [76, 77], "somewher": [76, 77], "has_key_chain": [76, 77], "include_inf": [76, 77, 686, 727, 773], "leafwis": [76, 77], "well": [76, 77, 125, 126, 134, 141, 142, 153, 686, 727, 832, 905, 908], "inf": [76, 77, 96, 97, 125, 203, 402, 438, 441, 513, 516, 543, 546, 686, 727, 773, 832, 935, 939], "identical_array_shap": [76, 77], "identical_config": [76, 77], "identical_structur": [76, 77], "if_exist": [76, 77], "key_chains_contain": [76, 77], "sub_str": [76, 77], "join": [76, 77, 961, 967, 970, 1006, 1009, 1144], "list_stack": [76, 77, 140], "dim": [76, 77, 126, 132, 686, 741, 1166, 1177], "func": [76, 77, 90, 91, 131, 201, 202, 367, 392, 686, 697, 774, 785, 786, 787, 1026, 1039], "map_cont": [76, 77], "include_self": [76, 77], "possibi": [76, 77], "max_depth": [76, 77, 686, 726, 1026, 1038], "multi_map": [76, 77, 131], "map_nest": [76, 77, 96, 97, 100, 101, 865, 867, 967, 969, 1006, 1008], "leftmost": [76, 77, 1026, 1039], "multi_map_in_static_method": [76, 77, 131], "fn_name": [76, 77], "num_arrai": [76, 77, 125], "overwrite_at_key_chain": [76, 77], "target_dict": [76, 77], "return_dict": [76, 77], "prune_empti": [76, 77], "keep_non": [76, 77], "prune_key_chain": [76, 77], "key1": [76, 77, 141], "key2": [76, 77], "key3": [76, 77], "prune_key_from_key_chain": [76, 77], "prune_kei": [76, 77], "prune_keys_from_key_chain": [76, 77], "remove_key_length_limit": [76, 77], "remove_print_limit": [76, 77], "reshape_lik": [76, 77], "leading_shap": [76, 77], "return_cont": [76, 77], "restructur": [76, 77], "keep_orig": [76, 77], "transpos": [76, 77, 139, 142, 815, 817, 819, 821, 832, 883, 886, 893, 895, 1144, 1166, 1168, 1170, 1172], "restructure_key_chain": [76, 77], "keychain_map": [76, 77], "set_at_key_chain": [76, 77], "set_at_kei": [76, 77], "set_framework": [76, 77, 137, 139, 140, 142], "set_ivy_backend": [76, 77], "ivy_backend": [76, 77], "attribut": [76, 77, 121, 122, 126, 131, 132, 138, 139, 140, 141, 274, 314, 317, 319, 320, 322, 323, 325, 328, 367, 380, 381, 388], "show_sub_contain": [76, 77], "sub_cont_or_keychain": [76, 77], "seed_valu": [76, 77, 1050, 1061], "shuffle_h5_fil": [76, 77], "dataset": [76, 77, 140, 152, 1144], "size_ordered_arrai": [76, 77], "keychain": [76, 77], "smallest": [76, 77, 274, 314, 317, 325, 328, 402, 478, 481], "largest": [76, 77, 153, 274, 314, 317, 325, 328, 832, 910, 914], "slice_kei": [76, 77], "key_slic": [76, 77], "all_depth": [76, 77], "slice_via_kei": [76, 77], "sort_by_kei": [76, 77], "num_or_size_split": [76, 77, 137, 961, 1001], "with_remaind": [76, 77, 961, 1001], "constitu": [76, 77, 142], "evenli": [76, 77, 204, 205, 206, 232, 233, 235, 236, 961, 1001], "store": [76, 77, 122, 128, 130, 131, 137, 139, 140, 141, 204, 269, 273, 686, 713, 774, 813, 832, 925, 929, 961, 1001, 1178, 1179], "preserve_typ": [76, 77, 774, 810], "stop": [76, 77, 80, 81, 137, 154, 204, 205, 206, 207, 232, 233, 234, 235, 236, 237, 367, 369, 392, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 810, 1022, 1023, 1024, 1025, 1182, 1183, 1184, 1185, 1186, 1187], "structural_diff": [76, 77], "target": [76, 77, 118, 136, 140, 141, 142, 367, 372, 1144], "to_dict": [76, 77], "to_disk_as_hdf5": [76, 77, 140], "starting_index": [76, 77], "max_batch_s": [76, 77], "later": [76, 77, 125, 686, 697], "to_disk_as_json": [76, 77, 140], "to_disk_as_pickl": [76, 77, 140], "to_flat_list": [76, 77], "to_iter": [76, 77, 131], "leaf_keys_onli": [76, 77], "to_iterator_kei": [76, 77], "to_iterator_valu": [76, 77], "to_json": [76, 77], "update_backend": [76, 77], "to_raw": [76, 77], "raw": [76, 77, 122], "trim_kei": [76, 77], "max_length": [76, 77], "try_kc": [76, 77], "tri": [76, 77], "concatten": [76, 77, 96, 97, 367, 392], "dim_siz": [76, 77], "update_config": [76, 77], "global_norm": [76, 77, 88, 89, 96, 97, 699, 700], "vector": [76, 77, 96, 97, 153, 204, 238, 241, 686, 699, 701, 815, 828, 832, 838, 841, 853, 856, 865, 868, 888, 891, 910, 914, 915, 919, 930, 934, 935, 939, 940, 941, 944, 1166, 1176], "with_default_key_color": [76, 77], "with_entries_as_list": [76, 77], "with_ivy_backend": [76, 77], "with_key_length_limit": [76, 77, 140], "with_print_ind": [76, 77, 140], "with_print_limit": [76, 77, 140], "with_print_line_spac": [76, 77], "2324": [80, 81, 204, 227, 229, 230, 231], "234": [80, 81, 204, 227, 229, 230, 231], "123": [80, 81, 125, 204, 227, 229, 230, 231, 686, 711], "static_arang": [80, 81, 205], "static_asarrai": [80, 81, 208], "static_empty_lik": [80, 81, 213], "static_ey": [80, 81, 218], "n_row": [80, 81, 204, 218, 219, 220], "n_col": [80, 81, 204, 218, 219, 220], "static_from_dlpack": [80, 81, 221], "static_full_lik": [80, 81, 227], "static_linspac": [80, 81, 232], "num": [80, 81, 137, 204, 232, 233, 234, 235, 236, 237], "endpoint": [80, 81, 204, 232, 233, 234, 235, 237], "static_logspac": [80, 81, 235], "static_meshgrid": [80, 81, 238], "static_native_arrai": [80, 81, 243], "static_on": [80, 81, 248], "static_ones_lik": [80, 81, 251], "static_tril": [80, 81, 256], "static_triu": [80, 81, 261], "static_zero": [80, 81, 266], "static_zeros_lik": [80, 81, 269], "broadcats": [82, 83, 286, 288], "int32": [82, 83, 88, 89, 125, 132, 204, 269, 273, 274, 296, 298, 299, 300, 308, 311, 325, 328, 341, 344, 357, 686, 762, 763, 765, 766, 961, 975, 978, 1050, 1056, 1059, 1100, 1117, 1120, 1125, 1128], "int64": [82, 83, 125, 132, 274, 296, 298, 299, 300, 325, 328, 346, 349, 366, 402, 468, 471, 1063, 1064, 1065, 1100, 1117, 1120, 1125, 1128], "static_astyp": [82, 83, 281], "static_broadcast_arrai": [82, 83, 286], "And": [82, 83, 286, 290], "static_broadcast_to": [82, 83, 291], "static_can_cast": [82, 83, 296], "from_": [82, 83, 274, 296, 299, 300], "static_default_float_dtyp": [82, 83, 303], "float_dtyp": [82, 83, 274, 303, 304, 305, 358], "static_dtyp": [82, 83, 308], "static_finfo": [82, 83, 314], "static_function_supported_dtyp": [82, 83, 319], "fn": [82, 83, 121, 137, 139, 155, 156, 157, 158, 159, 160, 161, 162, 163, 274, 319, 320, 321, 322, 323, 324, 367, 380, 381, 686, 692, 768, 1026, 1027, 1032, 1033, 1034, 1036, 1037, 1038, 1147, 1149], "static_function_unsupported_dtyp": [82, 83, 322], "static_iinfo": [82, 83, 325], "static_is_bool_dtyp": [82, 83, 331], "dtype_in": [82, 83, 274, 279, 280, 313, 330, 331, 334, 335, 336, 339, 340, 341, 344, 345, 346, 349, 350, 366], "static_is_float_dtyp": [82, 83, 336], "static_is_int_dtyp": [82, 83, 341], "static_is_uint_dtyp": [82, 83, 346], "static_result_typ": [82, 83, 352], "static_dev": [84, 85, 374], "static_to_devic": [84, 85, 393], "02": [86, 87, 428, 430, 774, 776, 779, 1050, 1056, 1059], "21": [86, 87, 274, 325, 328, 402, 428, 430, 438, 440, 441, 442, 473, 476, 686, 704, 832, 848, 851, 888, 891, 945, 956, 959, 1100, 1101, 1104], "61": [86, 87, 98, 99, 402, 428, 430, 665, 668, 815, 822, 825, 945, 946, 948, 949, 950, 956, 958, 960, 1050, 1056, 1059], "915": [86, 87, 402, 438, 440, 441, 442], "29": [86, 87, 104, 105, 402, 438, 440, 441, 442, 1050, 1056, 1058, 1059, 1060], "983": [86, 87, 402, 438, 440, 441, 442], "75": [86, 87, 402, 428, 431, 432, 438, 440, 441, 442, 493, 496, 832, 860, 863, 888, 891, 1050, 1056, 1059], "35": [86, 87, 104, 105, 402, 438, 440, 441, 442, 660, 663, 815, 831, 832, 838, 841, 1056, 1060, 1063, 1067, 1100, 1101, 1104], "978": [86, 87, 165, 181, 184, 402, 438, 440, 441, 442], "696": [86, 87, 402, 438, 440, 441, 442], "993": [86, 87, 402, 438, 440, 441, 442], "96": [86, 87, 196, 197, 402, 483, 485, 486, 487, 675, 679, 774, 776, 779, 832, 888, 891, 1050, 1056, 1059, 1100, 1101, 1104], "34": [86, 87, 274, 325, 328, 402, 473, 476, 488, 490, 492, 655, 657, 659, 660, 663, 1050, 1056, 1059], "98": [86, 87, 402, 473, 476, 488, 490, 492, 655, 657, 659, 832, 888, 891, 1050, 1056, 1059, 1063, 1067, 1100, 1101, 1104], "52": [86, 87, 104, 105, 402, 438, 441, 488, 490, 492, 493, 495, 496, 497, 774, 776, 779, 832, 888, 891, 1050, 1052, 1054, 1056, 1059, 1068, 1069, 1073, 1100, 1101, 1104], "333": [86, 87, 402, 493, 495, 496, 497, 815, 822, 825], "thefunct": [86, 87, 503, 505, 513, 517, 518, 522], "649": [86, 87, 513, 515], "220": [86, 87, 513, 515], "959": [86, 87, 402, 513, 515, 650, 652, 653, 654], "53": [86, 87, 367, 398, 513, 515, 1050, 1056, 1059], "865": [86, 87, 513, 515], "metho": [86, 87, 533, 535, 578, 580], "20": [86, 87, 104, 105, 139, 402, 473, 476, 508, 511, 513, 516, 640, 642, 643, 644, 660, 663, 832, 848, 851, 888, 891, 920, 924, 1050, 1052, 1053, 1054, 1063, 1066, 1067, 1100, 1101, 1104], "300": [86, 87, 125, 402, 640, 642, 643, 644], "527": [86, 87, 402, 640, 642, 643, 644], "301": [86, 87, 402, 640, 642, 643, 644], "757": [86, 87, 402, 650, 652, 653, 654], "279": [86, 87, 402, 650, 652, 653, 654], "37": [86, 87, 104, 105, 402, 428, 431, 432, 655, 657, 659, 675, 679, 1052, 1054], "835": [86, 87, 655, 657, 659], "347": [86, 87, 655, 657, 659], "721": [86, 87, 655, 657, 659], "static_ab": [86, 87, 403], "static_aco": [86, 87, 408], "static_acosh": [86, 87, 413], "static_add": [86, 87, 122, 123, 131, 418], "static_asin": [86, 87, 423], "static_asinh": [86, 87, 428], "97": [86, 87, 402, 428, 431, 432], "static_atan": [86, 87, 433], "static_atan2": [86, 87, 438], "static_atanh": [86, 87, 443], "static_bitwise_and": [86, 87, 448], "static_bitwise_invert": [86, 87, 453], "static_bitwise_left_shift": [86, 87, 458], "static_bitwise_or": [86, 87, 463], "static_bitwise_right_shift": [86, 87, 468], "static_bitwise_xor": [86, 87, 473], "static_ceil": [86, 87, 478], "static_co": [86, 87, 483], "static_cosh": [86, 87, 488], "static_divid": [86, 87, 131, 493], "static_equ": [86, 87, 498], "static_erf": [86, 87, 503], "static_exp": [86, 87, 508], "static_expm1": [86, 87, 402, 513, 516], "areal": [86, 87, 513, 517], "static_floor": [86, 87, 518], "static_floor_divid": [86, 87, 523], "static_great": [86, 87, 528], "static_greater_equ": [86, 87, 533], "static_isfinit": [86, 87, 538], "x_i": [86, 87, 122, 402, 403, 406, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 453, 456, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 538, 541, 542, 543, 546, 547, 548, 551, 552, 563, 566, 568, 571, 578, 581, 593, 596, 615, 618, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 675, 679, 680, 681, 685, 1068, 1069, 1073, 1074, 1078, 1084, 1088, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132], "static_isinf": [86, 87, 402, 543, 546], "static_isnan": [86, 87, 548], "static_less": [86, 87, 553], "static_less_equ": [86, 87, 558], "static_log": [86, 87, 563], "static_log10": [86, 87, 568], "static_log1p": [86, 87, 573], "static_log2": [86, 87, 578], "static_logaddexp": [86, 87, 583], "static_logical_and": [86, 87, 588], "static_logical_not": [86, 87, 593], "static_logical_or": [86, 87, 598], "static_logical_xor": [86, 87, 603], "static_multipli": [86, 87, 131, 610], "static_neg": [86, 87, 615], "static_not_equ": [86, 87, 620], "static_posit": [86, 87, 625], "static_pow": [86, 87, 630], "static_remaind": [86, 87, 635], "static_round": [86, 87, 640], "thevfunct": [86, 87, 640, 644], "static_sign": [86, 87, 645], "static_sin": [86, 87, 650], "static_sinh": [86, 87, 655], "static_sqrt": [86, 87, 660], "static_squar": [86, 87, 665], "static_subtract": [86, 87, 131, 670], "static_tan": [86, 87, 123, 131, 675], "143": [86, 87, 123, 402, 675, 676, 678, 679], "38": [86, 87, 104, 105, 123, 274, 314, 317, 402, 675, 676, 678, 679, 1056, 1060], "995": [86, 87, 196, 197, 199, 402, 680], "9999": [86, 87, 196, 197], "static_trunc": [86, 87, 681], "static_all_equ": [88, 89, 687, 689], "max_norm": [88, 89, 686, 698, 699, 700, 701], "static_gather_nd": [88, 89, 715], "static_to_numpi": [88, 89, 762, 765], "lr": [90, 91, 140, 141, 774, 781, 782, 783, 784, 788, 789, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 1182, 1183, 1184, 1185, 1186, 1187], "mw_tm1": [90, 91, 774, 781, 782, 783, 784, 797, 798, 799, 800], "vw_tm1": [90, 91, 774, 781, 782, 783, 784, 797, 798, 799, 800], "max_trust_ratio": [90, 91, 774, 797, 798, 799, 800, 1182, 1184], "decay_lambda": [90, 91, 774, 797, 798, 799, 800, 801, 802, 803, 804, 1182, 1184, 1185], "effective_grad": [90, 91, 774, 805, 806, 807, 808], "static_adam_step": [90, 91, 776], "87": [90, 91, 104, 105, 774, 776, 779, 780, 1052, 1054], "976": [90, 91, 402, 680, 774, 776, 779, 780], "static_adam_upd": [90, 91, 781], "static_execute_with_gradi": [90, 91, 785], "retain_grad": [90, 91, 131, 774, 785, 786, 787], "static_gradient_descent_upd": [90, 91, 788], "static_is_vari": [90, 91, 792], "static_lamb_upd": [90, 91, 797], "static_lars_upd": [90, 91, 801], "static_optimizer_upd": [90, 91, 805], "inp": [94, 95, 815, 822, 824, 825, 826], "static_depthwise_conv2d": [94, 95, 822], "73": [96, 97, 125, 402, 660, 663, 832, 833, 835, 836, 837, 1044, 1045, 1048], "577": [96, 97, 832, 833, 835, 836, 837], "41": [96, 97, 139, 402, 473, 476, 660, 663, 832, 833, 835, 836, 837, 1050, 1056, 1059, 1100, 1125, 1128], "707": [96, 97, 832, 833, 835, 836, 837], "liter": [96, 97, 135, 832, 935, 939], "nuc": [96, 97], "static_choleski": [96, 97, 833], "static_rol": [96, 97, 100, 101, 123, 131, 833, 837, 962, 966, 996], "static_cross": [96, 97, 838], "static_det": [96, 97, 843], "static_diagon": [96, 97, 848], "static_inv": [96, 97, 860], "static_matrix_norm": [96, 97, 869], "static_matrix_pow": [96, 97, 874], "static_matrix_rank": [96, 97, 878], "static_matrix_transpos": [96, 97, 883], "static_out": [96, 97, 888], "static_qr": [96, 97, 896], "static_slogdet": [96, 97, 901], "static_solv": [96, 97, 905], "static_svd": [96, 97, 910], "static_svdv": [96, 97, 915], "static_tensordot": [96, 97, 920], "static_trac": [96, 97, 925], "static_vecdot": [96, 97, 930], "static_vector_norm": [96, 97, 935], "static_vector_to_skew_symmetric_matrix": [96, 97, 940], "511": [98, 99, 945, 946, 948, 949, 950, 956, 958, 960], "5108256": [98, 99, 951, 953], "609438": [98, 99, 951, 953], "static_binary_cross_entropi": [98, 99, 946], "static_cross_entropi": [98, 99, 951], "20397282": [98, 99, 951, 955], "83258148": [98, 99, 951, 955], "60943794": [98, 99, 951, 955], "static_sparse_cross_entropi": [98, 99, 956], "static_clip": [100, 101, 962], "static_repeat": [100, 101, 987], "658": [102, 103, 1044, 1045, 1047, 1048, 1049], "04": [102, 103, 274, 314, 317, 402, 513, 516, 815, 831, 1044, 1045, 1047, 1048, 1049], "759": [102, 103, 1044, 1045, 1047, 1048, 1049], "403": [102, 103, 1045, 1047, 1049], "62": [102, 103, 104, 105, 402, 655, 658, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1059], "static_layer_norm": [102, 103, 1045], "08": [104, 105, 125, 402, 428, 431, 513, 516, 815, 831, 1050, 1056, 1058, 1059], "79": [104, 105, 402, 473, 476, 493, 496, 1050, 1056, 1058, 1059], "31": [104, 105, 402, 660, 663, 832, 915, 919, 1050, 1056, 1058, 1059], "static_randint": [104, 105, 1052], "highest": [104, 105, 1050, 1052, 1053, 1054], "half": [104, 105, 204, 205, 206, 1050, 1052, 1053, 1054, 1056, 1059], "40": [104, 105, 402, 488, 491, 660, 663, 832, 888, 891, 1052, 1054, 1100, 1101, 1104], "95": [104, 105, 402, 645, 648, 774, 776, 779, 1050, 1052, 1054, 1056, 1059], "static_random_uniform": [104, 105, 1056], "69": [104, 105, 1056, 1060], "481": [104, 105, 1056, 1060], "74": [104, 105, 402, 473, 476, 1056, 1060], "0999": [104, 105, 1056, 1060], "static_unique_al": [108, 109, 1069], "static_unique_count": [108, 109, 1074], "classivi": [108, 109, 961, 1001, 1068, 1074, 1075, 1077, 1078], "static_unique_invers": [108, 109, 1079], "static_unique_valu": [108, 109, 1084], "static_argsort": [110, 111, 1090], "static_sort": [110, 111, 1095], "static_al": [114, 115, 1134], "static_ani": [114, 115, 1139], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 136, 154], "mainli": [118, 138, 140], "under": [118, 122, 123, 124, 125, 126, 127, 131, 136, 137, 140, 142], "hood": [118, 123, 125, 127, 131, 136, 137, 140, 142], "weed": [118, 136], "behind": [118, 125, 136, 138, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807], "tour": 118, "primari": [118, 125, 128, 134, 154], "composit": [118, 125, 128, 130, 131, 134, 137, 141, 142, 154], "nestabl": [118, 122, 123, 125, 134, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 848, 851, 961, 996, 999, 1044, 1045, 1048, 1068, 1074, 1078, 1100, 1105, 1108, 1133, 1134, 1137], "dynam": [118, 132, 133, 134, 137, 201, 202], "runtim": [118, 125, 367], "j": [118, 686, 694, 695, 832, 925, 929, 1100, 1101, 1104], "helper": [118, 140], "borrow": 118, "taken": [119, 135, 142, 832, 848, 851], "compil": [119, 131, 136, 138, 154, 1144, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187], "meta": [119, 130, 1023, 1024, 1025], "overlap": 119, "sever": [119, 154, 832, 860, 863], "judgement": 119, "locat": [119, 125, 128, 133, 1050, 1051], "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 135, 139, 154, 1144], "anyth": [119, 125, 1144], "refactor": 119, "ongo": 119, "file_nam": [119, 125], "my_func": [119, 123], "my": 119, "cooler": 119, "produc": [119, 125, 815, 831], "something_cool": 119, "category_nam": [120, 122, 127, 132, 133], "backend_nam": [120, 122, 127, 128, 129, 132, 133], "adress": 120, "conveni": [120, 132, 133, 138, 140, 141], "revisit": [120, 142], "dedic": [120, 139, 141, 774, 813, 1155, 1156], "four": [120, 123, 127, 132, 140], "tf": [120, 121, 126, 130, 132, 133, 134, 137, 142, 154, 1144], "jnp": [120, 121, 132, 133, 134, 142, 1144], "jaxarrai": [120, 121, 132, 133, 134], "wherea": [120, 123, 125, 127, 130, 132, 133, 142], "__sub__": [120, 123, 130, 131, 139], "__mul__": [120, 123, 130, 131, 139], "__div__": 120, "permit": [120, 125, 130], "dicat": 120, "addition": [120, 131, 134], "omit": [120, 134, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "wrapper": [120, 129, 130, 131, 132, 134, 139], "contrast": [120, 122], "futher": 120, "absenc": [120, 131], "pep": 120, "484": 120, "annot": [120, 135], "dictat": [120, 123, 130, 134], "brittl": 120, "intend": [120, 1100, 1125, 1128], "subset": [120, 122, 125, 137], "freeli": 120, "extend": [120, 122, 128], "consum": [120, 125, 131], "inde": [120, 154], "flexibl": 120, "technic": [120, 131, 134, 154], "original_typ": 120, "cumbersom": 120, "readabl": [120, 121, 130, 131, 139, 140], "clean": [121, 135, 137, 138, 140], "_assert_fill_value_and_dtype_are_compat": 121, "isinst": [121, 141, 142, 686, 760], "verifi": [121, 125, 132, 133, 139, 1144, 1150], "_to_devic": 121, "experiment": 121, "_is_valid_dtypes_attribut": 121, "supported_dtyp": 121, "unsupported_dtyp": [121, 126, 132], "fn_supported_dtyp": 121, "fn_unsupported_dtyp": 121, "backend_str": 121, "account": 122, "instanti": 122, "firstli": [122, 123, 127, 130, 132, 134, 140], "templat": [122, 125, 1144], "spec": [122, 123], "api_specif": [122, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 832, 848, 851, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108], "array_api": 122, "preview": 122, "render": 122, "incorrectli": [122, 135], "onlin": [122, 1144], "domain": [122, 402, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 578, 581, 650, 653, 655, 658, 660, 663, 675, 679, 680], "codomain": [122, 402, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 578, 581, 650, 653, 655, 658, 660, 663, 675, 679, 680], "assum": [122, 125, 128, 132, 139, 140, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 483, 486, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1048, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137], "operand": [122, 126, 402, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 473, 476, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 1100, 1101, 1104, 1105, 1108, 1113, 1116, 1125, 1128], "ref": [122, 402, 468, 471, 553, 556, 610, 613, 620, 623, 635, 638, 670, 674, 961, 1006, 1009], "But": [122, 131, 142], "needless": 122, "info": [122, 1144], "renam": 122, "conform": [122, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 832, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137], "org": [122, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 314, 317, 325, 328, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 774, 776, 779, 781, 783, 832, 848, 851, 961, 975, 978, 996, 999, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108], "elementwise_funct": [122, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 832, 848, 851, 961, 996, 999, 1068, 1069, 1073, 1089, 1090, 1093, 1100, 1105, 1108], "descript": [122, 125, 131, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 935, 939, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1048, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108, 1133, 1134, 1137], "simplic": [122, 141, 153, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 296, 299, 331, 334, 341, 344, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 815, 818, 822, 825, 831, 832, 833, 836, 843, 846, 848, 851, 961, 975, 978, 979, 982, 996, 999, 1044, 1045, 1048, 1068, 1069, 1073, 1074, 1078, 1089, 1090, 1093, 1100, 1105, 1108], "judgment": 122, "beyond": [122, 961, 996, 999], "text": 122, "func_nam": [122, 123, 127], "pure": [122, 139, 142, 154], "themselv": [122, 127, 131, 132, 133, 141, 1026, 1027], "operator_nam": 122, "succinct": 122, "contstructor": 122, "though": [122, 127, 132, 140, 154], "forward": [122, 125, 142, 153, 154, 1178, 1179, 1182, 1186], "_forward": [122, 137, 140, 141, 1144], "former": 122, "explicitli": [122, 127, 128, 130, 131, 134, 137, 154, 832, 853, 856, 1166, 1175, 1177, 1178, 1179], "latter": [122, 128], "implicit": [122, 125, 131, 137, 860, 864, 915, 916], "docst": 122, "eight": 123, "static_": 123, "op_nam": 123, "__r": 123, "__truediv__": [123, 130, 131], "recap": [123, 131, 141], "independ": [123, 124, 129, 131, 137, 142, 832, 838, 841, 905, 908, 1050, 1051], "combinatorili": 123, "variat": [123, 125], "grid": [123, 125, 153, 204, 238, 241], "vari": [123, 125, 131, 139, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "simplest": [123, 125], "unus": [123, 134, 135, 201, 202], "excess": [123, 128, 139], "okai": [123, 137], "showcas": [123, 153], "demonstr": [123, 139], "replic": [123, 132], "meant": 123, "imaginari": 123, "some_flag": 123, "another_flag": 123, "jointli": 123, "three": [123, 125, 126, 131, 136, 204, 238, 241, 1144], "x0": [123, 686, 694], "procedur": 123, "sens": [123, 131, 139], "5574077": 123, "1850398": 123, "5463025": 123, "8422884": 123, "91601413": 123, "9647598": 123, "3738229": 123, "1597457": 123, "0963247": 123, "9955841": 123, "3278579": 123, "multi": [123, 131, 136, 154, 815, 830, 832, 838, 841, 1144, 1150, 1166, 1177], "seper": [123, 686, 713], "pars": [123, 154], "satisfi": [123, 832, 940, 944], "far": [123, 133, 138, 139, 1026, 1027, 1037], "asid": [123, 153], "irrelev": [123, 132], "increasingli": 123, "complex": [123, 126, 140, 141, 142, 154, 832, 853, 856, 910, 914], "14254655": 123, "1578213": 123, "380515": 123, "trivial": 123, "exlud": 123, "thoroughli": 124, "ci": [124, 125, 154], "failur": 124, "On": [125, 126, 135, 138, 142], "fixtur": 125, "hit": [125, 137], "action": 125, "eleg": 125, "intellig": 125, "rang": [125, 140, 141, 142, 204, 205, 206, 232, 233, 235, 236, 1068, 1069, 1073, 1100, 1117, 1120, 1125, 1128, 1144], "cach": [125, 127, 367, 372, 686, 697], "unexplor": 125, "known": 125, "repeatedli": [125, 131, 1026, 1035], "upload": 125, "artifact": 125, "parametr": 125, "statement": [125, 135, 154], "plai": [125, 126, 142], "varieti": [125, 132, 133], "valid_int_dtyp": 125, "int8": [125, 132, 274, 325, 328, 341, 344, 366], "int16": [125, 132, 274, 296, 299, 325, 328, 341, 344, 1100, 1117, 1120, 1125, 1128], "uint8": [125, 132, 274, 296, 299, 307, 346, 349, 357, 360, 365, 366], "uint16": [125, 132, 274, 307, 322, 323, 325, 328, 346, 349, 1100, 1117, 1120, 1125, 1128], "uint32": [125, 132, 274, 307, 322, 323, 325, 328, 365, 1100, 1117, 1120, 1125, 1128], "uint64": [125, 132, 274, 307, 322, 323, 325, 328, 357, 360, 1100, 1117, 1120, 1125, 1128], "custom_strategi": 125, "st": 125, "sampled_from": 125, "min_siz": 125, "max_siz": 125, "wherein": 125, "referenc": 125, "print_hypothesis_exampl": 125, "searchstrategi": 125, "randomis": 125, "simplist": 125, "intricaci": 125, "briefli": [125, 127, 140], "bound": [125, 137], "mechan": [125, 152, 154, 1144], "power": [125, 139, 140, 141, 402, 468, 471, 508, 511, 630, 633, 686, 722, 747, 756, 832, 874, 876, 1157], "math": [125, 134, 142, 402, 543, 546, 1144], "inclus": [125, 134, 204, 205, 206, 1050, 1052, 1053], "width": 125, "losslessli": 125, "mostli": 125, "one_of": 125, "datum": 125, "pipe": 125, "overload": 125, "shorthand": 125, "draw": [125, 1050, 1051, 1055, 1056, 1059], "input_dtyp": 125, "reject": 125, "flatmap": 125, "suppos": 125, "interact": [125, 1144], "dataobject": 125, "test_argsort": 125, "decor": [125, 127, 129, 131, 132, 133, 134], "initialis": [125, 367], "snippet": 125, "dtype_and_x": 125, "dtype_and_valu": 125, "valid_float_dtyp": 125, "list_of_length": 125, "num_positional_arg": 125, "instance_method": 125, "test_leaky_relu": 125, "float16": [125, 126, 132, 274, 314, 317, 322, 323, 366, 1050, 1056, 1059], "exhaust": 125, "num_posit": 125, "indirectli": 125, "advis": 125, "seri": [125, 126], "9433925": 125, "401298464324817e": 125, "574352379": 125, "99999": 125, "2250738585072014e": 125, "308": [125, 274, 314, 317], "103515625e": 125, "unpack": [125, 135, 686, 772], "seamlessli": 125, "edg": [125, 137, 142, 961, 962, 965, 971, 974, 1018, 1021, 1144], "encount": 125, "criterion": 125, "straight": [125, 139, 1144], "array_valu": 125, "valid_ax": 125, "hand": [125, 127, 135, 154], "craft": 125, "polici": [125, 153], "hoc": 125, "overview": [125, 136, 153], "array_dtyp": 125, "array_bool": 125, "na": 125, "test_concat": 125, "test_devic": 125, "array_shap": 125, "test_manipul": 125, "common_shap": 125, "test_lay": 125, "size_bound": 125, "precis": [125, 274, 314, 317, 402, 610, 613, 660, 663], "283405296074752": 125, "564049465049088": 125, "0417876997507982e": 125, "min_valu": 125, "max_valu": 125, "allow_inf": 125, "min_num_dim": 125, "wherev": 125, "reshape_shap": 125, "stand": 125, "alon": [125, 367, 387, 401], "fashion": 125, "some_sequ": 125, "allow_subnorm": 125, "exclude_min": 125, "960464477539063e": 125, "coverag": 125, "allow_nan": 125, "Such": 125, "kind": [125, 154, 274, 314, 317, 325, 328, 402, 630, 633, 1100, 1117, 1120, 1125, 1128], "get_shap": 125, "allow_non": 125, "max_num_dim": 125, "min_dim_s": 125, "none_or_list_of_float": 125, "200": 125, "199": [125, 402, 428, 431], "99999999999997": 125, "000000000000002": 125, "125": 125, "43759670925832": 125, "get_mean_std": 125, "probabilist": 125, "811428143185347e": 125, "none_or_list_float": 125, "get_bound": 125, "arrays_valu": 125, "put": [125, 154], "36418": 125, "213": 125, "21716926": 125, "get_prob": 125, "unnorm": [125, 1050, 1051], "099609375": 125, "get_axi": 125, "number_positional_argu": 125, "mind": [125, 130, 131], "bodi": 125, "test_valu": 125, "enough": [125, 139, 140, 141], "justifi": 125, "unduli": 125, "labori": 125, "straightforward": [125, 140], "scenario": 125, "autom": [125, 1144], "report": 125, "test_demo": 125, "falsifi": 125, "failing_test": 125, "traceback": 125, "assertionerror": [125, 774, 814], "shrink": 125, "prescrib": 125, "behavior": [125, 131, 137, 154, 402, 630, 633, 635, 638, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "identifi": 125, "closest": [125, 274, 301, 402, 478, 481, 518, 521, 523, 526, 640, 643, 681, 685], "checkout": 125, "scratch": 125, "databas": 125, "therebi": 125, "debug": [125, 131, 140], "event": [125, 1144], "test_gelu": 125, "test_fil": 125, "brief": 125, "phase": [125, 154], "notabl": 125, "displai": [125, 131, 140], "verbos": [125, 137, 1144, 1192], "newer": 125, "max_exampl": 125, "impact": [125, 141], "deadlin": 125, "weird": 125, "truth": [125, 402, 498, 501, 528, 531, 533, 536, 553, 556, 558, 561, 620, 623], "opt": [125, 128, 134, 139], "defer": [125, 127, 130, 131, 132, 133, 134], "suffic": [125, 129], "catch": [125, 686, 707], "systemat": 125, "safeguard": 125, "inabl": 125, "lax": [126, 154], "bfloat16": [126, 132], "thu": [126, 402, 468, 471, 630, 633, 635, 638, 832, 853, 856], "categoris": 126, "notic": [126, 139], "mathematical_funct": 126, "arithmetic_oper": 126, "same_kind": 126, "subok": 126, "mathemat": [126, 203, 402, 418, 421, 438, 441, 513, 516, 610, 613, 832, 935, 939], "slightli": [126, 131, 137, 141], "recov": 126, "obtain": 126, "trigonometric_funct": 126, "pointwise_op": 126, "concaten": [126, 137, 140, 686, 713, 961, 967, 970, 1144], "manipulation_routin": 126, "joining_arrai": 126, "indexing_slicing_joining_mutating_op": 126, "cat": [126, 137, 142], "grasp": 126, "youtub": 126, "categor": [127, 133], "mutual": [127, 131], "constitut": [127, 137, 1100, 1121, 1124, 1129, 1132], "venn": 127, "diagram": 127, "light": [127, 154], "log_pr": [127, 131, 134], "array_arg": 127, "typic": 127, "whatsoev": [127, 131], "commonli": [127, 1100, 1121, 1124, 1129, 1132], "outsid": [127, 133, 135, 137, 139, 142, 961, 962, 965, 1006, 1009], "deal": [127, 154], "concurr": [127, 131], "modif": 127, "group": [127, 131], "get_all_arrays_on_dev": 127, "nested_map": [127, 1026], "index_nest": [127, 1026], "implicit_backend": 128, "unless": [128, 133, 134, 154, 402, 610, 613, 686, 741], "__dict__": [128, 137, 139], "ivy_original_dict": [128, 137], "unmodifi": [128, 132], "fallback": 128, "freedom": [128, 1100, 1121, 1124, 1129, 1132], "recommend": [128, 402, 593, 596, 598, 601, 635, 638, 1100, 1109, 1112], "achiev": [129, 135, 140, 142], "topic": [129, 139], "_data": [130, 139], "organiz": [130, 131], "inherit": [130, 131, 139], "bear": [130, 131, 132], "necessarili": [130, 131], "although": [130, 131], "underpin": [130, 131, 137], "programmat": [130, 131], "backup": [130, 131], "accident": [130, 131], "absent": [130, 131], "perk": [130, 131], "auto": [130, 131, 140], "throw": [130, 139], "imposs": 130, "coupl": [130, 131, 139, 141], "anywai": 130, "secondli": [130, 132], "easier": 130, "five": [131, 140], "decis": [131, 137, 139], "arbitrarili": [131, 140], "__repr__": 131, "control": [131, 132, 134, 139, 140, 153], "__getattr__": 131, "underli": [131, 402, 448, 451, 463, 466, 473, 476, 603, 606], "__setattr__": 131, "__contains__": 131, "__getstate__": 131, "__setstate__": 131, "unpickl": 131, "expand": [131, 686, 713, 961, 975, 978], "counterpart": 131, "irrespect": [131, 134, 139, 274, 281, 284], "presenc": [131, 134], "implicitli": [131, 860, 864, 915, 916], "intuit": [131, 140, 141], "chronolog": 131, "had": [131, 134], "sequenti": [131, 141], "flow": [131, 153], "implic": 131, "eager": [131, 154], "children": 131, "shallowest": 131, "deepest": 131, "22": [131, 402, 473, 476, 832, 848, 851, 888, 891, 1026, 1043, 1050, 1056, 1059, 1063, 1067, 1100, 1101, 1104], "dy": [131, 774, 785, 786], "dx": [131, 774, 785, 786], "autograd": [131, 154], "grad": [131, 140, 141, 142, 1144, 1182, 1186], "redund": 131, "num_head": [131, 815, 830, 1166, 1177], "mask": [131, 815, 830, 831], "to_q_fn": [131, 815, 830], "to_kv_fn": [131, 815, 830], "to_out_fn": [131, 134, 815, 830], "to_q_v": [131, 815, 830], "to_kv_v": [131, 815, 830], "to_out_v": [131, 815, 830], "measur": [131, 815, 830, 1166, 1177], "dot": [131, 815, 830, 831, 832, 920, 924, 930, 934, 1166, 1177], "all_dtyp": 132, "all_numeric_dtyp": 132, "all_int_dtyp": 132, "all_float_dtyp": 132, "fall": [132, 136, 1144, 1178, 1179, 1182, 1186], "thirdli": 132, "native_float32": [132, 274, 366], "importantli": [132, 139, 142, 153], "arguabl": [132, 133], "compound": 132, "overflow": [132, 402, 418, 421, 1100, 1125, 1128], "arr": [132, 133], "settabl": [132, 133], "mx": [132, 133, 134, 1144], "nd": [132, 133, 134, 137, 142, 1144], "deleg": 132, "shape_to_tupl": 132, "idx": [133, 139, 686, 692], "tpu": [133, 367, 390, 399], "aliv": [133, 367, 382, 386, 388, 686, 720, 740, 742], "dual": 133, "thrown": [133, 154, 686, 732], "rare": [133, 154], "program": 134, "strictli": 134, "ration": 134, "speak": 134, "subtli": 134, "ensure_in_backend": [134, 686, 732], "x_nativ": 134, "val_n": 134, "assign": [134, 135, 139], "elif": 134, "unspecifi": [134, 402, 630, 633, 635, 638, 832, 853, 856, 961, 1006, 1009], "predominantli": [134, 153], "altern": [134, 140], "_wrap_fn": 134, "maxim": [134, 137], "inner": [134, 139, 832, 853, 856, 865, 868, 1022, 1023, 1024, 1025], "third": [134, 154, 832, 910, 914, 1068, 1069, 1073], "leverag": 134, "equival": [134, 140, 142, 204, 205, 206, 402, 468, 471, 593, 596, 598, 601, 635, 638, 832, 878, 881, 893, 895, 905, 908, 935, 939], "input_arrai": 134, "flake8": 135, "undefin": 135, "yield": [135, 1063, 1067], "handler": [135, 136, 138, 142, 1144], "carri": 135, "star": 135, "byte": 135, "notimpl": 135, "notimplementederror": 135, "unsuccess": 135, "exce": [135, 402, 609], "black": 135, "disobei": 135, "successfulli": 135, "comparison": 135, "sound": 136, "higher": [136, 137, 142, 154, 774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807], "fledg": [137, 138], "syntact": [137, 142], "clip_by_valu": [137, 142], "clamp": [137, 142], "fit": [137, 961, 987, 990], "construct": [137, 138, 141, 142, 961, 1014, 1017, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189], "power_seq": 137, "resid": [137, 141], "ml_framework": [137, 142, 204, 205, 206], "current_framework": [137, 142], "furthermor": 137, "framework_handl": 137, "face": 137, "cprint": [137, 1191], "framework_stack": 137, "_determine_framework_from_arg": 137, "get_framework": 137, "neither": [137, 402, 418, 421, 610, 613, 774, 814, 860, 864, 915, 916], "illustr": [137, 153], "un": [137, 274, 330], "nn": [137, 142, 204, 238, 241, 1144], "init_h": [137, 815, 829], "init_c": [137, 815, 829], "kernel": [137, 154, 815, 829], "recurrent_kernel": [137, 815, 829], "bia": [137, 141, 815, 828, 829, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176], "recurrent_bia": [137, 815, 829], "x_shape": 137, "batch_shap": [137, 139, 142, 204, 218, 219, 686, 741, 815, 829, 830, 831, 832, 940, 944, 1050, 1051, 1166, 1175], "timestep": [137, 815, 829, 1166, 1175], "input_channel": [137, 141, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1175, 1176], "x_flat": 137, "wi": 137, "wi_x": 137, "wii_x": 137, "wif_x": 137, "wig_x": 137, "wio_x": 137, "recurr": [137, 815, 829], "wh": 137, "lstm": [137, 815, 829, 1166], "ht": 137, "ct": 137, "hts_list": 137, "unrol": [137, 140, 815, 829], "wii_xt": 137, "wif_xt": 137, "wig_xt": 137, "wio_xt": 137, "zip": 137, "htm1": 137, "ctm1": 137, "wh_htm1": 137, "whi_htm1": 137, "whf_htm1": 137, "whg_htm1": 137, "who_htm1": 137, "ft": 137, "gt": 137, "ot": 137, "offici": 137, "reliabl": 137, "sacrific": 137, "hear": 137, "virtu": 137, "pure_ivi": 137, "reduce_mean": [137, 140, 141, 142, 1144], "reduce_sum": [137, 1144], "reduce_var": 137, "compile_graph": [137, 142], "pure_torch": 137, "backbon": [137, 140], "_layer": 137, "super": [137, 140, 141, 142], "random_unifrom": 137, "unclean": 137, "wx": 137, "temp": 137, "torchscript": 137, "example_input": [137, 201, 202], "static_argnum": [137, 201, 202], "static_argnam": [137, 201, 202], "jit": [137, 154], "frontend": 138, "primit": [138, 154], "hierarch": [138, 140, 141], "arraywithlinalg": 139, "arraywithlog": 139, "arraywithmath": 139, "arraywithmeta": 139, "arraywithreduct": 139, "_shape": 139, "_size": 139, "functool": 139, "mul": 139, "len": [139, 142, 204, 238, 241], "_dtype": 139, "_devic": 139, "_dev_str": 139, "_pre_repr": 139, "_post_repr": 139, "answer": [139, 154], "consol": 139, "typeerror": 139, "immut": 139, "behav": 139, "claim": 139, "truli": 139, "_native_wrapp": 139, "attributeerror": 139, "genuin": 139, "some_method": 139, "similarli": [139, 204, 238, 241], "rewritten": 139, "__pow__": 139, "strang": 139, "enforc": 139, "appear": [139, 961, 975, 978], "_wrap_method": 139, "func_wrapp": [139, 155, 156, 157, 158, 159, 160, 161, 162, 163], "__name__": 139, "non_wrapped_method": 139, "_method_wrap": 139, "native_arg": 139, "native_kwarg": 139, "inner_fn": 139, "whist": 139, "unwrap": 139, "transit": 139, "needlessli": 139, "randn": 139, "_unwrap_method": 139, "method_wrap": 139, "compartment": 139, "public": [139, 686, 702], "newshap": 139, "new_shap": 139, "tidi": 139, "shorter": 139, "crystal": 139, "ton": 140, "ado": [140, 141], "incred": [140, 154], "hash": 140, "soup": 140, "walk": [140, 141], "dct": 140, "cnt": 140, "combo": [140, 1144, 1150], "hold": [140, 686, 744, 745], "1000": [140, 402, 660, 663], "uda": 140, "3333": 140, "6667": 140, "178": 140, "new_weight": 140, "0600": 140, "3100": 140, "2400": 140, "6900": 140, "delimit": 140, "autocomplet": 140, "midwai": 140, "agent": 140, "total_spe": 140, "total_height": 140, "total_width": 140, "ag": 140, "tot": 140, "total_": 140, "total_h": 140, "dir": 140, "cnt0": 140, "cnt1": 140, "diff_0": 140, "diff_1": 140, "config0": 140, "config1": 140, "Not": [140, 141, 154, 203], "decod": 140, "l0": 140, "l1": [140, 832, 935, 939], "depth": [140, 141, 142, 153, 686, 726, 741, 1026, 1038, 1178, 1179], "clearer": 140, "truncat": 140, "decoder__l0": 140, "decoder__l1": 140, "encoder__l0": 140, "encoder__l1": 140, "height": 140, "l0__b": 140, "l0__w": 140, "l1__b": 140, "l1__w": 140, "printabl": 140, "obviou": 140, "foresight": 140, "untidili": 140, "update_ag": 140, "normalize_img": 140, "img": 140, "img_max": 140, "reduce_max": [140, 1144], "img_min": 140, "reduce_min": [140, 1144], "img_rang": 140, "agent_posit": 140, "agent_veloc": 140, "agent_cam_front_rgb": 140, "agent_cam_front_depth": 140, "agent_cam_rear_rgb": 140, "agent_cam_rear_depth": 140, "agent_cam_lidar": 140, "cleaner": 140, "camera": 140, "front_rgb": 140, "front_depth": 140, "rear_rgb": 140, "rear_depth": 140, "lidar": 140, "rgb": 140, "rear": 140, "veloc": 140, "cam": 140, "cam_max": 140, "cam_min": 140, "cam_rang": 140, "Of": 140, "ideal": 140, "perman": 140, "afterward": 140, "thread": 140, "incorpor": 140, "pretti": 140, "dataload": [140, 152, 1144], "_cnt": 140, "img_": 140, "_dataset_s": 140, "_batch_siz": 140, "_count": [140, 141], "__next__": 140, "filenam": 140, "img_fnam": 140, "fname": 140, "loaded_img": 140, "cv2": 140, "imread": 140, "loader": [140, 154], "batch_slic": 140, "mymodel": [140, 1144], "linear0": [140, 141, 1144], "linear1": [140, 141, 1144], "x_in": [140, 141, 142, 1144], "loss_fn": [140, 141, 142, 1144], "0145": 140, "grad_fn": 140, "addbackward0": 140, "_create_vari": 141, "output_channel": [141, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1175, 1176], "with_bia": [141, 1166, 1176], "_input_channel": 141, "_output_channel": 141, "_w_shape": 141, "_b_shape": 141, "_with_bia": 141, "8979": 141, "3198": 141, "0196": 141, "3126": 141, "3717": 141, "9687": 141, "6958": 141, "5122": 141, "3902": 141, "8800": 141, "5613": 141, "1982": 141, "nightmar": 141, "overcom": 141, "fc": 141, "9563": 141, "v0": 141, "v1": 141, "6440": 141, "key0": 141, "1823": 141, "8075": 141, "linear3": 141, "v2": 141, "2346": 141, "counter": 141, "hidden": [141, 815, 829, 1166, 1175], "fed": [141, 367, 392], "1300": 141, "decoupl": 141, "scheme": 141, "weight_initi": [141, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "glorotuniform": [141, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "bias_initi": [141, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176], "_w_init": 141, "_b_init": 141, "create_vari": [141, 1157], "var_shap": [141, 1157], "fan_out": [141, 1157], "fan_in": [141, 1157], "fan_mod": [141, 1157], "fan_sum": 141, "slight": 141, "misnom": 141, "saw": 141, "vanilla": [141, 1022, 1024], "descent": [141, 774, 788, 790, 1182, 1187], "lar": [141, 774, 797, 799, 801, 803, 1182], "lamb": [141, 774, 797, 799, 1182], "compile_on_next_step": [141, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187], "_beta1": 141, "_beta2": 141, "_epsilon": 141, "_mw": 141, "_vw": 141, "_first_pass": 141, "_should_compil": 141, "_step": [141, 1182, 1186], "new_v": 141, "_lr": 141, "_inplac": 141, "_stop_gradi": 141, "set_stat": [141, 1182, 1183, 1184, 1185, 1186, 1187], "pre": [142, 154], "captur": 142, "sparse_funct": 142, "num_class": 142, "num_dim": 142, "new_axi": 142, "_linear": 142, "to_backend": 142, "jax_graph": 142, "to_ivy_modul": [142, 1155], "thinli": 142, "whilst": 142, "to_haiku_modul": 142, "hk": 142, "loss_fn_t": 142, "transform": [142, 153, 815, 827, 828], "without_apply_rng": 142, "rng": 142, "prngkei": 142, "init": 142, "update_rul": 142, "tree_multimap": 142, "vision": [152, 1144], "robot": [152, 1144], "focus": 153, "perfect": 153, "3d": [153, 1166, 1171, 1172], "differenti": 153, "demo": [153, 1144], "orient": 153, "pose": 153, "euler": [153, 203], "quaternion": 153, "rotat": 153, "ivy_mech": 153, "target_facing_rotation_matrix": 153, "polar_to_cartesian_coord": 153, "ordin": [153, 832, 905, 908], "warp": 153, "optic": 153, "voxel": 153, "ivy_vis": 153, "coords_to_voxel_grid": 153, "render_pixel_coord": 153, "neural": [153, 815, 1144, 1152, 1166], "radianc": 153, "nerf": 153, "trajectori": 153, "motion": 153, "plan": [153, 1144], "mobil": 153, "ivy_robot": 153, "sample_spline_path": 153, "rigidmobil": 153, "sample_bodi": 153, "drone": 153, "sample_link": 153, "openai": 153, "swimmer": 153, "cumul": [153, 686, 704, 705], "reward": 153, "supervis": 153, "reinforc": 153, "door": [153, 154], "intersect": 153, "cartpol": 153, "mountain_car": 153, "pendulum": 153, "reacher": 153, "condit": [153, 201, 202, 1026, 1036, 1037, 1063, 1067], "learnt": 153, "ture": 153, "ntm": 153, "egospher": 153, "spatial": 153, "esm": 153, "ivy_memori": 153, "egocentr": 153, "room": 153, "inspir": 153, "doubt": 154, "grate": 154, "probe": 154, "undergo": 154, "remark": 154, "surpris": 154, "lock": 154, "contunu": 154, "minor": 154, "xla": 154, "gold": 154, "dex": 154, "scan": 154, "tricki": 154, "predictor": 154, "tight": 154, "driver": 154, "schedul": 154, "dispatch": 154, "Will": 154, "ast": 154, "dynamic": 154, "cond": 154, "jacobian": 154, "checkpoint": 154, "autodiff": 154, "shine": 154, "merci": 154, "superset": 154, "cluster": 154, "compet": 154, "paradigm": 154, "parallelis": 154, "spmd": 154, "mixtur": [154, 774, 776, 779], "expert": 154, "sophist": 154, "depart": 154, "routin": 154, "hundr": 154, "thousand": 154, "deepli": [154, 1026, 1028], "broadli": 154, "heavili": 154, "supplementari": 154, "Is": 154, "reusabl": 154, "fanci": 154, "fusion": 154, "lose": 154, "vmap": 154, "pmap": 154, "overhead": 154, "ineffici": 154, "eventu": 154, "supplement": 154, "backdoor": 154, "callback": 154, "record": 154, "metric": 154, "somewhat": 154, "outsourc": 154, "inputs_to_ivy_arrai": 155, "gaussian": [165, 166, 169], "88": [165, 171, 174, 402, 473, 476, 832, 888, 891, 915, 919, 1050, 1056, 1059, 1100, 1101, 1104], "214": [165, 181, 184], "0768": [165, 186, 189], "231": [165, 186, 189], "693": [165, 186, 189, 402, 428, 431, 945, 956, 959], "49": [165, 186, 189, 402, 660, 663, 1100, 1101, 1104], "363": [165, 186, 189], "array_method": [166, 167, 171, 172, 176, 177, 181, 182, 186, 187, 191, 192, 196, 198, 208, 209, 213, 214, 221, 222, 227, 228, 238, 239, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 281, 282, 286, 287, 291, 292, 296, 297, 308, 309, 314, 315, 325, 326, 331, 332, 336, 337, 341, 342, 346, 347, 352, 353, 374, 375, 393, 395, 403, 404, 408, 409, 413, 414, 418, 419, 423, 424, 428, 429, 433, 434, 438, 439, 443, 444, 448, 449, 453, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 583, 584, 588, 589, 593, 594, 598, 599, 603, 604, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 641, 645, 646, 650, 651, 655, 656, 660, 661, 665, 666, 670, 672, 675, 677, 681, 683, 687, 688, 715, 716, 762, 764, 776, 777, 792, 793, 822, 823, 833, 834, 838, 839, 843, 844, 848, 849, 853, 854, 857, 858, 860, 861, 865, 866, 869, 870, 878, 879, 883, 884, 888, 889, 893, 894, 896, 897, 905, 906, 910, 912, 915, 917, 920, 922, 925, 927, 930, 932, 935, 937, 940, 942, 946, 947, 951, 952, 956, 957, 962, 963, 967, 968, 971, 972, 975, 976, 979, 980, 983, 984, 987, 988, 992, 993, 996, 997, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1045, 1046, 1056, 1057, 1069, 1071, 1074, 1076, 1079, 1081, 1084, 1086, 1090, 1091, 1095, 1096, 1101, 1102, 1105, 1106, 1109, 1110, 1113, 1114, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1134, 1135, 1139, 1140], "container_method": [166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 281, 283, 285, 286, 288, 290, 291, 293, 295, 296, 298, 300, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 322, 324, 325, 327, 329, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 352, 354, 356, 374, 376, 378, 393, 394, 396, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 762, 763, 765, 776, 778, 780, 781, 782, 784, 785, 787, 788, 789, 791, 792, 794, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 822, 824, 826, 833, 835, 837, 838, 840, 842, 843, 845, 847, 848, 850, 852, 853, 855, 860, 862, 864, 865, 867, 869, 871, 873, 874, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 896, 898, 900, 901, 902, 904, 905, 907, 909, 910, 911, 913, 915, 916, 918, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 946, 948, 950, 951, 953, 955, 956, 958, 960, 962, 964, 966, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1045, 1047, 1049, 1052, 1054, 1056, 1058, 1060, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1134, 1136, 1138, 1139, 1141, 1143], "faster": [201, 202], "invoc": [201, 202], "718281828459045": 203, "newaxi": 203, "alia": 203, "pi": 203, "141592653589793": 203, "chosen": [204, 205, 206, 402, 438, 441, 1063, 1067], "distanc": [204, 205, 206], "adjac": [204, 205, 206], "creation_funct": [204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273], "elsewher": [204, 218, 219, 1063, 1067], "row": [204, 218, 219, 832, 905, 908, 910, 914, 1050, 1051, 1063, 1066], "column": [204, 218, 219, 832, 853, 856, 896, 899, 905, 908, 910, 914], "__dlpack__": [204, 221, 224, 367, 393, 397], "interchang": [204, 221, 224, 961, 1010, 1013], "cartesian": [204, 238, 241], "ij": [204, 238, 241, 1100, 1101, 1104], "ni": [204, 238, 241], "xi": [204, 238, 241], "n1": [204, 238, 241], "n2": [204, 238, 241], "n3": [204, 238, 241], "xv": [204, 238, 241], "yv": [204, 238, 241], "y1": [204, 269, 273], "y2": [204, 269, 273], "y3": [204, 269, 273], "intdtyp": [204, 269, 273, 274, 306, 346, 349], "defaultdtyp": [274, 275], "defaultfloatdtyp": [274, 276], "defaultintdtyp": [274, 277], "defaultuintdtyp": [274, 278], "uint_dtyp": [274, 307, 360], "incompat": [274, 291, 294], "data_type_funct": [274, 296, 299, 314, 317, 325, 328], "floatdtyp": [274, 303, 304], "int_dtyp": [274, 306, 359], "uint": [274, 307, 346, 349, 360, 365], "uintdtyp": [274, 307, 346, 349, 360, 365], "defualt": [274, 307], "4294967346": [274, 307], "followng": [274, 314, 317], "occupi": [274, 314, 317, 325, 328, 686, 744, 745], "ep": [274, 314, 317, 832, 878, 881, 893, 895], "smallest_norm": [274, 314, 317], "4028235e": [274, 314, 317], "7976931348623157e": [274, 314, 317], "55040e": [274, 314, 317], "encapsul": [274, 325, 328], "2147483648": [274, 325, 328], "2147483647": [274, 325, 328], "18446744073709551615": [274, 325, 328], "9223372036854775808": [274, 325, 328], "9223372036854775807": [274, 325, 328], "127": [274, 325, 328], "84": [274, 325, 328, 367, 379, 832, 888, 891, 1050, 1056, 1059, 1100, 1101, 1104], "314": [274, 325, 328], "32768": [274, 325, 328], "32767": [274, 325, 328], "1800": [274, 325, 328], "65535": [274, 325, 328], "4294967295": [274, 325, 328], "109": [274, 325, 328], "8400": [274, 325, 328], "119": [274, 325, 328], "122": [274, 325, 328, 402, 488, 491], "type1": [274, 351], "type2": [274, 351], "default_dtype_stack": [274, 357], "native_int32": [274, 357, 366], "native_bool": [274, 357, 366], "native_uint64": [274, 357, 366], "native_float64": [274, 357, 366], "ret1": [274, 361], "ret2": [274, 361], "reset": [274, 365, 367, 400, 686, 769, 770, 771], "native_float16": [274, 366], "native_int8": [274, 366], "native_int16": [274, 366], "native_int64": [274, 366], "native_uint8": [274, 366], "noinspect": [275, 276, 277, 368, 775], "pyshadowingnam": [275, 276, 277, 368, 775], "defaultdevic": [367, 368], "__enter__": 367, "_dev": 367, "__exit__": 367, "exc_typ": 367, "exc_val": 367, "exc_tb": 367, "exit": 367, "profil": 367, "save_dir": [367, 369], "93": [367, 379, 402, 660, 663, 1050, 1056, 1059], "139740789224448": [367, 382], "physic": [367, 384], "x4": [367, 386], "process_specif": [367, 387, 401], "percentag": [367, 387], "ram": [367, 387, 398, 401], "attr_onli": [367, 388], "chunk": [367, 390, 391, 392], "max_chunk_s": [367, 392], "chunk_siz": [367, 392], "input_ax": [367, 392], "output_ax": [367, 392], "feed": [367, 392], "fist": [367, 392], "caveat": [367, 393, 397], "portabl": [367, 393, 397, 1144], "gb": [367, 398, 401], "66700032": [367, 398], "589934592": [367, 398], "magnitud": [402, 403, 406, 418, 421, 610, 613, 832, 910, 914, 915, 919], "princip": [402, 408, 411, 423, 426, 433, 436], "x1_i": [402, 418, 421, 438, 441, 448, 451, 458, 461, 463, 466, 468, 471, 473, 476, 493, 496, 498, 501, 523, 526, 528, 531, 533, 536, 553, 556, 558, 561, 583, 586, 588, 591, 598, 601, 603, 606, 610, 613, 620, 623, 630, 633, 635, 638, 670, 674], "nor": [402, 418, 421, 610, 613, 774, 814], "nearest": [402, 418, 421, 610, 613, 640, 643], "2019": [402, 418, 421, 513, 516, 610, 613], "commut": [402, 418, 421], "524": [402, 423, 426], "644": [402, 423, 426], "201": [402, 423, 426], "305": [402, 423, 426], "412": [402, 423, 426], "44": [402, 428, 431, 640, 643, 660, 663, 665, 668, 832, 888, 891, 1063, 1067, 1100, 1101, 1104], "809": [402, 428, 431], "569": [402, 428, 431], "733": [402, 428, 431], "68": [402, 428, 431, 438, 441, 1044, 1045, 1048, 1050, 1056, 1059], "notat": [402, 438, 441, 1100, 1101, 1104], "denot": [402, 438, 441, 774, 814], "pair": [402, 438, 441, 815, 831, 832, 838, 841], "quadrant": [402, 438, 441], "3\u03c0": [402, 438, 441], "464": [402, 438, 441], "588": [402, 438, 441], "719": [402, 438, 441], "197": [402, 438, 441], "549": [402, 443, 446], "bitwis": [402, 448, 451, 463, 466, 473, 476, 603, 606], "invert": [402, 453, 456], "arithmet": [402, 468, 471, 1100, 1109, 1112], "propag": [402, 468, 471, 1100, 1105, 1108, 1109, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1129, 1132], "lh": [402, 468, 471], "rh": [402, 468, 471], "xor": [402, 473, 476, 603, 606], "78": [402, 473, 476, 645, 648, 832, 888, 891, 1100, 1101, 1104], "91": [402, 473, 476, 832, 888, 891, 1100, 1101, 1104], "66": [402, 473, 476, 832, 888, 891, 1100, 1101, 1104], "77": [402, 473, 476, 832, 888, 891, 1100, 1101, 1104], "26": [402, 473, 476, 493, 496, 655, 658, 774, 776, 779, 815, 822, 825, 832, 848, 851, 888, 891, 920, 924, 1100, 1101, 1104], "27": [402, 473, 476, 488, 491, 655, 658, 660, 663, 815, 831, 832, 888, 891, 1100, 1101, 1104], "59": [402, 473, 476], "654": [402, 483, 486], "368": [402, 488, 491], "670": [402, 488, 491], "202": [402, 488, 491], "548": [402, 488, 491, 655, 658], "1490": [402, 488, 491], "667": [402, 493, 496, 1068, 1069, 1073], "698": [402, 493, 496], "72": [402, 508, 511, 513, 516, 774, 776, 779, 832, 888, 891, 1100, 1101, 1104], "accur": [402, 513, 516], "fdlibm": [402, 513, 516], "compliant": [402, 513, 516, 593, 596, 598, 601, 1100, 1105, 1108, 1109, 1112, 1113, 1116], "85e": [402, 513, 516], "632": [402, 513, 516], "20e": [402, 513, 516], "72e": [402, 513, 516], "00": [402, 513, 516, 832, 915, 919], "22000": [402, 513, 516], "442000": [402, 513, 516], "greatest": [402, 518, 521, 523, 526], "threshold": [402, 608, 609], "y_i": [402, 615, 618], "versu": [402, 630, 633], "odd": [402, 630, 633], "modulu": [402, 635, 638], "primarili": [402, 635, 638], "5654": [402, 640, 643], "034": [402, 640, 643], "433": [402, 640, 643], "343": [402, 640, 643], "30": [402, 640, 643, 832, 888, 891, 1100, 1101, 1104, 1157, 1163], "124": [402, 645, 648], "46": [402, 645, 648], "932": [402, 650, 653], "746": [402, 650, 653], "443": [402, 650, 653], "657": [402, 650, 653], "253": [402, 655, 658], "indistinguish": [402, 660, 663], "infinit": [402, 660, 663], "83": [402, 660, 663], "32455532": [402, 660, 663], "89897949": [402, 660, 663], "50": [402, 660, 663, 832, 888, 891, 1063, 1066, 1100, 1101, 1104], "169": [402, 660, 663], "09": [402, 665, 668, 815, 831], "546": [402, 675, 679], "842": [402, 675, 679], "916": [402, 675, 679, 945, 946, 949], "996": [402, 675, 679], "328": [402, 675, 679], "462": [402, 680], "604": [402, 680], "984": [402, 680], "997": [402, 680], "decim": [402, 681, 685], "inspect": [686, 692, 1148, 1149], "downscal": [686, 698, 699, 701], "60": [686, 704, 832, 888, 891, 1100, 1101, 1104], "default_v": [686, 707], "catch_except": [686, 707], "rev": [686, 707], "with_cal": [686, 707], "arrang": [686, 708], "mod": [686, 712], "max_freq": [686, 713], "num_band": [686, 713], "fourier": [686, 713], "band": [686, 713], "linearli": [686, 713, 832, 905, 908], "oppos": [686, 713], "geometr": [686, 713], "array_mod": [686, 721], "seen_set": [686, 726], "local_set": [686, 726], "decrement": [686, 730], "allow_dupl": [686, 738], "forkserv": [686, 739], "spawn": [686, 739], "hot": [686, 741], "scatter": [686, 741, 744, 745], "overrid": [686, 741], "tmp_dr": [686, 752], "temporari": [686, 752], "min_denomin": [686, 755], "stabil": [686, 755, 756, 1089, 1090, 1093, 1095, 1098], "_min_denomin": [686, 755], "min_bas": [686, 756], "100000023841858": [686, 760], "200000047683716": [686, 760], "299999952316284": [686, 760], "400000095367432": [686, 760], "599999904632568": [686, 760], "gradienttrack": [774, 775], "en": [774, 776, 779, 781, 783], "wikipedia": [774, 776, 779, 781, 783], "wiki": [774, 776, 779, 781, 783], "stochastic_gradient_desc": [774, 776, 779, 781, 783], "004": [774, 776, 779], "009": [774, 776, 779], "28": [774, 776, 779, 815, 818, 821, 822, 825, 832, 888, 891, 1050, 1056, 1059, 1100, 1101, 1104], "0125": [774, 776, 779], "601": [774, 776, 779], "025": [774, 776, 779], "992": [774, 776, 779], "209": [774, 776, 779, 1068, 1069, 1073], "271": [774, 776, 779], "0717": [774, 776, 779], "142": [774, 776, 779], "182": [774, 776, 779], "624": [774, 776, 779], "744": [774, 776, 779], "626": [774, 776, 779], "65": [774, 776, 779, 832, 888, 891, 1050, 1056, 1059, 1100, 1101, 1104], "024": [774, 776, 779], "096": [774, 776, 779], "216": [774, 776, 779], "384": [774, 776, 779], "rate": [774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807, 1022, 1023, 1024, 1025, 1166, 1177, 1182, 1183, 1184, 1185, 1186, 1187], "ws_new": [774, 781, 783, 788, 790, 797, 799, 801, 803, 805, 807], "retain": [774, 785, 786], "trust": [774, 797, 799, 1182, 1184], "ratio": [774, 797, 799, 1182, 1184], "decai": [774, 797, 799, 801, 803, 1182, 1184, 1185], "layerwis": [774, 801, 803], "with_grads_stack": [774, 814], "nwc": [815, 816, 817, 1166, 1167, 1168], "d_out": [815, 816, 817, 818, 819, 820, 821], "ncw": [815, 816, 817, 1166, 1167, 1168], "wio": [815, 816], "output_shap": [815, 817, 819, 821, 1166, 1168, 1170, 1172], "hwio": [815, 818], "unequ": [815, 818], "unsqueez": [815, 818, 822, 825], "ndhwc": [815, 820, 821, 1166, 1171, 1172], "volum": [815, 820], "fd": [815, 820, 821], "ncdhw": [815, 820, 821, 1166, 1171, 1172], "dhwio": [815, 820], "258": [815, 821], "depthwis": [815, 822, 825, 1166, 1173], "hwi": [815, 822, 825], "prob": [815, 827, 1050, 1051, 1166, 1174], "randomli": [815, 827, 1166, 1174], "bernoulli": [815, 827], "out_featur": [815, 827, 828], "incom": [815, 828], "outer_batch_shap": [815, 828], "inner_batch_shap": [815, 828], "in_featur": [815, 828], "cell": [815, 829, 1166, 1175], "num_queri": [815, 830, 831], "x_feat_dim": [815, 830], "num_kei": [815, 830, 831], "cont_feat_dim": [815, 830], "numhead": [815, 830], "feat_dim": [815, 830, 831], "out_feat_dim": [815, 830], "score": [815, 831], "decomposit": [832, 833, 836, 896, 899, 910, 914], "vif": [832, 838, 841], "92": [832, 843, 846, 1050, 1056, 1059], "293": [832, 843, 846], "46997": [832, 843, 846], "eigendecomposit": [832, 853, 856], "qlq\u1d40": [832, 853, 856], "orthogon": [832, 853, 856], "eig": [832, 853, 856], "eigenvalu": [832, 853, 856, 857, 859], "eigenvector": [832, 853, 856], "prepend": [832, 865, 868], "singular": [832, 878, 881, 893, 895, 910, 914, 915, 919], "toler": [832, 878, 881, 893, 895], "largest_singular_valu": [832, 878, 881, 893, 895], "array_lik": [832, 888, 891], "105": [832, 888, 891, 945, 946, 949], "112": [832, 888, 891, 1100, 1101, 1104], "104": [832, 888, 891, 1100, 1101, 1104], "120": [832, 888, 891], "moor": [832, 893, 895], "penros": [832, 893, 895], "pseudo": [832, 893, 895], "orthonorm": [832, 896, 899, 910, 914], "2d": [832, 901, 903, 1166, 1169, 1170, 1173], "logdet": [832, 901, 903], "coeffici": [832, 905, 908], "usvh": [832, 910, 914], "vh": [832, 910, 914], "hermitian": [832, 910, 914], "et": [832, 910, 914], "cetera": [832, 910, 914], "adjoint": [832, 910, 914], "reconstruct": [832, 910, 914, 1068, 1069, 1073, 1079, 1083], "reconstructed_x": [832, 910, 914], "ss": [832, 915, 919], "615": [832, 915, 919, 1068, 1069, 1073], "00e": [832, 915, 919], "38e": [832, 915, 919], "866": [832, 915, 919], "864": [832, 915, 919], "contract": [832, 920, 924, 1100, 1101, 1104], "doubl": [832, 920, 924], "manhattan": [832, 935, 939], "l2": [832, 935, 939], "euclidean": [832, 935, 939], "mathbf": [832, 940, 944], "mathbb": [832, 940, 944], "skew": [832, 940, 944], "staticmethod": [860, 864, 915, 916], "idiom": [860, 864, 915, 916], "arg1": [860, 864, 915, 916], "arg2": [860, 864, 915, 916], "java": [860, 864, 915, 916], "advanc": [860, 864, 915, 916], "concept": [860, 864, 915, 916], "classmethod": [860, 864, 915, 916], "discret": [945, 951, 954], "35667497": [945, 951, 954], "793291": [945, 956, 959], "512926": [945, 956, 959], "before_1": [961, 971, 974, 1018, 1021], "after_1": [961, 971, 974, 1018, 1021], "before_n": [961, 971, 974, 1018, 1021], "after_n": [961, 971, 974, 1018, 1021], "insert": [961, 975, 978, 1026, 1031, 1063, 1064], "manipulation_funct": [961, 975, 978], "reorder": [961, 979, 982], "permut": [961, 983, 986, 1010, 1013], "repetit": [961, 987, 990, 1014, 1017], "famili": [961, 1006, 1009], "intxx": [961, 1006, 1009], "floatxx": [961, 1006, 1009], "fomaml_step": 1022, "inner_cost_fn": [1022, 1023, 1024], "outer_cost_fn": [1022, 1023, 1024], "inner_grad_step": [1022, 1023, 1024, 1025], "inner_learning_r": [1022, 1023, 1024, 1025], "inner_optimization_step": [1022, 1023, 1024, 1025], "inner_batch_fn": [1022, 1023, 1024], "outer_batch_fn": [1022, 1023, 1024], "average_across_step": [1022, 1023, 1024], "inner_v": [1022, 1023, 1024], "keep_inner_v": [1022, 1023, 1024], "outer_v": [1022, 1023, 1024], "keep_outer_v": [1022, 1023, 1024], "return_inner_v": [1022, 1023, 1024, 1025], "num_task": [1022, 1023, 1024, 1025], "maml": [1022, 1023, 1024], "recev": [1022, 1023, 1024], "0x7f5775c74280": [1022, 1023, 1024, 1025], "maml_step": 1022, "rece": [1022, 1024], "reptile_step": 1022, "cost_fn": [1022, 1025], "reptil": [1022, 1025], "receivng": [1022, 1025], "all_nested_indic": 1026, "include_nest": [1026, 1027], "_index": [1026, 1027, 1037], "_base": [1026, 1027, 1036, 1037], "copy_nest": 1026, "to_mut": [1026, 1028, 1038], "mutabl": [1026, 1028, 1038], "insert_into_nest_at_index": 1026, "insert_into_nest_at_indic": 1026, "map_nest_at_index": 1026, "map_nest_at_indic": 1026, "multi_index_nest": 1026, "nested_ani": 1026, "check_nest": [1026, 1036, 1037], "conditon": [1026, 1036, 1037], "nested_indices_wher": 1026, "stop_after_n_found": [1026, 1037], "_depth": [1026, 1038], "_tuple_check_fn": [1026, 1038], "_list_check_fn": [1026, 1038], "_dict_check_fn": [1026, 1038], "nested_multi_map": 1026, "nest0": [1026, 1039], "ivy_arrai": [1026, 1039], "funciton": [1026, 1039], "prune_nest_at_index": 1026, "prune_nest_at_indic": 1026, "set_nest_at_index": 1026, "set_nest_at_indic": 1026, "111": [1026, 1043], "xyz": [1026, 1043], "pqr": [1026, 1043], "mini": [1044, 1045, 1048, 1180, 1181], "894": [1044, 1045, 1048], "772": [1044, 1045, 1048], "796": [1044, 1045, 1048], "population_s": [1050, 1051], "num_sampl": [1050, 1051], "home": [1050, 1051, 1055, 1182, 1183, 1184, 1185, 1187], "uniformli": [1050, 1052, 1053, 1056, 1059], "6444774682897879": [1050, 1055], "811": [1050, 1055], "508": [1050, 1055], "564": [1050, 1055], "7268672": [1050, 1055], "968": [1050, 1055], "175": [1050, 1055, 1068, 1069, 1073], "064": [1050, 1055], "40935726": [1050, 1055], "556": [1050, 1055], "26431865": [1050, 1056, 1059], "475": [1050, 1056, 1059], "878": [1050, 1056, 1059], "861": [1050, 1056, 1059], "929": [1050, 1056, 1059], "545": [1050, 1056, 1059], "789": [1050, 1056, 1059], "519": [1050, 1056, 1059], "0435": [1050, 1056, 1059], "381": [1050, 1056, 1059, 1068, 1069, 1073], "4608004": [1050, 1056, 1059], "8458502": [1050, 1056, 1059], "43": [1050, 1056, 1059, 1063, 1067], "occurr": [1063, 1064, 1065, 1068, 1069, 1073], "x_j": [1068, 1069, 1073, 1074, 1078, 1084, 1088], "impli": [1068, 1069, 1073, 1074, 1078, 1084, 1088], "inverse_indic": [1068, 1069, 1073, 1079, 1083], "aggreg": [1068, 1069, 1073], "fourth": [1068, 1069, 1073], "607": [1068, 1069, 1073], "735": [1068, 1069, 1073], "857": [1068, 1069, 1073], "0396": [1068, 1069, 1073], "166": [1068, 1069, 1073], "58": [1068, 1069, 1073], "828": [1068, 1069, 1073], "144": [1068, 1069, 1073], "40501155": [1068, 1069, 1073], "77361575": [1068, 1069, 1073], "97776199": [1068, 1069, 1073], "36831157": [1068, 1069, 1073], "89148434": [1068, 1069, 1073], "9512272": [1068, 1069, 1073], "67542176": [1068, 1069, 1073], "41985657": [1068, 1069, 1073], "23478023": [1068, 1069, 1073], "1141": [1068, 1069, 1073], "8101": [1068, 1069, 1073], "9298": [1068, 1069, 1073], "8460": [1068, 1069, 1073], "2119": [1068, 1069, 1073], "3519": [1068, 1069, 1073], "6252": [1068, 1069, 1073], "4033": [1068, 1069, 1073], "7443": [1068, 1069, 1073], "2577": [1068, 1069, 1073], "3707": [1068, 1069, 1073], "0545": [1068, 1069, 1073], "3238": [1068, 1069, 1073], "5944": [1068, 1069, 1073], "0775": [1068, 1069, 1073], "4327": [1068, 1069, 1073], "176": [1068, 1069, 1073], "889": [1068, 1069, 1073], "763": [1068, 1069, 1073], "071": [1068, 1069, 1073], "262": [1068, 1069, 1073], "456": [1068, 1069, 1073], "114": [1068, 1069, 1073], "349": [1068, 1069, 1073], "594": [1068, 1069, 1073], "335": [1068, 1069, 1073], "212": [1068, 1069, 1073], "457": [1068, 1069, 1073], "827": [1068, 1069, 1073], "set_funct": [1068, 1074, 1078], "ascend": [1089, 1090, 1093], "einstein": [1100, 1101, 1104], "summat": [1100, 1101, 1104], "seq": [1100, 1101, 1104], "jk": [1100, 1101, 1104], "ik": [1100, 1101, 1104], "126": [1100, 1101, 1104], "510": [1100, 1101, 1104], "108": [1100, 1101, 1104], "117": [1100, 1101, 1104], "sentinel": [1100, 1105, 1108, 1113, 1116], "unsign": [1100, 1117, 1120, 1125, 1128], "degre": [1100, 1121, 1124, 1129, 1132], "bessel": [1100, 1121, 1124, 1129, 1132], "8164966": [1100, 1121, 1124], "varianc": [1100, 1129, 1132], "unbias": [1100, 1129, 1132], "simplicit": [1133, 1134, 1137], "grow": 1144, "ai": 1144, "got": 1144, "colab": 1144, "sharp": 1144, "weekli": 1144, "immedi": 1144, "favorit": 1144, "jax_concat": 1144, "tf_concat": 1144, "np_concat": 1144, "mx_concat": 1144, "torch_concat": 1144, "prompt": 1144, "get_devic": 1144, "reduce_prod": 1144, "gradient_imag": 1144, "linalg": 1144, "bilinear_resampl": 1144, "stack_imag": 1144, "neural_net": 1144, "ecosystem": [1144, 1150], "popular": [1144, 1150], "acceler": 1144, "articl": 1144, "lenton2021ivi": 1144, "inter": 1144, "lenton": 1144, "daniel": 1144, "pardo": 1144, "fabio": 1144, "falck": 1144, "fabian": 1144, "jame": 1144, "stephen": 1144, "clark": 1144, "ronald": 1144, "journal": 1144, "arxiv": 1144, "preprint": 1144, "2102": 1144, "02886": 1144, "2021": 1144, "add_array_spec": 1147, "fn_array_spec": 1147, "geglu": 1152, "native_modul": [1155, 1156], "native_module_class": [1155, 1156], "firstlayersiren": 1157, "kaimingnorm": [1157, 1161], "negative_slop": 1157, "Ones": 1157, "siren": 1157, "w0": [1157, 1163], "filter_s": [1166, 1167, 1168], "1d": [1166, 1167, 1168], "conv1dtranspos": 1166, "filter_shap": [1166, 1169, 1170, 1171, 1172, 1173], "conv2dtranspos": 1166, "conv3dtranspos": 1166, "depthwiseconv2d": 1166, "num_channel": [1166, 1173], "bernoul": [1166, 1174], "num_lay": [1166, 1175], "return_sequ": [1166, 1175], "return_st": [1166, 1175], "get_initial_st": [1166, 1175], "dens": [1166, 1176], "multiheadattent": 1166, "query_dim": [1166, 1177], "head_dim": [1166, 1177], "dropout_r": [1166, 1177], "context_dim": [1166, 1177], "with_to_q_fn": [1166, 1177], "with_to_kv_fn": [1166, 1177], "with_to_out_fn": [1166, 1177], "build_mod": [1166, 1177, 1178, 1179], "on_init": [1166, 1177, 1178, 1179], "__call__": [1166, 1177, 1178, 1179], "store_var": [1178, 1179], "arg_stateful_idx": [1178, 1179], "kwarg_stateful_idx": [1178, 1179], "fallback_to_non_compil": [1178, 1179, 1182, 1186], "with_partial_v": [1178, 1179], "initialz": [1178, 1179], "from_cal": [1178, 1179], "check_submod_ret": [1178, 1179], "get_mod_kei": [1178, 1179], "top_mod": [1178, 1179], "mod_depth": [1178, 1179], "mod_height": [1178, 1179], "mod_with_top_mod_key_chain": [1178, 1179], "save_weight": [1178, 1179], "weights_path": [1178, 1179], "show_mod_in_top_mod": [1178, 1179], "upper_depth": [1178, 1179], "lower_depth": [1178, 1179], "show_structur": [1178, 1179], "show_v_in_top_v": [1178, 1179], "sub_mod": [1178, 1179], "show_v": [1178, 1179], "track_submod_call_ord": [1178, 1179], "track_submod_ret": [1178, 1179], "v_with_top_v_key_chain": [1178, 1179], "layernorm": 1180, "normalized_shap": [1180, 1181], "elementwise_affin": [1180, 1181], "trail": [1180, 1181], "affin": [1180, 1181], "0x7f5775d17b80": [1182, 1185], "init_on_first_step": [1182, 1186], "ignore_miss": [1182, 1186], "overridden": [1182, 1186], "sgd": 1182, "stochast": [1182, 1187], "0x7f5775d178b0": [1182, 1187], "sub_modul": [1188, 1189]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [35, 0, 0, "-", "creation"], [37, 0, 0, "-", "data_type"], [39, 0, 0, "-", "device"], [41, 0, 0, "-", "elementwise"], [43, 0, 0, "-", "general"], [45, 0, 0, "-", "gradients"], [47, 0, 0, "-", "image"], [49, 0, 0, "-", "layers"], [51, 0, 0, "-", "linear_algebra"], [53, 0, 0, "-", "losses"], [55, 0, 0, "-", "manipulation"], [57, 0, 0, "-", "norms"], [59, 0, 0, "-", "random"], [61, 0, 0, "-", "searching"], [63, 0, 0, "-", "set"], [65, 0, 0, "-", "sorting"], [67, 0, 0, "-", "statistical"], [69, 0, 0, "-", "utility"], [71, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "clip_vector_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "default_uint_dtype"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "einops_rearrange"], [27, 2, 1, "", "einops_reduce"], [27, 2, 1, "", "einops_repeat"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_devices"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_devices"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "gather"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_array_mode"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "randint"], [27, 2, 1, "", "random_normal"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_array_mode"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_default_uint_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_divide"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_array_mode"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_default_uint_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[404, 4, 1, "", "abs"], [409, 4, 1, "", "acos"], [414, 4, 1, "", "acosh"], [777, 4, 1, "", "adam_step"], [419, 4, 1, "", "add"], [1135, 4, 1, "", "all"], [688, 4, 1, "", "all_equal"], [1140, 4, 1, "", "any"], [1091, 4, 1, "", "argsort"], [209, 4, 1, "", "asarray"], [424, 4, 1, "", "asin"], [429, 4, 1, "", "asinh"], [282, 4, 1, "", "astype"], [434, 4, 1, "", "atan"], [439, 4, 1, "", "atan2"], [444, 4, 1, "", "atanh"], [947, 4, 1, "", "binary_cross_entropy"], [449, 4, 1, "", "bitwise_and"], [454, 4, 1, "", "bitwise_invert"], [459, 4, 1, "", "bitwise_left_shift"], [464, 4, 1, "", "bitwise_or"], [469, 4, 1, "", "bitwise_right_shift"], [474, 4, 1, "", "bitwise_xor"], [287, 4, 1, "", "broadcast_arrays"], [292, 4, 1, "", "broadcast_to"], [297, 4, 1, "", "can_cast"], [479, 4, 1, "", "ceil"], [834, 4, 1, "", "cholesky"], [963, 4, 1, "", "clip"], [968, 4, 1, "", "concat"], [972, 4, 1, "", "constant_pad"], [484, 4, 1, "", "cos"], [489, 4, 1, "", "cosh"], [839, 4, 1, "", "cross"], [952, 4, 1, "", "cross_entropy"], [823, 4, 1, "", "depthwise_conv2d"], [844, 4, 1, "", "det"], [375, 4, 1, "", "dev"], [849, 4, 1, "", "diagonal"], [494, 4, 1, "", "divide"], [309, 4, 1, "", "dtype"], [854, 4, 1, "", "eigh"], [858, 4, 1, "", "eigvalsh"], [1102, 4, 1, "", "einsum"], [214, 4, 1, "", "empty_like"], [499, 4, 1, "", "equal"], [504, 4, 1, "", "erf"], [509, 4, 1, "", "exp"], [976, 4, 1, "", "expand_dims"], [514, 4, 1, "", "expm1"], [315, 4, 1, "", "finfo"], [980, 4, 1, "", "flip"], [519, 4, 1, "", "floor"], [524, 4, 1, "", "floor_divide"], [222, 4, 1, "", "from_dlpack"], [228, 4, 1, "", "full_like"], [716, 4, 1, "", "gather_nd"], [167, 4, 1, "", "gelu"], [529, 4, 1, "", "greater"], [534, 4, 1, "", "greater_equal"], [326, 4, 1, "", "iinfo"], [861, 4, 1, "", "inv"], [332, 4, 1, "", "is_bool_dtype"], [337, 4, 1, "", "is_float_dtype"], [342, 4, 1, "", "is_int_dtype"], [347, 4, 1, "", "is_uint_dtype"], [793, 4, 1, "", "is_variable"], [539, 4, 1, "", "isfinite"], [544, 4, 1, "", "isinf"], [549, 4, 1, "", "isnan"], [1046, 4, 1, "", "layer_norm"], [172, 4, 1, "", "leaky_relu"], [554, 4, 1, "", "less"], [559, 4, 1, "", "less_equal"], [564, 4, 1, "", "log"], [569, 4, 1, "", "log10"], [574, 4, 1, "", "log1p"], [579, 4, 1, "", "log2"], [584, 4, 1, "", "logaddexp"], [589, 4, 1, "", "logical_and"], [594, 4, 1, "", "logical_not"], [599, 4, 1, "", "logical_or"], [604, 4, 1, "", "logical_xor"], [866, 4, 1, "", "matmul"], [870, 4, 1, "", "matrix_norm"], [879, 4, 1, "", "matrix_rank"], [884, 4, 1, "", "matrix_transpose"], [1106, 4, 1, "", "max"], [1110, 4, 1, "", "mean"], [239, 4, 1, "", "meshgrid"], [1114, 4, 1, "", "min"], [611, 4, 1, "", "multiply"], [244, 4, 1, "", "native_array"], [616, 4, 1, "", "negative"], [621, 4, 1, "", "not_equal"], [252, 4, 1, "", "ones_like"], [889, 4, 1, "", "outer"], [984, 4, 1, "", "permute_dims"], [894, 4, 1, "", "pinv"], [626, 4, 1, "", "positive"], [631, 4, 1, "", "pow"], [1118, 4, 1, "", "prod"], [897, 4, 1, "", "qr"], [1057, 4, 1, "", "random_uniform"], [177, 4, 1, "", "relu"], [636, 4, 1, "", "remainder"], [988, 4, 1, "", "repeat"], [993, 4, 1, "", "reshape"], [353, 4, 1, "", "result_type"], [997, 4, 1, "", "roll"], [641, 4, 1, "", "round"], [182, 4, 1, "", "sigmoid"], [646, 4, 1, "", "sign"], [651, 4, 1, "", "sin"], [656, 4, 1, "", "sinh"], [187, 4, 1, "", "softmax"], [192, 4, 1, "", "softplus"], [906, 4, 1, "", "solve"], [1096, 4, 1, "", "sort"], [957, 4, 1, "", "sparse_cross_entropy"], [661, 4, 1, "", "sqrt"], [666, 4, 1, "", "square"], [1003, 4, 1, "", "squeeze"], [1007, 4, 1, "", "stack"], [1122, 4, 1, "", "std"], [672, 4, 1, "", "subtract"], [1126, 4, 1, "", "sum"], [912, 4, 1, "", "svd"], [917, 4, 1, "", "svdvals"], [1011, 4, 1, "", "swapaxes"], [677, 4, 1, "", "tan"], [198, 4, 1, "", "tanh"], [922, 4, 1, "", "tensordot"], [1015, 4, 1, "", "tile"], [395, 4, 1, "", "to_device"], [764, 4, 1, "", "to_numpy"], [927, 4, 1, "", "trace"], [258, 4, 1, "", "tril"], [263, 4, 1, "", "triu"], [683, 4, 1, "", "trunc"], [1071, 4, 1, "", "unique_all"], [1076, 4, 1, "", "unique_counts"], [1081, 4, 1, "", "unique_inverse"], [1086, 4, 1, "", "unique_values"], [1130, 4, 1, "", "var"], [932, 4, 1, "", "vecdot"], [937, 4, 1, "", "vector_norm"], [942, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1019, 4, 1, "", "zero_pad"], [271, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_container"], [31, 4, 1, "", "args_to_ivy"], [32, 4, 1, "", "args_to_native"], [33, 4, 1, "", "to_ivy"], [34, 4, 1, "", "to_native"]], "ivy.array.creation": [[36, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[36, 2, 1, "", "asarray"], [36, 2, 1, "", "empty_like"], [36, 2, 1, "", "from_dlpack"], [36, 2, 1, "", "full_like"], [36, 2, 1, "", "meshgrid"], [36, 2, 1, "", "native_array"], [36, 2, 1, "", "ones_like"], [36, 2, 1, "", "tril"], [36, 2, 1, "", "triu"], [36, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[38, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[38, 2, 1, "", "astype"], [38, 2, 1, "", "broadcast_arrays"], [38, 2, 1, "", "broadcast_to"], [38, 2, 1, "", "can_cast"], [38, 2, 1, "", "dtype"], [38, 2, 1, "", "finfo"], [38, 2, 1, "", "iinfo"], [38, 2, 1, "", "is_bool_dtype"], [38, 2, 1, "", "is_float_dtype"], [38, 2, 1, "", "is_int_dtype"], [38, 2, 1, "", "is_uint_dtype"], [38, 2, 1, "", "result_type"]], "ivy.array.device": [[40, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[40, 2, 1, "", "dev"], [40, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[42, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[42, 2, 1, "", "abs"], [42, 2, 1, "", "acos"], [42, 2, 1, "", "acosh"], [42, 2, 1, "", "add"], [42, 2, 1, "", "asin"], [42, 2, 1, "", "asinh"], [42, 2, 1, "", "atan"], [42, 2, 1, "", "atan2"], [42, 2, 1, "", "atanh"], [42, 2, 1, "", "bitwise_and"], [42, 2, 1, "", "bitwise_invert"], [42, 2, 1, "", "bitwise_left_shift"], [42, 2, 1, "", "bitwise_or"], [42, 2, 1, "", "bitwise_right_shift"], [42, 2, 1, "", "bitwise_xor"], [42, 2, 1, "", "ceil"], [42, 2, 1, "", "cos"], [42, 2, 1, "", "cosh"], [42, 2, 1, "", "divide"], [42, 2, 1, "", "equal"], [42, 2, 1, "", "erf"], [42, 2, 1, "", "exp"], [42, 2, 1, "", "expm1"], [42, 2, 1, "", "floor"], [42, 2, 1, "", "floor_divide"], [42, 2, 1, "", "greater"], [42, 2, 1, "", "greater_equal"], [42, 2, 1, "", "isfinite"], [42, 2, 1, "", "isinf"], [42, 2, 1, "", "isnan"], [42, 2, 1, "", "less"], [42, 2, 1, "", "less_equal"], [42, 2, 1, "", "log"], [42, 2, 1, "", "log10"], [42, 2, 1, "", "log1p"], [42, 2, 1, "", "log2"], [42, 2, 1, "", "logaddexp"], [42, 2, 1, "", "logical_and"], [42, 2, 1, "", "logical_not"], [42, 2, 1, "", "logical_or"], [42, 2, 1, "", "logical_xor"], [42, 2, 1, "", "multiply"], [42, 2, 1, "", "negative"], [42, 2, 1, "", "not_equal"], [42, 2, 1, "", "positive"], [42, 2, 1, "", "pow"], [42, 2, 1, "", "remainder"], [42, 2, 1, "", "round"], [42, 2, 1, "", "sign"], [42, 2, 1, "", "sin"], [42, 2, 1, "", "sinh"], [42, 2, 1, "", "sqrt"], [42, 2, 1, "", "square"], [42, 2, 1, "", "subtract"], [42, 2, 1, "", "tan"], [42, 2, 1, "", "tanh"], [42, 2, 1, "", "trunc"]], "ivy.array.general": [[44, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[44, 2, 1, "", "all_equal"], [44, 2, 1, "", "gather_nd"], [44, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[46, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[46, 2, 1, "", "adam_step"], [46, 2, 1, "", "is_variable"]], "ivy.array.image": [[48, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[50, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[50, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[52, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[52, 2, 1, "", "cholesky"], [52, 2, 1, "", "cross"], [52, 2, 1, "", "det"], [52, 2, 1, "", "diagonal"], [52, 2, 1, "", "eigh"], [52, 2, 1, "", "eigvalsh"], [52, 2, 1, "", "inv"], [52, 2, 1, "", "matmul"], [52, 2, 1, "", "matrix_norm"], [52, 2, 1, "", "matrix_rank"], [52, 2, 1, "", "matrix_transpose"], [52, 2, 1, "", "outer"], [52, 2, 1, "", "pinv"], [52, 2, 1, "", "qr"], [52, 2, 1, "", "solve"], [52, 2, 1, "", "svd"], [52, 2, 1, "", "svdvals"], [52, 2, 1, "", "tensordot"], [52, 2, 1, "", "trace"], [52, 2, 1, "", "vecdot"], [52, 2, 1, "", "vector_norm"], [52, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[54, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[54, 2, 1, "", "binary_cross_entropy"], [54, 2, 1, "", "cross_entropy"], [54, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[56, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[56, 2, 1, "", "clip"], [56, 2, 1, "", "concat"], [56, 2, 1, "", "constant_pad"], [56, 2, 1, "", "expand_dims"], [56, 2, 1, "", "flip"], [56, 2, 1, "", "permute_dims"], [56, 2, 1, "", "repeat"], [56, 2, 1, "", "reshape"], [56, 2, 1, "", "roll"], [56, 2, 1, "", "squeeze"], [56, 2, 1, "", "stack"], [56, 2, 1, "", "swapaxes"], [56, 2, 1, "", "tile"], [56, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[58, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[58, 2, 1, "", "layer_norm"]], "ivy.array.random": [[60, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[60, 2, 1, "", "random_uniform"]], "ivy.array.searching": [[62, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[64, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[64, 2, 1, "", "unique_all"], [64, 2, 1, "", "unique_counts"], [64, 2, 1, "", "unique_inverse"], [64, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[66, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[66, 2, 1, "", "argsort"], [66, 2, 1, "", "sort"]], "ivy.array.statistical": [[68, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[68, 2, 1, "", "einsum"], [68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "min"], [68, 2, 1, "", "prod"], [68, 2, 1, "", "std"], [68, 2, 1, "", "sum"], [68, 2, 1, "", "var"]], "ivy.array.utility": [[70, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[70, 2, 1, "", "all"], [70, 2, 1, "", "any"]], "ivy.array.wrapping": [[72, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [155, 0, 0, "-", "func_wrapper"], [1147, 0, 0, "-", "inspection"], [1151, 0, 0, "-", "stateful"], [1191, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[74, 0, 0, "-", "activations"], [76, 0, 0, "-", "base"], [78, 0, 0, "-", "container"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [96, 0, 0, "-", "linear_algebra"], [98, 0, 0, "-", "losses"], [100, 0, 0, "-", "manipulation"], [102, 0, 0, "-", "norms"], [104, 0, 0, "-", "random"], [106, 0, 0, "-", "searching"], [108, 0, 0, "-", "set"], [110, 0, 0, "-", "sorting"], [112, 0, 0, "-", "statistical"], [114, 0, 0, "-", "utility"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[75, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[75, 2, 1, "", "gelu"], [75, 2, 1, "", "leaky_relu"], [75, 2, 1, "", "relu"], [75, 2, 1, "", "sigmoid"], [75, 2, 1, "", "softmax"], [75, 2, 1, "", "softplus"], [75, 2, 1, "", "static_gelu"], [75, 2, 1, "", "static_leaky_relu"], [75, 2, 1, "", "static_relu"], [75, 2, 1, "", "static_sigmoid"], [75, 2, 1, "", "static_softmax"], [75, 2, 1, "", "static_softplus"], [75, 2, 1, "", "static_tanh"], [75, 2, 1, "", "tanh"]], "ivy.container.base": [[77, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[77, 2, 1, "", "__getitem__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__setitem__"], [77, 2, 1, "", "all_false"], [77, 2, 1, "", "all_key_chains"], [77, 2, 1, "", "all_true"], [77, 2, 1, "", "arrays_as_lists"], [77, 2, 1, "", "as_arrays"], [77, 2, 1, "", "as_bools"], [77, 2, 1, "", "as_ones"], [77, 2, 1, "", "as_random_uniform"], [77, 2, 1, "", "as_variables"], [77, 2, 1, "", "as_zeros"], [77, 2, 1, "", "assert_contains_sub_container"], [77, 2, 1, "", "assert_contains_sub_structure"], [77, 2, 1, "", "assert_identical"], [77, 2, 1, "", "assert_identical_structure"], [77, 2, 1, "", "at_key_chain"], [77, 2, 1, "", "at_key_chains"], [77, 2, 1, "", "at_keys"], [77, 2, 1, "", "clip"], [77, 2, 1, "", "combine"], [77, 2, 1, "", "common_key_chains"], [77, 3, 1, "", "config"], [77, 2, 1, "", "contains_sub_container"], [77, 2, 1, "", "contains_sub_structure"], [77, 2, 1, "", "copy"], [77, 2, 1, "", "create_if_absent"], [77, 2, 1, "", "cutoff_at_depth"], [77, 2, 1, "", "cutoff_at_height"], [77, 2, 1, "", "deep_copy"], [77, 3, 1, "", "dev"], [77, 2, 1, "", "dev_clone"], [77, 2, 1, "", "dev_dist"], [77, 3, 1, "", "dev_str"], [77, 2, 1, "", "diff"], [77, 2, 1, "", "dtype"], [77, 2, 1, "", "einops_rearrange"], [77, 2, 1, "", "einops_reduce"], [77, 2, 1, "", "einops_repeat"], [77, 2, 1, "", "find_sub_container"], [77, 2, 1, "", "find_sub_structure"], [77, 2, 1, "", "flatten_key_chain"], [77, 2, 1, "", "flatten_key_chains"], [77, 2, 1, "", "format_key_chains"], [77, 2, 1, "", "from_disk_as_hdf5"], [77, 2, 1, "", "from_disk_as_json"], [77, 2, 1, "", "from_disk_as_pickled"], [77, 2, 1, "", "from_flat_list"], [77, 2, 1, "", "from_numpy"], [77, 2, 1, "", "gather"], [77, 2, 1, "", "gather_nd"], [77, 2, 1, "", "h5_file_size"], [77, 2, 1, "", "handle_inplace"], [77, 2, 1, "", "has_key"], [77, 2, 1, "", "has_key_chain"], [77, 2, 1, "", "has_nans"], [77, 2, 1, "", "identical"], [77, 2, 1, "", "identical_array_shapes"], [77, 2, 1, "", "identical_configs"], [77, 2, 1, "", "identical_structure"], [77, 2, 1, "", "if_exists"], [77, 2, 1, "", "inplace_update"], [77, 3, 1, "", "ivy"], [77, 2, 1, "", "key_chains_containing"], [77, 2, 1, "", "list_join"], [77, 2, 1, "", "list_stack"], [77, 2, 1, "", "map"], [77, 2, 1, "", "map_conts"], [77, 2, 1, "", "matrix_norm"], [77, 3, 1, "", "max_depth"], [77, 2, 1, "", "maximum"], [77, 2, 1, "", "minimum"], [77, 2, 1, "", "multi_map"], [77, 2, 1, "", "multi_map_in_static_method"], [77, 2, 1, "", "num_arrays"], [77, 2, 1, "", "overwrite_at_key_chain"], [77, 2, 1, "", "overwrite_at_key_chains"], [77, 2, 1, "", "prune_empty"], [77, 2, 1, "", "prune_key_chain"], [77, 2, 1, "", "prune_key_chains"], [77, 2, 1, "", "prune_key_from_key_chains"], [77, 2, 1, "", "prune_keys"], [77, 2, 1, "", "prune_keys_from_key_chains"], [77, 2, 1, "", "reduce"], [77, 2, 1, "", "remove_key_length_limit"], [77, 2, 1, "", "remove_print_limit"], [77, 2, 1, "", "reshape_like"], [77, 2, 1, "", "restructure"], [77, 2, 1, "", "restructure_key_chains"], [77, 2, 1, "", "set_at_key_chain"], [77, 2, 1, "", "set_at_key_chains"], [77, 2, 1, "", "set_at_keys"], [77, 2, 1, "", "set_framework"], [77, 2, 1, "", "set_ivy_backend"], [77, 3, 1, "", "shape"], [77, 3, 1, "", "shapes"], [77, 2, 1, "", "show"], [77, 2, 1, "", "show_sub_container"], [77, 2, 1, "", "shuffle"], [77, 2, 1, "", "shuffle_h5_file"], [77, 2, 1, "", "size_ordered_arrays"], [77, 2, 1, "", "slice_keys"], [77, 2, 1, "", "slice_via_key"], [77, 2, 1, "", "sort_by_key"], [77, 2, 1, "", "split"], [77, 2, 1, "", "stop_gradients"], [77, 2, 1, "", "structural_diff"], [77, 2, 1, "", "to_device"], [77, 2, 1, "", "to_dict"], [77, 2, 1, "", "to_disk_as_hdf5"], [77, 2, 1, "", "to_disk_as_json"], [77, 2, 1, "", "to_disk_as_pickled"], [77, 2, 1, "", "to_flat_list"], [77, 2, 1, "", "to_iterator"], [77, 2, 1, "", "to_iterator_keys"], [77, 2, 1, "", "to_iterator_values"], [77, 2, 1, "", "to_ivy"], [77, 2, 1, "", "to_jsonable"], [77, 2, 1, "", "to_list"], [77, 2, 1, "", "to_native"], [77, 2, 1, "", "to_numpy"], [77, 2, 1, "", "to_raw"], [77, 2, 1, "", "trim_key"], [77, 2, 1, "", "try_kc"], [77, 2, 1, "", "unify"], [77, 2, 1, "", "unstack"], [77, 2, 1, "", "update_config"], [77, 2, 1, "", "vector_norm"], [77, 2, 1, "", "with_default_key_color"], [77, 2, 1, "", "with_entries_as_lists"], [77, 2, 1, "", "with_ivy_backend"], [77, 2, 1, "", "with_key_length_limit"], [77, 2, 1, "", "with_print_indent"], [77, 2, 1, "", "with_print_limit"], [77, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[79, 1, 1, "", "Container"]], "ivy.container.container.Container": [[79, 2, 1, "", "__add__"], [79, 2, 1, "", "__init__"], [79, 2, 1, "", "__radd__"], [79, 2, 1, "", "arange"], [79, 2, 1, "", "arg_info"], [79, 2, 1, "", "arg_names"], [79, 2, 1, "", "argmax"], [79, 2, 1, "", "argmin"], [79, 2, 1, "", "array"], [79, 2, 1, "", "array_equal"], [79, 2, 1, "", "arrays_equal"], [79, 2, 1, "", "as_ivy_dev"], [79, 2, 1, "", "as_ivy_dtype"], [79, 2, 1, "", "as_native_dev"], [79, 2, 1, "", "as_native_dtype"], [79, 2, 1, "", "asarray"], [79, 2, 1, "", "assert_supports_inplace"], [79, 2, 1, "", "cache_fn"], [79, 2, 1, "", "clear_mem_on_dev"], [79, 2, 1, "", "clip_matrix_norm"], [79, 2, 1, "", "closest_valid_dtype"], [79, 2, 1, "", "container_types"], [79, 2, 1, "", "conv1d"], [79, 2, 1, "", "conv1d_transpose"], [79, 2, 1, "", "conv2d"], [79, 2, 1, "", "conv2d_transpose"], [79, 2, 1, "", "conv3d"], [79, 2, 1, "", "conv3d_transpose"], [79, 2, 1, "", "copy_array"], [79, 2, 1, "", "cumprod"], [79, 2, 1, "", "cumsum"], [79, 2, 1, "", "current_backend"], [79, 2, 1, "", "current_backend_str"], [79, 2, 1, "", "default"], [79, 2, 1, "", "default_device"], [79, 2, 1, "", "default_dtype"], [79, 2, 1, "", "default_float_dtype"], [79, 2, 1, "", "default_int_dtype"], [79, 2, 1, "", "default_uint_dtype"], [79, 2, 1, "", "dev_util"], [79, 2, 1, "", "dropout"], [79, 2, 1, "", "dtype_bits"], [79, 2, 1, "", "eigvalsh"], [79, 2, 1, "", "empty"], [79, 2, 1, "", "execute_with_gradients"], [79, 2, 1, "", "exists"], [79, 2, 1, "", "eye"], [79, 2, 1, "", "floormod"], [79, 2, 1, "", "fourier_encode"], [79, 2, 1, "", "full"], [79, 2, 1, "", "function_supported_devices"], [79, 2, 1, "", "function_supported_dtypes"], [79, 2, 1, "", "function_unsupported_devices"], [79, 2, 1, "", "function_unsupported_dtypes"], [79, 2, 1, "", "get_all_arrays_in_memory"], [79, 2, 1, "", "get_all_ivy_arrays_on_dev"], [79, 2, 1, "", "get_array_mode"], [79, 2, 1, "", "get_min_base"], [79, 2, 1, "", "get_min_denominator"], [79, 2, 1, "", "get_nestable_mode"], [79, 2, 1, "", "get_num_dims"], [79, 2, 1, "", "get_referrers_recursive"], [79, 2, 1, "", "gpu_is_available"], [79, 2, 1, "", "handle_nestable"], [79, 2, 1, "", "handle_out_argument"], [79, 2, 1, "", "indices_where"], [79, 2, 1, "", "infer_device"], [79, 2, 1, "", "infer_dtype"], [79, 2, 1, "", "inplace_arrays_supported"], [79, 2, 1, "", "inplace_decrement"], [79, 2, 1, "", "inplace_increment"], [79, 2, 1, "", "inplace_variables_supported"], [79, 2, 1, "", "inputs_to_native_arrays"], [79, 2, 1, "", "invalid_dtype"], [79, 2, 1, "", "is_ivy_container"], [79, 2, 1, "", "linear"], [79, 2, 1, "", "linspace"], [79, 2, 1, "", "logspace"], [79, 2, 1, "", "lstm_update"], [79, 2, 1, "", "match_kwargs"], [79, 2, 1, "", "multi_head_attention"], [79, 2, 1, "", "multinomial"], [79, 2, 1, "", "multiprocessing"], [79, 2, 1, "", "nonzero"], [79, 2, 1, "", "num_arrays_in_memory"], [79, 2, 1, "", "num_cpu_cores"], [79, 2, 1, "", "num_gpus"], [79, 2, 1, "", "num_ivy_arrays_on_dev"], [79, 2, 1, "", "one_hot"], [79, 2, 1, "", "ones"], [79, 2, 1, "", "outputs_to_ivy_arrays"], [79, 2, 1, "", "percent_used_mem_on_dev"], [79, 2, 1, "", "pinv"], [79, 2, 1, "", "print_all_arrays_in_memory"], [79, 2, 1, "", "print_all_ivy_arrays_on_dev"], [79, 2, 1, "", "promote_types"], [79, 2, 1, "", "queue_timeout"], [79, 2, 1, "", "randint"], [79, 2, 1, "", "random_normal"], [79, 2, 1, "", "scaled_dot_product_attention"], [79, 2, 1, "", "scatter_flat"], [79, 2, 1, "", "scatter_nd"], [79, 2, 1, "", "seed"], [79, 2, 1, "", "set_array_mode"], [79, 2, 1, "", "set_default_device"], [79, 2, 1, "", "set_default_dtype"], [79, 2, 1, "", "set_default_float_dtype"], [79, 2, 1, "", "set_default_int_dtype"], [79, 2, 1, "", "set_default_uint_dtype"], [79, 2, 1, "", "set_min_base"], [79, 2, 1, "", "set_min_denominator"], [79, 2, 1, "", "set_nestable_mode"], [79, 2, 1, "", "set_queue_timeout"], [79, 2, 1, "", "set_shape_array_mode"], [79, 2, 1, "", "set_split_factor"], [79, 2, 1, "", "set_tmp_dir"], [79, 2, 1, "", "set_with_grads"], [79, 2, 1, "", "shape_array_mode"], [79, 2, 1, "", "split_factor"], [79, 2, 1, "", "split_func_call"], [79, 2, 1, "", "stable_divide"], [79, 2, 1, "", "stable_pow"], [79, 2, 1, "", "static_arg_info"], [79, 2, 1, "", "static_arg_names"], [79, 2, 1, "", "static_argmax"], [79, 2, 1, "", "static_argmin"], [79, 2, 1, "", "static_array"], [79, 2, 1, "", "static_array_equal"], [79, 2, 1, "", "static_arrays_equal"], [79, 2, 1, "", "static_as_ivy_dev"], [79, 2, 1, "", "static_as_ivy_dtype"], [79, 2, 1, "", "static_as_native_dev"], [79, 2, 1, "", "static_as_native_dtype"], [79, 2, 1, "", "static_assert_supports_inplace"], [79, 2, 1, "", "static_cache_fn"], [79, 2, 1, "", "static_clear_mem_on_dev"], [79, 2, 1, "", "static_clip_matrix_norm"], [79, 2, 1, "", "static_clip_vector_norm"], [79, 2, 1, "", "static_closest_valid_dtype"], [79, 2, 1, "", "static_concat"], [79, 2, 1, "", "static_constant_pad"], [79, 2, 1, "", "static_container_types"], [79, 2, 1, "", "static_conv1d"], [79, 2, 1, "", "static_conv1d_transpose"], [79, 2, 1, "", "static_conv2d"], [79, 2, 1, "", "static_conv2d_transpose"], [79, 2, 1, "", "static_conv3d"], [79, 2, 1, "", "static_conv3d_transpose"], [79, 2, 1, "", "static_copy_array"], [79, 2, 1, "", "static_cumprod"], [79, 2, 1, "", "static_cumsum"], [79, 2, 1, "", "static_current_backend"], [79, 2, 1, "", "static_current_backend_str"], [79, 2, 1, "", "static_default"], [79, 2, 1, "", "static_default_device"], [79, 2, 1, "", "static_default_dtype"], [79, 2, 1, "", "static_default_int_dtype"], [79, 2, 1, "", "static_default_uint_dtype"], [79, 2, 1, "", "static_dev_util"], [79, 2, 1, "", "static_dropout"], [79, 2, 1, "", "static_dtype_bits"], [79, 2, 1, "", "static_eigh"], [79, 2, 1, "", "static_eigvalsh"], [79, 2, 1, "", "static_einops_rearrange"], [79, 2, 1, "", "static_einops_reduce"], [79, 2, 1, "", "static_einops_repeat"], [79, 2, 1, "", "static_einsum"], [79, 2, 1, "", "static_empty"], [79, 2, 1, "", "static_exists"], [79, 2, 1, "", "static_expand_dims"], [79, 2, 1, "", "static_flip"], [79, 2, 1, "", "static_floormod"], [79, 2, 1, "", "static_fourier_encode"], [79, 2, 1, "", "static_full"], [79, 2, 1, "", "static_function_supported_devices"], [79, 2, 1, "", "static_function_unsupported_devices"], [79, 2, 1, "", "static_gather"], [79, 2, 1, "", "static_get_all_arrays_in_memory"], [79, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [79, 2, 1, "", "static_get_array_mode"], [79, 2, 1, "", "static_get_min_base"], [79, 2, 1, "", "static_get_min_denominator"], [79, 2, 1, "", "static_get_nestable_mode"], [79, 2, 1, "", "static_get_num_dims"], [79, 2, 1, "", "static_get_referrers_recursive"], [79, 2, 1, "", "static_gpu_is_available"], [79, 2, 1, "", "static_handle_nestable"], [79, 2, 1, "", "static_handle_out_argument"], [79, 2, 1, "", "static_has_nans"], [79, 2, 1, "", "static_indices_where"], [79, 2, 1, "", "static_infer_device"], [79, 2, 1, "", "static_infer_dtype"], [79, 2, 1, "", "static_inplace_arrays_supported"], [79, 2, 1, "", "static_inplace_decrement"], [79, 2, 1, "", "static_inplace_increment"], [79, 2, 1, "", "static_inplace_update"], [79, 2, 1, "", "static_inplace_variables_supported"], [79, 2, 1, "", "static_inputs_to_native_arrays"], [79, 2, 1, "", "static_invalid_dtype"], [79, 2, 1, "", "static_is_array"], [79, 2, 1, "", "static_is_ivy_array"], [79, 2, 1, "", "static_is_ivy_container"], [79, 2, 1, "", "static_is_native_array"], [79, 2, 1, "", "static_linear"], [79, 2, 1, "", "static_lstm_update"], [79, 2, 1, "", "static_match_kwargs"], [79, 2, 1, "", "static_matmul"], [79, 2, 1, "", "static_max"], [79, 2, 1, "", "static_maximum"], [79, 2, 1, "", "static_mean"], [79, 2, 1, "", "static_min"], [79, 2, 1, "", "static_minimum"], [79, 2, 1, "", "static_multi_head_attention"], [79, 2, 1, "", "static_multinomial"], [79, 2, 1, "", "static_multiprocessing"], [79, 2, 1, "", "static_nonzero"], [79, 2, 1, "", "static_num_arrays_in_memory"], [79, 2, 1, "", "static_num_cpu_cores"], [79, 2, 1, "", "static_num_gpus"], [79, 2, 1, "", "static_num_ivy_arrays_on_dev"], [79, 2, 1, "", "static_one_hot"], [79, 2, 1, "", "static_outputs_to_ivy_arrays"], [79, 2, 1, "", "static_percent_used_mem_on_dev"], [79, 2, 1, "", "static_permute_dims"], [79, 2, 1, "", "static_pinv"], [79, 2, 1, "", "static_print_all_arrays_in_memory"], [79, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [79, 2, 1, "", "static_prod"], [79, 2, 1, "", "static_promote_types"], [79, 2, 1, "", "static_queue_timeout"], [79, 2, 1, "", "static_random_normal"], [79, 2, 1, "", "static_reshape"], [79, 2, 1, "", "static_scaled_dot_product_attention"], [79, 2, 1, "", "static_scatter_flat"], [79, 2, 1, "", "static_scatter_nd"], [79, 2, 1, "", "static_seed"], [79, 2, 1, "", "static_set_array_mode"], [79, 2, 1, "", "static_set_default_device"], [79, 2, 1, "", "static_set_default_dtype"], [79, 2, 1, "", "static_set_default_float_dtype"], [79, 2, 1, "", "static_set_default_int_dtype"], [79, 2, 1, "", "static_set_default_uint_dtype"], [79, 2, 1, "", "static_set_min_base"], [79, 2, 1, "", "static_set_min_denominator"], [79, 2, 1, "", "static_set_nestable_mode"], [79, 2, 1, "", "static_set_queue_timeout"], [79, 2, 1, "", "static_set_shape_array_mode"], [79, 2, 1, "", "static_set_split_factor"], [79, 2, 1, "", "static_set_tmp_dir"], [79, 2, 1, "", "static_set_with_grads"], [79, 2, 1, "", "static_shape"], [79, 2, 1, "", "static_shape_array_mode"], [79, 2, 1, "", "static_shuffle"], [79, 2, 1, "", "static_split"], [79, 2, 1, "", "static_split_factor"], [79, 2, 1, "", "static_split_func_call"], [79, 2, 1, "", "static_squeeze"], [79, 2, 1, "", "static_stable_divide"], [79, 2, 1, "", "static_stable_pow"], [79, 2, 1, "", "static_stack"], [79, 2, 1, "", "static_std"], [79, 2, 1, "", "static_stop_gradient"], [79, 2, 1, "", "static_sum"], [79, 2, 1, "", "static_supports_inplace"], [79, 2, 1, "", "static_swapaxes"], [79, 2, 1, "", "static_tile"], [79, 2, 1, "", "static_tmp_dir"], [79, 2, 1, "", "static_to_ivy_shape"], [79, 2, 1, "", "static_to_list"], [79, 2, 1, "", "static_to_native_arrays_and_back"], [79, 2, 1, "", "static_to_native_shape"], [79, 2, 1, "", "static_to_scalar"], [79, 2, 1, "", "static_total_mem_on_dev"], [79, 2, 1, "", "static_tpu_is_available"], [79, 2, 1, "", "static_try_else_none"], [79, 2, 1, "", "static_type_promote_arrays"], [79, 2, 1, "", "static_unset_array_mode"], [79, 2, 1, "", "static_unset_default_device"], [79, 2, 1, "", "static_unset_default_dtype"], [79, 2, 1, "", "static_unset_default_float_dtype"], [79, 2, 1, "", "static_unset_default_int_dtype"], [79, 2, 1, "", "static_unset_default_uint_dtype"], [79, 2, 1, "", "static_unset_nestable_mode"], [79, 2, 1, "", "static_unset_shape_array_mode"], [79, 2, 1, "", "static_unset_with_grads"], [79, 2, 1, "", "static_unstack"], [79, 2, 1, "", "static_used_mem_on_dev"], [79, 2, 1, "", "static_valid_dtype"], [79, 2, 1, "", "static_value_is_nan"], [79, 2, 1, "", "static_var"], [79, 2, 1, "", "static_variable"], [79, 2, 1, "", "static_variable_data"], [79, 2, 1, "", "static_where"], [79, 2, 1, "", "static_with_grads"], [79, 2, 1, "", "static_zero_pad"], [79, 2, 1, "", "stop_gradient"], [79, 2, 1, "", "supports_inplace"], [79, 2, 1, "", "tmp_dir"], [79, 2, 1, "", "to_ivy_shape"], [79, 2, 1, "", "to_native_arrays_and_back"], [79, 2, 1, "", "to_native_shape"], [79, 2, 1, "", "to_scalar"], [79, 2, 1, "", "total_mem_on_dev"], [79, 2, 1, "", "tpu_is_available"], [79, 2, 1, "", "try_else_none"], [79, 2, 1, "", "type_promote_arrays"], [79, 2, 1, "", "unset_array_mode"], [79, 2, 1, "", "unset_default_device"], [79, 2, 1, "", "unset_default_dtype"], [79, 2, 1, "", "unset_default_float_dtype"], [79, 2, 1, "", "unset_default_int_dtype"], [79, 2, 1, "", "unset_default_uint_dtype"], [79, 2, 1, "", "unset_nestable_mode"], [79, 2, 1, "", "unset_shape_array_mode"], [79, 2, 1, "", "unset_with_grads"], [79, 2, 1, "", "used_mem_on_dev"], [79, 2, 1, "", "valid_dtype"], [79, 2, 1, "", "value_is_nan"], [79, 2, 1, "", "variable"], [79, 2, 1, "", "variable_data"], [79, 2, 1, "", "where"], [79, 2, 1, "", "with_grads"], [79, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[405, 4, 1, "", "abs"], [410, 4, 1, "", "acos"], [415, 4, 1, "", "acosh"], [778, 4, 1, "", "adam_step"], [782, 4, 1, "", "adam_update"], [420, 4, 1, "", "add"], [1136, 4, 1, "", "all"], [689, 4, 1, "", "all_equal"], [1141, 4, 1, "", "any"], [1092, 4, 1, "", "argsort"], [425, 4, 1, "", "asin"], [430, 4, 1, "", "asinh"], [283, 4, 1, "", "astype"], [435, 4, 1, "", "atan"], [440, 4, 1, "", "atan2"], [445, 4, 1, "", "atanh"], [948, 4, 1, "", "binary_cross_entropy"], [450, 4, 1, "", "bitwise_and"], [455, 4, 1, "", "bitwise_invert"], [460, 4, 1, "", "bitwise_left_shift"], [465, 4, 1, "", "bitwise_or"], [470, 4, 1, "", "bitwise_right_shift"], [475, 4, 1, "", "bitwise_xor"], [288, 4, 1, "", "broadcast_arrays"], [293, 4, 1, "", "broadcast_to"], [298, 4, 1, "", "can_cast"], [480, 4, 1, "", "ceil"], [835, 4, 1, "", "cholesky"], [964, 4, 1, "", "clip"], [700, 4, 1, "", "clip_vector_norm"], [969, 4, 1, "", "concat"], [973, 4, 1, "", "constant_pad"], [485, 4, 1, "", "cos"], [490, 4, 1, "", "cosh"], [840, 4, 1, "", "cross"], [953, 4, 1, "", "cross_entropy"], [824, 4, 1, "", "depthwise_conv2d"], [845, 4, 1, "", "det"], [376, 4, 1, "", "dev"], [850, 4, 1, "", "diagonal"], [495, 4, 1, "", "divide"], [310, 4, 1, "", "dtype"], [855, 4, 1, "", "eigh"], [1103, 4, 1, "", "einsum"], [215, 4, 1, "", "empty_like"], [500, 4, 1, "", "equal"], [505, 4, 1, "", "erf"], [510, 4, 1, "", "exp"], [977, 4, 1, "", "expand_dims"], [515, 4, 1, "", "expm1"], [316, 4, 1, "", "finfo"], [981, 4, 1, "", "flip"], [520, 4, 1, "", "floor"], [525, 4, 1, "", "floor_divide"], [223, 4, 1, "", "from_dlpack"], [229, 4, 1, "", "full_like"], [717, 4, 1, "", "gather_nd"], [168, 4, 1, "", "gelu"], [789, 4, 1, "", "gradient_descent_update"], [530, 4, 1, "", "greater"], [535, 4, 1, "", "greater_equal"], [327, 4, 1, "", "iinfo"], [862, 4, 1, "", "inv"], [333, 4, 1, "", "is_bool_dtype"], [338, 4, 1, "", "is_float_dtype"], [343, 4, 1, "", "is_int_dtype"], [348, 4, 1, "", "is_uint_dtype"], [794, 4, 1, "", "is_variable"], [540, 4, 1, "", "isfinite"], [545, 4, 1, "", "isinf"], [550, 4, 1, "", "isnan"], [798, 4, 1, "", "lamb_update"], [802, 4, 1, "", "lars_update"], [1047, 4, 1, "", "layer_norm"], [173, 4, 1, "", "leaky_relu"], [555, 4, 1, "", "less"], [560, 4, 1, "", "less_equal"], [565, 4, 1, "", "log"], [570, 4, 1, "", "log10"], [575, 4, 1, "", "log1p"], [580, 4, 1, "", "log2"], [585, 4, 1, "", "logaddexp"], [590, 4, 1, "", "logical_and"], [595, 4, 1, "", "logical_not"], [600, 4, 1, "", "logical_or"], [605, 4, 1, "", "logical_xor"], [867, 4, 1, "", "matmul"], [871, 4, 1, "", "matrix_norm"], [875, 4, 1, "", "matrix_power"], [880, 4, 1, "", "matrix_rank"], [885, 4, 1, "", "matrix_transpose"], [1107, 4, 1, "", "max"], [1111, 4, 1, "", "mean"], [240, 4, 1, "", "meshgrid"], [1115, 4, 1, "", "min"], [612, 4, 1, "", "multiply"], [245, 4, 1, "", "native_array"], [617, 4, 1, "", "negative"], [622, 4, 1, "", "not_equal"], [253, 4, 1, "", "ones_like"], [806, 4, 1, "", "optimizer_update"], [890, 4, 1, "", "outer"], [985, 4, 1, "", "permute_dims"], [627, 4, 1, "", "positive"], [632, 4, 1, "", "pow"], [1119, 4, 1, "", "prod"], [898, 4, 1, "", "qr"], [1058, 4, 1, "", "random_uniform"], [178, 4, 1, "", "relu"], [637, 4, 1, "", "remainder"], [989, 4, 1, "", "repeat"], [994, 4, 1, "", "reshape"], [354, 4, 1, "", "result_type"], [998, 4, 1, "", "roll"], [642, 4, 1, "", "round"], [183, 4, 1, "", "sigmoid"], [647, 4, 1, "", "sign"], [652, 4, 1, "", "sin"], [657, 4, 1, "", "sinh"], [902, 4, 1, "", "slogdet"], [188, 4, 1, "", "softmax"], [193, 4, 1, "", "softplus"], [907, 4, 1, "", "solve"], [1097, 4, 1, "", "sort"], [958, 4, 1, "", "sparse_cross_entropy"], [662, 4, 1, "", "sqrt"], [667, 4, 1, "", "square"], [1004, 4, 1, "", "squeeze"], [1008, 4, 1, "", "stack"], [407, 4, 1, "", "static_abs"], [412, 4, 1, "", "static_acos"], [417, 4, 1, "", "static_acosh"], [780, 4, 1, "", "static_adam_step"], [784, 4, 1, "", "static_adam_update"], [422, 4, 1, "", "static_add"], [1138, 4, 1, "", "static_all"], [691, 4, 1, "", "static_all_equal"], [1143, 4, 1, "", "static_any"], [207, 4, 1, "", "static_arange"], [1094, 4, 1, "", "static_argsort"], [211, 4, 1, "", "static_asarray"], [427, 4, 1, "", "static_asin"], [432, 4, 1, "", "static_asinh"], [285, 4, 1, "", "static_astype"], [437, 4, 1, "", "static_atan"], [442, 4, 1, "", "static_atan2"], [447, 4, 1, "", "static_atanh"], [950, 4, 1, "", "static_binary_cross_entropy"], [452, 4, 1, "", "static_bitwise_and"], [457, 4, 1, "", "static_bitwise_invert"], [462, 4, 1, "", "static_bitwise_left_shift"], [467, 4, 1, "", "static_bitwise_or"], [472, 4, 1, "", "static_bitwise_right_shift"], [477, 4, 1, "", "static_bitwise_xor"], [290, 4, 1, "", "static_broadcast_arrays"], [295, 4, 1, "", "static_broadcast_to"], [300, 4, 1, "", "static_can_cast"], [482, 4, 1, "", "static_ceil"], [837, 4, 1, "", "static_cholesky"], [966, 4, 1, "", "static_clip"], [487, 4, 1, "", "static_cos"], [492, 4, 1, "", "static_cosh"], [842, 4, 1, "", "static_cross"], [955, 4, 1, "", "static_cross_entropy"], [305, 4, 1, "", "static_default_float_dtype"], [826, 4, 1, "", "static_depthwise_conv2d"], [847, 4, 1, "", "static_det"], [378, 4, 1, "", "static_dev"], [852, 4, 1, "", "static_diagonal"], [497, 4, 1, "", "static_divide"], [312, 4, 1, "", "static_dtype"], [217, 4, 1, "", "static_empty_like"], [502, 4, 1, "", "static_equal"], [507, 4, 1, "", "static_erf"], [787, 4, 1, "", "static_execute_with_gradients"], [512, 4, 1, "", "static_exp"], [517, 4, 1, "", "static_expm1"], [220, 4, 1, "", "static_eye"], [318, 4, 1, "", "static_finfo"], [522, 4, 1, "", "static_floor"], [527, 4, 1, "", "static_floor_divide"], [225, 4, 1, "", "static_from_dlpack"], [231, 4, 1, "", "static_full_like"], [321, 4, 1, "", "static_function_supported_dtypes"], [324, 4, 1, "", "static_function_unsupported_dtypes"], [719, 4, 1, "", "static_gather_nd"], [170, 4, 1, "", "static_gelu"], [791, 4, 1, "", "static_gradient_descent_update"], [532, 4, 1, "", "static_greater"], [537, 4, 1, "", "static_greater_equal"], [329, 4, 1, "", "static_iinfo"], [864, 4, 1, "", "static_inv"], [335, 4, 1, "", "static_is_bool_dtype"], [340, 4, 1, "", "static_is_float_dtype"], [345, 4, 1, "", "static_is_int_dtype"], [350, 4, 1, "", "static_is_uint_dtype"], [796, 4, 1, "", "static_is_variable"], [542, 4, 1, "", "static_isfinite"], [547, 4, 1, "", "static_isinf"], [552, 4, 1, "", "static_isnan"], [800, 4, 1, "", "static_lamb_update"], [804, 4, 1, "", "static_lars_update"], [1049, 4, 1, "", "static_layer_norm"], [175, 4, 1, "", "static_leaky_relu"], [557, 4, 1, "", "static_less"], [562, 4, 1, "", "static_less_equal"], [234, 4, 1, "", "static_linspace"], [567, 4, 1, "", "static_log"], [572, 4, 1, "", "static_log10"], [577, 4, 1, "", "static_log1p"], [582, 4, 1, "", "static_log2"], [587, 4, 1, "", "static_logaddexp"], [592, 4, 1, "", "static_logical_and"], [597, 4, 1, "", "static_logical_not"], [602, 4, 1, "", "static_logical_or"], [607, 4, 1, "", "static_logical_xor"], [237, 4, 1, "", "static_logspace"], [873, 4, 1, "", "static_matrix_norm"], [877, 4, 1, "", "static_matrix_power"], [882, 4, 1, "", "static_matrix_rank"], [887, 4, 1, "", "static_matrix_transpose"], [242, 4, 1, "", "static_meshgrid"], [614, 4, 1, "", "static_multiply"], [247, 4, 1, "", "static_native_array"], [619, 4, 1, "", "static_negative"], [624, 4, 1, "", "static_not_equal"], [250, 4, 1, "", "static_ones"], [255, 4, 1, "", "static_ones_like"], [808, 4, 1, "", "static_optimizer_update"], [892, 4, 1, "", "static_outer"], [629, 4, 1, "", "static_positive"], [634, 4, 1, "", "static_pow"], [900, 4, 1, "", "static_qr"], [1054, 4, 1, "", "static_randint"], [1060, 4, 1, "", "static_random_uniform"], [180, 4, 1, "", "static_relu"], [639, 4, 1, "", "static_remainder"], [991, 4, 1, "", "static_repeat"], [356, 4, 1, "", "static_result_type"], [1000, 4, 1, "", "static_roll"], [644, 4, 1, "", "static_round"], [185, 4, 1, "", "static_sigmoid"], [649, 4, 1, "", "static_sign"], [654, 4, 1, "", "static_sin"], [659, 4, 1, "", "static_sinh"], [904, 4, 1, "", "static_slogdet"], [190, 4, 1, "", "static_softmax"], [195, 4, 1, "", "static_softplus"], [909, 4, 1, "", "static_solve"], [1099, 4, 1, "", "static_sort"], [960, 4, 1, "", "static_sparse_cross_entropy"], [664, 4, 1, "", "static_sqrt"], [669, 4, 1, "", "static_square"], [671, 4, 1, "", "static_subtract"], [911, 4, 1, "", "static_svd"], [916, 4, 1, "", "static_svdvals"], [676, 4, 1, "", "static_tan"], [197, 4, 1, "", "static_tanh"], [921, 4, 1, "", "static_tensordot"], [394, 4, 1, "", "static_to_device"], [763, 4, 1, "", "static_to_numpy"], [926, 4, 1, "", "static_trace"], [257, 4, 1, "", "static_tril"], [262, 4, 1, "", "static_triu"], [682, 4, 1, "", "static_trunc"], [1070, 4, 1, "", "static_unique_all"], [1075, 4, 1, "", "static_unique_counts"], [1080, 4, 1, "", "static_unique_inverse"], [1085, 4, 1, "", "static_unique_values"], [931, 4, 1, "", "static_vecdot"], [936, 4, 1, "", "static_vector_norm"], [941, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [267, 4, 1, "", "static_zeros"], [270, 4, 1, "", "static_zeros_like"], [1123, 4, 1, "", "std"], [673, 4, 1, "", "subtract"], [1127, 4, 1, "", "sum"], [913, 4, 1, "", "svd"], [918, 4, 1, "", "svdvals"], [1012, 4, 1, "", "swapaxes"], [678, 4, 1, "", "tan"], [199, 4, 1, "", "tanh"], [923, 4, 1, "", "tensordot"], [1016, 4, 1, "", "tile"], [396, 4, 1, "", "to_device"], [765, 4, 1, "", "to_numpy"], [928, 4, 1, "", "trace"], [259, 4, 1, "", "tril"], [264, 4, 1, "", "triu"], [684, 4, 1, "", "trunc"], [1072, 4, 1, "", "unique_all"], [1077, 4, 1, "", "unique_counts"], [1082, 4, 1, "", "unique_inverse"], [1087, 4, 1, "", "unique_values"], [1131, 4, 1, "", "var"], [933, 4, 1, "", "vecdot"], [938, 4, 1, "", "vector_norm"], [943, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1020, 4, 1, "", "zero_pad"], [272, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[81, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 2, 1, "", "empty_like"], [81, 2, 1, "", "from_dlpack"], [81, 2, 1, "", "full_like"], [81, 2, 1, "", "meshgrid"], [81, 2, 1, "", "native_array"], [81, 2, 1, "", "ones_like"], [81, 2, 1, "", "static_arange"], [81, 2, 1, "", "static_asarray"], [81, 2, 1, "", "static_empty_like"], [81, 2, 1, "", "static_eye"], [81, 2, 1, "", "static_from_dlpack"], [81, 2, 1, "", "static_full_like"], [81, 2, 1, "", "static_linspace"], [81, 2, 1, "", "static_logspace"], [81, 2, 1, "", "static_meshgrid"], [81, 2, 1, "", "static_native_array"], [81, 2, 1, "", "static_ones"], [81, 2, 1, "", "static_ones_like"], [81, 2, 1, "", "static_tril"], [81, 2, 1, "", "static_triu"], [81, 2, 1, "", "static_zeros"], [81, 2, 1, "", "static_zeros_like"], [81, 2, 1, "", "tril"], [81, 2, 1, "", "triu"], [81, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 2, 1, "", "astype"], [83, 2, 1, "", "broadcast_arrays"], [83, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "can_cast"], [83, 2, 1, "", "dtype"], [83, 2, 1, "", "finfo"], [83, 2, 1, "", "iinfo"], [83, 2, 1, "", "is_bool_dtype"], [83, 2, 1, "", "is_float_dtype"], [83, 2, 1, "", "is_int_dtype"], [83, 2, 1, "", "is_uint_dtype"], [83, 2, 1, "", "result_type"], [83, 2, 1, "", "static_astype"], [83, 2, 1, "", "static_broadcast_arrays"], [83, 2, 1, "", "static_broadcast_to"], [83, 2, 1, "", "static_can_cast"], [83, 2, 1, "", "static_default_float_dtype"], [83, 2, 1, "", "static_dtype"], [83, 2, 1, "", "static_finfo"], [83, 2, 1, "", "static_function_supported_dtypes"], [83, 2, 1, "", "static_function_unsupported_dtypes"], [83, 2, 1, "", "static_iinfo"], [83, 2, 1, "", "static_is_bool_dtype"], [83, 2, 1, "", "static_is_float_dtype"], [83, 2, 1, "", "static_is_int_dtype"], [83, 2, 1, "", "static_is_uint_dtype"], [83, 2, 1, "", "static_result_type"]], "ivy.container.device": [[85, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[85, 2, 1, "", "dev"], [85, 2, 1, "", "static_dev"], [85, 2, 1, "", "static_to_device"], [85, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[87, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 2, 1, "", "abs"], [87, 2, 1, "", "acos"], [87, 2, 1, "", "acosh"], [87, 2, 1, "", "add"], [87, 2, 1, "", "asin"], [87, 2, 1, "", "asinh"], [87, 2, 1, "", "atan"], [87, 2, 1, "", "atan2"], [87, 2, 1, "", "atanh"], [87, 2, 1, "", "bitwise_and"], [87, 2, 1, "", "bitwise_invert"], [87, 2, 1, "", "bitwise_left_shift"], [87, 2, 1, "", "bitwise_or"], [87, 2, 1, "", "bitwise_right_shift"], [87, 2, 1, "", "bitwise_xor"], [87, 2, 1, "", "ceil"], [87, 2, 1, "", "cos"], [87, 2, 1, "", "cosh"], [87, 2, 1, "", "divide"], [87, 2, 1, "", "equal"], [87, 2, 1, "", "erf"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "expm1"], [87, 2, 1, "", "floor"], [87, 2, 1, "", "floor_divide"], [87, 2, 1, "", "greater"], [87, 2, 1, "", "greater_equal"], [87, 2, 1, "", "isfinite"], [87, 2, 1, "", "isinf"], [87, 2, 1, "", "isnan"], [87, 2, 1, "", "less"], [87, 2, 1, "", "less_equal"], [87, 2, 1, "", "log"], [87, 2, 1, "", "log10"], [87, 2, 1, "", "log1p"], [87, 2, 1, "", "log2"], [87, 2, 1, "", "logaddexp"], [87, 2, 1, "", "logical_and"], [87, 2, 1, "", "logical_not"], [87, 2, 1, "", "logical_or"], [87, 2, 1, "", "logical_xor"], [87, 2, 1, "", "multiply"], [87, 2, 1, "", "negative"], [87, 2, 1, "", "not_equal"], [87, 2, 1, "", "positive"], [87, 2, 1, "", "pow"], [87, 2, 1, "", "remainder"], [87, 2, 1, "", "round"], [87, 2, 1, "", "sign"], [87, 2, 1, "", "sin"], [87, 2, 1, "", "sinh"], [87, 2, 1, "", "sqrt"], [87, 2, 1, "", "square"], [87, 2, 1, "", "static_abs"], [87, 2, 1, "", "static_acos"], [87, 2, 1, "", "static_acosh"], [87, 2, 1, "", "static_add"], [87, 2, 1, "", "static_asin"], [87, 2, 1, "", "static_asinh"], [87, 2, 1, "", "static_atan"], [87, 2, 1, "", "static_atan2"], [87, 2, 1, "", "static_atanh"], [87, 2, 1, "", "static_bitwise_and"], [87, 2, 1, "", "static_bitwise_invert"], [87, 2, 1, "", "static_bitwise_left_shift"], [87, 2, 1, "", "static_bitwise_or"], [87, 2, 1, "", "static_bitwise_right_shift"], [87, 2, 1, "", "static_bitwise_xor"], [87, 2, 1, "", "static_ceil"], [87, 2, 1, "", "static_cos"], [87, 2, 1, "", "static_cosh"], [87, 2, 1, "", "static_divide"], [87, 2, 1, "", "static_equal"], [87, 2, 1, "", "static_erf"], [87, 2, 1, "", "static_exp"], [87, 2, 1, "", "static_expm1"], [87, 2, 1, "", "static_floor"], [87, 2, 1, "", "static_floor_divide"], [87, 2, 1, "", "static_greater"], [87, 2, 1, "", "static_greater_equal"], [87, 2, 1, "", "static_isfinite"], [87, 2, 1, "", "static_isinf"], [87, 2, 1, "", "static_isnan"], [87, 2, 1, "", "static_less"], [87, 2, 1, "", "static_less_equal"], [87, 2, 1, "", "static_log"], [87, 2, 1, "", "static_log10"], [87, 2, 1, "", "static_log1p"], [87, 2, 1, "", "static_log2"], [87, 2, 1, "", "static_logaddexp"], [87, 2, 1, "", "static_logical_and"], [87, 2, 1, "", "static_logical_not"], [87, 2, 1, "", "static_logical_or"], [87, 2, 1, "", "static_logical_xor"], [87, 2, 1, "", "static_multiply"], [87, 2, 1, "", "static_negative"], [87, 2, 1, "", "static_not_equal"], [87, 2, 1, "", "static_positive"], [87, 2, 1, "", "static_pow"], [87, 2, 1, "", "static_remainder"], [87, 2, 1, "", "static_round"], [87, 2, 1, "", "static_sign"], [87, 2, 1, "", "static_sin"], [87, 2, 1, "", "static_sinh"], [87, 2, 1, "", "static_sqrt"], [87, 2, 1, "", "static_square"], [87, 2, 1, "", "static_subtract"], [87, 2, 1, "", "static_tan"], [87, 2, 1, "", "static_tanh"], [87, 2, 1, "", "static_trunc"], [87, 2, 1, "", "subtract"], [87, 2, 1, "", "tan"], [87, 2, 1, "", "tanh"], [87, 2, 1, "", "trunc"]], "ivy.container.general": [[89, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 2, 1, "", "all_equal"], [89, 2, 1, "", "clip_vector_norm"], [89, 2, 1, "", "gather_nd"], [89, 2, 1, "", "static_all_equal"], [89, 2, 1, "", "static_gather_nd"], [89, 2, 1, "", "static_to_numpy"], [89, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 2, 1, "", "adam_step"], [91, 2, 1, "", "adam_update"], [91, 2, 1, "", "gradient_descent_update"], [91, 2, 1, "", "is_variable"], [91, 2, 1, "", "lamb_update"], [91, 2, 1, "", "lars_update"], [91, 2, 1, "", "optimizer_update"], [91, 2, 1, "", "static_adam_step"], [91, 2, 1, "", "static_adam_update"], [91, 2, 1, "", "static_execute_with_gradients"], [91, 2, 1, "", "static_gradient_descent_update"], [91, 2, 1, "", "static_is_variable"], [91, 2, 1, "", "static_lamb_update"], [91, 2, 1, "", "static_lars_update"], [91, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[93, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 2, 1, "", "depthwise_conv2d"], [95, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[97, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[97, 2, 1, "", "cholesky"], [97, 2, 1, "", "cross"], [97, 2, 1, "", "det"], [97, 2, 1, "", "diagonal"], [97, 2, 1, "", "eigh"], [97, 2, 1, "", "inv"], [97, 2, 1, "", "matmul"], [97, 2, 1, "", "matrix_norm"], [97, 2, 1, "", "matrix_power"], [97, 2, 1, "", "matrix_rank"], [97, 2, 1, "", "matrix_transpose"], [97, 2, 1, "", "outer"], [97, 2, 1, "", "qr"], [97, 2, 1, "", "slogdet"], [97, 2, 1, "", "solve"], [97, 2, 1, "", "static_cholesky"], [97, 2, 1, "", "static_cross"], [97, 2, 1, "", "static_det"], [97, 2, 1, "", "static_diagonal"], [97, 2, 1, "", "static_inv"], [97, 2, 1, "", "static_matrix_norm"], [97, 2, 1, "", "static_matrix_power"], [97, 2, 1, "", "static_matrix_rank"], [97, 2, 1, "", "static_matrix_transpose"], [97, 2, 1, "", "static_outer"], [97, 2, 1, "", "static_qr"], [97, 2, 1, "", "static_slogdet"], [97, 2, 1, "", "static_solve"], [97, 2, 1, "", "static_svd"], [97, 2, 1, "", "static_svdvals"], [97, 2, 1, "", "static_tensordot"], [97, 2, 1, "", "static_trace"], [97, 2, 1, "", "static_vecdot"], [97, 2, 1, "", "static_vector_norm"], [97, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [97, 2, 1, "", "svd"], [97, 2, 1, "", "svdvals"], [97, 2, 1, "", "tensordot"], [97, 2, 1, "", "trace"], [97, 2, 1, "", "vecdot"], [97, 2, 1, "", "vector_norm"], [97, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[99, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[99, 2, 1, "", "binary_cross_entropy"], [99, 2, 1, "", "cross_entropy"], [99, 2, 1, "", "sparse_cross_entropy"], [99, 2, 1, "", "static_binary_cross_entropy"], [99, 2, 1, "", "static_cross_entropy"], [99, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[101, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[101, 2, 1, "", "clip"], [101, 2, 1, "", "concat"], [101, 2, 1, "", "constant_pad"], [101, 2, 1, "", "expand_dims"], [101, 2, 1, "", "flip"], [101, 2, 1, "", "permute_dims"], [101, 2, 1, "", "repeat"], [101, 2, 1, "", "reshape"], [101, 2, 1, "", "roll"], [101, 2, 1, "", "squeeze"], [101, 2, 1, "", "stack"], [101, 2, 1, "", "static_clip"], [101, 2, 1, "", "static_repeat"], [101, 2, 1, "", "static_roll"], [101, 2, 1, "", "swapaxes"], [101, 2, 1, "", "tile"], [101, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[103, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[103, 2, 1, "", "layer_norm"], [103, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[105, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[105, 2, 1, "", "random_uniform"], [105, 2, 1, "", "static_randint"], [105, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[107, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[109, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[109, 2, 1, "", "static_unique_all"], [109, 2, 1, "", "static_unique_counts"], [109, 2, 1, "", "static_unique_inverse"], [109, 2, 1, "", "static_unique_values"], [109, 2, 1, "", "unique_all"], [109, 2, 1, "", "unique_counts"], [109, 2, 1, "", "unique_inverse"], [109, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[111, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[111, 2, 1, "", "argsort"], [111, 2, 1, "", "sort"], [111, 2, 1, "", "static_argsort"], [111, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[113, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[113, 2, 1, "", "einsum"], [113, 2, 1, "", "max"], [113, 2, 1, "", "mean"], [113, 2, 1, "", "min"], [113, 2, 1, "", "prod"], [113, 2, 1, "", "std"], [113, 2, 1, "", "sum"], [113, 2, 1, "", "var"]], "ivy.container.utility": [[115, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[115, 2, 1, "", "all"], [115, 2, 1, "", "any"], [115, 2, 1, "", "static_all"], [115, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[117, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[156, 4, 1, "", "handle_nestable"], [157, 4, 1, "", "handle_out_argument"], [158, 4, 1, "", "infer_device"], [159, 4, 1, "", "infer_dtype"], [160, 4, 1, "", "inputs_to_ivy_arrays"], [161, 4, 1, "", "inputs_to_native_arrays"], [162, 4, 1, "", "outputs_to_ivy_arrays"], [163, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[165, 0, 0, "-", "activations"], [201, 0, 0, "-", "compilation"], [203, 0, 0, "-", "constants"], [204, 0, 0, "-", "creation"], [274, 0, 0, "-", "data_type"], [367, 0, 0, "-", "device"], [402, 0, 0, "-", "elementwise"], [686, 0, 0, "-", "general"], [774, 0, 0, "-", "gradients"], [815, 0, 0, "-", "layers"], [832, 0, 0, "-", "linear_algebra"], [945, 0, 0, "-", "losses"], [961, 0, 0, "-", "manipulation"], [1022, 0, 0, "-", "meta"], [1026, 0, 0, "-", "nest"], [1044, 0, 0, "-", "norms"], [1050, 0, 0, "-", "random"], [1063, 0, 0, "-", "searching"], [1068, 0, 0, "-", "set"], [1089, 0, 0, "-", "sorting"], [1100, 0, 0, "-", "statistical"], [1133, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[169, 4, 1, "", "gelu"], [174, 4, 1, "", "leaky_relu"], [179, 4, 1, "", "relu"], [184, 4, 1, "", "sigmoid"], [189, 4, 1, "", "softmax"], [194, 4, 1, "", "softplus"], [200, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[202, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[203, 5, 1, "", "e"], [203, 5, 1, "", "inf"], [203, 5, 1, "", "nan"], [203, 5, 1, "", "newaxis"], [203, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[206, 4, 1, "", "arange"], [204, 4, 1, "", "array"], [210, 4, 1, "", "asarray"], [212, 4, 1, "", "empty"], [216, 4, 1, "", "empty_like"], [219, 4, 1, "", "eye"], [224, 4, 1, "", "from_dlpack"], [226, 4, 1, "", "full"], [230, 4, 1, "", "full_like"], [233, 4, 1, "", "linspace"], [236, 4, 1, "", "logspace"], [241, 4, 1, "", "meshgrid"], [246, 4, 1, "", "native_array"], [249, 4, 1, "", "ones"], [254, 4, 1, "", "ones_like"], [260, 4, 1, "", "tril"], [265, 4, 1, "", "triu"], [268, 4, 1, "", "zeros"], [273, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[274, 1, 1, "", "DefaultDtype"], [274, 1, 1, "", "DefaultFloatDtype"], [274, 1, 1, "", "DefaultIntDtype"], [274, 1, 1, "", "DefaultUintDtype"], [279, 4, 1, "", "as_ivy_dtype"], [280, 4, 1, "", "as_native_dtype"], [284, 4, 1, "", "astype"], [289, 4, 1, "", "broadcast_arrays"], [294, 4, 1, "", "broadcast_to"], [299, 4, 1, "", "can_cast"], [301, 4, 1, "", "closest_valid_dtype"], [302, 4, 1, "", "default_dtype"], [304, 4, 1, "", "default_float_dtype"], [306, 4, 1, "", "default_int_dtype"], [307, 4, 1, "", "default_uint_dtype"], [311, 4, 1, "", "dtype"], [313, 4, 1, "", "dtype_bits"], [317, 4, 1, "", "finfo"], [320, 4, 1, "", "function_supported_dtypes"], [323, 4, 1, "", "function_unsupported_dtypes"], [328, 4, 1, "", "iinfo"], [330, 4, 1, "", "invalid_dtype"], [334, 4, 1, "", "is_bool_dtype"], [339, 4, 1, "", "is_float_dtype"], [344, 4, 1, "", "is_int_dtype"], [349, 4, 1, "", "is_uint_dtype"], [351, 4, 1, "", "promote_types"], [355, 4, 1, "", "result_type"], [357, 4, 1, "", "set_default_dtype"], [358, 4, 1, "", "set_default_float_dtype"], [359, 4, 1, "", "set_default_int_dtype"], [360, 4, 1, "", "set_default_uint_dtype"], [361, 4, 1, "", "type_promote_arrays"], [362, 4, 1, "", "unset_default_dtype"], [363, 4, 1, "", "unset_default_float_dtype"], [364, 4, 1, "", "unset_default_int_dtype"], [365, 4, 1, "", "unset_default_uint_dtype"], [366, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[367, 1, 1, "", "DefaultDevice"], [369, 1, 1, "", "Profiler"], [370, 4, 1, "", "as_ivy_dev"], [371, 4, 1, "", "as_native_dev"], [372, 4, 1, "", "clear_mem_on_dev"], [373, 4, 1, "", "default_device"], [377, 4, 1, "", "dev"], [379, 4, 1, "", "dev_util"], [380, 4, 1, "", "function_supported_devices"], [381, 4, 1, "", "function_unsupported_devices"], [382, 4, 1, "", "get_all_ivy_arrays_on_dev"], [383, 4, 1, "", "gpu_is_available"], [384, 4, 1, "", "num_cpu_cores"], [385, 4, 1, "", "num_gpus"], [386, 4, 1, "", "num_ivy_arrays_on_dev"], [387, 4, 1, "", "percent_used_mem_on_dev"], [388, 4, 1, "", "print_all_ivy_arrays_on_dev"], [389, 4, 1, "", "set_default_device"], [390, 4, 1, "", "set_split_factor"], [391, 4, 1, "", "split_factor"], [392, 4, 1, "", "split_func_call"], [397, 4, 1, "", "to_device"], [398, 4, 1, "", "total_mem_on_dev"], [399, 4, 1, "", "tpu_is_available"], [400, 4, 1, "", "unset_default_device"], [401, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[367, 2, 1, "", "__enter__"], [367, 2, 1, "", "__exit__"], [367, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[369, 2, 1, "", "__init__"], [369, 2, 1, "", "start"], [369, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[406, 4, 1, "", "abs"], [411, 4, 1, "", "acos"], [416, 4, 1, "", "acosh"], [421, 4, 1, "", "add"], [426, 4, 1, "", "asin"], [431, 4, 1, "", "asinh"], [436, 4, 1, "", "atan"], [441, 4, 1, "", "atan2"], [446, 4, 1, "", "atanh"], [451, 4, 1, "", "bitwise_and"], [456, 4, 1, "", "bitwise_invert"], [461, 4, 1, "", "bitwise_left_shift"], [466, 4, 1, "", "bitwise_or"], [471, 4, 1, "", "bitwise_right_shift"], [476, 4, 1, "", "bitwise_xor"], [481, 4, 1, "", "ceil"], [486, 4, 1, "", "cos"], [491, 4, 1, "", "cosh"], [496, 4, 1, "", "divide"], [501, 4, 1, "", "equal"], [506, 4, 1, "", "erf"], [511, 4, 1, "", "exp"], [516, 4, 1, "", "expm1"], [521, 4, 1, "", "floor"], [526, 4, 1, "", "floor_divide"], [531, 4, 1, "", "greater"], [536, 4, 1, "", "greater_equal"], [541, 4, 1, "", "isfinite"], [546, 4, 1, "", "isinf"], [551, 4, 1, "", "isnan"], [556, 4, 1, "", "less"], [561, 4, 1, "", "less_equal"], [566, 4, 1, "", "log"], [571, 4, 1, "", "log10"], [576, 4, 1, "", "log1p"], [581, 4, 1, "", "log2"], [586, 4, 1, "", "logaddexp"], [591, 4, 1, "", "logical_and"], [596, 4, 1, "", "logical_not"], [601, 4, 1, "", "logical_or"], [606, 4, 1, "", "logical_xor"], [608, 4, 1, "", "maximum"], [609, 4, 1, "", "minimum"], [613, 4, 1, "", "multiply"], [618, 4, 1, "", "negative"], [623, 4, 1, "", "not_equal"], [628, 4, 1, "", "positive"], [633, 4, 1, "", "pow"], [638, 4, 1, "", "remainder"], [643, 4, 1, "", "round"], [648, 4, 1, "", "sign"], [653, 4, 1, "", "sin"], [658, 4, 1, "", "sinh"], [663, 4, 1, "", "sqrt"], [668, 4, 1, "", "square"], [674, 4, 1, "", "subtract"], [679, 4, 1, "", "tan"], [680, 4, 1, "", "tanh"], [685, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[690, 4, 1, "", "all_equal"], [692, 4, 1, "", "arg_info"], [693, 4, 1, "", "arg_names"], [694, 4, 1, "", "array_equal"], [695, 4, 1, "", "arrays_equal"], [696, 4, 1, "", "assert_supports_inplace"], [697, 4, 1, "", "cache_fn"], [698, 4, 1, "", "clip_matrix_norm"], [701, 4, 1, "", "clip_vector_norm"], [702, 4, 1, "", "container_types"], [703, 4, 1, "", "copy_array"], [704, 4, 1, "", "cumprod"], [705, 4, 1, "", "cumsum"], [706, 4, 1, "", "current_backend_str"], [707, 4, 1, "", "default"], [708, 4, 1, "", "einops_rearrange"], [709, 4, 1, "", "einops_reduce"], [710, 4, 1, "", "einops_repeat"], [711, 4, 1, "", "exists"], [712, 4, 1, "", "floormod"], [713, 4, 1, "", "fourier_encode"], [714, 4, 1, "", "gather"], [718, 4, 1, "", "gather_nd"], [720, 4, 1, "", "get_all_arrays_in_memory"], [721, 4, 1, "", "get_array_mode"], [722, 4, 1, "", "get_min_base"], [723, 4, 1, "", "get_min_denominator"], [724, 4, 1, "", "get_nestable_mode"], [725, 4, 1, "", "get_num_dims"], [726, 4, 1, "", "get_referrers_recursive"], [727, 4, 1, "", "has_nans"], [728, 4, 1, "", "indices_where"], [729, 4, 1, "", "inplace_arrays_supported"], [730, 4, 1, "", "inplace_decrement"], [731, 4, 1, "", "inplace_increment"], [732, 4, 1, "", "inplace_update"], [733, 4, 1, "", "inplace_variables_supported"], [734, 4, 1, "", "is_array"], [735, 4, 1, "", "is_ivy_array"], [736, 4, 1, "", "is_ivy_container"], [737, 4, 1, "", "is_native_array"], [738, 4, 1, "", "match_kwargs"], [739, 4, 1, "", "multiprocessing"], [740, 4, 1, "", "num_arrays_in_memory"], [741, 4, 1, "", "one_hot"], [742, 4, 1, "", "print_all_arrays_in_memory"], [743, 4, 1, "", "queue_timeout"], [744, 4, 1, "", "scatter_flat"], [745, 4, 1, "", "scatter_nd"], [746, 4, 1, "", "set_array_mode"], [747, 4, 1, "", "set_min_base"], [748, 4, 1, "", "set_min_denominator"], [749, 4, 1, "", "set_nestable_mode"], [750, 4, 1, "", "set_queue_timeout"], [751, 4, 1, "", "set_shape_array_mode"], [752, 4, 1, "", "set_tmp_dir"], [753, 4, 1, "", "shape"], [754, 4, 1, "", "shape_array_mode"], [755, 4, 1, "", "stable_divide"], [756, 4, 1, "", "stable_pow"], [757, 4, 1, "", "supports_inplace"], [758, 4, 1, "", "tmp_dir"], [759, 4, 1, "", "to_ivy_shape"], [760, 4, 1, "", "to_list"], [761, 4, 1, "", "to_native_shape"], [766, 4, 1, "", "to_numpy"], [767, 4, 1, "", "to_scalar"], [768, 4, 1, "", "try_else_none"], [769, 4, 1, "", "unset_array_mode"], [770, 4, 1, "", "unset_nestable_mode"], [771, 4, 1, "", "unset_shape_array_mode"], [772, 4, 1, "", "unstack"], [773, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[774, 1, 1, "", "GradientTracking"], [779, 4, 1, "", "adam_step"], [783, 4, 1, "", "adam_update"], [786, 4, 1, "", "execute_with_gradients"], [790, 4, 1, "", "gradient_descent_update"], [795, 4, 1, "", "is_variable"], [799, 4, 1, "", "lamb_update"], [803, 4, 1, "", "lars_update"], [807, 4, 1, "", "optimizer_update"], [809, 4, 1, "", "set_with_grads"], [810, 4, 1, "", "stop_gradient"], [811, 4, 1, "", "unset_with_grads"], [812, 4, 1, "", "variable"], [813, 4, 1, "", "variable_data"], [814, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[774, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[816, 4, 1, "", "conv1d"], [817, 4, 1, "", "conv1d_transpose"], [818, 4, 1, "", "conv2d"], [819, 4, 1, "", "conv2d_transpose"], [820, 4, 1, "", "conv3d"], [821, 4, 1, "", "conv3d_transpose"], [825, 4, 1, "", "depthwise_conv2d"], [827, 4, 1, "", "dropout"], [828, 4, 1, "", "linear"], [829, 4, 1, "", "lstm_update"], [830, 4, 1, "", "multi_head_attention"], [831, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[836, 4, 1, "", "cholesky"], [841, 4, 1, "", "cross"], [846, 4, 1, "", "det"], [851, 4, 1, "", "diagonal"], [856, 4, 1, "", "eigh"], [859, 4, 1, "", "eigvalsh"], [863, 4, 1, "", "inv"], [868, 4, 1, "", "matmul"], [872, 4, 1, "", "matrix_norm"], [876, 4, 1, "", "matrix_power"], [881, 4, 1, "", "matrix_rank"], [886, 4, 1, "", "matrix_transpose"], [891, 4, 1, "", "outer"], [895, 4, 1, "", "pinv"], [899, 4, 1, "", "qr"], [903, 4, 1, "", "slogdet"], [908, 4, 1, "", "solve"], [914, 4, 1, "", "svd"], [919, 4, 1, "", "svdvals"], [924, 4, 1, "", "tensordot"], [929, 4, 1, "", "trace"], [934, 4, 1, "", "vecdot"], [939, 4, 1, "", "vector_norm"], [944, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[949, 4, 1, "", "binary_cross_entropy"], [954, 4, 1, "", "cross_entropy"], [959, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[965, 4, 1, "", "clip"], [970, 4, 1, "", "concat"], [974, 4, 1, "", "constant_pad"], [978, 4, 1, "", "expand_dims"], [982, 4, 1, "", "flip"], [986, 4, 1, "", "permute_dims"], [990, 4, 1, "", "repeat"], [995, 4, 1, "", "reshape"], [999, 4, 1, "", "roll"], [1001, 4, 1, "", "split"], [1005, 4, 1, "", "squeeze"], [1009, 4, 1, "", "stack"], [1013, 4, 1, "", "swapaxes"], [1017, 4, 1, "", "tile"], [1021, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1023, 4, 1, "", "fomaml_step"], [1024, 4, 1, "", "maml_step"], [1025, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1027, 4, 1, "", "all_nested_indices"], [1028, 4, 1, "", "copy_nest"], [1029, 4, 1, "", "index_nest"], [1030, 4, 1, "", "insert_into_nest_at_index"], [1031, 4, 1, "", "insert_into_nest_at_indices"], [1032, 4, 1, "", "map"], [1033, 4, 1, "", "map_nest_at_index"], [1034, 4, 1, "", "map_nest_at_indices"], [1035, 4, 1, "", "multi_index_nest"], [1036, 4, 1, "", "nested_any"], [1037, 4, 1, "", "nested_indices_where"], [1038, 4, 1, "", "nested_map"], [1039, 4, 1, "", "nested_multi_map"], [1040, 4, 1, "", "prune_nest_at_index"], [1041, 4, 1, "", "prune_nest_at_indices"], [1042, 4, 1, "", "set_nest_at_index"], [1043, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1048, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1051, 4, 1, "", "multinomial"], [1053, 4, 1, "", "randint"], [1055, 4, 1, "", "random_normal"], [1059, 4, 1, "", "random_uniform"], [1061, 4, 1, "", "seed"], [1062, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1064, 4, 1, "", "argmax"], [1065, 4, 1, "", "argmin"], [1066, 4, 1, "", "nonzero"], [1067, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1073, 4, 1, "", "unique_all"], [1078, 4, 1, "", "unique_counts"], [1083, 4, 1, "", "unique_inverse"], [1088, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1093, 4, 1, "", "argsort"], [1098, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1104, 4, 1, "", "einsum"], [1108, 4, 1, "", "max"], [1112, 4, 1, "", "mean"], [1116, 4, 1, "", "min"], [1120, 4, 1, "", "prod"], [1124, 4, 1, "", "std"], [1128, 4, 1, "", "sum"], [1132, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1137, 4, 1, "", "all"], [1142, 4, 1, "", "any"]], "ivy.inspection": [[1148, 4, 1, "", "add_array_specs"], [1149, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1152, 0, 0, "-", "activations"], [1155, 0, 0, "-", "converters"], [1157, 0, 0, "-", "initializers"], [1166, 0, 0, "-", "layers"], [1178, 0, 0, "-", "module"], [1180, 0, 0, "-", "norms"], [1182, 0, 0, "-", "optimizers"], [1188, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1153, 1, 1, "", "GEGLU"], [1154, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1153, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1154, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1156, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1157, 1, 1, "", "Constant"], [1159, 1, 1, "", "FirstLayerSiren"], [1160, 1, 1, "", "GlorotUniform"], [1157, 1, 1, "", "KaimingNormal"], [1162, 1, 1, "", "Ones"], [1163, 1, 1, "", "Siren"], [1157, 1, 1, "", "Uniform"], [1165, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1157, 2, 1, "", "__init__"], [1157, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1159, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1160, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1157, 2, 1, "", "__init__"], [1157, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1162, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1163, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1157, 2, 1, "", "__init__"], [1157, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1165, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1167, 1, 1, "", "Conv1D"], [1168, 1, 1, "", "Conv1DTranspose"], [1169, 1, 1, "", "Conv2D"], [1170, 1, 1, "", "Conv2DTranspose"], [1171, 1, 1, "", "Conv3D"], [1172, 1, 1, "", "Conv3DTranspose"], [1173, 1, 1, "", "DepthwiseConv2D"], [1174, 1, 1, "", "Dropout"], [1175, 1, 1, "", "LSTM"], [1176, 1, 1, "", "Linear"], [1177, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1167, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1168, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1169, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1170, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1171, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1172, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1173, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1174, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1175, 2, 1, "", "__init__"], [1175, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1176, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1177, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1179, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1179, 2, 1, "", "__init__"], [1179, 2, 1, "", "build"], [1179, 3, 1, "", "build_mode"], [1179, 3, 1, "", "built"], [1179, 2, 1, "", "check_submod_rets"], [1179, 2, 1, "", "get_mod_key"], [1179, 2, 1, "", "mod_depth"], [1179, 2, 1, "", "mod_height"], [1179, 2, 1, "", "mod_with_top_mod_key_chain"], [1179, 2, 1, "", "save_weights"], [1179, 2, 1, "", "show_mod_in_top_mod"], [1179, 2, 1, "", "show_structure"], [1179, 2, 1, "", "show_v_in_top_v"], [1179, 2, 1, "", "sub_mods"], [1179, 2, 1, "", "track_submod_call_order"], [1179, 2, 1, "", "track_submod_rets"], [1179, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1181, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1181, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1183, 1, 1, "", "Adam"], [1184, 1, 1, "", "LAMB"], [1185, 1, 1, "", "LARS"], [1186, 1, 1, "", "Optimizer"], [1187, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1183, 2, 1, "", "__init__"], [1183, 2, 1, "", "set_state"], [1183, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1184, 2, 1, "", "__init__"], [1184, 2, 1, "", "set_state"], [1184, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1185, 2, 1, "", "__init__"], [1185, 2, 1, "", "set_state"], [1185, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1186, 2, 1, "", "__init__"], [1186, 2, 1, "", "set_state"], [1186, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1187, 2, 1, "", "__init__"], [1187, 2, 1, "", "set_state"], [1187, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1189, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1189, 2, 1, "", "__init__"]], "ivy.verbosity": [[1192, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 119, 128, 137, 154], "handler": [0, 137], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1144], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 154], "competit": 15, "do": [15, 125], "work": [15, 21], "The": [15, 19, 139, 154], "arrai": [15, 23, 26, 120, 124, 130, 139, 167, 172, 177, 182, 187, 192, 198, 209, 214, 222, 228, 239, 244, 252, 258, 263, 271, 282, 287, 292, 297, 309, 315, 326, 332, 337, 342, 347, 353, 375, 395, 404, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 604, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 672, 677, 683, 688, 716, 764, 777, 793, 823, 834, 839, 844, 849, 854, 858, 861, 866, 870, 879, 884, 889, 894, 897, 906, 912, 917, 922, 927, 932, 937, 942, 947, 952, 957, 963, 968, 972, 976, 980, 984, 988, 993, 997, 1003, 1007, 1011, 1015, 1019, 1046, 1057, 1071, 1076, 1081, 1086, 1091, 1096, 1102, 1106, 1110, 1114, 1118, 1122, 1126, 1130, 1135, 1140], "api": [15, 20, 119, 124, 131, 137, 139, 141, 142], "why": [16, 125], "unifi": [16, 139], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1144], "set": [18, 63, 108, 128, 1068], "up": 18, "clone": 18, "ivi": [18, 19, 119, 123, 125, 126, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 206, 207, 209, 210, 211, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 304, 305, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321, 323, 324, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 356, 375, 376, 377, 378, 394, 395, 396, 397, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 682, 683, 684, 685, 688, 689, 690, 691, 700, 701, 716, 717, 718, 719, 763, 764, 765, 766, 777, 778, 779, 780, 782, 783, 784, 786, 787, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 823, 824, 825, 826, 834, 835, 836, 837, 839, 840, 841, 842, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 858, 859, 861, 862, 863, 864, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 879, 880, 881, 882, 884, 885, 886, 887, 889, 890, 891, 892, 894, 895, 897, 898, 899, 900, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 960, 963, 964, 965, 966, 968, 969, 970, 972, 973, 974, 976, 977, 978, 980, 981, 982, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1000, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1046, 1047, 1048, 1049, 1053, 1054, 1057, 1058, 1059, 1060, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 140], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 135], "commit": [18, 19, 135], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "interact": 19, "contain": [19, 73, 78, 131, 140, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 197, 199, 207, 211, 215, 217, 220, 223, 225, 229, 231, 234, 237, 240, 242, 245, 247, 250, 253, 255, 257, 259, 262, 264, 267, 270, 272, 283, 285, 288, 290, 293, 295, 298, 300, 305, 310, 312, 316, 318, 321, 324, 327, 329, 333, 335, 338, 340, 343, 345, 348, 350, 354, 356, 376, 378, 394, 396, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 669, 671, 673, 676, 678, 682, 684, 689, 691, 700, 717, 719, 763, 765, 778, 780, 782, 784, 787, 789, 791, 794, 796, 798, 800, 802, 804, 806, 808, 824, 826, 835, 837, 840, 842, 845, 847, 850, 852, 855, 862, 864, 867, 871, 873, 875, 877, 880, 882, 885, 887, 890, 892, 898, 900, 902, 904, 907, 909, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 948, 950, 953, 955, 958, 960, 964, 966, 969, 973, 977, 981, 985, 989, 991, 994, 998, 1000, 1004, 1008, 1012, 1016, 1020, 1047, 1049, 1054, 1058, 1060, 1070, 1072, 1075, 1077, 1080, 1082, 1085, 1087, 1092, 1094, 1097, 1099, 1103, 1107, 1111, 1115, 1119, 1123, 1127, 1131, 1136, 1138, 1141, 1143], "run": 19, "test": [19, 124, 125], "local": 19, "open": 20, "task": 20, "function": [20, 120, 121, 125, 127, 129, 131, 132, 133, 137, 142, 154], "format": [20, 135], "frontend": [20, 126, 142], "build": [21, 137], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 154], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 37, 82, 125, 132, 140, 154, 274, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "class": [22, 139, 1151], "activ": [24, 74, 165, 1152], "arraywithactiv": 25, "convers": 29, "args_to_contain": 30, "args_to_ivi": 31, "args_to_n": 32, "to_ivi": 33, "to_n": 34, "creation": [35, 80, 204], "arraywithcr": 36, "type": [37, 82, 127, 132, 154, 274], "arraywithdatatyp": 38, "devic": [39, 84, 120, 133, 367], "arraywithdevic": 40, "elementwis": [41, 86, 402], "arraywithelementwis": 42, "gener": [43, 88, 125, 686], "arraywithgener": 44, "gradient": [45, 90, 774], "arraywithgradi": 46, "imag": [47, 92], "arraywithimag": 48, "layer": [49, 94, 815, 1166], "arraywithlay": 50, "linear": [51, 96, 828, 832, 1176], "algebra": [51, 96, 832], "arraywithlinearalgebra": 52, "loss": [53, 98, 945], "arraywithloss": 54, "manipul": [55, 100, 961], "arraywithmanipul": 56, "norm": [57, 102, 1044, 1180], "arraywithnorm": 58, "random": [59, 104, 1050], "arraywithrandom": 60, "search": [61, 106, 1063], "arraywithsearch": 62, "arraywithset": 64, "sort": [65, 110, 1089, 1095, 1096, 1097, 1098], "arraywithsort": 66, "statist": [67, 112, 1100], "arraywithstatist": 68, "util": [69, 114, 1133], "arraywithutil": 70, "wrap": [71, 116, 129], "add_ivy_array_instance_method": 72, "containerwithactiv": 75, "base": 76, "containerbas": 77, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": [119, 121], "design": [119, 136, 1144], "argument": [120, 132, 133, 134], "exampl": [120, 121, 123, 126, 135], "out": [120, 134], "dtype": [120, 308, 309, 310, 311], "number": 120, "oper": [120, 139, 154], "integ": 120, "sequenc": 120, "nestabl": [120, 127, 131], "helper": [121, 125], "1": 121, "2": 121, "docstr": [122, 123], "tan": [123, 675, 677, 678, 679], "roll": [123, 996, 997, 998, 999], "add": [123, 418, 419, 420, 421], "hypothesi": 125, "import": 125, "strategi": 125, "integr": 125, "we": 125, "need": 125, "how": 125, "write": 125, "effect": 125, "bonu": 125, "extend": 125, "featur": 125, "self": 125, "consist": 125, "explicit": 125, "test_array_funct": 125, "introduct": 126, "primari": 127, "composit": 127, "mix": 127, "standalon": 127, "conveni": 127, "nativ": 130, "handl": 130, "instanc": [131, 139], "method": [131, 139, 140], "static": 131, "special": 131, "modul": [132, 133, 141, 1178, 1179], "other": [132, 133], "unsupport": 132, "inplac": 134, "updat": 134, "copi": 134, "lint": 135, "check": [135, 154], "hook": 135, "automat": 135, "reformat": 135, "befor": 135, "block": 137, "framework": [137, 138, 1151], "graph": [137, 142], "compil": [137, 142, 201, 202], "monkei": 139, "patch": 139, "construct": 140, "represent": 140, "recurs": 140, "built": 140, "ins": 140, "access": 140, "save": 140, "load": 140, "comparison": 140, "custom": [140, 154], "case": 140, "compartment": 140, "configur": 140, "network": [140, 142], "weight": 140, "state": [141, 154], "initi": [141, 1157], "optim": [141, 1182, 1186], "transpil": 142, "role": 142, "convert": [142, 1155], "model": [142, 149, 154], "builder": 144, "ecosystem": 145, "gym": [146, 153], "mech": 147, "memori": [148, 153], "robot": [150, 153], "vision": [151, 153], "extens": [152, 1144], "appli": 153, "librari": 153, "mechan": 153, "faq": 154, "maintain": 154, "version": 154, "dynam": 154, "size": 154, "shape": [154, 753, 1068, 1069, 1073, 1074, 1078, 1084, 1088], "control": 154, "flow": 154, "auto": 154, "differenti": 154, "replica": 154, "parallel": 154, "support": 154, "altern": 154, "structur": 154, "func": 155, "wrapper": 155, "handle_nest": 156, "handle_out_argu": 157, "infer_devic": 158, "infer_dtyp": 159, "inputs_to_ivy_arrai": 160, "inputs_to_native_arrai": 161, "outputs_to_ivy_arrai": 162, "to_native_arrays_and_back": 163, "gelu": [166, 167, 168, 169, 1154], "static_gelu": 170, "leaky_relu": [171, 172, 173, 174], "static_leaky_relu": 175, "relu": [176, 177, 178, 179], "static_relu": 180, "sigmoid": [181, 182, 183, 184], "static_sigmoid": 185, "softmax": [186, 187, 188, 189], "static_softmax": 190, "softplu": [191, 192, 193, 194], "static_softplu": 195, "tanh": [196, 198, 199, 200, 680], "static_tanh": 197, "constant": 203, "note": [204, 221, 224], "arang": [205, 206], "static_arang": 207, "asarrai": [208, 209, 210], "static_asarrai": 211, "empti": 212, "empty_lik": [213, 214, 215, 216], "static_empty_lik": 217, "ey": [218, 219], "static_ey": 220, "from_dlpack": [221, 222, 223, 224], "static_from_dlpack": 225, "full": 226, "full_lik": [227, 228, 229, 230], "static_full_lik": 231, "linspac": [232, 233], "static_linspac": 234, "logspac": [235, 236], "static_logspac": 237, "meshgrid": [238, 239, 240, 241], "static_meshgrid": 242, "native_arrai": [243, 244, 245, 246], "static_native_arrai": 247, "ones": [248, 249], "static_on": 250, "ones_lik": [251, 252, 253, 254], "static_ones_lik": 255, "tril": [256, 258, 259, 260], "static_tril": 257, "triu": [261, 263, 264, 265], "static_triu": 262, "zero": [266, 268, 1165], "static_zero": 267, "zeros_lik": [269, 271, 272, 273], "static_zeros_lik": 270, "as_ivy_dtyp": 279, "as_native_dtyp": 280, "astyp": [281, 282, 283, 284], "static_astyp": 285, "broadcast_arrai": [286, 287, 288, 289], "static_broadcast_arrai": 290, "broadcast_to": [291, 292, 293, 294], "static_broadcast_to": 295, "can_cast": [296, 297, 298, 299], "static_can_cast": 300, "closest_valid_dtyp": 301, "default_dtyp": 302, "default_float_dtyp": [303, 304], "static_default_float_dtyp": 305, "default_int_dtyp": 306, "default_uint_dtyp": 307, "static_dtyp": 312, "dtype_bit": 313, "finfo": [314, 315, 316, 317], "static_finfo": 318, "function_supported_dtyp": [319, 320], "static_function_supported_dtyp": 321, "function_unsupported_dtyp": [322, 323], "static_function_unsupported_dtyp": 324, "iinfo": [325, 326, 327, 328], "static_iinfo": 329, "invalid_dtyp": 330, "is_bool_dtyp": [331, 332, 333, 334], "static_is_bool_dtyp": 335, "is_float_dtyp": [336, 337, 338, 339], "static_is_float_dtyp": 340, "is_int_dtyp": [341, 342, 343, 344], "static_is_int_dtyp": 345, "is_uint_dtyp": [346, 347, 348, 349], "static_is_uint_dtyp": 350, "promote_typ": 351, "result_typ": [352, 353, 354, 355], "static_result_typ": 356, "set_default_dtyp": 357, "set_default_float_dtyp": 358, "set_default_int_dtyp": 359, "set_default_uint_dtyp": 360, "type_promote_arrai": 361, "unset_default_dtyp": 362, "unset_default_float_dtyp": 363, "unset_default_int_dtyp": 364, "unset_default_uint_dtyp": 365, "valid_dtyp": 366, "profil": 369, "as_ivy_dev": 370, "as_native_dev": 371, "clear_mem_on_dev": 372, "default_devic": 373, "dev": [374, 375, 376, 377], "static_dev": 378, "dev_util": 379, "function_supported_devic": 380, "function_unsupported_devic": 381, "get_all_ivy_arrays_on_dev": 382, "gpu_is_avail": 383, "num_cpu_cor": 384, "num_gpu": 385, "num_ivy_arrays_on_dev": 386, "percent_used_mem_on_dev": 387, "print_all_ivy_arrays_on_dev": 388, "set_default_devic": 389, "set_split_factor": 390, "split_factor": 391, "split_func_cal": 392, "to_devic": [393, 395, 396, 397], "static_to_devic": 394, "total_mem_on_dev": 398, "tpu_is_avail": 399, "unset_default_devic": 400, "used_mem_on_dev": 401, "ab": [403, 404, 405, 406], "static_ab": 407, "aco": [408, 409, 410, 411], "static_aco": 412, "acosh": [413, 414, 415, 416], "static_acosh": 417, "static_add": 422, "asin": [423, 424, 425, 426], "static_asin": 427, "asinh": [428, 429, 430, 431], "static_asinh": 432, "atan": [433, 434, 435, 436], "static_atan": 437, "atan2": [438, 439, 440, 441], "static_atan2": 442, "atanh": [443, 444, 445, 446], "static_atanh": 447, "bitwise_and": [448, 449, 450, 451], "static_bitwise_and": 452, "bitwise_invert": [453, 454, 455, 456], "static_bitwise_invert": 457, "bitwise_left_shift": [458, 459, 460, 461], "static_bitwise_left_shift": 462, "bitwise_or": [463, 464, 465, 466], "static_bitwise_or": 467, "bitwise_right_shift": [468, 469, 470, 471], "static_bitwise_right_shift": 472, "bitwise_xor": [473, 474, 475, 476], "static_bitwise_xor": 477, "ceil": [478, 479, 480, 481], "static_ceil": 482, "co": [483, 484, 485, 486], "static_co": 487, "cosh": [488, 489, 490, 491], "static_cosh": 492, "divid": [493, 494, 495, 496], "static_divid": 497, "equal": [498, 499, 500, 501], "static_equ": 502, "erf": [503, 504, 505, 506], "static_erf": 507, "exp": [508, 509, 510, 511], "static_exp": 512, "expm1": [513, 514, 515, 516], "static_expm1": 517, "floor": [518, 519, 520, 521], "static_floor": 522, "floor_divid": [523, 524, 525, 526], "static_floor_divid": 527, "greater": [528, 529, 530, 531], "static_great": 532, "greater_equ": [533, 534, 535, 536], "static_greater_equ": 537, "isfinit": [538, 539, 540, 541], "static_isfinit": 542, "isinf": [543, 544, 545, 546], "static_isinf": 547, "isnan": [548, 549, 550, 551], "static_isnan": 552, "less": [553, 554, 555, 556], "static_less": 557, "less_equ": [558, 559, 560, 561], "static_less_equ": 562, "log": [563, 564, 565, 566], "static_log": 567, "log10": [568, 569, 570, 571], "static_log10": 572, "log1p": [573, 574, 575, 576], "static_log1p": 577, "log2": [578, 579, 580, 581], "static_log2": 582, "logaddexp": [583, 584, 585, 586], "static_logaddexp": 587, "logical_and": [588, 589, 590, 591], "static_logical_and": 592, "logical_not": [593, 594, 595, 596], "static_logical_not": 597, "logical_or": [598, 599, 600, 601], "static_logical_or": 602, "logical_xor": [603, 604, 605, 606], "static_logical_xor": 607, "maximum": 608, "minimum": 609, "multipli": [610, 611, 612, 613], "static_multipli": 614, "neg": [615, 616, 617, 618], "static_neg": 619, "not_equ": [620, 621, 622, 623], "static_not_equ": 624, "posit": [625, 626, 627, 628], "static_posit": 629, "pow": [630, 631, 632, 633], "static_pow": 634, "remaind": [635, 636, 637, 638], "static_remaind": 639, "round": [640, 641, 642, 643], "static_round": 644, "sign": [645, 646, 647, 648], "static_sign": 649, "sin": [650, 651, 652, 653], "static_sin": 654, "sinh": [655, 656, 657, 658], "static_sinh": 659, "sqrt": [660, 661, 662, 663], "static_sqrt": 664, "squar": [665, 666, 667, 668], "static_squar": 669, "subtract": [670, 672, 673, 674], "static_subtract": 671, "static_tan": 676, "trunc": [681, 683, 684, 685], "static_trunc": 682, "all_equ": [687, 688, 689, 690], "static_all_equ": 691, "arg_info": 692, "arg_nam": 693, "array_equ": 694, "arrays_equ": 695, "assert_supports_inplac": 696, "cache_fn": 697, "clip_matrix_norm": 698, "clip_vector_norm": [699, 700, 701], "container_typ": 702, "copy_arrai": 703, "cumprod": 704, "cumsum": 705, "current_backend_str": 706, "default": 707, "einops_rearrang": 708, "einops_reduc": 709, "einops_repeat": 710, "exist": 711, "floormod": 712, "fourier_encod": 713, "gather": 714, "gather_nd": [715, 716, 717, 718], "static_gather_nd": 719, "get_all_arrays_in_memori": 720, "get_array_mod": 721, "get_min_bas": 722, "get_min_denomin": 723, "get_nestable_mod": 724, "get_num_dim": 725, "get_referrers_recurs": 726, "has_nan": 727, "indices_wher": 728, "inplace_arrays_support": 729, "inplace_decr": 730, "inplace_incr": 731, "inplace_upd": 732, "inplace_variables_support": 733, "is_arrai": 734, "is_ivy_arrai": 735, "is_ivy_contain": 736, "is_native_arrai": 737, "match_kwarg": 738, "multiprocess": 739, "num_arrays_in_memori": 740, "one_hot": 741, "print_all_arrays_in_memori": 742, "queue_timeout": 743, "scatter_flat": 744, "scatter_nd": 745, "set_array_mod": 746, "set_min_bas": 747, "set_min_denomin": 748, "set_nestable_mod": 749, "set_queue_timeout": 750, "set_shape_array_mod": 751, "set_tmp_dir": 752, "shape_array_mod": 754, "stable_divid": 755, "stable_pow": 756, "supports_inplac": 757, "tmp_dir": 758, "to_ivy_shap": 759, "to_list": 760, "to_native_shap": 761, "to_numpi": [762, 764, 765, 766], "static_to_numpi": 763, "to_scalar": 767, "try_else_non": 768, "unset_array_mod": 769, "unset_nestable_mod": 770, "unset_shape_array_mod": 771, "unstack": 772, "value_is_nan": 773, "adam_step": [776, 777, 778, 779], "static_adam_step": 780, "adam_upd": [781, 782, 783], "static_adam_upd": 784, "execute_with_gradi": [785, 786], "static_execute_with_gradi": 787, "gradient_descent_upd": [788, 789, 790], "static_gradient_descent_upd": 791, "is_vari": [792, 793, 794, 795], "static_is_vari": 796, "lamb_upd": [797, 798, 799], "static_lamb_upd": 800, "lars_upd": [801, 802, 803], "static_lars_upd": 804, "optimizer_upd": [805, 806, 807], "static_optimizer_upd": 808, "set_with_grad": 809, "stop_gradi": 810, "unset_with_grad": 811, "variabl": 812, "variable_data": 813, "with_grad": 814, "conv1d": [816, 1167], "conv1d_transpos": 817, "conv2d": [818, 1169], "conv2d_transpos": 819, "conv3d": [820, 1171], "conv3d_transpos": 821, "depthwise_conv2d": [822, 823, 824, 825], "static_depthwise_conv2d": 826, "dropout": [827, 1174], "lstm_updat": 829, "multi_head_attent": 830, "scaled_dot_product_attent": 831, "choleski": [833, 834, 835, 836], "static_choleski": 837, "cross": [838, 839, 840, 841], "static_cross": 842, "det": [843, 844, 845, 846], "static_det": 847, "diagon": [848, 849, 850, 851], "static_diagon": 852, "eigh": [853, 854, 855, 856], "eigvalsh": [857, 858, 859], "inv": [860, 861, 862, 863], "static_inv": 864, "matmul": [865, 866, 867, 868], "matrix_norm": [869, 870, 871, 872], "static_matrix_norm": 873, "matrix_pow": [874, 875, 876], "static_matrix_pow": 877, "matrix_rank": [878, 879, 880, 881], "static_matrix_rank": 882, "matrix_transpos": [883, 884, 885, 886], "static_matrix_transpos": 887, "outer": [888, 889, 890, 891], "static_out": 892, "pinv": [893, 894, 895], "qr": [896, 897, 898, 899], "static_qr": 900, "slogdet": [901, 902, 903], "static_slogdet": 904, "solv": [905, 906, 907, 908], "static_solv": 909, "svd": [910, 912, 913, 914], "static_svd": 911, "svdval": [915, 917, 918, 919], "static_svdv": 916, "tensordot": [920, 922, 923, 924], "static_tensordot": 921, "trace": [925, 927, 928, 929], "static_trac": 926, "vecdot": [930, 932, 933, 934], "static_vecdot": 931, "vector_norm": [935, 937, 938, 939], "static_vector_norm": 936, "vector_to_skew_symmetric_matrix": [940, 942, 943, 944], "static_vector_to_skew_symmetric_matrix": 941, "binary_cross_entropi": [946, 947, 948, 949], "static_binary_cross_entropi": 950, "cross_entropi": [951, 952, 953, 954], "static_cross_entropi": 955, "sparse_cross_entropi": [956, 957, 958, 959], "static_sparse_cross_entropi": 960, "clip": [962, 963, 964, 965], "static_clip": 966, "concat": [967, 968, 969, 970], "constant_pad": [971, 972, 973, 974], "expand_dim": [975, 976, 977, 978], "flip": [979, 980, 981, 982], "permute_dim": [983, 984, 985, 986], "repeat": [987, 988, 989, 990], "static_repeat": 991, "reshap": [992, 993, 994, 995], "static_rol": 1000, "split": 1001, "squeez": [1002, 1003, 1004, 1005], "stack": [1006, 1007, 1008, 1009], "swapax": [1010, 1011, 1012, 1013], "tile": [1014, 1015, 1016, 1017], "zero_pad": [1018, 1019, 1020, 1021], "meta": 1022, "fomaml_step": 1023, "maml_step": 1024, "reptile_step": 1025, "nest": 1026, "all_nested_indic": 1027, "copy_nest": 1028, "index_nest": 1029, "insert_into_nest_at_index": 1030, "insert_into_nest_at_indic": 1031, "map": 1032, "map_nest_at_index": 1033, "map_nest_at_indic": 1034, "multi_index_nest": 1035, "nested_ani": 1036, "nested_indices_wher": 1037, "nested_map": 1038, "nested_multi_map": 1039, "prune_nest_at_index": 1040, "prune_nest_at_indic": 1041, "set_nest_at_index": 1042, "set_nest_at_indic": 1043, "layer_norm": [1045, 1046, 1047, 1048], "static_layer_norm": 1049, "multinomi": 1051, "randint": [1052, 1053], "static_randint": 1054, "random_norm": 1055, "random_uniform": [1056, 1057, 1058, 1059], "static_random_uniform": 1060, "seed": 1061, "shuffl": 1062, "argmax": 1064, "argmin": 1065, "nonzero": 1066, "where": 1067, "depend": [1068, 1069, 1073, 1074, 1078, 1084, 1088], "output": [1068, 1069, 1073, 1074, 1078, 1084, 1088], "unique_al": [1069, 1071, 1072, 1073], "static_unique_al": 1070, "unique_count": [1074, 1076, 1077, 1078], "static_unique_count": 1075, "unique_invers": [1079, 1081, 1082, 1083], "static_unique_invers": 1080, "unique_valu": [1084, 1086, 1087, 1088], "static_unique_valu": 1085, "argsort": [1090, 1091, 1092, 1093], "static_argsort": 1094, "static_sort": 1099, "einsum": [1101, 1102, 1103, 1104], "max": [1105, 1106, 1107, 1108], "mean": [1109, 1110, 1111, 1112], "min": [1113, 1114, 1115, 1116], "prod": [1117, 1118, 1119, 1120], "std": [1121, 1122, 1123, 1124], "sum": [1125, 1126, 1127, 1128], "var": [1129, 1130, 1131, 1132], "all": [1134, 1135, 1136, 1137], "static_al": 1138, "ani": [1139, 1140, 1141, 1142], "static_ani": 1143, "content": 1144, "overview": 1144, "quick": 1144, "start": 1144, "roadmap": [1144, 1150], "citat": 1144, "inspect": 1147, "add_array_spec": 1148, "fn_array_spec": 1149, "geglu": 1153, "to_ivy_modul": 1156, "firstlayersiren": 1159, "glorotuniform": 1160, "Ones": 1162, "siren": 1163, "conv1dtranspos": 1168, "conv2dtranspos": 1170, "conv3dtranspos": 1172, "depthwiseconv2d": 1173, "lstm": 1175, "multiheadattent": 1177, "layernorm": 1181, "adam": 1183, "lamb": 1184, "lar": 1185, "sgd": 1187, "sequenti": [1188, 1189], "verbos": 1191, "cprint": 1192}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})