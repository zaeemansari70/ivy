Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 96, 115, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 239, 242, 273, 279, 298, 303, 317, 381, 383, 393, 408, 411, 433, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 433], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 31, 35, 38, 39, 41, 43, 54, 55, 239, 280, 401, 402, 404, 405, 433, 440, 441, 442, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 476, 477], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "base": [0, 19, 27, 30, 32, 38, 54, 77, 87, 96, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 179, 201, 212, 213, 214, 215, 227, 239, 264, 287, 294, 303, 413, 414, 415, 417, 421, 422, 440, 441, 442, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "object": [0, 40, 43, 77, 83, 96, 112, 129, 174, 303, 381, 384, 386, 388, 389, 390, 395, 396, 397, 398, 401, 407, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 96, 97, 98, 99, 129, 130, 137, 138, 139, 140, 141, 142, 143, 144, 303, 304, 401, 402, 404, 405, 433, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 77, 78, 401, 405], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 102, 104, 107, 108, 109, 112, 115, 129, 138, 139, 147, 148, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 267, 269, 270, 274, 280, 282, 285, 286, 287, 288, 293, 294, 300, 303, 306, 308, 310, 311, 312, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 129, 138, 153, 157, 161, 173, 239, 286, 443, 444, 466, 467], "kwarg": [0, 4, 38, 40, 42, 129, 138, 153, 157, 161, 239, 279, 443, 444, 466, 467], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 128, 129, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 443, 444, 454, 463, 464, 470, 474], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 28, 34, 38, 43, 54, 55, 96, 113, 114, 116, 128, 129, 138, 162, 163, 167, 169, 239, 263, 270, 274, 281, 283, 381, 382, 391, 392, 433], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 74, 75, 77, 78, 96, 120, 129, 138, 139, 153, 157, 161, 179, 183, 184, 195, 203, 234, 236, 239, 241, 242, 246, 254, 261, 279, 286, 319, 322, 331, 361, 370, 381, 387, 399, 400, 421, 423, 428, 430, 431, 436, 438, 443, 444, 466, 467], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 76, 77, 88, 92, 93, 96, 113, 114, 129, 148, 172, 179, 228, 239, 244, 303, 306, 308, 310, 312, 332, 350, 351, 381, 387, 393, 421, 427, 429, 433, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 77, 78, 79, 81, 83, 84, 85, 88, 89, 91, 95, 96, 105, 120, 129, 138, 139, 148, 163, 167, 172, 173, 179, 205, 233, 239, 254, 261, 262, 297, 303, 306, 310, 319, 327, 330, 332, 336, 350, 354, 361, 366, 369, 372, 377, 378, 379, 380, 381, 383, 393, 394, 401, 402, 403, 404, 405, 408, 412, 413, 414, 416, 421, 426, 427, 428, 429, 430, 431, 432, 433, 439, 443, 444, 454, 462, 465, 470, 474], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 105, 106, 110, 112, 115, 116, 128, 129, 138, 139, 149, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 169, 171, 172, 173, 179, 228, 239, 241, 251, 252, 254, 261, 262, 263, 269, 273, 281, 282, 283, 285, 286, 301, 303, 306, 307, 308, 310, 311, 312, 314, 316, 317, 319, 330, 332, 334, 336, 341, 349, 350, 354, 355, 357, 359, 360, 361, 363, 366, 368, 370, 371, 373, 381, 386, 387, 388, 389, 394, 395, 396, 397, 398, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 239, 300, 433], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 74, 75, 77, 78, 79, 81, 84, 85, 89, 91, 95, 179, 205, 239, 266, 291, 361, 369], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 96, 102, 129, 179, 183, 202, 227, 239, 246, 273, 294, 357, 358, 359, 360, 381, 392, 408, 409, 410, 412, 421, 423, 425, 427, 429, 433, 466, 467], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 96, 107, 108, 109, 129, 138, 139, 171, 172, 173, 239, 264, 265, 284, 287, 288, 289, 293, 294, 399, 400, 468, 469], "set": [0, 4, 5, 6, 12, 14, 17, 19, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 129, 148, 158, 159, 170, 171, 172, 173, 179, 187, 239, 240, 287, 288, 289, 290, 303, 306, 308, 309, 310, 311, 312, 332, 334, 341, 343, 346, 349, 381, 382, 391, 392, 393, 397, 398, 401, 406, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 427, 429, 454, 463, 470, 471, 472, 473, 474, 475], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 129, 138, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 443, 444, 470, 474], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 85, 88, 90, 91, 94, 95, 96, 102, 113, 114, 129, 148, 149, 151, 163, 164, 165, 166, 167, 170, 172, 174, 176, 177, 179, 183, 184, 188, 189, 190, 193, 194, 195, 196, 197, 201, 203, 205, 206, 210, 221, 222, 224, 229, 234, 236, 239, 240, 243, 244, 250, 251, 258, 261, 262, 265, 276, 291, 297, 298, 299, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 343, 345, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 427, 428, 430, 431, 433], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 104, 120, 129, 148, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 201, 202, 203, 212, 213, 215, 216, 218, 219, 223, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 273, 303, 306, 308, 310, 311, 312, 332, 333, 334, 341, 343, 346, 347, 349, 350, 354, 355, 357, 358, 359, 360, 361, 365, 366, 370, 371, 372, 373, 377, 378, 379, 381, 393, 394, 401, 404, 405, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 129, 170, 433, 439], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 239, 298, 421, 422, 433], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 433], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 66, 67, 68, 69, 70, 71, 72, 73, 77, 79, 81, 83, 85, 88, 89, 91, 92, 93, 94, 95, 96, 102, 104, 110, 129, 148, 149, 150, 151, 154, 155, 163, 167, 172, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 221, 222, 224, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 243, 244, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 269, 271, 272, 273, 275, 276, 277, 278, 282, 291, 295, 297, 298, 299, 301, 302, 303, 307, 309, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 387, 391, 392, 393, 399, 400, 401, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 465], "arrai": [0, 4, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 110, 112, 115, 117, 118, 120, 124, 129, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 169, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 281, 282, 283, 285, 286, 291, 295, 297, 298, 299, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 393, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 454, 462, 465], "2": [0, 4, 18, 19, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 66, 68, 69, 70, 71, 73, 76, 77, 84, 85, 88, 90, 91, 95, 96, 102, 129, 148, 149, 151, 163, 165, 167, 174, 179, 183, 184, 186, 187, 189, 190, 193, 194, 195, 196, 197, 201, 203, 205, 206, 210, 215, 221, 222, 224, 229, 234, 236, 239, 240, 243, 244, 247, 248, 251, 258, 261, 262, 276, 291, 297, 319, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 345, 346, 347, 350, 352, 353, 355, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 374, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 430, 431, 433], "0": [0, 4, 19, 23, 24, 25, 38, 40, 41, 42, 43, 66, 68, 69, 70, 71, 72, 73, 77, 78, 82, 86, 87, 91, 92, 93, 94, 95, 96, 102, 112, 129, 131, 134, 138, 141, 145, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 170, 172, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 201, 202, 203, 206, 212, 213, 215, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 243, 244, 247, 248, 250, 251, 252, 258, 261, 262, 267, 276, 282, 285, 286, 291, 297, 298, 299, 303, 305, 306, 310, 311, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 350, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 381, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 66, 68, 69, 70, 71, 72, 73, 77, 84, 85, 88, 90, 91, 94, 95, 96, 102, 113, 114, 129, 149, 163, 164, 165, 166, 167, 169, 172, 176, 179, 183, 184, 188, 189, 190, 193, 194, 195, 196, 197, 201, 203, 205, 206, 210, 221, 222, 224, 229, 234, 236, 239, 240, 243, 244, 250, 251, 258, 261, 262, 265, 283, 291, 297, 298, 299, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 345, 350, 352, 353, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 372, 374, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 427, 428, 430, 431, 433], "function": [0, 4, 5, 6, 14, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 440, 441, 442, 470, 473, 475], "py": [0, 4, 5, 19, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 401, 402, 404, 405], "noqa": [0, 4, 5, 77, 88, 179, 183, 189, 194, 195, 197, 229, 234, 236, 332, 335, 361, 365, 366, 370, 421, 423], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 66, 67, 68, 71, 73, 74, 75, 77, 78, 83, 87, 88, 92, 93, 96, 100, 101, 102, 106, 111, 113, 114, 116, 119, 124, 128, 129, 138, 139, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 225, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 241, 243, 246, 247, 253, 254, 260, 262, 271, 272, 273, 275, 276, 277, 278, 280, 285, 286, 287, 288, 289, 292, 293, 294, 302, 303, 305, 306, 308, 310, 311, 312, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 96, 113, 114, 129, 170, 239, 291, 433], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 77, 88, 129, 148, 179, 180, 223, 227, 332, 340, 348, 349, 350, 353, 361, 365, 372, 413, 414, 415, 417, 421, 424, 426, 427, 428, 429], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 332, 341, 352, 354, 355, 399, 400, 401, 405, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 468, 469], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 74, 75, 77, 79, 89, 129, 174, 179, 183, 184, 195, 199, 203, 206, 211, 234, 236, 239, 240, 254, 255, 256, 257, 258, 261, 268, 275, 276, 277, 278, 293, 294, 303, 307, 319, 322, 331, 361, 370, 377, 378, 379, 380, 381, 387, 391, 399, 400, 401, 405, 421, 423, 430, 431, 433], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 96, 106, 129, 138, 173, 179, 187, 239, 246, 273, 303, 317, 377, 378, 379, 443, 444, 466, 467, 470, 474, 476, 477], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 303, 309, 413, 414, 415, 417, 433], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 77, 78, 80, 84, 86, 87, 90, 92, 93, 94, 96, 102, 104, 129, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 167, 169, 172, 173, 174, 179, 228, 239, 241, 251, 261, 262, 268, 301, 332, 336, 341, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 370, 372, 373, 376, 381, 386, 388, 389, 395, 396, 397, 398, 408, 409, 410, 413, 414, 415, 417, 418, 419, 421, 422, 426, 428, 430, 431, 432], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 239, 244, 319, 328, 329], "associ": [0, 5, 19, 28, 30, 55, 179, 183, 223, 332, 343, 346, 356], "option": [0, 5, 18, 19, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 66, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 106, 107, 108, 109, 116, 128, 129, 148, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 248, 251, 252, 253, 259, 261, 280, 282, 285, 286, 293, 294, 303, 314, 319, 322, 325, 326, 331, 332, 341, 343, 346, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 387, 392, 393, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "str": [0, 5, 33, 34, 77, 88, 96, 100, 106, 107, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 128, 129, 145, 148, 149, 151, 154, 155, 156, 157, 173, 239, 241, 253, 255, 256, 257, 280, 285, 286, 319, 320, 322, 324, 325, 326, 332, 347, 377, 378, 379, 380, 381, 387, 421, 422], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 303, 307, 433, 439], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 19, 239, 241], "i": [0, 5, 19, 21, 22, 38, 41, 43, 77, 78, 88, 179, 180, 187, 191, 193, 195, 203, 204, 207, 221, 222, 224, 227, 228, 239, 243, 244, 303, 306, 308, 310, 311, 312, 332, 334, 340, 343, 346, 349, 350, 353, 355, 361, 373, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 76, 77, 88, 96, 101, 120, 129, 145, 179, 180, 187, 191, 193, 195, 201, 203, 204, 207, 212, 214, 221, 222, 224, 227, 228, 303, 306, 308, 310, 311, 312, 332, 334, 340, 343, 346, 349, 350, 355, 361, 373, 401, 404, 405, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 77, 78, 88, 96, 103, 105, 129, 158, 159, 160, 161, 173, 239, 240, 279, 282, 285, 286, 332, 340, 341, 345, 347, 354, 355, 361, 365, 366, 370, 372, 408, 409, 411, 413, 414, 415, 416, 417, 421, 422, 433], "default": [0, 5, 19, 24, 25, 28, 29, 32, 33, 34, 36, 42, 66, 67, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 107, 108, 109, 110, 129, 138, 139, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 247, 248, 251, 252, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 278, 279, 280, 282, 284, 285, 286, 289, 291, 293, 294, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341, 343, 346, 347, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "torch": [0, 5, 12, 19, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 74, 75, 96, 113, 114, 129, 170, 239, 291, 361, 365, 433], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 33, 34, 35, 36, 38, 43, 55, 433], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 433], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 77, 83, 179, 183, 187, 208, 212, 213, 215, 216, 223, 228, 230, 231, 236, 239, 254, 275, 279, 280, 332, 340, 377, 378, 379, 380, 421, 426, 428, 454, 465, 466, 467], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 129, 148, 239, 255, 256, 257, 401, 402], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 66, 68, 69, 70, 71, 72, 73, 76, 96, 111, 129, 138, 139, 164, 168, 171, 172, 173, 174, 176, 178, 179, 184, 189, 194, 197, 203, 206, 221, 222, 224, 229, 239, 261, 264, 265, 279, 285, 286, 287, 288, 293, 294, 303, 305, 306, 310, 311, 319, 325, 327, 328, 330, 331, 332, 335, 336, 341, 357, 358, 361, 365, 366, 368, 370, 374, 377, 378, 379, 380, 381, 382, 384, 390, 391, 392, 394, 399, 400, 408, 409, 410, 411, 413, 414, 415, 421, 422, 430, 431, 433, 454, 462, 465, 466, 467, 468, 469, 470, 472, 473], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 129, 173, 239, 284, 289, 300, 303, 307, 381, 382, 387, 391, 392, 454, 465, 466, 467, 470, 474], "nativ": [0, 6, 33, 35, 40, 41, 77, 89, 96, 100, 101, 106, 129, 145, 146, 147, 148, 149, 168, 175, 178, 239, 273, 275, 278, 443, 444], "native_arrai": [0, 6, 12, 66, 68, 69, 70, 71, 72, 73, 77, 88, 129, 151, 167, 179, 184, 189, 194, 195, 203, 206, 221, 222, 224, 234, 239, 240, 244, 250, 251, 258, 261, 262, 297, 298, 299, 319, 322, 325, 326, 331, 332, 334, 335, 336, 352, 357, 358, 360, 361, 362, 365, 366, 368, 371, 374, 399, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 421, 422, 423, 430, 431], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 66, 68, 69, 70, 71, 73, 77, 78, 85, 86, 87, 88, 90, 91, 95, 96, 102, 112, 129, 133, 136, 138, 143, 148, 149, 151, 153, 157, 161, 163, 166, 167, 174, 179, 181, 182, 183, 184, 187, 189, 190, 193, 194, 195, 196, 197, 201, 202, 203, 205, 206, 210, 212, 213, 214, 215, 221, 222, 224, 227, 229, 230, 231, 234, 236, 239, 240, 243, 244, 250, 251, 258, 261, 262, 276, 282, 285, 286, 291, 294, 297, 298, 299, 301, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 339, 343, 345, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 393, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 128, 129, 145, 146, 147, 148, 149, 151, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 271, 272, 273, 275, 276, 277, 278, 282, 285, 286, 287, 288, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 314, 316, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 77, 79, 89, 239, 298], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 96, 102, 105, 110, 129, 148, 149, 160, 164, 165, 168, 173, 176, 178, 179, 189, 205, 206, 207, 208, 209, 210, 218, 219, 239, 240, 243, 244, 251, 254, 258, 260, 266, 273, 275, 276, 278, 279, 291, 301, 303, 306, 307, 308, 309, 310, 311, 312, 332, 333, 341, 350, 355, 361, 371, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 401, 402, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 443, 444, 466, 467, 470, 471, 472, 473, 474, 475], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 421, 427, 429], "dict": [0, 12, 32, 41, 42, 129, 138, 139, 148, 151, 154, 155, 156, 157, 239, 241, 255, 256, 257, 381, 383, 384, 387, 390, 393, 394], "previous": [0, 12, 18, 21, 27, 28, 38, 239, 246], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 77, 78, 96, 102, 105, 107, 108, 109, 129, 148, 179, 207, 208, 209, 239, 245, 300, 303, 309, 314, 332, 333, 335, 354, 355, 377, 378, 379, 381, 394, 408, 409, 410, 412, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "implement": [0, 12, 19, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 96, 102, 120, 129, 174, 179, 180, 181, 182, 184, 185, 186, 187, 196, 197, 201, 202, 212, 213, 214, 215, 223, 227, 228, 231, 232, 236, 332, 337, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 433], "wa": [0, 12, 15, 25, 38, 40, 239, 300, 381, 394, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "last": [0, 12, 16, 19, 25, 29, 55, 66, 71, 129, 148, 319, 329, 332, 334, 336, 341, 353, 354, 357, 359, 360, 361, 366, 370, 371, 373, 418, 419, 420, 430, 431, 432, 454, 464], "henc": [0, 12, 413, 414, 415, 417], "here": [0, 12, 18, 19, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 77, 86, 87, 96, 110, 179, 189, 221, 222, 239, 282, 285, 286, 319, 327, 329, 332, 352, 361, 365, 369, 371, 401, 402, 408, 411, 433, 454, 462, 464], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 129, 173, 179, 238, 319, 330, 331, 377, 378, 379, 381, 393, 413, 414, 415, 417, 421, 426, 428], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 361, 362], "swap": [0, 12, 361, 374], "python": [0, 12, 13, 14, 15, 18, 19, 21, 38, 40, 41, 55, 77, 78, 129, 168, 178, 179, 228, 433, 439], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 97, 98, 99, 130, 137, 140, 304, 433, 446, 449, 452], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480], "backend": [4, 5, 6, 12, 14, 19, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 96, 113, 114, 116, 128, 129, 164, 166, 176, 239, 270, 273, 274, 280, 303, 306, 308, 310, 311, 312, 317, 433, 439, 443, 444, 470, 471, 472, 473, 474, 475], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 433, 439], "explos": [13, 15, 433], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 77, 82, 89, 129, 138, 139, 173, 179, 226, 237, 239, 265, 297, 332, 345, 348, 349, 350, 361, 371, 373, 381, 382, 384, 386, 388, 389, 390, 391, 392, 395, 396, 397, 398, 421, 422, 430, 431, 432, 433, 476, 477], "huge": [13, 15, 41, 433], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 74, 75, 76, 77, 78, 79, 82, 86, 87, 88, 89, 96, 103, 111, 112, 115, 117, 118, 120, 129, 165, 166, 167, 179, 183, 187, 195, 203, 204, 221, 222, 223, 227, 228, 229, 230, 238, 239, 240, 260, 265, 266, 281, 299, 302, 319, 330, 332, 337, 343, 348, 350, 354, 361, 362, 364, 367, 368, 370, 371, 373, 375, 376, 377, 378, 379, 380, 401, 402, 406, 408, 411, 413, 414, 415, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465], "tool": [13, 16, 19, 39, 43, 54, 55, 433], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 66, 69, 77, 78, 80, 81, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 112, 129, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 248, 255, 256, 257, 259, 303, 309, 317, 319, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 374, 401, 403, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "explod": [13, 14, 433], "onto": [13, 14, 129, 158, 159, 381, 387, 393, 433], "scene": [13, 14, 22, 37, 39, 303, 306, 308, 310, 311, 312, 433], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 129, 151, 179, 183, 184, 189, 194, 195, 197, 203, 206, 224, 229, 234, 236, 239, 240, 243, 244, 250, 251, 258, 261, 262, 299, 319, 322, 325, 326, 331, 332, 333, 334, 335, 345, 349, 352, 356, 357, 358, 361, 362, 365, 366, 368, 370, 373, 374, 399, 400, 401, 404, 405, 408, 410, 411, 412, 418, 419, 421, 422, 423, 430, 431, 433, 439], "why": [13, 15, 19, 32, 35, 36, 40, 433], "unifi": [13, 15, 31, 38, 55, 129, 158, 159, 160, 161, 173, 433], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 74, 75, 77, 88, 92, 93, 96, 104, 129, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 223, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 246, 273, 282, 303, 306, 308, 310, 311, 312, 319, 331, 332, 333, 334, 335, 336, 339, 340, 343, 345, 346, 347, 349, 350, 352, 353, 354, 355, 361, 369, 401, 407, 408, 409, 410, 413, 414, 415, 417, 421, 422, 423, 424, 426, 427, 428, 429, 433], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 433], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 239, 243, 244, 250, 299, 303, 305, 306, 308, 310, 311, 312, 319, 325, 361, 373, 408, 411, 421, 422, 427, 429, 433, 439], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 77, 88, 96, 112, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 332, 335, 361, 365, 366, 370, 399, 400, 401, 404, 413, 414, 415, 418, 419, 421, 423, 427, 429, 430, 431, 433, 439, 468, 469], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 129, 173, 239, 255, 332, 352, 361, 370, 408, 412, 433], "collabor": [13, 14, 15, 433], "consortium": [13, 15, 433, 439], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 128, 129, 131, 132, 133, 134, 135, 136, 141, 142, 143, 145, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 275, 276, 278, 295, 303, 309, 317, 319, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 361, 365, 366, 367, 369, 370, 372, 373, 401, 407, 408, 409, 410, 411, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "api": [13, 14, 18, 19, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 332, 335, 361, 365, 366, 370, 413, 414, 415, 418, 419, 421, 423, 430, 431, 433, 439], "open": [14, 15, 16, 17, 18, 21, 24, 54, 77, 78, 401, 403, 405, 433], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 401, 402, 404, 405], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18, 19], "year": [14, 16, 55, 433], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 433], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 179, 205, 303, 306, 308, 310, 311, 312, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 77, 79, 89, 96, 105, 129, 171, 172, 173, 332, 339, 361, 369, 401, 403, 433, 439], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 129, 153, 157, 161, 361, 364, 376, 381, 393], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 433, 439], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 66, 69, 70, 72, 77, 78, 81, 83, 90, 92, 93, 94, 129, 150, 151, 154, 163, 167, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 250, 251, 258, 261, 262, 268, 277, 297, 298, 299, 319, 322, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 371, 374, 377, 378, 379, 380, 381, 394, 399, 400, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 474, 476, 477], "term": [14, 19, 32, 319, 329, 454, 464], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 303, 306, 310, 319, 329, 361, 375, 377, 378, 379, 380, 408, 409, 410, 413, 414, 415, 454, 465, 466, 467], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 332, 337, 433, 439], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 77, 78, 129, 138, 139, 163, 167, 169, 173, 179, 196, 218, 219, 229, 231, 236, 239, 240, 243, 244, 245, 263, 269, 270, 274, 281, 283, 295, 319, 328, 332, 334, 340, 341, 343, 346, 350, 351, 354, 361, 362, 366, 370, 381, 383, 387, 393, 401, 404, 405, 408, 409, 410, 411, 413, 414, 433, 476, 477], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 361, 371], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 96, 112, 129, 150, 151, 154, 155, 179, 183, 223, 235, 319, 328, 361, 373, 421, 426, 428, 433], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 179, 218, 219, 413, 414, 421, 424], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 77, 78, 79, 88, 89, 129, 153, 157, 161, 168, 173, 178, 179, 180, 183, 184, 189, 193, 194, 195, 197, 202, 203, 218, 219, 228, 229, 234, 236, 239, 260, 261, 273, 284, 289, 303, 306, 308, 309, 310, 311, 312, 317, 319, 322, 328, 331, 332, 335, 341, 348, 361, 365, 366, 369, 370, 373, 381, 387, 393, 394, 399, 400, 408, 409, 413, 414, 415, 417, 418, 419, 421, 423, 424, 427, 429, 430, 431, 433, 439, 466, 467, 470, 471, 472, 473, 474, 475], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 433], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 239, 261, 273, 303, 306, 319, 322, 328, 331, 332, 335, 361, 365, 366, 370, 377, 378, 379, 380, 381, 382, 383, 391, 392, 393, 399, 400, 413, 414, 415, 418, 419, 421, 423, 430, 431, 454, 464], "consid": [14, 15, 23, 28, 39, 40, 41, 179, 218, 219, 413, 414, 415, 417], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 66, 68, 69, 70, 71, 72, 73, 129, 151, 174, 179, 194, 234, 319, 325, 326, 413, 414, 415, 418, 419, 421, 422, 433, 439], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 129, 174, 179, 202, 218, 219, 332, 337, 413, 414, 415, 417, 421, 423, 424, 425, 433], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 418, 419, 420], "against": [14, 27, 55, 96, 103, 332, 340, 341, 343, 346, 408, 409], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 332, 337, 433], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 77, 78, 88, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 201, 202, 203, 212, 213, 215, 216, 223, 227, 228, 229, 231, 232, 233, 236, 238, 303, 309, 317, 332, 350, 353, 361, 362, 373, 413, 414, 415, 417, 421, 423, 425, 428, 443, 444], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 77, 84, 85, 88, 179, 187, 201, 214, 223, 227, 239, 269, 273, 282, 332, 337, 343, 346, 347, 350, 351, 353, 354, 361, 362, 364, 365, 367, 373, 376, 381, 382, 392, 401, 402, 408, 411, 421, 427, 429, 430, 431, 432, 433], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 413, 414, 415, 417], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 77, 80, 83, 84, 85, 90, 91, 94, 95, 96, 124, 179, 188, 214, 226, 237, 239, 255, 256, 257, 260, 261, 262, 285, 286, 287, 288, 293, 294, 303, 306, 308, 310, 311, 312, 361, 365, 369, 373, 381, 386, 397, 398, 399, 400, 433, 443, 444, 454, 464, 468, 469, 470, 471, 472, 473, 474, 475], "futur": [14, 16, 18, 19, 40, 55, 332, 337], "avail": [14, 18, 19, 24, 34, 55, 129, 148, 164, 165, 166, 176, 239, 256], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 96, 120, 129, 171, 174, 179, 218, 219, 239, 255, 256, 257, 280, 332, 337, 352, 361, 373, 377, 378, 379, 380, 401, 402, 421, 423, 424, 425, 433, 436, 438, 439, 466, 467], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 22, 27, 29, 32, 35, 37, 55, 454, 465, 466, 467], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 433], "desir": [14, 96, 102, 105, 129, 174, 239, 269, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 74, 75, 77, 88, 96, 107, 108, 109, 116, 120, 128, 129, 148, 239, 254, 282, 286, 303, 306, 308, 310, 311, 312, 332, 354, 361, 366, 373, 408, 409, 421, 427, 429, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 470, 471, 472, 473, 474, 475], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 74, 75, 77, 78, 92, 93, 129, 138, 163, 169, 239, 240, 243, 244, 263, 283, 298, 319, 329, 332, 349, 352, 355, 361, 366, 370, 377, 378, 379, 380, 381, 382, 383, 392, 393, 394, 401, 402, 405, 430, 433, 436, 438], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 239, 258], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 381, 393], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 66, 69, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 129, 158, 159, 160, 161, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 248, 259, 286, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 374, 401, 403, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 470, 474], "determin": [14, 24, 28, 32, 33, 34, 96, 105, 106, 111, 116, 117, 118, 128, 129, 164, 165, 166, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 201, 202, 207, 208, 209, 212, 213, 215, 216, 220, 223, 227, 228, 231, 232, 233, 236, 239, 240, 243, 244, 268, 270, 274, 275, 276, 277, 278, 295, 302, 303, 309, 319, 330, 332, 333, 334, 335, 336, 339, 340, 343, 345, 346, 348, 349, 353, 354, 355, 377, 378, 379, 380, 413, 414, 415, 417, 430, 431, 432], "exactli": [14, 16, 25, 32, 34, 433, 439], "common": [14, 19, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 77, 78, 96, 112, 179, 187, 227, 357, 358, 359, 360, 361, 365, 373, 381, 387, 401, 403, 413, 414, 415, 417, 433, 470, 472], "find": [14, 18, 19, 38, 41, 413, 414, 415, 417, 433], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 239, 254, 470, 474], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 179, 187, 303, 306, 308, 310, 311, 312, 332, 337, 341, 350, 351, 355, 361, 366, 377, 378, 379, 408, 411, 413, 414, 415, 417, 418, 419, 420, 476, 477], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 129, 144, 470, 474], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 129, 168, 174, 175, 178, 179, 183, 223, 228, 239, 241, 273, 361, 369, 401, 405, 433], "search": [14, 18, 23, 25, 27, 409, 410, 411, 412], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 74, 75, 77, 86, 87, 96, 119, 124, 129, 148, 160, 179, 183, 189, 191, 192, 193, 194, 199, 204, 206, 210, 211, 216, 217, 219, 220, 223, 225, 227, 235, 239, 243, 303, 307, 332, 334, 336, 337, 340, 345, 347, 350, 352, 354, 361, 363, 370, 373, 374, 377, 378, 379, 380, 381, 382, 391, 392, 401, 407, 408, 409, 410, 413, 414, 415, 454, 465, 466, 467, 470, 474], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 77, 78, 83, 86, 87, 96, 104, 120, 179, 183, 189, 191, 192, 193, 194, 198, 202, 210, 216, 219, 220, 223, 225, 227, 228, 235, 332, 343, 346, 349, 354, 355, 408, 410, 413, 414, 415, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 129, 147], "front": [14, 37, 38, 41, 433, 439], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 433], "littl": [14, 40], "deeper": [14, 19, 22, 37, 129, 153, 157, 161, 381, 392, 393], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 96, 115, 129, 173, 179, 228, 239, 271, 272, 273, 293, 294, 303, 306, 308, 310, 311, 312, 319, 330, 331, 332, 347, 355, 381, 387, 393, 413, 414, 415, 417, 433, 454, 464, 470, 474], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 77, 78, 81, 85, 88, 91, 92, 93, 95, 96, 102, 103, 104, 129, 138, 139, 173, 179, 180, 183, 190, 195, 203, 223, 228, 229, 230, 238, 239, 259, 261, 262, 282, 285, 286, 303, 309, 314, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 344, 346, 347, 349, 350, 353, 354, 361, 363, 366, 367, 370, 372, 373, 377, 378, 379, 381, 394, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 433, 454, 455, 456, 457, 458, 459, 460, 461], "core": [14, 18, 20, 34, 38, 43, 129, 165, 433], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 77, 86, 87, 96, 120, 179, 183, 193, 194, 206, 224, 228, 234, 239, 245, 255, 256, 257, 295, 303, 306, 308, 310, 311, 312, 319, 320, 321, 322, 323, 324, 325, 326, 328], "expos": [14, 38, 42, 239, 249], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 129, 163, 381, 394, 433], "uniqu": [14, 28, 32, 55, 129, 138, 139, 377, 378, 379, 380, 381, 387, 413, 414, 415, 416, 417], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 129, 169, 179, 218, 219, 332, 340, 347, 361, 366, 381, 382, 383, 391, 392, 408, 409, 410, 421, 424, 433, 470, 471, 472, 473, 474, 475], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 381, 382, 392, 433], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 129, 161, 332, 337, 421, 422, 466, 467], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 66, 69, 70, 72, 77, 88, 96, 103, 129, 138, 139, 150, 151, 152, 153, 154, 155, 156, 160, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 303, 306, 308, 310, 311, 312, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 340, 343, 344, 346, 349, 350, 361, 364, 368, 370, 371, 373, 375, 376, 381, 387, 394, 401, 402, 408, 411, 413, 414, 415, 421, 422, 433, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 433], "similar": [14, 23, 32, 33, 34, 41, 55, 179, 228, 319, 330, 454, 465], "convent": [14, 54, 332, 340, 421, 422], "those": [14, 18, 19, 20, 32, 38, 43, 77, 78, 303, 317, 332, 347, 350, 361, 362], "introduc": [14, 32, 41, 361, 370, 413, 414], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 399, 400, 433, 445, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 179, 183, 184, 195, 203, 234, 236, 239, 261, 319, 322, 331, 361, 370, 399, 400, 421, 423, 430, 431], "present": [14, 19, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 239, 241, 381, 393], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 179, 228], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 179, 183, 195, 203, 204, 223, 233, 238, 433], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 433, 439, 454, 465, 466, 467], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 433], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 96, 106, 113, 114, 116, 128, 129, 168, 178, 239, 245, 258, 268, 275, 276, 277, 278, 295, 302, 303, 309, 332, 337, 381, 382, 391, 392, 393, 433], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 66, 68, 69, 70, 71, 72, 73, 77, 78, 80, 81, 82, 84, 85, 90, 91, 92, 93, 94, 95, 96, 102, 104, 129, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 248, 250, 251, 252, 255, 256, 257, 259, 261, 262, 269, 282, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 462], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 433], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 129, 153, 157, 161, 381, 393], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 433], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 433, 439], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 433], "With": [15, 16, 18, 25, 27, 38, 66, 68, 69, 70, 71, 72, 73, 77, 88, 129, 151, 167, 179, 183, 184, 189, 194, 195, 197, 203, 206, 221, 222, 224, 229, 234, 236, 239, 240, 244, 250, 251, 258, 261, 262, 297, 298, 299, 319, 322, 325, 326, 331, 332, 333, 334, 335, 336, 341, 352, 357, 358, 360, 361, 362, 365, 366, 368, 370, 371, 374, 399, 400, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 430, 431], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 77, 78, 239, 284, 289, 413, 416, 433], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 66, 71, 129, 174, 433], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 129, 173, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 463], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 96, 104, 179, 201, 227, 239, 245, 264, 273, 287, 294, 300, 332, 340, 342, 354, 361, 372, 373, 408, 411, 421, 423, 425, 430, 431, 432, 466, 467, 470, 474], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 66, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 112, 117, 118, 120, 129, 151, 155, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 246, 247, 248, 250, 259, 260, 261, 269, 273, 275, 276, 277, 278, 298, 299, 300, 303, 309, 314, 316, 317, 319, 322, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 381, 387, 399, 400, 401, 403, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 443, 444, 466, 467, 470, 471, 472, 474], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 303, 306, 308, 310, 311, 312, 433, 470, 471, 472, 473, 474, 475], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 74, 75, 77, 78, 179, 202, 239, 240, 241, 303, 307, 401, 405, 413, 416, 421, 427, 429, 433], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 433, 439, 466, 467, 470, 474], "momentum": 15, "won": [15, 16, 19, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 239, 293, 294, 332, 337, 361, 365, 476, 477], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 421, 422, 454, 463], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 129], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 179, 227, 229], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 77, 78, 129, 173, 239, 275, 276, 278, 303, 309], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 77, 78, 86, 87, 239, 260], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 77, 88, 129, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 195, 196, 197, 201, 202, 203, 212, 213, 215, 216, 223, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 273, 285, 286, 332, 341, 361, 369, 381, 384, 390, 421, 423, 424, 425, 427, 428, 429, 454, 465, 466, 467, 470, 474], "unlik": [15, 25, 32, 129], "charger": 15, "charact": 15, "encod": [15, 41, 239, 260], "instant": [15, 433], "messag": [15, 19, 38, 40, 479, 480], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 179, 194, 239, 273, 361, 371], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 179, 184, 194, 195, 197, 203, 234, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423], "replac": [15, 19, 21, 25, 27, 30, 32, 33, 34, 38, 40, 43, 55, 239, 285, 286, 361, 362, 401, 402], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 433], "10": [15, 18, 21, 25, 32, 38, 40, 41, 77, 84, 87, 129, 179, 189, 190, 197, 206, 213, 239, 251, 261, 262, 284, 289, 303, 310, 319, 325, 332, 335, 336, 345, 352, 361, 366, 368, 371, 399, 400, 401, 402, 403, 408, 411, 413, 414, 421, 422, 423, 470, 472], "100": [15, 16, 41, 42, 43, 55, 433], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 413, 414, 415, 417, 433], "still": [15, 24, 27, 33, 40, 42, 55, 433], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 96, 124], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 19, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 433], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 332, 337], "technolog": 15, "sector": [15, 179, 182, 185, 188], "full": [15, 16, 19, 24, 33, 36, 38, 55, 77, 96, 112, 179, 206, 319, 325, 332, 347, 349, 350, 399, 400], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 179, 228], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 413, 414, 415, 417, 433, 454, 465, 466, 467], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 129, 173, 179, 183, 189, 192, 194, 199, 200, 205, 206, 210, 211, 217, 218, 219, 220, 223, 224, 225, 239, 247, 248, 251, 252, 303, 305, 306, 307, 308, 310, 311, 312, 314, 316, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 333, 334, 337, 338, 339, 340, 341, 347, 348, 349, 350, 354, 355, 357, 358, 359, 360, 381, 387, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 129, 319, 329, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 474], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 77, 79, 89, 92, 93, 239, 241, 303, 306, 308, 310, 311, 312, 319, 332, 333, 335, 336, 337, 338, 339, 343, 344, 346, 347, 349, 350, 351, 353, 381, 383, 393], "factor": [15, 129, 138, 171, 172, 173, 303, 305, 306, 310, 311, 319, 320, 321, 322, 323, 324, 325, 326, 332, 333, 454, 455, 456, 457, 458, 459, 460, 461, 470, 471, 472, 473], "sata": 15, "connect": [15, 18, 42, 43, 454, 464, 465], "host": [15, 55], "bu": 15, "adapt": [15, 303, 311, 470, 473], "devic": [15, 19, 22, 23, 28, 30, 33, 40, 41, 55, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 239, 261, 262, 282, 285, 286, 401, 402, 403, 404, 405, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "html": [15, 21, 24, 179, 184, 194, 195, 197, 203, 234, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 381, 382, 391, 392], "commun": [15, 17, 19, 20, 55, 433, 439], "network": [15, 28, 32, 38, 42, 54, 319, 328, 433, 440, 454, 466, 467], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 239, 279, 297, 421, 423, 425], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 76, 96, 112, 179, 183, 202, 223, 228, 233], "754": [15, 76, 96, 112, 179, 183, 202, 223, 228, 233], "allow": [15, 38, 55, 77, 86, 87, 239, 279, 466, 467], "calcul": [15, 24, 179, 180, 181, 182, 183, 184, 185, 186, 187, 196, 197, 198, 201, 202, 212, 213, 214, 215, 216, 223, 227, 231, 232, 233, 235, 236, 357, 358, 359, 360, 421, 423, 424, 425, 426, 427, 428, 429], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 96, 102, 179, 180, 181, 182, 184, 185, 186, 187, 196, 197, 201, 202, 212, 213, 214, 215, 227, 231, 232, 236, 332, 337, 347, 349, 350, 408, 412, 418, 419, 420], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 433], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 129, 173], "relev": [15, 18, 20, 25, 32, 33, 41, 470, 471, 472, 473, 474, 475], "area": [15, 35, 53, 179, 182, 185, 188, 433], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 19, 25, 27, 32, 33, 35, 38, 40, 41, 42, 413, 414, 415, 417], "easili": [15, 19, 41, 42, 43, 55, 433], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 129], "effect": [15, 24, 31, 32, 36, 55, 77, 88, 303, 312, 421, 427, 429], "2015": 15, "sinc": [15, 18, 19, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 96, 112, 115, 179, 205, 332, 343, 346], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 77, 78, 80, 86, 87, 129, 162, 168, 170, 171, 172, 173, 175, 178, 239, 251, 252, 262, 285, 286, 301, 303, 305, 306, 308, 310, 311, 312, 319, 320, 321, 322, 323, 324, 325, 326, 332, 356, 357, 358, 359, 360, 361, 362, 365, 366, 368, 370, 371, 375, 381, 388, 389, 401, 403, 404, 405, 407, 418, 420, 443, 444], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 179, 181, 182, 184, 187, 195, 212, 213, 215, 227, 228, 230, 233, 332, 343, 346, 355, 401, 405, 421, 429], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 179, 223, 319, 329, 433, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 77, 78, 96, 112, 129, 173, 179, 181, 182, 184, 187, 191, 193, 195, 203, 204, 212, 213, 215, 221, 227, 228, 230, 233, 238, 239, 275, 276, 278, 303, 309, 332, 334, 340, 343, 346, 355, 361, 362, 366, 372, 401, 405, 413, 414, 415, 417, 421, 426, 427, 428, 429], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 332, 345, 421, 422], "80": [15, 332, 345, 421, 422], "90": [15, 179, 194, 229, 332, 345, 421, 422], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 433], "complet": [15, 19, 20, 31, 32, 40, 41, 332, 347], "natur": [15, 25, 31, 32, 54, 179, 201, 212, 214, 332, 348], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 303, 309, 401, 405, 433], "certainli": 15, "mission": [15, 433], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 94, 95, 129, 138, 139, 239, 261, 262, 282, 285, 286, 297, 303, 316, 401, 402, 403, 405, 433, 439, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 129, 138, 139, 168, 178], "ourselv": 15, "lead": [15, 16, 55, 332, 347, 350], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 413, 414, 415, 417], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 179, 187], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 77, 78, 79, 89, 239, 268, 302, 332, 355, 381, 382, 401, 405, 408, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 454, 464, 465, 468, 469], "member": [15, 19], "googl": [15, 433], "octoml": 15, "einop": [15, 239, 255, 256, 257], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 433], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 239, 244, 250, 319, 320, 321, 322, 323, 324, 325, 326, 332, 336, 345, 433, 439], "shaw": 15, "co": [15, 38, 54, 179, 239, 260, 433], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 476, 477], "major": [15, 33, 34, 55, 408, 411], "involv": [15, 17, 21, 22, 33, 43, 96, 120, 179, 183, 223, 433, 439], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 77, 83, 96, 103, 105], "promis": 15, "sign": [15, 18, 39, 43, 77, 78, 179, 180, 183, 187, 193, 223, 228, 332, 348, 413, 414, 415, 417, 421, 426, 428], "pursuit": 15, "unif": [15, 17, 40, 433, 439], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 319, 330, 331, 454, 465], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 96, 104, 179, 183, 187, 189, 191, 192, 193, 194, 198, 199, 204, 206, 210, 211, 216, 217, 219, 220, 223, 225, 227, 228, 235, 332, 343, 346, 349, 352, 354, 355, 361, 369, 408, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "excit": [15, 17, 22, 433], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 179, 223], "suit": [15, 18, 19, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 179, 202, 303, 305, 306, 308, 310, 311, 312, 317, 319, 327, 433, 454, 462], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 433, 439], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 76, 77, 78, 80, 82, 84, 90, 94, 96, 102, 112, 117, 120, 179, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 201, 202, 203, 212, 213, 215, 216, 223, 227, 228, 229, 231, 232, 233, 236, 238, 332, 333, 335, 337, 338, 339, 343, 346, 347, 349, 350, 355, 413, 414, 415, 417, 421, 423, 424, 425, 426, 427, 428, 429], "mai": [16, 18, 19, 32, 40, 42, 77, 78, 83, 129, 174, 179, 199, 206, 211, 218, 219, 239, 254, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425], "ask": [16, 38, 40, 55, 433], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 19, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 361, 369], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 77, 78, 82, 88, 92, 93, 96, 119, 124, 179, 193, 229, 239, 243, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 374, 413, 414, 415, 416, 417, 433], "streamlin": 16, "workflow": [16, 19, 41, 53, 433], "save": [16, 55, 239, 290, 466, 467], "week": [16, 19, 20, 433], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 421, 424, 427, 428, 429, 433], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 433], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 421, 427, 429], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 179, 205, 239, 270, 274], "g": [16, 22, 32, 55, 96, 101, 120, 129, 145, 401, 404, 405, 413, 414, 415, 417, 421, 423, 425, 426, 428], "inevit": 16, "deviat": [16, 399, 400, 401, 404, 421, 427, 468, 469], "origin": [16, 29, 30, 33, 38, 40, 179, 187, 332, 341, 361, 369, 370], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 303, 305, 306, 310, 433], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 66, 71, 77, 86, 87, 129, 239, 251, 255, 256, 257, 271, 272, 273, 303, 306, 308, 310, 311, 312, 319, 327, 329, 332, 350, 377, 378, 379, 380, 381, 388, 389, 430, 431, 432], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 77, 86, 87, 239, 261, 262, 282, 285, 286, 401, 402, 403, 405, 413, 414, 415, 417, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "publish": [16, 55], "manag": [16, 17, 35, 55, 129], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 96, 110, 111, 112, 115, 129, 138, 139, 148, 149, 162, 163, 168, 172, 175, 178, 239, 242, 263, 264, 265, 284, 433, 439, 454, 463], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 433, 439], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23, 129, 165], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 179, 228, 239, 273, 303, 309, 317, 381, 382, 391, 392, 393], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 239, 242, 433], "codebas": [16, 17, 22, 23, 35, 37, 129, 171, 172, 433], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 129, 175, 408, 411, 421, 427, 429], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 332, 336, 353], "test": [16, 18, 20, 22, 25, 55, 96, 117, 118, 179, 207, 208, 209, 430, 431, 432], "error": [16, 18, 27, 31, 34, 36, 40, 55, 66, 67, 129, 179, 200, 421, 423, 425, 466, 467, 470, 474], "iter": [16, 32, 38, 41, 74, 75, 129, 151, 152, 154, 155, 156, 157, 160, 173, 239, 240, 286, 291, 361, 364, 368, 371, 375, 376, 381, 382, 383, 387, 391, 392, 393], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 19, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 129, 138, 139, 158, 159, 160, 161, 239, 299, 302, 401, 404, 405, 413, 414], "multipl": [16, 19, 25, 28, 32, 55, 179, 223, 239, 240, 279, 332, 339, 361, 362, 370, 371, 399, 400, 408, 409, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 464], "line": [16, 18, 25, 31, 39, 40, 41, 42, 53, 433, 439], "convert": [16, 31, 38, 55, 56, 64, 77, 79, 89, 96, 100, 101, 129, 145, 146, 147, 148, 168, 175, 178, 239, 292, 298, 299, 332, 356, 381, 383, 393, 394, 444], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 381, 393], "graph": [16, 28, 32, 39, 55, 303, 306, 308, 310, 311, 312, 413, 414, 415, 417, 466, 467], "guarante": [16, 31, 55, 413, 414], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 66, 68, 69, 71, 77, 85, 88, 91, 95, 129, 151, 167, 179, 183, 184, 187, 189, 194, 195, 197, 203, 206, 221, 222, 224, 229, 234, 236, 239, 244, 251, 260, 261, 262, 297, 319, 322, 323, 324, 326, 329, 331, 332, 334, 335, 336, 339, 343, 345, 352, 353, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 374, 399, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 430, 431, 433, 470, 471, 472, 473, 475], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 77, 78, 86, 87, 129, 303, 305, 306, 308, 310, 311, 312, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 179, 194, 433, 439], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 433, 439], "second": [16, 18, 25, 35, 40, 96, 119, 124, 129, 160, 179, 183, 189, 191, 192, 193, 194, 199, 204, 206, 210, 211, 216, 217, 219, 220, 223, 225, 227, 235, 239, 243, 284, 289, 303, 305, 306, 310, 332, 334, 336, 337, 340, 345, 347, 350, 352, 354, 361, 373, 374, 377, 379, 413, 414, 415, 470, 471, 472], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 433], "convers": [16, 37, 39, 43, 54, 55, 433, 439], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 74, 75], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 66, 69, 129, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 248, 252, 259, 261, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 372, 373, 374, 399, 400, 401, 403, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 129, 173, 332, 339, 350, 401, 402], "know": [16, 413, 414, 415, 417], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 239, 255, 256, 257], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 129, 332, 334, 361, 369, 381, 383, 393, 433, 439], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 454, 465, 466, 467], "spend": 16, "torchvis": 16, "probabl": [16, 319, 327, 401, 402, 454, 462], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 96, 112, 115], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 96, 112, 433, 466, 467, 470, 471, 472, 473, 474, 475], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 31, 32, 33, 34, 36, 38, 41, 42, 66, 68, 69, 77, 80, 82, 88, 92, 93, 95, 96, 102, 179, 183, 184, 191, 197, 202, 203, 218, 219, 221, 222, 223, 224, 227, 228, 229, 234, 236, 239, 251, 282, 285, 286, 303, 305, 306, 310, 311, 319, 327, 332, 335, 340, 343, 346, 354, 355, 361, 365, 366, 368, 370, 376, 399, 400, 401, 403, 408, 409, 410, 411, 413, 414, 415, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 470, 471, 472, 473], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 239, 247, 248, 361, 362, 365], "said": 16, "high": [16, 20, 41, 401, 403, 405], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 129, 303, 306, 308, 310, 311, 312, 377, 378, 379, 380, 433, 471, 472, 473, 475], "trainer": [16, 53, 55, 433], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 454, 464, 465], "offer": [16, 42], "strongli": [17, 18, 433, 439], "welcom": [17, 18, 19, 433, 439], "absolut": [17, 179, 180, 332, 348], "skill": 17, "whether": [17, 18, 33, 35, 36, 66, 67, 74, 75, 96, 102, 110, 116, 117, 118, 128, 129, 148, 149, 160, 164, 165, 168, 169, 173, 176, 178, 179, 209, 239, 240, 243, 244, 251, 254, 258, 260, 266, 268, 270, 273, 274, 275, 276, 277, 278, 279, 291, 295, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 319, 327, 332, 337, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 401, 402, 430, 431, 432, 443, 444, 454, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 77, 78, 86, 87, 129, 144], "aspect": [17, 41, 433], "guid": [17, 18, 19, 27, 433], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 179, 187], "journei": [17, 433, 439], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 433], "split": [17, 19, 37, 38, 55, 129, 138, 154, 155, 156, 157, 171, 172, 173, 239, 279, 361, 433], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 413, 414, 415, 417], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 77, 88, 92, 93, 179, 189, 194, 197, 229, 332, 335, 336, 353, 361, 365, 366, 413, 414, 415, 418, 419, 433], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 239, 279], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 381, 392], "finish": [17, 18, 22, 433], "dive": [17, 19, 20, 37, 40, 41, 55, 433], "right": [17, 18, 19, 22, 25, 41, 179, 191, 193, 332, 350], "environ": [17, 19, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 239, 280], "doc": [17, 20, 24, 36, 38, 41, 42, 433], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 377, 378, 379, 380, 433], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 239, 241, 421, 428, 433], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 439], "toward": [18, 38, 361, 370, 433, 439], "page": [18, 19, 39, 43, 53, 433, 439], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 433, 439], "main": [18, 21, 30, 32, 77, 82, 92, 93, 332, 336, 353], "prefer": [18, 32], "mode": [18, 25, 32, 55, 74, 75, 129, 158, 159, 160, 161, 173, 179, 183, 223, 332, 347], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 381, 382, 383, 391, 392, 393], "submodul": [18, 19, 20, 21, 26, 27, 28, 34, 37, 38, 42, 433, 468, 469, 476, 477], "com": 18, "unifyai": [18, 21], "http": [18, 24, 179, 184, 194, 195, 197, 203, 234, 303, 305, 306, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 129, 148, 466, 467], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 96, 102], "familiar": [18, 20], "decid": [18, 381, 392], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 433], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 470, 474], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 179, 399, 400, 433, 439, 468, 469], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 239, 260, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 129, 138, 239, 273, 285, 286, 303, 305, 306, 308, 310, 311, 312, 319, 329, 377, 378, 379, 381, 388, 389, 397, 398, 443, 444, 470, 471, 472, 473, 474, 475], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 179, 184, 194, 195, 197, 203, 234, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423, 454, 463], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 239, 273], "align": [18, 38, 40, 433, 439], "accord": [18, 21, 28, 33, 96, 105, 112, 179, 183, 193, 223, 239, 261, 285, 286, 332, 354, 361, 364, 376, 421, 427, 429], "stabl": [18, 38, 55, 239, 264, 265, 287, 288, 293, 294, 418, 419, 420], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 129, 179, 202], "pip": [18, 54, 433], "instal": [18, 21, 54, 433], "abil": [18, 39, 55], "certain": [18, 55, 77, 78, 86, 87], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 239, 301], "track": [18, 19, 129, 381, 393, 466, 467], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 129, 138, 303, 305, 306, 310, 377, 378, 379, 380, 454, 465, 466, 467], "command": [18, 21, 433], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 74, 75, 239, 241, 332, 337, 347, 350, 413, 414, 415], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 66, 68, 69, 70, 71, 76, 77, 85, 88, 91, 94, 95, 129, 148, 151, 167, 174, 179, 183, 184, 189, 193, 194, 195, 197, 201, 203, 205, 206, 210, 221, 222, 224, 229, 234, 236, 239, 243, 244, 251, 258, 261, 262, 291, 297, 299, 319, 320, 321, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 343, 345, 350, 352, 353, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 374, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 428, 430, 431, 433], "8": [18, 21, 25, 32, 37, 41, 66, 70, 129, 151, 179, 183, 189, 195, 197, 206, 221, 222, 229, 234, 239, 244, 261, 262, 319, 326, 332, 334, 335, 336, 345, 352, 357, 358, 361, 362, 366, 368, 371, 401, 402, 403, 408, 412, 413, 414, 421, 422, 433, 454, 465], "activ": [18, 19, 21, 23, 42, 67, 68, 69, 70, 71, 72, 73, 433, 441, 442], "setup": 18, "click": [18, 19, 24, 433], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 43, 129, 174, 179, 218, 219, 408, 412, 413, 414, 415, 417, 421, 423, 424, 425], "left": [18, 19, 25, 33, 179, 191, 332, 337, 341, 350, 408, 409, 433], "panel": 18, "select": [18, 19, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 381, 382, 391, 392], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 74, 75, 179, 233, 332, 337, 361, 373, 443, 444], "cmd": [18, 21], "directori": [18, 19, 21, 239, 290], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 239, 290, 466, 467], "abov": [18, 19, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 77, 88, 92, 93, 179, 183, 184, 189, 194, 195, 197, 203, 223, 229, 234, 236, 239, 261, 319, 322, 331, 332, 335, 336, 337, 353, 361, 365, 366, 370, 399, 400, 401, 403, 413, 414, 415, 418, 419, 421, 423, 426, 427, 428, 430, 431], "m": [18, 19, 21, 22, 38, 77, 88, 92, 93, 239, 244, 332, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 401, 404, 405], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 19, 21], "OR": [18, 19, 21, 179, 192, 219, 430, 432], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 129, 163], "os": 18, "note": [18, 19, 23, 24, 25, 32, 179, 228, 332, 337, 350, 361, 373, 413, 415, 421, 424], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 25, 28, 32, 41, 42, 43, 433], "ivy_test": [18, 19], "test_array_api": [18, 19, 26, 27], "cd": [18, 19, 21], "r": [18, 239, 244, 301, 332, 347, 356], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 179, 202], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 129, 174, 179, 183, 239, 255, 256, 257, 399, 400, 454, 464], "yet": [18, 20, 32], "particular": [18, 19, 23, 35, 179, 180], "system": [18, 55, 332, 349], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 319, 320, 321, 322, 323, 325, 326, 433], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 239, 300], "deploy": 18, "top": [18, 19, 27, 41, 42, 433], "press": [18, 41, 433], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 332, 341, 408, 409], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 239, 254], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 77, 83, 413, 414, 415, 417], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 77, 88, 239, 247, 248, 319, 327, 332, 341, 355, 454, 462], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 239, 244], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 77, 78, 79, 80, 88, 89, 90, 94, 96, 103, 129, 138, 139, 148, 150, 151, 154, 155, 158, 159, 173, 239, 244, 292, 297, 301, 319, 320, 321, 322, 323, 324, 325, 326, 332, 352, 361, 363, 366, 371, 373, 381, 382, 383, 387, 392, 393, 399, 400, 408, 411, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461], "dev": [18, 28, 34, 38, 40, 42, 129, 138, 163], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 129], "post": [18, 43, 399, 400, 433, 439], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 66, 69, 129, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 248, 259, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 372, 373, 374, 401, 403, 408, 409, 418, 419, 420, 430, 431, 432], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 433], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 129, 158, 159, 160, 161, 173, 239, 256, 377, 378, 379, 380, 381, 387, 401, 404, 413, 414, 421, 433, 445], "configur": [18, 19, 21, 33, 129, 172, 381, 394], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 179, 223, 228, 239, 282, 332, 334, 337, 349, 401, 403, 421, 423, 424, 425], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 433], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 332, 335, 361, 365, 366, 370, 413, 414, 415, 418, 419, 421, 423, 430, 431], "theme": 18, "too": [18, 19, 55, 179, 183, 223], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 96, 113, 114], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 319, 329], "browser": 18, "cool": [18, 23], "requisit": 18, "head": [18, 32, 319, 330, 433, 454, 465], "pane": [18, 19], "readi": [18, 20], "begin": [18, 381, 382, 392], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 19, 479, 480], "dropdown": 18, "tab": [18, 41, 433], "master": [18, 19, 32], "vs": 18, "view": [18, 19, 77, 83, 319, 322, 326], "log": [18, 19, 28, 32, 35, 38, 41, 77, 87, 179, 214, 216, 332, 348, 433], "built": [18, 39, 77, 78, 129, 454, 465, 466, 467], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 179, 189, 229, 319, 322, 332, 336, 345, 352, 361, 370, 399, 400, 401, 403, 408, 411, 413, 414, 421, 422], "minut": 18, "launch": 18, "12": [18, 25, 32, 179, 189, 194, 197, 229, 239, 251, 265, 332, 336, 345, 352, 361, 366, 368, 370, 399, 400, 401, 403, 408, 412, 413, 414, 421, 422], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 66, 69, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 94, 95, 129, 138, 139, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 246, 248, 252, 259, 261, 303, 307, 319, 321, 323, 325, 327, 329, 330, 331, 332, 353, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 372, 373, 374, 375, 381, 394, 399, 400, 401, 403, 404, 405, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465], "That": [18, 19, 40, 41, 42, 179, 228], "alreadi": [18, 19, 29, 32, 36, 40, 55, 129, 179, 195, 203, 223, 229, 238, 332, 345, 433], "refer": [18, 19, 27, 28, 33, 36, 55, 77, 82, 179, 202, 214, 303, 305, 306, 332, 354, 356, 421, 427, 429, 430, 431, 432, 454, 464], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 319, 330, 331, 381, 387, 393], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 19, 25, 35, 54, 55, 433], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 179, 234, 319, 325, 326, 332, 345, 421, 422, 433, 454, 465], "bit": [18, 25, 28, 32, 40, 96, 111, 112, 115, 179, 190, 191, 193, 421, 426, 428], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 77, 78, 96, 103, 179, 202, 332, 340, 361, 366, 413, 414, 415, 417, 433], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 218, 219, 228, 229, 234, 236, 239, 261, 319, 322, 331, 332, 335, 361, 365, 366, 370, 399, 400, 413, 414, 415, 418, 419, 421, 423, 424, 430, 431, 433], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 66, 67, 68, 69, 70, 71, 72, 73, 96, 120, 239, 255, 256, 257, 303, 310, 311, 319, 328, 330, 331, 332, 343, 346, 357, 358, 359, 360, 361, 373, 377, 378, 379, 381, 387, 390, 393, 394, 399, 400, 433, 440, 441, 442, 468, 469], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 19, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 129], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 433], "server": [19, 433], "appropri": [19, 30, 179, 183, 223, 408, 409], "context": [19, 25, 32, 33, 34, 129, 239, 280, 319, 330, 454, 465], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 96, 102, 179, 183, 223, 239, 273, 303, 309, 314], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 96, 124, 361, 362, 421, 427, 429, 433], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 74, 77, 78, 86, 87, 179, 184, 194, 195, 197, 203, 228, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 361, 365, 370, 401, 402, 403, 405, 406, 413, 414, 415, 418, 419, 421, 423, 433, 470, 474], "land": 19, "end": [19, 32, 35, 37, 54, 55, 77, 78, 179, 187, 433, 439], "world": 19, "come": [19, 20, 42, 53, 433, 439], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 129, 138, 139, 239, 242, 279, 454, 464], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 357, 358, 359, 360], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 332, 336, 340, 353, 361, 372, 377, 378, 379], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 239, 245, 254, 258, 381, 391], "strive": [19, 55], "repli": 19, "newli": [19, 35, 74, 75, 96, 102, 239, 246], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 94, 95, 129, 174, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 239, 261, 271, 272, 273, 319, 322, 331, 332, 335, 361, 365, 366, 370, 399, 400, 413, 414, 415, 418, 419, 421, 423, 430, 431, 470, 471, 472, 473, 474, 475], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 433], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 381, 393], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 129, 154, 155, 158, 159, 160, 161, 332, 336, 361, 371, 377, 378, 379, 380, 433], "mark": [19, 27], "ii": [19, 421, 422], "iii": 19, "titl": [19, 433], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 433, 439], "partial": [19, 466, 467], "solut": [19, 27, 32, 332, 349], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 77, 84, 85, 239, 240], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 66, 69, 77, 80, 81, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 129, 141, 169, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 248, 259, 262, 266, 282, 285, 286, 292, 319, 321, 322, 323, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 401, 403, 404, 405, 408, 409, 411, 418, 419, 420, 421, 422, 430, 431, 432, 433, 454, 456, 457, 458, 459, 460, 461, 468, 469], "move": [19, 23, 129, 174], "within": [19, 27, 42, 55, 77, 78, 401, 405], "7": [19, 21, 25, 28, 32, 35, 66, 68, 69, 129, 151, 179, 183, 189, 190, 194, 195, 197, 201, 203, 206, 221, 222, 229, 236, 239, 244, 251, 261, 262, 303, 305, 306, 310, 319, 325, 326, 331, 332, 334, 335, 336, 345, 352, 357, 358, 359, 360, 361, 362, 365, 366, 368, 371, 374, 399, 400, 401, 402, 403, 404, 405, 408, 412, 413, 414, 421, 422], "dai": 19, "close": [19, 24, 179, 202, 229, 332, 350], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 129, 148, 303, 309], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 179, 202, 433], "remain": [19, 25, 55, 179, 183, 223, 228, 361, 369, 381, 387], "access": [19, 21, 33], "short": [19, 42, 319, 329], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 77, 92, 93, 96, 102, 129], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 303, 305, 306, 310, 421, 428, 470, 471, 472], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 96, 112, 115, 239, 247, 248, 361, 362], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 332, 333, 334], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 74, 75, 179, 187], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 179, 202], "role": [19, 39], "kept": [19, 35, 377, 378, 379], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 179, 233, 401, 402, 404, 405], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 421, 426, 428], "clone": [19, 21, 129, 150, 151, 152, 153], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 96, 119, 179, 183, 184, 195, 203, 227, 234, 236, 239, 261, 319, 322, 331, 332, 334, 340, 354, 361, 370, 399, 400, 421, 423, 430, 431], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 24, 25, 26, 28, 31, 32, 33, 36, 96, 103, 179, 187, 227, 332, 334, 337, 349, 361, 363, 370, 401, 402, 408, 409, 410, 413, 414, 415, 417, 421, 426, 427, 428, 429], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 24, 32, 36, 40], "atlassian": 19, "tutori": 19, "quit": [19, 20, 24, 28, 30, 31], "logic": [19, 30, 31, 33, 34, 40, 129, 165, 179, 217, 218, 219, 430, 431, 432, 433], "around": [19, 28, 31, 36, 40, 55], "blame": 19, "revis": 19, "author": [19, 433], "eg": 19, "16": [19, 25, 41, 179, 236, 319, 325, 332, 336, 345, 408, 412, 421, 422], "5": [19, 21, 25, 29, 36, 40, 41, 42, 66, 68, 69, 71, 77, 85, 88, 91, 94, 95, 129, 151, 167, 179, 183, 184, 188, 189, 193, 194, 195, 197, 203, 206, 221, 222, 224, 229, 234, 236, 239, 244, 251, 261, 262, 297, 319, 322, 324, 325, 331, 332, 333, 334, 335, 336, 339, 345, 352, 353, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 374, 399, 400, 401, 402, 403, 407, 408, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 430, 431, 454, 465], "past": 19, "l": [19, 22, 332, 333, 337, 340, 353], "filepath": 19, "grep": 19, "v": [19, 38, 41, 42, 43, 319, 331, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 474, 476, 477], "commit_id": 19, "handi": 19, "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 25], "previou": [19, 27, 36, 43, 55, 303, 306, 310], "inform": [19, 96, 112, 115, 239, 241, 303, 314], "shown": [19, 25, 36, 38, 40, 55, 77, 88, 179, 189, 194, 197, 229, 332, 335, 361, 365, 366, 413, 414, 415, 418, 419], "whenev": [19, 40, 41], "tag": 19, "think": [19, 25], "interact": [19, 433], "gain": [19, 37, 42, 445], "repeat": [19, 24, 25, 29, 31, 32, 239, 257, 361, 375], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 332, 340], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 77, 86, 87, 239, 260, 454, 465], "tickbox": 19, "lower": [19, 25, 38, 55, 77, 82, 92, 179, 221, 332, 333, 401, 405], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 239, 284, 289, 361, 369, 381, 383, 413, 414, 415, 417], "span": 19, "intent": [19, 35], "larg": [19, 41, 179, 183, 223], "discourag": 19, "philosophi": 19, "increment": [19, 239, 272], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 433], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 129, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "style": [19, 408, 411], "ve": [19, 37, 40, 401, 402, 433], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 77, 92, 93, 303, 306, 308, 310, 311, 312, 466, 467], "subsect": 19, "session": [19, 433], "block": [19, 28, 37, 39, 43, 55, 129, 433], "smaller": [19, 38, 43, 361, 362, 370, 421, 426, 428], "edit": 19, "exact": [19, 38, 413, 414], "beauti": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 413, 414, 415, 417], "undo": 19, "stress": 19, "frequenc": [19, 239, 260], "pycharm": 19, "pytest": [19, 27], "button": 19, "declar": 19, "insid": [19, 21, 23, 33], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 27], "test_funct": 19, "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 96, 107, 108, 109, 121, 122, 123, 129, 142, 143, 239, 249, 253, 267, 303, 313, 318], "q": [19, 55, 319, 331, 332, 337, 347], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "variou": [19, 24, 30, 36, 54], "valu": [19, 25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 77, 78, 82, 84, 85, 86, 87, 96, 102, 107, 108, 109, 129, 141, 172, 173, 179, 180, 181, 183, 184, 186, 195, 199, 200, 203, 204, 205, 206, 210, 211, 221, 222, 223, 225, 226, 227, 229, 238, 239, 247, 248, 249, 254, 260, 261, 262, 267, 270, 274, 284, 285, 286, 287, 288, 289, 302, 303, 305, 306, 307, 310, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 343, 346, 347, 348, 349, 350, 351, 355, 361, 362, 364, 368, 369, 376, 377, 378, 379, 381, 385, 386, 387, 388, 389, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 474], "cpu": [19, 34, 55, 77, 86, 87, 129, 148, 149, 151, 165, 168, 170, 174, 175, 177, 178, 239, 261, 262, 282, 285, 286, 401, 402, 403, 404, 405, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "gpu": [19, 34, 40, 55, 129, 148, 151, 164, 166, 170, 172, 177], "combin": [19, 25, 27, 28, 31, 32, 43, 332, 334], "wherebi": [20, 32, 381, 393], "broad": 20, "distribut": [20, 34, 55, 129, 150, 154, 155, 156, 157, 319, 327, 357, 358, 359, 360, 401, 402, 403, 404, 405, 454, 462, 466, 467], "across": [20, 25, 27, 28, 32, 33, 36, 129, 138, 139, 150, 151, 153, 154, 155, 156, 157, 161, 171, 172, 239, 243, 244, 381, 387, 408, 410], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 179, 218], "static": [20, 24, 25, 28, 55, 74, 75], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 66, 68, 69, 70, 71, 72, 73, 77, 83, 88, 179, 184, 189, 194, 195, 197, 203, 206, 221, 222, 224, 229, 234, 239, 249, 250, 261, 285, 286, 297, 299, 303, 310, 311, 319, 325, 331, 332, 333, 334, 335, 357, 358, 361, 365, 366, 368, 371, 374, 381, 382, 392, 393, 394, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 430, 431, 433, 454, 465, 466, 467], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 66, 68, 69, 70, 71, 72, 73, 77, 88, 129, 138, 170, 179, 183, 184, 189, 194, 195, 197, 203, 206, 221, 222, 224, 229, 234, 236, 239, 250, 261, 273, 297, 299, 319, 322, 325, 331, 332, 333, 334, 335, 357, 358, 361, 365, 366, 368, 370, 371, 374, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 430, 431, 443, 444], "revers": [20, 24, 25, 43, 55, 239, 254, 361, 366], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 96, 119, 377, 378, 379, 401, 402, 433, 476, 477], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 470, 473, 475], "direct": [20, 42, 43, 54, 418, 420], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 195, 196, 197, 201, 202, 203, 212, 213, 215, 216, 223, 227, 228, 229, 230, 231, 232, 233, 236, 238, 421, 423, 424, 425, 427, 428, 429], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 433], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 239, 261, 319, 322, 331, 332, 335, 361, 365, 366, 370, 399, 400, 413, 414, 415, 418, 419, 421, 423, 430, 431], "its": [20, 21, 24, 96, 103, 129, 173, 332, 340, 361, 365, 369, 370, 374], "docstr": [20, 21, 22, 23, 28, 32, 36, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 332, 335, 361, 365, 366, 370, 413, 414, 415, 418, 419, 421, 423, 430, 431], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 433, 439], "builder": [21, 53, 55, 433], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 303, 306, 308, 310, 311, 312, 332, 336, 343, 346, 353, 361, 366, 370, 418, 419, 420, 433], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 32, 35, 40, 41, 179, 184, 194, 195, 197, 203, 234, 303, 305, 306, 332, 356, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423], "indic": [21, 39, 43, 66, 71, 179, 230, 239, 261, 262, 269, 282, 285, 286, 319, 320, 321, 322, 323, 324, 325, 326, 332, 355, 361, 370, 381, 382, 384, 386, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 408, 409, 410, 411, 413, 414, 416, 418, 419, 420, 433, 436, 438, 454, 455, 456, 457, 458, 459, 460, 461, 466, 467], "privat": [21, 470, 474], "fulfil": [21, 37, 433], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 96, 110, 129, 149, 421, 422, 433], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 239, 249, 381, 394], "rst": 21, "skip": [21, 27, 381, 394], "read": [21, 433], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 77, 79, 83, 96, 102, 129, 174, 239, 250, 298, 299, 361, 369, 381, 383, 418, 420], "create_rst_fil": 21, "filter": [21, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "repres": [21, 40, 77, 88, 96, 111, 179, 182, 183, 185, 188, 197, 223, 232, 319, 328, 332, 348, 349], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 66, 68, 69, 71, 77, 85, 129, 151, 167, 179, 183, 184, 189, 190, 194, 195, 197, 203, 206, 221, 222, 224, 229, 234, 236, 239, 244, 251, 261, 262, 297, 319, 322, 325, 326, 331, 332, 334, 335, 336, 345, 350, 352, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 374, 399, 400, 401, 402, 403, 408, 409, 412, 413, 414, 415, 421, 422, 423], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 179, 191, 332, 336, 340], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 179, 183, 189, 190, 221, 222, 229, 234, 239, 261, 262, 303, 305, 306, 310, 319, 322, 325, 326, 332, 334, 335, 336, 345, 350, 352, 361, 362, 366, 368, 370, 371, 401, 402, 403, 408, 412, 413, 414, 421, 422, 470, 471, 472], "index": [21, 28, 32, 40, 76, 77, 82, 88, 129, 170, 239, 241, 261, 262, 361, 373, 381, 384, 385, 388, 389, 390, 395, 397, 408, 409, 410, 411, 413, 414, 415, 418, 419, 436, 438], "create_index_rst": 21, "14": [21, 25, 32, 179, 194, 319, 331, 332, 336, 345, 413, 414, 421, 422], "\u03c0": [21, 179, 181, 184, 186, 187], "namespac": [21, 23, 33, 38, 43], "who": [22, 37, 55], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 129, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 433], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 303, 306, 308, 310, 311, 312], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 96, 120, 129, 167, 179, 183, 189, 194, 206, 221, 222, 239, 250, 258, 261, 262, 297, 298, 299, 319, 322, 325, 326, 331, 332, 352, 357, 358, 360, 361, 362, 399, 400, 408, 412, 421, 422, 424], "nestabl": [22, 24, 25, 27, 35, 179, 183, 184, 195, 203, 234, 236, 239, 261, 319, 322, 331, 361, 370, 399, 400, 421, 423, 430, 431], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 239, 246, 303, 317], "dynam": [22, 33, 34, 35, 38, 74, 75], "runtim": [22, 27, 129], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 74, 75, 129, 145, 146, 147, 148, 149, 163, 167, 168, 175, 178, 303, 306, 308, 310, 311, 312, 470, 471, 472, 473, 474, 475], "h": [22, 32, 319, 322, 323, 324, 325, 326], "inplac": [22, 25, 30, 31, 36, 40, 42, 239, 245, 270, 273, 274, 295, 303, 306, 308, 310, 311, 312, 443, 444, 470, 471, 472, 473, 474, 475], "j": [22, 239, 243, 244, 332, 353, 421, 422], "k": [22, 38, 77, 82, 92, 93, 239, 243, 319, 331, 332, 340, 347, 349, 350, 351, 353, 401, 404, 405, 408, 411], "borrow": 22, "n": [22, 77, 88, 92, 93, 239, 244, 319, 327, 332, 336, 340, 342, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 361, 364, 365, 367, 373, 376, 401, 404, 405, 408, 411, 421, 424, 427, 428, 429, 430, 431, 432], "taken": [23, 43, 332, 336], "constant": [23, 28, 42, 43, 55, 129, 138, 139, 361, 364, 381, 387, 399, 400, 445, 446, 450, 453, 466, 467, 468, 469], "creation": [23, 33, 34, 38, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "data_typ": [23, 33, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "elementwis": [23, 28, 38, 43, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "linear_algebra": [23, 40, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356], "sort": [23, 332, 337, 350, 351, 419], "statist": [23, 33, 422, 423, 424, 425, 426, 427, 428, 429], "util": [23, 34, 129, 162, 431, 432], "compil": [23, 32, 37, 39, 55, 433, 466, 467, 470, 471, 472, 473, 474, 475], "gradient": [23, 32, 41, 42, 54, 55, 129, 173, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "loss": [23, 28, 41, 42, 43, 358, 359, 360, 433], "meta": [23, 31, 378, 379, 380], "nest": [23, 28, 31, 32, 40, 41, 42, 55, 129, 153, 157, 161, 239, 297, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 466, 467, 470, 471, 472, 473, 474, 475], "norm": [23, 239, 247, 248, 332, 341, 355, 400, 433, 469, 470, 472], "random": [23, 34, 43, 54, 402, 403, 404, 405, 406, 407, 433], "overlap": 23, "sever": [23, 55, 332, 339], "judgement": 23, "locat": [23, 27, 29, 34, 401, 402], "matmul": [23, 29, 38, 332, 350, 433], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 433], "anyth": [23, 433], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 381, 382, 391, 392], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 162, 168, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 247, 248, 251, 252, 255, 256, 257, 259, 260, 261, 262, 266, 268, 269, 271, 272, 273, 282, 285, 286, 291, 292, 297, 298, 299, 301, 302, 303, 305, 306, 308, 310, 311, 312, 314, 316, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 392, 393, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 66, 68, 69, 70, 71, 72, 73, 77, 78, 79, 81, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 102, 103, 104, 110, 112, 115, 117, 118, 120, 124, 129, 148, 149, 151, 167, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 247, 248, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 266, 268, 269, 271, 272, 273, 282, 285, 286, 291, 297, 298, 299, 301, 302, 303, 305, 306, 308, 310, 311, 312, 314, 316, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 393, 399, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432], "ax": [23, 25, 33, 40, 129, 173, 239, 251, 332, 341, 349, 352, 355, 361, 364, 366, 367, 370, 372, 374, 376, 408, 409, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 66, 71, 74, 75, 77, 80, 82, 84, 85, 86, 87, 90, 92, 93, 94, 96, 104, 109, 111, 112, 115, 118, 129, 151, 154, 155, 156, 157, 165, 166, 167, 173, 174, 179, 189, 190, 191, 192, 193, 194, 239, 241, 251, 252, 255, 256, 257, 260, 261, 266, 282, 285, 286, 291, 292, 301, 303, 305, 306, 310, 319, 320, 322, 324, 325, 326, 332, 334, 336, 352, 353, 354, 355, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 393, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 74, 75, 77, 79, 80, 84, 89, 90, 94, 96, 104, 114, 129, 148, 239, 260, 292, 319, 322, 325, 326, 332, 343, 346, 350, 352, 355, 361, 363, 364, 366, 367, 370, 372, 373, 376, 377, 378, 379, 380, 381, 383, 384, 386, 388, 389, 390, 392, 393, 395, 396, 397, 398, 401, 404, 405, 408, 411, 413, 414, 415, 416, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "dtype": [23, 25, 28, 33, 34, 40, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 169, 179, 193, 239, 243, 244, 282, 298, 319, 327, 361, 365, 399, 400, 401, 405, 408, 409, 410, 418, 420, 421, 426, 427, 428, 430, 431, 433, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477], "nativedtyp": [23, 33, 34, 36, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 94, 95, 96, 101, 102, 108, 109, 110, 119, 421, 428], "nativedevic": [23, 33, 34, 36, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 94, 95, 129, 146, 147, 148, 162, 168, 170, 172, 174, 175, 178, 239, 282, 401, 402, 403, 404, 405], "my": 23, "nan": [23, 24, 76, 96, 102, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 201, 202, 203, 207, 209, 212, 213, 215, 216, 223, 227, 228, 229, 231, 232, 233, 236, 238, 239, 268, 302, 319, 331, 413, 414, 415, 417, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432], "y": [23, 25, 29, 32, 38, 40, 66, 68, 69, 70, 71, 72, 73, 77, 84, 85, 88, 90, 91, 95, 96, 102, 129, 149, 163, 167, 172, 179, 183, 184, 187, 189, 190, 193, 194, 195, 196, 197, 201, 203, 206, 221, 222, 224, 229, 234, 236, 239, 240, 243, 244, 250, 251, 258, 259, 261, 262, 291, 297, 298, 299, 303, 307, 319, 325, 326, 328, 332, 333, 334, 335, 339, 345, 352, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 374, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 421, 422, 423, 427, 428, 430, 431], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 83, 85, 88, 89, 91, 92, 93, 95, 96, 102, 103, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 124, 129, 138, 139, 148, 149, 150, 151, 153, 154, 157, 161, 167, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 268, 269, 271, 272, 273, 275, 276, 277, 278, 291, 292, 295, 297, 298, 299, 301, 302, 303, 307, 309, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469], "numer": [23, 42, 77, 88, 96, 102, 179, 180, 183, 195, 198, 202, 203, 204, 207, 208, 209, 210, 218, 219, 223, 224, 225, 227, 228, 230, 234, 235, 238, 239, 264, 265, 287, 288, 293, 294, 332, 334, 340, 345, 350, 352, 353, 354, 401, 407, 408, 409, 410, 421, 423, 426, 428, 445], "along": [23, 35, 77, 86, 87, 129, 154, 155, 156, 157, 158, 159, 160, 161, 173, 239, 251, 252, 261, 301, 332, 341, 353, 354, 355, 357, 359, 360, 361, 363, 366, 368, 370, 371, 373, 375, 377, 378, 379, 380, 401, 407, 408, 409, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 66, 69, 77, 78, 96, 120, 129, 138, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 248, 252, 259, 261, 285, 286, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 336, 341, 350, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 372, 373, 374, 381, 394, 399, 400, 401, 403, 408, 409, 410, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "broadcast": [23, 24, 25, 32, 33, 66, 69, 96, 103, 104, 129, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 248, 259, 332, 340, 341, 343, 346, 349, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 372, 373, 374, 401, 403, 408, 409, 410, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 77, 88, 129, 138, 139, 153, 157, 161, 239, 242, 279, 381, 387, 421, 428, 466, 467], "produc": [23, 129, 138, 139, 319, 331], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 179, 184, 413, 414, 415, 418, 419, 433], "firstli": [24, 25, 28, 31, 33, 35, 41], "templat": [24, 433], "spec": [24, 25], "api_specif": [24, 179, 184, 194, 195, 197, 203, 234, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 433], "approxim": [24, 66, 67, 179, 181, 182, 184, 185, 186, 187, 196, 197, 201, 202, 212, 213, 214, 215, 227, 231, 232, 236, 332, 343, 346], "tangent": [24, 66, 73, 179, 186, 187, 188, 236, 237], "domain": [24, 179, 181, 182, 184, 185, 186, 187, 196, 197, 201, 202, 212, 213, 215, 231, 232, 233, 236], "infin": [24, 76, 96, 102, 179, 180, 182, 183, 185, 186, 187, 195, 196, 197, 201, 202, 203, 204, 207, 208, 212, 213, 215, 216, 223, 227, 228, 229, 231, 232, 233, 236, 238, 332, 355, 421, 423, 425, 430, 431, 432], "codomain": [24, 179, 181, 182, 184, 185, 186, 187, 196, 197, 201, 202, 212, 213, 215, 231, 232, 233, 236], "element": [24, 38, 43, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 84, 85, 92, 93, 129, 152, 156, 160, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 247, 248, 251, 252, 259, 269, 298, 299, 319, 327, 332, 334, 337, 340, 347, 350, 361, 362, 366, 368, 370, 371, 372, 401, 402, 408, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 462], "x_i": [24, 179, 180, 181, 182, 184, 185, 186, 190, 195, 196, 197, 201, 202, 203, 207, 208, 209, 212, 213, 215, 218, 224, 229, 230, 231, 232, 233, 234, 236, 238, 413, 414, 415, 417, 421, 423, 424, 425, 427, 428, 429], "assum": [24, 29, 33, 40, 41, 55, 77, 88, 179, 183, 184, 189, 194, 195, 196, 197, 203, 229, 231, 234, 236, 239, 261, 319, 322, 331, 332, 335, 361, 365, 366, 370, 399, 400, 413, 414, 415, 418, 419, 421, 423, 430, 431], "express": [24, 38, 43, 179, 181, 184, 186, 187, 196, 231, 236], "radian": [24, 179, 181, 184, 186, 187, 196, 231, 236], "float": [24, 28, 32, 33, 35, 36, 40, 42, 66, 68, 76, 77, 78, 80, 82, 84, 85, 86, 87, 90, 94, 96, 102, 108, 112, 117, 120, 129, 162, 168, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 215, 216, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 238, 239, 247, 248, 260, 264, 265, 287, 288, 293, 294, 303, 305, 306, 308, 310, 311, 312, 319, 322, 326, 331, 332, 333, 335, 337, 338, 339, 343, 346, 347, 349, 350, 355, 357, 358, 359, 360, 377, 378, 379, 380, 399, 400, 401, 404, 405, 413, 414, 415, 417, 421, 423, 424, 425, 426, 427, 428, 429], "operand": [24, 179, 181, 182, 183, 184, 185, 186, 187, 194, 195, 196, 197, 201, 202, 203, 212, 213, 215, 216, 223, 227, 228, 229, 231, 232, 233, 236, 238, 421, 422, 423, 425, 428], "whose": [24, 77, 92, 93, 179, 182, 185, 188, 196, 197, 227, 231, 232, 236, 239, 246, 332, 333, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 349, 350, 351, 353, 361, 366, 370, 413, 414, 415, 421, 422], "ref": [24, 179, 193, 210, 223, 225, 228, 235, 361, 373], "promot": [24, 28, 33, 96, 102, 105, 119, 120, 124, 179, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 196, 197, 198, 201, 202, 212, 213, 215, 216, 220, 223, 227, 228, 231, 232, 233, 236, 332, 333, 334, 339, 340, 343, 345, 346, 349, 354, 355, 361, 373, 421, 424], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 433], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 77, 88, 179, 183, 184, 189, 194, 195, 197, 202, 203, 229, 234, 236, 332, 335, 361, 365, 366, 370, 413, 414, 415, 418, 419, 421, 423, 430, 431], "org": [24, 179, 184, 194, 195, 197, 203, 234, 303, 305, 306, 361, 365, 370, 413, 414, 415, 418, 419, 421, 423], "elementwise_funct": [24, 179, 184, 194, 195, 197, 203, 234, 361, 370, 413, 414, 415, 418, 419, 421, 423], "descript": [24, 32, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 239, 261, 319, 322, 331, 332, 335, 355, 361, 365, 366, 370, 399, 400, 413, 414, 415, 418, 419, 421, 423, 430, 431], "simplic": [24, 42, 54, 77, 88, 179, 183, 184, 189, 194, 195, 197, 203, 229, 234, 236, 239, 261, 319, 322, 331, 332, 335, 361, 365, 366, 370, 399, 400, 413, 414, 415, 418, 419, 421, 423], "judgment": 24, "beyond": [24, 361, 370], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 31, 35, 40, 55, 96, 104, 239, 245, 254, 273, 300, 332, 346, 361, 363, 373, 408, 411, 430, 431, 432], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 381, 382], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 361, 373, 381, 382, 383, 391, 392, 393], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 66, 67, 68, 69, 239, 260, 319, 327, 349, 433, 454, 455, 456, 457, 458, 459, 460, 461], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 239, 245, 271, 272, 273, 274, 275, 276, 278, 295, 303, 306, 307, 308, 309, 310, 311, 312, 314, 317, 319, 330, 332, 349, 377, 378, 379, 380, 399, 400, 433, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "store": [24, 29, 31, 32, 38, 40, 41, 42, 239, 260, 303, 317, 332, 353, 361, 371, 466, 467], "intern": [24, 31, 32, 34, 35, 129, 303, 317, 381, 382, 391, 392, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 476, 477], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 466, 467, 470, 474], "_forward": [24, 38, 41, 42, 433], "former": 24, "trainabl": [24, 39, 41, 42, 303, 309, 443, 444, 466, 467, 476], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 332, 337, 454, 463, 465, 466, 467], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 96, 112, 113, 114, 115, 129, 169], "docst": 24, "after": [25, 32, 33, 37, 96, 124, 179, 233, 303, 306, 307, 308, 310, 311, 312, 399, 400, 470, 471, 472, 473, 474, 475], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 179], "multipli": [25, 29, 31, 179, 239, 251], "divid": [25, 31, 179, 204, 239, 293, 361, 371], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 77, 88, 179, 180, 183, 187, 189, 191, 192, 193, 194, 198, 199, 204, 205, 206, 210, 211, 216, 217, 219, 220, 223, 225, 228, 235, 303, 305, 306, 307, 308, 310, 311, 312, 332, 347, 377, 378, 379, 380], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 332, 334, 349, 401, 402], "combinatorili": 25, "equal": [25, 32, 33, 77, 82, 84, 85, 96, 102, 179, 191, 193, 207, 208, 227, 229, 239, 240, 243, 244, 332, 336, 343, 346, 361, 362, 364, 371, 376, 401, 405, 413, 414, 415, 417, 418, 419, 420, 421, 424, 427, 428, 429], "maximum": [25, 38, 41, 43, 129, 153, 157, 161, 173, 179, 239, 247, 248, 260, 303, 310, 361, 362, 381, 393, 408, 409, 421, 423, 425, 433], "variat": [25, 27], "grid": [25, 27, 54, 77, 88], "vari": [25, 27, 32, 40, 413, 414, 415, 417], "simplest": 25, "small": [25, 28, 38, 42, 55, 179, 223, 332, 343, 346, 399, 400, 468, 469], "dimens": [25, 38, 41, 66, 71, 77, 92, 93, 129, 160, 239, 255, 256, 257, 260, 266, 282, 301, 319, 320, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 349, 350, 351, 353, 354, 355, 357, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 401, 407, 408, 409, 410, 411, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465], "unus": [25, 35, 74, 75], "extra": [25, 30, 31, 38, 303, 307], "18": [25, 32, 179, 194, 332, 336, 345, 421, 422], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 129, 141, 466, 467, 470, 471, 472, 473, 475], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 401, 404, 413, 414, 421], "prod": [25, 33, 239, 256, 421], "var": [25, 38, 377, 378, 379, 421], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 74, 75, 77, 84, 96, 102, 105, 107, 108, 109, 110, 113, 116, 117, 118, 128, 129, 148, 149, 164, 173, 176, 179, 189, 190, 192, 194, 199, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 225, 239, 240, 243, 244, 251, 254, 258, 260, 266, 268, 273, 275, 276, 277, 278, 291, 301, 302, 303, 314, 332, 333, 341, 350, 355, 361, 371, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 401, 402, 408, 409, 410, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 66, 67, 74, 75, 77, 86, 96, 102, 105, 129, 148, 165, 169, 170, 179, 189, 194, 205, 206, 207, 208, 209, 210, 218, 219, 239, 240, 243, 244, 245, 246, 251, 258, 260, 268, 269, 276, 291, 297, 299, 302, 303, 306, 308, 309, 310, 311, 312, 314, 319, 327, 332, 333, 341, 350, 355, 357, 358, 359, 360, 361, 371, 377, 378, 379, 380, 381, 382, 391, 392, 394, 401, 402, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 66, 71, 77, 86, 87, 129, 131, 134, 141, 154, 155, 156, 157, 158, 159, 160, 161, 173, 239, 251, 252, 261, 301, 332, 334, 336, 354, 355, 357, 359, 360, 361, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 401, 407, 408, 409, 410, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "54": [25, 179, 196, 197, 319, 331, 332, 345, 401, 404, 421, 422], "jointli": 25, "three": [25, 32, 37, 77, 88, 433], "x0": [25, 239, 243], "x1": [25, 36, 96, 124, 129, 167, 179, 183, 187, 189, 191, 192, 193, 194, 198, 199, 204, 205, 206, 210, 211, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 235, 239, 240, 243, 319, 324, 332, 334, 340, 345, 349, 352, 354, 408, 412], "x2": [25, 36, 96, 124, 129, 167, 179, 183, 187, 189, 191, 192, 193, 194, 198, 199, 204, 205, 206, 210, 211, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 235, 239, 240, 319, 324, 332, 334, 340, 345, 349, 352, 354, 408, 412], "procedur": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 319, 330, 332, 334, 433, 439, 454, 465], "seper": [25, 239, 260], "pars": [25, 55], "satisfi": [25, 332, 356], "ignor": [25, 55, 77, 88, 381, 392, 470, 474], "far": [25, 34, 39, 40, 381, 382, 392], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 332, 337, 350], "rule": [25, 27, 28, 31, 32, 33, 96, 102, 105, 120, 179, 188, 193, 198, 223, 228, 332, 333, 334, 345, 349], "count": [25, 41, 129, 167, 332, 354, 361, 366, 413, 414, 415, 430, 431, 432], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 179, 236, 332, 345, 421, 422], "19": [25, 179, 194, 236, 332, 336], "143": [25, 179, 236], "38": [25, 179, 236], "11": [25, 32, 179, 183, 189, 229, 239, 251, 261, 262, 332, 336, 345, 357, 360, 361, 366, 368, 401, 403, 408, 412, 413, 414, 421, 422], "13": [25, 32, 179, 189, 194, 197, 239, 251, 319, 331, 332, 336, 345, 399, 400, 408, 412, 413, 414, 421, 422], "17": [25, 32, 66, 68, 332, 336, 401, 404], "shift": [25, 36, 179, 191, 193, 361, 370], "sequenc": [25, 33, 54, 129, 138, 139, 239, 244, 279, 361, 371, 373, 401, 403, 421, 423, 454, 463, 468, 469, 476, 477], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 239, 251, 252, 332, 354, 361, 368, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "non": [25, 32, 33, 38, 74, 75, 96, 102, 116, 179, 218, 219, 319, 322, 332, 335, 343, 350, 352, 354, 355, 408, 409, 410, 411, 421, 423, 424, 425, 426, 429, 430, 431, 432, 466, 467, 470, 474], "static_rol": [25, 32], "float32": [25, 33, 96, 100, 101, 113, 399, 400], "z": [25, 29, 32, 38, 40, 129, 163, 179, 183, 189, 194, 206, 221, 222, 239, 243, 244, 261, 262, 291, 332, 334, 357, 358, 359, 361, 362, 408, 409, 421, 422, 423], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 66, 67, 68, 69, 129], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 129, 138, 381, 388, 389, 393, 394, 454, 465], "collect": [27, 54, 66, 74, 129, 239, 303, 319, 357, 381, 394, 399, 401, 440, 454, 468, 470], "fixtur": 27, "ones": [27, 38, 40, 41, 77, 82, 91, 179, 195, 239, 282, 433], "consum": [27, 32, 36, 129], "300": [27, 179, 229], "ab": [27, 30, 179, 227, 332, 355, 433], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 319, 327, 401, 402, 404, 405, 421, 427, 429, 454, 462], "rang": [27, 41, 42, 43, 77, 78, 86, 87, 413, 414, 421, 426, 428, 433], "cach": [27, 28, 129, 147, 239, 246], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 381, 390], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 77, 88, 96, 103, 120, 129, 158, 159, 161], "verifi": [27, 33, 34, 40, 433, 439], "truth": [27, 179, 199, 205, 206, 210, 211, 225], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 239, 268, 332, 349], "suffic": [27, 30], "catch": [27, 239, 254], "systemat": 27, "compar": [27, 41, 239, 240, 243, 244, 413, 414, 415, 417, 418, 419, 420], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 129], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 77, 78, 239, 251, 275, 276, 278, 303, 309, 401, 403], "constitut": [28, 38, 421, 427, 429], "venn": 28, "diagram": 28, "lowest": [28, 55, 381, 393, 401, 403], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 357, 360], "pred": [28, 32, 35, 357, 358, 359, 360], "epsilon": [28, 32, 35, 42, 303, 305, 306, 310, 332, 343, 346, 357, 358, 359, 360, 399, 400, 468, 469, 470, 471, 472], "1e": [28, 32, 35, 42, 43, 239, 265, 303, 305, 306, 310, 332, 350, 357, 358, 359, 360, 399, 400, 433, 470, 471, 472, 473, 475], "clip": [28, 32, 35, 38, 41, 43, 179, 221, 222, 239, 247, 248, 361, 433], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 66, 68, 77, 78, 82, 179, 207, 208, 223, 227, 228, 332, 350, 354, 355, 361, 366, 370, 430, 431, 432], "sum": [28, 32, 33, 35, 38, 129, 158, 159, 160, 161, 173, 179, 183, 216, 239, 252, 256, 285, 286, 319, 331, 332, 350, 353, 355, 421, 422, 427], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 421, 427, 429], "outsid": [28, 34, 38, 40, 43, 361, 362, 373], "cache_fn": [28, 239], "stable_divid": [28, 239], "denomin": [28, 55, 239, 259, 265, 288, 293, 294, 399, 400, 468, 469], "divis": [28, 179, 193, 198, 204, 228, 239, 259, 265, 288, 293, 294, 303, 305, 306, 310, 470, 471, 472], "leaf": [28, 32, 41, 381, 382, 391, 392], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 129, 171, 172, 239, 260, 319, 328, 332, 355, 377, 378, 379, 380, 399, 400, 468, 469], "concurr": [28, 32], "weight": [28, 32, 42, 43, 303, 305, 306, 308, 310, 311, 312, 319, 328, 329, 331, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 470, 472, 473], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 74, 75, 129, 174, 239, 300, 303, 305, 306, 310, 332, 340, 377, 378, 379, 380, 421, 427, 429, 466, 467, 470, 471, 472, 474], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32], "briefli": [28, 41], "can_cast": [28, 33, 96], "cast": [28, 33, 96, 102, 105, 361, 363, 421, 426, 428, 433], "set_default_dtyp": [28, 33, 96], "default_dtyp": [28, 33, 96], "get_all_arrays_on_dev": 28, "nested_map": [28, 381], "index_nest": [28, 381], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 179, 223, 239, 282], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 96, 100, 101, 110, 116, 128, 129, 145, 146, 147, 148, 162, 168, 174, 175, 178, 239, 253], "unmodifi": [29, 33], "loop": [29, 55, 377, 378, 379, 380], "moment": [29, 55, 303, 305, 306, 310, 470, 471, 472], "fallback": 29, "freedom": [29, 421, 427, 429], "recommend": [29, 179, 218, 219, 228, 421, 424], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 433], "empti": [31, 33, 34, 77, 78, 421, 427, 428, 430, 431, 432], "self": [31, 32, 38, 40, 41, 42, 43, 129, 433, 470, 474], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "bear": [31, 32, 33], "mind": [31, 32], "necessarili": [31, 32], "although": [31, 32], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 179, 239, 260, 433], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 377, 378, 379, 381, 394, 476, 477], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 179, 201, 202, 212, 213, 214, 215, 224, 230, 234, 381, 382, 391, 392, 430, 431, 432], "boolean": [32, 77, 84, 96, 102, 116, 128, 129, 164, 176, 179, 189, 190, 192, 194, 217, 218, 219, 220, 239, 240, 243, 244, 268, 269, 270, 274, 275, 276, 277, 278, 295, 302, 303, 309, 377, 378, 379, 381, 391, 421, 425], "to_iter": 32, "travers": [32, 38, 40, 381, 393], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "match": [32, 96, 102, 179, 228, 239, 279], "roll": [32, 36, 361], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 129, 141, 239, 241, 249, 319, 330, 331, 377, 378, 379, 381, 384, 390, 394, 443, 444, 454, 465, 470, 474], "underli": [32, 179, 189, 192, 194, 220], "queri": [32, 33, 40, 129, 162, 172, 319, 330, 331, 454, 465], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 239, 260, 361, 365], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 179, 194, 197], "integ": [32, 33, 40, 77, 78, 84, 96, 115, 118, 120, 179, 180, 189, 190, 191, 192, 193, 194, 195, 203, 204, 220, 227, 228, 229, 238, 332, 342, 354, 355, 361, 371, 401, 403, 406, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "22": [32, 179, 194, 332, 336, 345, 408, 412, 421, 422], "25": [32, 179, 234, 332, 336, 339, 357, 359, 399, 400, 421, 422], "execute_with_gradi": [32, 41, 42, 43, 55, 303, 433], "multi_head_attent": [32, 35, 319], "func": [32, 74, 75, 129, 173, 239, 246, 303, 307, 381, 394], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 96, 113, 114, 129, 173, 239, 241, 246, 254, 256, 377, 378, 379, 380, 381, 387, 391, 392, 393], "xs": [32, 129, 152, 156, 158, 159, 160, 239, 240, 244, 303, 307, 361, 363], "retain_grad": [32, 303, 307], "dy": [32, 303, 307], "dx": [32, 303, 307], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 433, 470, 474], "redund": 32, "scale": [32, 129, 171, 172, 303, 311, 319, 327, 330, 331, 399, 400, 454, 462, 465, 470, 473], "num_head": [32, 319, 330, 454, 465], "mask": [32, 319, 330, 331], "to_q_fn": [32, 319, 330], "to_kv_fn": [32, 319, 330], "to_out_fn": [32, 35, 319, 330], "to_q_v": [32, 319, 330], "to_kv_v": [32, 319, 330], "to_out_v": [32, 319, 330], "measur": [32, 319, 330, 454, 465], "dot": [32, 319, 330, 331, 332, 352, 354, 454, 465], "product": [32, 179, 223, 239, 251, 319, 330, 331, 332, 334, 340, 345, 352, 354, 421, 422, 426, 454, 465], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": [33, 96, 113], "int16": [33, 96, 113, 421, 426, 428], "int32": [33, 96, 113, 239, 298, 361, 365, 421, 426, 428], "int64": [33, 96, 113, 179, 193, 408, 409, 410, 421, 426, 428], "uint8": [33, 96, 113], "uint16": [33, 96, 114, 421, 426, 428], "uint32": [33, 96, 114, 421, 426, 428], "uint64": [33, 96, 114, 421, 426, 428], "bfloat16": [33, 96, 113], "float16": [33, 96, 114], "float64": [33, 96, 102, 113], "deriv": [33, 34, 40, 42, 77, 81, 85, 91, 95, 303, 305, 306, 308, 310, 311, 312, 381, 383, 393, 466, 470, 474, 476], "constructor": [33, 34, 40, 239, 242, 476, 477], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 433, 466, 467, 470, 474], "valid": [33, 38, 96, 106, 319, 320, 321, 322, 323, 324, 325, 326, 361, 373, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461], "invalid": [33, 332, 354, 430, 431, 432], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 96], "broadcast_to": [33, 96], "result_typ": [33, 96], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 239, 256, 285, 286, 430, 431, 432, 433], "overflow": [33, 179, 183, 421, 428], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 399, 400], "scalar": [33, 38, 43, 55, 77, 85, 239, 282, 299, 302, 332, 355], "default_int_dtyp": [33, 96], "default_float_dtyp": [33, 96], "settabl": [33, 34], "set_default_int_dtyp": [33, 96], "set_default_float_dtyp": [33, 96], "arang": [33, 77, 86, 87, 421, 422, 433], "dim": [33, 239, 282, 454, 465], "popul": [33, 34, 38, 401, 402, 421, 427, 429], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 433], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 433], "nd": [33, 34, 35, 38, 43, 433], "One": [33, 38, 40, 41, 239, 256, 361, 369, 401, 403], "deleg": 33, "fill_valu": [33, 77, 84, 85, 179, 206], "shape_to_tupl": [33, 239], "item": [33, 38, 40, 41, 43, 96, 107, 129, 138, 139, 141, 148, 150, 152, 154, 156, 160, 239, 249, 267, 293, 294, 381, 386, 387, 388, 389, 393, 397, 398, 433, 466, 467], "as_n": [33, 96, 107, 108, 109, 110, 129, 148, 149, 170], "idx": [34, 40, 239, 241], "tpu": [34, 129, 151, 176], "get_all_ivy_arrays_on_dev": [34, 129], "aliv": [34, 129, 163, 167, 169, 239, 263, 281, 283], "total_mem_on_dev": [34, 129], "amount": [34, 129, 175, 357, 358, 359, 360], "memori": [34, 35, 53, 55, 129, 147, 168, 173, 175, 178, 319, 329, 433], "dev_util": [34, 129], "num_cpu_cor": [34, 129], "default_devic": [34, 38, 129, 167, 170, 177], "random_uniform": [34, 42, 401, 433], "dual": 34, "thrown": [34, 55, 239, 273], "rare": [34, 55], "set_default_devic": [34, 129, 177], "overwrit": [35, 38, 129, 173], "program": 35, "strictli": 35, "inplace_upd": [35, 239, 443, 444], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 239, 273], "val": [35, 40, 239, 271, 272, 273, 287, 288], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 239], "is_vari": [35, 303], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 96, 102], "inclus": [35, 77, 78, 401, 403], "omit": [35, 36, 413, 414, 415, 417], "unspecifi": [35, 179, 227, 228, 332, 337, 361, 373], "predominantli": [35, 54], "math": [35, 43, 433], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 332, 337, 340, 377, 378, 379, 380], "third": [35, 55, 332, 350, 413, 414], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 361, 433], "asarrai": [35, 77, 319, 320, 413, 415], "equival": [35, 41, 43, 77, 78, 179, 193, 218, 219, 228, 332, 343, 346, 349, 355], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 303, 317, 443, 444], "posit": [36, 41, 54, 76, 77, 82, 96, 112, 129, 153, 157, 161, 179, 180, 207, 208, 223, 228, 239, 260, 332, 333, 361, 365, 370, 401, 406, 408, 411, 430, 431, 432, 443, 444], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 381, 382, 392], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 421, 428], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "sound": 37, "higher": [37, 38, 43, 55, 303, 306, 308, 310, 311, 312], "overview": [37, 54], "handler": [37, 39, 43, 433], "fledg": [38, 39], "cuda": [38, 41, 55, 77, 86, 87, 129, 138, 145, 170, 239, 261, 262, 282, 285, 286, 401, 402, 403, 405, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "syntact": [38, 43], "x_min": [38, 43, 361, 362], "x_max": [38, 43, 361, 362], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 179, 227, 228, 413, 414, 415, 417], "fit": [38, 361, 368], "logspac": [38, 77], "construct": [38, 39, 42, 43, 361, 375, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "stop": [38, 55, 77, 78, 86, 87, 129, 144, 173, 303, 306, 308, 310, 311, 312, 314, 377, 378, 379, 380, 470, 471, 472, 473, 474, 475], "num": [38, 77, 86, 87], "power_seq": 38, "linspac": [38, 77, 78, 433], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 77, 78, 86, 87, 332, 354, 361, 362, 373, 401, 403, 405, 430, 431, 432], "edg": [38, 43, 361, 362, 364, 376, 433], "wise": [38, 43, 66, 67, 68, 69, 70, 71, 72, 73, 179, 180, 181, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 235, 239, 259, 361, 362], "larger": [38, 43, 96, 112, 361, 362, 370, 421, 427, 429], "param": [38, 43, 239, 241, 261, 262], "minimum": [38, 43, 129, 179, 180, 239, 264, 265, 287, 288, 293, 294, 361, 362, 408, 410, 421, 423, 425, 433], "ml_framework": [38, 43, 77, 78], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 129, 158, 239, 260, 361, 363, 433], "framework_handl": 38, "face": 38, "verbos": [38, 433, 480], "cprint": [38, 479], "framework_stack": 38, "stack": [38, 77, 92, 93, 332, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 350, 351, 353, 361, 381, 382, 391, 392, 433, 454, 463], "_determine_framework_from_arg": 38, "valueerror": [38, 361, 372], "get_framework": 38, "neither": [38, 179, 183, 223], "illustr": [38, 54], "un": [38, 96, 116], "lstm_updat": [38, 319], "nn": [38, 43, 77, 88, 433], "init_h": [38, 319, 329], "init_c": [38, 319, 329], "kernel": [38, 55, 319, 329], "recurrent_kernel": [38, 319, 329], "bia": [38, 42, 319, 328, 329, 454, 455, 456, 457, 458, 459, 460, 461, 464], "recurrent_bia": [38, 319, 329], "x_shape": 38, "batch_shap": [38, 40, 43, 239, 282, 319, 329, 330, 331, 332, 356, 401, 402, 454, 463], "timestep": [38, 319, 329, 454, 463], "input_channel": [38, 42, 454, 455, 456, 457, 458, 459, 460, 463, 464], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 319, 329], "wh": 38, "lstm": [38, 319, 329, 454], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 319, 329], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 239, 433], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 361, 371], "sigmoid": [38, 41, 42, 66, 433], "ft": 38, "gt": 38, "tanh": [38, 66, 179, 433], "ot": 38, "expand_dim": [38, 41, 361, 433], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 433], "reduce_sum": [38, 433], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 239, 244, 303, 305, 306, 308, 310, 311, 312, 319, 320, 321, 322, 323, 324, 325, 326], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 239, 275, 276, 278, 332], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 96, 113, 114, 129, 138, 139, 239, 241, 300, 381, 382, 387, 388, 389, 391, 392, 393, 436, 438], "example_input": [38, 74, 75], "static_argnum": [38, 74, 75], "static_argnam": [38, 74, 75], "jit": [38, 55], "low": [38, 401, 403, 405], "frontend": 39, "treat": [39, 43, 74, 75], "primit": [39, 55], "describ": [39, 43, 421, 422, 426, 427, 428], "hierarch": [39, 41, 42], "solv": [39, 54, 332], "straight": [40, 433], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 239, 245], "is_native_arrai": [40, 239], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 129, 173, 239, 256, 332, 347, 408, 409, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "mul": 40, "len": [40, 43, 77, 88], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 129], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 332, 347, 350], "size": [40, 41, 77, 86, 87, 129, 171, 172, 173, 239, 285, 291, 319, 331, 332, 336, 341, 345, 347, 350, 354, 361, 365, 370, 371, 372, 401, 402, 404, 405, 408, 409, 411, 430, 431, 432, 454, 455, 456], "matrix_transpos": [40, 332], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 239, 433], "genuin": 40, "some_method": 40, "similarli": [40, 77, 88], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 179, 193, 201, 227, 239, 264, 287, 294, 332, 342, 445], "enforc": 40, "notic": 40, "appear": [40, 361, 365], "inv": [40, 332, 433], "invers": [40, 54, 179, 181, 182, 184, 185, 186, 187, 188, 332, 339, 346], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 381, 394], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "compartment": 40, "public": [40, 239, 249], "abc": [40, 129, 138, 144, 239, 258, 466, 467, 470, 474], "newshap": [40, 361, 369], "new_shap": 40, "transpos": [40, 43, 129, 160, 319, 321, 323, 325, 332, 344, 346, 433, 454, 456, 458, 460], "flip": [40, 41, 43, 179, 190, 361, 368, 433], "tidi": 40, "20": [40, 179, 194, 201, 229, 332, 336, 345, 352, 401, 403, 408, 411, 412, 421, 422], "shorter": 40, "crystal": 40, "41": [40, 179, 194, 332, 333, 421, 428], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 129, 172], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 433, 439], "hold": [41, 239, 285, 286], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 303, 306, 308, 310, 311, 312, 470, 471, 472, 473, 474, 475], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": 41, "hdf5": [41, 466, 467], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 381, 394], "batch_siz": [41, 319, 320, 321, 322, 323, 324, 325, 326, 401, 402], "dir": 41, "dataset": [41, 53, 433], "dropout": [41, 319, 454, 465], "adam": [41, 42, 43, 303, 305, 306, 310, 433, 470, 472], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 76], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 332, 355], "depth": [41, 42, 43, 54, 129, 153, 157, 161, 239, 267, 282, 381, 393, 466, 467], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 466, 467], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": 41, "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 77, 78, 88, 332, 350, 351, 361, 369], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 433], "img_min": 41, "reduce_min": [41, 433], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 361, 373, 399, 400, 401, 404, 468, 469], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 129, 138, 239], "queue": [41, 129, 138, 139, 239, 284, 289], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 433], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 66, 68, 179, 194, 319, 322, 325, 332, 345, 408, 412, 421, 422], "batch_slic": 41, "model": [41, 42, 433], "mymodel": [41, 433], "linear0": [41, 42, 433], "linear1": [41, 42, 433], "relu": [41, 42, 66, 67, 68, 433], "x_in": [41, 42, 43, 433], "001": [41, 42, 399, 400], "loss_fn": [41, 42, 43, 433], "to_numpi": [41, 239, 433], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 454, 455, 456, 457, 458, 459, 460, 463, 464], "with_bia": [42, 454, 464], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 319, 329, 454, 463], "fed": [42, 129, 173], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "glorotuniform": [42, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "bias_initi": [42, 454, 455, 456, 457, 458, 459, 460, 461, 464], "_w_init": 42, "_b_init": 42, "create_vari": [42, 445], "var_shap": [42, 445], "fan_out": [42, 445], "fan_in": [42, 445], "uniform": [42, 401, 402, 403, 405, 445, 447, 448, 451, 452], "fan_mod": [42, 445], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 377, 379], "descent": [42, 303, 308, 470, 475], "lar": [42, 303, 310, 311, 470], "lamb": [42, 303, 310, 470], "beta1": [42, 303, 305, 306, 310, 470, 471, 472], "beta2": [42, 303, 305, 306, 310, 470, 471, 472], "999": [42, 303, 305, 306, 310, 470, 471, 472], "07": [42, 303, 305, 306, 310, 357, 358, 359, 360, 470, 471, 472], "stop_gradi": [42, 129, 173, 303, 306, 308, 310, 311, 312, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "compile_on_next_step": [42, 466, 467, 470, 471, 472, 473, 474, 475], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 470, 474], "new_v": 42, "adam_upd": [42, 303], "_lr": 42, "isinst": [42, 43, 239, 297], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 470, 471, 472, 473, 474, 475], "mw": [42, 303, 305, 306], "vw": [42, 303, 305, 306], "pre": [43, 55, 129], "captur": 43, "one_hot": [43, 239, 433], "sparse_funct": 43, "num_class": [43, 401, 402], "ey": [43, 77, 319, 322, 326], "cumprod": [43, 239], "ones_lik": [43, 77, 433], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 399, 400, 468, 469], "to_ivy_modul": [43, 443], "thinli": 43, "whilst": 43, "preserv": [43, 55, 303, 314, 361, 366], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 319, 327, 328], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 66, 72, 332, 345, 401, 406, 421, 422], "init": 43, "update_rul": 43, "01": [43, 179, 229], "tree_multimap": 43, "mechan": [53, 55, 433], "vision": [53, 433], "robot": [53, 433], "focus": 54, "field": [54, 332, 337, 347, 350, 413, 414, 415], "perfect": 54, "3d": [54, 454, 459, 460], "differenti": 54, "demo": [54, 433], "orient": 54, "pose": 54, "represent": [54, 76, 96, 100, 101, 112, 115, 129, 145, 146, 179, 180, 183, 189, 192, 194, 220, 223, 239, 241, 292, 297], "largest": [54, 96, 112, 115, 332, 350], "euler": [54, 76], "quaternion": 54, "rotat": 54, "matric": [54, 77, 88, 92, 93, 319, 328, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 349, 350, 351, 353], "vector": [54, 77, 88, 239, 248, 319, 328, 332, 334, 337, 340, 345, 350, 351, 354, 355, 356, 454, 464], "angl": [54, 179, 187, 197, 232], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 332, 349], "warp": 54, "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 319, 433, 440, 454], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 433], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 239, 251, 252], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 74, 75, 381, 391, 392, 408, 412], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 179, 228, 332, 354, 430, 431, 432], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 96, 112, 115, 179, 227, 421, 426, 428], "gold": 55, "dex": 55, "phase": 55, "lax": 55, "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 129, 138, 139], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 381, 383], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "gelu": [66, 440], "gaussian": [66, 67], "leaki": [66, 67, 68], "leaky_relu": [66, 433], "alpha": [66, 68], "rectifi": [66, 68, 69], "slope": [66, 68], "39": [66, 68, 179, 201, 332, 345, 421, 422], "85": [66, 68, 179, 194], "48": [66, 68, 332, 345, 421, 422], "88": [66, 68, 179, 194, 332, 345, 421, 422], "269": [66, 70], "731": [66, 70], "881": [66, 70], "214": [66, 70], "978": [66, 70], "891": [66, 70], "softmax": [66, 319, 330, 331, 433], "422": [66, 71], "155": [66, 71], "0768": [66, 71], "231": [66, 71], "693": [66, 71, 357, 360], "49": [66, 71, 421, 422], "147": [66, 71], "363": [66, 71], "softplu": [66, 433], "3461": [66, 72], "6491": [66, 72], "535": [66, 72], "hyperbol": [66, 73, 179, 182, 185, 188, 197, 232, 237], "55": [66, 73, 319, 325, 332, 345, 421, 422], "501": [66, 73], "762": [66, 73], "964": [66, 73], "faster": [74, 75], "invoc": [74, 75], "718281828459045": 76, "inf": [76, 239, 268, 302, 332, 355], "newaxi": 76, "alia": 76, "pi": 76, "141592653589793": 76, "mathemat": [76, 179, 183, 187, 202, 223, 332, 355], "evenli": [77, 78, 86, 87, 361, 371], "half": [77, 78, 401, 403, 405], "word": [77, 78, 401, 405, 443, 444], "chosen": [77, 78, 179, 187, 408, 412], "distanc": [77, 78], "adjac": [77, 78], "dimension": [77, 78, 82, 88, 332, 334, 335, 340, 343, 345, 346, 354, 355, 361, 371, 408, 409, 410, 411, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "ceil": [77, 78, 179, 433], "datatyp": [77, 79, 89, 96, 106, 117, 118, 119], "interpret": [77, 79, 89], "fill": [77, 80, 84, 85, 90, 91, 94, 95, 401, 403], "uniniti": [77, 80, 81], "empty_lik": 77, "n_row": [77, 82], "n_col": [77, 82], "diagon": [77, 82, 92, 93, 332, 353], "elsewher": [77, 82, 408, 412], "row": [77, 82, 332, 349, 350, 401, 402, 408, 411], "column": [77, 82, 332, 337, 347, 349, 350], "upper": [77, 82, 93, 332, 333, 347, 401, 405], "from_dlpack": 77, "__dlpack__": [77, 83, 129, 174], "interchang": [77, 83, 361, 374], "full_lik": 77, "endpoint": [77, 86], "entri": [77, 86, 87, 361, 371, 381, 394], "meshgrid": 77, "xy": [77, 88], "coordin": [77, 88, 179, 187], "cartesian": [77, 88], "matrix": [77, 88, 92, 93, 239, 240, 247, 319, 328, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 353, 356, 454, 464], "ij": [77, 88, 421, 422], "rank": [77, 88, 239, 301, 332, 334, 343, 347, 349, 353, 354, 355, 361, 364, 365, 373, 376, 408, 411, 430, 431, 432], "ni": [77, 88], "xi": [77, 88], "n1": [77, 88], "n2": [77, 88], "n3": [77, 88], "accordingli": [77, 88, 179, 202, 332, 355, 408, 410, 413, 414, 415, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "xv": [77, 88], "yv": [77, 88], "tril": 77, "triangular": [77, 92, 93, 332, 333, 347], "innermost": [77, 92, 93, 332, 333, 335, 336, 337, 338, 339, 343, 344, 346, 347, 349, 350, 351, 353], "mxn": [77, 92, 93, 332, 336, 343, 344, 346, 347, 351, 353], "triu": 77, "zeros_lik": [77, 361, 362, 433], "defaultdtyp": [96, 97], "defaultfloatdtyp": [96, 98], "float_dtyp": [96, 108, 122], "defaultintdtyp": [96, 99], "as_ivy_dtyp": 96, "dtype_in": [96, 100, 101, 111, 116, 117, 118, 128], "as_native_dtyp": 96, "broadcast_arrai": 96, "incompat": [96, 104], "from_": [96, 105], "occur": [96, 105, 408, 409, 410, 413, 414, 415, 417], "closest_valid_dtyp": 96, "closest": [96, 106, 179, 195, 203, 204, 229, 238], "floatdtyp": [96, 108], "int_dtyp": [96, 109, 123], "intdtyp": [96, 109], "dtype_bit": 96, "finfo": 96, "followng": [96, 112], "occupi": [96, 112, 115, 239, 285, 286], "ep": [96, 112, 332, 343, 346], "smallest": [96, 112, 115, 179, 195], "max": [96, 112, 115, 179, 221, 239, 247, 248, 256, 285, 286, 332, 343, 346, 421, 470, 472], "min": [96, 112, 115, 179, 222, 239, 256, 285, 286, 293, 332, 347, 350, 351, 355, 421], "smallest_norm": [96, 112], "precis": [96, 112, 179, 223, 233], "function_supported_dtyp": 96, "acosh": [96, 113, 114, 179, 433], "function_unsupported_dtyp": 96, "iinfo": 96, "encapsul": [96, 115], "invalid_dtyp": 96, "is_float_dtyp": 96, "is_int_dtyp": [96, 239, 299], "promote_typ": 96, "type1": [96, 119], "type2": [96, 119], "arrays_and_dtyp": [96, 120], "type_promote_arrai": 96, "ret1": [96, 124], "ret2": [96, 124], "unset_default_dtyp": 96, "unset_default_float_dtyp": 96, "unset_default_int_dtyp": 96, "valid_dtyp": 96, "noinspect": [97, 98, 99, 130, 304], "pyshadowingnam": [97, 98, 99, 130, 304], "defaultdevic": [129, 130], "__enter__": 129, "_dev": 129, "initialis": 129, "devcloneditem": [129, 151], "multidevitem": [129, 131, 134], "devclonedit": 129, "multidevit": [129, 132, 135, 138, 139, 143], "devclonednest": 129, "max_depth": [129, 133, 136, 143, 153, 157, 161, 239, 267, 381, 393], "multidevnest": [129, 133, 136], "devdistitem": 129, "devdistit": 129, "devdistnest": 129, "devmanag": [129, 137], "dev_mapp": 129, "da_dim_s": 129, "safety_factor": 129, "min_dev_dim_s": 129, "max_dev_dim_step_ratio": 129, "min_unit_dev_tune_step": 129, "min_sf_tune_step": 129, "starting_split_factor": 129, "max_split_factor_step_s": 129, "05": [129, 399, 400], "tune_dev_alloc": 129, "tune_dev_split": 129, "mapper": [129, 138, 139], "receivess": 129, "ratio": [129, 303, 310, 470, 472], "safe": [129, 138], "oom": 129, "tune": 129, "da_tune_step": 129, "dim_siz": 129, "ds_tune_step": 129, "to_clon": 129, "to_distribut": 129, "multidevic": [129, 138], "parallel": [129, 138, 139], "mutlidevic": [129, 138], "repeated_config_check": 129, "tune_step": 129, "devmapp": [129, 139], "ret_fn": [129, 138, 139], "queue_class": [129, 138, 139], "worker_class": [129, 138, 139], "timeout": [129, 138, 139, 239, 284, 289], "worker": [129, 138, 139], "used_dev": [129, 138], "split_factor": [129, 138], "sf": [129, 138], "devmappermultiproc": 129, "multidev": [129, 140, 141, 142, 161], "at_dev": [129, 142, 143], "profil": 129, "save_dir": [129, 144], "as_native_dev": 129, "clear_mem_on_dev": 129, "to_devic": [129, 148], "dev_clon": 129, "deviceic": [129, 150], "dev_clone_arrai": 129, "dev_clone_it": 129, "dev_clone_nest": 129, "dev_dist": 129, "dev_dist_arrai": 129, "dev_dist_it": 129, "dev_dist_nest": 129, "dev_unifi": 129, "concat": [129, 158, 159, 160, 161, 173, 239, 260, 361, 433], "concatten": [129, 158, 159, 160, 161, 173], "dev_unify_arrai": 129, "dev_unify_it": 129, "dev_unify_nest": 129, "spread": [129, 161], "139740789224448": [129, 163], "gpu_is_avail": 129, "physic": [129, 165], "num_ivy_arrays_on_dev": 129, "x3": [129, 167], "x4": [129, 167], "percent_used_mem_on_dev": 129, "process_specif": [129, 168, 178], "percentag": [129, 168], "ram": [129, 168, 175, 178], "alon": [129, 168, 178], "print_all_ivy_arrays_on_dev": 129, "attr_onli": [129, 169], "set_split_factor": 129, "chunk": [129, 171, 172, 173], "split_func_cal": 129, "max_chunk_s": [129, 173], "chunk_siz": [129, 173], "input_ax": [129, 173], "output_ax": [129, 173], "feed": [129, 173], "fist": [129, 173], "stream": [129, 174], "caveat": [129, 174], "portabl": [129, 174, 433], "gb": [129, 175, 178], "tpu_is_avail": 129, "unset_default_devic": 129, "reset": [129, 177], "used_mem_on_dev": 129, "magnitud": [179, 180, 183, 223, 332, 350, 351], "aco": [179, 433], "princip": [179, 181, 184, 186], "cosin": [179, 181, 182, 196, 197], "greater": [179, 181, 184, 187, 191, 193, 203, 204, 227, 228, 230, 238, 332, 334, 361, 372, 401, 405], "x1_i": [179, 183, 187, 189, 191, 192, 193, 194, 198, 199, 204, 205, 206, 210, 211, 216, 217, 219, 220, 223, 225, 227, 228, 235], "x2_i": [179, 183, 187, 189, 191, 192, 193, 194, 198, 199, 204, 205, 206, 210, 211, 216, 217, 219, 220, 223, 225, 227, 228, 235], "finit": [179, 183, 187, 207, 223, 227, 228], "nonzero": [179, 183, 223, 408], "nor": [179, 183, 223], "nearest": [179, 183, 223, 229], "2019": [179, 183, 202, 223], "commut": [179, 183], "asin": [179, 433], "sine": [179, 184, 185, 231, 232], "57": [179, 184, 194, 197], "524": [179, 184], "644": [179, 184], "201": [179, 184, 229], "305": [179, 184], "412": [179, 184], "asinh": [179, 433], "atan": [179, 433], "atan2": [179, 433], "quotient": [179, 187], "notat": [179, 187, 421, 422], "denot": [179, 187], "pair": [179, 187, 319, 331, 332, 334], "quadrant": [179, 187], "3\u03c0": [179, 187], "atanh": [179, 433], "549": [179, 188], "bitwise_and": 179, "bitwis": [179, 189, 192, 194, 220], "AND": [179, 189, 217, 430, 431], "binari": [179, 189, 192, 194, 220, 357, 358], "bitwise_invert": 179, "invert": [179, 190], "bitwise_left_shift": 179, "bitwise_or": 179, "bitwise_right_shift": 179, "arithmet": [179, 193, 421, 424], "propag": [179, 193, 421, 423, 424, 425, 427, 428, 429], "thu": [179, 193, 227, 228, 332, 337], "floor": [179, 193, 239, 259, 433], "lh": [179, 193], "rh": [179, 193], "bitwise_xor": 179, "xor": [179, 194, 220], "78": [179, 194, 332, 345, 421, 422], "91": [179, 194, 332, 345, 421, 422], "23": [179, 194, 319, 325, 332, 336, 408, 412], "66": [179, 194, 332, 345, 421, 422], "77": [179, 194, 332, 345, 421, 422], "79": [179, 194], "89": [179, 194, 332, 352, 421, 428], "98": [179, 194, 332, 345, 408, 412, 421, 422], "26": [179, 194, 319, 326, 332, 336, 345, 352, 421, 422], "21": [179, 194, 239, 251, 332, 336, 345, 357, 360, 421, 422], "34": [179, 194], "24": [179, 194, 239, 251, 332, 336, 345, 421, 422], "51": [179, 194], "27": [179, 194, 197, 319, 331, 332, 345, 421, 422], "74": [179, 194], "59": [179, 194], "416": [179, 196], "cosh": [179, 433], "76": [179, 197, 332, 352, 421, 422], "40": [179, 197, 332, 345, 421, 422], "122": [179, 197], "368": [179, 197], "670": [179, 197], "202": [179, 197, 229], "548": [179, 197], "1490": [179, 197], "dividend": [179, 198, 228], "divisor": [179, 198, 228, 303, 305, 306, 310, 421, 427, 429, 470, 471, 472], "erf": 179, "gauss": [179, 200], "exponenti": [179, 200, 201, 216, 227], "exp": [179, 202, 216, 433], "logarithm": [179, 201, 212, 213, 214, 215, 216, 332, 348], "72": [179, 201, 332, 345, 421, 422], "expm1": 179, "accur": [179, 202], "fdlibm": [179, 202], "compliant": [179, 202, 218, 219, 421, 423, 424, 425], "greatest": [179, 203, 204], "floor_divid": 179, "greater_equ": 179, "isfinit": 179, "out_i": [179, 207, 208, 209], "isinf": 179, "isnan": 179, "less_equ": 179, "log10": 179, "log1p": 179, "log2": 179, "logaddexp": 179, "logical_and": [179, 433], "logical_not": [179, 433], "logical_or": [179, 433], "logical_xor": 179, "threshold": [179, 221, 222], "exce": [179, 222], "y_i": [179, 224], "not_equ": 179, "pow": 179, "expon": [179, 227, 239, 294], "versu": [179, 227], "odd": [179, 227], "remaind": [179, 239, 259, 361, 371], "modulu": [179, 228], "primarili": [179, 228], "5654": [179, 229], "034": [179, 229], "433": [179, 229], "343": [179, 229], "44": [179, 229, 234, 332, 345, 408, 412, 421, 422], "30": [179, 229, 332, 345, 421, 422, 445, 451], "81": [179, 229, 234, 421, 422], "527": [179, 229], "301": [179, 229], "sinh": [179, 433], "sqrt": [179, 332, 355], "squar": [179, 233, 319, 322, 332, 333, 335, 337, 338, 339, 342, 348, 349, 350], "indistinguish": [179, 233], "infinit": [179, 233], "09": [179, 234, 319, 331], "61": [179, 234, 357, 358], "546": [179, 236], "842": [179, 236], "916": [179, 236, 357, 358], "96": [179, 236, 332, 345, 421, 422], "37": [179, 236, 399, 400], "996": [179, 236], "328": [179, 236], "trunc": 179, "decim": [179, 238], "all_equ": 239, "equality_matrix": [239, 240], "arg_info": 239, "inspect": [239, 241, 437, 438], "arg_nam": 239, "array_equ": 239, "arrays_equ": 239, "assert_supports_inplac": 239, "later": [239, 246], "clip_matrix_norm": 239, "max_norm": [239, 247, 248], "downscal": [239, 247, 248], "clip_vector_norm": 239, "container_typ": 239, "copy_arrai": 239, "60": [239, 251, 332, 345, 421, 422], "cumsum": [239, 433], "current_backend_str": 239, "default_v": [239, 254], "catch_except": [239, 254], "rev": [239, 254], "with_cal": [239, 254], "einops_rearrang": 239, "axes_length": [239, 255, 256, 257], "rearrang": [239, 255, 257], "arrang": [239, 255], "einops_reduc": 239, "einops_repeat": 239, "123": [239, 258], "floormod": [239, 433], "mod": [239, 259], "fourier_encod": 239, "max_freq": [239, 260], "num_band": [239, 260], "flatten": [239, 260, 332, 345, 355, 361, 368, 370, 408, 409, 410, 413, 414, 415, 417], "pad": [239, 260, 319, 320, 321, 322, 323, 324, 325, 326, 361, 364, 376, 454, 455, 456, 457, 458, 459, 460, 461], "fourier": [239, 260], "band": [239, 260], "linearli": [239, 260, 332, 349], "oppos": [239, 260], "geometr": [239, 260], "gather": [239, 262], "slice": [239, 261, 262, 381, 390], "gather_nd": [239, 433], "get_all_arrays_in_memori": 239, "get_min_bas": 239, "get_min_denomin": 239, "get_num_dim": [239, 433], "as_arrai": [239, 266, 291], "get_referrers_recurs": 239, "seen_set": [239, 267], "local_set": [239, 267], "has_nan": 239, "include_inf": [239, 268, 302], "indices_wher": [239, 433], "inplace_arrays_support": 239, "inplace_decr": 239, "decrement": [239, 271], "inplace_incr": 239, "inplace_variables_support": 239, "is_arrai": 239, "is_ivy_contain": 239, "match_kwarg": 239, "allow_dupl": [239, 279], "forkserv": [239, 280], "spawn": [239, 280], "num_arrays_in_memori": 239, "hot": [239, 282], "scatter": [239, 282, 285, 286], "overrid": [239, 282], "print_all_arrays_in_memori": 239, "queue_timeout": 239, "scatter_flat": 239, "flat": [239, 285, 361, 368], "set_min_bas": 239, "set_min_denomin": 239, "set_queue_timeout": 239, "set_tmp_dir": 239, "tmp_dr": [239, 290], "temporari": [239, 290], "min_denomin": [239, 293], "stabil": [239, 293, 294, 418, 419, 420], "_min_denomin": [239, 293], "stable_pow": 239, "min_bas": [239, 294], "_min_bas": [239, 294, 399, 400, 468, 469], "supports_inplac": 239, "tmp_dir": 239, "to_list": [239, 433], "100000023841858": [239, 297], "200000047683716": [239, 297], "299999952316284": [239, 297], "400000095367432": [239, 297], "599999904632568": [239, 297], "101": [239, 298], "to_scalar": 239, "try_else_non": 239, "keepdim": [239, 301, 332, 341, 355, 408, 409, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "unpack": [239, 301], "value_is_nan": 239, "gradienttrack": [303, 304], "with_grad": [303, 313], "adam_step": 303, "dcdw": [303, 305, 306, 308, 310, 311], "delta": [303, 305], "cost": [303, 305, 306, 308, 310, 311, 312, 377, 378, 379, 380], "ws": [303, 305, 306, 308, 310, 311, 312], "en": [303, 305, 306], "wikipedia": [303, 305, 306], "wiki": [303, 305, 306], "stochastic_gradient_desc": [303, 305, 306], "dc": [303, 305, 306, 308, 310, 311, 312], "dw": [303, 305, 306, 308, 310, 311, 312], "averag": [303, 305, 306, 310, 377, 378, 379], "forget": [303, 305, 306, 310, 470, 471, 472], "mw_tm1": [303, 306, 310], "vw_tm1": [303, 306, 310], "rate": [303, 306, 308, 310, 311, 312, 377, 378, 379, 380, 454, 465, 470, 471, 472, 473, 474, 475], "ws_new": [303, 306, 308, 310, 311, 312], "retain": [303, 307], "gradient_descent_upd": [303, 377, 378, 379, 380, 433], "lamb_upd": 303, "max_trust_ratio": [303, 310, 470, 472], "decay_lambda": [303, 310, 311, 470, 472, 473], "trust": [303, 310, 470, 472], "decai": [303, 310, 311, 470, 472, 473], "lars_upd": 303, "layerwis": [303, 311, 470, 473], "optimizer_upd": 303, "effective_grad": [303, 312], "set_with_grad": 303, "preserve_typ": [303, 314], "unset_with_grad": 303, "variable_data": 303, "conv1d": [319, 454], "stride": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "data_format": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "nwc": [319, 320, 321, 454, 455, 456], "dilat": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "convolut": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "d_in": [319, 320, 321, 322, 323, 324, 325], "fw": [319, 320, 321, 322, 323, 324, 325, 326], "d_out": [319, 320, 321, 322, 323, 324, 325], "slide": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "ncw": [319, 320, 321, 454, 455, 456], "wio": [319, 320], "conv1d_transpos": 319, "output_shap": [319, 321, 323, 325, 454, 456, 458, 460], "conv2d": [319, 433, 454], "nhwc": [319, 322, 323, 326, 454, 457, 458, 461], "fh": [319, 322, 323, 324, 325, 326], "nchw": [319, 322, 323, 326, 454, 457, 458, 461], "hwio": [319, 322], "random_norm": [319, 322, 325, 326, 332, 350, 401, 413, 414], "unequ": [319, 322], "28": [319, 322, 325, 326, 332, 345, 421, 422], "unsqueez": [319, 322, 326], "conv2d_transpos": 319, "conv3d": [319, 454], "ndhwc": [319, 324, 325, 454, 459, 460], "volum": [319, 324], "fd": [319, 324, 325], "ncdhw": [319, 324, 325, 454, 459, 460], "dhwio": [319, 324], "conv3d_transpos": 319, "256": [319, 325], "258": [319, 325], "128": [319, 325, 332, 345], "depthwise_conv2d": [319, 433], "depthwis": [319, 326, 454, 461], "333": [319, 326], "inp": [319, 326], "prob": [319, 327, 401, 402, 454, 462], "randomli": [319, 327, 454, 462], "bernoulli": [319, 327], "out_featur": [319, 327, 328], "incom": [319, 328], "outer_batch_shap": [319, 328], "inner_batch_shap": [319, 328], "in_featur": [319, 328], "cell": [319, 329, 454, 463], "num_queri": [319, 330, 331], "x_feat_dim": [319, 330], "num_kei": [319, 330, 331], "cont_feat_dim": [319, 330], "numhead": [319, 330], "feat_dim": [319, 330, 331], "out_feat_dim": [319, 330], "scaled_dot_product_attent": 319, "score": [319, 331], "04": [319, 331], "03": [319, 331, 399, 400], "35": [319, 331, 332, 334, 408, 412, 421, 422], "08": [319, 331], "choleski": 332, "decomposit": [332, 333, 347, 350], "symmetr": [332, 333, 337, 338, 356], "u": [332, 333, 350], "73": [332, 333, 399, 400], "577": [332, 333], "63": [332, 333, 345, 421, 422], "707": [332, 333], "cross": [332, 357, 358, 359, 360, 433], "vif": [332, 334], "det": 332, "92": [332, 335], "293": [332, 335], "46997": [332, 335], "offset": [332, 336, 353, 399, 400], "axis1": [332, 336, 361, 374], "axis2": [332, 336], "eigh": 332, "eigendecomposit": [332, 337], "qlq\u1d40": [332, 337], "orthogon": [332, 337], "eig": [332, 337], "namedtupl": [332, 337, 347, 350, 413, 414, 415], "eigenvalu": [332, 337, 338], "eigenvector": [332, 337], "eigvalsh": 332, "75": [332, 339, 345], "prepend": [332, 340], "matrix_norm": 332, "ord": [332, 341, 355], "fro": [332, 341], "matrix_pow": 332, "matrix_rank": 332, "rtol": [332, 343, 346], "singular": [332, 343, 346, 350, 351], "toler": [332, 343, 346], "largest_singular_valu": [332, 343, 346], "outer": [332, 377, 378, 379, 380], "array_lik": [332, 345], "33": [332, 345, 399, 400, 421, 422], "36": [332, 345, 421, 422], "45": [332, 345, 361, 371, 399, 400, 421, 422], "52": [332, 345, 413, 414, 421, 422], "50": [332, 345, 408, 411, 421, 422], "65": [332, 345, 421, 422], "84": [332, 345, 421, 422], "105": [332, 345, 357, 358], "112": [332, 345, 421, 422], "104": [332, 345, 421, 422], "120": [332, 345], "pinv": [332, 433], "moor": [332, 346], "penros": [332, 346], "pseudo": [332, 346], "qr": 332, "orthonorm": [332, 347, 350], "slogdet": 332, "2d": [332, 348, 454, 457, 458, 461], "logdet": [332, 348], "equat": [332, 349, 421, 422], "coeffici": [332, 349], "svd": [332, 433], "full_matric": [332, 350], "usvh": [332, 350], "vh": [332, 350], "hermitian": [332, 350], "descend": [332, 350, 351, 418, 419, 420], "et": [332, 350], "cetera": [332, 350], "adjoint": [332, 350], "reconstruct": [332, 350, 413, 414, 416], "reconstructed_x": [332, 350], "svdval": 332, "tensordot": 332, "contract": [332, 352, 421, 422], "doubl": [332, 352], "vecdot": 332, "vector_norm": 332, "singleton": [332, 355, 361, 372, 408, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "liter": [332, 355], "manhattan": [332, 355], "l2": [332, 355], "euclidean": [332, 355], "vector_to_skew_symmetric_matrix": [332, 433], "mathbf": [332, 356], "mathbb": [332, 356], "skew": [332, 356], "binary_cross_entropi": 357, "entropi": [357, 358, 359, 360], "predict": [357, 358, 359, 360], "smooth": [357, 358, 359, 360], "223": [357, 358], "357": [357, 358, 360], "511": [357, 358], "discret": [357, 359], "3862944": [357, 359], "35667497": [357, 359], "sparse_cross_entropi": 357, "spars": [357, 360], "logit": [357, 360], "793291": [357, 360], "512926": [357, 360], "join": [361, 363, 373, 433], "constant_pad": 361, "pad_width": [361, 364, 376], "before_1": [361, 364, 376], "after_1": [361, 364, 376], "before_n": [361, 364, 376], "after_n": [361, 364, 376], "insert": [361, 365, 381, 386, 408, 409], "manipulation_funct": [361, 365], "reorder": [361, 366], "permute_dim": 361, "permut": [361, 367, 374], "repetit": [361, 368, 375], "restor": [361, 370], "with_remaind": [361, 371], "classivi": [361, 371], "squeez": [361, 433], "famili": [361, 373], "intxx": [361, 373], "floatxx": [361, 373], "swapax": 361, "axis0": [361, 374], "tile": [361, 433], "rep": [361, 375], "zero_pad": [361, 433], "fomaml_step": 377, "inner_cost_fn": [377, 378, 379], "outer_cost_fn": [377, 378, 379], "inner_grad_step": [377, 378, 379, 380], "inner_learning_r": [377, 378, 379, 380], "inner_optimization_step": [377, 378, 379, 380], "inner_batch_fn": [377, 378, 379], "outer_batch_fn": [377, 378, 379], "average_across_step": [377, 378, 379], "inner_v": [377, 378, 379], "keep_inner_v": [377, 378, 379], "outer_v": [377, 378, 379], "keep_outer_v": [377, 378, 379], "return_inner_v": [377, 378, 379, 380], "num_task": [377, 378, 379, 380], "maml": [377, 378, 379], "recev": [377, 378, 379], "0x7f3ae2770dc0": [377, 378, 379, 380], "maml_step": 377, "rece": [377, 379], "reptile_step": 377, "cost_fn": [377, 380], "reptil": [377, 380], "receivng": [377, 380], "all_nested_indic": 381, "include_nest": [381, 382], "_index": [381, 382, 392], "_base": [381, 382, 391, 392], "copy_nest": 381, "include_deriv": [381, 383, 393], "to_mut": [381, 383, 393], "mutabl": [381, 383, 393], "insert_into_nest_at_index": 381, "insert_into_nest_at_indic": 381, "map_nest_at_index": 381, "map_nest_at_indic": 381, "multi_index_nest": 381, "nested_ani": 381, "check_nest": [381, 391, 392], "conditon": [381, 391, 392], "nested_indices_wher": 381, "to_ignor": [381, 392], "stop_after_n_found": [381, 392], "_depth": [381, 393], "_tuple_check_fn": [381, 393], "_list_check_fn": [381, 393], "_dict_check_fn": [381, 393], "nested_multi_map": 381, "key_chain": [381, 394], "to_appli": [381, 394], "prune_unappli": [381, 394], "prune": [381, 394, 395, 396], "leftmost": [381, 394], "nest0": [381, 394], "ivy_arrai": [381, 394], "funciton": [381, 394], "prune_nest_at_index": 381, "prune_nest_at_indic": 381, "set_nest_at_index": 381, "set_nest_at_indic": 381, "layer_norm": 399, "normalized_idx": [399, 400], "new_std": [399, 400, 468, 469], "mini": [399, 400, 468, 469], "gamma": [399, 400], "beta": [399, 400], "0976": [399, 400], "3452": [399, 400], "2740": [399, 400], "1047": [399, 400], "5886": [399, 400], "2732": [399, 400], "7696": [399, 400], "7024": [399, 400], "2518": [399, 400], "58": [399, 400, 413, 414], "283": [399, 400], "585": [399, 400], "909": [399, 400], "628": [399, 400], "997": [399, 400], "225": [399, 400], "425": [399, 400], "norm_idx": [399, 400], "228": [399, 400], "0285": [399, 400], "199": [399, 400], "204": [399, 400], "multinomi": 401, "population_s": [401, 402], "num_sampl": [401, 402], "draw": [401, 402, 404, 405], "unnorm": [401, 402], "drawn": [401, 402, 403, 404, 405], "home": [401, 402, 404, 405], "randint": [401, 433], "uniformli": [401, 403, 405], "highest": [401, 403], "parameter": [401, 404, 405], "6444774682897879": [401, 404], "811": [401, 404], "508": [401, 404], "564": [401, 404], "7268672": [401, 404], "968": [401, 404], "175": [401, 404, 413, 414], "064": [401, 404], "40935726": [401, 404], "556": [401, 404], "boundari": [401, 405], "26431865": [401, 405], "475": [401, 405], "878": [401, 405], "861": [401, 405], "89150229": [401, 405], "89629126": [401, 405], "94198485": [401, 405], "91405606": [401, 405], "72848724": [401, 405], "7550739": [401, 405], "624": [401, 405], "00109": [401, 405], "seed": [401, 433], "seed_valu": [401, 406], "shuffl": [401, 433], "argmax": [408, 433], "occurr": [408, 409, 410, 413, 414], "argmin": [408, 433], "yield": [408, 412], "43": [408, 412], "unique_al": 413, "x_j": [413, 414, 415, 417], "impli": [413, 414, 415, 417], "inverse_indic": [413, 414, 416], "aggreg": [413, 414], "fourth": [413, 414], "607": [413, 414], "735": [413, 414], "667": [413, 414], "381": [413, 414], "857": [413, 414], "0396": [413, 414], "166": [413, 414], "828": [413, 414], "144": [413, 414], "40501155": [413, 414], "77361575": [413, 414], "97776199": [413, 414], "36831157": [413, 414], "89148434": [413, 414], "9512272": [413, 414], "67542176": [413, 414], "41985657": [413, 414], "23478023": [413, 414], "1141": [413, 414], "8101": [413, 414], "9298": [413, 414], "8460": [413, 414], "2119": [413, 414], "3519": [413, 414], "6252": [413, 414], "4033": [413, 414], "7443": [413, 414], "2577": [413, 414], "3707": [413, 414], "0545": [413, 414], "3238": [413, 414], "5944": [413, 414], "0775": [413, 414], "4327": [413, 414], "176": [413, 414], "889": [413, 414], "763": [413, 414], "071": [413, 414], "262": [413, 414], "456": [413, 414], "114": [413, 414], "349": [413, 414], "615": [413, 414], "594": [413, 414], "335": [413, 414], "212": [413, 414], "457": [413, 414], "827": [413, 414], "209": [413, 414], "unique_count": 413, "unique_invers": 413, "unique_valu": 413, "argsort": 418, "ascend": [418, 419], "einsum": 421, "einstein": [421, 422], "summat": [421, 422], "seq": [421, 422], "jk": [421, 422], "ik": [421, 422], "126": [421, 422], "510": [421, 422], "99": [421, 422], "108": [421, 422], "117": [421, 422], "sentinel": [421, 423, 425], "unsign": [421, 426, 428], "degre": [421, 427, 429], "bessel": [421, 427, 429], "8164966": [421, 427], "varianc": [421, 429], "unbias": [421, 429], "simplicit": [430, 431], "autom": 433, "grow": 433, "ai": 433, "got": 433, "colab": 433, "sharp": 433, "weekli": 433, "event": 433, "immedi": 433, "favorit": 433, "jax_concat": 433, "tf_concat": 433, "np_concat": 433, "mx_concat": 433, "torch_concat": 433, "prompt": 433, "get_devic": 433, "reduce_prod": 433, "gradient_imag": 433, "linalg": 433, "bilinear_resampl": 433, "stack_imag": 433, "neural_net": 433, "ecosystem": [433, 439], "popular": [433, 439], "acceler": 433, "articl": 433, "lenton2021ivi": 433, "inter": 433, "lenton": 433, "daniel": 433, "pardo": 433, "fabio": 433, "falck": 433, "fabian": 433, "jame": 433, "stephen": 433, "clark": 433, "ronald": 433, "journal": 433, "arxiv": 433, "preprint": 433, "2102": 433, "02886": 433, "2021": 433, "add_array_spec": 436, "fn_array_spec": 436, "geglu": 440, "native_modul": [443, 444], "native_module_class": [443, 444], "firstlayersiren": 445, "kaimingnorm": [445, 449], "negative_slop": 445, "Ones": 445, "siren": 445, "w0": [445, 451], "filter_s": [454, 455, 456], "1d": [454, 455, 456], "conv1dtranspos": 454, "filter_shap": [454, 457, 458, 459, 460, 461], "conv2dtranspos": 454, "conv3dtranspos": 454, "depthwiseconv2d": 454, "num_channel": [454, 461], "bernoul": [454, 462], "num_lay": [454, 463], "return_sequ": [454, 463], "return_st": [454, 463], "get_initial_st": [454, 463], "dens": [454, 464], "multiheadattent": 454, "query_dim": [454, 465], "head_dim": [454, 465], "dropout_r": [454, 465], "context_dim": [454, 465], "with_to_q_fn": [454, 465], "with_to_kv_fn": [454, 465], "with_to_out_fn": [454, 465], "build_mod": [454, 465, 466, 467], "on_init": [454, 465, 466, 467], "__call__": [454, 465, 466, 467], "store_var": [466, 467], "arg_stateful_idx": [466, 467], "kwarg_stateful_idx": [466, 467], "fallback_to_non_compil": [466, 467, 470, 474], "with_partial_v": [466, 467], "initialz": [466, 467], "from_cal": [466, 467], "check_submod_ret": [466, 467], "get_mod_kei": [466, 467], "top_mod": [466, 467], "mod_depth": [466, 467], "mod_height": [466, 467], "mod_with_top_mod_key_chain": [466, 467], "save_weight": [466, 467], "weights_path": [466, 467], "show_mod_in_top_mod": [466, 467], "upper_depth": [466, 467], "lower_depth": [466, 467], "show_structur": [466, 467], "show_v_in_top_v": [466, 467], "sub_mod": [466, 467], "show_v": [466, 467], "track_submod_call_ord": [466, 467], "track_submod_ret": [466, 467], "v_with_top_v_key_chain": [466, 467], "layernorm": 468, "normalized_shap": [468, 469], "elementwise_affin": [468, 469], "trail": [468, 469], "affin": [468, 469], "0001": [470, 471, 472], "init_on_first_step": [470, 474], "ignore_miss": [470, 474], "overriden": [470, 474], "sgd": 470, "stochast": [470, 475], "sub_modul": [476, 477], "color": [479, 480]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [436, 0, 0, "-", "inspection"], [479, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[66, 0, 0, "-", "activations"], [74, 0, 0, "-", "compilation"], [76, 0, 0, "-", "constants"], [77, 0, 0, "-", "creation"], [96, 0, 0, "-", "data_type"], [129, 0, 0, "-", "device"], [179, 0, 0, "-", "elementwise"], [239, 0, 0, "-", "general"], [303, 0, 0, "-", "gradients"], [319, 0, 0, "-", "layers"], [332, 0, 0, "-", "linear_algebra"], [357, 0, 0, "-", "losses"], [361, 0, 0, "-", "manipulation"], [377, 0, 0, "-", "meta"], [381, 0, 0, "-", "nest"], [399, 0, 0, "-", "norms"], [401, 0, 0, "-", "random"], [408, 0, 0, "-", "searching"], [413, 0, 0, "-", "set"], [418, 0, 0, "-", "sorting"], [421, 0, 0, "-", "statistical"], [430, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[67, 3, 1, "", "gelu"], [68, 3, 1, "", "leaky_relu"], [69, 3, 1, "", "relu"], [70, 3, 1, "", "sigmoid"], [71, 3, 1, "", "softmax"], [72, 3, 1, "", "softplus"], [73, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[75, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[76, 4, 1, "", "e"], [76, 4, 1, "", "inf"], [76, 4, 1, "", "nan"], [76, 4, 1, "", "newaxis"], [76, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[78, 3, 1, "", "arange"], [77, 3, 1, "", "array"], [79, 3, 1, "", "asarray"], [80, 3, 1, "", "empty"], [81, 3, 1, "", "empty_like"], [82, 3, 1, "", "eye"], [83, 3, 1, "", "from_dlpack"], [84, 3, 1, "", "full"], [85, 3, 1, "", "full_like"], [86, 3, 1, "", "linspace"], [87, 3, 1, "", "logspace"], [88, 3, 1, "", "meshgrid"], [89, 3, 1, "", "native_array"], [90, 3, 1, "", "ones"], [91, 3, 1, "", "ones_like"], [92, 3, 1, "", "tril"], [93, 3, 1, "", "triu"], [94, 3, 1, "", "zeros"], [95, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[96, 1, 1, "", "DefaultDtype"], [96, 1, 1, "", "DefaultFloatDtype"], [96, 1, 1, "", "DefaultIntDtype"], [100, 3, 1, "", "as_ivy_dtype"], [101, 3, 1, "", "as_native_dtype"], [102, 3, 1, "", "astype"], [103, 3, 1, "", "broadcast_arrays"], [104, 3, 1, "", "broadcast_to"], [105, 3, 1, "", "can_cast"], [106, 3, 1, "", "closest_valid_dtype"], [107, 3, 1, "", "default_dtype"], [108, 3, 1, "", "default_float_dtype"], [109, 3, 1, "", "default_int_dtype"], [110, 3, 1, "", "dtype"], [111, 3, 1, "", "dtype_bits"], [112, 3, 1, "", "finfo"], [113, 3, 1, "", "function_supported_dtypes"], [114, 3, 1, "", "function_unsupported_dtypes"], [115, 3, 1, "", "iinfo"], [116, 3, 1, "", "invalid_dtype"], [117, 3, 1, "", "is_float_dtype"], [118, 3, 1, "", "is_int_dtype"], [119, 3, 1, "", "promote_types"], [120, 3, 1, "", "result_type"], [121, 3, 1, "", "set_default_dtype"], [122, 3, 1, "", "set_default_float_dtype"], [123, 3, 1, "", "set_default_int_dtype"], [124, 3, 1, "", "type_promote_arrays"], [125, 3, 1, "", "unset_default_dtype"], [126, 3, 1, "", "unset_default_float_dtype"], [127, 3, 1, "", "unset_default_int_dtype"], [128, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[96, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[96, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[96, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[129, 1, 1, "", "DefaultDevice"], [131, 1, 1, "", "DevClonedItem"], [132, 1, 1, "", "DevClonedIter"], [133, 1, 1, "", "DevClonedNest"], [134, 1, 1, "", "DevDistItem"], [135, 1, 1, "", "DevDistIter"], [136, 1, 1, "", "DevDistNest"], [129, 1, 1, "", "DevManager"], [138, 1, 1, "", "DevMapper"], [139, 1, 1, "", "DevMapperMultiProc"], [129, 1, 1, "", "MultiDev"], [141, 1, 1, "", "MultiDevItem"], [142, 1, 1, "", "MultiDevIter"], [143, 1, 1, "", "MultiDevNest"], [144, 1, 1, "", "Profiler"], [145, 3, 1, "", "as_ivy_dev"], [146, 3, 1, "", "as_native_dev"], [147, 3, 1, "", "clear_mem_on_dev"], [148, 3, 1, "", "default_device"], [149, 3, 1, "", "dev"], [150, 3, 1, "", "dev_clone"], [151, 3, 1, "", "dev_clone_array"], [152, 3, 1, "", "dev_clone_iter"], [153, 3, 1, "", "dev_clone_nest"], [154, 3, 1, "", "dev_dist"], [155, 3, 1, "", "dev_dist_array"], [156, 3, 1, "", "dev_dist_iter"], [157, 3, 1, "", "dev_dist_nest"], [158, 3, 1, "", "dev_unify"], [159, 3, 1, "", "dev_unify_array"], [160, 3, 1, "", "dev_unify_iter"], [161, 3, 1, "", "dev_unify_nest"], [162, 3, 1, "", "dev_util"], [163, 3, 1, "", "get_all_ivy_arrays_on_dev"], [164, 3, 1, "", "gpu_is_available"], [165, 3, 1, "", "num_cpu_cores"], [166, 3, 1, "", "num_gpus"], [167, 3, 1, "", "num_ivy_arrays_on_dev"], [168, 3, 1, "", "percent_used_mem_on_dev"], [169, 3, 1, "", "print_all_ivy_arrays_on_dev"], [170, 3, 1, "", "set_default_device"], [171, 3, 1, "", "set_split_factor"], [172, 3, 1, "", "split_factor"], [173, 3, 1, "", "split_func_call"], [174, 3, 1, "", "to_device"], [175, 3, 1, "", "total_mem_on_dev"], [176, 3, 1, "", "tpu_is_available"], [177, 3, 1, "", "unset_default_device"], [178, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[129, 2, 1, "", "__enter__"], [129, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "da_tune_step"], [129, 5, 1, "", "dim_size"], [129, 2, 1, "", "ds_tune_step"], [129, 2, 1, "", "map"], [129, 2, 1, "", "repeated_config_check"], [129, 5, 1, "", "tune_step"], [129, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[139, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[129, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "items"], [141, 2, 1, "", "keys"], [141, 5, 1, "", "shape"], [141, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "at_dev"], [142, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "start"], [144, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[180, 3, 1, "", "abs"], [181, 3, 1, "", "acos"], [182, 3, 1, "", "acosh"], [183, 3, 1, "", "add"], [184, 3, 1, "", "asin"], [185, 3, 1, "", "asinh"], [186, 3, 1, "", "atan"], [187, 3, 1, "", "atan2"], [188, 3, 1, "", "atanh"], [189, 3, 1, "", "bitwise_and"], [190, 3, 1, "", "bitwise_invert"], [191, 3, 1, "", "bitwise_left_shift"], [192, 3, 1, "", "bitwise_or"], [193, 3, 1, "", "bitwise_right_shift"], [194, 3, 1, "", "bitwise_xor"], [195, 3, 1, "", "ceil"], [196, 3, 1, "", "cos"], [197, 3, 1, "", "cosh"], [198, 3, 1, "", "divide"], [199, 3, 1, "", "equal"], [200, 3, 1, "", "erf"], [201, 3, 1, "", "exp"], [202, 3, 1, "", "expm1"], [203, 3, 1, "", "floor"], [204, 3, 1, "", "floor_divide"], [205, 3, 1, "", "greater"], [206, 3, 1, "", "greater_equal"], [207, 3, 1, "", "isfinite"], [208, 3, 1, "", "isinf"], [209, 3, 1, "", "isnan"], [210, 3, 1, "", "less"], [211, 3, 1, "", "less_equal"], [212, 3, 1, "", "log"], [213, 3, 1, "", "log10"], [214, 3, 1, "", "log1p"], [215, 3, 1, "", "log2"], [216, 3, 1, "", "logaddexp"], [217, 3, 1, "", "logical_and"], [218, 3, 1, "", "logical_not"], [219, 3, 1, "", "logical_or"], [220, 3, 1, "", "logical_xor"], [221, 3, 1, "", "maximum"], [222, 3, 1, "", "minimum"], [223, 3, 1, "", "multiply"], [224, 3, 1, "", "negative"], [225, 3, 1, "", "not_equal"], [226, 3, 1, "", "positive"], [227, 3, 1, "", "pow"], [228, 3, 1, "", "remainder"], [229, 3, 1, "", "round"], [230, 3, 1, "", "sign"], [231, 3, 1, "", "sin"], [232, 3, 1, "", "sinh"], [233, 3, 1, "", "sqrt"], [234, 3, 1, "", "square"], [235, 3, 1, "", "subtract"], [236, 3, 1, "", "tan"], [237, 3, 1, "", "tanh"], [238, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[240, 3, 1, "", "all_equal"], [241, 3, 1, "", "arg_info"], [242, 3, 1, "", "arg_names"], [243, 3, 1, "", "array_equal"], [244, 3, 1, "", "arrays_equal"], [245, 3, 1, "", "assert_supports_inplace"], [246, 3, 1, "", "cache_fn"], [247, 3, 1, "", "clip_matrix_norm"], [248, 3, 1, "", "clip_vector_norm"], [249, 3, 1, "", "container_types"], [250, 3, 1, "", "copy_array"], [251, 3, 1, "", "cumprod"], [252, 3, 1, "", "cumsum"], [253, 3, 1, "", "current_backend_str"], [254, 3, 1, "", "default"], [255, 3, 1, "", "einops_rearrange"], [256, 3, 1, "", "einops_reduce"], [257, 3, 1, "", "einops_repeat"], [258, 3, 1, "", "exists"], [259, 3, 1, "", "floormod"], [260, 3, 1, "", "fourier_encode"], [261, 3, 1, "", "gather"], [262, 3, 1, "", "gather_nd"], [263, 3, 1, "", "get_all_arrays_in_memory"], [264, 3, 1, "", "get_min_base"], [265, 3, 1, "", "get_min_denominator"], [266, 3, 1, "", "get_num_dims"], [267, 3, 1, "", "get_referrers_recursive"], [268, 3, 1, "", "has_nans"], [269, 3, 1, "", "indices_where"], [270, 3, 1, "", "inplace_arrays_supported"], [271, 3, 1, "", "inplace_decrement"], [272, 3, 1, "", "inplace_increment"], [273, 3, 1, "", "inplace_update"], [274, 3, 1, "", "inplace_variables_supported"], [275, 3, 1, "", "is_array"], [276, 3, 1, "", "is_ivy_array"], [277, 3, 1, "", "is_ivy_container"], [278, 3, 1, "", "is_native_array"], [279, 3, 1, "", "match_kwargs"], [280, 3, 1, "", "multiprocessing"], [281, 3, 1, "", "num_arrays_in_memory"], [282, 3, 1, "", "one_hot"], [283, 3, 1, "", "print_all_arrays_in_memory"], [284, 3, 1, "", "queue_timeout"], [285, 3, 1, "", "scatter_flat"], [286, 3, 1, "", "scatter_nd"], [287, 3, 1, "", "set_min_base"], [288, 3, 1, "", "set_min_denominator"], [289, 3, 1, "", "set_queue_timeout"], [290, 3, 1, "", "set_tmp_dir"], [291, 3, 1, "", "shape"], [292, 3, 1, "", "shape_to_tuple"], [293, 3, 1, "", "stable_divide"], [294, 3, 1, "", "stable_pow"], [295, 3, 1, "", "supports_inplace"], [296, 3, 1, "", "tmp_dir"], [297, 3, 1, "", "to_list"], [298, 3, 1, "", "to_numpy"], [299, 3, 1, "", "to_scalar"], [300, 3, 1, "", "try_else_none"], [301, 3, 1, "", "unstack"], [302, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[303, 1, 1, "", "GradientTracking"], [305, 3, 1, "", "adam_step"], [306, 3, 1, "", "adam_update"], [307, 3, 1, "", "execute_with_gradients"], [308, 3, 1, "", "gradient_descent_update"], [309, 3, 1, "", "is_variable"], [310, 3, 1, "", "lamb_update"], [311, 3, 1, "", "lars_update"], [312, 3, 1, "", "optimizer_update"], [313, 3, 1, "", "set_with_grads"], [314, 3, 1, "", "stop_gradient"], [315, 3, 1, "", "unset_with_grads"], [316, 3, 1, "", "variable"], [317, 3, 1, "", "variable_data"], [318, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[303, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[320, 3, 1, "", "conv1d"], [321, 3, 1, "", "conv1d_transpose"], [322, 3, 1, "", "conv2d"], [323, 3, 1, "", "conv2d_transpose"], [324, 3, 1, "", "conv3d"], [325, 3, 1, "", "conv3d_transpose"], [326, 3, 1, "", "depthwise_conv2d"], [327, 3, 1, "", "dropout"], [328, 3, 1, "", "linear"], [329, 3, 1, "", "lstm_update"], [330, 3, 1, "", "multi_head_attention"], [331, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[333, 3, 1, "", "cholesky"], [334, 3, 1, "", "cross"], [335, 3, 1, "", "det"], [336, 3, 1, "", "diagonal"], [337, 3, 1, "", "eigh"], [338, 3, 1, "", "eigvalsh"], [339, 3, 1, "", "inv"], [340, 3, 1, "", "matmul"], [341, 3, 1, "", "matrix_norm"], [342, 3, 1, "", "matrix_power"], [343, 3, 1, "", "matrix_rank"], [344, 3, 1, "", "matrix_transpose"], [345, 3, 1, "", "outer"], [346, 3, 1, "", "pinv"], [347, 3, 1, "", "qr"], [348, 3, 1, "", "slogdet"], [349, 3, 1, "", "solve"], [350, 3, 1, "", "svd"], [351, 3, 1, "", "svdvals"], [352, 3, 1, "", "tensordot"], [353, 3, 1, "", "trace"], [354, 3, 1, "", "vecdot"], [355, 3, 1, "", "vector_norm"], [356, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[358, 3, 1, "", "binary_cross_entropy"], [359, 3, 1, "", "cross_entropy"], [360, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[362, 3, 1, "", "clip"], [363, 3, 1, "", "concat"], [364, 3, 1, "", "constant_pad"], [365, 3, 1, "", "expand_dims"], [366, 3, 1, "", "flip"], [367, 3, 1, "", "permute_dims"], [368, 3, 1, "", "repeat"], [369, 3, 1, "", "reshape"], [370, 3, 1, "", "roll"], [371, 3, 1, "", "split"], [372, 3, 1, "", "squeeze"], [373, 3, 1, "", "stack"], [374, 3, 1, "", "swapaxes"], [375, 3, 1, "", "tile"], [376, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[378, 3, 1, "", "fomaml_step"], [379, 3, 1, "", "maml_step"], [380, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[382, 3, 1, "", "all_nested_indices"], [383, 3, 1, "", "copy_nest"], [384, 3, 1, "", "index_nest"], [385, 3, 1, "", "insert_into_nest_at_index"], [386, 3, 1, "", "insert_into_nest_at_indices"], [387, 3, 1, "", "map"], [388, 3, 1, "", "map_nest_at_index"], [389, 3, 1, "", "map_nest_at_indices"], [390, 3, 1, "", "multi_index_nest"], [391, 3, 1, "", "nested_any"], [392, 3, 1, "", "nested_indices_where"], [393, 3, 1, "", "nested_map"], [394, 3, 1, "", "nested_multi_map"], [395, 3, 1, "", "prune_nest_at_index"], [396, 3, 1, "", "prune_nest_at_indices"], [397, 3, 1, "", "set_nest_at_index"], [398, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[400, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[402, 3, 1, "", "multinomial"], [403, 3, 1, "", "randint"], [404, 3, 1, "", "random_normal"], [405, 3, 1, "", "random_uniform"], [406, 3, 1, "", "seed"], [407, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[409, 3, 1, "", "argmax"], [410, 3, 1, "", "argmin"], [411, 3, 1, "", "nonzero"], [412, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[414, 3, 1, "", "unique_all"], [415, 3, 1, "", "unique_counts"], [416, 3, 1, "", "unique_inverse"], [417, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[419, 3, 1, "", "argsort"], [420, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[422, 3, 1, "", "einsum"], [423, 3, 1, "", "max"], [424, 3, 1, "", "mean"], [425, 3, 1, "", "min"], [426, 3, 1, "", "prod"], [427, 3, 1, "", "std"], [428, 3, 1, "", "sum"], [429, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[431, 3, 1, "", "all"], [432, 3, 1, "", "any"]], "ivy.inspection": [[437, 3, 1, "", "add_array_specs"], [438, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[440, 0, 0, "-", "activations"], [443, 0, 0, "-", "converters"], [445, 0, 0, "-", "initializers"], [454, 0, 0, "-", "layers"], [466, 0, 0, "-", "module"], [468, 0, 0, "-", "norms"], [470, 0, 0, "-", "optimizers"], [476, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[441, 1, 1, "", "GEGLU"], [442, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[441, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[442, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[444, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[445, 1, 1, "", "Constant"], [447, 1, 1, "", "FirstLayerSiren"], [448, 1, 1, "", "GlorotUniform"], [445, 1, 1, "", "KaimingNormal"], [450, 1, 1, "", "Ones"], [451, 1, 1, "", "Siren"], [445, 1, 1, "", "Uniform"], [453, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[445, 2, 1, "", "__init__"], [445, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[447, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[448, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[445, 2, 1, "", "__init__"], [445, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[450, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[451, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[445, 2, 1, "", "__init__"], [445, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[453, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[455, 1, 1, "", "Conv1D"], [456, 1, 1, "", "Conv1DTranspose"], [457, 1, 1, "", "Conv2D"], [458, 1, 1, "", "Conv2DTranspose"], [459, 1, 1, "", "Conv3D"], [460, 1, 1, "", "Conv3DTranspose"], [461, 1, 1, "", "DepthwiseConv2D"], [462, 1, 1, "", "Dropout"], [463, 1, 1, "", "LSTM"], [464, 1, 1, "", "Linear"], [465, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[455, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[456, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[457, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[458, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[459, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[460, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[461, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[463, 2, 1, "", "__init__"], [463, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[465, 2, 1, "", "__init__"]], "ivy.stateful.module": [[467, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[467, 2, 1, "", "__init__"], [467, 2, 1, "", "build"], [467, 5, 1, "", "build_mode"], [467, 5, 1, "", "built"], [467, 2, 1, "", "check_submod_rets"], [467, 2, 1, "", "get_mod_key"], [467, 2, 1, "", "mod_depth"], [467, 2, 1, "", "mod_height"], [467, 2, 1, "", "mod_with_top_mod_key_chain"], [467, 2, 1, "", "save_weights"], [467, 2, 1, "", "show_mod_in_top_mod"], [467, 2, 1, "", "show_structure"], [467, 2, 1, "", "show_v_in_top_v"], [467, 2, 1, "", "sub_mods"], [467, 2, 1, "", "track_submod_call_order"], [467, 2, 1, "", "track_submod_rets"], [467, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[469, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[469, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[471, 1, 1, "", "Adam"], [472, 1, 1, "", "LAMB"], [473, 1, 1, "", "LARS"], [474, 1, 1, "", "Optimizer"], [475, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "set_state"], [471, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "set_state"], [472, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "set_state"], [473, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "set_state"], [474, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "set_state"], [475, 5, 1, "", "state"]], "ivy.stateful.sequential": [[477, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[477, 2, 1, "", "__init__"]], "ivy.verbosity": [[480, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 433], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 433], "set": [18, 29, 413], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55], "format": 20, "frontend": [20, 43], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 433], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 236], "roll": [25, 370], "add": [25, 183], "hypothesi": 27, "data": [27, 33, 41, 55, 96, 413, 414, 415, 417], "gener": [27, 239], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 96], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 466, 467], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 129], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 110], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 74, 75], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 445], "optim": [42, 470, 474], "transpil": 43, "role": 43, "convert": [43, 443], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 433], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 291, 413, 414, 415, 417], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "activ": [66, 440], "gelu": [67, 442], "leaky_relu": 68, "relu": 69, "sigmoid": 70, "softmax": 71, "softplu": 72, "tanh": [73, 237], "constant": 76, "creation": 77, "note": [77, 83], "arang": 78, "asarrai": 79, "empti": 80, "empty_lik": 81, "ey": 82, "from_dlpack": 83, "full": 84, "full_lik": 85, "linspac": 86, "logspac": 87, "meshgrid": 88, "native_arrai": 89, "ones": 90, "ones_lik": 91, "tril": 92, "triu": 93, "zero": [94, 453], "zeros_lik": 95, "as_ivy_dtyp": 100, "as_native_dtyp": 101, "astyp": 102, "broadcast_arrai": 103, "broadcast_to": 104, "can_cast": 105, "closest_valid_dtyp": 106, "default_dtyp": 107, "default_float_dtyp": 108, "default_int_dtyp": 109, "dtype_bit": 111, "finfo": 112, "function_supported_dtyp": 113, "function_unsupported_dtyp": 114, "iinfo": 115, "invalid_dtyp": 116, "is_float_dtyp": 117, "is_int_dtyp": 118, "promote_typ": 119, "result_typ": 120, "set_default_dtyp": 121, "set_default_float_dtyp": 122, "set_default_int_dtyp": 123, "type_promote_arrai": 124, "unset_default_dtyp": 125, "unset_default_float_dtyp": 126, "unset_default_int_dtyp": 127, "valid_dtyp": 128, "devcloneditem": 131, "devclonedit": 132, "devclonednest": 133, "devdistitem": 134, "devdistit": 135, "devdistnest": 136, "devmapp": 138, "devmappermultiproc": 139, "multidevitem": 141, "multidevit": 142, "multidevnest": 143, "profil": 144, "as_ivy_dev": 145, "as_native_dev": 146, "clear_mem_on_dev": 147, "default_devic": 148, "dev": 149, "dev_clon": 150, "dev_clone_arrai": 151, "dev_clone_it": 152, "dev_clone_nest": 153, "dev_dist": 154, "dev_dist_arrai": 155, "dev_dist_it": 156, "dev_dist_nest": 157, "dev_unifi": 158, "dev_unify_arrai": 159, "dev_unify_it": 160, "dev_unify_nest": 161, "dev_util": 162, "get_all_ivy_arrays_on_dev": 163, "gpu_is_avail": 164, "num_cpu_cor": 165, "num_gpu": 166, "num_ivy_arrays_on_dev": 167, "percent_used_mem_on_dev": 168, "print_all_ivy_arrays_on_dev": 169, "set_default_devic": 170, "set_split_factor": 171, "split_factor": 172, "split_func_cal": 173, "to_devic": 174, "total_mem_on_dev": 175, "tpu_is_avail": 176, "unset_default_devic": 177, "used_mem_on_dev": 178, "elementwis": 179, "ab": 180, "aco": 181, "acosh": 182, "asin": 184, "asinh": 185, "atan": 186, "atan2": 187, "atanh": 188, "bitwise_and": 189, "bitwise_invert": 190, "bitwise_left_shift": 191, "bitwise_or": 192, "bitwise_right_shift": 193, "bitwise_xor": 194, "ceil": 195, "co": 196, "cosh": 197, "divid": 198, "equal": 199, "erf": 200, "exp": 201, "expm1": 202, "floor": 203, "floor_divid": 204, "greater": 205, "greater_equ": 206, "isfinit": 207, "isinf": 208, "isnan": 209, "less": 210, "less_equ": 211, "log": 212, "log10": 213, "log1p": 214, "log2": 215, "logaddexp": 216, "logical_and": 217, "logical_not": 218, "logical_or": 219, "logical_xor": 220, "maximum": 221, "minimum": 222, "multipli": 223, "neg": 224, "not_equ": 225, "posit": 226, "pow": 227, "remaind": 228, "round": 229, "sign": 230, "sin": 231, "sinh": 232, "sqrt": 233, "squar": 234, "subtract": 235, "trunc": 238, "all_equ": 240, "arg_info": 241, "arg_nam": 242, "array_equ": 243, "arrays_equ": 244, "assert_supports_inplac": 245, "cache_fn": 246, "clip_matrix_norm": 247, "clip_vector_norm": 248, "container_typ": 249, "copy_arrai": 250, "cumprod": 251, "cumsum": 252, "current_backend_str": 253, "default": 254, "einops_rearrang": 255, "einops_reduc": 256, "einops_repeat": 257, "exist": 258, "floormod": 259, "fourier_encod": 260, "gather": 261, "gather_nd": 262, "get_all_arrays_in_memori": 263, "get_min_bas": 264, "get_min_denomin": 265, "get_num_dim": 266, "get_referrers_recurs": 267, "has_nan": 268, "indices_wher": 269, "inplace_arrays_support": 270, "inplace_decr": 271, "inplace_incr": 272, "inplace_upd": 273, "inplace_variables_support": 274, "is_arrai": 275, "is_ivy_arrai": 276, "is_ivy_contain": 277, "is_native_arrai": 278, "match_kwarg": 279, "multiprocess": 280, "num_arrays_in_memori": 281, "one_hot": 282, "print_all_arrays_in_memori": 283, "queue_timeout": 284, "scatter_flat": 285, "scatter_nd": 286, "set_min_bas": 287, "set_min_denomin": 288, "set_queue_timeout": 289, "set_tmp_dir": 290, "shape_to_tupl": 292, "stable_divid": 293, "stable_pow": 294, "supports_inplac": 295, "tmp_dir": 296, "to_list": 297, "to_numpi": 298, "to_scalar": 299, "try_else_non": 300, "unstack": 301, "value_is_nan": 302, "gradient": 303, "adam_step": 305, "adam_upd": 306, "execute_with_gradi": 307, "gradient_descent_upd": 308, "is_vari": 309, "lamb_upd": 310, "lars_upd": 311, "optimizer_upd": 312, "set_with_grad": 313, "stop_gradi": 314, "unset_with_grad": 315, "variabl": 316, "variable_data": 317, "with_grad": 318, "layer": [319, 454], "conv1d": [320, 455], "conv1d_transpos": 321, "conv2d": [322, 457], "conv2d_transpos": 323, "conv3d": [324, 459], "conv3d_transpos": 325, "depthwise_conv2d": 326, "dropout": [327, 462], "linear": [328, 332, 464], "lstm_updat": 329, "multi_head_attent": 330, "scaled_dot_product_attent": 331, "algebra": 332, "choleski": 333, "cross": 334, "det": 335, "diagon": 336, "eigh": 337, "eigvalsh": 338, "inv": 339, "matmul": 340, "matrix_norm": 341, "matrix_pow": 342, "matrix_rank": 343, "matrix_transpos": 344, "outer": 345, "pinv": 346, "qr": 347, "slogdet": 348, "solv": 349, "svd": 350, "svdval": 351, "tensordot": 352, "trace": 353, "vecdot": 354, "vector_norm": 355, "vector_to_skew_symmetric_matrix": 356, "loss": 357, "binary_cross_entropi": 358, "cross_entropi": 359, "sparse_cross_entropi": 360, "manipul": 361, "clip": 362, "concat": 363, "constant_pad": 364, "expand_dim": 365, "flip": 366, "permute_dim": 367, "repeat": 368, "reshap": 369, "split": 371, "squeez": 372, "stack": 373, "swapax": 374, "tile": 375, "zero_pad": 376, "meta": 377, "fomaml_step": 378, "maml_step": 379, "reptile_step": 380, "nest": 381, "all_nested_indic": 382, "copy_nest": 383, "index_nest": 384, "insert_into_nest_at_index": 385, "insert_into_nest_at_indic": 386, "map": 387, "map_nest_at_index": 388, "map_nest_at_indic": 389, "multi_index_nest": 390, "nested_ani": 391, "nested_indices_wher": 392, "nested_map": 393, "nested_multi_map": 394, "prune_nest_at_index": 395, "prune_nest_at_indic": 396, "set_nest_at_index": 397, "set_nest_at_indic": 398, "norm": [399, 468], "layer_norm": 400, "random": 401, "multinomi": 402, "randint": 403, "random_norm": 404, "random_uniform": 405, "seed": 406, "shuffl": 407, "search": 408, "argmax": 409, "argmin": 410, "nonzero": 411, "where": 412, "depend": [413, 414, 415, 417], "output": [413, 414, 415, 417], "unique_al": 414, "unique_count": 415, "unique_invers": 416, "unique_valu": 417, "sort": [418, 420], "argsort": 419, "statist": 421, "einsum": 422, "max": 423, "mean": 424, "min": 425, "prod": 426, "std": 427, "sum": 428, "var": 429, "util": 430, "all": 431, "ani": 432, "content": 433, "overview": 433, "quick": 433, "start": 433, "roadmap": [433, 439], "citat": 433, "inspect": 436, "add_array_spec": 437, "fn_array_spec": 438, "geglu": 441, "to_ivy_modul": 444, "firstlayersiren": 447, "glorotuniform": 448, "Ones": 450, "siren": 451, "conv1dtranspos": 456, "conv2dtranspos": 458, "conv3dtranspos": 460, "depthwiseconv2d": 461, "lstm": 463, "multiheadattent": 465, "layernorm": 469, "adam": 471, "lamb": 472, "lar": 473, "sgd": 475, "sequenti": [476, 477], "verbos": 479, "cprint": 480}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})