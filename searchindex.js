Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/static_to_ivy", "data_classes/container/conversions/static_to_native", "data_classes/container/conversions/to_ivy", "data_classes/container/conversions/to_native", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/static_to_ivy.rst", "data_classes/container/conversions/static_to_native.rst", "data_classes/container/conversions/to_ivy.rst", "data_classes/container/conversions/to_native.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "static_to_ivy", "static_to_native", "to_ivy", "to_native", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "floormod", "fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "with_grads", "Layers", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 129, 135, 136, 137, 138, 142, 143, 145, 146, 147, 157, 158, 159, 279, 330, 333, 372, 374, 694, 701, 760, 766, 806, 808, 810, 812, 849, 900, 904, 955, 956, 1067, 1069, 1079, 1113, 1116, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 132, 133, 134, 136, 137, 138, 139, 140, 141, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 176, 181, 186, 191, 196, 201, 206, 207, 208, 209, 210, 213, 217, 218, 223, 226, 231, 232, 237, 240, 243, 248, 253, 256, 261, 266, 271, 274, 279, 284, 285, 286, 291, 296, 301, 306, 307, 308, 311, 312, 313, 318, 319, 324, 327, 330, 335, 336, 341, 346, 351, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 406, 407, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 608, 613, 614, 618, 623, 628, 633, 638, 643, 648, 653, 658, 663, 668, 673, 678, 683, 688, 689, 694, 695, 700, 701, 702, 703, 704, 705, 706, 707, 712, 713, 714, 715, 716, 717, 718, 723, 728, 733, 734, 735, 736, 737, 738, 743, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 788, 789, 790, 791, 792, 793, 794, 799, 800, 801, 802, 803, 804, 805, 806, 808, 813, 817, 820, 824, 829, 833, 837, 841, 842, 843, 844, 849, 850, 851, 852, 857, 858, 859, 860, 861, 862, 867, 868, 869, 870, 871, 872, 873, 878, 883, 888, 893, 897, 900, 905, 909, 914, 918, 923, 928, 933, 936, 941, 945, 950, 955, 960, 965, 970, 975, 980, 985, 986, 991, 996, 1001, 1002, 1007, 1011, 1015, 1019, 1023, 1027, 1032, 1037, 1042, 1043, 1047, 1051, 1055, 1059, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1091, 1092, 1093, 1098, 1103, 1108, 1109, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1124, 1129, 1134, 1139, 1140, 1145, 1150, 1151, 1155, 1159, 1163, 1167, 1171, 1175, 1179, 1184, 1185, 1190, 1195, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1195], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 70, 71, 72, 75, 76, 77, 78, 120, 121, 129, 130, 132, 133, 135, 139, 140, 142, 143, 145, 147, 158, 159, 694, 767, 1091, 1092, 1098, 1101, 1195, 1203, 1204, 1205, 1206, 1207, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 135, 136, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243], "base": [0, 19, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 129, 131, 134, 136, 142, 158, 209, 240, 241, 242, 279, 372, 374, 407, 513, 516, 568, 571, 573, 574, 575, 576, 577, 578, 581, 583, 584, 585, 586, 587, 638, 639, 641, 694, 750, 775, 788, 806, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1151, 1154, 1203, 1204, 1205, 1208, 1210, 1211, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "object": [0, 72, 75, 76, 77, 78, 79, 82, 83, 90, 91, 100, 101, 108, 109, 129, 134, 144, 147, 209, 226, 229, 279, 319, 322, 372, 398, 402, 614, 615, 617, 806, 1067, 1070, 1072, 1074, 1075, 1076, 1081, 1082, 1083, 1084, 1091, 1109, 1110, 1111, 1112, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1230], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 72, 75, 76, 77, 78, 123, 133, 137, 142, 144, 145, 146, 147, 279, 280, 281, 282, 283, 372, 373, 374, 806, 807, 1091, 1092, 1098, 1101, 1195, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "choose_random_backend": 0, "exclud": [0, 2, 127, 142, 209, 210, 211, 1091, 1103, 1106], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 142, 144, 146, 147, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 308, 309, 310, 311, 312, 313, 315, 317, 319, 321, 322, 323, 324, 326, 327, 329, 330, 332, 333, 334, 335, 336, 338, 340, 341, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 371, 372, 377, 378, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 754, 756, 757, 761, 767, 769, 772, 773, 774, 775, 776, 777, 779, 783, 784, 785, 786, 787, 788, 794, 795, 797, 800, 801, 802, 803, 806, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 72, 77, 78, 123, 132], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 75, 76, 142, 144, 146, 372, 397, 694, 773, 1206, 1207, 1229, 1230], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 142, 144, 146, 694, 766, 1206, 1207, 1229, 1230], "return": [0, 4, 5, 12, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1200, 1206, 1207, 1217, 1226, 1227, 1233, 1237], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 131, 132, 134, 136, 138, 142, 147, 158, 159, 279, 312, 324, 325, 327, 328, 335, 370, 371, 372, 384, 385, 386, 387, 391, 393, 694, 736, 737, 748, 749, 752, 757, 761, 768, 770, 782, 806, 841, 850, 1067, 1068, 1077, 1078, 1195], "prioriti": [0, 4, 19, 75, 76, 139], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 142, 144, 145, 206, 207, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 357, 360, 407, 408, 411, 423, 426, 428, 431, 433, 436, 483, 486, 518, 521, 523, 526, 548, 551, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 694, 700, 701, 705, 717, 738, 741, 766, 773, 851, 858, 862, 865, 871, 872, 873, 876, 888, 891, 900, 904, 955, 956, 1001, 1037, 1040, 1067, 1073, 1085, 1086, 1089, 1118, 1124, 1128, 1150, 1155, 1158, 1175, 1178, 1184, 1185, 1188, 1198, 1200, 1206, 1207, 1229, 1230], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 32, 33, 34, 35, 66, 67, 75, 76, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 158, 159, 208, 209, 243, 246, 261, 263, 265, 266, 268, 270, 279, 324, 325, 327, 328, 372, 378, 385, 386, 396, 407, 643, 646, 694, 703, 736, 737, 806, 813, 815, 820, 822, 829, 831, 837, 839, 872, 950, 954, 955, 959, 1067, 1073, 1079, 1150, 1171, 1174, 1179, 1181, 1183, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "paramet": [0, 4, 5, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 126, 129, 144, 145, 158, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 316, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 374, 375, 376, 377, 378, 379, 382, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 772, 773, 775, 776, 778, 780, 781, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1200, 1206, 1207, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 48, 49, 54, 55, 58, 59, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 92, 93, 98, 99, 104, 105, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 158, 159, 209, 210, 211, 213, 214, 218, 219, 221, 226, 229, 231, 232, 233, 234, 235, 236, 243, 246, 248, 249, 251, 256, 257, 258, 259, 260, 274, 275, 276, 277, 278, 279, 301, 302, 303, 304, 305, 357, 358, 359, 360, 361, 372, 378, 387, 391, 396, 397, 407, 668, 671, 694, 717, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 792, 806, 813, 815, 829, 831, 851, 852, 854, 856, 862, 863, 864, 865, 866, 867, 870, 872, 888, 891, 950, 954, 970, 974, 1001, 1019, 1022, 1032, 1033, 1034, 1035, 1036, 1043, 1046, 1063, 1064, 1065, 1066, 1067, 1069, 1079, 1080, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1117, 1118, 1119, 1123, 1129, 1133, 1150, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1201, 1206, 1207, 1217, 1225, 1228, 1233, 1234, 1235, 1236, 1237, 1238], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 34, 35, 36, 37, 42, 43, 52, 53, 54, 55, 58, 59, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 158, 159, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 291, 293, 295, 301, 302, 303, 304, 305, 306, 313, 316, 319, 322, 330, 333, 335, 357, 358, 359, 361, 371, 372, 379, 382, 387, 391, 393, 395, 396, 397, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 646, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 700, 707, 709, 711, 714, 715, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 756, 760, 768, 769, 770, 772, 773, 783, 785, 787, 794, 795, 797, 804, 806, 813, 815, 817, 818, 820, 822, 824, 826, 828, 829, 831, 833, 835, 837, 839, 842, 844, 845, 847, 848, 849, 851, 870, 872, 873, 875, 877, 878, 881, 888, 891, 909, 912, 918, 920, 922, 945, 948, 950, 954, 970, 974, 975, 979, 985, 986, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1010, 1019, 1022, 1027, 1030, 1032, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1047, 1050, 1067, 1072, 1073, 1074, 1075, 1080, 1081, 1082, 1083, 1084, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1200, 1206, 1207, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 75, 76, 135, 136, 140, 144, 159, 694, 800, 1195], "infer": [0, 4, 34, 35, 54, 55, 84, 85, 104, 105, 122, 133, 134, 137, 138, 142, 147, 206, 207, 209, 210, 211, 213, 214, 218, 219, 221, 231, 232, 233, 234, 235, 236, 248, 249, 251, 256, 257, 258, 259, 260, 274, 275, 276, 277, 278, 279, 312, 694, 753, 781, 1001, 1032, 1033, 1034, 1035, 1036], "when": [0, 4, 14, 15, 18, 19, 20, 52, 53, 58, 59, 66, 67, 72, 75, 76, 77, 78, 102, 103, 108, 109, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 159, 279, 286, 289, 407, 423, 426, 518, 521, 638, 641, 694, 705, 760, 788, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1067, 1078, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1117, 1150, 1155, 1158, 1163, 1166, 1171, 1174, 1179, 1181, 1183, 1195, 1229, 1230], "global": [0, 4, 5, 6, 12, 42, 43, 56, 57, 72, 75, 76, 77, 78, 92, 93, 106, 107, 132, 133, 137, 138, 142, 279, 307, 308, 309, 311, 312, 372, 395, 396, 397, 694, 750, 751, 771, 775, 776, 778, 783, 784, 785, 786, 787, 788, 806, 841, 850, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 32, 33, 42, 43, 44, 45, 63, 66, 67, 75, 76, 92, 93, 94, 95, 100, 101, 113, 122, 123, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 144, 145, 279, 312, 362, 365, 372, 378, 394, 395, 396, 397, 407, 443, 446, 694, 695, 696, 697, 698, 699, 774, 775, 776, 777, 778, 779, 780, 806, 813, 815, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 872, 878, 881, 909, 912, 918, 920, 921, 922, 933, 935, 945, 948, 1067, 1068, 1077, 1078, 1079, 1083, 1084, 1091, 1108, 1113, 1114, 1119, 1123, 1124, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1171, 1174, 1179, 1181, 1183, 1217, 1226, 1233, 1234, 1235, 1236, 1237, 1238], "ret": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 126, 130, 142, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 289, 291, 292, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 313, 316, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 358, 359, 360, 361, 371, 372, 375, 376, 378, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 772, 773, 781, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1077, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1200, 1206, 1207, 1233, 1237], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 231, 232, 233, 234, 235, 236, 243, 246, 253, 254, 256, 259, 271, 273, 274, 278, 279, 286, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 312, 313, 316, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 346, 349, 351, 354, 357, 358, 359, 360, 361, 362, 365, 370, 371, 372, 378, 379, 382, 384, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 461, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 513, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 573, 574, 575, 576, 577, 593, 594, 595, 596, 597, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 685, 686, 687, 688, 694, 695, 696, 697, 698, 699, 702, 703, 707, 708, 709, 710, 711, 713, 714, 733, 738, 741, 743, 744, 745, 746, 747, 749, 751, 752, 763, 765, 774, 777, 779, 781, 782, 783, 784, 785, 786, 787, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 806, 808, 809, 810, 811, 812, 824, 825, 826, 827, 828, 841, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 863, 864, 865, 866, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 900, 903, 918, 920, 921, 922, 928, 931, 950, 954, 955, 959, 960, 964, 965, 969, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 32, 33, 34, 35, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 159, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 205, 209, 210, 211, 213, 215, 217, 218, 219, 221, 223, 224, 231, 232, 233, 234, 235, 236, 243, 246, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 293, 295, 296, 299, 301, 303, 305, 312, 357, 359, 360, 361, 372, 378, 396, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 612, 614, 615, 617, 618, 620, 621, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 760, 783, 785, 787, 794, 795, 797, 806, 813, 815, 820, 822, 824, 826, 828, 829, 831, 833, 835, 837, 839, 841, 844, 845, 847, 850, 872, 873, 874, 875, 876, 877, 878, 881, 909, 912, 918, 920, 921, 922, 933, 935, 936, 939, 945, 948, 950, 954, 970, 974, 975, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1015, 1018, 1019, 1022, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1063, 1064, 1065, 1067, 1079, 1080, 1086, 1088, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "import": [0, 4, 15, 19, 20, 70, 71, 120, 121, 123, 125, 126, 127, 130, 131, 133, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 159, 372, 394, 395, 1195, 1201], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 42, 43, 75, 76, 92, 93, 124, 125, 129, 130, 131, 133, 137, 138, 139, 142, 144, 147, 694, 783, 784, 785, 794, 795, 796, 797, 798, 1150, 1151, 1154, 1195], "np": [0, 4, 92, 93, 124, 125, 129, 131, 135, 137, 138, 139, 144, 145, 147, 407, 548, 551, 553, 556, 694, 783, 786, 787, 1195], "x": [0, 4, 12, 21, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 139, 140, 142, 144, 145, 146, 147, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 213, 215, 216, 218, 221, 222, 226, 229, 230, 232, 233, 234, 235, 236, 243, 246, 248, 251, 252, 256, 259, 260, 261, 262, 265, 266, 267, 270, 271, 273, 274, 275, 277, 278, 279, 286, 289, 290, 296, 299, 300, 301, 302, 303, 304, 305, 312, 313, 316, 317, 318, 319, 322, 330, 333, 346, 349, 357, 358, 359, 360, 361, 372, 378, 379, 382, 383, 387, 391, 392, 396, 398, 399, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 461, 462, 468, 469, 470, 471, 472, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 533, 535, 536, 537, 538, 541, 543, 546, 547, 548, 551, 552, 553, 556, 557, 558, 560, 561, 562, 563, 566, 568, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 586, 587, 593, 594, 595, 596, 597, 598, 601, 602, 613, 614, 616, 623, 626, 627, 633, 636, 637, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 676, 677, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 718, 720, 721, 722, 723, 726, 727, 728, 731, 732, 733, 734, 735, 738, 741, 743, 744, 745, 746, 747, 751, 753, 755, 756, 758, 759, 760, 762, 763, 764, 765, 769, 781, 783, 784, 785, 786, 787, 789, 792, 794, 795, 796, 797, 798, 799, 804, 805, 806, 817, 818, 824, 825, 826, 827, 828, 842, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 887, 888, 891, 892, 893, 896, 897, 899, 900, 903, 909, 912, 913, 914, 916, 917, 918, 920, 921, 922, 923, 926, 927, 928, 931, 933, 935, 936, 939, 940, 941, 943, 944, 950, 951, 954, 955, 959, 960, 964, 965, 966, 969, 975, 976, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1067, 1068, 1070, 1073, 1077, 1078, 1079, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1228], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 159, 160, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 208, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 251, 253, 254, 256, 258, 259, 260, 261, 265, 266, 270, 271, 273, 274, 275, 277, 278, 279, 286, 289, 291, 293, 294, 295, 296, 299, 301, 303, 304, 305, 312, 313, 316, 319, 322, 330, 333, 336, 339, 341, 344, 346, 349, 351, 354, 357, 359, 360, 361, 366, 372, 378, 379, 382, 387, 391, 393, 397, 398, 402, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 671, 672, 673, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 702, 703, 704, 706, 707, 709, 710, 711, 713, 714, 715, 718, 721, 722, 723, 726, 727, 728, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 745, 746, 747, 748, 753, 755, 756, 757, 758, 759, 760, 762, 763, 765, 768, 769, 770, 772, 773, 774, 779, 781, 783, 785, 786, 787, 789, 792, 794, 795, 797, 798, 799, 801, 803, 804, 805, 806, 808, 810, 811, 812, 813, 815, 820, 822, 824, 826, 827, 828, 829, 831, 833, 835, 837, 839, 842, 844, 845, 847, 848, 849, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 914, 916, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1079, 1080, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1198, 1200, 1217, 1225, 1228], "2": [0, 4, 18, 19, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 124, 127, 129, 133, 136, 141, 142, 144, 145, 146, 147, 159, 170, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 194, 201, 202, 203, 204, 205, 208, 209, 231, 232, 233, 234, 235, 236, 243, 246, 253, 254, 256, 259, 274, 278, 279, 286, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 313, 316, 319, 322, 346, 349, 357, 358, 361, 372, 378, 379, 382, 384, 387, 389, 391, 395, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 450, 452, 453, 456, 458, 461, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 485, 486, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 513, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 583, 584, 585, 586, 587, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 685, 686, 687, 688, 694, 695, 696, 697, 698, 702, 703, 706, 707, 708, 709, 710, 711, 714, 733, 738, 741, 743, 744, 745, 746, 747, 763, 765, 781, 783, 784, 785, 786, 787, 792, 806, 808, 809, 810, 811, 812, 824, 825, 826, 827, 828, 844, 845, 846, 847, 848, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 889, 890, 891, 892, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 928, 931, 933, 935, 936, 939, 950, 954, 955, 959, 960, 961, 962, 963, 964, 965, 969, 975, 976, 977, 978, 979, 985, 986, 987, 988, 989, 990, 991, 993, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1167, 1170, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195], "0": [0, 4, 19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 126, 127, 129, 130, 131, 142, 144, 145, 146, 147, 159, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 223, 224, 225, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 278, 279, 286, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 313, 316, 319, 322, 330, 333, 346, 349, 357, 358, 361, 372, 375, 378, 379, 382, 384, 387, 391, 392, 394, 395, 396, 397, 403, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 463, 466, 473, 476, 478, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 513, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 530, 531, 532, 533, 536, 538, 541, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 574, 575, 576, 577, 583, 586, 598, 601, 613, 614, 616, 618, 621, 623, 626, 628, 631, 638, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 685, 686, 687, 688, 689, 693, 694, 695, 696, 697, 698, 699, 702, 703, 706, 707, 708, 709, 710, 711, 713, 714, 715, 733, 738, 741, 743, 744, 745, 746, 747, 754, 763, 765, 769, 772, 773, 781, 783, 784, 785, 786, 787, 792, 794, 795, 796, 797, 798, 799, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 844, 847, 848, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 863, 864, 865, 866, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 889, 890, 891, 892, 900, 903, 918, 920, 921, 922, 950, 954, 955, 959, 960, 964, 965, 966, 967, 968, 969, 975, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1059, 1061, 1067, 1070, 1079, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240], "print": [0, 4, 5, 6, 12, 18, 19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 129, 136, 142, 144, 145, 146, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 231, 232, 233, 234, 235, 236, 243, 246, 253, 254, 256, 259, 271, 273, 274, 278, 279, 286, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 313, 316, 318, 324, 325, 327, 328, 346, 349, 357, 358, 359, 360, 361, 371, 372, 379, 382, 387, 388, 389, 390, 391, 392, 393, 396, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 461, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 513, 516, 518, 519, 520, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 573, 574, 575, 576, 577, 593, 594, 595, 596, 597, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 685, 686, 687, 688, 694, 695, 696, 697, 698, 699, 702, 703, 707, 708, 709, 710, 711, 713, 714, 733, 738, 741, 743, 744, 745, 746, 747, 751, 770, 781, 783, 784, 785, 786, 787, 792, 794, 795, 796, 797, 798, 799, 806, 808, 809, 811, 812, 824, 825, 826, 827, 828, 841, 850, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 863, 864, 865, 866, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 900, 903, 918, 920, 922, 928, 931, 950, 954, 955, 959, 960, 964, 965, 969, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 133, 135, 139, 140, 141, 143, 144, 145, 146, 157, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 316, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 904, 905, 908, 909, 912, 914, 916, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 956, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1200, 1203, 1204, 1205, 1233, 1236, 1238], "py": [0, 4, 5, 19, 123, 124, 125, 126, 129, 130, 131, 132, 133, 137, 138, 140, 142, 144, 146, 147, 1091, 1092, 1098, 1101, 1233, 1234, 1235, 1236, 1238], "noqa": [0, 4, 5, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 423, 426, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 548, 551, 553, 556, 563, 566, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 668, 671, 673, 676, 683, 687, 688, 872, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1150, 1155, 1158], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 158, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 185, 186, 188, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 226, 229, 232, 234, 236, 240, 241, 256, 258, 260, 261, 263, 265, 266, 268, 270, 274, 275, 277, 279, 284, 285, 286, 289, 291, 293, 295, 301, 303, 305, 306, 318, 324, 325, 327, 328, 335, 341, 344, 351, 354, 356, 357, 359, 361, 365, 366, 371, 372, 374, 375, 376, 377, 378, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 702, 705, 706, 707, 709, 711, 716, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 735, 736, 737, 738, 740, 742, 743, 744, 745, 746, 747, 758, 759, 760, 762, 763, 764, 765, 767, 772, 773, 775, 776, 778, 783, 785, 786, 787, 788, 791, 793, 794, 795, 797, 805, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 824, 826, 828, 829, 831, 833, 835, 837, 839, 842, 844, 845, 847, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1055, 1058, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1206, 1207, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237], "set_backend": [0, 4, 5, 12, 44, 45, 94, 95, 132, 133, 134, 137, 279, 324, 325, 327, 328, 372, 394, 395, 806, 844, 845, 846, 847, 848, 1195], "ha": [0, 4, 5, 14, 15, 16, 19, 62, 63, 66, 67, 75, 76, 112, 113, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 142, 144, 146, 147, 158, 159, 209, 243, 246, 372, 378, 407, 408, 411, 618, 621, 638, 641, 806, 841, 850, 872, 905, 908, 941, 943, 945, 948, 950, 954, 965, 969, 1001, 1015, 1018, 1043, 1046, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1150, 1159, 1162, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "over": [0, 4, 14, 16, 18, 19, 66, 67, 68, 69, 70, 71, 75, 76, 100, 101, 116, 117, 118, 119, 120, 121, 126, 127, 129, 133, 139, 144, 159, 872, 909, 912, 960, 964, 970, 974, 975, 979, 1085, 1086, 1089, 1091, 1103, 1106, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1231, 1232], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 68, 69, 70, 71, 75, 76, 90, 91, 92, 93, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 248, 251, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 372, 398, 402, 407, 408, 411, 423, 426, 428, 431, 433, 436, 483, 486, 503, 504, 505, 506, 507, 518, 521, 523, 526, 538, 541, 548, 551, 563, 566, 573, 576, 613, 614, 616, 628, 629, 630, 631, 632, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 694, 695, 696, 697, 698, 699, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 738, 741, 755, 762, 763, 764, 788, 806, 817, 818, 851, 858, 862, 865, 869, 871, 872, 873, 876, 888, 891, 1001, 1037, 1040, 1063, 1064, 1065, 1066, 1067, 1070, 1073, 1077, 1083, 1084, 1085, 1086, 1089, 1091, 1103, 1106, 1118, 1124, 1128, 1150, 1155, 1158, 1184, 1185, 1188, 1194, 1195], "pass": [0, 4, 19, 20, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 144, 159, 279, 306, 372, 397, 407, 443, 446, 694, 705, 760, 806, 849, 900, 904, 955, 956, 1063, 1064, 1065, 1206, 1207, 1229, 1230, 1233, 1237, 1239, 1240], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 44, 45, 94, 95, 124, 125, 129, 130, 131, 133, 137, 138, 139, 142, 144, 147, 159, 806, 824, 825, 826, 827, 828, 844, 847, 848, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1195], "get_backend": [0, 132, 133], "specifi": [0, 5, 34, 35, 42, 43, 52, 53, 54, 55, 58, 59, 68, 69, 73, 74, 75, 76, 92, 93, 100, 101, 102, 103, 104, 105, 108, 109, 118, 119, 122, 124, 129, 130, 131, 132, 137, 138, 139, 142, 145, 146, 147, 176, 178, 180, 209, 210, 211, 217, 231, 237, 238, 240, 241, 253, 254, 261, 263, 265, 266, 268, 270, 271, 273, 279, 286, 289, 296, 299, 372, 387, 391, 393, 396, 397, 398, 402, 407, 643, 646, 694, 700, 714, 738, 739, 740, 741, 742, 743, 746, 755, 804, 872, 888, 891, 909, 912, 960, 964, 965, 969, 970, 974, 975, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1007, 1010, 1011, 1014, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1059, 1062, 1067, 1072, 1074, 1075, 1081, 1082, 1083, 1084, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1150, 1151, 1154, 1167, 1170, 1175, 1178, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "isn": [0, 5, 19, 134, 145, 159], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 70, 71, 120, 121, 127, 129, 134, 137, 142, 144, 145, 146, 147, 159, 694, 703, 851, 868, 869], "associ": [0, 5, 19, 100, 101, 129, 131, 132, 134, 159, 407, 423, 426, 618, 621, 872, 918, 920, 921, 922, 933, 935, 980, 984], "option": [0, 5, 18, 19, 24, 25, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 142, 147, 159, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 293, 295, 296, 299, 301, 303, 305, 306, 307, 308, 309, 311, 312, 335, 357, 359, 361, 371, 372, 378, 395, 396, 397, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 706, 707, 708, 709, 710, 711, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 756, 767, 769, 772, 773, 783, 784, 785, 786, 787, 788, 794, 795, 797, 806, 824, 826, 828, 842, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1124, 1125, 1127, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1233, 1234, 1235, 1237], "str": [0, 5, 29, 30, 31, 42, 43, 48, 49, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 125, 137, 138, 140, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 232, 234, 236, 243, 246, 256, 258, 260, 274, 275, 277, 279, 284, 291, 293, 295, 301, 303, 305, 306, 307, 308, 309, 318, 319, 322, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 357, 359, 361, 362, 363, 364, 365, 371, 372, 374, 375, 397, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 700, 707, 709, 711, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 740, 742, 743, 745, 747, 767, 772, 773, 783, 785, 787, 794, 795, 797, 824, 826, 828, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 872, 873, 875, 877, 918, 920, 922, 936, 939, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1063, 1064, 1065, 1066, 1067, 1073, 1083, 1086, 1088, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1150, 1151, 1154, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 70, 71, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 158, 159, 806, 817, 818, 1195, 1201], "want": [0, 5, 15, 17, 18, 19, 70, 71, 120, 121, 129, 134, 145, 146, 147, 159], "retriev": [0, 5, 19, 694, 700], "i": [0, 5, 19, 21, 48, 49, 66, 67, 90, 91, 100, 101, 122, 129, 142, 145, 147, 209, 210, 211, 243, 246, 407, 408, 411, 443, 446, 463, 466, 473, 476, 483, 486, 523, 526, 528, 531, 543, 546, 593, 595, 597, 613, 614, 616, 623, 626, 638, 641, 643, 646, 694, 702, 703, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 852, 853, 862, 865, 872, 878, 881, 905, 908, 918, 920, 921, 922, 933, 935, 945, 948, 950, 954, 965, 969, 975, 979, 1001, 1047, 1050, 1067, 1070, 1083, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "e": [0, 5, 15, 16, 17, 19, 21, 58, 59, 66, 67, 79, 80, 81, 100, 101, 108, 109, 122, 129, 136, 145, 159, 208, 209, 243, 246, 279, 285, 357, 360, 372, 375, 407, 408, 411, 443, 446, 463, 466, 473, 476, 483, 486, 513, 516, 523, 526, 528, 531, 543, 546, 568, 571, 578, 581, 613, 614, 616, 623, 626, 638, 641, 643, 646, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 872, 878, 881, 900, 904, 905, 908, 918, 920, 921, 922, 933, 935, 945, 948, 950, 954, 955, 956, 975, 979, 1001, 1047, 1050, 1067, 1070, 1083, 1084, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 62, 63, 75, 76, 90, 91, 92, 93, 100, 101, 104, 105, 106, 107, 112, 113, 114, 115, 124, 127, 129, 130, 132, 135, 136, 137, 139, 140, 141, 144, 145, 147, 159, 209, 210, 211, 243, 246, 279, 291, 294, 301, 304, 372, 397, 407, 423, 427, 468, 472, 613, 614, 616, 694, 695, 697, 698, 699, 743, 747, 766, 769, 772, 773, 794, 795, 797, 872, 873, 877, 905, 908, 909, 912, 928, 931, 936, 939, 970, 974, 975, 979, 1001, 1002, 1006, 1015, 1018, 1019, 1022, 1032, 1036, 1037, 1040, 1041, 1043, 1046, 1085, 1086, 1088, 1089, 1090, 1113, 1114, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1145, 1149, 1150, 1151, 1154, 1195], "default": [0, 5, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 124, 126, 127, 129, 130, 132, 133, 136, 137, 138, 146, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 293, 295, 296, 299, 301, 303, 305, 307, 308, 309, 311, 312, 313, 316, 357, 359, 361, 362, 365, 370, 372, 378, 379, 382, 389, 392, 393, 394, 395, 396, 397, 398, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 706, 707, 708, 709, 710, 711, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 765, 766, 767, 769, 771, 772, 773, 778, 781, 783, 784, 785, 786, 787, 788, 794, 795, 797, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 841, 842, 844, 845, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1077, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1206, 1207, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "torch": [0, 5, 12, 19, 94, 95, 123, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 159, 206, 207, 279, 324, 325, 327, 328, 346, 349, 372, 394, 395, 806, 844, 845, 848, 872, 955, 959, 1001, 1015, 1018, 1043, 1046, 1195], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 44, 45, 124, 125, 129, 130, 131, 137, 138, 139, 142, 147, 159, 806, 844, 846, 848, 1195], "mxnet": [0, 5, 15, 20, 137, 138, 139, 142, 147, 1195], "either": [0, 5, 12, 18, 19, 21, 40, 41, 75, 76, 79, 80, 81, 90, 91, 126, 127, 129, 132, 133, 136, 137, 138, 142, 144, 145, 159, 209, 226, 229, 407, 423, 426, 443, 446, 548, 549, 550, 551, 552, 568, 571, 573, 576, 583, 586, 588, 591, 618, 621, 643, 646, 653, 656, 658, 661, 683, 687, 694, 717, 762, 766, 767, 872, 900, 904, 905, 908, 955, 956, 1063, 1064, 1065, 1066, 1150, 1167, 1170, 1175, 1178, 1217, 1228, 1229, 1230], "doesn": [0, 5, 18, 21, 127, 129, 137, 142, 159], "matter": [0, 5, 14, 127], "been": [0, 5, 19, 42, 43, 92, 93, 124, 126, 129, 132, 133, 136, 137, 138, 140, 142, 158, 159, 372, 378, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 1091, 1092], "ivy_np": [0, 5, 129, 131], "us": [0, 5, 12, 15, 16, 17, 19, 20, 40, 41, 42, 43, 54, 55, 56, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 104, 105, 106, 107, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 158, 159, 170, 171, 173, 175, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 208, 279, 318, 319, 322, 330, 333, 372, 374, 388, 392, 395, 396, 397, 398, 402, 404, 406, 407, 428, 431, 453, 456, 468, 470, 478, 481, 493, 496, 538, 541, 563, 566, 573, 574, 575, 577, 593, 594, 595, 597, 623, 626, 628, 631, 648, 649, 668, 671, 694, 738, 741, 750, 751, 766, 772, 773, 775, 776, 783, 784, 785, 786, 787, 788, 806, 808, 811, 813, 815, 829, 831, 833, 835, 851, 861, 867, 868, 870, 871, 872, 883, 886, 888, 891, 900, 904, 909, 912, 955, 956, 959, 985, 986, 989, 1001, 1015, 1018, 1019, 1022, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1051, 1054, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1076, 1077, 1078, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1150, 1151, 1154, 1184, 1185, 1188, 1195, 1217, 1225, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236], "ivy_jax": [0, 5, 131], "subsequ": [0, 6, 18, 124, 127, 129, 132, 135, 139, 146], "call": [0, 6, 12, 15, 19, 21, 72, 77, 78, 79, 80, 81, 123, 124, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 159, 372, 374, 397, 694, 771, 778, 800, 806, 817, 818, 900, 904, 955, 956, 1067, 1068, 1073, 1077, 1078, 1217, 1228, 1229, 1230, 1233, 1237], "nativ": [0, 6, 29, 31, 32, 33, 34, 35, 75, 76, 79, 82, 83, 129, 130, 134, 137, 139, 144, 145, 209, 248, 249, 251, 279, 284, 285, 306, 312, 372, 375, 376, 377, 378, 379, 382, 392, 403, 406, 694, 760, 762, 765, 793, 1206, 1207], "native_arrai": [0, 6, 12, 34, 35, 36, 37, 40, 41, 42, 43, 84, 85, 90, 91, 92, 93, 114, 115, 129, 131, 170, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 201, 205, 209, 232, 235, 243, 246, 274, 278, 279, 291, 292, 294, 301, 304, 313, 316, 319, 322, 330, 333, 346, 349, 357, 360, 372, 391, 407, 408, 411, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 498, 499, 501, 503, 504, 506, 518, 521, 523, 526, 528, 529, 531, 533, 536, 538, 541, 548, 551, 553, 556, 558, 561, 563, 566, 573, 576, 593, 596, 598, 601, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 651, 653, 656, 658, 661, 663, 666, 668, 671, 673, 676, 688, 694, 695, 696, 697, 698, 699, 703, 707, 710, 713, 714, 733, 738, 741, 743, 746, 765, 792, 794, 795, 797, 798, 799, 806, 808, 811, 824, 827, 844, 848, 851, 852, 855, 858, 861, 862, 865, 871, 872, 878, 881, 883, 886, 888, 891, 918, 921, 955, 959, 960, 964, 985, 986, 989, 996, 999, 1001, 1002, 1005, 1015, 1018, 1019, 1022, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1043, 1046, 1051, 1054, 1091, 1092, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1128, 1139, 1145, 1147, 1148, 1150, 1151, 1154, 1155, 1158, 1179, 1183, 1184, 1185, 1188], "1": [0, 6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 124, 127, 129, 130, 131, 132, 136, 139, 140, 141, 142, 144, 145, 146, 147, 159, 170, 171, 172, 173, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 209, 210, 211, 212, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 274, 278, 279, 286, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 313, 316, 318, 319, 322, 346, 349, 357, 358, 361, 372, 378, 379, 382, 387, 390, 391, 398, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 458, 461, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 513, 516, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 560, 561, 562, 563, 566, 568, 571, 573, 574, 575, 576, 577, 578, 581, 583, 586, 598, 601, 613, 614, 616, 623, 626, 628, 631, 638, 641, 643, 644, 645, 646, 647, 648, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 685, 686, 687, 688, 694, 695, 696, 697, 698, 699, 702, 703, 707, 708, 709, 710, 711, 713, 714, 733, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 763, 765, 769, 772, 773, 781, 783, 784, 785, 786, 787, 788, 792, 794, 795, 796, 797, 798, 799, 804, 806, 808, 809, 810, 811, 812, 824, 826, 827, 828, 844, 845, 846, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 886, 888, 889, 890, 891, 892, 900, 903, 918, 920, 921, 922, 928, 931, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 971, 972, 973, 974, 975, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1050, 1051, 1054, 1067, 1070, 1079, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "type": [0, 6, 12, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 138, 139, 140, 142, 144, 145, 147, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 702, 703, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 762, 763, 764, 765, 769, 772, 773, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 816, 820, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228], "ndarrai": [0, 6, 34, 35, 124, 125, 135, 137, 138, 139, 144, 209, 213, 214, 215, 248, 251, 694, 794, 798], "Or": [0, 6, 145], "jaxlib": [0, 6, 18, 124, 125, 137, 138, 144], "xla_extens": [0, 6, 124, 125, 137, 138, 144], "devicearrai": [0, 6, 144], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 127, 129, 131, 136, 139, 140, 145, 146, 147, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 279, 286, 288, 289, 290, 291, 293, 295, 296, 298, 300, 301, 302, 303, 304, 305, 308, 310, 313, 314, 315, 316, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 335, 336, 338, 339, 340, 341, 343, 345, 346, 348, 349, 350, 351, 353, 354, 355, 357, 359, 361, 371, 372, 378, 379, 380, 381, 382, 383, 388, 389, 392, 397, 404, 406, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 456, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 631, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 703, 707, 709, 711, 714, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 733, 735, 738, 740, 742, 743, 745, 747, 749, 752, 753, 760, 762, 763, 765, 766, 774, 777, 779, 781, 782, 783, 785, 787, 794, 795, 797, 801, 802, 803, 804, 806, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 847, 850, 872, 873, 874, 875, 876, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 905, 907, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 953, 954, 955, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 977, 978, 979, 980, 981, 983, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1077, 1078, 1079, 1080, 1086, 1088, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1206, 1207, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 44, 45, 94, 95, 133, 806, 844, 845, 846, 847, 848], "unset": [0, 12, 133, 142, 144], "adjust": [0, 12, 66, 67, 1150, 1171, 1174, 1179, 1181, 1183], "dict": [0, 12, 29, 30, 31, 32, 33, 42, 43, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 125, 130, 136, 140, 145, 146, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 372, 378, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 700, 707, 709, 711, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1067, 1069, 1070, 1073, 1076, 1079, 1080, 1083, 1084, 1086, 1088, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "previous": [0, 12, 18, 21, 129, 132, 142, 694, 705], "otherwis": [0, 12, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 44, 45, 50, 51, 54, 55, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 124, 129, 135, 136, 137, 138, 142, 144, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 232, 234, 236, 256, 258, 260, 274, 275, 277, 279, 286, 289, 291, 293, 295, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 336, 339, 346, 349, 357, 359, 361, 372, 378, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 704, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 800, 806, 824, 825, 826, 827, 828, 842, 844, 845, 847, 872, 873, 874, 875, 876, 877, 883, 886, 918, 920, 922, 970, 974, 975, 979, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1063, 1064, 1065, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1117, 1124, 1125, 1127, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "implement": [0, 12, 20, 122, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 170, 201, 205, 279, 286, 289, 357, 360, 372, 398, 402, 407, 408, 411, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 443, 446, 488, 491, 493, 496, 513, 516, 518, 521, 568, 571, 573, 576, 578, 581, 583, 586, 618, 621, 638, 641, 643, 646, 658, 661, 663, 666, 683, 687, 688, 872, 893, 896, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1195], "wa": [0, 12, 15, 19, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 127, 142, 144, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 800, 824, 826, 828, 844, 845, 847, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "last": [0, 12, 16, 19, 52, 53, 68, 69, 75, 76, 102, 103, 118, 119, 127, 129, 131, 133, 140, 159, 170, 191, 194, 372, 378, 806, 841, 850, 851, 869, 872, 878, 881, 888, 891, 909, 912, 965, 969, 970, 974, 985, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1019, 1022, 1037, 1040, 1042, 1047, 1050, 1139, 1140, 1143, 1145, 1148, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1227], "henc": [0, 12, 129, 136, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "here": [0, 12, 18, 19, 20, 123, 124, 125, 127, 129, 130, 131, 136, 142, 143, 144, 145, 146, 147, 158, 159], "tensor": [0, 12, 14, 75, 76, 123, 124, 125, 130, 132, 133, 135, 137, 138, 139, 142, 144, 145, 146, 147, 159, 209, 237, 238, 240, 241, 279, 313, 316, 407, 453, 456, 613, 614, 616, 694, 769, 772, 773, 851, 867, 869, 872, 960, 964, 1001, 1015, 1018, 1042, 1091, 1092, 1113, 1116, 1195, 1217, 1225, 1227], "howev": [0, 12, 15, 18, 20, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 144, 145, 146, 147, 159], "befor": [0, 12, 18, 19, 20, 75, 76, 126, 129, 134, 135, 137, 138, 139, 142, 145, 159, 372, 374, 397, 407, 689, 693, 851, 870, 871, 1063, 1064, 1065, 1067, 1079, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1167, 1170, 1175, 1178], "becom": [0, 12, 14, 16, 19, 127, 136, 142, 147, 159, 1001, 1002, 1005], "swap": [0, 12, 1001, 1051, 1054], "python": [0, 12, 13, 14, 15, 18, 19, 21, 79, 80, 81, 129, 140, 142, 144, 145, 159, 209, 210, 211, 372, 392, 406, 407, 643, 646, 900, 904, 955, 956, 1195, 1201], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 80, 81, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 122, 124, 127, 128, 130, 131, 132, 133, 134, 135, 138, 141, 144, 147, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1243], "op": [0, 12, 123, 142, 159], "eagertensor": [0, 12], "def": [1, 20, 79, 80, 81, 123, 124, 125, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 280, 281, 282, 283, 373, 807, 900, 904, 955, 956, 1195, 1209, 1212, 1215], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 80, 81, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 147, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1204, 1205, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1243], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 31, 33, 75, 76, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 143, 144, 147, 279, 324, 325, 327, 328, 335, 371, 372, 385, 386, 388, 390, 404, 694, 736, 737, 757, 760, 761, 767, 793, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 849, 1195, 1201, 1206, 1207, 1233, 1234, 1235, 1236, 1237, 1238], "ml": [13, 15, 16, 17, 141, 142, 143, 145, 146, 147, 158, 1195, 1201], "explos": [13, 15, 1195], "A": [13, 14, 15, 16, 21, 34, 35, 36, 37, 68, 69, 72, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 93, 94, 95, 104, 105, 108, 109, 118, 119, 122, 129, 132, 136, 137, 138, 142, 145, 159, 209, 223, 224, 248, 249, 251, 279, 291, 292, 293, 294, 295, 372, 397, 407, 633, 636, 694, 751, 783, 785, 787, 792, 844, 845, 847, 872, 900, 904, 928, 931, 941, 943, 945, 948, 950, 954, 955, 956, 1001, 1002, 1004, 1006, 1042, 1047, 1050, 1067, 1068, 1070, 1072, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1109, 1110, 1112, 1150, 1151, 1154, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1239, 1240], "huge": [13, 15, 145, 1195], "number": [13, 14, 18, 23, 26, 27, 36, 37, 42, 43, 54, 55, 62, 63, 66, 67, 68, 69, 72, 75, 76, 77, 78, 86, 87, 90, 91, 92, 93, 100, 101, 104, 105, 112, 113, 118, 119, 127, 129, 131, 136, 138, 139, 142, 145, 147, 206, 207, 208, 209, 210, 211, 213, 215, 223, 224, 237, 238, 240, 241, 243, 246, 248, 251, 279, 291, 292, 293, 294, 295, 312, 318, 319, 322, 330, 333, 336, 339, 341, 344, 346, 349, 351, 354, 357, 358, 359, 360, 361, 372, 389, 390, 391, 407, 423, 426, 443, 446, 483, 486, 523, 526, 528, 531, 613, 614, 615, 617, 618, 621, 638, 641, 643, 646, 648, 651, 653, 656, 689, 693, 694, 695, 698, 735, 751, 753, 768, 783, 784, 785, 786, 787, 799, 805, 851, 870, 872, 888, 891, 893, 896, 918, 920, 921, 922, 941, 943, 950, 954, 970, 974, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1014, 1023, 1026, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1042, 1047, 1050, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1091, 1092, 1108, 1113, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228], "tool": [13, 16, 19, 127, 143, 147, 158, 159, 1195], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 158, 159, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 319, 322, 372, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 824, 825, 826, 827, 828, 842, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "explod": [13, 14, 1195], "onto": [13, 14, 1067, 1073, 1079, 1195], "scene": [13, 14, 122, 141, 143, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1195], "b": [13, 16, 17, 23, 26, 27, 40, 41, 72, 73, 74, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 127, 132, 133, 136, 141, 142, 143, 145, 146, 147, 157, 170, 201, 202, 204, 205, 209, 232, 234, 235, 236, 274, 278, 279, 291, 293, 294, 295, 301, 303, 304, 305, 313, 316, 346, 349, 357, 359, 361, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 431, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 456, 468, 470, 471, 472, 478, 481, 483, 485, 486, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 518, 520, 521, 523, 525, 526, 528, 530, 531, 532, 533, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 560, 561, 562, 563, 566, 573, 575, 576, 577, 593, 595, 596, 597, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 671, 673, 676, 683, 684, 686, 687, 688, 694, 695, 697, 698, 699, 702, 703, 707, 709, 710, 711, 713, 714, 733, 738, 741, 743, 745, 746, 747, 783, 785, 786, 787, 794, 795, 797, 798, 799, 806, 808, 810, 811, 812, 824, 826, 827, 828, 844, 845, 847, 848, 851, 852, 854, 855, 856, 858, 861, 862, 864, 865, 866, 871, 872, 873, 875, 876, 877, 878, 881, 883, 886, 888, 891, 918, 920, 921, 922, 928, 931, 945, 948, 955, 959, 960, 964, 980, 984, 985, 986, 988, 989, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1015, 1018, 1019, 1022, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1050, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1113, 1115, 1116, 1117, 1118, 1124, 1125, 1127, 1128, 1139, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1194, 1195, 1201], "why": [13, 15, 19, 124, 136, 139, 144, 1195], "unifi": [13, 15, 75, 76, 135, 142, 159, 372, 397, 1195], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 40, 41, 50, 51, 54, 55, 66, 67, 72, 73, 74, 75, 76, 77, 78, 90, 91, 100, 101, 104, 105, 108, 109, 116, 117, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 170, 191, 193, 195, 201, 202, 203, 204, 205, 206, 207, 209, 243, 246, 261, 263, 265, 266, 268, 270, 279, 296, 299, 372, 374, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 705, 760, 769, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 900, 903, 905, 908, 918, 920, 921, 922, 928, 931, 933, 935, 936, 939, 945, 948, 950, 954, 960, 964, 965, 969, 970, 974, 975, 979, 1001, 1032, 1033, 1034, 1035, 1036, 1091, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1195], "them": [13, 14, 15, 16, 122, 129, 131, 133, 134, 135, 136, 142, 144, 145, 146, 159, 1195], "c": [13, 15, 16, 17, 44, 45, 48, 49, 66, 67, 79, 80, 81, 90, 91, 94, 95, 122, 127, 132, 136, 141, 142, 143, 145, 159, 279, 319, 322, 330, 333, 407, 573, 575, 576, 577, 628, 631, 653, 655, 656, 694, 702, 703, 713, 799, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 852, 853, 861, 900, 904, 955, 956, 1001, 1047, 1050, 1067, 1070, 1083, 1084, 1113, 1116, 1150, 1151, 1154, 1171, 1174, 1179, 1181, 1183, 1195, 1201], "standard": [13, 56, 57, 58, 59, 66, 67, 106, 107, 108, 109, 122, 123, 124, 126, 128, 129, 135, 139, 159, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 563, 566, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 872, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1102, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1171, 1174, 1179, 1181, 1183, 1184, 1185, 1188, 1195, 1201, 1231, 1232], "re": [13, 14, 15, 17, 18, 19, 20, 21, 42, 43, 92, 93, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 147, 159, 372, 397, 694, 718, 719, 720, 721, 722, 872, 960, 964, 1001, 1037, 1040, 1113, 1117, 1195], "collabor": [13, 14, 15, 1195], "consortium": [13, 15, 1195, 1201], "data": [13, 15, 18, 23, 24, 25, 26, 27, 28, 34, 35, 37, 40, 41, 44, 45, 50, 51, 54, 55, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 85, 87, 90, 91, 94, 95, 100, 101, 104, 105, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 131, 132, 134, 136, 138, 139, 144, 170, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 284, 285, 286, 289, 296, 299, 301, 302, 303, 304, 305, 306, 313, 316, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 360, 362, 366, 371, 372, 374, 375, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 702, 703, 762, 763, 765, 789, 806, 824, 825, 826, 827, 828, 849, 851, 868, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 945, 948, 950, 954, 960, 964, 965, 969, 970, 974, 975, 979, 1001, 1015, 1018, 1019, 1022, 1023, 1026, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1125, 1126, 1127, 1139, 1140, 1143, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1201, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228], "api": [13, 14, 18, 19, 122, 124, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 141, 143, 145, 159, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 563, 566, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 872, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188, 1195, 1201], "open": [14, 15, 16, 17, 18, 19, 21, 58, 59, 108, 109, 126, 158, 209, 210, 211, 1091, 1093, 1094, 1095, 1096, 1097, 1103, 1106, 1195], "project": [14, 15, 16, 18, 19, 21, 123, 129, 133, 144, 146, 158, 159, 1091, 1092, 1098, 1101, 1233, 1234, 1235, 1236, 1238], "grown": 14, "consider": [14, 124, 127], "recent": [14, 15, 18, 19, 129], "year": [14, 16, 159, 1195], "especi": [14, 18], "deep": [14, 17, 19, 20, 75, 76, 131, 136, 141, 145, 1195], "learn": [14, 15, 18, 20, 122, 132, 141, 147, 158, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1063, 1064, 1065, 1066, 1195, 1233, 1234, 1235, 1236, 1237, 1238], "can": [14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 54, 55, 58, 59, 79, 80, 81, 86, 87, 104, 105, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 158, 159, 209, 213, 214, 215, 248, 251, 279, 301, 302, 303, 304, 305, 372, 395, 396, 397, 872, 900, 903, 904, 955, 956, 1001, 1032, 1033, 1034, 1035, 1036, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1195, 1201], "seen": [14, 15, 127, 129, 144, 145], "rapidli": 14, "increas": [14, 1001, 1011, 1014, 1059, 1062, 1067, 1079], "github": [14, 19, 20, 126, 127, 129], "repo": [14, 15, 16, 18, 19, 128, 142, 144, 145, 146, 147, 158, 1195, 1201], "contain": [14, 18, 20, 21, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 62, 63, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 129, 132, 134, 137, 139, 141, 142, 143, 146, 147, 159, 170, 171, 176, 181, 184, 186, 189, 191, 196, 199, 201, 203, 205, 209, 210, 211, 213, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 248, 253, 254, 256, 259, 261, 263, 265, 266, 268, 270, 271, 273, 274, 278, 279, 286, 291, 292, 294, 296, 301, 304, 308, 313, 316, 319, 322, 324, 327, 330, 333, 336, 339, 341, 346, 349, 351, 357, 360, 372, 379, 387, 391, 398, 407, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 513, 514, 516, 518, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 671, 673, 674, 676, 678, 680, 682, 683, 685, 687, 688, 689, 691, 693, 694, 695, 698, 700, 703, 706, 707, 710, 713, 714, 718, 723, 728, 733, 738, 741, 743, 746, 752, 755, 764, 777, 783, 784, 786, 792, 794, 798, 799, 802, 806, 808, 811, 813, 817, 820, 824, 827, 829, 833, 837, 844, 848, 851, 852, 855, 858, 861, 862, 865, 871, 872, 873, 874, 876, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 914, 918, 921, 923, 926, 928, 931, 933, 935, 936, 939, 941, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 985, 986, 987, 989, 991, 992, 994, 996, 997, 999, 1001, 1002, 1003, 1005, 1007, 1011, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1043, 1046, 1047, 1051, 1054, 1055, 1059, 1063, 1064, 1065, 1066, 1067, 1080, 1083, 1085, 1086, 1089, 1091, 1092, 1093, 1098, 1103, 1109, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1126, 1128, 1129, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1188, 1190, 1191, 1193, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "term": [14, 19, 136, 851, 869, 1217, 1227], "time": [14, 15, 16, 18, 19, 20, 62, 63, 112, 113, 124, 125, 127, 129, 132, 136, 137, 142, 145, 147, 159, 806, 813, 815, 829, 831, 851, 869, 1001, 1055, 1058, 1063, 1064, 1065, 1066, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1217, 1228, 1229, 1230], "These": [14, 15, 16, 19, 124, 126, 127, 129, 130, 131, 132, 136, 137, 139, 142, 143, 145, 146, 147, 159, 872, 893, 896, 1195, 1201], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 40, 41, 42, 43, 54, 55, 58, 59, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 90, 91, 92, 93, 100, 101, 104, 105, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 159, 160, 168, 209, 210, 211, 232, 234, 236, 372, 387, 391, 393, 397, 407, 488, 489, 490, 491, 492, 598, 601, 603, 606, 648, 651, 658, 659, 660, 661, 662, 683, 684, 685, 686, 687, 694, 695, 696, 697, 698, 699, 702, 703, 704, 748, 752, 756, 757, 761, 768, 770, 777, 789, 802, 806, 841, 850, 851, 868, 872, 878, 881, 900, 904, 905, 908, 909, 912, 918, 920, 921, 922, 933, 935, 950, 954, 955, 956, 959, 970, 974, 1001, 1002, 1003, 1004, 1005, 1006, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1067, 1069, 1073, 1079, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1195, 1239, 1240], "written": [14, 18, 123, 124, 126, 129, 130, 135, 139, 142, 144, 147, 159], "mani": [14, 15, 16, 18, 19, 20, 75, 76, 124, 126, 127, 129, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 159, 1001, 1042], "differ": [14, 15, 16, 18, 19, 40, 41, 72, 75, 76, 77, 78, 122, 123, 124, 126, 127, 129, 130, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 159, 279, 319, 322, 407, 423, 426, 618, 621, 678, 680, 682, 851, 868, 1001, 1047, 1050, 1150, 1167, 1170, 1175, 1178, 1195], "while": [14, 15, 18, 19, 72, 75, 76, 77, 78, 127, 129, 133, 139, 140, 146, 147, 159, 407, 598, 601, 603, 606, 1118, 1119, 1123, 1150, 1159, 1162], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 159, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 291, 292, 293, 295, 301, 302, 303, 304, 305, 319, 322, 330, 333, 336, 339, 346, 349, 357, 358, 359, 360, 361, 372, 374, 379, 380, 381, 383, 392, 397, 398, 399, 400, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 760, 771, 778, 783, 784, 785, 787, 794, 795, 796, 797, 806, 808, 809, 810, 812, 813, 815, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 841, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 856, 858, 862, 863, 864, 865, 866, 868, 871, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 900, 904, 909, 912, 918, 920, 922, 941, 943, 955, 956, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1006, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1050, 1067, 1073, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1155, 1158, 1159, 1162, 1171, 1174, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1201, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238], "wonder": [14, 16, 144], "thing": [14, 15, 16, 18, 19, 20, 129, 133, 144, 145], "research": [14, 158], "develop": [14, 15, 16, 17, 18, 19, 20, 158, 159, 1195], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 291, 292, 293, 295, 301, 302, 303, 304, 305, 336, 339, 346, 349, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 741, 742, 743, 744, 745, 747, 760, 783, 784, 785, 787, 794, 795, 796, 797, 806, 808, 809, 810, 812, 813, 815, 824, 825, 826, 828, 844, 845, 846, 847, 851, 852, 853, 854, 856, 858, 862, 863, 864, 865, 866, 868, 871, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 918, 920, 922, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1006, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1077, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1155, 1158, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1217, 1227], "consid": [14, 15, 75, 76, 100, 101, 123, 132, 143, 144, 145, 407, 598, 601, 603, 606, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "speed": [14, 129], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 40, 41, 72, 75, 76, 77, 78, 94, 95, 100, 101, 114, 115, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 157, 159, 170, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 372, 374, 398, 402, 407, 478, 481, 643, 644, 673, 676, 806, 808, 810, 811, 812, 841, 850, 851, 861, 862, 865, 872, 918, 920, 921, 922, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1145, 1147, 1148, 1150, 1151, 1154, 1195, 1201], "significantli": 14, "hinder": [14, 124], "librari": [14, 15, 16, 23, 26, 27, 130, 142, 147, 157, 159, 372, 398, 402, 407, 518, 521, 598, 601, 603, 606, 872, 893, 896, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1195], "outdat": 14, "month": 14, "rigor": [14, 129], "maintain": [14, 19, 1139, 1140, 1143, 1145, 1148], "against": [14, 36, 37, 75, 76, 86, 87, 90, 91, 100, 101, 129, 159, 279, 291, 292, 293, 294, 614, 615, 617, 872, 905, 908, 909, 912, 918, 920, 921, 922, 933, 935, 1113, 1114], "newest": 14, "version": [14, 15, 16, 18, 19, 126, 130, 131, 137, 142, 144, 872, 893, 896, 1195], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 44, 45, 79, 80, 81, 94, 95, 122, 123, 124, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 170, 201, 205, 209, 210, 211, 243, 246, 407, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 568, 571, 573, 576, 583, 586, 588, 591, 598, 601, 618, 621, 638, 641, 643, 646, 648, 651, 658, 661, 663, 666, 668, 671, 683, 687, 688, 689, 693, 806, 824, 825, 826, 827, 828, 849, 872, 900, 904, 950, 954, 955, 956, 965, 969, 1001, 1002, 1005, 1047, 1050, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1163, 1166, 1175, 1178, 1206, 1207], "softwar": [14, 15, 18, 19], "pipelin": [14, 135, 147], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 34, 35, 54, 55, 58, 59, 66, 67, 68, 69, 72, 75, 76, 77, 78, 100, 101, 104, 105, 108, 109, 118, 119, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 159, 209, 231, 232, 233, 235, 243, 246, 407, 443, 446, 513, 516, 578, 581, 618, 621, 638, 641, 694, 756, 760, 769, 806, 841, 850, 872, 893, 896, 918, 920, 921, 922, 933, 935, 936, 939, 950, 954, 955, 959, 965, 969, 970, 974, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1014, 1015, 1018, 1023, 1026, 1047, 1050, 1059, 1062, 1067, 1068, 1078, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1116, 1150, 1171, 1174, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 147], "signific": [14, 15, 159], "bottleneck": 14, "As": [14, 19, 70, 71, 120, 121, 124, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 159, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 42, 43, 54, 55, 56, 57, 75, 76, 86, 87, 92, 93, 104, 105, 106, 107, 122, 123, 126, 127, 129, 134, 136, 137, 139, 141, 144, 147, 158, 209, 217, 226, 229, 231, 232, 235, 253, 254, 256, 259, 271, 273, 274, 278, 279, 366, 407, 448, 451, 578, 581, 633, 636, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 772, 773, 775, 776, 783, 785, 786, 787, 788, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1001, 1015, 1018, 1032, 1033, 1034, 1035, 1036, 1047, 1050, 1067, 1072, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1195, 1206, 1207, 1217, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238], "futur": [14, 16, 18, 19, 144, 159, 872, 893, 896], "avail": [14, 18, 19, 42, 43, 92, 93, 126, 130, 138, 159, 372, 378, 388, 389, 390, 404, 694, 723, 724, 725, 726, 727], "specif": [14, 19, 20, 42, 43, 92, 93, 122, 124, 125, 129, 130, 131, 132, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 158, 159, 279, 357, 360, 372, 395, 398, 402, 407, 598, 601, 603, 606, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 767, 872, 893, 896, 960, 964, 1001, 1047, 1050, 1063, 1064, 1065, 1066, 1091, 1092, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1195, 1198, 1200, 1201, 1229, 1230], "quickli": [14, 16, 18, 19, 145, 146], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 122, 129, 130, 133, 134, 136, 139, 141, 159, 1217, 1228, 1229, 1230], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 70, 71, 120, 121, 127, 129, 130, 131, 136, 140, 141, 144, 145, 146, 147, 159, 1195], "desir": [14, 19, 36, 37, 75, 76, 86, 87, 130, 279, 286, 289, 301, 302, 303, 304, 305, 372, 398, 402, 694, 756, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228], "provid": [14, 18, 19, 66, 67, 68, 69, 75, 76, 118, 119, 124, 126, 127, 129, 132, 135, 136, 137, 138, 139, 142, 146, 158, 159, 206, 207, 209, 243, 246, 279, 307, 308, 309, 311, 312, 335, 357, 360, 371, 372, 378, 694, 717, 769, 773, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 872, 970, 974, 1001, 1019, 1022, 1047, 1050, 1113, 1114, 1150, 1171, 1174, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1233, 1234, 1235, 1236, 1237, 1238], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 42, 43, 54, 55, 58, 59, 68, 69, 70, 71, 75, 76, 79, 82, 83, 90, 91, 92, 93, 100, 101, 104, 105, 108, 109, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 158, 159, 160, 168, 206, 207, 209, 210, 211, 261, 263, 265, 266, 268, 270, 372, 387, 393, 614, 615, 617, 694, 695, 698, 702, 703, 748, 770, 783, 785, 794, 795, 796, 797, 798, 851, 869, 872, 918, 921, 945, 948, 960, 964, 975, 979, 1001, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1078, 1079, 1080, 1091, 1092, 1103, 1104, 1105, 1106, 1107, 1184, 1189, 1195, 1198, 1200], "modern": [14, 15], "simpl": [14, 18, 19, 123, 126, 127, 129, 132, 135, 136, 137, 138, 139, 142, 144, 146, 147, 159, 694, 733], "scalabl": [14, 142], "manner": [14, 29, 32, 33, 79, 82, 83, 123, 126, 129, 138, 145, 158, 159, 1067, 1079], "must": [14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 126, 127, 132, 135, 136, 137, 138, 142, 146, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 372, 397, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1233, 1237], "determin": [14, 23, 24, 25, 26, 27, 40, 41, 50, 51, 68, 69, 72, 73, 74, 75, 76, 77, 78, 90, 91, 100, 101, 118, 119, 126, 131, 132, 136, 137, 138, 170, 201, 202, 203, 204, 205, 279, 301, 304, 306, 318, 335, 336, 339, 341, 344, 346, 349, 351, 354, 371, 372, 388, 389, 390, 404, 407, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 513, 514, 515, 516, 517, 518, 520, 521, 522, 528, 529, 530, 532, 543, 546, 548, 551, 553, 556, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 608, 611, 618, 619, 620, 621, 622, 638, 639, 640, 641, 642, 643, 644, 646, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 694, 695, 698, 702, 703, 755, 757, 761, 762, 763, 764, 765, 789, 805, 806, 824, 827, 851, 870, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 900, 903, 905, 908, 918, 920, 921, 922, 928, 931, 933, 935, 941, 943, 945, 948, 965, 969, 970, 974, 975, 979, 1063, 1064, 1065, 1066, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "exactli": [14, 16, 127, 136, 138, 1195, 1201], "common": [14, 20, 75, 76, 125, 127, 132, 134, 136, 138, 140, 159], "ground": [14, 129], "li": 14, "between": [14, 52, 53, 72, 75, 76, 77, 78, 90, 91, 102, 103, 124, 127, 129, 131, 132, 135, 136, 141, 143, 144, 145, 147, 158, 209, 210, 211, 279, 319, 322, 407, 443, 446, 614, 615, 617, 638, 641, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1015, 1018, 1047, 1050, 1067, 1073, 1091, 1093, 1096, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1195, 1233, 1235], "find": [14, 18, 19, 75, 76, 129, 142, 145, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1195], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 104, 105, 125, 126, 127, 128, 129, 132, 133, 134, 139, 142, 159, 694, 717, 1001, 1032, 1033, 1034, 1035, 1036, 1233, 1237], "essenti": [14, 15, 20, 127, 132, 138], "order": [14, 18, 19, 21, 72, 75, 76, 77, 78, 100, 101, 124, 126, 127, 130, 131, 133, 135, 136, 137, 138, 144, 145, 147, 159, 407, 443, 446, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 872, 893, 896, 909, 912, 950, 954, 955, 959, 975, 979, 1001, 1019, 1022, 1063, 1064, 1065, 1113, 1116, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1239, 1240], "design": [14, 15, 122, 131, 139, 142, 144, 159], "univers": 14, "abstract": [14, 136, 146, 159, 372, 374, 1233, 1237], "In": [14, 16, 18, 19, 54, 55, 104, 105, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 158, 159, 372, 392, 398, 402, 403, 406, 407, 423, 426, 618, 621, 643, 646, 694, 700, 760, 1001, 1032, 1033, 1034, 1035, 1036, 1091, 1103, 1106, 1195], "search": [14, 18, 29, 32, 33, 61, 79, 82, 83, 111, 123, 127, 129, 1114, 1115, 1116, 1117], "languag": [14, 16, 142], "first": [14, 15, 18, 19, 21, 23, 26, 27, 40, 41, 62, 63, 72, 77, 78, 79, 80, 81, 90, 91, 108, 109, 112, 113, 124, 127, 129, 131, 132, 134, 135, 136, 142, 144, 145, 147, 206, 207, 209, 237, 238, 240, 241, 279, 356, 366, 372, 378, 407, 423, 424, 425, 426, 427, 443, 444, 445, 447, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 503, 504, 506, 528, 531, 533, 534, 538, 539, 541, 558, 559, 561, 563, 564, 566, 588, 589, 591, 593, 594, 596, 603, 604, 606, 608, 609, 611, 618, 619, 621, 628, 629, 631, 638, 639, 641, 678, 679, 680, 681, 682, 694, 702, 806, 817, 818, 872, 878, 881, 888, 891, 893, 896, 900, 904, 905, 908, 928, 931, 936, 939, 950, 954, 955, 956, 960, 964, 970, 974, 1001, 1007, 1010, 1037, 1040, 1047, 1050, 1051, 1054, 1063, 1064, 1065, 1066, 1067, 1068, 1077, 1078, 1091, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1217, 1228, 1229, 1230, 1233, 1237], "see": [14, 17, 18, 19, 20, 23, 26, 27, 40, 41, 66, 67, 68, 69, 72, 77, 78, 79, 80, 81, 90, 91, 100, 101, 118, 119, 124, 127, 128, 131, 132, 136, 138, 144, 145, 158, 159, 209, 210, 211, 226, 229, 237, 238, 240, 241, 279, 296, 299, 357, 360, 407, 423, 424, 425, 426, 427, 443, 444, 445, 447, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 498, 499, 500, 501, 502, 503, 504, 505, 507, 518, 521, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 558, 559, 560, 561, 562, 563, 564, 565, 567, 588, 589, 590, 591, 592, 593, 594, 595, 597, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 618, 619, 620, 621, 622, 628, 629, 630, 631, 632, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 678, 679, 680, 681, 682, 872, 900, 904, 918, 920, 921, 922, 933, 935, 945, 948, 955, 956, 970, 974, 975, 979, 1113, 1115, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "clear": [14, 15, 16, 19, 20, 127, 137, 138, 142, 144, 372, 377], "front": [14, 141, 142, 145, 1195, 1201], "runner": 14, "look": [14, 18, 19, 21, 123, 124, 125, 127, 129, 130, 131, 132, 133, 136, 137, 138, 142, 144, 146, 147, 1195], "littl": [14, 144], "deeper": [14, 19, 122, 141, 1067, 1078, 1079], "follow": [14, 15, 18, 19, 20, 21, 75, 76, 92, 93, 123, 126, 127, 129, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 159, 279, 330, 333, 372, 397, 407, 643, 646, 694, 758, 759, 760, 783, 785, 786, 787, 788, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 870, 871, 872, 936, 939, 975, 979, 1067, 1073, 1079, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1195, 1217, 1227, 1233, 1237], "same": [14, 16, 18, 19, 21, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 58, 59, 62, 63, 66, 67, 75, 76, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 108, 109, 112, 113, 116, 117, 123, 124, 125, 127, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 144, 146, 147, 159, 209, 210, 211, 218, 219, 221, 232, 233, 234, 235, 236, 243, 246, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 372, 397, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 423, 426, 428, 429, 438, 439, 458, 459, 460, 461, 462, 468, 469, 470, 472, 483, 484, 485, 486, 487, 523, 524, 525, 526, 527, 618, 621, 623, 624, 625, 627, 633, 634, 635, 637, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 689, 690, 691, 692, 693, 694, 734, 738, 741, 743, 744, 745, 746, 747, 769, 772, 773, 806, 824, 825, 826, 827, 828, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 923, 926, 933, 935, 936, 939, 945, 948, 950, 954, 965, 969, 970, 974, 1001, 1007, 1010, 1019, 1022, 1023, 1026, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1063, 1064, 1065, 1067, 1080, 1091, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "core": [14, 18, 20, 138, 142, 147, 372, 389, 1195], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 36, 37, 48, 49, 72, 75, 76, 77, 78, 86, 87, 98, 99, 126, 127, 129, 130, 132, 135, 136, 138, 139, 145, 146, 209, 237, 238, 240, 241, 279, 357, 358, 359, 360, 361, 407, 423, 426, 473, 476, 478, 481, 538, 541, 623, 626, 628, 631, 643, 646, 673, 676, 694, 704, 718, 721, 723, 726, 728, 731, 789, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868], "expos": [14, 142, 146, 694, 712], "almost": [14, 19, 131, 136, 143, 145], "ident": [14, 16, 75, 76, 125, 130, 131, 132, 134, 136, 144, 145, 159, 372, 387, 1067, 1080, 1195], "uniqu": [14, 62, 63, 112, 113, 129, 131, 132, 136, 159, 1063, 1064, 1065, 1066, 1067, 1073, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138], "syntax": [14, 15, 140], "There": [14, 18, 19, 127, 130, 132, 135, 136, 137, 140, 142, 145, 159], "onli": [14, 17, 18, 19, 23, 26, 27, 58, 59, 75, 76, 108, 109, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 157, 159, 372, 393, 407, 598, 601, 603, 606, 872, 905, 908, 936, 939, 1001, 1019, 1022, 1067, 1068, 1069, 1077, 1078, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1150, 1159, 1162, 1195, 1233, 1234, 1235, 1236, 1237, 1238], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 159, 160, 168, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 852, 853, 854, 856, 862, 863, 864, 866, 873, 874, 875, 877, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1067, 1068, 1078, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1195], "wai": [14, 15, 18, 129, 133, 139, 144, 145, 146, 147, 159], "manipul": [14, 55, 105, 123, 147, 158, 1002, 1005, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062], "unsurprisingli": [14, 127], "fundament": [14, 136, 142], "consist": [14, 75, 76, 135, 137, 139, 872, 893, 896, 1150, 1151, 1154, 1229, 1230], "each": [14, 15, 16, 18, 19, 20, 24, 25, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 86, 87, 90, 91, 92, 93, 98, 99, 100, 101, 104, 105, 112, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 147, 158, 159, 170, 181, 184, 186, 189, 196, 199, 201, 202, 203, 204, 205, 209, 243, 246, 279, 291, 292, 293, 294, 295, 372, 397, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 506, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 596, 598, 600, 601, 602, 603, 606, 608, 611, 618, 621, 623, 624, 625, 626, 627, 628, 631, 633, 634, 635, 636, 637, 638, 641, 643, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 893, 896, 905, 908, 918, 920, 921, 922, 923, 926, 933, 935, 945, 948, 950, 954, 1001, 1011, 1014, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1042, 1047, 1050, 1055, 1058, 1059, 1062, 1067, 1073, 1080, 1091, 1092, 1113, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1150, 1151, 1154, 1195, 1201, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "veri": [14, 15, 18, 19, 123, 124, 127, 129, 132, 136, 138, 139, 143, 145, 146, 147, 159, 1195], "similar": [14, 79, 80, 81, 123, 129, 134, 136, 137, 138, 145, 159, 407, 643, 646, 851, 870, 900, 904, 955, 956, 1217, 1228], "convent": [14, 158, 872, 905, 908, 1150, 1151, 1154], "those": [14, 18, 19, 20, 54, 55, 75, 76, 79, 80, 81, 104, 105, 129, 134, 136, 142, 147, 209, 210, 211, 806, 849, 872, 900, 904, 936, 939, 950, 954, 955, 956, 1001, 1002, 1003, 1004, 1005, 1006], "introduc": [14, 136, 145, 1001, 1037, 1040, 1118, 1119, 1123], "2006": 14, "layer": [14, 49, 56, 57, 99, 106, 107, 123, 126, 142, 143, 146, 852, 855, 857, 858, 859, 860, 861, 862, 865, 867, 868, 869, 870, 871, 1085, 1086, 1087, 1088, 1089, 1090, 1195, 1208, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240], "therefor": [14, 19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 142, 144, 146, 159, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 483, 486, 518, 521, 523, 526, 548, 551, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 888, 891, 1001, 1037, 1040, 1085, 1086, 1089, 1118, 1124, 1128, 1150, 1155, 1158, 1184, 1185, 1188], "present": [14, 19, 75, 76, 124, 128, 136, 137, 138, 139, 142], "itself": [14, 18, 19, 124, 130, 136, 139, 146, 158, 159, 694, 700, 1067, 1079], "cut": 14, "cloth": 14, "adher": [14, 15, 126, 128, 142, 147], "semant": [14, 142, 147, 407, 643, 646], "round": [14, 15, 16, 18, 19, 20, 21, 40, 41, 90, 91, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 407, 423, 426, 483, 484, 485, 486, 487, 523, 524, 525, 526, 527, 528, 531, 618, 621, 652, 668, 671, 689, 690, 691, 692, 693, 1195], "up": [14, 15, 16, 17, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 158, 159], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158], "paint": [14, 142], "pictur": [14, 142], "how": [14, 16, 17, 18, 19, 20, 21, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 158, 159, 1195, 1201, 1217, 1228, 1229, 1230], "pleas": [14, 15, 16, 18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 1195], "check": [14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 44, 45, 75, 76, 94, 95, 125, 127, 129, 134, 136, 141, 142, 144, 145, 146, 147, 158, 279, 306, 324, 325, 327, 328, 335, 341, 344, 351, 354, 371, 372, 385, 386, 392, 406, 694, 704, 733, 736, 737, 752, 755, 762, 763, 764, 765, 777, 789, 802, 805, 806, 824, 825, 826, 827, 828, 872, 893, 896, 1067, 1068, 1077, 1078, 1079, 1195], "out": [14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 313, 315, 317, 372, 398, 399, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 713, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1225], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 1195], "faq": [14, 15, 16, 142, 144, 145, 146, 147, 158], "reach": [14, 15, 16, 18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 1067, 1079], "discord": [14, 15, 16, 18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 1195], "you": [14, 15, 16, 17, 18, 19, 20, 21, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 158, 159, 1195, 1201], "question": [14, 15, 16, 18, 19, 127, 129, 142, 144, 145, 146, 147, 158, 159, 1195], "With": [15, 16, 18, 23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 66, 67, 72, 75, 76, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 127, 129, 130, 142, 170, 176, 179, 181, 184, 186, 189, 191, 194, 196, 199, 201, 205, 209, 232, 233, 234, 235, 236, 243, 246, 274, 278, 279, 291, 292, 293, 294, 295, 301, 304, 313, 316, 318, 319, 322, 330, 333, 346, 349, 357, 360, 362, 372, 391, 407, 408, 411, 413, 416, 418, 421, 423, 426, 427, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 468, 471, 472, 478, 481, 483, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 518, 521, 523, 526, 528, 529, 530, 531, 532, 533, 536, 538, 541, 548, 551, 553, 556, 558, 561, 563, 566, 573, 576, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 661, 663, 666, 668, 671, 673, 676, 683, 687, 688, 694, 695, 696, 697, 698, 699, 703, 707, 708, 709, 710, 711, 713, 714, 733, 738, 741, 743, 746, 747, 783, 786, 792, 794, 795, 796, 797, 798, 799, 806, 808, 809, 811, 824, 825, 826, 827, 828, 844, 845, 846, 847, 848, 851, 852, 855, 858, 861, 862, 865, 871, 872, 873, 876, 877, 878, 881, 883, 886, 888, 891, 909, 912, 918, 920, 921, 922, 955, 959, 960, 964, 985, 986, 989, 990, 991, 995, 996, 999, 1000, 1001, 1002, 1005, 1006, 1015, 1018, 1019, 1022, 1027, 1030, 1032, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1046, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1102, 1103, 1107, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1127, 1128, 1139, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1179, 1181, 1183, 1184, 1185, 1188], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 75, 76, 124, 127, 129, 134, 135, 136, 137, 138, 139, 140, 142, 145, 158, 159, 209, 210, 211, 694, 771, 778, 1118, 1129, 1133, 1195], "would": [15, 18, 19, 21, 54, 55, 104, 105, 122, 124, 126, 127, 129, 133, 134, 135, 136, 139, 141, 142, 144, 146, 147, 159, 170, 191, 194, 372, 398, 402, 1001, 1032, 1033, 1034, 1035, 1036, 1195], "entir": [15, 16, 19, 66, 67, 68, 69, 75, 76, 116, 117, 118, 119, 127, 128, 129, 135, 136, 139, 144, 145, 146, 147, 159, 372, 397, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1226], "forgiven": 15, "rais": [15, 19, 54, 55, 58, 59, 68, 69, 75, 76, 104, 105, 108, 109, 118, 119, 125, 139, 140, 142, 144, 279, 296, 299, 407, 513, 516, 638, 641, 694, 704, 750, 760, 775, 788, 800, 806, 841, 850, 872, 905, 908, 914, 916, 970, 974, 1001, 1032, 1033, 1034, 1035, 1036, 1043, 1046, 1047, 1050, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1116, 1150, 1155, 1158, 1163, 1166, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1229, 1230, 1233, 1237], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 58, 59, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 104, 105, 108, 109, 112, 113, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 158, 159, 170, 181, 184, 186, 189, 196, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 251, 253, 254, 256, 257, 259, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 301, 304, 319, 322, 330, 333, 336, 339, 346, 349, 357, 358, 359, 360, 361, 372, 398, 402, 407, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 506, 508, 509, 513, 514, 516, 518, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 665, 666, 667, 668, 669, 671, 673, 674, 676, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 705, 706, 707, 708, 709, 710, 711, 713, 734, 735, 738, 741, 756, 760, 762, 763, 764, 765, 794, 798, 799, 800, 806, 824, 825, 826, 827, 828, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 858, 862, 865, 871, 872, 873, 874, 876, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 904, 905, 908, 914, 916, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 956, 965, 969, 970, 974, 975, 979, 1001, 1002, 1003, 1005, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1067, 1073, 1085, 1086, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1109, 1111, 1113, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1206, 1207, 1229, 1230, 1233, 1234, 1235, 1237], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 124, 130, 131, 132, 137, 138, 139, 142, 144, 147, 159, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1195, 1233, 1234, 1235, 1236, 1237, 1238], "other": [15, 18, 19, 23, 26, 27, 36, 37, 42, 43, 66, 67, 72, 75, 76, 77, 78, 86, 87, 90, 91, 92, 93, 123, 126, 127, 129, 130, 131, 132, 135, 136, 139, 140, 142, 144, 146, 147, 157, 158, 159, 206, 207, 209, 210, 211, 291, 292, 293, 407, 518, 521, 614, 615, 617, 694, 695, 696, 697, 698, 699, 700, 806, 817, 818, 1091, 1103, 1106, 1118, 1129, 1133, 1150, 1171, 1174, 1179, 1181, 1183, 1195], "strong": [15, 159], "industri": 15, "back": [15, 134, 135, 141, 142, 144, 159, 694, 774, 801, 1195, 1201, 1229, 1230, 1233, 1237], "momentum": 15, "won": [15, 16, 19, 147], "ad": [15, 18, 19, 20, 120, 121, 123, 124, 126, 127, 129, 130, 132, 134, 135, 136, 137, 139, 142, 146, 159, 694, 783, 786, 788, 872, 893, 896, 1001, 1015, 1018, 1239, 1240], "just": [15, 16, 18, 19, 126, 127, 129, 130, 131, 132, 134, 139, 142, 144, 145, 159, 1150, 1151, 1154, 1217, 1226], "make": [15, 16, 18, 19, 20, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147], "problem": [15, 19, 135, 144], "even": [15, 16, 18, 19, 124, 126, 132, 137, 138, 144, 145, 146, 147, 159, 407, 638, 641, 648, 651], "wors": 15, "rather": [15, 19, 44, 45, 75, 76, 94, 95, 123, 126, 129, 136, 147, 159, 209, 210, 211, 372, 397, 694, 762, 763, 765, 806, 824, 825, 826, 827, 828], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 131, 132, 136], "feasibl": 15, "space": [15, 209, 210, 211, 237, 238, 240, 241, 694, 735, 806, 841, 850], "case": [15, 18, 19, 20, 29, 32, 33, 54, 55, 66, 67, 72, 75, 76, 77, 78, 100, 101, 104, 105, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 147, 159, 170, 201, 205, 209, 243, 246, 372, 392, 403, 406, 407, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 478, 481, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 568, 571, 573, 576, 583, 586, 588, 591, 598, 601, 618, 621, 638, 641, 643, 646, 648, 651, 653, 656, 658, 661, 663, 666, 668, 671, 683, 687, 688, 689, 693, 694, 760, 772, 773, 872, 909, 912, 1001, 1032, 1033, 1034, 1035, 1036, 1067, 1070, 1076, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1217, 1228, 1229, 1230, 1233, 1237], "unlik": [15, 127, 136], "charger": 15, "charact": [15, 140], "encod": [15, 145, 694, 735], "instant": [15, 1195], "messag": [15, 19, 127, 140, 142, 144, 1242, 1243], "much": [15, 18, 19, 123, 135, 136, 139, 142, 144, 145], "doe": [15, 19, 21, 75, 76, 79, 80, 81, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 137, 139, 142, 144, 145, 159, 407, 478, 481, 694, 760, 900, 904, 955, 956, 1001, 1042], "mandat": [15, 129, 139], "adopt": [15, 19, 135], "continu": [15, 16, 128, 129, 140, 159], "own": [15, 16, 18, 125, 126, 129, 140, 142, 159], "signatur": [15, 123, 124, 126, 127, 129, 136, 137, 138, 139, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158], "replac": [15, 19, 21, 54, 55, 75, 76, 104, 105, 127, 129, 134, 136, 137, 138, 142, 144, 147, 159, 694, 772, 773, 1001, 1002, 1003, 1004, 1005, 1006, 1091, 1092], "your": [15, 16, 17, 18, 20, 21, 123, 126, 145, 146, 159, 1195], "10": [15, 18, 21, 40, 41, 58, 59, 66, 67, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 129, 131, 136, 142, 144, 145, 209, 231, 232, 234, 235, 236, 240, 241, 242, 407, 418, 419, 420, 421, 422, 453, 456, 458, 461, 493, 494, 495, 496, 497, 518, 521, 538, 541, 563, 566, 573, 574, 575, 576, 577, 663, 664, 665, 666, 667, 668, 671, 694, 714, 738, 741, 771, 778, 783, 785, 786, 787, 806, 829, 830, 831, 832, 851, 852, 854, 855, 856, 861, 872, 883, 886, 888, 891, 928, 931, 955, 959, 960, 964, 1001, 1019, 1022, 1042, 1043, 1045, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1113, 1116, 1118, 1119, 1123, 1150, 1151, 1154, 1155, 1158, 1179, 1181, 1183, 1233, 1235], "100": [15, 16, 129, 145, 146, 147, 159, 407, 668, 671, 1195], "despit": [15, 136, 138], "distinct": [15, 18, 126, 136, 139, 141, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1195], "still": [15, 19, 75, 76, 126, 129, 137, 144, 146, 159, 1195], "believ": [15, 19], "share": [15, 75, 76, 127, 129, 131, 132, 133, 136, 142, 279, 366], "bring": [15, 129, 142, 143], "benefit": [15, 16, 18, 19, 135, 136, 139, 144, 145, 159], "unrel": [15, 19], "what": [15, 16, 19, 122, 124, 126, 127, 129, 134, 136, 140, 141, 142, 144, 145, 146, 147, 158, 159, 1195], "again": [15, 16, 19, 123, 127, 129, 136, 139, 145, 147, 159], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 145], "most": [15, 18, 75, 76, 123, 124, 129, 132, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 159, 872, 893, 896], "technolog": 15, "sector": [15, 40, 41, 90, 91, 407, 418, 419, 420, 421, 422, 433, 434, 435, 436, 437, 448, 449, 450, 451, 452], "full": [15, 16, 19, 23, 26, 27, 72, 77, 78, 124, 126, 129, 137, 142, 159, 209, 279, 319, 322, 407, 538, 541, 563, 566, 851, 861, 872, 918, 921, 936, 939, 945, 948, 950, 954], "success": 15, "reason": [15, 19, 123, 127, 132, 135, 136, 137, 139, 142, 144, 407, 643, 646], "build": [15, 17, 18, 132, 141, 143, 146, 147, 159, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1195, 1217, 1228, 1229, 1230], "custom": [15, 129, 146], "comput": [15, 16, 18, 23, 26, 27, 40, 41, 42, 43, 44, 45, 52, 53, 66, 67, 73, 74, 75, 76, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 116, 117, 129, 130, 132, 136, 142, 145, 159, 191, 193, 195, 372, 397, 407, 423, 426, 453, 456, 468, 471, 478, 481, 503, 506, 508, 509, 510, 511, 512, 533, 536, 538, 541, 558, 561, 563, 566, 593, 596, 598, 601, 603, 606, 608, 611, 614, 615, 617, 618, 621, 623, 626, 628, 631, 694, 706, 707, 708, 709, 710, 711, 714, 715, 806, 808, 811, 813, 815, 817, 818, 820, 822, 829, 831, 833, 835, 837, 839, 841, 842, 844, 845, 846, 847, 848, 850, 851, 852, 855, 857, 858, 859, 860, 861, 862, 865, 868, 870, 872, 873, 876, 878, 881, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 936, 939, 941, 943, 945, 948, 950, 954, 970, 974, 975, 979, 985, 986, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1067, 1073, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183], "thank": [15, 145], "interoper": 15, "compon": [15, 142, 806, 841, 850], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 72, 75, 76, 77, 78, 129, 133, 137, 138, 851, 869, 1210, 1211, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1233, 1237], "pcie": 15, "interfac": [15, 147, 159], "motherboard": 15, "raid": 15, "storag": [15, 145], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 30, 31, 32, 33, 34, 35, 50, 51, 75, 76, 100, 101, 129, 132, 146, 147, 209, 213, 214, 215, 248, 251, 261, 263, 265, 266, 268, 270, 694, 700, 791, 793, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969, 1067, 1069, 1079], "factor": [15, 44, 45, 48, 49, 50, 51, 94, 95, 98, 99, 100, 101, 372, 395, 396, 397, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 833, 835, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 872, 873, 874, 875, 876, 877, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1233, 1234, 1235, 1236], "sata": 15, "connect": [15, 18, 146, 147, 1217, 1227, 1228], "host": [15, 159], "bu": 15, "adapt": [15, 806, 833, 835, 1233, 1236], "devic": [15, 19, 23, 26, 27, 34, 35, 39, 42, 43, 58, 59, 75, 76, 84, 85, 89, 92, 93, 108, 109, 122, 123, 125, 131, 132, 134, 137, 144, 145, 159, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 694, 736, 737, 738, 741, 743, 744, 745, 746, 747, 769, 772, 773, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "html": [15, 21, 126, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158], "enabl": [15, 18, 19, 72, 75, 76, 77, 78, 129, 132, 134, 135, 136, 139, 141, 142, 143, 145, 147, 159, 806, 841, 850], "anyon": [15, 17, 159], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 75, 76, 136, 1067, 1068, 1077, 1078], "commun": [15, 17, 19, 20, 159, 1195, 1201], "network": [15, 132, 136, 142, 146, 158, 851, 868, 1195, 1203, 1217, 1229, 1230], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 54, 55, 104, 105, 126, 127, 129, 136, 137, 139, 142, 145, 158, 159, 694, 766, 792, 1001, 1032, 1033, 1034, 1035, 1036, 1150, 1155, 1158, 1163, 1166], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 208, 279, 319, 322, 407, 423, 426, 518, 521, 618, 621, 643, 646, 668, 671], "754": [15, 208, 279, 319, 322, 407, 423, 426, 518, 521, 618, 621, 643, 646, 668, 671], "allow": [15, 19, 129, 130, 131, 134, 142, 159, 209, 237, 238, 240, 241, 694, 766, 1229, 1230], "calcul": [15, 52, 53, 66, 67, 72, 75, 76, 77, 78, 102, 103, 126, 170, 201, 205, 407, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 488, 491, 493, 496, 498, 501, 513, 516, 518, 521, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 618, 621, 638, 641, 658, 661, 663, 666, 668, 671, 678, 682, 683, 687, 688, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 126, 129, 130, 134, 136, 137, 142, 159, 170, 201, 205, 279, 286, 289, 407, 408, 411, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 443, 446, 488, 491, 493, 496, 513, 516, 518, 521, 568, 571, 573, 576, 578, 581, 583, 586, 638, 641, 658, 661, 663, 666, 683, 687, 688, 872, 893, 896, 936, 939, 945, 948, 950, 954, 1113, 1117, 1139, 1140, 1143, 1145, 1148], "did": [15, 20, 147], "aris": [15, 159], "until": [15, 19, 140, 159, 1195], "substanti": [15, 19, 129, 135], "innov": 15, "growth": 15, "usag": [15, 142, 159, 372, 397], "relev": [15, 18, 19, 20, 127, 136, 137, 145, 1233, 1234, 1235, 1236, 1237, 1238], "area": [15, 40, 41, 90, 91, 139, 157, 407, 418, 419, 420, 421, 422, 433, 434, 435, 436, 437, 448, 449, 450, 451, 452, 1195], "necess": 15, "parti": [15, 159], "could": [15, 16, 18, 19, 127, 129, 134, 136, 137, 139, 142, 144, 145, 146, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "easili": [15, 19, 145, 146, 147, 159, 1195], "engag": [15, 17, 18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "regard": [15, 136], "effect": [15, 66, 67, 124, 126, 135, 136, 159, 209, 243, 246, 806, 837, 839, 1150, 1171, 1174, 1179, 1181, 1183], "2015": 15, "sinc": [15, 18, 19, 129, 159], "alongsid": 15, "machin": [15, 18, 100, 101, 132, 158, 279, 319, 322, 330, 333, 872, 918, 920, 921, 922, 933, 935], "given": [15, 16, 18, 19, 20, 21, 42, 43, 52, 53, 54, 55, 58, 59, 75, 76, 92, 93, 102, 103, 104, 105, 108, 109, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 146, 147, 158, 209, 210, 211, 217, 237, 238, 240, 241, 279, 312, 372, 384, 392, 394, 395, 396, 397, 403, 406, 694, 714, 715, 743, 744, 745, 746, 747, 772, 773, 779, 804, 806, 808, 811, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 852, 855, 857, 858, 859, 860, 861, 862, 865, 872, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1015, 1018, 1019, 1022, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1042, 1055, 1058, 1067, 1074, 1075, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1139, 1145, 1148, 1206, 1207], "frame": [15, 158], "less": [15, 19, 23, 26, 27, 40, 41, 58, 59, 66, 67, 90, 91, 100, 101, 108, 109, 124, 127, 136, 141, 142, 407, 413, 416, 418, 421, 428, 431, 443, 446, 483, 486, 562, 568, 571, 573, 576, 583, 586, 638, 641, 643, 646, 653, 656, 668, 671, 872, 918, 920, 921, 922, 933, 935, 975, 979, 1091, 1103, 1104, 1105, 1106, 1107, 1150, 1179, 1181, 1183], "matur": [15, 159], "state": [15, 124, 126, 129, 141, 142, 143, 145, 158, 279, 370, 407, 618, 621, 694, 749, 782, 801, 802, 803, 851, 869, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "than": [15, 19, 23, 26, 27, 44, 45, 58, 59, 62, 63, 66, 67, 75, 76, 94, 95, 100, 101, 108, 109, 112, 113, 123, 127, 129, 136, 139, 142, 145, 146, 147, 159, 209, 210, 211, 279, 319, 322, 372, 397, 407, 413, 416, 418, 421, 428, 431, 443, 446, 463, 466, 473, 476, 483, 486, 523, 526, 528, 531, 568, 571, 573, 576, 583, 586, 613, 638, 641, 643, 646, 653, 656, 668, 671, 689, 693, 694, 762, 763, 765, 806, 824, 825, 826, 827, 828, 872, 878, 881, 905, 908, 918, 920, 921, 922, 933, 935, 975, 979, 1001, 1002, 1005, 1019, 1022, 1043, 1046, 1091, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1150, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "preced": [15, 146], "mention": [15, 18, 19, 124, 127, 132, 139], "aros": 15, "70": [15, 872, 928, 931, 1150, 1151, 1154], "80": [15, 872, 928, 931, 1150, 1151, 1154], "90": [15, 90, 91, 407, 478, 481, 648, 650, 651, 652, 872, 928, 931, 1150, 1151, 1154], "effort": [15, 17, 129, 159], "stage": [15, 17, 19, 21, 122, 140, 1195], "complet": [15, 19, 20, 75, 76, 127, 135, 136, 144, 145, 872, 936, 939], "natur": [15, 127, 135, 136, 158, 407, 513, 516, 568, 571, 578, 581, 872, 941, 943], "like": [15, 18, 19, 21, 44, 45, 94, 95, 122, 123, 124, 126, 127, 129, 130, 131, 134, 138, 139, 141, 142, 144, 145, 146, 147, 158, 159, 806, 824, 825, 826, 827, 828, 1091, 1103, 1106, 1195], "certainli": 15, "mission": [15, 1195], "creat": [15, 17, 18, 19, 21, 34, 35, 42, 43, 58, 59, 75, 76, 84, 85, 92, 93, 108, 109, 122, 125, 129, 130, 131, 134, 137, 138, 139, 142, 143, 146, 157, 158, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 271, 273, 274, 275, 276, 277, 278, 694, 738, 741, 743, 744, 745, 746, 747, 769, 772, 773, 792, 806, 844, 848, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1195, 1201, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "At": [15, 20, 125], "process": [15, 16, 17, 18, 19, 21, 129, 131, 132, 136, 142, 147, 372, 392, 406], "ourselv": 15, "lead": [15, 16, 72, 75, 76, 77, 78, 159, 872, 936, 939, 950, 954], "quansight": 15, "compani": 15, "made": [15, 19, 20, 136, 139, 142, 144], "organ": [15, 123, 132, 135, 136], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 142, 147], "sympi": 15, "rai": [15, 407, 443, 446], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 34, 35, 66, 67, 68, 69, 75, 76, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 158, 159, 209, 210, 211, 213, 214, 215, 248, 251, 694, 755, 805, 872, 975, 979, 1067, 1068, 1091, 1103, 1106, 1113, 1115, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1200, 1217, 1227, 1228, 1231, 1232], "member": [15, 19], "googl": [15, 1195], "octoml": 15, "einop": [15, 42, 43, 92, 93, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "further": [15, 16, 19, 21, 127, 130, 135, 141, 145, 146, 1195], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 48, 49, 98, 99, 122, 136, 145, 694, 703, 713, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 872, 888, 891, 928, 931, 1067, 1070, 1083, 1084, 1195, 1201], "shaw": 15, "co": [15, 40, 41, 90, 91, 142, 158, 407, 492, 694, 735, 1195], "intel": 15, "togeth": [15, 75, 76, 135, 136, 140, 146, 147, 159, 1239, 1240], "major": [15, 129, 130, 137, 138, 159, 1113, 1116], "involv": [15, 17, 21, 36, 37, 86, 87, 122, 127, 137, 147, 279, 357, 358, 359, 360, 361, 407, 423, 426, 618, 621, 1195, 1201], "anoth": [15, 18, 19, 75, 76, 90, 91, 129, 130, 131, 132, 136, 137, 144, 147, 209, 226, 229, 279, 291, 294, 301, 304, 614, 615, 617], "promis": 15, "sign": [15, 18, 40, 41, 90, 91, 143, 147, 209, 210, 211, 407, 408, 411, 423, 426, 443, 446, 473, 476, 618, 621, 643, 644, 645, 646, 647, 657, 872, 941, 943, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1167, 1170, 1175, 1178], "pursuit": 15, "unif": [15, 17, 144, 1195, 1201], "clearli": [15, 19, 20, 127, 129], "lot": [15, 16, 134, 144, 159], "thought": [15, 18, 19, 124], "care": [15, 19, 147], "attent": [15, 19, 135, 136, 851, 870, 871, 1217, 1228], "gone": [15, 141], "simplifi": [15, 142, 143, 144, 146], "compat": [15, 23, 26, 27, 40, 41, 54, 55, 66, 67, 68, 69, 72, 77, 78, 90, 91, 100, 101, 104, 105, 118, 119, 124, 125, 159, 279, 296, 299, 407, 423, 424, 425, 426, 427, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 618, 619, 620, 621, 622, 628, 629, 630, 631, 632, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 678, 679, 680, 681, 682, 872, 918, 920, 921, 922, 933, 935, 945, 948, 960, 964, 970, 974, 975, 979, 1001, 1032, 1033, 1034, 1035, 1036, 1113, 1115, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "excit": [15, 17, 122, 1195], "complianc": 15, "hope": [15, 159], "due": [15, 18, 23, 26, 27, 130, 136, 139, 407, 618, 621], "suit": [15, 18, 122, 128, 129, 145, 158], "some": [15, 16, 18, 19, 20, 75, 76, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 158, 159, 372, 374, 407, 518, 521, 806, 808, 811, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 849, 851, 867, 1195, 1217, 1225], "motiv": [15, 144], "great": [15, 16, 19, 129, 142, 144], "convinc": 15, "celebr": 15, "encourag": [15, 158, 159, 1195, 1201], "foundat": 15, "point": [16, 19, 24, 25, 40, 41, 50, 51, 58, 59, 66, 67, 73, 74, 90, 91, 100, 101, 108, 109, 116, 117, 124, 126, 127, 129, 135, 139, 142, 144, 145, 158, 170, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 215, 217, 223, 224, 231, 253, 254, 271, 273, 279, 286, 289, 319, 322, 341, 344, 357, 360, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 478, 481, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 526, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 618, 621, 638, 641, 643, 646, 648, 651, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 683, 684, 685, 686, 687, 688, 689, 693, 872, 873, 874, 875, 876, 877, 883, 886, 893, 896, 897, 899, 900, 903, 918, 920, 921, 922, 933, 935, 936, 939, 945, 948, 950, 954, 975, 979, 1091, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183], "mai": [16, 18, 19, 23, 26, 27, 40, 41, 90, 91, 129, 130, 136, 144, 146, 209, 210, 211, 226, 229, 372, 398, 402, 407, 503, 504, 505, 506, 507, 538, 541, 563, 566, 598, 601, 603, 606, 628, 629, 630, 632, 694, 717, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166], "ask": [16, 127, 142, 144, 159, 1195], "perfectli": 16, "happi": [16, 18, 159], "abund": 16, "better": [16, 122, 125, 130, 131, 140, 141, 144, 145, 146], "ll": [16, 17, 19, 127, 136, 139, 145], "give": [16, 18, 19, 122, 124, 126, 127, 133, 144, 1001, 1032, 1035], "two": [16, 18, 34, 35, 50, 51, 72, 77, 78, 100, 101, 126, 127, 129, 130, 131, 135, 136, 141, 145, 147, 209, 210, 211, 223, 224, 243, 246, 261, 263, 265, 266, 268, 270, 279, 356, 366, 407, 473, 476, 648, 651, 694, 702, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 965, 969, 970, 974, 1001, 1051, 1054, 1118, 1119, 1123, 1124, 1128, 1129, 1133, 1134, 1138, 1195], "streamlin": 16, "workflow": [16, 19, 20, 145, 157, 1195], "save": [16, 75, 76, 129, 140, 159, 372, 374, 694, 780, 1229, 1230], "week": [16, 19, 1195], "let": [16, 66, 67, 125, 126, 127, 129, 130, 131, 136, 137, 138, 142, 144, 145, 146, 147, 1150, 1159, 1162, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1195], "sai": [16, 18, 134, 144], "deepmind": 16, "releas": [16, 18, 20, 159, 1195], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 66, 67, 139, 145, 1150, 1171, 1174, 1179, 1181, 1183], "perceiverio": 16, "happen": [16, 18, 19, 129, 145], "slew": 16, "rush": 16, "f": [16, 19, 21, 79, 80, 81, 122, 129, 136, 140, 142, 145, 147, 694, 757, 761, 900, 904, 955, 956, 1067, 1070, 1083, 1084], "g": [16, 58, 59, 79, 80, 81, 108, 109, 122, 136, 159, 279, 285, 357, 360, 372, 375, 900, 904, 955, 956, 1067, 1070, 1083, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1163, 1166, 1167, 1170, 1175, 1178], "inevit": 16, "deviat": [16, 56, 57, 58, 59, 106, 107, 108, 109, 129, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1102, 1150, 1171, 1174, 1231, 1232], "origin": [16, 19, 54, 55, 72, 75, 76, 77, 78, 100, 101, 104, 105, 130, 133, 134, 137, 142, 144, 407, 443, 446, 872, 909, 912, 1001, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041], "often": [16, 129, 132, 140, 159], "erron": 16, "train": [16, 44, 45, 94, 95, 132, 136, 138, 145, 146, 147, 157, 158, 159, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1195], "poor": 16, "converg": 16, "perform": [16, 68, 69, 118, 119, 123, 124, 127, 129, 131, 132, 133, 135, 136, 138, 139, 142, 145, 159, 170, 191, 194, 209, 237, 238, 240, 241, 694, 714, 718, 721, 723, 726, 728, 731, 758, 759, 760, 774, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 867, 869, 872, 950, 954, 1063, 1064, 1065, 1066, 1067, 1074, 1075, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "issu": [16, 17, 20, 127, 129, 142, 144, 146, 159], "etc": [16, 18, 19, 20, 42, 43, 58, 59, 70, 71, 75, 76, 92, 93, 108, 109, 120, 121, 123, 124, 127, 129, 135, 136, 137, 142, 144, 145, 159, 209, 237, 238, 240, 241, 694, 738, 741, 743, 744, 745, 746, 747, 769, 772, 773, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "publish": [16, 159], "manag": [16, 17, 139, 159], "get": [16, 17, 18, 20, 75, 76, 122, 129, 131, 132, 134, 137, 138, 139, 142, 143, 144, 145, 146, 279, 313, 316, 318, 319, 322, 330, 333, 372, 378, 379, 382, 384, 387, 392, 396, 403, 406, 694, 701, 748, 749, 750, 751, 752, 771, 782, 1195, 1201, 1217, 1226], "work": [16, 18, 19, 20, 122, 127, 129, 130, 136, 137, 138, 141, 142, 143, 144, 146, 147, 1195, 1201], "repositori": [16, 18, 19, 21, 128, 140], "pull": [16, 17, 18, 21, 123, 127, 159], "request": [16, 17, 123, 127, 372, 389], "confus": [16, 139], "do": [16, 18, 19, 20, 44, 45, 75, 76, 94, 95, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 159, 407, 643, 646, 694, 760, 806, 824, 825, 826, 827, 828, 849, 1067, 1068, 1077, 1078, 1079], "don": [16, 18, 19, 20, 70, 71, 120, 121, 129, 137, 146, 159], "expect": [16, 19, 129, 159, 694, 701, 1195], "codebas": [16, 17, 122, 123, 139, 141, 372, 395, 396, 1195], "total": [16, 17, 19, 66, 67, 72, 75, 76, 77, 78, 127, 129, 138, 145, 146, 159, 372, 403, 1113, 1116, 1150, 1171, 1174, 1179, 1181, 1183], "hour": 16, "spent": 16, "spin": 16, "off": [16, 18, 141, 872, 888, 891, 965, 969], "test": [16, 18, 20, 40, 41, 68, 69, 90, 91, 118, 119, 122, 127, 140, 159, 279, 336, 339, 346, 349, 407, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "error": [16, 18, 19, 40, 41, 75, 76, 90, 91, 124, 125, 127, 129, 135, 138, 140, 144, 159, 170, 171, 174, 407, 508, 509, 510, 511, 512, 872, 955, 959, 1150, 1155, 1158, 1163, 1166, 1229, 1230, 1233, 1237], "iter": [16, 29, 30, 31, 32, 33, 42, 43, 70, 71, 72, 75, 76, 77, 78, 92, 93, 120, 121, 136, 142, 145, 206, 207, 372, 397, 694, 695, 696, 697, 698, 699, 1001, 1011, 1014, 1027, 1030, 1042, 1055, 1058, 1059, 1062, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1084], "address": [16, 19, 20, 135, 142], "sake": 16, "singl": [16, 19, 58, 59, 75, 76, 108, 109, 123, 124, 127, 129, 132, 134, 136, 139, 142, 145, 146, 147, 159, 694, 799, 805, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123], "multipl": [16, 19, 56, 57, 66, 67, 68, 69, 75, 76, 90, 91, 92, 93, 94, 95, 100, 101, 104, 105, 106, 107, 118, 119, 127, 132, 136, 159, 407, 423, 427, 468, 472, 613, 614, 616, 618, 621, 694, 695, 697, 698, 699, 743, 747, 766, 806, 824, 826, 827, 828, 872, 873, 876, 877, 900, 903, 1001, 1002, 1005, 1006, 1037, 1040, 1041, 1042, 1085, 1086, 1087, 1088, 1089, 1090, 1113, 1114, 1115, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1227], "line": [16, 18, 127, 129, 135, 140, 143, 144, 145, 146, 157, 1195, 1201], "convert": [16, 29, 30, 31, 32, 33, 34, 35, 75, 76, 79, 80, 81, 82, 83, 129, 134, 135, 142, 159, 160, 168, 209, 213, 214, 215, 248, 251, 279, 284, 285, 372, 375, 376, 377, 378, 392, 403, 406, 694, 774, 791, 793, 794, 798, 799, 801, 872, 900, 904, 955, 956, 980, 984, 1067, 1069, 1079, 1080, 1207], "directli": [16, 19, 123, 124, 125, 126, 129, 130, 132, 134, 135, 136, 137, 138, 139, 142, 144, 146, 147, 158, 159, 1067, 1079], "graph": [16, 23, 26, 27, 132, 136, 143, 159, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1229, 1230], "guarante": [16, 135, 159, 1118, 1119, 1123], "turn": [16, 18, 127, 129, 136], "4": [16, 21, 23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 58, 59, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 129, 133, 136, 142, 144, 145, 146, 147, 170, 176, 179, 181, 184, 191, 194, 201, 202, 204, 205, 209, 232, 233, 234, 235, 236, 243, 246, 256, 259, 274, 278, 279, 291, 292, 293, 294, 295, 301, 303, 304, 305, 313, 316, 319, 322, 346, 349, 357, 360, 361, 372, 384, 391, 395, 407, 408, 410, 411, 412, 418, 420, 422, 423, 424, 425, 426, 427, 428, 431, 433, 435, 436, 437, 438, 441, 443, 445, 446, 447, 453, 456, 468, 469, 470, 471, 472, 478, 481, 483, 485, 486, 488, 491, 493, 496, 498, 499, 500, 501, 502, 503, 505, 506, 518, 520, 521, 523, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 573, 574, 576, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 658, 660, 661, 662, 663, 666, 668, 671, 673, 676, 683, 684, 686, 687, 688, 694, 703, 707, 709, 710, 711, 714, 735, 738, 741, 743, 745, 746, 747, 765, 783, 784, 785, 786, 787, 792, 806, 808, 810, 811, 812, 824, 825, 826, 827, 828, 844, 845, 846, 848, 851, 852, 853, 854, 855, 856, 858, 859, 860, 862, 865, 869, 871, 872, 873, 874, 876, 878, 881, 883, 886, 888, 891, 900, 903, 918, 921, 928, 931, 955, 959, 960, 964, 965, 969, 985, 996, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1139, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1184, 1185, 1188, 1195, 1233, 1234, 1235, 1236, 1238], "step": [16, 18, 19, 21, 44, 45, 75, 76, 84, 85, 94, 95, 127, 133, 135, 136, 137, 138, 142, 145, 146, 147, 158, 209, 210, 211, 212, 237, 238, 240, 241, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820, 822, 829, 830, 831, 832, 833, 835, 837, 839, 1063, 1064, 1065, 1066, 1195, 1233, 1234, 1235, 1236, 1237, 1238], "take": [16, 17, 18, 19, 126, 127, 129, 131, 136, 137, 138, 142, 144, 146, 147, 159, 407, 478, 481, 1195, 1201], "few": [16, 19, 129, 132, 136, 137, 138, 139, 140, 143, 144, 145, 146, 157, 1195, 1201], "second": [16, 18, 23, 26, 27, 40, 41, 44, 45, 62, 63, 72, 77, 78, 90, 91, 94, 95, 112, 113, 127, 129, 130, 131, 139, 144, 279, 356, 366, 407, 423, 424, 425, 426, 427, 443, 444, 445, 447, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 503, 504, 506, 528, 531, 533, 534, 538, 539, 541, 558, 559, 561, 563, 564, 566, 588, 589, 591, 593, 594, 596, 603, 604, 606, 608, 609, 611, 618, 619, 621, 628, 629, 631, 638, 639, 641, 678, 679, 680, 681, 682, 694, 702, 771, 778, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 872, 878, 881, 888, 891, 893, 896, 905, 908, 928, 931, 936, 939, 950, 954, 960, 964, 970, 974, 1001, 1047, 1050, 1051, 1054, 1063, 1065, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1233, 1234, 1235], "automat": [16, 18, 19, 122, 124, 132, 136, 141, 142, 143, 146, 147, 1195], "convers": [16, 30, 31, 32, 33, 75, 76, 80, 81, 82, 83, 141, 143, 147, 158, 159, 694, 774, 1195, 1201], "everyon": [16, 17, 19, 159], "regardless": [16, 17, 75, 76, 144, 147, 206, 207], "wouldn": 16, "nice": [16, 129], "write": [16, 19, 20, 21, 24, 25, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 122, 123, 126, 127, 131, 132, 133, 139, 142, 144, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 296, 299, 372, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "onc": [16, 18, 19, 127, 129, 136, 137, 138, 142, 145, 159, 372, 397, 872, 900, 903, 950, 954, 1091, 1092], "know": [16, 19, 129, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "among": [16, 75, 76, 129], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 132, 142], "understand": [16, 18, 19, 20, 21, 122, 124, 126, 127, 128, 130, 131, 140, 141], "pattern": [16, 42, 43, 92, 93, 126, 137, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 136, 142, 146, 159, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 852, 853, 854, 856, 862, 863, 864, 866, 872, 873, 874, 875, 877, 878, 881, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1067, 1069, 1079, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1195, 1201], "now": [16, 18, 21, 75, 76, 123, 124, 129, 134, 136, 137, 140, 144, 145, 147, 158, 159, 209, 274, 278, 1217, 1228, 1229, 1230], "spend": 16, "torchvis": 16, "probabl": [16, 129, 851, 867, 1091, 1092, 1217, 1225], "sonnet": 16, "about": [16, 18, 19, 128, 129, 141, 142, 146, 147, 159, 279, 319, 322, 330, 333], "next": [16, 18, 19, 21, 126, 127, 133, 134, 140, 144, 145, 279, 319, 322, 1195, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238], "everyth": [16, 19, 20, 127, 129, 131, 143, 159], "zero": [16, 23, 26, 27, 34, 35, 36, 37, 40, 41, 44, 45, 66, 67, 68, 69, 72, 77, 78, 84, 85, 86, 87, 90, 91, 94, 95, 100, 101, 108, 109, 116, 117, 118, 119, 124, 127, 129, 134, 135, 136, 137, 138, 142, 145, 146, 170, 176, 179, 181, 184, 201, 205, 209, 217, 223, 224, 243, 246, 261, 263, 265, 266, 268, 270, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 407, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 463, 466, 488, 489, 491, 493, 494, 495, 496, 497, 518, 521, 523, 526, 548, 551, 553, 556, 598, 601, 603, 606, 613, 614, 616, 618, 621, 623, 626, 628, 631, 638, 641, 643, 646, 648, 649, 651, 658, 661, 663, 664, 665, 667, 668, 671, 673, 676, 683, 687, 688, 694, 707, 710, 714, 769, 772, 773, 806, 808, 809, 810, 811, 812, 813, 815, 824, 827, 829, 831, 833, 835, 851, 867, 871, 872, 873, 876, 883, 886, 905, 908, 918, 920, 921, 922, 933, 935, 970, 974, 975, 979, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1059, 1062, 1085, 1086, 1089, 1091, 1093, 1095, 1096, 1098, 1100, 1101, 1103, 1105, 1106, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1233, 1234, 1235, 1236], "need": [16, 18, 19, 20, 21, 42, 43, 92, 93, 123, 126, 127, 128, 130, 131, 132, 135, 136, 139, 142, 144, 145, 158, 159, 694, 706, 707, 708, 709, 710, 711, 1001, 1002, 1005, 1015, 1018], "said": 16, "high": [16, 20, 58, 59, 108, 109, 145, 1091, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107], "level": [16, 17, 19, 20, 132, 141, 142, 145, 146, 147, 159], "optim": [16, 139, 143, 145, 147, 158, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1063, 1064, 1065, 1066, 1195, 1234, 1235, 1236, 1238], "trainer": [16, 157, 159, 1195], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 147], "flax": [16, 147, 159], "trax": [16, 147], "objax": [16, 147], "idea": [16, 125, 130, 140, 158], "fulli": [16, 124, 135, 136, 142, 143, 144, 145, 146, 147, 159, 1217, 1227, 1228], "offer": [16, 146], "strongli": [17, 18, 1195, 1201], "welcom": [17, 18, 19, 1195, 1201], "absolut": [17, 40, 41, 75, 76, 90, 91, 407, 408, 409, 410, 411, 412, 872, 941, 943], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 54, 55, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 124, 127, 136, 137, 139, 170, 171, 173, 174, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 213, 215, 232, 234, 236, 256, 258, 260, 274, 275, 277, 279, 286, 289, 291, 293, 295, 301, 303, 305, 312, 313, 316, 335, 336, 339, 341, 344, 346, 349, 351, 354, 357, 359, 361, 371, 372, 378, 379, 382, 388, 389, 392, 393, 397, 404, 406, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 556, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 703, 707, 709, 711, 714, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 733, 735, 738, 740, 742, 743, 745, 747, 752, 753, 755, 757, 760, 761, 762, 763, 764, 765, 766, 774, 777, 779, 781, 783, 785, 787, 789, 794, 795, 797, 802, 804, 805, 806, 813, 815, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 841, 842, 844, 845, 847, 850, 851, 867, 872, 873, 875, 877, 893, 896, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1077, 1078, 1079, 1080, 1086, 1088, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1206, 1207, 1217, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 75, 76, 84, 85, 122, 126, 127, 130, 137, 141, 142, 144, 145, 146, 158, 159, 209, 210, 211, 212, 237, 238, 239, 240, 241, 242, 372, 374], "aspect": [17, 145, 1195], "guid": [17, 18, 19, 20, 140, 1195], "through": [17, 19, 20, 122, 127, 129, 130, 131, 132, 133, 134, 136, 140, 141, 142, 144, 145, 146, 147, 158, 407, 443, 446, 1067, 1070], "journei": [17, 1195, 1201], "inclusvi": 17, "big": [17, 159], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 141, 1195], "split": [17, 19, 23, 26, 27, 75, 76, 141, 142, 159, 372, 395, 396, 397, 694, 766, 1001, 1195], "section": [17, 19, 20, 122, 123, 124, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "below": [17, 18, 20, 21, 34, 35, 122, 123, 125, 127, 129, 132, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 158, 170, 201, 205, 209, 261, 263, 265, 266, 268, 270, 407, 443, 446, 453, 456, 478, 481, 493, 496, 553, 556, 688, 872, 883, 886, 888, 891, 965, 969, 1001, 1015, 1018, 1019, 1022, 1118, 1119, 1123, 1139, 1140, 1143, 1195], "best": [17, 18, 19, 20, 21, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 694, 766], "go": [17, 18, 19, 20, 122, 123, 127, 130, 131, 136, 141, 145, 159, 1067, 1078], "finish": [17, 18, 122, 1195], "dive": [17, 19, 20, 131, 136, 141, 144, 145, 159, 1195], "right": [17, 18, 19, 75, 76, 122, 127, 145, 407, 463, 466, 473, 476, 872, 950, 954], "environ": [17, 19, 21, 158], "basic": [17, 20, 21, 127], "fork": [17, 18, 694, 767], "doc": [17, 20, 124, 126, 127, 142, 145, 146, 1195], "document": [17, 19, 127, 129, 130, 131, 143, 145, 147], "local": [17, 18, 21, 132], "task": [17, 19, 158, 1063, 1064, 1065, 1066, 1195], "help": [17, 18, 127, 129, 130, 133, 135, 136, 144, 145, 146, 157, 694, 700, 1150, 1175, 1178, 1195], "video": [17, 19, 123, 124, 126, 127, 129, 130, 132, 133], "realli": [18, 136, 159], "contribut": [18, 19, 20, 142, 1201], "toward": [18, 54, 55, 104, 105, 142, 1001, 1037, 1038, 1039, 1040, 1041, 1195, 1201], "page": [18, 19, 143, 147, 157, 1195, 1201], "explain": [18, 19, 20, 123, 124, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 1195, 1201], "main": [18, 21, 34, 35, 134, 136, 209, 223, 224, 261, 263, 265, 266, 268, 270, 872, 888, 891, 965, 969], "prefer": [18, 130, 134, 136], "mode": [18, 19, 50, 51, 75, 76, 100, 101, 127, 136, 159, 206, 207, 372, 397, 407, 423, 426, 618, 621, 694, 752, 774, 777, 779, 801, 802, 803, 872, 936, 937, 938, 939, 940], "git": [18, 19, 129], "recurs": [18, 21, 29, 30, 31, 32, 33, 75, 76, 79, 82, 83, 132, 136, 146, 159, 1067, 1068, 1069, 1077, 1078, 1079], "submodul": [18, 19, 20, 21, 122, 128, 129, 132, 134, 138, 141, 142, 146, 1195, 1231, 1232, 1239, 1240], "com": 18, "unifyai": [18, 19, 21], "http": [18, 126, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 806, 808, 811, 813, 815, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158], "gh": 18, "your_fold": 18, "id": [18, 135, 136, 140, 372, 378, 1229, 1230], "cours": [18, 19, 127, 145, 159], "whatev": [18, 159], "integr": [18, 279, 286, 289], "familiar": [18, 20], "decid": [18, 75, 76, 130, 1067, 1078], "sure": [18, 19, 20, 128, 129], "elig": 18, "free": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 158, 1195], "student": 18, "licenc": 18, "peopl": [18, 19, 122], "seem": [18, 146, 159], "miss": [18, 127, 129, 135, 136, 140, 1233, 1237], "add": [18, 19, 20, 23, 26, 27, 40, 41, 56, 57, 70, 71, 72, 75, 76, 77, 78, 90, 91, 92, 93, 106, 107, 114, 115, 120, 121, 122, 123, 124, 126, 129, 130, 132, 133, 135, 136, 142, 144, 159, 407, 408, 411, 427, 613, 614, 616, 695, 699, 806, 841, 850, 1085, 1086, 1087, 1088, 1089, 1090, 1145, 1149, 1195, 1201, 1231, 1232], "explicit": [18, 21, 136, 137, 139, 142, 159], "remind": 18, "channel": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 694, 735, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227], "pace": 18, "updat": [18, 19, 20, 21, 44, 45, 75, 76, 94, 95, 122, 124, 127, 128, 134, 135, 136, 137, 142, 144, 145, 147, 159, 694, 760, 772, 773, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 869, 1063, 1064, 1065, 1067, 1074, 1075, 1083, 1084, 1206, 1207, 1233, 1234, 1235, 1236, 1237, 1238], "suggest": [18, 19, 123, 129], "latest": [18, 19, 20, 21, 126, 159, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1217, 1226], "packag": [18, 21, 130, 140, 159], "ensur": [18, 19, 20, 124, 125, 127, 129, 130, 134, 135, 137, 140, 694, 760], "align": [18, 75, 76, 142, 144, 1195, 1201], "accord": [18, 21, 36, 37, 66, 67, 86, 87, 130, 132, 137, 279, 301, 302, 303, 304, 305, 312, 319, 322, 407, 423, 426, 473, 476, 618, 621, 694, 738, 741, 772, 773, 872, 970, 974, 1001, 1011, 1014, 1059, 1062, 1150, 1171, 1174, 1179, 1181, 1183], "stabl": [18, 64, 65, 92, 93, 114, 115, 142, 159, 694, 750, 751, 775, 776, 783, 785, 786, 787, 788, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149], "pypi": [18, 20, 159], "mayb": [18, 29, 32, 33, 142, 144], "person": [18, 19], "experi": [18, 143, 145, 159], "avoid": [18, 19, 125, 129, 133, 134, 136, 140, 144, 407, 518, 521], "pip": [18, 158, 1195], "instal": [18, 19, 21, 140, 158, 1195], "abil": [18, 143, 159], "certain": [18, 19, 75, 76, 129, 130, 137, 159, 209, 210, 211, 237, 238, 240, 241], "perhap": [18, 144, 145, 146, 159], "keep": [18, 19, 75, 76, 125, 128, 129, 136, 143, 145, 147, 694, 804], "track": [18, 19, 1067, 1079, 1229, 1230], "termin": [18, 19, 21, 72, 75, 76, 77, 78, 136, 142, 145], "run": [18, 21, 44, 45, 94, 95, 124, 127, 128, 129, 131, 133, 140, 142, 143, 144, 145, 146, 147, 158, 159, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1063, 1064, 1065, 1066, 1217, 1228, 1229, 1230], "command": [18, 21, 1195], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 62, 63, 112, 113, 125, 126, 127, 129, 130, 131, 137, 140, 142, 144, 145, 147, 206, 207, 694, 700, 872, 893, 896, 936, 939, 950, 954, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128], "3": [18, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 58, 59, 66, 67, 72, 73, 74, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 127, 129, 133, 136, 142, 144, 145, 146, 147, 170, 171, 172, 173, 175, 176, 179, 181, 184, 186, 189, 191, 194, 201, 202, 204, 205, 208, 209, 232, 233, 234, 235, 236, 243, 246, 256, 259, 271, 273, 274, 278, 279, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 313, 316, 319, 322, 346, 349, 357, 359, 360, 361, 372, 378, 391, 395, 398, 402, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 451, 453, 456, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 485, 486, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 513, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 573, 575, 576, 577, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 686, 687, 688, 694, 695, 696, 697, 702, 703, 707, 709, 710, 711, 714, 733, 738, 741, 743, 744, 745, 746, 747, 765, 781, 783, 784, 785, 786, 787, 792, 799, 806, 808, 809, 810, 811, 812, 824, 827, 844, 845, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 900, 903, 918, 921, 928, 931, 950, 954, 955, 959, 960, 964, 965, 969, 980, 984, 985, 986, 988, 989, 990, 991, 993, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1167, 1170, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1188, 1195], "8": [18, 21, 23, 26, 27, 40, 41, 42, 43, 52, 53, 54, 55, 58, 59, 64, 65, 72, 77, 78, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 108, 109, 114, 115, 127, 129, 136, 141, 145, 170, 186, 189, 201, 205, 209, 232, 235, 274, 278, 279, 312, 318, 319, 322, 372, 384, 403, 407, 423, 426, 427, 433, 436, 437, 453, 456, 483, 486, 493, 496, 528, 529, 530, 531, 532, 533, 536, 538, 541, 558, 561, 563, 566, 598, 601, 613, 614, 616, 643, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 668, 671, 673, 676, 688, 694, 703, 707, 710, 738, 741, 765, 783, 784, 785, 786, 787, 806, 808, 811, 824, 826, 827, 828, 851, 852, 854, 855, 856, 862, 865, 872, 878, 881, 883, 886, 888, 891, 928, 931, 955, 959, 960, 964, 985, 986, 987, 988, 989, 990, 991, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1019, 1022, 1042, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1117, 1118, 1119, 1123, 1139, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1195, 1217, 1228], "activ": [18, 19, 21, 25, 70, 71, 74, 120, 121, 123, 146, 171, 174, 176, 179, 181, 183, 184, 185, 186, 189, 191, 194, 196, 199, 201, 205, 1195, 1204, 1205], "setup": [18, 19], "click": [18, 19, 126, 1195], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 147, 372, 398, 402, 407, 598, 601, 603, 606, 1113, 1117, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166], "left": [18, 19, 75, 76, 100, 101, 127, 137, 407, 463, 466, 872, 893, 896, 909, 912, 950, 954, 1113, 1114, 1195], "panel": 18, "select": [18, 19, 129, 142, 144, 147, 159], "drop": [18, 159], "down": [18, 129, 144], "path": [18, 21], "manual": [18, 19, 129, 146, 1067, 1068, 1077, 1078], "builtin": [18, 21, 79, 80, 81, 144, 146, 900, 904, 955, 956], "requir": [18, 21, 123, 124, 125, 126, 127, 129, 131, 134, 135, 137, 138, 144, 159, 206, 207, 407, 668, 671, 872, 893, 896, 1001, 1047, 1050, 1206, 1207], "cmd": [18, 21], "directori": [18, 19, 21, 129, 130, 372, 374, 694, 780], "folder": [18, 19, 21, 123, 128, 129, 132], "file": [18, 19, 21, 75, 76, 123, 126, 129, 132, 133, 135, 136, 140, 142, 145, 694, 780, 1229, 1230], "abov": [18, 19, 21, 34, 35, 58, 59, 108, 109, 124, 126, 127, 129, 130, 132, 133, 135, 136, 139, 140, 144, 145, 146, 147, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 263, 265, 266, 268, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 618, 621, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 893, 896, 965, 969, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1167, 1170, 1171, 1174, 1175, 1178, 1184, 1185, 1188], "m": [18, 19, 21, 34, 35, 50, 51, 58, 59, 90, 91, 100, 101, 108, 109, 122, 142, 209, 243, 246, 261, 263, 265, 266, 268, 270, 593, 595, 597, 694, 703, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], "python3": [18, 19, 21], "script": [18, 19, 21, 127, 142, 159], "bat": [18, 19, 21], "OR": [18, 19, 21, 68, 69, 118, 119, 407, 468, 471, 603, 606, 1184, 1190, 1191, 1192, 1193, 1194], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 72, 75, 76, 77, 78, 79, 80, 81, 126, 134, 135, 136, 140, 372, 387, 900, 904, 955, 956], "os": 18, "note": [18, 19, 123, 126, 127, 129, 131, 136, 137, 407, 643, 646, 872, 893, 896, 950, 954, 1001, 1047, 1050, 1118, 1124, 1128, 1150, 1159, 1162], "tick": [18, 19], "abl": [18, 19, 75, 76, 132, 137, 139, 140, 144, 147], "To": [18, 79, 80, 81, 125, 127, 129, 131, 132, 136, 140, 145, 146, 147, 900, 904, 955, 956, 1195], "ivy_test": [18, 19, 131], "test_array_api": [18, 19, 128, 129], "cd": [18, 19, 21], "r": [18, 19, 75, 76, 122, 694, 703, 804, 872, 936, 939, 980, 984], "txt": 18, "visual": [18, 140, 159], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 141, 407, 518, 521], "conflict": [18, 19, 145], "addit": [18, 19, 42, 43, 56, 57, 92, 93, 106, 107, 123, 126, 127, 129, 130, 136, 137, 144, 145, 147, 372, 398, 402, 407, 423, 426, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 1085, 1086, 1087, 1088, 1089, 1090, 1217, 1227], "yet": [18, 136, 159], "particular": [18, 19, 123, 125, 127, 129, 131, 134, 137, 139, 407, 408, 411, 598, 601], "system": [18, 19, 159, 872, 945, 948], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": [18, 19], "link": [18, 130], "imag": [18, 21, 47, 48, 49, 97, 98, 99, 123, 142, 143, 145, 147, 158, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 1195], "profession": 18, "execut": [18, 19, 21, 127, 136, 139, 142, 144, 147, 159, 372, 374, 694, 800], "deploy": 18, "top": [18, 19, 129, 130, 145, 146, 1195], "press": [18, 19, 145, 1195], "ok": 18, "correctli": [18, 75, 76, 100, 101, 124, 127, 129, 131, 136, 137, 140, 146, 159, 872, 909, 912, 1113, 1114], "caus": [18, 19, 127, 129, 136, 139, 140, 159], "earlier": [18, 19], "might": [18, 19, 123, 127, 129, 134, 137, 142, 144, 145, 694, 717], "necessari": [18, 54, 55, 104, 105, 127, 133, 136, 139, 1001, 1032, 1033, 1034, 1035, 1036], "virtualis": 18, "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 42, 43, 75, 76, 92, 93, 100, 101, 122, 209, 243, 246, 694, 706, 707, 708, 709, 710, 711, 851, 867, 872, 909, 912, 975, 979, 1217, 1225], "keyr": 18, "fssl": 18, "download": [18, 129], "gpg": 18, "dearmor": 18, "o": [18, 122, 142, 694, 703], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 147, 159], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 56, 57, 70, 71, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 130, 131, 136, 137, 138, 140, 142, 145, 146, 147, 159, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 213, 214, 215, 232, 234, 236, 243, 244, 246, 248, 251, 256, 258, 260, 274, 275, 277, 279, 291, 292, 293, 294, 295, 301, 303, 305, 357, 359, 361, 372, 378, 397, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 703, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 792, 794, 795, 797, 804, 806, 808, 810, 812, 824, 826, 828, 841, 844, 845, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 872, 873, 875, 877, 918, 920, 922, 960, 964, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1007, 1010, 1019, 1022, 1032, 1034, 1036, 1037, 1039, 1041, 1042, 1047, 1050, 1067, 1068, 1069, 1070, 1073, 1078, 1079, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1116, 1118, 1124, 1125, 1127, 1128, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "dev": [18, 38, 39, 75, 76, 88, 89, 132, 138, 142, 144, 146, 372, 383, 387], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 129, 136, 159], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 125, 129, 140, 158, 372], "post": [18, 56, 57, 106, 107, 147, 1085, 1086, 1087, 1088, 1089, 1090, 1195, 1201], "gener": [18, 19, 20, 21, 43, 44, 45, 58, 59, 70, 71, 93, 94, 95, 108, 109, 120, 121, 122, 123, 124, 126, 127, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 158, 159, 206, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 643, 646, 658, 661, 668, 671, 673, 676, 695, 698, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 718, 721, 723, 726, 728, 731, 733, 734, 735, 736, 737, 738, 741, 743, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 788, 789, 790, 791, 792, 793, 794, 798, 799, 800, 801, 802, 803, 804, 805, 806, 824, 825, 826, 827, 828, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1091, 1092, 1093, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1195, 1233, 1237], "dure": [18, 44, 45, 66, 67, 75, 76, 94, 95, 132, 134, 136, 137, 138, 139, 159, 206, 207, 372, 398, 402, 694, 800, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 872, 905, 908, 1063, 1064, 1065, 1066, 1150, 1171, 1174, 1179, 1181, 1183, 1229, 1230, 1233, 1234, 1235, 1237], "detect": [18, 75, 76, 124, 129, 136, 140, 145, 146, 1067, 1068, 1078], "its": [18, 20, 21, 36, 37, 54, 55, 86, 87, 104, 105, 125, 126, 129, 130, 134, 140, 147, 159, 279, 291, 292, 293, 294, 295, 372, 397, 694, 793, 872, 905, 908, 1001, 1015, 1018, 1032, 1035, 1037, 1038, 1039, 1040, 1041, 1051, 1054], "simplest": [18, 127, 129], "valu": [18, 19, 23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 72, 73, 74, 75, 76, 77, 78, 84, 85, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 112, 113, 124, 126, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 142, 144, 147, 159, 170, 201, 202, 203, 204, 205, 209, 210, 211, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 279, 286, 289, 307, 308, 309, 311, 372, 396, 397, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 444, 445, 447, 483, 486, 498, 499, 500, 502, 503, 506, 508, 511, 513, 515, 517, 518, 520, 522, 523, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 608, 609, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628, 631, 633, 636, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 651, 668, 669, 670, 672, 673, 674, 675, 677, 678, 680, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 712, 717, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 754, 757, 761, 771, 772, 773, 775, 776, 778, 805, 806, 808, 809, 810, 811, 812, 813, 815, 817, 818, 829, 831, 841, 842, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 869, 870, 871, 872, 918, 920, 921, 922, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 975, 979, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1059, 1061, 1062, 1063, 1064, 1065, 1067, 1071, 1072, 1073, 1074, 1075, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1113, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237], "inform": [18, 19, 129, 136, 140, 279, 319, 322, 330, 333, 694, 700, 806, 842], "becaus": [18, 19, 124, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 146, 147, 159], "header": [18, 19], "summari": [18, 19, 75, 76, 86, 87, 129, 279, 307, 308, 309, 311, 363, 364, 694, 712, 716, 754], "recommend": [18, 133, 407, 598, 601, 603, 606, 643, 646, 1150, 1159, 1162], "advanc": [18, 79, 80, 81, 900, 904, 955, 956], "bar": 18, "pytest": [18, 19, 129, 131], "checkbox": 18, "q": [18, 19, 122, 159, 851, 871, 872, 893, 896, 936, 939], "fail": [18, 19, 20, 127, 128, 129, 140, 142, 144], "It": [18, 19, 21, 24, 25, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 73, 74, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 122, 123, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 139, 142, 144, 145, 146, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 296, 299, 372, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 904, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 941, 943, 945, 948, 950, 954, 955, 956, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1117, 1118, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1179, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 124, 126, 127, 129, 131, 132, 134, 136, 139, 142, 144, 145, 159], "featur": [18, 19, 123, 124, 145, 159, 1195], "vm": 18, "azur": 18, "cloud": [18, 158], "mean": [18, 19, 42, 43, 58, 59, 66, 67, 75, 76, 92, 93, 108, 109, 116, 117, 120, 121, 122, 125, 127, 129, 132, 136, 137, 138, 139, 142, 144, 145, 146, 147, 158, 159, 372, 397, 694, 723, 724, 725, 726, 727, 1063, 1064, 1065, 1066, 1067, 1073, 1091, 1093, 1096, 1098, 1099, 1100, 1101, 1102, 1118, 1119, 1123, 1150, 1195, 1208], "configur": [18, 19, 21, 75, 76, 137, 372, 396, 1067, 1080], "defin": [18, 20, 123, 124, 126, 129, 137, 144, 146, 159, 407, 618, 621, 643, 646, 694, 769, 872, 878, 881, 893, 896, 945, 948, 1150, 1155, 1158, 1159, 1162, 1163, 1166], "dockerfil": [18, 21], "longer": [18, 129, 137, 139], "worri": 18, "platform": 18, "agnost": [18, 124, 135, 142, 144, 147, 159, 1195], "usual": [18, 129, 130], "studio": 18, "favourit": 18, "extens": [18, 19, 126, 129, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 563, 566, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 872, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188], "theme": 18, "too": [18, 19, 140, 159, 407, 423, 426, 618, 621], "done": [18, 19, 127, 129, 140, 145], "unsupport": [18, 130, 140, 279, 327, 328, 372, 386, 694, 736, 737], "old": [18, 75, 76, 139], "slow": 18, "ipad": 18, "long": [18, 19, 127, 851, 869], "browser": 18, "cool": [18, 123], "requisit": 18, "head": [18, 136, 851, 870, 1195, 1217, 1228], "pane": [18, 19], "readi": 18, "begin": [18, 1067, 1068, 1078], "outlin": [18, 19, 20, 122, 126, 129, 132, 136, 139, 144], "green": [18, 19, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 1242, 1243], "dropdown": 18, "tab": [18, 145, 1195], "master": [18, 19, 136], "vs": [18, 129], "view": [18, 19, 209, 226, 229, 851, 858, 862, 865], "built": [18, 19, 129, 143, 209, 210, 211, 1217, 1228, 1229, 1230], "bottom": 18, "box": 18, "patient": 18, "upto": [18, 19], "15": [18, 40, 41, 58, 59, 84, 85, 92, 93, 108, 109, 127, 129, 209, 232, 234, 235, 236, 279, 319, 322, 407, 453, 456, 498, 501, 533, 534, 558, 559, 643, 644, 646, 648, 649, 651, 653, 654, 694, 707, 710, 783, 785, 786, 787, 851, 852, 855, 858, 872, 888, 891, 928, 931, 955, 959, 960, 964, 1001, 1037, 1040, 1091, 1093, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1113, 1116, 1118, 1119, 1123, 1150, 1151, 1154], "minut": 18, "launch": 18, "12": [18, 40, 41, 58, 59, 90, 91, 92, 93, 98, 99, 104, 105, 106, 107, 108, 109, 127, 129, 136, 407, 453, 456, 478, 481, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 648, 651, 663, 665, 667, 694, 707, 710, 714, 751, 783, 785, 806, 808, 811, 852, 854, 856, 872, 888, 891, 928, 931, 960, 964, 1001, 1019, 1022, 1037, 1040, 1043, 1045, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1096, 1098, 1099, 1101, 1103, 1104, 1105, 1113, 1117, 1118, 1119, 1123, 1150, 1151, 1154], "output": [18, 19, 24, 25, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 73, 74, 79, 82, 83, 84, 85, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 122, 123, 124, 126, 127, 129, 131, 132, 134, 135, 136, 138, 139, 142, 144, 146, 147, 159, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 296, 299, 372, 397, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 705, 706, 707, 708, 709, 710, 711, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 756, 769, 772, 773, 774, 801, 806, 817, 818, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1067, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1117, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228], "That": [18, 19, 129, 144, 145, 146, 407, 643, 646], "alreadi": [18, 19, 75, 76, 124, 133, 136, 137, 144, 159, 407, 483, 486, 523, 526, 618, 621, 648, 651, 689, 693, 872, 928, 931, 1195], "refer": [18, 19, 66, 67, 68, 69, 118, 119, 124, 129, 130, 132, 137, 159, 209, 223, 224, 407, 518, 521, 578, 581, 806, 808, 811, 813, 815, 872, 970, 974, 980, 984, 1150, 1171, 1174, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1227], "approach": [18, 19, 129, 132, 136, 144, 145, 159], "colour": 18, "applic": [18, 134, 137, 138, 146, 851, 870, 871, 1067, 1073, 1079], "good": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 146], "chanc": 18, "vscode": 18, "show": [18, 19, 75, 76, 127, 129, 139, 158, 159, 1195], "explor": [18, 19, 143, 147, 158], "troubleshoot": 18, "sometim": [18, 19, 129], "ever": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "64": [18, 48, 49, 98, 99, 108, 109, 129, 145, 146, 279, 318, 407, 668, 671, 673, 676, 851, 861, 862, 863, 864, 865, 866, 872, 928, 931, 955, 959, 1098, 1100, 1150, 1151, 1154, 1195, 1217, 1228], "bit": [18, 127, 129, 132, 136, 144, 279, 318, 319, 322, 330, 333, 407, 458, 461, 463, 466, 473, 476, 1150, 1167, 1170, 1175, 1178], "usr": 18, "nutshel": [18, 124], "hook": 18, "lint": 18, "accept": [18, 19, 29, 79, 124, 126, 127, 129, 131, 132, 134, 135, 136, 138, 139, 144, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 598, 601, 603, 606, 613, 614, 616, 628, 631, 643, 646, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1089, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1159, 1162, 1184, 1185, 1188, 1195], "fix": [18, 19], "attempt": [18, 140, 159], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 129, 132, 134, 136, 137, 138, 139, 142, 144, 145, 146, 147, 157, 159, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 279, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 360, 361, 379, 380, 381, 383, 398, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 694, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 806, 808, 809, 810, 812, 824, 825, 826, 828, 829, 831, 833, 835, 844, 845, 846, 847, 851, 852, 853, 854, 856, 862, 863, 864, 866, 868, 870, 871, 872, 873, 874, 875, 877, 918, 920, 921, 922, 933, 935, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1050, 1063, 1064, 1065, 1067, 1073, 1076, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1195, 1203, 1204, 1205, 1231, 1232], "proce": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "modifi": [18, 19, 126, 132, 137, 138, 140, 142], "properli": [18, 122], "enter": [18, 19, 124, 134, 135, 137, 138, 372, 806, 841, 850], "unsur": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "feel": [18, 19, 20, 21, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 1195], "server": [19, 1195], "appropri": [19, 70, 71, 120, 121, 129, 134, 407, 423, 426, 618, 621, 1113, 1114], "context": [19, 127, 129, 136, 137, 138, 372, 694, 767, 851, 870, 1217, 1228], "suitabl": [19, 123, 136], "quick": [19, 122, 146], "alwai": [19, 20, 44, 45, 54, 55, 75, 76, 94, 95, 104, 105, 123, 124, 126, 129, 132, 133, 135, 136, 139, 140, 142, 144, 159, 279, 286, 289, 407, 423, 426, 618, 621, 694, 760, 806, 824, 825, 826, 827, 828, 842, 1001, 1032, 1033, 1034, 1035, 1036], "correct": [19, 20, 66, 67, 116, 117, 122, 124, 132, 136, 137, 138, 140, 279, 366, 1001, 1002, 1005, 1150, 1171, 1172, 1173, 1174, 1179, 1180, 1181, 1182, 1183, 1195], "tendenc": 19, "land": 19, "end": [19, 136, 139, 141, 158, 159, 209, 210, 211, 407, 443, 446, 1195, 1201], "world": 19, "come": [19, 129, 146, 157, 1195, 1201], "fly": 19, "hard": [19, 144], "receiv": [19, 79, 80, 81, 129, 137, 138, 694, 701, 766, 900, 904, 955, 956, 1217, 1227], "respons": [19, 21], "internship": 19, "comment": [19, 140], "trigger": 19, "unansw": 19, "label": [19, 52, 53, 102, 103, 142, 143, 147, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "respond": 19, "remov": [19, 20, 21, 75, 76, 126, 129, 132, 137, 139, 147, 872, 888, 891, 905, 908, 965, 969, 1001, 1043, 1046, 1063, 1064, 1065], "someon": [19, 159], "els": [19, 20, 58, 59, 108, 109, 123, 125, 131, 132, 133, 139, 142, 144, 146, 147, 159, 279, 312, 694, 704, 717, 733, 1067, 1077, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], "strive": [19, 129, 159], "repli": 19, "newli": [19, 129, 139, 206, 207, 279, 286, 289, 694, 705], "place": [19, 34, 35, 54, 55, 75, 76, 84, 85, 104, 105, 122, 123, 124, 125, 126, 127, 129, 130, 132, 136, 138, 140, 147, 170, 201, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 279, 301, 304, 336, 339, 346, 349, 372, 398, 402, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 758, 759, 760, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1085, 1086, 1089, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188, 1233, 1234, 1235, 1236, 1237, 1238], "bug": [19, 129], "serv": [19, 124, 129, 132, 135, 136, 141, 1195], "suspect": 19, "behaviour": [19, 124, 126, 129, 130, 135, 136, 139, 144], "observ": 19, "confid": 19, "noth": [19, 75, 76], "wrong": 19, "someth": [19, 123, 145, 146, 159], "bet": 19, "act": [19, 127, 130, 159], "placehold": [19, 124, 135, 140, 1067, 1079], "sub": [19, 20, 75, 76, 79, 82, 83, 90, 91, 100, 101, 122, 129, 130, 136, 144, 145, 146, 614, 615, 617, 872, 888, 891, 1001, 1042, 1063, 1064, 1065, 1066, 1195], "mark": [19, 129], "ii": [19, 1150, 1151, 1154], "iii": 19, "titl": [19, 1195], "issue_numb": 19, "delet": [19, 21], "No": [19, 142], "wait": [19, 72, 75, 76, 77, 78], "progress": [19, 136, 143, 147], "pr": 19, "soon": [19, 136, 157, 159, 1195, 1201], "partial": [19, 75, 76, 1229, 1230], "solut": [19, 129, 136, 872, 945, 948], "review": [19, 123, 127], "merg": 19, "everi": [19, 20, 21, 34, 35, 42, 43, 92, 93, 124, 127, 128, 129, 132, 133, 134, 136, 137, 139, 142, 144, 146, 209, 231, 232, 233, 235, 694, 695, 696, 697, 698, 699], "shape": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 126, 127, 129, 131, 137, 138, 139, 142, 144, 145, 146, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 372, 393, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 743, 744, 745, 746, 747, 753, 756, 769, 772, 773, 779, 791, 793, 803, 806, 808, 810, 812, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1125, 1126, 1127, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1179, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1231, 1232], "move": [19, 75, 76, 123, 372, 398, 402], "within": [19, 29, 32, 33, 129, 131, 146, 159, 209, 210, 211, 1091, 1103, 1106], "7": [19, 21, 23, 26, 27, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 58, 59, 64, 65, 72, 77, 78, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 106, 107, 108, 109, 114, 115, 116, 117, 127, 129, 132, 136, 139, 170, 176, 179, 181, 184, 201, 205, 279, 319, 322, 330, 333, 357, 360, 372, 384, 407, 408, 411, 423, 424, 425, 426, 427, 433, 435, 453, 456, 458, 461, 468, 469, 470, 471, 472, 478, 481, 483, 486, 493, 495, 496, 497, 498, 499, 501, 503, 504, 506, 513, 516, 523, 526, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 541, 558, 560, 561, 562, 563, 566, 573, 575, 576, 577, 598, 601, 613, 614, 616, 643, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 663, 666, 668, 671, 683, 687, 688, 694, 703, 707, 710, 714, 738, 741, 765, 783, 784, 787, 806, 808, 809, 810, 811, 812, 813, 815, 824, 825, 827, 829, 831, 851, 852, 853, 854, 855, 856, 861, 862, 865, 871, 872, 878, 881, 883, 886, 888, 891, 928, 931, 955, 959, 960, 964, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1015, 1018, 1019, 1022, 1042, 1051, 1054, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1117, 1118, 1119, 1123, 1139, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1179, 1180, 1182, 1183], "dai": 19, "close": [19, 126, 129, 407, 518, 521, 648, 651, 872, 950, 954], "likewis": [19, 124, 126, 132, 136, 137, 145], "freed": 19, "flag": [19, 44, 45, 75, 76, 94, 95, 137, 139, 144, 372, 378, 806, 824, 825, 826, 827, 828], "purpos": [19, 21, 124, 125, 127, 129, 132, 134, 135, 136, 141, 144, 407, 518, 521, 1195], "remain": [19, 54, 55, 104, 105, 127, 159, 407, 423, 426, 618, 621, 643, 646, 1001, 1032, 1033, 1034, 1035, 1036, 1067, 1073], "access": [19, 21, 75, 76, 130, 137], "more": [19, 23, 26, 27, 62, 63, 79, 80, 81, 112, 113, 122, 123, 124, 127, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 159, 209, 210, 211, 279, 291, 294, 407, 518, 521, 872, 900, 904, 905, 908, 955, 956, 1001, 1019, 1022, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1195], "short": [19, 146, 851, 869], "basi": [19, 128, 145], "situat": [19, 147], "alloc": [19, 34, 35, 159, 209, 261, 263, 265, 266, 268, 270, 279, 286, 289], "upon": [19, 127, 129, 139, 159], "period": 19, "prevent": [19, 44, 45, 94, 95, 139, 140, 144, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1150, 1175, 1178, 1233, 1234, 1235], "unabl": 19, "obvious": 19, "never": [19, 54, 55, 104, 105, 129, 136, 1001, 1032, 1033, 1034, 1035, 1036], "reflect": [19, 135], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 127, 144, 147], "inact": 19, "limit": [19, 72, 75, 76, 77, 78, 127, 129, 140, 142, 145, 147, 159, 279, 319, 322, 330, 333, 694, 706, 707, 710, 1001, 1002, 1005], "me": 19, "unfairli": 19, "definit": [19, 50, 51, 100, 101, 132, 137, 144, 872, 873, 874, 875, 876, 877, 878, 881], "investig": 19, "Then": [19, 21, 125, 130, 134, 144, 159], "practic": 19, "separ": [19, 129, 131, 135, 136, 140, 142, 144, 145], "branch": [19, 136, 159, 206, 207, 407, 443, 446], "simpli": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 124, 126, 127, 129, 130, 132, 135, 136, 138, 139, 142, 146, 147, 159, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 852, 853, 854, 856, 862, 863, 864, 866, 873, 874, 875, 877, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194], "role": [19, 130, 143], "kept": [19, 72, 75, 76, 77, 78, 139, 1063, 1064, 1065], "date": 19, "upstream": [19, 128], "complic": [19, 131, 142], "root": [19, 21, 40, 41, 90, 91, 145, 407, 668, 669, 670, 671, 672, 1091, 1092, 1098, 1101, 1233, 1234, 1235, 1236, 1238], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1150, 1167, 1170, 1175, 1178], "clone": [19, 21, 75, 76], "push": [19, 128, 140], "both": [19, 79, 80, 81, 124, 125, 126, 127, 129, 130, 131, 132, 136, 138, 139, 142, 144, 145, 146, 147, 158, 159, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 356, 407, 408, 411, 423, 426, 428, 431, 433, 436, 483, 486, 518, 521, 523, 526, 548, 551, 573, 576, 613, 614, 616, 628, 631, 638, 641, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 694, 738, 741, 806, 808, 811, 851, 858, 862, 865, 871, 872, 873, 876, 878, 881, 888, 891, 900, 904, 905, 908, 955, 956, 970, 974, 1001, 1037, 1040, 1085, 1086, 1089, 1118, 1124, 1128, 1150, 1155, 1158, 1184, 1185, 1188], "abort": 19, "tediou": [19, 127], "resolut": [19, 279, 319, 322], "stash": 19, "reinstat": 19, "correspond": [19, 36, 37, 40, 41, 42, 43, 54, 55, 66, 67, 72, 75, 76, 77, 78, 86, 87, 90, 91, 104, 105, 124, 126, 127, 128, 129, 132, 134, 135, 136, 137, 279, 291, 292, 293, 294, 295, 407, 443, 444, 445, 446, 447, 638, 639, 641, 783, 784, 872, 878, 881, 893, 896, 945, 948, 1001, 1007, 1010, 1037, 1038, 1039, 1040, 1041, 1091, 1092, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 124, 126, 130, 136, 144], "atlassian": 19, "tutori": [19, 130], "wrote": 19, "piec": [19, 132, 134, 135, 142], "tag": 19, "describ": [19, 129, 143, 147, 1150, 1151, 1154, 1167, 1170, 1171, 1174, 1175, 1178], "navig": [19, 122], "blame": 19, "revis": 19, "author": [19, 1195], "log": [19, 40, 41, 90, 91, 127, 132, 136, 139, 142, 145, 209, 240, 241, 407, 572, 578, 581, 588, 591, 872, 941, 943, 1195], "eg": [19, 129], "16": [19, 40, 41, 50, 51, 58, 59, 90, 91, 92, 93, 108, 109, 127, 129, 145, 279, 318, 330, 333, 407, 648, 649, 683, 684, 686, 687, 783, 785, 851, 861, 862, 865, 872, 873, 874, 876, 888, 891, 928, 931, 955, 959, 1093, 1094, 1097, 1098, 1100, 1103, 1105, 1107, 1113, 1117, 1150, 1151, 1154], "5": [19, 21, 23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 50, 51, 54, 55, 56, 57, 58, 59, 64, 65, 72, 73, 74, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 104, 105, 106, 107, 108, 109, 114, 115, 124, 127, 129, 131, 133, 144, 145, 146, 170, 176, 179, 181, 184, 191, 194, 201, 202, 204, 205, 209, 232, 233, 234, 235, 236, 243, 246, 256, 259, 271, 273, 274, 278, 279, 291, 292, 293, 294, 295, 301, 303, 304, 305, 313, 316, 319, 322, 346, 349, 357, 360, 361, 372, 391, 395, 407, 408, 410, 411, 412, 418, 421, 423, 424, 425, 426, 427, 428, 431, 433, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 485, 486, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 518, 519, 520, 521, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 573, 574, 576, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 668, 671, 673, 676, 683, 684, 686, 687, 688, 694, 695, 696, 703, 707, 709, 710, 711, 714, 738, 741, 743, 746, 747, 765, 783, 784, 785, 786, 787, 792, 806, 808, 810, 811, 812, 824, 827, 844, 848, 851, 852, 854, 855, 856, 858, 860, 861, 862, 865, 871, 872, 873, 874, 876, 878, 881, 883, 886, 888, 891, 900, 903, 928, 931, 955, 959, 960, 964, 965, 969, 985, 996, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1051, 1054, 1067, 1070, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1184, 1185, 1188, 1217, 1228], "past": 19, "l": [19, 50, 51, 90, 91, 100, 101, 122, 593, 595, 597, 872, 873, 874, 875, 876, 877, 893, 896, 905, 908, 965, 969], "filepath": [19, 75, 76], "grep": 19, "v": [19, 142, 145, 146, 147, 851, 871, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1237, 1239, 1240], "commit_id": 19, "handi": [19, 129], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 127], "previou": [19, 124, 129, 130, 147, 159, 279, 370, 694, 801, 802, 803, 806, 813, 815, 829, 831], "shown": [19, 70, 71, 75, 76, 120, 121, 124, 125, 127, 129, 130, 140, 142, 144, 159, 170, 201, 205, 407, 443, 446, 453, 456, 478, 481, 493, 496, 553, 556, 688, 872, 883, 886, 1001, 1015, 1018, 1019, 1022, 1118, 1119, 1123, 1139, 1140, 1143], "whenev": [19, 129, 131, 134, 144, 145], "think": [19, 127], "gain": [19, 141, 146, 1208], "quit": [19, 126, 127, 129, 132, 134, 135], "repeat": [19, 42, 43, 54, 55, 92, 93, 104, 105, 126, 127, 129, 133, 135, 136, 137, 140, 694, 728, 729, 730, 731, 732, 1001, 1031, 1055, 1058], "yourself": [19, 20, 129, 158], "simpler": [19, 144], "cannot": [19, 125, 130, 133, 137, 147], "least": [19, 127, 129, 132, 135, 872, 905, 908], "after": [19, 56, 57, 75, 76, 106, 107, 127, 129, 130, 136, 137, 141, 279, 366, 372, 374, 407, 668, 671, 806, 813, 815, 817, 818, 820, 822, 829, 831, 833, 835, 837, 839, 1085, 1086, 1087, 1088, 1089, 1090, 1233, 1234, 1235, 1236, 1237, 1238], "approv": 19, "respect": [19, 40, 41, 44, 45, 90, 91, 94, 95, 124, 125, 127, 129, 135, 136, 137, 140, 209, 243, 246, 407, 408, 411, 423, 426, 443, 446, 453, 456, 463, 466, 468, 471, 473, 476, 478, 481, 498, 501, 503, 506, 528, 531, 533, 536, 538, 541, 558, 561, 563, 566, 588, 591, 593, 596, 603, 606, 608, 611, 618, 621, 628, 631, 643, 644, 645, 646, 647, 678, 682, 806, 808, 809, 810, 811, 812, 813, 815, 817, 818, 820, 822, 829, 831, 833, 835, 837, 839, 872, 936, 939, 1063, 1064, 1065, 1066], "hash": [19, 145], "detail": [19, 20, 123, 124, 128, 129, 131, 132, 133, 134, 136, 145, 146, 209, 226, 229, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "rel": [19, 21, 54, 55, 84, 85, 100, 101, 104, 105, 131, 232, 234, 236, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 872, 888, 891, 918, 920, 921, 922, 933, 935, 965, 969, 1001, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1139, 1140, 1143, 1145, 1148, 1195], "cancel": 19, "speedup": 19, "button": 19, "unavail": 19, "final": [19, 126, 127, 132, 135, 137, 139, 140, 142, 144, 145, 209, 237, 238, 240, 241, 694, 735, 1217, 1228], "tickbox": 19, "lower": [19, 34, 35, 50, 51, 58, 59, 100, 101, 108, 109, 127, 129, 142, 159, 209, 223, 224, 261, 263, 265, 407, 613, 872, 873, 874, 875, 876, 877, 1091, 1103, 1104, 1105, 1106, 1107], "corner": 19, "without": [19, 75, 76, 123, 124, 125, 127, 130, 132, 135, 136, 138, 140, 142, 144, 145, 146, 158, 159, 694, 771, 778, 1001, 1032, 1035, 1067, 1069, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "span": 19, "intent": [19, 139], "larg": [19, 145, 407, 423, 426, 618, 621], "discourag": 19, "philosophi": 19, "increment": [19, 694, 759], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1195], "wast": 19, "spot": [19, 127, 132], "mistak": [19, 140], "propos": 19, "mountain": 19, "around": [19, 72, 75, 76, 77, 78, 124, 132, 135, 144, 159], "advoc": [19, 159], "individu": [19, 20, 132], "per": [19, 48, 49, 98, 99, 129, 145, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "style": [19, 1113, 1116], "ve": [19, 141, 144, 1091, 1092, 1195], "were": [19, 75, 76, 123, 129, 136, 140], "actual": [19, 122, 132, 139, 141, 144, 146, 159], "aim": [19, 141], "part": [19, 34, 35, 123, 128, 129, 132, 142, 143, 147, 158, 159, 209, 261, 263, 265, 266, 268, 270, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1229, 1230], "subsect": 19, "session": [19, 1195], "block": [19, 129, 132, 140, 141, 143, 147, 159, 372, 806, 841, 850, 1195], "smaller": [19, 54, 55, 104, 105, 142, 147, 1001, 1002, 1005, 1037, 1038, 1039, 1040, 1041, 1150, 1167, 1170, 1175, 1178], "edit": 19, "exact": [19, 73, 74, 75, 76, 127, 142, 171, 173, 175, 1118, 1119, 1123], "beauti": 19, "particularli": [19, 129, 145, 159], "concern": [19, 122, 127, 136, 139, 141], "effici": [19, 124, 129, 132, 134, 136, 139, 140, 142, 145, 159], "difficult": [19, 129, 159, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "undo": 19, "stress": 19, "frequenc": [19, 694, 735], "advantag": 19, "nifti": 19, "reassur": 19, "isol": 19, "bash": [19, 21], "shell": 19, "rm": 19, "structur": [19, 21, 72, 75, 76, 77, 78, 123, 132, 135, 136, 145, 146, 694, 712, 1067, 1080], "fact": [19, 129, 145], "mount": 19, "local_path_to_ivi": 19, "overwrit": [19, 75, 76, 139, 142, 372, 397], "subfold": [19, 123, 129, 131], "insid": [19, 21, 123, 129, 136, 137], "wide": [19, 129], "via": [19, 123, 136, 137, 138, 139, 142, 144, 145, 158, 1067, 1068, 1077, 1078], "dep": 19, "fresh": 19, "copi": [19, 21, 34, 35, 36, 37, 42, 43, 54, 55, 75, 76, 84, 85, 86, 87, 92, 93, 104, 105, 126, 133, 137, 142, 144, 145, 158, 159, 209, 213, 214, 215, 216, 226, 229, 279, 286, 287, 288, 289, 290, 372, 398, 402, 694, 713, 783, 785, 794, 795, 796, 797, 798, 799, 1001, 1032, 1033, 1034, 1035, 1036, 1067, 1069, 1139, 1145, 1148], "arsen": 19, "declar": [19, 79, 80, 81, 900, 904, 955, 956], "exec": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "test_ivi": [19, 129, 131], "test_funct": [19, 129], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "variou": [19, 124, 126, 134, 158], "cpu": [19, 42, 43, 58, 59, 75, 76, 92, 93, 108, 109, 138, 159, 209, 237, 238, 240, 241, 274, 278, 372, 378, 379, 382, 384, 389, 392, 394, 395, 398, 402, 403, 405, 406, 694, 738, 741, 743, 744, 745, 746, 747, 769, 772, 773, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "gpu": [19, 138, 144, 372, 378, 384, 388, 390, 392, 394, 395, 396, 403, 405], "combin": [19, 72, 75, 76, 77, 78, 127, 129, 132, 135, 136, 147, 694, 736, 737, 872, 878, 881], "text": [19, 126, 127], "ctrl": 19, "prompt": [19, 1195], "instanc": [19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 129, 130, 131, 132, 134, 135, 137, 139, 145, 146, 147, 160, 168, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 243, 246, 248, 249, 253, 254, 256, 257, 258, 259, 261, 263, 265, 266, 268, 270, 271, 273, 274, 276, 277, 278, 279, 291, 292, 293, 301, 302, 303, 304, 313, 316, 319, 322, 330, 333, 336, 339, 346, 349, 357, 358, 359, 372, 379, 380, 381, 394, 398, 399, 400, 401, 407, 408, 409, 410, 411, 413, 414, 415, 418, 419, 420, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 493, 494, 495, 496, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 533, 534, 535, 538, 539, 540, 541, 543, 544, 545, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 563, 564, 565, 566, 568, 569, 570, 573, 574, 575, 576, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 597, 598, 599, 600, 601, 603, 604, 605, 608, 609, 610, 613, 614, 616, 618, 619, 620, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 638, 639, 640, 643, 644, 645, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 676, 678, 680, 681, 683, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 707, 708, 709, 711, 713, 718, 719, 720, 723, 724, 725, 728, 729, 730, 738, 739, 740, 741, 743, 744, 745, 760, 779, 783, 784, 785, 792, 794, 796, 797, 798, 799, 808, 809, 810, 812, 824, 825, 826, 844, 846, 847, 851, 852, 853, 854, 858, 861, 862, 863, 864, 865, 871, 872, 873, 874, 875, 876, 878, 881, 883, 886, 888, 891, 900, 904, 918, 920, 955, 956, 959, 985, 986, 987, 988, 989, 991, 992, 993, 996, 997, 998, 1001, 1002, 1003, 1004, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1051, 1054, 1085, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1098, 1099, 1100, 1103, 1104, 1105, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1151, 1154, 1155, 1158, 1179, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1206, 1207], "shift": [19, 54, 55, 84, 85, 104, 105, 124, 127, 232, 234, 236, 407, 463, 466, 473, 476, 1001, 1037, 1038, 1039, 1040, 1041], "whole": 19, "multipli": [19, 40, 41, 90, 91, 127, 133, 135, 407, 622, 694, 714], "cursor": 19, "alt": 19, "j": [19, 90, 91, 122, 593, 595, 597, 694, 702, 703, 872, 965, 969, 1150, 1151, 1154], "locat": [19, 123, 129, 131, 133, 138, 1091, 1092], "blog": 19, "debug": [19, 129, 136, 145], "breakpoint": 19, "gutter": 19, "caret": 19, "f8": 19, "f9": 19, "toolbar": 19, "method": [19, 20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 140, 142, 143, 146, 147, 159, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 213, 214, 218, 219, 226, 227, 229, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 278, 279, 291, 292, 293, 295, 301, 302, 303, 305, 313, 316, 319, 322, 330, 333, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 612, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 707, 708, 709, 711, 712, 713, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 741, 742, 743, 744, 745, 747, 772, 773, 783, 784, 785, 787, 792, 794, 795, 796, 797, 798, 799, 806, 808, 809, 810, 812, 824, 825, 826, 828, 829, 831, 833, 835, 841, 844, 845, 846, 847, 850, 851, 852, 853, 854, 856, 861, 862, 863, 864, 866, 871, 872, 873, 874, 875, 877, 878, 881, 883, 886, 900, 904, 918, 920, 922, 955, 956, 959, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1006, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1051, 1054, 1067, 1068, 1078, 1079, 1080, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1154, 1155, 1158, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1217, 1228, 1229, 1230], "result": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 123, 124, 126, 127, 129, 130, 131, 134, 135, 136, 137, 139, 145, 159, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 296, 299, 357, 358, 359, 360, 361, 372, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1067, 1070, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1123, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "Into": 19, "f7": 19, "smart": 19, "sever": [19, 123, 159, 872, 900, 903], "interest": 19, "consol": [19, 144], "store": [19, 75, 76, 126, 133, 135, 136, 142, 144, 145, 146, 209, 274, 278, 694, 735, 806, 849, 872, 965, 969, 1001, 1042, 1229, 1230], "variabl": [19, 23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 45, 56, 57, 75, 76, 79, 82, 83, 94, 95, 106, 107, 124, 125, 126, 129, 133, 136, 137, 139, 140, 145, 146, 147, 159, 694, 704, 758, 759, 760, 761, 762, 763, 765, 789, 806, 813, 815, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 833, 835, 837, 839, 842, 845, 849, 851, 870, 872, 945, 948, 1063, 1064, 1065, 1066, 1085, 1086, 1087, 1088, 1089, 1090, 1195, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "fragment": 19, "except": [19, 58, 59, 68, 69, 75, 76, 108, 109, 118, 119, 125, 126, 135, 139, 140, 144, 159, 279, 296, 299, 694, 704, 717, 760, 800, 872, 933, 935, 1001, 1007, 1010, 1047, 1050, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1116, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "pychram": 19, "depth": [19, 145, 146, 147, 158, 694, 754, 769, 1067, 1079, 1229, 1230], "dummi": 19, "wherein": [19, 129], "evalu": [19, 40, 41, 75, 76, 90, 91, 136, 407, 513, 514, 515, 516, 517, 518, 520, 521, 522, 568, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 598, 600, 602, 623, 624, 625, 626, 627, 633, 634, 635, 637, 653, 654, 655, 656, 657, 673, 676, 1067, 1068, 1077, 1078, 1184, 1185, 1188, 1190, 1193], "failur": [19, 128], "wherebi": [20, 136, 1067, 1079], "broad": 20, "distribut": [20, 52, 53, 58, 59, 75, 76, 102, 103, 108, 109, 129, 138, 159, 851, 867, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1217, 1225, 1229, 1230], "across": [20, 75, 76, 100, 101, 124, 127, 129, 132, 136, 137, 372, 395, 396, 694, 702, 703, 1067, 1073, 1113, 1115], "todo": 20, "commit": [20, 127, 129], "NOT": [20, 407, 598, 601], "static": [20, 73, 74, 75, 76, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 132, 134, 159, 171, 175, 176, 180, 181, 185, 186, 190, 191, 195, 196, 200, 201, 202, 206, 207, 232, 236, 256, 260, 274, 275, 291, 295, 301, 305, 357, 361, 379, 383, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 517, 518, 521, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 602, 603, 607, 608, 612, 618, 622, 623, 627, 628, 632, 633, 637, 638, 642, 643, 647, 648, 652, 653, 657, 658, 662, 668, 672, 673, 677, 678, 679, 683, 684, 689, 690, 695, 699, 718, 722, 723, 727, 728, 732, 738, 742, 743, 747, 783, 787, 794, 795, 824, 828, 844, 845, 852, 856, 862, 866, 873, 877, 900, 904, 918, 922, 955, 956, 986, 990, 991, 995, 996, 1000, 1002, 1006, 1027, 1031, 1032, 1036, 1037, 1041, 1086, 1090, 1093, 1097, 1098, 1102, 1103, 1107, 1109, 1112, 1124, 1125, 1145, 1149, 1179, 1180, 1185, 1189, 1190, 1194], "revers": [20, 23, 26, 27, 72, 77, 78, 126, 127, 147, 159, 694, 717, 1001, 1019, 1022], "resourc": 20, "content": [20, 21, 75, 76, 130, 139, 142, 145], "thei": [20, 75, 76, 122, 123, 127, 129, 132, 134, 136, 137, 138, 139, 140, 144, 145, 146, 147, 159, 279, 356, 1063, 1064, 1065, 1091, 1092, 1195, 1239, 1240], "hypothesi": [20, 131], "cover": [20, 126, 127, 129, 132, 134, 141], "lambda": [20, 142, 145, 1233, 1236, 1238], "direct": [20, 130, 146, 147, 158, 1139, 1145, 1148], "bind": [20, 136], "special": [20, 23, 26, 27, 66, 67, 72, 77, 78, 123, 124, 126, 127, 135, 170, 201, 205, 407, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 478, 481, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 568, 571, 573, 576, 583, 586, 588, 591, 598, 601, 618, 621, 638, 641, 643, 646, 648, 651, 653, 656, 658, 661, 663, 666, 668, 671, 683, 687, 688, 689, 693, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "aforement": 20, "categori": [20, 123, 130, 135, 136, 137, 141, 1195], "parent": [20, 144, 806, 841, 850], "arraywithelementwis": [20, 23, 26, 27, 40, 135], "containerwithmanipul": [20, 72, 77, 78, 104], "hint": [20, 123, 124, 126, 132, 135, 139, 140, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1089, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188], "docstr": [20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 132, 136, 140, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 243, 246, 248, 249, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 291, 292, 293, 295, 301, 302, 303, 304, 305, 319, 322, 330, 333, 357, 358, 359, 360, 361, 379, 380, 381, 383, 398, 399, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 616, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 852, 853, 854, 856, 862, 863, 864, 866, 872, 873, 874, 875, 877, 883, 886, 888, 891, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1006, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1149, 1150, 1155, 1158, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194], "thorough": [20, 124, 126, 129], "transpil": [20, 130, 141, 143, 1195, 1201], "verifi": [20, 125, 129, 137, 138, 144, 1195, 1201], "builder": [21, 157, 159, 1195], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "synchron": 21, "rest": [21, 143, 147], "remove_doc": 21, "_": [21, 40, 41, 90, 91, 126, 129, 136, 139, 144, 145, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 519, 520, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 806, 808, 811, 813, 815, 872, 888, 891, 955, 959, 980, 984, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1139, 1140, 1143, 1150, 1155, 1158], "indic": [21, 42, 43, 48, 49, 54, 55, 56, 57, 75, 76, 92, 93, 98, 99, 104, 105, 106, 107, 130, 140, 143, 147, 170, 191, 194, 209, 213, 215, 407, 653, 656, 694, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 756, 769, 772, 773, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 872, 975, 979, 1001, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1067, 1068, 1070, 1072, 1074, 1075, 1076, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1129, 1133, 1139, 1140, 1143, 1145, 1148, 1195, 1198, 1200, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1230], "privat": [21, 129, 1233, 1237], "fulfil": [21, 141, 1195], "autogenerated_sourc": 21, "format": [21, 75, 76, 79, 83, 122, 126, 127, 137, 138, 142, 144, 145, 279, 313, 316, 372, 379, 382, 1150, 1151, 1154, 1195], "png": [21, 145], "_imag": 21, "lastli": 21, "rst": 21, "skip": [21, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 129, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "read": [21, 75, 76, 1195], "partial_sourc": 21, "conf": 21, "create_rst_fil": 21, "filter": [21, 48, 49, 98, 99, 129, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "repres": [21, 24, 25, 40, 41, 73, 74, 90, 91, 129, 144, 170, 201, 202, 203, 204, 205, 209, 243, 246, 279, 318, 407, 418, 419, 420, 421, 422, 423, 426, 433, 434, 435, 436, 437, 448, 449, 450, 451, 452, 493, 494, 495, 496, 497, 618, 621, 663, 664, 665, 666, 667, 688, 806, 841, 850, 851, 868, 872, 941, 943, 945, 948], "overal": [21, 126, 136, 137, 138, 147], "markup": 21, "6": [21, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 58, 59, 64, 65, 72, 77, 78, 84, 85, 90, 91, 92, 93, 98, 99, 102, 103, 106, 107, 108, 109, 114, 115, 127, 129, 133, 136, 144, 145, 146, 170, 176, 179, 181, 184, 191, 194, 201, 205, 209, 232, 233, 234, 235, 236, 274, 278, 279, 291, 294, 313, 316, 319, 322, 372, 391, 407, 408, 409, 410, 411, 412, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 436, 438, 440, 441, 442, 443, 445, 446, 447, 453, 456, 458, 461, 468, 469, 470, 471, 472, 478, 481, 483, 484, 485, 486, 488, 490, 491, 492, 493, 496, 498, 500, 501, 502, 503, 504, 505, 506, 518, 520, 523, 526, 528, 530, 531, 532, 533, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 560, 561, 562, 563, 566, 598, 601, 613, 614, 616, 623, 626, 643, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 668, 671, 673, 676, 683, 687, 688, 694, 703, 707, 710, 714, 738, 741, 743, 746, 747, 765, 783, 784, 785, 786, 787, 792, 806, 808, 809, 811, 851, 852, 853, 854, 855, 856, 858, 861, 862, 865, 871, 872, 878, 881, 883, 886, 888, 891, 928, 931, 950, 954, 955, 959, 960, 964, 985, 986, 988, 989, 990, 991, 993, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1005, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1030, 1037, 1040, 1042, 1043, 1046, 1051, 1054, 1067, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1117, 1118, 1119, 1123, 1124, 1128, 1139, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1167, 1170, 1179, 1183], "extract": [21, 123, 125], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 159], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 75, 76, 129, 142, 145, 407, 463, 466, 872, 888, 891, 905, 908], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 58, 59, 66, 67, 72, 77, 78, 90, 91, 92, 93, 94, 95, 98, 99, 108, 109, 114, 115, 116, 117, 127, 129, 145, 146, 279, 312, 319, 322, 330, 333, 407, 413, 414, 423, 424, 425, 426, 427, 433, 436, 448, 449, 450, 452, 453, 456, 458, 461, 498, 499, 500, 501, 502, 503, 504, 505, 506, 528, 530, 531, 532, 573, 575, 576, 577, 598, 601, 613, 614, 616, 648, 650, 651, 652, 653, 656, 668, 671, 673, 676, 694, 707, 710, 738, 741, 765, 783, 784, 785, 787, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 824, 827, 829, 830, 831, 832, 851, 852, 853, 854, 855, 856, 858, 861, 862, 865, 872, 878, 881, 883, 886, 888, 891, 928, 931, 950, 954, 955, 959, 960, 964, 1001, 1002, 1003, 1005, 1019, 1022, 1037, 1040, 1042, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1117, 1118, 1119, 1123, 1139, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1179, 1180, 1181, 1182, 1183, 1233, 1234, 1235], "index": [21, 34, 35, 42, 43, 62, 63, 75, 76, 84, 85, 92, 93, 112, 113, 132, 136, 144, 208, 209, 223, 224, 243, 244, 245, 246, 247, 372, 394, 694, 700, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 1001, 1047, 1050, 1067, 1070, 1071, 1074, 1075, 1076, 1081, 1083, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1198, 1200], "create_index_rst": 21, "14": [21, 40, 41, 58, 59, 90, 91, 92, 93, 106, 107, 108, 109, 127, 129, 136, 279, 319, 322, 330, 333, 407, 413, 415, 416, 417, 433, 436, 443, 444, 445, 446, 447, 478, 481, 653, 657, 663, 665, 667, 694, 783, 785, 786, 806, 808, 811, 851, 852, 855, 871, 872, 888, 891, 928, 931, 1086, 1088, 1090, 1093, 1094, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1118, 1119, 1123, 1150, 1151, 1154], "\u03c0": [21, 208, 407, 413, 416, 428, 431, 438, 441, 443, 446], "namespac": [21, 123, 134, 137, 142, 147], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 34], "arraywithdatatyp": [23, 26, 27, 36], "arraywithdevic": [23, 26, 27, 38, 144], "arraywithgener": [23, 26, 27, 42, 144], "arraywithgradi": [23, 26, 27, 44, 144], "arraywithimag": [23, 26, 27, 46, 144], "arraywithlay": [23, 26, 27, 48], "arraywithlinearalgebra": [23, 26, 27, 50], "arraywithloss": [23, 26, 27, 52], "arraywithmanipul": [23, 26, 27, 54], "arraywithnorm": [23, 26, 27, 56], "arraywithrandom": [23, 26, 27, 58, 144], "arraywithsearch": [23, 26, 27, 60], "arraywithset": [23, 26, 27, 62], "arraywithsort": [23, 26, 27, 64], "arraywithstatist": [23, 26, 27, 66], "arraywithutil": [23, 26, 27, 68], "properti": [23, 26, 27, 75, 76, 127, 129, 131, 132, 136, 144, 145, 146, 1229, 1230, 1233, 1234, 1235, 1236, 1238], "__add__": [23, 26, 27, 72, 77, 78, 124, 126, 127, 135, 136, 144], "variant": [23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 852, 853, 854, 856, 862, 863, 864, 866, 873, 874, 875, 877, 918, 920, 922, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194], "wrap": [23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 129, 132, 133, 135, 136, 137, 138, 139, 142, 144, 147, 159, 160, 168, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 694, 695, 696, 697, 699, 705, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 806, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 849, 852, 853, 854, 856, 862, 863, 864, 866, 873, 874, 875, 877, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194], "minim": [23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 126, 139, 142, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 213, 214, 218, 219, 226, 227, 232, 233, 234, 236, 248, 249, 256, 257, 258, 260, 261, 263, 266, 268, 274, 275, 276, 277, 291, 292, 293, 295, 301, 302, 303, 305, 357, 358, 359, 361, 379, 380, 381, 383, 398, 399, 400, 401, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 695, 696, 697, 699, 707, 708, 709, 711, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 738, 739, 740, 742, 743, 744, 745, 747, 783, 784, 785, 787, 794, 795, 796, 797, 808, 809, 810, 812, 824, 825, 826, 828, 844, 845, 846, 847, 852, 853, 854, 856, 862, 863, 864, 866, 873, 874, 875, 877, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1006, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1126, 1127, 1145, 1146, 1147, 1149, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194], "self": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 135, 136, 142, 144, 145, 146, 147, 171, 172, 173, 176, 177, 178, 181, 182, 183, 186, 187, 188, 191, 192, 193, 196, 197, 198, 201, 203, 204, 213, 214, 218, 219, 220, 226, 227, 228, 232, 233, 234, 236, 243, 244, 245, 248, 249, 250, 256, 257, 258, 260, 261, 263, 264, 266, 268, 269, 274, 275, 276, 277, 286, 287, 288, 291, 292, 293, 296, 297, 298, 301, 302, 303, 313, 314, 315, 319, 320, 321, 330, 331, 332, 336, 337, 338, 341, 342, 343, 346, 347, 348, 351, 352, 353, 357, 358, 359, 361, 372, 379, 380, 381, 398, 400, 401, 408, 409, 410, 413, 414, 415, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 439, 440, 443, 444, 445, 448, 449, 450, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 523, 524, 525, 528, 529, 530, 533, 534, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 554, 555, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 598, 599, 600, 603, 604, 605, 608, 609, 610, 614, 615, 618, 619, 620, 623, 624, 625, 628, 629, 630, 633, 634, 635, 638, 639, 640, 643, 644, 645, 648, 649, 650, 653, 654, 655, 658, 659, 660, 663, 664, 665, 668, 669, 670, 673, 674, 675, 678, 680, 681, 683, 685, 686, 689, 691, 692, 695, 696, 697, 707, 708, 709, 718, 719, 720, 723, 724, 725, 728, 729, 730, 738, 739, 740, 743, 744, 745, 783, 784, 785, 794, 795, 796, 797, 808, 809, 810, 813, 814, 820, 821, 824, 825, 826, 829, 830, 833, 834, 837, 838, 844, 846, 847, 852, 853, 854, 862, 863, 864, 873, 874, 875, 877, 878, 879, 880, 883, 884, 885, 888, 889, 890, 893, 894, 895, 897, 898, 900, 901, 902, 905, 906, 907, 909, 910, 911, 914, 915, 918, 919, 920, 923, 924, 925, 928, 929, 930, 933, 934, 936, 937, 938, 941, 942, 945, 946, 947, 950, 952, 953, 955, 957, 958, 960, 962, 963, 965, 967, 968, 970, 972, 973, 975, 977, 978, 980, 982, 983, 986, 987, 988, 991, 992, 993, 996, 997, 998, 1002, 1003, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1032, 1033, 1034, 1037, 1038, 1039, 1043, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1086, 1087, 1088, 1093, 1094, 1095, 1098, 1099, 1100, 1103, 1104, 1105, 1109, 1110, 1119, 1121, 1122, 1124, 1126, 1127, 1129, 1131, 1132, 1134, 1136, 1137, 1140, 1141, 1142, 1145, 1146, 1147, 1151, 1152, 1153, 1155, 1156, 1157, 1159, 1160, 1161, 1163, 1164, 1165, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1195, 1233, 1237], "input": [23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 159, 160, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 322, 330, 333, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 358, 359, 360, 361, 362, 366, 371, 372, 378, 379, 382, 391, 397, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 741, 743, 744, 745, 746, 747, 752, 753, 755, 756, 758, 759, 760, 762, 763, 764, 765, 769, 772, 773, 774, 777, 781, 783, 784, 785, 786, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 804, 805, 806, 808, 809, 810, 811, 812, 817, 818, 824, 825, 826, 827, 828, 842, 844, 845, 846, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1070, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1231, 1232], "numer": [23, 26, 27, 40, 41, 42, 43, 58, 59, 72, 77, 78, 90, 91, 92, 93, 108, 109, 123, 131, 146, 209, 243, 246, 279, 286, 289, 407, 408, 409, 410, 411, 412, 423, 424, 425, 426, 427, 483, 484, 485, 486, 487, 498, 501, 518, 521, 523, 524, 525, 526, 527, 528, 531, 543, 546, 548, 551, 553, 556, 558, 561, 598, 601, 603, 606, 618, 621, 623, 624, 625, 626, 627, 628, 631, 633, 634, 635, 637, 638, 641, 643, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 673, 676, 678, 679, 681, 682, 689, 693, 694, 750, 751, 775, 776, 783, 784, 785, 786, 787, 788, 872, 878, 881, 905, 908, 928, 931, 950, 954, 960, 964, 965, 969, 970, 974, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1150, 1155, 1158, 1167, 1170, 1175, 1178, 1208], "broadcast": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 123, 126, 127, 129, 136, 137, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 253, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 372, 398, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 706, 707, 708, 709, 710, 711, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 743, 744, 745, 746, 747, 756, 769, 772, 773, 806, 842, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1134, 1138, 1139, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "element": [23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 54, 55, 62, 63, 66, 67, 72, 73, 74, 75, 76, 77, 78, 84, 85, 90, 91, 92, 93, 104, 105, 112, 113, 126, 129, 131, 142, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 231, 232, 233, 234, 235, 236, 261, 263, 265, 266, 268, 270, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 702, 703, 706, 707, 710, 714, 715, 734, 756, 783, 784, 785, 787, 794, 795, 796, 797, 798, 799, 806, 841, 850, 851, 867, 872, 878, 881, 893, 896, 905, 908, 936, 939, 950, 954, 1001, 1002, 1003, 1004, 1005, 1006, 1019, 1022, 1027, 1030, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1067, 1070, 1091, 1092, 1113, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1188, 1190, 1193, 1217, 1225], "wise": [23, 26, 27, 40, 41, 72, 73, 74, 75, 76, 77, 78, 90, 91, 142, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 407, 408, 411, 413, 416, 423, 424, 425, 426, 427, 428, 431, 438, 441, 443, 446, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 628, 629, 630, 631, 632, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 678, 679, 680, 681, 682, 694, 734, 1001, 1002, 1005, 1233, 1236], "sum": [23, 26, 27, 40, 41, 42, 43, 66, 67, 72, 75, 76, 77, 78, 90, 91, 92, 93, 116, 117, 132, 136, 137, 139, 142, 372, 397, 407, 423, 424, 425, 426, 427, 588, 591, 678, 679, 681, 694, 715, 723, 724, 725, 726, 727, 772, 773, 851, 871, 872, 950, 954, 965, 969, 975, 979, 1150, 1151, 1154, 1171, 1174], "promot": [23, 24, 25, 26, 27, 36, 37, 40, 41, 50, 51, 72, 73, 74, 77, 78, 86, 87, 90, 91, 100, 101, 126, 132, 137, 170, 201, 202, 203, 204, 205, 279, 286, 289, 301, 302, 303, 304, 305, 356, 357, 360, 366, 407, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 513, 514, 515, 516, 517, 518, 520, 521, 522, 528, 529, 530, 532, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 608, 611, 618, 619, 620, 621, 622, 638, 639, 640, 641, 642, 643, 644, 646, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 872, 873, 874, 875, 876, 877, 878, 881, 900, 903, 905, 908, 918, 920, 921, 922, 928, 931, 933, 935, 945, 948, 970, 974, 975, 979, 1001, 1047, 1050, 1150, 1159, 1162], "y": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 123, 127, 130, 133, 136, 142, 144, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 231, 232, 233, 234, 235, 236, 243, 246, 253, 254, 256, 259, 274, 278, 279, 286, 289, 291, 292, 293, 294, 295, 313, 316, 319, 322, 330, 333, 357, 359, 360, 372, 379, 382, 387, 391, 392, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 461, 468, 469, 470, 471, 472, 473, 476, 478, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 513, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 558, 559, 560, 561, 562, 563, 566, 573, 574, 575, 576, 577, 593, 594, 595, 596, 597, 598, 601, 613, 614, 616, 623, 626, 628, 631, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 683, 684, 685, 686, 687, 688, 694, 695, 696, 697, 698, 699, 702, 703, 707, 708, 709, 710, 711, 713, 714, 733, 734, 738, 741, 743, 744, 745, 746, 747, 781, 783, 784, 785, 786, 787, 792, 794, 795, 796, 797, 798, 799, 806, 817, 818, 844, 845, 846, 847, 848, 851, 861, 862, 863, 864, 865, 866, 868, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 900, 903, 918, 920, 922, 928, 931, 955, 959, 960, 964, 965, 969, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1018, 1019, 1022, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1051, 1054, 1067, 1070, 1083, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1124, 1125, 1126, 1127, 1128, 1139, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1158, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194], "z": [23, 26, 27, 40, 41, 42, 43, 52, 53, 58, 59, 72, 77, 78, 90, 91, 92, 93, 102, 103, 108, 109, 127, 133, 136, 142, 144, 372, 387, 407, 423, 424, 425, 426, 427, 443, 444, 445, 446, 447, 453, 456, 468, 469, 470, 471, 472, 478, 481, 533, 535, 536, 537, 538, 541, 548, 551, 553, 556, 558, 560, 561, 562, 563, 566, 593, 594, 595, 597, 613, 614, 616, 694, 702, 703, 738, 741, 743, 744, 745, 747, 781, 783, 784, 785, 786, 787, 872, 878, 881, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1005, 1067, 1070, 1083, 1091, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1113, 1114, 1150, 1151, 1154, 1155, 1158, 1167, 1170], "mix": [23, 26, 27, 36, 37, 40, 41, 42, 43, 72, 77, 78, 86, 87, 90, 91, 102, 103, 108, 109, 122, 127, 129, 142, 279, 291, 292, 293, 294, 295, 357, 360, 372, 391, 407, 423, 426, 453, 456, 468, 471, 478, 481, 498, 499, 501, 503, 504, 505, 506, 528, 529, 530, 531, 532, 533, 536, 538, 541, 558, 561, 563, 566, 628, 631, 643, 644, 645, 646, 647, 694, 695, 696, 713, 733, 738, 741, 743, 746, 792, 794, 798, 799, 851, 852, 855, 858, 861, 862, 865, 871, 872, 873, 876, 960, 964, 985, 986, 989, 990, 991, 995, 996, 999, 1000, 1001, 1002, 1005, 1085, 1086, 1089, 1093, 1097, 1098, 1102, 1103, 1107, 1113, 1117, 1139, 1145, 1148, 1150, 1151, 1154, 1159, 1162], "__le__": [23, 26, 27], "equal": [23, 26, 27, 34, 35, 40, 41, 42, 43, 58, 59, 66, 67, 75, 76, 90, 91, 92, 93, 100, 101, 108, 109, 127, 136, 137, 209, 223, 224, 231, 232, 233, 235, 279, 286, 289, 407, 463, 466, 473, 476, 507, 543, 546, 548, 551, 638, 641, 648, 651, 694, 695, 696, 697, 698, 699, 702, 703, 872, 888, 891, 918, 920, 921, 922, 933, 935, 1001, 1002, 1005, 1011, 1014, 1042, 1059, 1062, 1091, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1159, 1162, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "bool": [23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 125, 127, 136, 137, 139, 140, 147, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 213, 215, 231, 232, 234, 236, 256, 258, 260, 274, 275, 277, 279, 286, 289, 291, 293, 295, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 316, 335, 336, 337, 339, 341, 342, 344, 346, 347, 349, 351, 352, 354, 357, 359, 361, 362, 371, 372, 378, 379, 382, 388, 389, 392, 393, 397, 404, 406, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 467, 468, 470, 471, 472, 473, 475, 477, 478, 480, 481, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 703, 707, 709, 711, 714, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 733, 735, 738, 740, 742, 743, 745, 747, 749, 752, 753, 755, 760, 762, 763, 764, 765, 781, 782, 783, 785, 787, 794, 795, 797, 804, 805, 806, 824, 825, 826, 827, 828, 841, 842, 844, 845, 847, 850, 851, 867, 872, 873, 874, 875, 876, 877, 909, 912, 918, 920, 922, 950, 954, 975, 979, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1077, 1078, 1079, 1086, 1088, 1091, 1092, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1124, 1125, 1127, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1233, 1234, 1235, 1236, 1237, 1238], "true": [23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 127, 129, 130, 131, 132, 136, 137, 139, 140, 142, 144, 145, 146, 147, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 238, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 279, 286, 287, 288, 289, 290, 291, 293, 295, 296, 298, 300, 301, 302, 303, 304, 305, 308, 310, 313, 315, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 335, 336, 338, 339, 340, 341, 343, 345, 346, 348, 349, 350, 351, 353, 354, 355, 357, 359, 361, 371, 372, 378, 389, 392, 393, 394, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 456, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 481, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 631, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 703, 704, 705, 707, 709, 711, 714, 718, 720, 722, 723, 725, 727, 728, 730, 732, 733, 735, 738, 740, 742, 743, 745, 747, 749, 752, 755, 756, 763, 765, 774, 777, 779, 781, 782, 783, 785, 787, 792, 794, 795, 797, 799, 801, 802, 803, 805, 806, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 850, 851, 867, 872, 873, 874, 875, 876, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 905, 907, 909, 911, 912, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 952, 953, 954, 955, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 978, 979, 980, 981, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1077, 1078, 1080, 1086, 1088, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1169, 1170, 1171, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238], "__radd__": [23, 26, 27, 72, 77, 78, 126, 127], "adam_upd": [23, 26, 27, 94, 95, 146, 806], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "arang": [23, 26, 27, 72, 77, 78, 137, 209, 237, 238, 240, 241, 1150, 1151, 1154, 1195], "arg_info": [23, 26, 27, 72, 77, 78, 694], "arg_nam": [23, 26, 27, 72, 77, 78, 694], "argmax": [23, 26, 27, 72, 77, 78, 1113, 1195], "argmin": [23, 26, 27, 72, 77, 78, 1113, 1195], "args_to_ivi": [23, 26, 27, 29], "args_to_n": [23, 26, 27, 29, 139, 144], "array_equ": [23, 26, 27, 72, 77, 78, 694], "arrays_equ": [23, 26, 27, 72, 75, 76, 77, 78, 694], "as_ivy_dev": [23, 26, 27, 72, 77, 78, 144, 372], "as_ivy_dtyp": [23, 26, 27, 72, 77, 78, 130, 279], "as_native_dev": [23, 26, 27, 72, 77, 78, 372, 392], "as_native_dtyp": [23, 26, 27, 72, 77, 78, 279], "assert_supports_inplac": [23, 26, 27, 72, 77, 78, 694], "cache_fn": [23, 26, 27, 72, 77, 78, 132, 694], "clear_mem_on_dev": [23, 26, 27, 72, 77, 78, 372], "clip_matrix_norm": [23, 26, 27, 72, 77, 78, 694], "closest_valid_dtyp": [23, 26, 27, 72, 77, 78, 279], "container_typ": [23, 26, 27, 72, 77, 78, 694], "conv1d_transpos": [23, 26, 27, 72, 77, 78, 851], "conv2d": [23, 26, 27, 72, 77, 78, 851, 1195, 1217], "conv2d_transpos": [23, 26, 27, 72, 77, 78, 851], "conv3d": [23, 26, 27, 72, 77, 78, 851, 1217], "conv3d_transpos": [23, 26, 27, 72, 77, 78, 851], "copy_arrai": [23, 26, 27, 72, 77, 78, 694], "cumprod": [23, 26, 27, 72, 77, 78, 147, 694], "cumsum": [23, 26, 27, 72, 77, 78, 694, 1195], "current_backend_str": [23, 26, 27, 72, 77, 78, 125, 694], "default_devic": [23, 26, 27, 72, 77, 78, 138, 142, 372, 391, 394, 395, 405], "default_dtyp": [23, 26, 27, 72, 77, 78, 132, 137, 279], "default_float_dtyp": [23, 26, 27, 72, 77, 78, 137, 279], "default_int_dtyp": [23, 26, 27, 72, 77, 78, 137, 279], "default_uint_dtyp": [23, 26, 27, 72, 77, 78, 279, 365, 370], "dev_util": [23, 26, 27, 72, 77, 78, 138, 372], "dropout": [23, 26, 27, 72, 77, 78, 145, 851, 1217, 1228], "dtype": [23, 26, 27, 34, 35, 36, 37, 58, 59, 66, 67, 75, 76, 84, 85, 86, 87, 92, 93, 108, 109, 116, 117, 123, 125, 127, 129, 130, 131, 132, 134, 137, 138, 140, 144, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 372, 393, 407, 473, 476, 694, 702, 703, 736, 737, 769, 794, 795, 797, 798, 851, 867, 1001, 1015, 1018, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1139, 1145, 1148, 1150, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1184, 1185, 1188, 1195, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1239, 1240], "dtype_bit": [23, 26, 27, 72, 77, 78, 279], "empti": [23, 26, 27, 72, 75, 76, 77, 78, 135, 137, 138, 209, 210, 211, 806, 841, 850, 1150, 1171, 1174, 1175, 1178, 1184, 1185, 1188, 1190, 1193], "execute_with_gradi": [23, 26, 27, 72, 77, 78, 136, 145, 146, 147, 159, 806, 1195], "ey": [23, 26, 27, 72, 77, 78, 147, 209, 851, 858, 862, 865], "floormod": [23, 26, 27, 72, 77, 78, 694, 1195], "fourier_encod": [23, 26, 27, 72, 77, 78, 694], "function_supported_devic": [23, 26, 27, 72, 77, 78, 372], "function_supported_devices_and_dtyp": [23, 26, 27, 72, 77, 78, 694], "function_supported_dtyp": [23, 26, 27, 72, 77, 78, 125, 279], "function_unsupported_devic": [23, 26, 27, 72, 77, 78, 372], "function_unsupported_devices_and_dtyp": [23, 26, 27, 72, 77, 78, 694], "function_unsupported_dtyp": [23, 26, 27, 72, 77, 78, 125, 279], "get_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 694], "get_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 138, 372], "get_array_mod": [23, 26, 27, 72, 77, 78, 694, 774, 801], "get_min_bas": [23, 26, 27, 72, 77, 78, 694], "get_min_denomin": [23, 26, 27, 72, 77, 78, 694], "get_nestable_mod": [23, 26, 27, 72, 77, 78, 694, 777, 802], "get_num_dim": [23, 26, 27, 72, 77, 78, 694, 1195], "get_referrers_recurs": [23, 26, 27, 72, 77, 78, 694], "gpu_is_avail": [23, 26, 27, 72, 77, 78, 372], "gradient_descent_upd": [23, 26, 27, 94, 95, 806, 1063, 1064, 1065, 1066, 1195], "handle_nest": [23, 26, 27, 72, 77, 78, 132, 134, 136, 160], "handle_out_argu": [23, 26, 27, 72, 77, 78, 124, 134, 137, 138, 139, 160], "has_nan": [23, 26, 27, 75, 76, 694], "indices_wher": [23, 26, 27, 72, 77, 78, 140, 694, 1195], "infer_devic": [23, 26, 27, 72, 77, 78, 124, 134, 137, 138, 160], "infer_dtyp": [23, 26, 27, 72, 77, 78, 124, 134, 137, 138, 160], "inplace_arrays_support": [23, 26, 27, 72, 77, 78, 694], "inplace_decr": [23, 26, 27, 72, 77, 78, 694], "inplace_incr": [23, 26, 27, 72, 77, 78, 694], "inplace_upd": [23, 26, 27, 75, 76, 139, 694, 1206, 1207], "inplace_variables_support": [23, 26, 27, 72, 77, 78, 694], "inputs_to_native_arrai": [23, 26, 27, 72, 77, 78, 134, 135, 160], "invalid_dtyp": [23, 26, 27, 72, 77, 78, 125, 137, 279], "is_arrai": [23, 26, 27, 130, 694], "is_ivy_arrai": [23, 26, 27, 139, 144, 694], "is_ivy_contain": [23, 26, 27, 72, 77, 78, 694], "is_native_arrai": [23, 26, 27, 144, 694], "is_vari": [23, 26, 27, 44, 45, 94, 95, 139, 806, 828], "boolean": [23, 26, 27, 40, 41, 42, 43, 44, 45, 54, 55, 75, 76, 90, 91, 92, 93, 94, 95, 104, 105, 129, 131, 136, 209, 213, 215, 231, 279, 286, 289, 335, 371, 372, 388, 404, 407, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 694, 695, 696, 697, 698, 699, 702, 703, 755, 756, 757, 761, 762, 763, 764, 765, 774, 777, 779, 789, 805, 806, 824, 825, 826, 827, 828, 841, 850, 1001, 1032, 1033, 1034, 1035, 1036, 1063, 1064, 1065, 1067, 1077, 1150, 1163, 1166], "trainabl": [23, 26, 27, 44, 45, 94, 95, 126, 143, 145, 146, 806, 824, 825, 826, 827, 828, 1206, 1207, 1229, 1230, 1239], "lamb_upd": [23, 26, 27, 94, 95, 806], "lars_upd": [23, 26, 27, 94, 95, 806], "linear": [23, 26, 27, 72, 73, 74, 77, 78, 126, 142, 145, 146, 147, 170, 171, 174, 176, 179, 181, 183, 184, 185, 694, 735, 851, 867, 945, 948, 1195, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "linspac": [23, 26, 27, 72, 77, 78, 142, 209, 210, 211, 1195], "logspac": [23, 26, 27, 72, 77, 78, 142, 209], "lstm_updat": [23, 26, 27, 72, 77, 78, 142, 851], "mt": [23, 26, 27, 144], "match_kwarg": [23, 26, 27, 72, 77, 78, 694], "matrix_pow": [23, 26, 27, 100, 101, 872], "maximum": [23, 26, 27, 42, 43, 54, 55, 72, 75, 76, 77, 78, 92, 93, 104, 105, 127, 142, 145, 147, 372, 397, 407, 694, 706, 707, 708, 709, 710, 711, 735, 806, 829, 831, 1001, 1002, 1003, 1004, 1005, 1006, 1067, 1079, 1113, 1114, 1150, 1155, 1158, 1163, 1166, 1195], "minimum": [23, 26, 27, 42, 43, 54, 55, 75, 76, 90, 91, 92, 93, 104, 105, 142, 147, 407, 408, 411, 617, 694, 750, 751, 775, 776, 783, 784, 785, 786, 787, 788, 1001, 1002, 1003, 1004, 1005, 1006, 1113, 1115, 1150, 1155, 1158, 1163, 1166, 1195], "multi_head_attent": [23, 26, 27, 72, 77, 78, 136, 139, 851], "multinomi": [23, 26, 27, 72, 77, 78, 1091], "multiprocess": [23, 26, 27, 72, 75, 76, 77, 78, 145, 159, 694], "ndim": [23, 26, 27, 129, 144, 872, 936, 939, 950, 954], "dimens": [23, 26, 27, 34, 35, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 66, 67, 68, 69, 72, 75, 76, 77, 78, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113, 118, 119, 127, 129, 130, 131, 142, 145, 170, 191, 194, 209, 261, 263, 265, 266, 268, 270, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 753, 769, 804, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 869, 872, 873, 874, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969, 970, 974, 975, 979, 985, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1007, 1010, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1063, 1064, 1065, 1066, 1091, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1228], "ax": [23, 26, 27, 50, 51, 54, 55, 66, 67, 68, 69, 73, 74, 75, 76, 100, 101, 104, 105, 118, 119, 123, 127, 129, 137, 144, 191, 193, 195, 372, 397, 694, 714, 872, 909, 912, 945, 948, 960, 961, 962, 963, 964, 975, 979, 1001, 1011, 1014, 1019, 1022, 1023, 1024, 1025, 1026, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1051, 1054, 1059, 1062, 1113, 1114, 1115, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "nonzero": [23, 26, 27, 72, 77, 78, 407, 423, 426, 618, 621, 1113], "num_arrays_in_memori": [23, 26, 27, 72, 77, 78, 694], "num_cpu_cor": [23, 26, 27, 72, 77, 78, 138, 372], "num_gpu": [23, 26, 27, 72, 77, 78, 129, 138, 372], "num_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 372], "one_hot": [23, 26, 27, 72, 77, 78, 147, 694, 1195], "ones": [23, 26, 27, 34, 35, 58, 59, 72, 75, 76, 77, 78, 84, 85, 108, 109, 127, 129, 142, 144, 145, 209, 223, 224, 232, 233, 235, 256, 257, 258, 259, 260, 274, 278, 407, 483, 486, 694, 769, 1093, 1094, 1095, 1098, 1099, 1100, 1103, 1104, 1105, 1195], "optimizer_upd": [23, 26, 27, 94, 95, 806], "outputs_to_ivy_arrai": [23, 26, 27, 72, 77, 78, 124, 134, 135, 137, 138, 160], "percent_used_mem_on_dev": [23, 26, 27, 72, 77, 78, 372], "print_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 694], "print_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 372], "promote_typ": [23, 26, 27, 72, 77, 78, 279], "queue_timeout": [23, 26, 27, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 694], "scaled_dot_product_attent": [23, 26, 27, 72, 77, 78, 851], "scatter_flat": [23, 26, 27, 72, 77, 78, 694], "scatter_nd": [23, 26, 27, 72, 77, 78, 144, 694, 1195], "seed": [23, 26, 27, 72, 75, 76, 77, 78, 1091, 1195], "set_array_mod": [23, 26, 27, 72, 77, 78, 694, 749, 801], "set_default_devic": [23, 26, 27, 72, 77, 78, 138, 372, 405], "set_default_dtyp": [23, 26, 27, 72, 77, 78, 132, 137, 279], "set_default_float_dtyp": [23, 26, 27, 72, 77, 78, 137, 279], "set_default_int_dtyp": [23, 26, 27, 72, 77, 78, 137, 279], "set_default_uint_dtyp": [23, 26, 27, 72, 77, 78, 279, 312, 370], "set_min_bas": [23, 26, 27, 72, 77, 78, 694], "set_min_denomin": [23, 26, 27, 72, 77, 78, 694], "set_nestable_mod": [23, 26, 27, 72, 77, 78, 694, 752, 802], "set_queue_timeout": [23, 26, 27, 72, 77, 78, 694], "set_shape_array_mod": [23, 26, 27, 72, 77, 78, 694, 782, 803], "set_split_factor": [23, 26, 27, 72, 77, 78, 372], "set_tmp_dir": [23, 26, 27, 72, 77, 78, 694], "set_with_grad": [23, 26, 27, 72, 77, 78, 806, 850], "shape_array_mod": [23, 26, 27, 72, 77, 78, 694, 779, 803], "shuffl": [23, 26, 27, 75, 76, 108, 109, 1091, 1112, 1195], "size": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 100, 101, 104, 105, 129, 131, 144, 145, 209, 237, 238, 240, 241, 372, 395, 396, 397, 694, 772, 851, 871, 872, 888, 891, 909, 912, 928, 931, 936, 939, 950, 954, 955, 959, 970, 974, 1001, 1015, 1018, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1091, 1092, 1113, 1114, 1116, 1184, 1185, 1188, 1190, 1193, 1217, 1218, 1219], "product": [23, 26, 27, 40, 41, 136, 407, 618, 619, 621, 694, 714, 851, 870, 871, 872, 878, 881, 905, 908, 928, 931, 960, 964, 970, 974, 1150, 1151, 1154, 1167, 1170, 1217, 1228], "unknown": [23, 26, 27], "model": [23, 26, 27, 145, 146, 1195], "slogdet": [23, 26, 27, 100, 101, 872], "split_factor": [23, 26, 27, 72, 77, 78, 372, 395], "split_func_cal": [23, 26, 27, 72, 77, 78, 372], "stable_pow": [23, 26, 27, 72, 77, 78, 694], "stop_gradi": [23, 26, 27, 72, 75, 76, 77, 78, 94, 95, 146, 372, 397, 806, 813, 814, 815, 816, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 1063, 1064, 1065, 1066, 1195, 1233, 1234, 1235, 1236, 1237, 1238], "supports_inplac": [23, 26, 27, 72, 77, 78, 694], "tmp_dir": [23, 26, 27, 72, 77, 78, 694], "to_ivi": [23, 26, 27, 29, 72, 77, 78, 79, 144, 1067, 1080], "to_ivy_shap": [23, 26, 27, 72, 77, 78, 694], "to_list": [23, 26, 27, 75, 76, 694, 1195], "to_n": [23, 26, 27, 29, 72, 77, 78, 79], "to_native_arrays_and_back": [23, 26, 27, 72, 77, 78, 124, 134, 160], "to_native_shap": [23, 26, 27, 72, 77, 78, 694], "to_scalar": [23, 26, 27, 72, 77, 78, 694], "total_mem_on_dev": [23, 26, 27, 72, 77, 78, 138, 372], "tpu_is_avail": [23, 26, 27, 72, 77, 78, 372], "try_else_non": [23, 26, 27, 72, 77, 78, 694], "type_promote_arrai": [23, 26, 27, 72, 77, 78, 279], "unset_array_mod": [23, 26, 27, 72, 77, 78, 694], "unset_default_devic": [23, 26, 27, 72, 77, 78, 372], "unset_default_dtyp": [23, 26, 27, 72, 77, 78, 279, 362], "unset_default_float_dtyp": [23, 26, 27, 72, 77, 78, 279], "unset_default_int_dtyp": [23, 26, 27, 72, 77, 78, 279], "unset_default_uint_dtyp": [23, 26, 27, 72, 77, 78, 279], "unset_nestable_mod": [23, 26, 27, 72, 77, 78, 694], "unset_shape_array_mod": [23, 26, 27, 72, 77, 78, 694, 801], "unset_with_grad": [23, 26, 27, 72, 77, 78, 806], "unstack": [23, 26, 27, 75, 76, 136, 142, 145, 694, 1195], "used_mem_on_dev": [23, 26, 27, 72, 77, 78, 372], "valid_dtyp": [23, 26, 27, 72, 77, 78, 279], "value_is_nan": [23, 26, 27, 72, 77, 78, 694], "variable_data": [23, 26, 27, 72, 77, 78, 806], "with_grad": [23, 26, 27, 72, 77, 78, 806, 841], "abc": [24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 144, 372, 374, 694, 733, 1067, 1084, 1229, 1230, 1233, 1237], "gelu": [24, 25, 73, 74, 170, 175, 1203], "approxim": [24, 25, 73, 74, 100, 101, 126, 170, 171, 172, 173, 174, 175, 201, 205, 407, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 443, 446, 488, 491, 493, 496, 513, 516, 518, 521, 568, 571, 573, 576, 578, 581, 583, 586, 638, 641, 658, 661, 663, 666, 683, 687, 688, 872, 918, 920, 921, 922, 933, 935], "185": [24, 25, 73, 74, 171, 172, 173, 175], "046": [24, 25, 73, 74, 171, 172, 173, 175], "leaky_relu": [24, 25, 73, 74, 129, 170, 180, 1195], "alpha": [24, 25, 73, 74, 129, 130, 170, 176, 177, 178, 179, 180], "39": [24, 25, 58, 59, 73, 74, 108, 109, 170, 176, 177, 178, 179, 180, 407, 433, 436, 513, 516, 806, 808, 811, 872, 928, 931, 1091, 1098, 1099, 1100, 1101, 1102, 1150, 1151, 1154], "85": [24, 25, 58, 59, 73, 74, 108, 109, 170, 176, 177, 178, 179, 180, 407, 478, 481, 694, 783, 786, 1091, 1093, 1094, 1098, 1099, 1100, 1103, 1104, 1106], "17": [24, 25, 73, 74, 98, 99, 108, 109, 127, 136, 170, 176, 177, 178, 179, 180, 407, 498, 501, 852, 854, 856, 872, 888, 891, 955, 959, 1091, 1093, 1095, 1097, 1098, 1100, 1103, 1105, 1106, 1107], "relu": [24, 25, 70, 71, 73, 74, 145, 146, 170, 176, 178, 179, 180, 185, 1195], "sigmoid": [24, 25, 73, 74, 142, 145, 146, 170, 190, 1195], "269": [24, 25, 73, 74, 170, 186, 187, 188, 189, 190], "731": [24, 25, 73, 74, 170, 186, 187, 188, 189, 190], "881": [24, 25, 40, 41, 73, 74, 90, 91, 170, 186, 187, 188, 189, 190, 407, 433, 434, 435, 436], "softmax": [24, 25, 70, 71, 73, 74, 170, 195, 851, 870, 871, 1195], "axi": [24, 25, 42, 43, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 84, 85, 92, 93, 100, 101, 102, 103, 104, 105, 114, 115, 116, 117, 118, 119, 124, 127, 129, 130, 132, 136, 137, 139, 140, 142, 144, 147, 158, 170, 191, 192, 193, 194, 195, 209, 237, 238, 239, 240, 241, 242, 372, 397, 694, 714, 715, 738, 739, 740, 741, 742, 804, 872, 878, 879, 880, 881, 882, 888, 891, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 985, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1027, 1028, 1029, 1030, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1091, 1109, 1111, 1113, 1114, 1115, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "422": [24, 25, 73, 74, 170, 191, 192, 193, 194, 195], "155": [24, 25, 73, 74, 170, 191, 192, 193, 194, 195], "softplu": [24, 25, 73, 74, 170, 200, 1195], "3461": [24, 25, 73, 74, 170, 196, 197, 198, 199, 200], "6491": [24, 25, 73, 74, 170, 196, 197, 198, 199, 200], "535": [24, 25, 73, 74, 170, 196, 197, 198, 199, 200], "42": [24, 25, 58, 59, 73, 74, 106, 107, 108, 109, 147, 170, 196, 197, 198, 199, 200, 806, 808, 811, 872, 928, 931, 1086, 1088, 1090, 1091, 1098, 1099, 1100, 1108, 1150, 1151, 1154], "tanh": [24, 25, 40, 41, 73, 74, 90, 91, 142, 170, 202, 407, 1195], "whose": [24, 25, 34, 35, 40, 41, 50, 51, 54, 55, 62, 63, 73, 74, 84, 85, 90, 91, 100, 101, 104, 105, 112, 113, 126, 129, 170, 201, 202, 203, 204, 205, 209, 232, 234, 236, 261, 263, 265, 266, 268, 270, 407, 418, 419, 420, 421, 422, 433, 434, 435, 436, 437, 448, 449, 450, 451, 452, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 638, 639, 641, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 683, 684, 685, 686, 687, 688, 694, 705, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969, 1001, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1150, 1151, 1154], "hyperbol": [24, 25, 40, 41, 73, 74, 90, 91, 170, 201, 202, 203, 204, 205, 407, 418, 419, 420, 421, 422, 433, 434, 435, 436, 437, 448, 449, 450, 451, 452, 493, 494, 495, 496, 497, 663, 664, 665, 666, 667, 688], "angl": [24, 25, 40, 41, 73, 74, 90, 91, 158, 170, 201, 202, 203, 204, 205, 407, 443, 446, 493, 494, 495, 496, 497, 663, 664, 665, 666, 667, 688], "real": [24, 25, 40, 41, 73, 74, 90, 91, 170, 201, 202, 203, 204, 205, 407, 413, 414, 415, 417, 418, 419, 428, 429, 430, 432, 438, 439, 440, 442, 443, 444, 445, 447, 498, 499, 500, 502, 513, 515, 517, 518, 520, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 608, 609, 618, 619, 620, 622, 638, 639, 640, 642, 643, 644, 645, 647, 668, 669, 670, 672, 673, 674, 675, 677, 678, 680, 688, 689, 690, 691, 692], "float": [24, 25, 34, 35, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 58, 59, 66, 67, 73, 74, 84, 85, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 106, 107, 108, 109, 116, 117, 124, 125, 126, 129, 131, 132, 136, 137, 139, 144, 146, 170, 176, 179, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 215, 217, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 253, 254, 271, 273, 279, 286, 289, 308, 309, 319, 322, 341, 344, 357, 360, 372, 384, 392, 395, 396, 403, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 478, 481, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 504, 506, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 526, 528, 531, 533, 536, 538, 541, 548, 551, 553, 556, 558, 561, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 618, 621, 623, 626, 628, 631, 633, 636, 638, 641, 643, 646, 648, 651, 653, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 706, 707, 708, 709, 710, 711, 735, 750, 751, 775, 776, 783, 786, 788, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 858, 862, 865, 867, 871, 872, 873, 874, 875, 876, 877, 883, 886, 893, 896, 897, 899, 900, 903, 918, 920, 921, 922, 933, 935, 936, 939, 945, 948, 950, 954, 975, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1063, 1064, 1065, 1066, 1085, 1086, 1087, 1088, 1089, 1091, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1233, 1234, 1235, 1236, 1237, 1238], "tangent": [24, 25, 40, 41, 73, 74, 90, 91, 126, 170, 201, 202, 203, 204, 205, 407, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 683, 684, 685, 686, 687, 688], "762": [24, 25, 40, 41, 73, 74, 90, 91, 170, 201, 203, 204, 205, 407, 573, 576, 688], "964": [24, 25, 40, 41, 73, 74, 90, 91, 170, 201, 203, 204, 205, 407, 688], "collect": [29, 75, 76, 79, 129, 131, 158, 170, 206, 372, 694, 806, 851, 985, 1067, 1080, 1085, 1091, 1203, 1217, 1231, 1233], "include_deriv": [29, 30, 31, 32, 33, 79, 82, 83, 1067, 1069, 1079], "keyword": [29, 30, 31, 72, 75, 76, 77, 78, 123, 124, 129, 130, 131, 137, 138, 139, 145, 209, 243, 246, 694, 701, 766, 1067, 1073, 1150, 1175, 1178, 1229, 1230], "nest": [29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 82, 83, 123, 129, 132, 135, 136, 144, 145, 146, 159, 694, 792, 806, 841, 850, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238], "unchang": [29, 30, 31, 32, 33], "posit": [29, 30, 31, 40, 41, 50, 51, 54, 55, 90, 91, 100, 101, 104, 105, 124, 129, 130, 131, 145, 158, 208, 209, 223, 224, 279, 319, 322, 407, 408, 411, 543, 546, 548, 549, 550, 551, 552, 618, 621, 637, 643, 646, 694, 735, 872, 873, 874, 875, 876, 877, 1001, 1015, 1018, 1037, 1038, 1039, 1040, 1041, 1091, 1108, 1113, 1116, 1184, 1185, 1188, 1190, 1193, 1206, 1207], "deriv": [29, 30, 31, 32, 33, 34, 35, 44, 45, 79, 82, 83, 84, 85, 94, 95, 137, 138, 144, 146, 209, 218, 219, 221, 232, 233, 235, 256, 257, 258, 259, 260, 274, 275, 276, 277, 278, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1067, 1069, 1079, 1229, 1233, 1237, 1239], "tupl": [29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 54, 55, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 125, 129, 130, 131, 136, 137, 138, 140, 144, 145, 146, 159, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 209, 213, 214, 215, 232, 234, 236, 248, 251, 256, 258, 260, 274, 275, 277, 279, 291, 293, 295, 296, 299, 301, 303, 305, 324, 325, 327, 328, 357, 359, 361, 366, 372, 378, 385, 386, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 735, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 851, 858, 861, 862, 863, 864, 865, 866, 869, 872, 873, 875, 877, 918, 920, 921, 922, 933, 935, 950, 951, 952, 953, 954, 960, 964, 975, 979, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1007, 1010, 1011, 1014, 1019, 1022, 1023, 1026, 1032, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1050, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1072, 1074, 1075, 1076, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1113, 1116, 1118, 1124, 1125, 1127, 1128, 1129, 1133, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "kei": [29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 129, 131, 136, 140, 145, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 700, 707, 709, 711, 712, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 851, 870, 871, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1063, 1064, 1065, 1067, 1070, 1076, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194, 1206, 1207, 1217, 1228, 1233, 1237], "word": [29, 30, 31, 136, 209, 210, 211, 1091, 1103, 1106, 1206, 1207], "leaf": [29, 32, 33, 75, 76, 132, 136, 145, 1067, 1068, 1077, 1078], "union": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 66, 67, 68, 69, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 123, 124, 125, 127, 132, 135, 136, 137, 138, 139, 140, 142, 147, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 246, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 299, 301, 303, 305, 306, 307, 308, 309, 311, 312, 313, 316, 318, 319, 322, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 375, 376, 377, 378, 379, 380, 382, 384, 387, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 699, 702, 703, 706, 707, 709, 710, 711, 714, 715, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 753, 755, 756, 758, 759, 760, 765, 769, 772, 773, 781, 783, 784, 785, 786, 787, 791, 792, 793, 794, 795, 797, 798, 799, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 824, 826, 827, 828, 829, 831, 833, 835, 837, 839, 842, 844, 845, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 875, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 951, 952, 953, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1078, 1079, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1233, 1234, 1235, 1237], "nativearrai": [29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 58, 59, 73, 74, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 118, 119, 123, 124, 127, 132, 134, 135, 136, 139, 140, 142, 144, 147, 160, 168, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 186, 189, 190, 191, 194, 195, 196, 199, 200, 201, 205, 209, 210, 211, 213, 215, 218, 221, 232, 235, 237, 238, 240, 241, 243, 246, 248, 249, 251, 256, 259, 260, 261, 265, 266, 270, 274, 275, 278, 279, 286, 289, 291, 292, 293, 294, 295, 296, 299, 301, 304, 313, 316, 319, 322, 330, 333, 336, 339, 341, 344, 346, 349, 351, 354, 357, 358, 360, 366, 372, 378, 379, 382, 391, 397, 398, 402, 407, 408, 411, 412, 413, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 436, 438, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 491, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 516, 517, 518, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 583, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 656, 657, 658, 661, 663, 666, 668, 671, 672, 673, 676, 677, 678, 679, 680, 681, 682, 683, 687, 688, 689, 690, 693, 694, 695, 696, 698, 702, 703, 706, 707, 710, 711, 713, 714, 715, 718, 721, 722, 723, 726, 727, 728, 729, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 753, 755, 756, 758, 759, 760, 765, 769, 772, 773, 774, 781, 783, 784, 785, 786, 787, 792, 794, 795, 798, 799, 801, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 824, 827, 828, 829, 831, 833, 835, 837, 839, 842, 844, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 876, 877, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 918, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1067, 1069, 1070, 1079, 1083, 1084, 1085, 1086, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1128, 1129, 1133, 1134, 1138, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1183, 1184, 1185, 1188, 1189, 1190, 1193, 1194], "travers": [29, 32, 33, 79, 82, 83, 136, 142, 144, 1067, 1079], "lowest": [29, 32, 33, 58, 59, 79, 82, 83, 108, 109, 132, 159, 1067, 1079, 1091, 1093, 1094, 1095, 1096, 1097], "leav": [29, 32, 33, 72, 75, 76, 77, 78, 79, 82, 83, 124, 126, 127, 129, 132, 136, 137, 139, 145, 146, 1001, 1047, 1050, 1067, 1068, 1069, 1077, 1078, 1079], "item": [29, 33, 70, 71, 75, 76, 92, 93, 137, 142, 144, 145, 147, 279, 307, 372, 378, 694, 712, 754, 783, 785, 786, 787, 788, 1067, 1072, 1073, 1074, 1075, 1079, 1083, 1084, 1195, 1229, 1230], "asarrai": [34, 35, 42, 43, 72, 77, 78, 92, 93, 129, 131, 134, 139, 209, 694, 783, 784, 785, 786, 787, 851, 852, 855, 1118, 1124, 1128], "nativedtyp": [34, 35, 58, 59, 84, 85, 108, 109, 123, 124, 137, 138, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 231, 232, 233, 234, 235, 236, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 271, 273, 274, 275, 276, 277, 278, 279, 285, 286, 289, 308, 309, 311, 312, 313, 316, 318, 356, 362, 371, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1150, 1175, 1178], "datatyp": [34, 35, 75, 76, 86, 87, 209, 213, 214, 232, 233, 235, 248, 249, 251, 279, 306, 356, 362], "nativedevic": [34, 35, 38, 39, 58, 59, 84, 85, 108, 109, 123, 124, 137, 138, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 271, 273, 274, 275, 276, 277, 278, 372, 376, 377, 378, 379, 380, 382, 384, 387, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 406, 694, 769, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1233, 1234, 1235, 1237], "interpret": [34, 35, 209, 213, 214, 215, 248, 249, 251], "empty_lik": [34, 35, 84, 85, 209], "uniniti": [34, 35, 209, 217, 218, 219, 221], "from_dlpack": [34, 35, 84, 85, 209], "full_lik": [34, 35, 84, 85, 125, 209, 236], "fill_valu": [34, 35, 84, 85, 125, 131, 137, 209, 231, 232, 233, 234, 235, 236, 407, 538, 541, 563, 566], "scalar": [34, 35, 73, 74, 84, 85, 137, 142, 147, 159, 176, 178, 180, 209, 232, 233, 234, 235, 236, 694, 769, 799, 805, 872, 975, 979], "fill": [34, 35, 58, 59, 75, 76, 84, 85, 108, 109, 131, 209, 217, 231, 232, 233, 234, 235, 236, 253, 254, 256, 257, 258, 259, 260, 271, 273, 274, 275, 276, 277, 278, 1091, 1093, 1094, 1095, 1096, 1097], "int": [34, 35, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 84, 85, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 118, 119, 123, 124, 125, 127, 130, 131, 132, 136, 137, 138, 139, 140, 147, 170, 191, 194, 206, 207, 209, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 261, 263, 265, 266, 268, 270, 279, 296, 299, 311, 318, 319, 322, 330, 333, 346, 349, 372, 389, 390, 391, 397, 398, 402, 407, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 694, 700, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 738, 739, 740, 741, 742, 753, 769, 772, 783, 786, 804, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 863, 864, 865, 866, 872, 873, 875, 877, 878, 881, 888, 891, 960, 964, 965, 969, 970, 974, 975, 979, 985, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1070, 1079, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1108, 1109, 1112, 1113, 1114, 1115, 1139, 1140, 1143, 1145, 1148, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "000123": [34, 35, 209, 232, 233, 235], "meshgrid": [34, 35, 84, 85, 209], "xy": [34, 35, 84, 85, 209, 243, 244, 245, 246, 247], "ones_lik": [34, 35, 84, 85, 147, 209, 260, 1195], "tril": [34, 35, 84, 85, 209], "k": [34, 35, 58, 59, 84, 85, 90, 91, 108, 109, 122, 130, 131, 142, 209, 223, 224, 225, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 593, 595, 597, 694, 702, 851, 871, 872, 905, 908, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1116], "n": [34, 35, 58, 59, 66, 67, 68, 69, 90, 91, 100, 101, 108, 109, 118, 119, 122, 129, 209, 243, 246, 261, 263, 265, 266, 268, 270, 593, 595, 597, 694, 703, 851, 867, 872, 888, 891, 905, 908, 914, 915, 916, 917, 918, 920, 921, 922, 923, 926, 928, 931, 933, 935, 936, 939, 950, 954, 955, 959, 965, 969, 970, 974, 975, 979, 980, 984, 1001, 1011, 1014, 1015, 1018, 1023, 1026, 1047, 1050, 1059, 1062, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1116, 1150, 1159, 1162, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "innermost": [34, 35, 50, 51, 100, 101, 209, 261, 263, 265, 266, 268, 270, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969], "mxn": [34, 35, 100, 101, 209, 261, 263, 265, 266, 268, 270, 872, 888, 891, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 955, 959, 965, 969], "matric": [34, 35, 50, 51, 100, 101, 158, 209, 243, 246, 261, 263, 265, 266, 268, 270, 851, 868, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 914, 916, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969], "diagon": [34, 35, 50, 51, 100, 101, 209, 223, 224, 261, 263, 265, 266, 268, 270, 872, 965, 969], "triangular": [34, 35, 50, 51, 100, 101, 209, 261, 263, 265, 266, 268, 270, 872, 873, 874, 875, 876, 877, 936, 939], "triu": [34, 35, 84, 85, 209], "upper": [34, 35, 50, 51, 58, 59, 100, 101, 108, 109, 129, 209, 223, 224, 266, 268, 270, 872, 873, 874, 875, 876, 877, 936, 939, 1091, 1103, 1104, 1105, 1106, 1107], "zeros_lik": [34, 35, 84, 85, 130, 209, 275, 851, 862, 865, 1001, 1002, 1005, 1195], "creation": [35, 72, 75, 76, 77, 78, 85, 123, 125, 129, 131, 134, 137, 138, 142, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 248, 251, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278], "data_typ": [36, 37, 86, 87, 123, 125, 129, 137, 279, 284, 285, 286, 289, 291, 294, 296, 299, 301, 304, 306, 307, 308, 309, 311, 312, 313, 316, 318, 319, 322, 324, 325, 327, 328, 330, 333, 335, 336, 339, 341, 344, 346, 349, 351, 354, 356, 357, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "astyp": [36, 37, 48, 49, 86, 87, 98, 99, 130, 137, 139, 279, 862, 863, 864, 866], "broadcast_arrai": [36, 37, 86, 87, 279, 295], "arbitrari": [36, 37, 75, 76, 86, 87, 124, 129, 132, 136, 139, 146, 159, 209, 243, 246, 279, 291, 292, 293, 294, 295, 357, 358, 359, 360, 361], "x1": [36, 37, 40, 41, 42, 43, 86, 87, 90, 91, 92, 93, 100, 101, 124, 127, 130, 209, 274, 278, 279, 291, 292, 293, 294, 295, 313, 316, 366, 372, 391, 407, 423, 426, 427, 443, 446, 447, 453, 456, 457, 463, 466, 467, 468, 471, 472, 473, 476, 477, 478, 481, 482, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 541, 542, 558, 559, 561, 562, 563, 566, 567, 588, 591, 592, 593, 596, 597, 603, 606, 607, 608, 611, 612, 613, 614, 616, 617, 618, 621, 622, 628, 631, 632, 638, 641, 642, 643, 644, 645, 646, 647, 678, 679, 682, 694, 695, 696, 697, 698, 699, 702, 851, 860, 872, 878, 881, 882, 905, 908, 928, 931, 932, 945, 948, 949, 960, 961, 964, 970, 971, 974, 1113, 1117], "x2": [36, 37, 40, 41, 42, 43, 50, 51, 75, 76, 86, 87, 90, 91, 92, 93, 100, 101, 124, 127, 130, 209, 274, 278, 279, 291, 292, 293, 294, 295, 366, 372, 391, 407, 423, 424, 425, 426, 427, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628, 629, 630, 631, 632, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 678, 679, 680, 681, 682, 694, 695, 696, 697, 698, 699, 851, 860, 872, 878, 879, 880, 881, 882, 905, 906, 907, 908, 928, 929, 930, 931, 932, 945, 946, 947, 948, 949, 960, 961, 962, 963, 964, 970, 971, 972, 973, 974, 1113, 1117], "x3": [36, 37, 209, 274, 278, 279, 291, 292, 294, 372, 391], "broadcast_to": [36, 37, 86, 87, 137, 279], "can_cast": [36, 37, 86, 87, 132, 137, 279, 305, 319, 322], "cast": [36, 37, 86, 87, 130, 131, 132, 137, 279, 286, 289, 301, 302, 303, 304, 305, 357, 358, 359, 361, 1001, 1007, 1010, 1150, 1167, 1170, 1175, 1178, 1195], "occur": [36, 37, 62, 63, 86, 87, 112, 113, 279, 301, 302, 303, 304, 305, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138], "rule": [36, 37, 50, 51, 86, 87, 100, 101, 127, 129, 132, 135, 136, 137, 140, 279, 286, 289, 301, 302, 303, 304, 305, 357, 360, 407, 448, 451, 473, 476, 498, 501, 618, 621, 643, 646, 872, 873, 874, 875, 876, 877, 878, 881, 928, 931, 945, 948], "float32": [36, 37, 48, 49, 86, 87, 92, 93, 98, 99, 127, 129, 137, 209, 274, 278, 279, 284, 285, 301, 302, 303, 305, 313, 316, 318, 319, 322, 335, 346, 349, 357, 361, 371, 694, 794, 795, 798, 862, 863, 864, 866], "float64": [36, 37, 58, 59, 86, 87, 108, 109, 129, 137, 279, 286, 289, 301, 302, 304, 319, 322, 335, 346, 349, 357, 358, 359, 360, 361, 362, 371, 1091, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], "as_n": [36, 37, 38, 39, 86, 87, 88, 89, 137, 279, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 372, 378, 379, 380, 381, 382, 383, 394], "finfo": [36, 37, 86, 87, 279], "iinfo": [36, 37, 86, 87, 140, 279], "is_bool_dtyp": [36, 37, 86, 87, 279], "is_float_dtyp": [36, 37, 86, 87, 125, 279], "is_int_dtyp": [36, 37, 86, 87, 125, 131, 279, 694, 799], "is_uint_dtyp": [36, 37, 86, 87, 125, 131, 279], "result_typ": [36, 37, 86, 87, 137, 279, 361], "arrays_and_dtyp": [36, 37, 86, 87, 279, 357, 358, 359, 360, 361], "int32": [36, 37, 58, 59, 86, 87, 92, 93, 108, 109, 129, 137, 209, 274, 278, 279, 301, 303, 304, 305, 313, 316, 330, 333, 346, 349, 357, 358, 359, 360, 361, 362, 694, 794, 795, 797, 798, 1001, 1015, 1018, 1091, 1093, 1094, 1095, 1097, 1098, 1101, 1103, 1106, 1150, 1167, 1170, 1175, 1178], "to_devic": [38, 39, 75, 76, 88, 89, 372, 378, 399], "stream": [38, 39, 88, 89, 372, 398, 399, 400, 401, 402], "ab": [40, 41, 90, 91, 129, 134, 407, 412, 638, 641, 872, 955, 959, 975, 979, 1195], "aco": [40, 41, 90, 91, 407, 417, 1195], "invers": [40, 41, 90, 91, 144, 158, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 872, 900, 903, 933, 935], "cosin": [40, 41, 90, 91, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "57": [40, 41, 90, 91, 372, 384, 407, 413, 414, 415, 416, 417, 418, 421, 428, 431, 433, 436, 443, 444, 446, 478, 481, 493, 496], "69": [40, 41, 108, 109, 413, 414, 1098, 1100, 1103, 1107], "acosh": [40, 41, 90, 91, 279, 324, 325, 327, 328, 407, 1195], "32": [40, 41, 44, 45, 58, 59, 90, 91, 108, 109, 129, 145, 170, 176, 179, 279, 318, 407, 418, 419, 420, 421, 422, 478, 481, 648, 649, 653, 654, 808, 809, 851, 858, 861, 862, 865, 872, 928, 931, 1091, 1093, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1106, 1107, 1113, 1117, 1150, 1151, 1154], "99": [40, 41, 90, 91, 108, 109, 407, 418, 419, 420, 421, 422, 433, 436, 488, 489, 694, 783, 786, 1098, 1100, 1150, 1151, 1154], "asin": [40, 41, 90, 91, 407, 432, 1195], "sine": [40, 41, 90, 91, 407, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "asinh": [40, 41, 90, 91, 407, 437, 1195], "82": [40, 41, 108, 109, 433, 434, 1098, 1100, 1103, 1105], "atan": [40, 41, 90, 91, 407, 442, 1195], "785": [40, 41, 90, 91, 407, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "464": [40, 41, 108, 109, 407, 438, 439, 443, 446, 1098, 1102], "atan2": [40, 41, 90, 91, 407, 447, 1195], "coordin": [40, 41, 90, 91, 209, 243, 246, 407, 443, 444, 445, 446, 447], "quotient": [40, 41, 90, 91, 407, 443, 444, 445, 446, 447], "245": [40, 41, 443, 444], "atanh": [40, 41, 90, 91, 407, 452, 1195], "549": [40, 41, 90, 91, 407, 448, 449, 450, 451, 452], "47": [40, 41, 58, 59, 90, 91, 108, 109, 407, 448, 449, 450, 452, 668, 671, 1091, 1098, 1100, 1103, 1104, 1106], "bitwise_and": [40, 41, 90, 91, 407, 457], "integ": [40, 41, 58, 59, 66, 67, 68, 69, 75, 76, 90, 91, 100, 101, 108, 109, 118, 119, 129, 131, 136, 137, 144, 209, 210, 211, 231, 279, 330, 333, 346, 349, 357, 360, 407, 408, 411, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 523, 526, 528, 531, 608, 611, 638, 641, 643, 646, 648, 651, 689, 693, 872, 914, 916, 970, 974, 975, 979, 1001, 1042, 1091, 1093, 1094, 1095, 1096, 1097, 1108, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "bitwise_invert": [40, 41, 90, 91, 407, 462], "bitiwse_invert": [40, 41, 458, 459], "bitwise_left_shift": [40, 41, 90, 91, 407, 467], "bitwise_or": [40, 41, 90, 91, 407, 472], "bitwise_right_shift": [40, 41, 90, 91, 407, 477], "bitwise_xor": [40, 41, 90, 91, 407, 482], "ceil": [40, 41, 90, 91, 209, 210, 211, 407, 487, 573, 576, 1195], "express": [40, 41, 90, 91, 126, 140, 142, 147, 407, 413, 416, 428, 431, 438, 441, 443, 446, 488, 489, 490, 491, 492, 658, 659, 660, 661, 662, 683, 684, 685, 686, 687], "radian": [40, 41, 90, 91, 126, 407, 413, 416, 428, 431, 438, 441, 443, 446, 488, 489, 490, 491, 492, 658, 659, 660, 661, 662, 683, 684, 685, 686, 687], "54": [40, 41, 90, 91, 106, 107, 108, 109, 127, 407, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 668, 671, 851, 871, 872, 928, 931, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1150, 1151, 1154], "416": [40, 41, 407, 488, 489, 491], "cosh": [40, 41, 90, 91, 407, 418, 422, 497, 1195], "76": [40, 41, 73, 74, 90, 91, 108, 109, 201, 202, 279, 330, 333, 407, 418, 420, 422, 493, 494, 495, 496, 497, 663, 665, 667, 806, 808, 811, 872, 960, 964, 1098, 1100, 1150, 1151, 1154], "23": [40, 41, 58, 59, 84, 85, 90, 91, 108, 109, 209, 232, 234, 235, 236, 407, 443, 446, 478, 481, 493, 494, 495, 497, 548, 551, 553, 556, 643, 646, 648, 649, 653, 656, 663, 664, 665, 666, 667, 851, 861, 872, 888, 891, 955, 959, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1113, 1117], "03": [40, 41, 90, 91, 108, 109, 493, 494, 495, 497, 694, 783, 786, 851, 871, 1085, 1086, 1089, 1098, 1100, 1103, 1107], "81": [40, 41, 108, 109, 279, 330, 333, 407, 493, 494, 648, 651, 673, 676, 1091, 1103, 1105, 1106, 1150, 1151, 1154], "divid": [40, 41, 42, 43, 75, 76, 90, 91, 127, 135, 407, 502, 528, 531, 694, 783, 784, 786, 1001, 1042], "dividend": [40, 41, 90, 91, 407, 498, 499, 500, 501, 502, 528, 529, 530, 532, 643, 644, 646], "divisor": [40, 41, 44, 45, 66, 67, 90, 91, 94, 95, 407, 498, 499, 500, 501, 502, 528, 529, 530, 532, 533, 535, 537, 643, 644, 646, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1150, 1171, 1174, 1179, 1181, 1183, 1233, 1234, 1235], "375": [40, 41, 407, 503, 504, 506], "erf": [40, 41, 90, 91, 407, 512], "exponenti": [40, 41, 90, 91, 407, 508, 509, 510, 511, 512, 513, 514, 516, 588, 591, 638, 639, 641], "gauss": [40, 41, 90, 91, 407, 508, 509, 510, 511, 512], "exp": [40, 41, 90, 91, 407, 517, 518, 521, 588, 591, 1195], "expm1": [40, 41, 90, 91, 407, 522], "244": [40, 41, 518, 519], "918": [40, 41, 518, 519], "48": [40, 41, 90, 91, 108, 109, 170, 176, 179, 407, 418, 420, 421, 422, 518, 519, 668, 671, 806, 808, 811, 872, 928, 931, 1098, 1100, 1103, 1107, 1150, 1151, 1154], "147": [40, 41, 170, 191, 194, 407, 518, 519, 521], "floor": [40, 41, 90, 91, 407, 473, 476, 527, 694, 734, 1195], "floor_divid": [40, 41, 90, 91, 407, 532], "13": [40, 41, 48, 49, 58, 59, 92, 93, 98, 99, 108, 109, 127, 129, 136, 279, 330, 333, 372, 384, 407, 453, 456, 478, 481, 493, 496, 518, 521, 528, 529, 531, 668, 671, 694, 707, 710, 711, 714, 783, 786, 806, 808, 811, 851, 852, 853, 854, 856, 871, 872, 888, 891, 928, 931, 955, 959, 1093, 1094, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1113, 1117, 1118, 1119, 1123, 1150, 1151, 1154], "greater": [40, 41, 58, 59, 90, 91, 108, 109, 407, 413, 416, 428, 431, 443, 446, 463, 466, 473, 476, 523, 526, 528, 531, 537, 638, 641, 643, 646, 653, 656, 689, 693, 872, 878, 881, 1001, 1043, 1046, 1091, 1103, 1104, 1105, 1106, 1107], "greater_equ": [40, 41, 90, 91, 407, 542, 588, 590, 592], "isfinit": [40, 41, 90, 91, 129, 407, 547], "out_i": [40, 41, 90, 91, 407, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "self_i": [40, 41, 90, 91, 543, 544, 545, 548, 549, 550, 553, 554, 555], "finit": [40, 41, 90, 91, 407, 423, 426, 443, 446, 543, 544, 545, 546, 547, 618, 621, 638, 641, 643, 646], "isinf": [40, 41, 90, 91, 407, 552], "neg": [40, 41, 54, 55, 58, 59, 68, 69, 73, 74, 90, 91, 104, 105, 108, 109, 118, 119, 132, 136, 139, 170, 176, 178, 179, 180, 209, 210, 211, 223, 224, 407, 543, 546, 548, 549, 550, 551, 552, 618, 621, 627, 638, 641, 643, 646, 872, 950, 954, 970, 974, 975, 979, 1001, 1019, 1022, 1037, 1038, 1039, 1040, 1041, 1091, 1098, 1099, 1100, 1101, 1102, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "infin": [40, 41, 90, 91, 126, 170, 201, 205, 208, 279, 286, 289, 407, 408, 411, 418, 421, 423, 426, 433, 436, 438, 441, 443, 446, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 528, 531, 543, 546, 548, 549, 550, 551, 552, 568, 571, 573, 576, 583, 586, 588, 591, 598, 601, 618, 621, 638, 641, 643, 646, 648, 651, 658, 661, 663, 666, 668, 671, 683, 687, 688, 689, 693, 872, 975, 979, 1150, 1155, 1158, 1163, 1166, 1184, 1185, 1188, 1190, 1193], "isnan": [40, 41, 90, 91, 407, 557], "nan": [40, 41, 66, 67, 75, 76, 90, 91, 123, 126, 129, 170, 201, 205, 208, 279, 286, 289, 407, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 543, 546, 553, 554, 555, 556, 557, 568, 571, 573, 574, 575, 576, 577, 583, 586, 588, 591, 598, 601, 618, 621, 638, 641, 643, 646, 648, 651, 658, 661, 663, 666, 668, 671, 683, 687, 688, 689, 693, 694, 755, 805, 851, 871, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1188, 1190, 1193], "less_equ": [40, 41, 90, 91, 407, 567], "log10": [40, 41, 90, 91, 407, 577], "logarithm": [40, 41, 90, 91, 407, 513, 516, 568, 571, 573, 574, 575, 576, 577, 578, 581, 583, 584, 585, 586, 587, 588, 591, 872, 941, 943], "602": [40, 41, 407, 573, 574, 576], "inf": [40, 41, 75, 76, 90, 91, 100, 101, 129, 208, 407, 443, 446, 518, 521, 548, 551, 553, 556, 573, 574, 575, 576, 577, 694, 755, 805, 872, 975, 979], "699": [40, 41, 407, 573, 574, 576], "log1p": [40, 41, 90, 91, 407, 582], "log2": [40, 41, 90, 91, 407, 587], "logaddexp": [40, 41, 90, 91, 407], "logical_and": [40, 41, 90, 91, 407, 597, 1195], "logical_not": [40, 41, 90, 91, 407, 602, 1195], "logical_or": [40, 41, 90, 91, 407, 607, 1195], "logical_xor": [40, 41, 90, 91, 407, 612], "not_equ": [40, 41, 90, 91, 407, 632], "pow": [40, 41, 90, 91, 407, 642], "expon": [40, 41, 407, 638, 639, 641, 694, 788], "remaind": [40, 41, 75, 76, 90, 91, 407, 647, 694, 734, 1001, 1042], "x2_i": [40, 41, 90, 91, 407, 423, 426, 443, 446, 453, 456, 463, 466, 468, 471, 473, 476, 478, 481, 498, 501, 503, 506, 528, 531, 533, 536, 538, 541, 558, 561, 563, 566, 588, 591, 593, 596, 603, 606, 608, 611, 618, 621, 628, 631, 638, 641, 643, 644, 645, 646, 647, 678, 682], "11": [40, 41, 44, 45, 48, 49, 58, 59, 72, 77, 78, 90, 91, 98, 99, 104, 105, 108, 109, 127, 129, 136, 407, 423, 425, 426, 427, 438, 441, 453, 456, 518, 520, 643, 644, 646, 648, 651, 694, 714, 738, 741, 808, 809, 851, 852, 853, 854, 855, 856, 872, 888, 891, 928, 931, 955, 959, 985, 996, 999, 1001, 1019, 1022, 1043, 1045, 1067, 1084, 1091, 1093, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1113, 1117, 1118, 1119, 1123, 1150, 1151, 1154], "18": [40, 41, 58, 59, 90, 91, 108, 109, 127, 136, 407, 443, 446, 478, 481, 498, 501, 643, 644, 663, 664, 665, 666, 667, 872, 888, 891, 928, 931, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1150, 1151, 1154], "94": [40, 41, 58, 59, 90, 91, 108, 109, 372, 392, 433, 437, 648, 649, 653, 654, 1103, 1104, 1105], "256": [40, 41, 648, 649, 653, 654, 851, 861], "0001": [40, 41, 648, 649, 653, 654, 1233, 1234, 1235], "36": [40, 41, 407, 443, 446, 648, 649, 653, 654, 872, 928, 931, 955, 959, 1150, 1151, 1154], "37": [40, 41, 90, 91, 407, 433, 436, 437, 648, 649, 663, 665, 667, 683, 687, 1091, 1098, 1101], "67": [40, 41, 42, 43, 90, 91, 108, 109, 136, 407, 478, 481, 493, 495, 496, 497, 648, 649, 653, 654, 663, 665, 667, 783, 784, 1103, 1105], "45": [40, 41, 90, 91, 108, 109, 129, 407, 443, 445, 446, 447, 498, 500, 501, 502, 648, 649, 653, 654, 806, 808, 811, 872, 928, 931, 1001, 1042, 1085, 1086, 1089, 1098, 1100, 1103, 1105, 1150, 1151, 1154], "24": [40, 41, 98, 99, 106, 107, 108, 109, 407, 478, 481, 648, 649, 653, 654, 668, 671, 694, 714, 806, 808, 811, 852, 854, 856, 872, 888, 891, 928, 931, 1085, 1086, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1103, 1105, 1150, 1151, 1154], "678": [40, 41, 648, 649, 653, 654], "25": [40, 41, 42, 43, 50, 51, 52, 53, 58, 59, 90, 91, 92, 93, 98, 99, 106, 107, 108, 109, 136, 407, 498, 500, 501, 502, 648, 649, 663, 666, 668, 671, 673, 676, 694, 783, 784, 786, 787, 852, 854, 856, 872, 873, 874, 876, 888, 891, 900, 903, 985, 991, 992, 994, 1085, 1086, 1088, 1089, 1090, 1093, 1094, 1098, 1099, 1100, 1102, 1103, 1105, 1150, 1151, 1154], "33": [40, 41, 56, 57, 58, 59, 90, 91, 92, 93, 407, 433, 435, 438, 441, 648, 649, 694, 707, 709, 783, 786, 872, 928, 931, 1067, 1084, 1085, 1086, 1087, 1089, 1093, 1094, 1150, 1151, 1154], "sin": [40, 41, 90, 91, 135, 142, 407, 662, 694, 735, 1195], "841": [40, 41, 90, 91, 407, 658, 659, 660, 661, 662], "909": [40, 41, 90, 91, 92, 93, 407, 658, 659, 660, 661, 662, 783, 787], "141": [40, 41, 90, 91, 407, 658, 659, 660, 661, 662], "sinh": [40, 41, 90, 91, 407, 667, 1195], "63": [40, 41, 44, 45, 90, 91, 100, 101, 407, 663, 664, 665, 666, 667, 668, 671, 808, 809, 872, 873, 875, 876, 877, 928, 931, 1150, 1151, 1154], "232": [40, 41, 90, 91, 407, 663, 664, 665, 666, 667], "51": [40, 41, 108, 109, 407, 478, 481, 663, 664, 666, 1098, 1102, 1103, 1105], "sqrt": [40, 41, 90, 91, 407, 672, 872, 975, 979], "squar": [40, 41, 50, 51, 90, 91, 100, 101, 129, 407, 668, 669, 670, 671, 672, 677, 851, 858, 872, 873, 874, 875, 876, 877, 883, 886, 893, 896, 897, 899, 900, 903, 914, 916, 941, 943, 945, 948, 950, 954], "subtract": [40, 41, 90, 91, 127, 135, 407, 679], "tan": [40, 41, 90, 91, 124, 126, 130, 132, 136, 139, 142, 407, 428, 431, 433, 436, 684, 872, 888, 891, 1118, 1119, 1123, 1139, 1140, 1143, 1195], "56": [40, 41, 58, 59, 90, 91, 127, 407, 668, 671, 683, 684, 685, 686, 687, 806, 808, 811, 872, 928, 931, 955, 959, 1098, 1099, 1150, 1151, 1154], "19": [40, 41, 58, 59, 90, 91, 108, 109, 127, 407, 433, 435, 437, 478, 481, 683, 684, 685, 686, 687, 872, 888, 891, 1091, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1139, 1145, 1148], "trunc": [40, 41, 90, 91, 407, 690], "elementwis": [41, 75, 76, 91, 123, 132, 142, 147, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 596, 598, 601, 603, 606, 608, 611, 613, 614, 615, 616, 617, 618, 621, 623, 626, 628, 631, 633, 636, 638, 641, 643, 646, 648, 651, 653, 656, 658, 661, 663, 666, 668, 671, 673, 676, 678, 682, 683, 687, 688, 689, 693], "all_equ": [42, 43, 92, 93, 694, 699], "equality_matrix": [42, 43, 92, 93, 694, 695, 696, 697, 698, 699], "compar": [42, 43, 75, 76, 92, 93, 127, 129, 131, 140, 145, 694, 695, 696, 697, 698, 699, 702, 703, 872, 955, 959, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1148], "matrix": [42, 43, 50, 51, 75, 76, 92, 93, 100, 101, 209, 243, 246, 261, 265, 266, 270, 694, 695, 696, 697, 698, 699, 706, 851, 868, 872, 873, 874, 875, 876, 877, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 914, 916, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 945, 948, 950, 954, 955, 959, 965, 969, 980, 984, 1217, 1227], "clip_vector_norm": [42, 43, 92, 93, 694, 711], "max_norm": [42, 43, 92, 93, 694, 706, 707, 708, 709, 710, 711], "norm": [42, 43, 57, 75, 76, 92, 93, 100, 101, 107, 123, 694, 706, 707, 708, 709, 710, 711, 872, 909, 912, 975, 979, 1086, 1087, 1088, 1089, 1090, 1195, 1232, 1233, 1235], "vector": [42, 43, 75, 76, 92, 93, 100, 101, 158, 209, 243, 246, 694, 707, 708, 709, 710, 711, 851, 868, 872, 878, 881, 893, 896, 905, 908, 928, 931, 950, 954, 955, 959, 970, 974, 975, 979, 980, 981, 984, 1217, 1227], "downscal": [42, 43, 92, 93, 694, 706, 707, 708, 709, 710, 711], "max": [42, 43, 66, 67, 92, 93, 100, 101, 116, 117, 279, 319, 322, 330, 333, 407, 613, 694, 706, 707, 708, 709, 710, 711, 723, 724, 725, 726, 727, 772, 773, 872, 918, 920, 921, 922, 933, 935, 1150, 1233, 1235], "894": [42, 43, 92, 93, 694, 707, 708, 710, 711, 1085, 1086, 1089], "79": [42, 43, 92, 93, 108, 109, 407, 478, 481, 498, 501, 694, 707, 708, 710, 711, 1103, 1105], "einops_rearrang": [42, 43, 92, 93, 694, 722], "axes_length": [42, 43, 92, 93, 694, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "arrang": [42, 43, 92, 93, 694, 718, 719, 720, 721, 722], "rearrang": [42, 43, 92, 93, 694, 718, 719, 720, 721, 722, 728, 729, 730, 731, 732], "einops_reduc": [42, 43, 92, 93, 694, 727], "reduct": [42, 43, 68, 69, 75, 76, 92, 93, 118, 119, 129, 137, 144, 694, 723, 724, 725, 726, 727, 772, 773, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "reduc": [42, 43, 50, 51, 66, 67, 68, 69, 75, 76, 92, 93, 100, 101, 118, 119, 144, 372, 397, 694, 723, 724, 725, 726, 727, 872, 936, 937, 938, 939, 940, 1113, 1114, 1115, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "callabl": [42, 43, 92, 93, 125, 129, 136, 142, 160, 161, 162, 163, 164, 165, 166, 167, 168, 206, 207, 279, 324, 325, 327, 328, 372, 385, 386, 397, 694, 700, 705, 717, 723, 724, 725, 726, 727, 736, 737, 1063, 1064, 1065, 1066, 1067, 1073, 1074, 1075, 1077, 1078, 1079, 1080], "One": [42, 43, 54, 55, 58, 59, 92, 93, 104, 105, 108, 109, 127, 129, 131, 137, 142, 144, 145, 694, 723, 724, 725, 726, 727, 1001, 1032, 1033, 1034, 1035, 1036, 1091, 1093, 1094, 1095, 1096, 1097], "min": [42, 43, 66, 67, 92, 93, 116, 117, 279, 319, 322, 330, 333, 407, 614, 616, 694, 723, 724, 725, 726, 727, 772, 773, 783, 786, 872, 936, 939, 950, 954, 955, 959, 975, 979, 1150], "prod": [42, 43, 66, 67, 92, 93, 116, 117, 127, 137, 694, 723, 724, 725, 726, 727, 1150], "einops_repeat": [42, 43, 92, 93, 694, 732], "gather": [42, 43, 92, 93, 694, 742, 743, 744, 745, 746, 747], "along": [42, 43, 52, 53, 54, 55, 66, 67, 68, 69, 73, 74, 75, 76, 92, 93, 100, 101, 102, 103, 104, 105, 108, 109, 118, 119, 123, 127, 139, 191, 193, 195, 209, 237, 238, 240, 241, 372, 397, 694, 714, 715, 738, 739, 740, 741, 742, 804, 872, 909, 912, 965, 969, 970, 974, 975, 979, 985, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1007, 1010, 1019, 1022, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1042, 1047, 1050, 1055, 1058, 1063, 1064, 1065, 1066, 1091, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1139, 1140, 1143, 1145, 1148, 1150, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "gather_nd": [42, 43, 92, 93, 694, 747, 1195], "cuda": [42, 43, 58, 59, 75, 76, 92, 93, 108, 109, 142, 145, 159, 209, 237, 238, 240, 241, 372, 375, 394, 395, 694, 738, 741, 743, 744, 745, 746, 747, 769, 772, 773, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1240], "stable_divid": [42, 43, 92, 93, 132, 694, 787], "denomin": [42, 43, 56, 57, 92, 93, 106, 107, 132, 159, 694, 734, 751, 776, 783, 784, 785, 786, 787, 788, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232], "min_denomin": [42, 43, 92, 93, 694, 783, 784, 785, 786, 787], "divis": [42, 43, 44, 45, 92, 93, 94, 95, 132, 407, 473, 476, 498, 501, 528, 531, 643, 646, 694, 734, 751, 776, 783, 784, 785, 786, 787, 788, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1233, 1234, 1235], "_min_denomin": [42, 43, 92, 93, 694, 783, 784, 785, 786, 787], "to_numpi": [42, 43, 75, 76, 92, 93, 145, 694, 795, 1195], "adam_step": [44, 45, 94, 95, 806, 812], "mw": [44, 45, 94, 95, 146, 806, 808, 809, 810, 811, 812, 813, 815], "vw": [44, 45, 94, 95, 146, 806, 808, 809, 810, 811, 812, 813, 815], "beta1": [44, 45, 94, 95, 146, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 829, 830, 831, 832, 1233, 1234, 1235], "beta2": [44, 45, 94, 95, 146, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 829, 830, 831, 832, 1233, 1234, 1235], "999": [44, 45, 73, 74, 90, 91, 94, 95, 146, 170, 201, 202, 204, 205, 407, 688, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 829, 830, 831, 832, 1233, 1234, 1235], "epsilon": [44, 45, 52, 53, 56, 57, 94, 95, 100, 101, 102, 103, 106, 107, 132, 136, 139, 146, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 829, 830, 831, 832, 872, 918, 920, 921, 922, 933, 935, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232, 1233, 1234, 1235], "1e": [44, 45, 52, 53, 56, 57, 94, 95, 102, 103, 106, 107, 131, 132, 136, 139, 146, 147, 279, 319, 322, 694, 751, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 829, 830, 831, 832, 872, 950, 954, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1085, 1086, 1087, 1088, 1089, 1090, 1195, 1233, 1234, 1235, 1236, 1238], "07": [44, 45, 52, 53, 90, 91, 94, 95, 102, 103, 108, 109, 146, 407, 443, 445, 446, 447, 653, 656, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 829, 830, 831, 832, 872, 955, 959, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1098, 1100, 1233, 1234, 1235], "cost": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1063, 1064, 1065, 1066], "weight": [44, 45, 94, 95, 132, 136, 146, 147, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 851, 868, 869, 871, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1230, 1233, 1235, 1236], "ws": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839], "dc": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839], "dw": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839], "w": [44, 45, 48, 49, 75, 76, 90, 91, 94, 95, 98, 99, 142, 145, 146, 593, 595, 597, 694, 703, 783, 786, 806, 808, 809, 810, 811, 812, 813, 815, 816, 820, 822, 823, 829, 831, 832, 833, 835, 836, 837, 839, 840, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866], "averag": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1063, 1064, 1065], "moment": [44, 45, 94, 95, 133, 159, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1233, 1234, 1235], "forget": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1233, 1234, 1235], "adam": [44, 45, 94, 95, 145, 146, 147, 806, 808, 809, 810, 811, 812, 813, 815, 829, 831, 1195, 1233, 1235], "delta": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812], "dcdw": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 835, 836], "adam_step_delta": [44, 45, 94, 95, 806, 808, 809, 810, 811, 812], "639": [44, 45, 806, 808, 809, 811], "00121": [44, 45, 808, 809], "0102": [44, 45, 808, 809], "0397": [44, 45, 808, 809], "exclus": [44, 45, 75, 76, 94, 95, 129, 132, 136, 147, 209, 210, 211, 694, 714, 762, 763, 765, 806, 824, 825, 826, 827, 828, 1091, 1093, 1096], "is_var": [44, 45, 94, 95, 806, 824, 825, 826, 827, 828], "gradient": [45, 75, 76, 95, 123, 136, 145, 146, 158, 159, 372, 397, 808, 809, 810, 811, 812, 813, 815, 817, 818, 820, 822, 824, 827, 829, 831, 833, 835, 837, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1063, 1064, 1065, 1066, 1195, 1233, 1234, 1235, 1236, 1237, 1238], "conv1d": [48, 49, 98, 99, 851, 856, 1217], "stride": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "pad": [48, 49, 98, 99, 694, 735, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1001, 1011, 1014, 1059, 1062, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "data_format": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "nwc": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 1217, 1218, 1219], "dilat": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "batch_siz": [48, 49, 98, 99, 145, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1091, 1092], "d_in": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866], "convolut": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "fw": [48, 49, 98, 99, 129, 131, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866], "d_out": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861], "slide": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "valid": [48, 49, 68, 69, 98, 99, 118, 119, 127, 129, 130, 131, 137, 142, 279, 306, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1001, 1047, 1050, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "algorithm": [48, 49, 73, 74, 98, 99, 159, 171, 173, 175, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224], "ncw": [48, 49, 98, 99, 851, 852, 853, 854, 855, 856, 857, 1217, 1218, 1219], "wio": [48, 49, 851, 852, 853, 855], "20": [48, 49, 58, 59, 90, 91, 92, 93, 108, 109, 144, 407, 478, 481, 513, 516, 518, 521, 648, 650, 651, 652, 668, 671, 694, 783, 786, 787, 852, 853, 872, 888, 891, 928, 931, 960, 964, 1091, 1093, 1094, 1095, 1096, 1113, 1116, 1117, 1150, 1151, 1154], "depthwise_conv2d": [48, 49, 98, 99, 851, 866, 1195], "nhwc": [48, 49, 98, 99, 851, 858, 859, 862, 863, 864, 865, 866, 1217, 1220, 1221, 1224], "h": [48, 49, 98, 99, 122, 136, 851, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1067, 1070, 1083], "fh": [48, 49, 98, 99, 851, 858, 859, 860, 861, 862, 863, 864, 865, 866], "nchw": [48, 49, 98, 99, 851, 858, 859, 862, 863, 864, 865, 866, 1217, 1220, 1221, 1224], "randint": [48, 49, 58, 59, 98, 99, 108, 109, 862, 863, 864, 866, 1091, 1097, 1195], "255": [48, 49, 98, 99, 862, 863, 864, 866], "128": [48, 49, 98, 99, 279, 330, 333, 851, 861, 862, 863, 864, 866, 872, 928, 931], "random_norm": [48, 49, 58, 59, 98, 99, 108, 109, 129, 851, 858, 861, 862, 863, 864, 865, 866, 872, 950, 954, 1091, 1102, 1118, 1119, 1123], "linear_algebra": [50, 51, 100, 101, 123, 144, 872, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 909, 912, 914, 916, 918, 921, 923, 926, 928, 931, 933, 935, 936, 939, 941, 943, 945, 948, 950, 954, 955, 959, 960, 964, 965, 969, 970, 974, 975, 979, 980, 984], "choleski": [50, 51, 100, 101, 872, 877], "symmetr": [50, 51, 100, 101, 136, 872, 873, 874, 875, 876, 877, 893, 896, 897, 899, 980, 984], "u": [50, 51, 100, 101, 872, 873, 874, 875, 876, 877, 950, 954], "625": [50, 51, 872, 873, 874, 876], "cross": [50, 51, 52, 53, 100, 101, 102, 103, 872, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1195], "det": [50, 51, 100, 101, 872], "offset": [50, 51, 56, 57, 100, 101, 106, 107, 872, 888, 889, 890, 891, 892, 965, 966, 967, 968, 969, 1085, 1086, 1087, 1088, 1089, 1090], "axis1": [50, 51, 54, 55, 100, 101, 104, 105, 872, 888, 889, 890, 891, 892, 1001, 1051, 1052, 1053, 1054], "axis2": [50, 51, 100, 101, 872, 888, 889, 890, 891, 892], "eigh": [50, 51, 100, 101, 872], "namedtupl": [50, 51, 62, 63, 100, 101, 112, 113, 872, 893, 894, 895, 896, 936, 937, 939, 950, 954, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133], "eigvalsh": [50, 51, 72, 77, 78, 872], "inv": [50, 51, 100, 101, 144, 872, 1195], "matmul": [50, 51, 100, 101, 123, 129, 133, 142, 872, 950, 954, 1195], "matrix_norm": [50, 51, 75, 76, 100, 101, 872], "ord": [50, 51, 75, 76, 100, 101, 872, 909, 910, 911, 912, 913, 975, 976, 977, 978, 979], "fro": [50, 51, 100, 101, 872, 909, 910, 911, 912, 913], "keepdim": [50, 51, 66, 67, 68, 69, 75, 76, 100, 101, 116, 117, 118, 119, 140, 694, 804, 872, 909, 910, 911, 912, 913, 975, 976, 977, 978, 979, 1113, 1114, 1115, 1150, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "matrix_rank": [50, 51, 100, 101, 872, 922], "rtol": [50, 51, 100, 101, 131, 872, 918, 919, 920, 921, 922, 933, 934, 935], "matrix_transpos": [50, 51, 100, 101, 144, 872], "outer": [50, 51, 100, 101, 872, 1063, 1064, 1065, 1066], "pinv": [50, 51, 72, 77, 78, 872, 1195], "qr": [50, 51, 100, 101, 872], "solv": [50, 51, 100, 101, 143, 158, 872], "svd": [50, 51, 100, 101, 872, 955, 959, 1195], "full_matric": [50, 51, 100, 101, 872, 950, 951, 952, 953, 954], "svdval": [50, 51, 100, 101, 872], "tensordot": [50, 51, 100, 101, 872], "trace": [50, 51, 75, 76, 100, 101, 142, 159, 694, 762, 763, 765, 872], "vecdot": [50, 51, 100, 101, 872], "vector_norm": [50, 51, 75, 76, 100, 101, 872], "vector_to_skew_symmetric_matrix": [50, 51, 100, 101, 872, 1195], "binary_cross_entropi": [52, 53, 102, 103, 985, 990], "pred": [52, 53, 102, 103, 132, 136, 139, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "predict": [52, 53, 102, 103, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "amount": [52, 53, 102, 103, 138, 372, 403, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "smooth": [52, 53, 102, 103, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "binari": [52, 53, 102, 103, 407, 453, 456, 468, 471, 478, 481, 608, 611, 985, 986, 987, 988, 989, 990], "entropi": [52, 53, 102, 103, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000], "357": [52, 53, 102, 103, 985, 986, 987, 988, 989, 990, 996, 997, 999, 1000], "223": [52, 53, 102, 103, 985, 986, 987, 988, 989, 990, 996, 997, 998, 1000], "cross_entropi": [52, 53, 102, 103, 132, 136, 139, 985, 995, 996, 999], "3862944": [52, 53, 985, 991, 992, 994], "sparse_cross_entropi": [52, 53, 102, 103, 985, 1000], "logit": [52, 53, 102, 103, 985, 996, 997, 998, 999, 1000], "spars": [52, 53, 102, 103, 985, 996, 997, 998, 999, 1000], "loss": [53, 103, 123, 132, 145, 146, 147, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1195], "clip": [54, 55, 75, 76, 104, 105, 132, 136, 139, 142, 145, 147, 407, 613, 614, 616, 694, 706, 707, 710, 1001, 1006, 1195], "x_min": [54, 55, 75, 76, 104, 105, 142, 147, 1001, 1002, 1003, 1004, 1005, 1006], "x_max": [54, 55, 75, 76, 104, 105, 142, 147, 1001, 1002, 1003, 1004, 1005, 1006], "roll": [54, 55, 104, 105, 124, 136, 1001, 1002, 1003, 1032, 1033, 1041], "concat": [54, 55, 75, 76, 104, 105, 130, 372, 397, 694, 735, 1001, 1195], "xs": [54, 55, 94, 95, 104, 105, 136, 694, 695, 698, 703, 806, 817, 818, 819, 1001, 1007, 1008, 1009, 1010], "constant_pad": [54, 55, 104, 105, 1001], "pad_width": [54, 55, 104, 105, 1001, 1011, 1012, 1013, 1014, 1059, 1060, 1061, 1062], "expand_dim": [54, 55, 104, 105, 142, 145, 1001, 1195], "flip": [54, 55, 104, 105, 144, 145, 147, 407, 458, 461, 1001, 1195], "permute_dim": [54, 55, 104, 105, 1001], "reshap": [54, 55, 75, 76, 104, 105, 129, 139, 142, 144, 147, 1001, 1036, 1195], "nativeshap": [54, 55, 58, 59, 104, 105, 108, 109, 209, 217, 231, 253, 254, 271, 273, 694, 773, 781, 791, 793, 851, 857, 859, 861, 1001, 1032, 1033, 1034, 1035, 1036, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], "sequenc": [54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 127, 129, 130, 137, 140, 158, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 694, 695, 697, 699, 703, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 766, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1047, 1050, 1067, 1083, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1150, 1155, 1158, 1179, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1217, 1226, 1231, 1232, 1239, 1240], "length": [54, 55, 72, 75, 76, 77, 78, 104, 105, 129, 131, 140, 145, 209, 210, 211, 243, 246, 872, 950, 954, 955, 959, 1001, 1032, 1033, 1034, 1035, 1036], "valueerror": [54, 55, 104, 105, 142, 1001, 1032, 1033, 1034, 1035, 1036, 1043, 1046], "reus": [54, 55, 104, 105, 129, 1001, 1032, 1033, 1034, 1035, 1036], "memori": [54, 55, 104, 105, 138, 139, 157, 159, 372, 377, 392, 397, 403, 406, 851, 869, 1001, 1032, 1033, 1034, 1035, 1036, 1195], "buffer": [54, 55, 104, 105, 159, 1001, 1032, 1033, 1034, 1035, 1036], "larger": [54, 55, 66, 67, 104, 105, 129, 142, 147, 279, 319, 322, 1001, 1002, 1005, 1037, 1038, 1039, 1040, 1041, 1150, 1171, 1174, 1179, 1181, 1183], "flatten": [54, 55, 62, 63, 75, 76, 100, 101, 104, 105, 112, 113, 694, 735, 872, 928, 931, 975, 979, 1001, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1113, 1114, 1115, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1138], "restor": [54, 55, 104, 105, 1001, 1037, 1038, 1039, 1040, 1041], "squeez": [54, 55, 104, 105, 1001, 1195], "stack": [54, 55, 75, 76, 100, 101, 104, 105, 142, 209, 261, 265, 266, 270, 872, 883, 886, 888, 891, 893, 896, 897, 899, 900, 903, 905, 908, 914, 916, 918, 920, 921, 922, 923, 926, 933, 935, 936, 939, 950, 954, 955, 959, 965, 969, 1001, 1067, 1068, 1077, 1078, 1195, 1217, 1226], "swapax": [54, 55, 104, 105, 1001], "axis0": [54, 55, 104, 105, 1001, 1051, 1052, 1053, 1054], "tile": [54, 55, 104, 105, 1001, 1195], "rep": [54, 55, 104, 105, 1001, 1055, 1056, 1057, 1058], "zero_pad": [54, 55, 104, 105, 1001, 1195], "layer_norm": [56, 57, 106, 107, 1085, 1090], "normalized_idx": [56, 57, 106, 107, 1085, 1086, 1087, 1088, 1089, 1090], "05": [56, 57, 106, 107, 129, 131, 806, 808, 811, 1085, 1086, 1087, 1088, 1089, 1090], "scale": [56, 57, 106, 107, 130, 136, 372, 395, 396, 806, 833, 835, 851, 867, 870, 871, 1085, 1086, 1087, 1088, 1089, 1090, 1217, 1225, 1228, 1233, 1236], "new_std": [56, 57, 106, 107, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232], "normal": [56, 57, 58, 59, 106, 107, 108, 109, 145, 1001, 1047, 1050, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1102, 1231, 1232], "small": [56, 57, 100, 101, 106, 107, 127, 131, 132, 142, 146, 159, 407, 618, 621, 872, 918, 920, 921, 922, 933, 935, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232], "constant": [56, 57, 106, 107, 123, 132, 146, 147, 159, 1001, 1011, 1014, 1067, 1073, 1085, 1086, 1087, 1088, 1089, 1090, 1208, 1209, 1213, 1216, 1229, 1230, 1231, 1232], "_min_bas": [56, 57, 106, 107, 694, 788, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232], "learnabl": [56, 57, 106, 107, 147, 1085, 1086, 1087, 1088, 1089, 1090, 1231, 1232], "gamma": [56, 57, 106, 107, 1085, 1086, 1087, 1088, 1089, 1090], "beta": [56, 57, 106, 107, 1085, 1086, 1087, 1088, 1089, 1090], "0976": [56, 57, 1085, 1086, 1087, 1089], "3452": [56, 57, 1085, 1086, 1087, 1089], "2740": [56, 57, 1085, 1086, 1087, 1089], "1047": [56, 57, 1085, 1086, 1087, 1089], "5886": [56, 57, 1085, 1086, 1087, 1089], "2732": [56, 57, 1085, 1086, 1087, 1089], "7696": [56, 57, 1085, 1086, 1087, 1089], "7024": [56, 57, 1085, 1086, 1087, 1089], "2518": [56, 57, 1085, 1086, 1087, 1089], "001": [56, 57, 145, 146, 279, 319, 322, 407, 653, 656, 806, 808, 811, 1085, 1086, 1087, 1089], "576": [56, 57, 1085, 1086, 1087, 1089], "292": [56, 57, 1085, 1086, 1087, 1089], "581": [56, 57, 806, 808, 811, 1085, 1086, 1087, 1089], "891": [56, 57, 170, 186, 189, 1085, 1086, 1087, 1089], "01": [56, 57, 108, 109, 147, 407, 648, 651, 653, 656, 694, 783, 786, 872, 955, 959, 1085, 1086, 1087, 1089, 1091, 1098, 1101, 1103, 1105], "579": [56, 57, 1085, 1086, 1087, 1089], "931": [56, 57, 1085, 1086, 1087, 1089], "drawn": [58, 59, 108, 109, 129, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], "highest": [58, 59, 108, 109, 1091, 1093, 1094, 1095, 1096, 1097], "sampl": [58, 59, 66, 67, 108, 109, 129, 851, 867, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1150, 1171, 1174, 1179, 1181, 1183, 1217, 1225], "low": [58, 59, 108, 109, 142, 1091, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107], "uniform": [58, 59, 108, 109, 146, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1208, 1210, 1211, 1214, 1215], "half": [58, 59, 108, 109, 209, 210, 211, 1091, 1093, 1094, 1095, 1096, 1097, 1103, 1106], "interv": [58, 59, 68, 69, 108, 109, 118, 119, 142, 147, 209, 210, 211, 237, 238, 240, 241, 872, 970, 974, 1001, 1002, 1005, 1047, 1050, 1091, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "int8": [58, 59, 108, 109, 129, 137, 279, 330, 333, 346, 349, 371, 1093, 1094, 1095], "int16": [58, 59, 108, 109, 129, 137, 279, 301, 304, 330, 333, 346, 349, 1093, 1094, 1095, 1150, 1167, 1170, 1175, 1178], "int64": [58, 59, 86, 87, 108, 109, 129, 137, 279, 301, 303, 304, 305, 318, 330, 333, 351, 354, 371, 407, 473, 476, 1093, 1094, 1095, 1113, 1114, 1115, 1150, 1167, 1170, 1175, 1178], "98": [58, 59, 90, 91, 108, 109, 407, 478, 481, 493, 495, 497, 663, 665, 667, 872, 928, 931, 1093, 1094, 1103, 1105, 1113, 1117, 1150, 1151, 1154], "46": [58, 59, 108, 109, 407, 653, 656, 1093, 1094, 1098, 1100], "std": [58, 59, 66, 67, 108, 109, 116, 117, 127, 1091, 1093, 1096, 1098, 1099, 1100, 1101, 1102, 1118, 1119, 1123, 1150], "non": [58, 59, 66, 67, 68, 69, 100, 101, 108, 109, 116, 117, 118, 119, 127, 136, 137, 142, 206, 207, 279, 286, 289, 335, 407, 598, 601, 603, 606, 851, 858, 872, 883, 886, 918, 920, 921, 922, 950, 954, 960, 964, 970, 974, 975, 979, 1091, 1098, 1099, 1100, 1101, 1102, 1113, 1114, 1115, 1116, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1229, 1230, 1233, 1237], "parameter": [58, 59, 108, 109, 1091, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], "44": [58, 59, 108, 109, 407, 433, 436, 648, 651, 668, 671, 673, 676, 872, 928, 931, 1093, 1095, 1097, 1098, 1099, 1100, 1113, 1117, 1150, 1151, 1154], "72": [58, 59, 407, 513, 516, 518, 521, 806, 808, 811, 872, 928, 931, 1098, 1099, 1150, 1151, 1154], "235": [58, 59, 1098, 1099], "27": [58, 59, 108, 109, 407, 478, 481, 493, 496, 663, 666, 668, 671, 851, 871, 872, 928, 931, 1093, 1097, 1098, 1099, 1150, 1151, 1154], "22": [58, 59, 108, 109, 136, 407, 478, 481, 872, 888, 891, 928, 931, 1067, 1084, 1093, 1095, 1098, 1099, 1100, 1103, 1105, 1113, 1117, 1150, 1151, 1154], "float16": [58, 59, 108, 109, 129, 130, 137, 279, 319, 322, 327, 328, 371, 1098, 1099, 1100, 1103, 1104, 1105], "26": [58, 59, 108, 109, 407, 478, 481, 498, 501, 663, 666, 806, 808, 811, 851, 862, 865, 872, 888, 891, 928, 931, 960, 964, 1093, 1095, 1098, 1099, 1150, 1151, 1154], "49": [58, 59, 170, 191, 194, 407, 668, 671, 1098, 1099, 1150, 1151, 1154], "02": [58, 59, 90, 91, 108, 109, 433, 435, 694, 783, 786, 806, 808, 811, 1091, 1098, 1099, 1100, 1103, 1106], "95": [58, 59, 108, 109, 407, 653, 656, 806, 808, 811, 1091, 1098, 1099, 1100, 1101, 1103, 1105], "807": [58, 59, 1098, 1099], "21": [58, 59, 90, 91, 108, 109, 279, 330, 333, 407, 433, 435, 443, 445, 446, 447, 478, 481, 694, 714, 872, 888, 891, 928, 931, 985, 996, 999, 1093, 1095, 1098, 1099, 1100, 1150, 1151, 1154], "random_uniform": [58, 59, 108, 109, 129, 138, 146, 1091, 1107, 1195], "boundari": [58, 59, 108, 109, 1091, 1103, 1104, 1105, 1106, 1107], "86": [58, 59, 108, 109, 806, 808, 811, 1098, 1100, 1103, 1104, 1105], "89": [58, 59, 108, 109, 129, 279, 330, 333, 407, 478, 481, 872, 960, 964, 1098, 1100, 1103, 1104, 1150, 1175, 1178], "06": [58, 59, 90, 91, 129, 279, 319, 322, 418, 420, 422, 493, 495, 497, 806, 808, 811, 1103, 1104], "53": [58, 59, 90, 91, 372, 403, 518, 520, 1103, 1104], "random": [59, 75, 76, 109, 123, 138, 147, 158, 1092, 1093, 1096, 1098, 1101, 1103, 1106, 1108, 1109, 1111, 1195], "unique_al": [62, 63, 112, 113, 1118], "unique_count": [62, 63, 112, 113, 1118, 1125], "count": [62, 63, 68, 69, 112, 113, 118, 119, 127, 145, 372, 391, 872, 970, 974, 1001, 1019, 1022, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "field": [62, 63, 112, 113, 158, 872, 893, 896, 936, 939, 950, 954, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128], "uc": [62, 63, 1124, 1126], "unique_invers": [62, 63, 112, 113, 1118], "unique_valu": [62, 63, 112, 113, 1118], "argsort": [64, 65, 114, 115, 1139], "descend": [64, 65, 114, 115, 872, 950, 954, 955, 959, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149], "sort": [65, 72, 75, 76, 77, 78, 115, 123, 872, 893, 896, 950, 954, 955, 959, 1140, 1143, 1149], "einsum": [66, 67, 116, 117, 1150], "equat": [66, 67, 116, 117, 872, 945, 948, 1150, 1151, 1152, 1153, 1154], "var": [66, 67, 116, 117, 120, 121, 127, 142, 1063, 1064, 1065, 1150, 1180], "varianc": [66, 67, 116, 117, 1150, 1179, 1180, 1181, 1182, 1183], "x_i": [66, 67, 90, 91, 126, 170, 201, 205, 407, 408, 411, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 458, 461, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 543, 546, 547, 548, 551, 552, 553, 556, 557, 568, 571, 573, 576, 583, 586, 598, 601, 623, 626, 648, 651, 653, 656, 658, 661, 663, 666, 668, 671, 673, 676, 683, 687, 688, 689, 693, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "propag": [66, 67, 407, 473, 476, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1171, 1174, 1175, 1178, 1179, 1181, 1183], "By": [66, 67, 68, 69, 118, 119, 127, 130, 132, 136, 139, 146, 147, 694, 714, 715, 872, 970, 974, 1001, 1027, 1030, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "degre": [66, 67, 1150, 1171, 1174, 1179, 1181, 1183], "freedom": [66, 67, 133, 1150, 1171, 1174, 1179, 1181, 1183], "popul": [66, 67, 75, 76, 129, 137, 138, 142, 1091, 1092, 1150, 1171, 1174, 1179, 1181, 1183], "constitut": [66, 67, 132, 142, 1150, 1171, 1174, 1179, 1181, 1183], "unbias": [66, 67, 1150, 1179, 1181, 1183], "commonli": [66, 67, 132, 1150, 1171, 1174, 1179, 1181, 1183], "bessel": [66, 67, 1150, 1171, 1174, 1179, 1181, 1183], "singleton": [66, 67, 68, 69, 118, 119, 872, 975, 979, 1001, 1043, 1046, 1113, 1115, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "accordingli": [66, 67, 68, 69, 118, 119, 130, 140, 209, 243, 246, 407, 518, 521, 872, 975, 979, 1113, 1115, 1118, 1119, 1123, 1124, 1128, 1134, 1138, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "dimension": [66, 67, 68, 69, 75, 76, 100, 101, 116, 117, 118, 119, 209, 210, 211, 223, 224, 243, 246, 872, 878, 881, 883, 886, 905, 908, 918, 920, 921, 922, 928, 931, 933, 935, 970, 974, 975, 979, 1001, 1042, 1113, 1114, 1115, 1116, 1150, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "07472222": [66, 67, 1150, 1179, 1181, 1183], "statist": [67, 117, 120, 121, 123, 129, 137, 1151, 1154, 1155, 1158, 1159, 1162, 1163, 1166, 1167, 1170, 1171, 1174, 1175, 1178, 1179, 1183], "logic": [68, 69, 118, 119, 129, 134, 135, 137, 138, 144, 372, 389, 407, 593, 596, 598, 601, 603, 606, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "AND": [68, 69, 118, 119, 407, 453, 456, 593, 596, 1184, 1185, 1186, 1187, 1188, 1189], "rank": [68, 69, 100, 101, 118, 119, 209, 243, 246, 694, 804, 872, 878, 881, 918, 920, 921, 922, 936, 939, 945, 948, 965, 969, 970, 974, 975, 979, 1001, 1011, 1014, 1015, 1018, 1047, 1050, 1059, 1062, 1113, 1116, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "backward": [68, 69, 118, 119, 159, 407, 643, 646, 872, 970, 974, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "invalid": [68, 69, 118, 119, 130, 137, 140, 872, 970, 974, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "util": [69, 119, 123, 138, 372, 384, 1185, 1188, 1190, 1193], "add_ivy_array_instance_method": 70, "cl": [70, 71, 120, 121], "to_ignor": [70, 71, 120, 121, 1067, 1078], "loop": [70, 71, 120, 121, 133, 140, 159, 1063, 1064, 1065, 1066], "_wrap_funct": [70, 71, 120, 121, 132, 134], "toi": [70, 71, 120, 121], "arrayexampl": [70, 71], "hasattr": [70, 71, 120, 121, 125, 144], "dict_in": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "queue": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 145, 694, 771, 778], "queue_load_s": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "container_combine_method": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "list_join": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "print_limit": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "key_length_limit": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "print_ind": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "print_line_spac": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "ivyh": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "default_key_color": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "keyword_color_dict": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "rebuild_child_contain": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "types_to_iteratively_nest": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "alphabetical_kei": [72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "containerwithactiv": [72, 73, 77, 78], "containerwithcr": [72, 77, 78, 84], "containerwithdatatyp": [72, 77, 78, 86], "containerwithdevic": [72, 77, 78, 88], "containerwithelementwis": [72, 77, 78, 90, 136], "containerwithgener": [72, 77, 78, 92], "containerwithgradi": [72, 77, 78, 94], "containerwithimag": [72, 77, 78, 96], "containerwithlay": [72, 77, 78, 98], "containerwithlinearalgebra": [72, 77, 78, 100], "containerwithloss": [72, 77, 78, 102], "containerwithnorm": [72, 77, 78, 106], "containerwithrandom": [72, 77, 78, 108], "containerwithsearch": [72, 77, 78, 110], "containerwithset": [72, 77, 78, 112], "containerwithsort": [72, 77, 78, 114], "containerwithstatist": [72, 77, 78, 116], "containerwithutil": [72, 77, 78, 118], "represent": [72, 75, 76, 77, 78, 158, 208, 279, 284, 285, 319, 322, 330, 333, 372, 375, 376, 407, 408, 411, 423, 426, 453, 456, 468, 471, 478, 481, 608, 611, 618, 621, 694, 700, 792], "dictionari": [72, 75, 76, 77, 78, 145, 159, 372, 396], "asynchron": [72, 75, 76, 77, 78], "arriv": [72, 75, 76, 77, 78], "timeout": [72, 75, 76, 77, 78, 694, 771, 778], "whitespac": [72, 75, 76, 77, 78], "indent": [72, 75, 76, 77, 78, 145], "extra": [72, 75, 76, 77, 78, 127, 129, 130, 131, 134, 135, 142, 806, 817, 818], "newlin": [72, 75, 76, 77, 78, 126], "handl": [72, 75, 76, 77, 78, 122, 124, 129, 130, 131, 132, 134, 136, 137, 138, 139, 146, 206, 207, 372, 375, 376, 377, 378, 379, 382, 387, 391, 392, 403, 406, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1233, 1234, 1235, 1236, 1237, 1238], "color": [72, 75, 76, 77, 78, 1242, 1243], "map": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 124, 129, 132, 136, 145, 158, 159, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1067, 1074, 1075, 1079, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194, 1217, 1228], "termcolor": [72, 75, 76, 77, 78], "rebuild": [72, 75, 76, 77, 78], "constructor": [72, 75, 76, 77, 78, 137, 138, 144, 694, 701, 1239, 1240], "param": [72, 75, 76, 77, 78, 92, 93, 142, 147, 694, 700, 738, 741, 742, 743, 746, 747], "alphabet": [72, 75, 76, 77, 78], "preserv": [72, 75, 76, 77, 78, 129, 147, 159, 806, 842, 1001, 1019, 1022], "key_chain": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 286, 288, 290, 291, 293, 295, 296, 298, 300, 301, 303, 305, 308, 310, 313, 315, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 336, 338, 340, 341, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 813, 814, 816, 817, 819, 820, 821, 823, 824, 826, 828, 829, 830, 832, 833, 834, 836, 837, 838, 840, 844, 845, 847, 873, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 905, 907, 909, 911, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 953, 955, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1119, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1137, 1140, 1142, 1144, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "to_appli": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 286, 288, 290, 291, 293, 295, 296, 298, 300, 301, 303, 305, 308, 310, 313, 315, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 336, 338, 340, 341, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 813, 814, 816, 817, 819, 820, 821, 823, 824, 826, 828, 829, 830, 832, 833, 834, 836, 837, 838, 840, 844, 845, 847, 873, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 905, 907, 909, 911, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 953, 955, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1119, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1137, 1140, 1142, 1144, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "prune_unappli": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 286, 288, 290, 291, 293, 295, 296, 298, 300, 301, 303, 305, 308, 310, 313, 315, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 336, 338, 340, 341, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 813, 814, 816, 817, 819, 820, 821, 823, 824, 826, 828, 829, 830, 832, 833, 834, 836, 837, 838, 840, 844, 845, 847, 873, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 905, 907, 909, 911, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 953, 955, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1119, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1137, 1140, 1142, 1144, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "map_sequ": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 286, 288, 290, 291, 293, 295, 296, 298, 300, 301, 303, 305, 308, 310, 313, 315, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 336, 338, 340, 341, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 813, 814, 816, 817, 819, 820, 821, 823, 824, 826, 828, 829, 830, 832, 833, 834, 836, 837, 838, 840, 844, 845, 847, 873, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 909, 911, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 953, 955, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1043, 1045, 1051, 1053, 1055, 1057, 1059, 1061, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1119, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1137, 1140, 1142, 1144, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "static_arg_info": [72, 77, 78], "static_arg_nam": [72, 77, 78], "static_argmax": [72, 77, 78], "static_argmin": [72, 77, 78], "static_arrai": [72, 77, 78], "static_array_equ": [72, 77, 78], "static_arrays_equ": [72, 77, 78], "static_as_ivy_dev": [72, 77, 78], "static_as_ivy_dtyp": [72, 77, 78], "static_as_native_dev": [72, 77, 78], "static_as_native_dtyp": [72, 77, 78], "static_assert_supports_inplac": [72, 77, 78], "static_cache_fn": [72, 77, 78], "static_clear_mem_on_dev": [72, 77, 78], "static_clip_matrix_norm": [72, 77, 78], "static_closest_valid_dtyp": [72, 77, 78], "static_concat": [72, 77, 78], "static_constant_pad": [72, 77, 78], "static_container_typ": [72, 77, 78], "static_conv1d_transpos": [72, 77, 78], "static_conv2d": [72, 77, 78], "static_conv2d_transpos": [72, 77, 78], "static_conv3d": [72, 77, 78], "static_conv3d_transpos": [72, 77, 78], "static_copy_arrai": [72, 77, 78], "static_cumprod": [72, 77, 78], "static_cumsum": [72, 77, 78], "static_current_backend": [72, 77, 78], "static_current_backend_str": [72, 77, 78], "static_default": [72, 77, 78], "static_default_devic": [72, 77, 78], "static_default_dtyp": [72, 77, 78], "static_default_int_dtyp": [72, 77, 78], "static_default_uint_dtyp": [72, 77, 78], "static_dev_util": [72, 77, 78], "static_dropout": [72, 77, 78], "static_dtype_bit": [72, 77, 78], "static_eigh": [72, 77, 78], "static_eigvalsh": [72, 77, 78], "static_einsum": [72, 77, 78], "static_empti": [72, 77, 78], "static_exist": [72, 77, 78], "static_expand_dim": [72, 77, 78], "static_flip": [72, 77, 78], "static_floormod": [72, 77, 78], "static_fourier_encod": [72, 77, 78], "static_ful": [72, 77, 78], "static_function_supported_devic": [72, 77, 78], "static_function_supported_devices_and_dtyp": [72, 77, 78], "static_function_unsupported_devic": [72, 77, 78], "static_function_unsupported_devices_and_dtyp": [72, 77, 78], "static_get_all_arrays_in_memori": [72, 77, 78], "static_get_all_ivy_arrays_on_dev": [72, 77, 78], "static_get_array_mod": [72, 77, 78], "static_get_min_bas": [72, 77, 78], "static_get_min_denomin": [72, 77, 78], "static_get_nestable_mod": [72, 77, 78], "static_get_num_dim": [72, 77, 78], "static_get_referrers_recurs": [72, 77, 78], "static_gpu_is_avail": [72, 77, 78], "static_handle_nest": [72, 77, 78], "static_handle_out_argu": [72, 77, 78], "static_has_nan": [72, 77, 78], "static_indices_wher": [72, 77, 78], "static_infer_devic": [72, 77, 78], "static_infer_dtyp": [72, 77, 78], "static_inplace_arrays_support": [72, 77, 78], "static_inplace_decr": [72, 77, 78], "static_inplace_incr": [72, 77, 78], "static_inplace_upd": [72, 77, 78], "static_inplace_variables_support": [72, 77, 78], "static_inputs_to_native_arrai": [72, 77, 78], "static_invalid_dtyp": [72, 77, 78], "static_is_arrai": [72, 77, 78], "static_is_ivy_arrai": [72, 77, 78], "static_is_ivy_contain": [72, 77, 78], "static_is_native_arrai": [72, 77, 78], "static_linear": [72, 77, 78], "static_lstm_upd": [72, 77, 78], "static_match_kwarg": [72, 77, 78], "static_matmul": [72, 77, 78], "static_max": [72, 77, 78], "static_maximum": [72, 77, 78], "static_mean": [72, 77, 78], "static_min": [72, 77, 78], "static_multi_head_attent": [72, 77, 78], "static_multinomi": [72, 77, 78], "static_multiprocess": [72, 77, 78], "static_nonzero": [72, 77, 78], "static_num_arrays_in_memori": [72, 77, 78], "static_num_cpu_cor": [72, 77, 78], "static_num_gpu": [72, 77, 78], "static_num_ivy_arrays_on_dev": [72, 77, 78], "static_one_hot": [72, 77, 78], "static_outputs_to_ivy_arrai": [72, 77, 78], "static_percent_used_mem_on_dev": [72, 77, 78], "static_permute_dim": [72, 77, 78], "static_pinv": [72, 77, 78], "static_print_all_arrays_in_memori": [72, 77, 78], "static_print_all_ivy_arrays_on_dev": [72, 77, 78], "static_prod": [72, 77, 78], "static_promote_typ": [72, 77, 78], "static_queue_timeout": [72, 77, 78], "static_scaled_dot_product_attent": [72, 77, 78], "static_scatter_flat": [72, 77, 78], "static_scatter_nd": [72, 77, 78], "static_se": [72, 77, 78], "static_set_array_mod": [72, 77, 78], "static_set_default_devic": [72, 77, 78], "static_set_default_dtyp": [72, 77, 78], "static_set_default_float_dtyp": [72, 77, 78], "static_set_default_int_dtyp": [72, 77, 78], "static_set_default_uint_dtyp": [72, 77, 78], "static_set_min_bas": [72, 77, 78], "static_set_min_denomin": [72, 77, 78], "static_set_nestable_mod": [72, 77, 78], "static_set_queue_timeout": [72, 77, 78], "static_set_shape_array_mod": [72, 77, 78], "static_set_split_factor": [72, 77, 78], "static_set_tmp_dir": [72, 77, 78], "static_set_with_grad": [72, 77, 78], "static_shap": [72, 77, 78], "static_shape_array_mod": [72, 77, 78], "static_split": [72, 77, 78], "static_split_factor": [72, 77, 78], "static_split_func_cal": [72, 77, 78], "static_squeez": [72, 77, 78], "static_stable_pow": [72, 77, 78], "static_stack": [72, 77, 78], "static_std": [72, 77, 78], "static_stop_gradi": [72, 77, 78], "static_sum": [72, 77, 78], "static_supports_inplac": [72, 77, 78], "static_swapax": [72, 77, 78], "static_til": [72, 77, 78], "static_tmp_dir": [72, 77, 78], "static_to_ivi": [72, 77, 78, 79], "static_to_ivy_shap": [72, 77, 78], "static_to_list": [72, 77, 78], "static_to_n": [72, 77, 78, 79], "static_to_native_arrays_and_back": [72, 77, 78], "static_to_native_shap": [72, 77, 78], "static_to_scalar": [72, 77, 78], "static_total_mem_on_dev": [72, 77, 78], "static_tpu_is_avail": [72, 77, 78], "static_try_else_non": [72, 77, 78], "static_type_promote_arrai": [72, 77, 78], "static_unset_array_mod": [72, 77, 78], "static_unset_default_devic": [72, 77, 78], "static_unset_default_dtyp": [72, 77, 78], "static_unset_default_float_dtyp": [72, 77, 78], "static_unset_default_int_dtyp": [72, 77, 78], "static_unset_default_uint_dtyp": [72, 77, 78], "static_unset_nestable_mod": [72, 77, 78], "static_unset_shape_array_mod": [72, 77, 78], "static_unset_with_grad": [72, 77, 78], "static_unstack": [72, 77, 78], "static_used_mem_on_dev": [72, 77, 78], "static_valid_dtyp": [72, 77, 78], "static_value_is_nan": [72, 77, 78], "static_variable_data": [72, 77, 78], "static_wher": [72, 77, 78], "static_with_grad": [72, 77, 78], "static_zero_pad": [72, 77, 78], "containerbas": [73, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 136], "formul": [73, 74, 171, 173, 175], "chain": [73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 135, 136, 146, 147, 159, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1063, 1064, 1065, 1067, 1080, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194, 1239, 1240], "prune": [73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 232, 234, 236, 256, 258, 260, 274, 275, 277, 291, 293, 295, 301, 303, 305, 357, 359, 361, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 824, 826, 828, 844, 845, 847, 873, 875, 877, 918, 920, 922, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1032, 1034, 1036, 1037, 1039, 1041, 1067, 1080, 1081, 1082, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1124, 1125, 1127, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "unit": [73, 74, 128, 129, 159, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200], "slope": [73, 74, 170, 176, 178, 179, 180], "leaki": [73, 74, 170, 176, 178, 179, 180], "rectifi": [73, 74, 170, 176, 179, 181, 183, 184, 185], "static_gelu": [73, 74, 171], "static_leaky_relu": [73, 74, 176], "static_relu": [73, 74, 181], "static_sigmoid": [73, 74, 186], "static_softmax": [73, 74, 191], "static_softplu": [73, 74, 196], "static_tanh": [73, 74, 90, 91, 201], "96": [73, 74, 90, 91, 108, 109, 201, 202, 407, 488, 490, 491, 492, 683, 687, 806, 808, 811, 872, 928, 931, 1103, 1105, 1150, 1151, 1154], "995": [73, 74, 90, 91, 170, 201, 202, 204, 205, 407, 688], "9999": [73, 74, 90, 91, 201, 202], "__getitem__": [75, 76, 136], "queri": [75, 76, 136, 137, 144, 372, 384, 396, 851, 870, 871, 1217, 1228], "slice": [75, 76, 694, 738, 741, 743, 746, 1067, 1076], "__setitem__": [75, 76, 135, 136, 144], "val": [75, 76, 139, 144, 694, 758, 759, 760, 775, 776], "all_fals": [75, 76], "assert_is_bool": [75, 76], "entri": [75, 76, 209, 237, 238, 240, 241, 1001, 1042, 1067, 1080], "assert": [75, 76, 125, 129, 140, 144, 145, 694, 704], "all_key_chain": [75, 76], "include_empti": [75, 76], "all_tru": [75, 76, 136, 145], "arrays_as_list": [75, 76], "intermedi": [75, 76], "as_arrai": [75, 76, 694, 753, 781], "as_bool": [75, 76], "as_vari": [75, 76, 129, 131], "assert_contains_sub_contain": [75, 76], "sub_cont": [75, 76], "diff": [75, 76, 127, 136, 145], "screen": [75, 76, 145], "assert_contains_sub_structur": [75, 76], "check_shap": [75, 76], "assert_ident": [75, 76], "check_typ": [75, 76], "same_arrai": [75, 76, 145], "assert_identical_structur": [75, 76], "at_key_chain": [75, 76], "ignore_key_error": [75, 76], "ignore_non": [75, 76], "at_kei": [75, 76], "ignor": [75, 76, 79, 80, 81, 127, 129, 159, 209, 243, 246, 900, 904, 955, 956, 1067, 1078, 1233, 1237], "substr": [75, 76], "clip_min": [75, 76], "clip_max": [75, 76], "config": [75, 76, 145, 1067, 1080], "duplic": [75, 76, 126, 133, 134, 140, 144, 146], "container_rightmost": [75, 76], "common_key_chain": [75, 76, 136], "contains_sub_contain": [75, 76], "match": [75, 76, 127, 136, 279, 286, 289, 407, 643, 646, 694, 766], "contains_sub_structur": [75, 76], "create_if_abs": [75, 76], "inplac": [75, 76, 94, 95, 122, 124, 127, 134, 135, 144, 146, 694, 704, 757, 760, 761, 789, 806, 813, 814, 815, 816, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 1206, 1207, 1233, 1234, 1235, 1236, 1237, 1238], "cutoff_at_depth": [75, 76], "depth_cutoff": [75, 76], "cutoff_at_height": [75, 76], "height_cutoff": [75, 76], "deep_copi": [75, 76, 145], "intern": [75, 76, 126, 129, 135, 136, 138, 139, 806, 849, 1067, 1068, 1077, 1078, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1239, 1240], "belong": [75, 76, 146], "dev_clon": [75, 76], "dev_dist": [75, 76], "dev_str": [75, 76], "diff_kei": [75, 76], "detect_key_diff": [75, 76], "detect_value_diff": [75, 76], "detect_shape_diff": [75, 76], "treat": [75, 76, 129, 143, 147, 206, 207], "container0": [75, 76], "find_sub_contain": [75, 76], "sub_cont_to_find": [75, 76], "exsit": [75, 76], "find_sub_structur": [75, 76], "sub_struc_to_find": [75, 76], "flatten_key_chain": [75, 76, 145, 1229, 1230], "__": [75, 76, 127, 145], "above_height": [75, 76, 145], "below_depth": [75, 76, 145], "format_key_chain": [75, 76], "format_fn": [75, 76], "string": [75, 76, 133, 137, 138, 140, 142, 145, 279, 284, 285, 313, 316, 335, 371, 372, 375, 376, 377, 378, 384, 392, 398, 402, 403, 406, 694, 716], "from_disk_as_hdf5": [75, 76, 145], "h5_obj_or_filepath": [75, 76], "slice_obj": [75, 76], "load": [75, 76, 159], "disk": [75, 76, 145], "h5py": [75, 76], "hdf5": [75, 76, 145, 1229, 1230], "h5": [75, 76], "from_disk_as_json": [75, 76, 145], "json_filepath": [75, 76], "json": [75, 76, 145], "from_disk_as_pickl": [75, 76, 145], "pickle_filepath": [75, 76], "pickl": [75, 76, 136, 145], "from_flat_list": [75, 76], "flat_list": [75, 76], "hierarchi": [75, 76, 145], "flat": [75, 76, 694, 772, 1001, 1027, 1030], "from_numpi": [75, 76, 145], "h5_file_s": [75, 76], "batch": [75, 76, 132, 136, 145, 372, 395, 396, 694, 735, 851, 868, 872, 975, 979, 1063, 1064, 1065, 1066, 1085, 1086, 1089, 1231, 1232], "handle_inplac": [75, 76], "prime": [75, 76], "overwritten": [75, 76, 133, 135], "has_kei": [75, 76], "query_kei": [75, 76], "somewher": [75, 76], "has_key_chain": [75, 76], "include_inf": [75, 76, 694, 755, 805], "leafwis": [75, 76], "well": [75, 76, 129, 130, 139, 146, 147, 158, 694, 755, 872, 945, 948], "identical_array_shap": [75, 76], "identical_config": [75, 76], "identical_structur": [75, 76], "if_exist": [75, 76], "key_chains_contain": [75, 76], "sub_str": [75, 76], "join": [75, 76, 1001, 1007, 1010, 1047, 1050, 1195], "list_stack": [75, 76, 145], "dim": [75, 76, 130, 131, 137, 694, 769, 1217, 1228], "func": [75, 76, 94, 95, 136, 206, 207, 372, 397, 694, 705, 806, 817, 818, 819, 1067, 1080], "map_cont": [75, 76], "include_self": [75, 76], "possibi": [75, 76], "max_depth": [75, 76, 694, 754, 1067, 1079], "multi_map": [75, 76, 136], "map_nest": [75, 76, 100, 101, 104, 105, 905, 907, 1007, 1009, 1047, 1049], "leftmost": [75, 76, 1067, 1080], "multi_map_in_static_method": [75, 76, 136], "fn_name": [75, 76, 131], "num_arrai": [75, 76, 129], "overwrite_at_key_chain": [75, 76], "target_dict": [75, 76], "return_dict": [75, 76], "prune_empti": [75, 76], "keep_non": [75, 76], "prune_key_chain": [75, 76], "key1": [75, 76, 146], "key2": [75, 76], "key3": [75, 76], "prune_key_from_key_chain": [75, 76], "prune_kei": [75, 76], "prune_keys_from_key_chain": [75, 76], "remove_key_length_limit": [75, 76], "remove_print_limit": [75, 76], "reshape_lik": [75, 76], "leading_shap": [75, 76], "return_cont": [75, 76], "restructur": [75, 76], "keep_orig": [75, 76], "transpos": [75, 76, 144, 147, 851, 857, 859, 861, 872, 923, 926, 933, 935, 1195, 1217, 1219, 1221, 1223], "restructure_key_chain": [75, 76], "keychain_map": [75, 76], "set_at_key_chain": [75, 76], "set_at_kei": [75, 76], "set_framework": [75, 76, 142, 144, 145, 147], "set_ivy_backend": [75, 76], "ivy_backend": [75, 76], "attribut": [75, 76, 125, 126, 130, 134, 136, 137, 143, 144, 145, 146, 279, 319, 322, 324, 325, 327, 328, 330, 333, 372, 385, 386, 393, 694, 736, 737], "show_sub_contain": [75, 76], "sub_cont_or_keychain": [75, 76], "seed_valu": [75, 76, 1091, 1108], "shuffle_h5_fil": [75, 76], "dataset": [75, 76, 145, 157, 1195], "size_ordered_arrai": [75, 76], "keychain": [75, 76], "smallest": [75, 76, 279, 319, 322, 330, 333, 407, 483, 486], "largest": [75, 76, 158, 279, 319, 322, 330, 333, 872, 950, 954], "slice_kei": [75, 76], "key_slic": [75, 76], "all_depth": [75, 76], "slice_via_kei": [75, 76], "sort_by_kei": [75, 76], "num_or_size_split": [75, 76, 142, 1001, 1042], "with_remaind": [75, 76, 1001, 1042], "constitu": [75, 76, 147], "evenli": [75, 76, 209, 210, 211, 237, 238, 240, 241, 1001, 1042], "preserve_typ": [75, 76, 806, 842], "stop": [75, 76, 84, 85, 142, 159, 209, 210, 211, 212, 237, 238, 239, 240, 241, 242, 372, 374, 397, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 842, 1063, 1064, 1065, 1066, 1233, 1234, 1235, 1236, 1237, 1238], "structural_diff": [75, 76], "target": [75, 76, 122, 141, 145, 146, 147, 372, 377, 1195], "to_dict": [75, 76], "to_disk_as_hdf5": [75, 76, 145], "starting_index": [75, 76], "max_batch_s": [75, 76], "later": [75, 76, 129, 694, 705], "to_disk_as_json": [75, 76, 145], "to_disk_as_pickl": [75, 76, 145], "to_flat_list": [75, 76], "to_iter": [75, 76, 136], "leaf_keys_onli": [75, 76], "to_iterator_kei": [75, 76], "to_iterator_valu": [75, 76], "to_json": [75, 76], "update_backend": [75, 76], "to_raw": [75, 76], "raw": [75, 76, 126], "trim_kei": [75, 76], "max_length": [75, 76], "try_kc": [75, 76], "tri": [75, 76], "concatten": [75, 76, 100, 101, 372, 397], "dim_siz": [75, 76], "update_config": [75, 76], "global_norm": [75, 76, 100, 101], "with_default_key_color": [75, 76], "with_entries_as_list": [75, 76], "with_ivy_backend": [75, 76], "with_key_length_limit": [75, 76, 145], "with_print_ind": [75, 76, 145], "with_print_limit": [75, 76, 145], "with_print_line_spac": [75, 76], "staticmethod": [79, 80, 81, 900, 904, 955, 956], "implicit": [79, 80, 81, 126, 129, 136, 142, 900, 904, 955, 956], "idiom": [79, 80, 81, 900, 904, 955, 956], "arg1": [79, 80, 81, 900, 904, 955, 956], "arg2": [79, 80, 81, 900, 904, 955, 956], "neither": [79, 80, 81, 142, 407, 423, 426, 618, 621, 806, 841, 850, 900, 904, 955, 956], "implicitli": [79, 80, 81, 136, 900, 904, 955, 956], "java": [79, 80, 81, 900, 904, 955, 956], "concept": [79, 80, 81, 900, 904, 955, 956], "classmethod": [79, 80, 81, 900, 904, 955, 956], "2324": [84, 85, 209, 232, 234, 235, 236], "234": [84, 85, 209, 232, 234, 235, 236], "123": [84, 85, 129, 209, 232, 234, 235, 236, 694, 733], "static_arang": [84, 85, 210], "static_asarrai": [84, 85, 213], "static_empty_lik": [84, 85, 218], "static_ey": [84, 85, 223], "n_row": [84, 85, 209, 223, 224, 225], "n_col": [84, 85, 209, 223, 224, 225], "static_from_dlpack": [84, 85, 226], "static_full_lik": [84, 85, 232], "static_linspac": [84, 85, 237], "num": [84, 85, 142, 209, 237, 238, 239, 240, 241, 242], "endpoint": [84, 85, 209, 237, 238, 239, 240, 242], "static_logspac": [84, 85, 240], "static_meshgrid": [84, 85, 243], "static_native_arrai": [84, 85, 248], "static_on": [84, 85, 253], "static_ones_lik": [84, 85, 256], "static_tril": [84, 85, 261], "static_triu": [84, 85, 266], "static_zero": [84, 85, 271], "static_zeros_lik": [84, 85, 274], "broadcats": [86, 87, 291, 293], "static_astyp": [86, 87, 286], "static_broadcast_arrai": [86, 87, 291], "And": [86, 87, 291, 295], "static_broadcast_to": [86, 87, 296], "static_can_cast": [86, 87, 301], "from_": [86, 87, 279, 301, 304, 305], "static_default_float_dtyp": [86, 87, 308], "float_dtyp": [86, 87, 279, 308, 309, 310, 363], "static_dtyp": [86, 87, 313], "static_finfo": [86, 87, 319], "static_function_supported_dtyp": [86, 87, 324], "fn": [86, 87, 125, 142, 144, 160, 161, 162, 163, 164, 165, 166, 167, 168, 279, 324, 325, 326, 327, 328, 329, 372, 385, 386, 694, 700, 736, 737, 800, 1067, 1068, 1073, 1074, 1075, 1077, 1078, 1079, 1198, 1200], "static_function_unsupported_dtyp": [86, 87, 327], "static_iinfo": [86, 87, 330], "static_is_bool_dtyp": [86, 87, 336], "dtype_in": [86, 87, 279, 284, 285, 318, 335, 336, 339, 340, 341, 344, 345, 346, 349, 350, 351, 354, 355, 371], "static_is_float_dtyp": [86, 87, 341], "static_is_int_dtyp": [86, 87, 346], "static_is_uint_dtyp": [86, 87, 351], "static_result_typ": [86, 87, 357], "static_dev": [88, 89, 379], "static_to_devic": [88, 89, 398], "61": [90, 91, 102, 103, 108, 109, 407, 433, 435, 673, 676, 851, 862, 865, 985, 986, 988, 989, 990, 996, 998, 1000, 1103, 1105], "41": [90, 91, 92, 93, 100, 101, 144, 407, 438, 440, 441, 442, 478, 481, 668, 671, 694, 707, 710, 711, 872, 873, 875, 876, 877, 1091, 1103, 1106, 1150, 1175, 1178], "915": [90, 91, 407, 443, 445, 446, 447], "29": [90, 91, 108, 109, 407, 443, 445, 446, 447, 1093, 1095, 1098, 1100, 1103, 1105, 1107], "983": [90, 91, 407, 443, 445, 446, 447], "75": [90, 91, 92, 93, 98, 99, 108, 109, 407, 433, 436, 437, 443, 445, 446, 447, 498, 501, 783, 785, 852, 854, 856, 872, 900, 903, 928, 931, 1091, 1098, 1102, 1103, 1106], "35": [90, 91, 108, 109, 407, 443, 445, 446, 447, 668, 671, 851, 871, 872, 878, 881, 1098, 1100, 1102, 1103, 1107, 1113, 1117, 1150, 1151, 1154], "978": [90, 91, 170, 186, 189, 407, 443, 445, 446, 447], "696": [90, 91, 108, 109, 407, 443, 445, 446, 447, 1098, 1100], "993": [90, 91, 407, 443, 445, 446, 447], "203": [90, 91, 448, 450, 452], "34": [90, 91, 108, 109, 279, 330, 333, 407, 478, 481, 493, 495, 497, 663, 665, 667, 668, 671, 1091, 1093, 1097, 1098, 1100, 1103, 1106], "52": [90, 91, 108, 109, 407, 443, 446, 493, 495, 497, 498, 500, 501, 502, 806, 808, 811, 872, 928, 931, 1103, 1105, 1118, 1119, 1123, 1150, 1151, 1154], "333": [90, 91, 407, 498, 500, 501, 502, 694, 707, 710, 851, 862, 865], "thefunct": [90, 91, 508, 510, 518, 522, 523, 527], "649": [90, 91, 518, 520], "220": [90, 91, 518, 520], "959": [90, 91, 407, 518, 520, 658, 660, 661, 662], "865": [90, 91, 518, 520], "metho": [90, 91, 538, 540, 583, 585], "898": [90, 91, 407, 573, 575, 576, 577], "0414": [90, 91, 407, 573, 575, 576, 577], "threshold": [90, 91, 407, 613, 614, 615, 616, 617], "300": [90, 91, 129, 407, 648, 650, 651, 652], "527": [90, 91, 407, 648, 650, 651, 652], "301": [90, 91, 407, 648, 650, 651, 652], "757": [90, 91, 407, 658, 660, 661, 662], "279": [90, 91, 407, 658, 660, 661, 662], "835": [90, 91, 663, 665, 667], "347": [90, 91, 663, 665, 667], "721": [90, 91, 663, 665, 667], "static_ab": [90, 91, 408], "static_aco": [90, 91, 413], "static_acosh": [90, 91, 418], "static_add": [90, 91, 126, 127, 136, 423], "static_asin": [90, 91, 428], "static_asinh": [90, 91, 433], "97": [90, 91, 108, 109, 407, 433, 436, 437, 1098, 1100], "static_atan": [90, 91, 438], "static_atan2": [90, 91, 443], "static_atanh": [90, 91, 448], "static_bitwise_and": [90, 91, 453], "static_bitwise_invert": [90, 91, 458], "static_bitwise_left_shift": [90, 91, 463], "static_bitwise_or": [90, 91, 468], "static_bitwise_right_shift": [90, 91, 473], "static_bitwise_xor": [90, 91, 478], "static_ceil": [90, 91, 483], "static_co": [90, 91, 488], "static_cosh": [90, 91, 493], "static_divid": [90, 91, 136, 498], "static_equ": [90, 91, 503], "static_erf": [90, 91, 508], "static_exp": [90, 91, 513], "static_expm1": [90, 91, 407, 518, 521], "areal": [90, 91, 518, 522], "static_floor": [90, 91, 523], "static_floor_divid": [90, 91, 528], "static_great": [90, 91, 533], "static_greater_equ": [90, 91, 538], "static_isfinit": [90, 91, 543], "static_isinf": [90, 91, 407, 548, 551], "static_isnan": [90, 91, 407, 553, 556], "static_less": [90, 91, 558], "static_less_equ": [90, 91, 563], "static_log": [90, 91, 568], "static_log10": [90, 91, 573], "static_log1p": [90, 91, 578], "static_log2": [90, 91, 583], "static_logaddexp": [90, 91, 588], "static_logical_and": [90, 91, 593], "static_logical_not": [90, 91, 598], "static_logical_or": [90, 91, 603], "static_logical_xor": [90, 91, 608], "static_minimum": [90, 91, 614], "static_multipli": [90, 91, 136, 618], "static_neg": [90, 91, 623], "static_not_equ": [90, 91, 628], "static_posit": [90, 91, 633], "static_pow": [90, 91, 638], "static_remaind": [90, 91, 643], "static_round": [90, 91, 648], "thevfunct": [90, 91, 648, 652], "static_sign": [90, 91, 653], "static_sin": [90, 91, 658], "static_sinh": [90, 91, 663], "static_sqrt": [90, 91, 668], "static_squar": [90, 91, 673], "static_subtract": [90, 91, 136, 678], "static_tan": [90, 91, 127, 136, 683], "143": [90, 91, 127, 407, 683, 684, 686, 687], "38": [90, 91, 108, 109, 127, 279, 319, 322, 407, 683, 684, 686, 687, 1103, 1107], "static_trunc": [90, 91, 689], "static_all_equ": [92, 93, 695, 697], "667": [92, 93, 407, 498, 501, 694, 707, 709, 783, 785, 786, 1118, 1119, 1123], "833": [92, 93, 707, 709], "static_clip_vector_norm": [92, 93, 707], "849": [92, 93, 694, 707, 710, 711], "static_einops_rearrang": [92, 93, 718], "static_einops_reduc": [92, 93, 723], "static_einops_repeat": [92, 93, 728], "static_gath": [92, 93, 738], "static_gather_nd": [92, 93, 743], "static_stable_divid": [92, 93, 783], "30": [92, 93, 108, 109, 407, 648, 651, 694, 783, 786, 787, 872, 928, 931, 1093, 1095, 1098, 1100, 1102, 1150, 1151, 1154, 1208, 1214], "40": [92, 93, 108, 109, 407, 493, 496, 668, 671, 694, 783, 786, 787, 872, 928, 931, 1098, 1100, 1150, 1151, 1154], "50": [92, 93, 407, 668, 671, 694, 783, 786, 787, 872, 928, 931, 1113, 1116, 1150, 1151, 1154], "22222222": [92, 93, 783, 787], "11111111": [92, 93, 783, 787], "857": [92, 93, 694, 783, 786, 787, 1118, 1119, 1123], "444": [92, 93, 783, 787], "static_to_numpi": [92, 93, 794, 797], "lr": [94, 95, 145, 146, 806, 813, 814, 815, 816, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 1233, 1234, 1235, 1236, 1237, 1238], "mw_tm1": [94, 95, 806, 813, 814, 815, 816, 829, 830, 831, 832], "vw_tm1": [94, 95, 806, 813, 814, 815, 816, 829, 830, 831, 832], "max_trust_ratio": [94, 95, 806, 829, 830, 831, 832, 1233, 1235], "decay_lambda": [94, 95, 806, 829, 830, 831, 832, 833, 834, 835, 836, 1233, 1235, 1236], "effective_grad": [94, 95, 806, 837, 838, 839, 840], "static_adam_step": [94, 95, 808], "87": [94, 95, 806, 808, 811, 812], "976": [94, 95, 170, 201, 205, 407, 688, 806, 808, 811, 812], "static_adam_upd": [94, 95, 813], "static_execute_with_gradi": [94, 95, 817], "retain_grad": [94, 95, 136, 806, 817, 818, 819], "static_gradient_descent_upd": [94, 95, 820], "static_is_vari": [94, 95, 824], "static_lamb_upd": [94, 95, 829], "static_lars_upd": [94, 95, 833], "static_optimizer_upd": [94, 95, 837], "static_vari": [94, 95, 844], "inp": [98, 99, 851, 862, 864, 865, 866], "static_conv1d": [98, 99, 852], "static_depthwise_conv2d": [98, 99, 862], "73": [100, 101, 129, 407, 668, 671, 872, 873, 875, 876, 877, 1085, 1086, 1089, 1091, 1098, 1101], "577": [100, 101, 872, 873, 875, 876, 877], "707": [100, 101, 872, 873, 875, 876, 877], "liter": [100, 101, 140, 872, 975, 979], "nuc": [100, 101], "singular": [100, 101, 872, 918, 920, 921, 922, 933, 935, 950, 954, 955, 959], "toler": [100, 101, 131, 872, 918, 920, 921, 922, 933, 935], "largest_singular_valu": [100, 101, 872, 918, 920, 921, 922, 933, 935], "equival": [100, 101, 139, 145, 147, 209, 210, 211, 407, 473, 476, 598, 601, 603, 606, 643, 646, 872, 918, 920, 921, 922, 933, 935, 945, 948, 975, 979], "ep": [100, 101, 279, 319, 322, 872, 918, 920, 921, 922, 933, 935], "static_choleski": [100, 101, 873], "static_rol": [100, 101, 104, 105, 127, 136, 873, 877, 1002, 1006, 1037], "static_cross": [100, 101, 878], "static_det": [100, 101, 883], "static_diagon": [100, 101, 888], "static_inv": [100, 101, 900], "static_matrix_norm": [100, 101, 909], "static_matrix_pow": [100, 101, 914], "static_matrix_rank": [100, 101, 918], "ref": [100, 101, 126, 407, 473, 476, 558, 561, 618, 621, 628, 631, 643, 646, 678, 682, 918, 922, 1001, 1047, 1050], "static_matrix_transpos": [100, 101, 923], "static_out": [100, 101, 928], "static_qr": [100, 101, 936], "static_slogdet": [100, 101, 941], "static_solv": [100, 101, 945], "static_svd": [100, 101, 950], "static_svdv": [100, 101, 955], "static_tensordot": [100, 101, 960], "static_trac": [100, 101, 965], "static_vecdot": [100, 101, 970], "static_vector_norm": [100, 101, 975], "static_vector_to_skew_symmetric_matrix": [100, 101, 980], "511": [102, 103, 985, 986, 988, 989, 990, 996, 998, 1000], "5108256": [102, 103, 991, 993], "609438": [102, 103, 991, 993], "static_binary_cross_entropi": [102, 103, 986], "static_cross_entropi": [102, 103, 991], "20397282": [102, 103, 991, 995], "83258148": [102, 103, 991, 995], "60943794": [102, 103, 991, 995], "static_sparse_cross_entropi": [102, 103, 996], "static_clip": [104, 105, 1002], "static_repeat": [104, 105, 1027], "static_reshap": [104, 105, 1032], "658": [106, 107, 1085, 1086, 1088, 1089, 1090], "04": [106, 107, 279, 319, 322, 407, 518, 521, 851, 871, 1085, 1086, 1088, 1089, 1090], "759": [106, 107, 1085, 1086, 1088, 1089, 1090], "403": [106, 107, 1086, 1088, 1090], "62": [106, 107, 108, 109, 407, 663, 666, 1086, 1088, 1090, 1091, 1093, 1095, 1103, 1106], "static_layer_norm": [106, 107, 1086], "28": [108, 109, 806, 808, 811, 851, 858, 861, 862, 865, 872, 928, 931, 1093, 1095, 1098, 1100, 1103, 1105, 1150, 1151, 1154], "102": [108, 109, 1093, 1095], "60": [108, 109, 694, 714, 783, 786, 872, 928, 931, 1093, 1095, 1150, 1151, 1154], "431": [108, 109, 1098, 1100], "55": [108, 109, 851, 861, 872, 928, 931, 955, 959, 1091, 1098, 1100, 1101, 1103, 1105, 1150, 1151, 1154], "31": [108, 109, 407, 668, 671, 872, 955, 959, 1098, 1100, 1103, 1105], "68": [108, 109, 407, 433, 436, 443, 446, 1085, 1086, 1089, 1098, 1100, 1103, 1105], "93": [108, 109, 372, 384, 407, 668, 671, 1098, 1100, 1103, 1105], "83": [108, 109, 407, 668, 671, 1098, 1100], "84": [108, 109, 279, 330, 333, 372, 384, 872, 928, 931, 1098, 1100, 1103, 1105, 1150, 1151, 1154], "274": [108, 109, 1098, 1100], "08": [108, 109, 129, 407, 433, 436, 518, 521, 851, 871, 1098, 1100, 1103, 1105], "09": [108, 109, 407, 673, 676, 851, 871, 1098, 1100], "92": [108, 109, 872, 883, 886, 1098, 1100, 1103, 1105], "91": [108, 109, 407, 478, 481, 872, 928, 931, 1091, 1098, 1100, 1101, 1150, 1151, 1154], "65": [108, 109, 806, 808, 811, 872, 928, 931, 1098, 1100, 1103, 1105, 1150, 1151, 1154], "43": [108, 109, 1091, 1098, 1100, 1101, 1103, 1105, 1106, 1113, 1117], "88": [108, 109, 170, 176, 179, 407, 478, 481, 872, 928, 931, 955, 959, 1091, 1103, 1105, 1106, 1150, 1151, 1154], "static_randint": [108, 109, 1093], "static_random_norm": [108, 109, 1098], "651": [108, 109, 1098, 1102], "static_random_uniform": [108, 109, 1103], "481": [108, 109, 1103, 1107], "74": [108, 109, 407, 478, 481, 1103, 1107], "0999": [108, 109, 1103, 1107], "static_shuffl": [108, 109, 1109], "static_unique_al": [112, 113, 1119], "static_unique_count": [112, 113, 1124], "classivi": [112, 113, 1001, 1042, 1118, 1124, 1125, 1127, 1128], "static_unique_invers": [112, 113, 1129], "static_unique_valu": [112, 113, 1134], "static_argsort": [114, 115, 1140], "static_sort": [114, 115, 1145], "static_var": [116, 117, 1179], "12666667": [116, 117, 1150, 1179, 1180, 1182, 1183], "11555555": [116, 117, 1150, 1179, 1180, 1182, 1183], "arraycontain": [116, 117, 1179, 1182], "static_al": [118, 119, 1185], "static_ani": [118, 119, 1190], "add_ivy_container_instance_method": 120, "containerexampl": [120, 121], "who": [122, 141, 159], "mainli": [122, 143, 145], "under": [122, 126, 127, 128, 129, 130, 132, 136, 141, 142, 145, 147, 159], "hood": [122, 127, 129, 132, 136, 141, 142, 145, 147], "weed": [122, 141], "behind": [122, 129, 141, 143, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839], "tour": 122, "primari": [122, 129, 133, 139, 159], "composit": [122, 129, 131, 133, 135, 136, 139, 142, 146, 147, 159], "nestabl": [122, 126, 127, 129, 139, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 483, 486, 518, 521, 523, 526, 548, 551, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 888, 891, 1001, 1037, 1040, 1085, 1086, 1089, 1118, 1124, 1128, 1150, 1155, 1158, 1184, 1185, 1188], "dynam": [122, 137, 138, 139, 142, 206, 207], "runtim": [122, 129, 372], "helper": [122, 131, 145], "borrow": 122, "frontend": [122, 143], "taken": [123, 140, 147, 872, 888, 891], "compil": [123, 136, 141, 143, 159, 1195, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238], "meta": [123, 135, 1064, 1065, 1066], "overlap": 123, "judgement": 123, "some_namespac": 123, "some_backend": 123, "another_backend": 123, "break": [123, 124, 140, 144, 159, 1195], "anyth": [123, 129, 1195], "refactor": 123, "ongo": 123, "file_nam": [123, 129], "my_func": [123, 127], "my": 123, "cooler": 123, "produc": [123, 129, 851, 871], "something_cool": 123, "category_nam": [124, 126, 132, 137, 138], "backend_nam": [124, 126, 132, 133, 134, 137, 138], "adress": 124, "conveni": [124, 131, 137, 138, 143, 145, 146], "revisit": [124, 147], "dedic": [124, 144, 146, 806, 849, 1206, 1207], "four": [124, 127, 132, 137, 145], "tf": [124, 125, 130, 135, 137, 138, 139, 142, 147, 159, 1195], "jnp": [124, 125, 137, 138, 139, 147, 1195], "jaxarrai": [124, 125, 137, 138, 139], "wherea": [124, 127, 129, 132, 135, 137, 138, 147], "__sub__": [124, 127, 135, 136, 144], "__mul__": [124, 127, 135, 136, 144], "__div__": 124, "permit": [124, 129, 135], "dicat": 124, "addition": [124, 136, 139], "omit": [124, 139, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "wrapper": [124, 134, 135, 136, 137, 139, 144], "contrast": [124, 126], "futher": 124, "absenc": [124, 136], "pep": 124, "484": 124, "annot": [124, 140], "dictat": [124, 127, 135, 139], "brittl": 124, "intend": [124, 1150, 1175, 1178], "subset": [124, 126, 129, 142], "freeli": 124, "extend": [124, 126, 133, 159], "consum": [124, 129, 131, 136], "inde": [124, 159], "flexibl": 124, "technic": [124, 136, 139, 159], "original_typ": 124, "cumbersom": 124, "readabl": [124, 125, 135, 136, 144, 145], "clean": [125, 140, 142, 143, 145], "_assert_fill_value_and_dtype_are_compat": 125, "isinst": [125, 146, 147, 694, 792], "_to_devic": 125, "experiment": 125, "_is_valid_dtypes_attribut": 125, "supported_dtyp": 125, "unsupported_dtyp": [125, 130, 137], "fn_supported_dtyp": 125, "fn_unsupported_dtyp": 125, "backend_str": 125, "account": 126, "instanti": 126, "firstli": [126, 127, 132, 134, 135, 137, 139, 145], "templat": [126, 129, 1195], "spec": [126, 127], "api_specif": [126, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158], "array_api": 126, "preview": 126, "render": 126, "incorrectli": [126, 140], "onlin": [126, 127, 1195], "domain": [126, 170, 201, 205, 407, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 443, 446, 488, 491, 493, 496, 513, 516, 518, 521, 568, 571, 573, 576, 583, 586, 658, 661, 663, 666, 668, 671, 683, 687, 688], "codomain": [126, 170, 201, 205, 407, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 443, 446, 488, 491, 493, 496, 513, 516, 518, 521, 568, 571, 573, 576, 583, 586, 658, 661, 663, 666, 668, 671, 683, 687, 688], "assum": [126, 129, 131, 133, 137, 144, 145, 159, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 488, 491, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1089, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188], "operand": [126, 130, 170, 201, 205, 407, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 478, 481, 483, 486, 488, 491, 493, 496, 513, 516, 518, 521, 523, 526, 568, 571, 573, 576, 583, 586, 588, 591, 618, 621, 638, 641, 643, 646, 648, 651, 658, 661, 663, 666, 668, 671, 683, 687, 688, 689, 693, 1150, 1151, 1154, 1155, 1158, 1163, 1166, 1175, 1178], "But": [126, 134, 136, 147], "needless": 126, "info": [126, 1195], "renam": 126, "conform": [126, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 563, 566, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 872, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188], "org": [126, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 319, 322, 330, 333, 357, 360, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 806, 808, 811, 813, 815, 872, 888, 891, 1001, 1015, 1018, 1037, 1040, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158], "elementwise_funct": [126, 407, 408, 411, 428, 431, 433, 436, 443, 446, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 658, 661, 668, 671, 673, 676, 872, 888, 891, 1001, 1037, 1040, 1118, 1119, 1123, 1139, 1140, 1143, 1150, 1155, 1158], "descript": [126, 129, 136, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 975, 979, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1089, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158, 1184, 1185, 1188], "simplic": [126, 146, 158, 170, 201, 205, 209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 240, 241, 243, 246, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278, 279, 301, 304, 336, 339, 346, 349, 407, 408, 411, 423, 426, 428, 431, 433, 436, 443, 446, 453, 456, 478, 481, 483, 486, 493, 496, 518, 521, 523, 526, 548, 551, 553, 556, 573, 576, 613, 614, 616, 628, 631, 648, 651, 653, 656, 658, 661, 668, 671, 673, 676, 683, 687, 688, 694, 738, 741, 851, 858, 862, 865, 871, 872, 873, 876, 883, 886, 888, 891, 1001, 1015, 1018, 1019, 1022, 1037, 1040, 1085, 1086, 1089, 1118, 1119, 1123, 1124, 1128, 1139, 1140, 1143, 1150, 1155, 1158], "judgment": 126, "beyond": [126, 1001, 1037, 1040], "func_nam": [126, 127, 132], "pure": [126, 144, 147, 159], "themselv": [126, 132, 136, 137, 138, 146, 1067, 1068], "operator_nam": 126, "succinct": 126, "contstructor": 126, "though": [126, 132, 137, 145, 159], "forward": [126, 129, 147, 158, 159, 1229, 1230, 1233, 1237], "_forward": [126, 142, 145, 146, 1195], "former": 126, "explicitli": [126, 132, 133, 134, 135, 136, 139, 142, 159, 872, 893, 896, 1217, 1226, 1228, 1229, 1230], "latter": [126, 133], "docst": 126, "eight": 127, "static_": 127, "op_nam": 127, "__r": 127, "__truediv__": [127, 135, 136], "recap": [127, 136, 146], "independ": [127, 128, 134, 136, 142, 147, 872, 878, 881, 945, 948, 1091, 1092], "combinatorili": 127, "variat": [127, 129], "grid": [127, 129, 158, 209, 243, 246], "vari": [127, 129, 136, 144, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "unus": [127, 139, 140, 206, 207], "excess": [127, 133, 144], "okai": [127, 142], "showcas": [127, 158], "demonstr": [127, 144], "replic": [127, 137], "meant": 127, "imaginari": 127, "some_flag": 127, "another_flag": 127, "jointli": 127, "three": [127, 129, 130, 136, 141, 209, 243, 246, 1195], "x0": [127, 694, 702], "procedur": 127, "sens": [127, 136, 144], "5574077": 127, "1850398": 127, "5463025": 127, "8422884": 127, "91601413": 127, "9647598": 127, "3738229": 127, "1597457": 127, "0963247": 127, "9955841": 127, "3278579": 127, "multi": [127, 136, 141, 159, 851, 870, 872, 878, 881, 1195, 1201, 1217, 1228], "seper": [127, 694, 735], "pars": [127, 159], "satisfi": [127, 872, 980, 984], "far": [127, 138, 143, 144, 1067, 1068, 1078], "asid": [127, 158], "irrelev": [127, 137], "increasingli": 127, "complex": [127, 130, 145, 146, 147, 159, 694, 783, 786, 872, 893, 896, 950, 954], "14254655": 127, "1578213": 127, "380515": 127, "trivial": 127, "exlud": 127, "action": [127, 129], "failing_fn_nam": 127, "minutest": 127, "suffici": 127, "condit": [127, 158, 206, 207, 1067, 1077, 1078, 1113, 1117], "thoroughli": 128, "ci": [128, 129, 159], "On": [129, 130, 140, 143, 147], "fixtur": 129, "hit": [129, 142], "eleg": 129, "intellig": 129, "rang": [129, 145, 146, 147, 209, 210, 211, 237, 238, 240, 241, 1118, 1119, 1123, 1150, 1167, 1170, 1175, 1178, 1195], "cach": [129, 132, 372, 377, 694, 705], "unexplor": 129, "known": 129, "repeatedli": [129, 136, 1067, 1076], "upload": 129, "artifact": 129, "parametr": 129, "statement": [129, 140, 159], "plai": [129, 130, 147], "varieti": [129, 137, 138], "valid_int_dtyp": 129, "uint8": [129, 137, 279, 301, 304, 312, 351, 354, 357, 360, 362, 365, 370, 371], "uint16": [129, 137, 279, 312, 318, 327, 328, 330, 333, 351, 354, 1150, 1167, 1170, 1175, 1178], "uint32": [129, 137, 279, 312, 327, 328, 330, 333, 370, 1150, 1167, 1170, 1175, 1178], "uint64": [129, 137, 279, 312, 327, 328, 330, 333, 335, 357, 360, 362, 365, 1150, 1167, 1170, 1175, 1178], "custom_strategi": 129, "st": [129, 131], "sampled_from": [129, 131], "min_siz": 129, "max_siz": 129, "referenc": 129, "print_hypothesis_exampl": 129, "searchstrategi": 129, "randomis": 129, "simplist": 129, "intricaci": 129, "briefli": [129, 132, 145], "bound": [129, 142], "mechan": [129, 157, 159, 1195], "power": [129, 144, 145, 146, 407, 473, 476, 513, 516, 638, 641, 694, 750, 775, 788, 872, 914, 916, 1208], "math": [129, 139, 147, 407, 548, 551, 553, 556, 1195], "inclus": [129, 139, 209, 210, 211, 1091, 1093, 1096], "width": 129, "losslessli": 129, "mostli": 129, "one_of": 129, "datum": 129, "pipe": 129, "overload": 129, "shorthand": 129, "draw": [129, 131, 1091, 1092, 1098, 1101, 1103, 1106], "input_dtyp": [129, 131], "reject": 129, "flatmap": 129, "suppos": 129, "interact": [129, 1195], "dataobject": 129, "test_argsort": 129, "decor": [129, 131, 132, 134, 136, 137, 138, 139], "initialis": [129, 372], "snippet": 129, "dtype_and_x": [129, 131], "dtype_and_valu": [129, 131], "valid_float_dtyp": [129, 131], "list_of_length": [129, 131], "num_positional_arg": [129, 131], "instance_method": 129, "test_leaky_relu": 129, "exhaust": 129, "num_posit": 129, "indirectli": 129, "advis": 129, "seri": [129, 130], "9433925": 129, "401298464324817e": 129, "574352379": 129, "99999": 129, "2250738585072014e": 129, "308": [129, 279, 319, 322], "103515625e": 129, "unpack": [129, 140, 694, 804], "seamlessli": 129, "edg": [129, 142, 147, 1001, 1002, 1005, 1011, 1014, 1059, 1062, 1195], "encount": 129, "criterion": 129, "straight": [129, 144, 1195], "array_valu": 129, "valid_ax": 129, "hand": [129, 132, 140, 159], "craft": 129, "polici": [129, 158], "hoc": 129, "overview": [129, 141, 158], "array_dtyp": 129, "array_bool": [129, 131], "na": 129, "test_concat": 129, "test_devic": 129, "array_shap": 129, "test_manipul": 129, "common_shap": 129, "test_lay": 129, "size_bound": 129, "precis": [129, 279, 319, 322, 407, 618, 621, 668, 671], "283405296074752": 129, "564049465049088": 129, "0417876997507982e": 129, "min_valu": 129, "max_valu": 129, "allow_inf": 129, "min_num_dim": [129, 131], "wherev": 129, "reshape_shap": 129, "stand": 129, "alon": [129, 372, 392, 406], "fashion": 129, "some_sequ": 129, "allow_subnorm": 129, "exclude_min": 129, "960464477539063e": 129, "coverag": 129, "allow_nan": 129, "Such": 129, "kind": [129, 159, 279, 319, 322, 330, 333, 407, 638, 641, 1150, 1167, 1170, 1175, 1178], "get_shap": [129, 131], "allow_non": [129, 131], "max_num_dim": [129, 131], "min_dim_s": [129, 131], "none_or_list_of_float": 129, "200": 129, "199": [129, 407, 433, 436], "99999999999997": 129, "000000000000002": 129, "125": 129, "43759670925832": 129, "get_mean_std": 129, "probabilist": 129, "811428143185347e": 129, "none_or_list_float": 129, "get_bound": 129, "arrays_valu": 129, "put": [129, 159], "36418": 129, "213": 129, "21716926": 129, "get_prob": 129, "unnorm": [129, 1091, 1092], "099609375": 129, "get_axi": 129, "number_positional_argu": 129, "mind": [129, 135, 136], "bodi": 129, "test_valu": [129, 131], "enough": [129, 144, 145, 146], "justifi": 129, "unduli": 129, "labori": 129, "straightforward": [129, 145], "scenario": 129, "autom": [129, 1195], "report": 129, "test_demo": 129, "falsifi": 129, "failing_test": 129, "traceback": 129, "assertionerror": [129, 806, 841, 850], "shrink": 129, "prescrib": 129, "behavior": [129, 136, 142, 159, 407, 638, 641, 643, 646, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "identifi": 129, "closest": [129, 279, 306, 407, 483, 486, 523, 526, 528, 531, 648, 651, 689, 693], "checkout": 129, "scratch": 129, "databas": 129, "therebi": 129, "event": [129, 1195], "test_gelu": 129, "test_fil": 129, "brief": 129, "phase": [129, 159], "notabl": 129, "displai": [129, 136, 145], "verbos": [129, 142, 1195, 1243], "newer": 129, "max_exampl": 129, "impact": [129, 146], "deadlin": 129, "weird": 129, "truth": [129, 407, 503, 506, 533, 536, 538, 541, 558, 561, 563, 566, 628, 631], "opt": [129, 133, 139, 144], "defer": [129, 132, 134, 135, 136, 137, 138, 139], "suffic": [129, 134], "catch": [129, 694, 717], "systemat": 129, "safeguard": 129, "inabl": 129, "lax": [130, 131, 159], "bfloat16": [130, 137], "thu": [130, 407, 473, 476, 638, 641, 643, 646, 872, 893, 896], "categoris": 130, "notic": [130, 131, 144], "mathematical_funct": 130, "arithmetic_oper": 130, "same_kind": [130, 131], "subok": [130, 131], "mathemat": [130, 208, 407, 423, 426, 443, 446, 518, 521, 618, 621, 872, 975, 979], "slightli": [130, 136, 142, 146], "recov": 130, "obtain": 130, "trigonometric_funct": 130, "pointwise_op": 130, "concaten": [130, 142, 145, 694, 735, 1001, 1007, 1010, 1195], "manipulation_routin": 130, "joining_arrai": 130, "indexing_slicing_joining_mutating_op": 130, "cat": [130, 142, 147], "grasp": 130, "youtub": 130, "jump": 131, "knowledg": 131, "strategi": 131, "test_frontend_funct": 131, "heavi": 131, "lift": 131, "np_frontend_help": 131, "behav": [131, 144], "test_frontend": 131, "test_jax": 131, "test_jax_lax_oper": 131, "available_dtyp": 131, "test_jax_lax_tan": 131, "as_variable_flag": 131, "with_out": 131, "native_array_flag": 131, "test_numpi": 131, "test_mathematical_funct": 131, "test_np_trigonometric_funct": 131, "test_numpy_tan": 131, "handle_where_and_array_bool": 131, "test_tensorflow": 131, "test_tf_funct": 131, "ivy_tf": 131, "test_tensorflow_tan": 131, "test_torch": 131, "test_pointwise_op": 131, "intersect": [131, 158], "ivy_torch": 131, "test_torch_tan": 131, "_dtype": [131, 144], "valid_numeric_dtyp": 131, "_fill_valu": 131, "max_dim_s": 131, "test_jax_lax_ful": 131, "uint": [131, 279, 312, 351, 354, 365, 370], "creation_routin": 131, "test_from_shape_or_valu": 131, "test_numpy_ful": 131, "test_tensorflow_ful": 131, "discrep": 131, "test_creation_op": 131, "_requires_grad": 131, "requires_grad": 131, "test_torch_ful": 131, "accommod": 131, "unsign": [131, 1150, 1167, 1170, 1175, 1178], "categor": [132, 138], "mutual": [132, 136], "venn": 132, "diagram": 132, "light": [132, 159], "log_pr": [132, 136, 139], "array_arg": 132, "typic": 132, "whatsoev": [132, 136], "outsid": [132, 138, 140, 142, 144, 147, 1001, 1002, 1005, 1047, 1050], "deal": [132, 159], "concurr": [132, 136], "modif": 132, "group": [132, 136], "get_all_arrays_on_dev": 132, "nested_map": [132, 1067], "index_nest": [132, 1067], "implicit_backend": 133, "unless": [133, 138, 139, 159, 407, 618, 621, 694, 769, 872, 918, 921], "__dict__": [133, 142, 144], "ivy_original_dict": [133, 142], "unmodifi": [133, 137], "fallback": 133, "achiev": [134, 140, 145, 147], "counterpart": [134, 136], "inputs_to_ivy_arrai": [134, 160], "heavili": [134, 159], "nearli": 134, "anywai": [134, 135], "facilit": 134, "topic": [134, 144], "_data": [135, 144], "organiz": [135, 136], "inherit": [135, 136, 144, 159], "bear": [135, 136, 137], "necessarili": [135, 136], "although": [135, 136], "underpin": [135, 136, 142], "programmat": [135, 136], "backup": [135, 136], "accident": [135, 136], "absent": [135, 136], "perk": [135, 136], "auto": [135, 136, 145], "throw": [135, 144], "imposs": 135, "coupl": [135, 136, 144, 146], "secondli": [135, 137], "easier": 135, "five": [136, 145], "decis": [136, 142, 144], "arbitrarili": [136, 145], "__repr__": 136, "control": [136, 137, 139, 144, 145, 158], "__getattr__": 136, "underli": [136, 407, 453, 456, 468, 471, 478, 481, 608, 611], "__setattr__": 136, "__contains__": 136, "__getstate__": 136, "__setstate__": 136, "unpickl": 136, "expand": [136, 694, 735, 1001, 1015, 1018], "irrespect": [136, 139, 144, 279, 286, 289], "presenc": [136, 139], "intuit": [136, 145, 146], "chronolog": 136, "had": [136, 139], "sequenti": [136, 146], "flow": [136, 158], "implic": 136, "eager": [136, 159], "children": 136, "shallowest": 136, "deepest": 136, "dy": [136, 806, 817, 818], "dx": [136, 806, 817, 818], "autograd": [136, 159], "grad": [136, 145, 146, 147, 1195, 1233, 1237], "redund": 136, "num_head": [136, 851, 870, 1217, 1228], "mask": [136, 851, 870, 871], "to_q_fn": [136, 851, 870], "to_kv_fn": [136, 851, 870], "to_out_fn": [136, 139, 851, 870], "to_q_v": [136, 851, 870], "to_kv_v": [136, 851, 870], "to_out_v": [136, 851, 870], "measur": [136, 851, 870, 1217, 1228], "dot": [136, 851, 870, 871, 872, 960, 964, 970, 974, 1217, 1228], "all_dtyp": 137, "all_numeric_dtyp": 137, "all_int_dtyp": 137, "all_float_dtyp": 137, "fall": [137, 141, 1195, 1229, 1230, 1233, 1237], "thirdli": 137, "native_float32": [137, 279, 371], "importantli": [137, 144, 147, 158], "arguabl": [137, 138], "compound": 137, "overflow": [137, 407, 423, 426, 1150, 1175, 1178], "arr": [137, 138], "settabl": [137, 138], "mx": [137, 138, 139, 1195], "nd": [137, 138, 139, 142, 147, 1195], "deleg": 137, "shape_to_tupl": 137, "idx": [138, 144, 694, 700], "tpu": [138, 372, 395, 404], "aliv": [138, 372, 387, 391, 393, 694, 748, 768, 770], "dual": 138, "thrown": [138, 159, 694, 760], "rare": [138, 159], "program": 139, "strictli": 139, "ration": 139, "speak": 139, "subtli": 139, "ensure_in_backend": [139, 694, 760], "x_nativ": 139, "val_n": 139, "assign": [139, 140, 144], "elif": 139, "unspecifi": [139, 407, 638, 641, 643, 646, 872, 893, 896, 1001, 1047, 1050], "predominantli": [139, 158], "altern": [139, 145], "_wrap_fn": 139, "maxim": [139, 142], "inner": [139, 144, 872, 893, 896, 905, 908, 1063, 1064, 1065, 1066], "third": [139, 159, 872, 950, 954, 1118, 1119, 1123], "leverag": 139, "input_arrai": 139, "flake8": 140, "undefin": 140, "yield": [140, 1113, 1117], "handler": [140, 141, 143, 147, 1195], "carri": 140, "star": 140, "byte": 140, "notimpl": 140, "notimplementederror": 140, "unsuccess": 140, "exce": [140, 407, 614, 616], "black": 140, "disobei": 140, "successfulli": 140, "comparison": 140, "sound": 141, "higher": [141, 142, 147, 159, 806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839], "fledg": [142, 143], "syntact": [142, 147], "clip_by_valu": [142, 147], "clamp": [142, 147], "fit": [142, 1001, 1027, 1030], "construct": [142, 143, 146, 147, 1001, 1055, 1058, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240], "power_seq": 142, "resid": [142, 146], "ml_framework": [142, 147, 209, 210, 211], "current_framework": [142, 147], "furthermor": 142, "framework_handl": 142, "face": 142, "cprint": [142, 1242], "framework_stack": 142, "_determine_framework_from_arg": 142, "get_framework": 142, "illustr": [142, 158], "un": [142, 279, 335], "nn": [142, 147, 209, 243, 246, 1195], "init_h": [142, 851, 869], "init_c": [142, 851, 869], "kernel": [142, 159, 851, 869], "recurrent_kernel": [142, 851, 869], "bia": [142, 146, 851, 868, 869, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227], "recurrent_bia": [142, 851, 869], "x_shape": 142, "batch_shap": [142, 144, 147, 209, 223, 224, 694, 769, 851, 869, 870, 871, 872, 980, 984, 1091, 1092, 1217, 1226], "timestep": [142, 851, 869, 1217, 1226], "input_channel": [142, 146, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227], "x_flat": 142, "wi": 142, "wi_x": 142, "wii_x": 142, "wif_x": 142, "wig_x": 142, "wio_x": 142, "recurr": [142, 851, 869], "wh": 142, "lstm": [142, 851, 869, 1217], "ht": 142, "ct": 142, "hts_list": 142, "unrol": [142, 145, 851, 869], "wii_xt": 142, "wif_xt": 142, "wig_xt": 142, "wio_xt": 142, "zip": 142, "htm1": 142, "ctm1": 142, "wh_htm1": 142, "whi_htm1": 142, "whf_htm1": 142, "whg_htm1": 142, "who_htm1": 142, "ft": 142, "gt": 142, "ot": 142, "offici": 142, "reliabl": 142, "sacrific": 142, "hear": 142, "virtu": 142, "pure_ivi": 142, "reduce_mean": [142, 145, 146, 147, 1195], "reduce_sum": [142, 1195], "reduce_var": 142, "compile_graph": [142, 147], "pure_torch": 142, "backbon": [142, 145], "_layer": 142, "super": [142, 145, 146, 147], "random_unifrom": 142, "unclean": 142, "wx": 142, "temp": 142, "torchscript": 142, "example_input": [142, 206, 207], "static_argnum": [142, 206, 207], "static_argnam": [142, 206, 207], "jit": [142, 159], "primit": [143, 159], "hierarch": [143, 145, 146], "arraywithlinalg": 144, "arraywithlog": 144, "arraywithmath": 144, "arraywithmeta": 144, "arraywithreduct": 144, "_shape": 144, "_size": 144, "functool": 144, "mul": 144, "len": [144, 147, 209, 243, 246], "_devic": 144, "_dev_str": 144, "_pre_repr": 144, "_post_repr": 144, "answer": [144, 159], "typeerror": 144, "immut": 144, "claim": 144, "truli": 144, "_native_wrapp": 144, "attributeerror": 144, "genuin": 144, "some_method": 144, "similarli": [144, 209, 243, 246], "rewritten": 144, "__pow__": 144, "strang": 144, "enforc": 144, "appear": [144, 1001, 1015, 1018], "_wrap_method": 144, "func_wrapp": [144, 160, 161, 162, 163, 164, 165, 166, 167, 168], "__name__": 144, "non_wrapped_method": 144, "_method_wrap": 144, "native_arg": 144, "native_kwarg": 144, "inner_fn": 144, "whist": 144, "unwrap": 144, "transit": 144, "needlessli": 144, "randn": 144, "_unwrap_method": 144, "method_wrap": 144, "compartment": 144, "public": [144, 694, 712], "newshap": 144, "new_shap": 144, "tidi": 144, "shorter": 144, "crystal": 144, "ton": 145, "ado": [145, 146], "incred": [145, 159], "soup": 145, "walk": [145, 146], "dct": 145, "cnt": 145, "combo": [145, 1195, 1201], "hold": [145, 694, 772, 773], "1000": [145, 407, 668, 671], "uda": 145, "3333": 145, "6667": 145, "178": 145, "new_weight": 145, "0600": 145, "3100": 145, "2400": 145, "6900": 145, "delimit": 145, "autocomplet": 145, "midwai": 145, "agent": 145, "total_spe": 145, "total_height": 145, "total_width": 145, "ag": 145, "tot": 145, "total_": 145, "total_h": 145, "dir": 145, "cnt0": 145, "cnt1": 145, "diff_0": 145, "diff_1": 145, "config0": 145, "config1": 145, "Not": [145, 146, 159, 208], "decod": 145, "l0": 145, "l1": [145, 872, 975, 979], "clearer": 145, "truncat": 145, "decoder__l0": 145, "decoder__l1": 145, "encoder__l0": 145, "encoder__l1": 145, "height": 145, "l0__b": 145, "l0__w": 145, "l1__b": 145, "l1__w": 145, "printabl": 145, "obviou": 145, "foresight": 145, "untidili": 145, "update_ag": 145, "normalize_img": 145, "img": 145, "img_max": 145, "reduce_max": [145, 1195], "img_min": 145, "reduce_min": [145, 1195], "img_rang": 145, "agent_posit": 145, "agent_veloc": 145, "agent_cam_front_rgb": 145, "agent_cam_front_depth": 145, "agent_cam_rear_rgb": 145, "agent_cam_rear_depth": 145, "agent_cam_lidar": 145, "cleaner": 145, "camera": 145, "front_rgb": 145, "front_depth": 145, "rear_rgb": 145, "rear_depth": 145, "lidar": 145, "rgb": 145, "rear": 145, "veloc": 145, "cam": 145, "cam_max": 145, "cam_min": 145, "cam_rang": 145, "Of": 145, "ideal": 145, "perman": 145, "afterward": 145, "thread": 145, "incorpor": 145, "pretti": 145, "dataload": [145, 157, 1195], "_cnt": 145, "img_": 145, "_dataset_s": 145, "_batch_siz": 145, "_count": [145, 146], "__next__": 145, "filenam": 145, "img_fnam": 145, "fname": 145, "loaded_img": 145, "cv2": 145, "imread": 145, "loader": [145, 159], "batch_slic": 145, "mymodel": [145, 1195], "linear0": [145, 146, 1195], "linear1": [145, 146, 1195], "x_in": [145, 146, 147, 1195], "loss_fn": [145, 146, 147, 1195], "0145": 145, "grad_fn": 145, "addbackward0": 145, "_create_vari": 146, "output_channel": [146, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227], "with_bia": [146, 1217, 1227], "_input_channel": 146, "_output_channel": 146, "_w_shape": 146, "_b_shape": 146, "_with_bia": 146, "8979": 146, "3198": 146, "0196": 146, "3126": 146, "3717": 146, "9687": 146, "6958": 146, "5122": 146, "3902": 146, "8800": 146, "5613": 146, "1982": 146, "nightmar": 146, "overcom": 146, "fc": 146, "9563": 146, "v0": 146, "v1": 146, "6440": 146, "key0": 146, "1823": 146, "8075": 146, "linear3": 146, "v2": 146, "2346": 146, "counter": 146, "hidden": [146, 851, 869, 1217, 1226], "fed": [146, 372, 397], "1300": 146, "decoupl": 146, "scheme": 146, "weight_initi": [146, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227], "glorotuniform": [146, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227], "bias_initi": [146, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227], "_w_init": 146, "_b_init": 146, "create_vari": [146, 1208], "var_shap": [146, 1208], "fan_out": [146, 1208], "fan_in": [146, 1208], "fan_mod": [146, 1208], "fan_sum": 146, "slight": 146, "misnom": 146, "saw": 146, "vanilla": [146, 1063, 1065], "descent": [146, 806, 820, 822, 1233, 1238], "lar": [146, 806, 829, 831, 833, 835, 1233], "lamb": [146, 806, 829, 831, 1233], "compile_on_next_step": [146, 1229, 1230, 1233, 1234, 1235, 1236, 1237, 1238], "_beta1": 146, "_beta2": 146, "_epsilon": 146, "_mw": 146, "_vw": 146, "_first_pass": 146, "_should_compil": 146, "_step": [146, 1233, 1237], "new_v": 146, "_lr": 146, "_inplac": 146, "_stop_gradi": 146, "set_stat": [146, 1233, 1234, 1235, 1236, 1237, 1238], "pre": [147, 159], "captur": 147, "sparse_funct": 147, "num_class": 147, "num_dim": 147, "new_axi": 147, "_linear": 147, "to_backend": 147, "jax_graph": 147, "to_ivy_modul": [147, 1206], "thinli": 147, "whilst": 147, "to_haiku_modul": 147, "hk": 147, "loss_fn_t": 147, "transform": [147, 158, 851, 867, 868], "without_apply_rng": 147, "rng": 147, "prngkei": 147, "init": 147, "update_rul": 147, "tree_multimap": 147, "vision": [157, 1195], "robot": [157, 1195], "focus": 158, "perfect": 158, "3d": [158, 1217, 1222, 1223], "differenti": 158, "demo": [158, 1195], "orient": 158, "pose": 158, "euler": [158, 208], "quaternion": 158, "rotat": 158, "ivy_mech": 158, "target_facing_rotation_matrix": 158, "polar_to_cartesian_coord": 158, "ordin": [158, 872, 945, 948], "warp": 158, "optic": 158, "voxel": 158, "ivy_vis": 158, "coords_to_voxel_grid": 158, "render_pixel_coord": 158, "neural": [158, 851, 1195, 1203, 1217], "radianc": 158, "nerf": 158, "trajectori": 158, "motion": 158, "plan": [158, 1195], "mobil": 158, "ivy_robot": 158, "sample_spline_path": 158, "rigidmobil": 158, "sample_bodi": 158, "drone": 158, "sample_link": 158, "openai": 158, "swimmer": 158, "cumul": [158, 694, 714, 715], "reward": 158, "supervis": 158, "reinforc": 158, "door": [158, 159], "cartpol": 158, "mountain_car": 158, "pendulum": 158, "reacher": 158, "learnt": 158, "ture": 158, "ntm": 158, "egospher": 158, "spatial": 158, "esm": 158, "ivy_memori": 158, "egocentr": 158, "room": 158, "inspir": 158, "doubt": 159, "grate": 159, "probe": 159, "undergo": 159, "remark": 159, "surpris": 159, "lock": 159, "contunu": 159, "minor": 159, "xla": 159, "gold": 159, "dex": 159, "ye": 159, "scan": 159, "tricki": 159, "predictor": 159, "tight": 159, "driver": 159, "schedul": 159, "dispatch": 159, "Will": 159, "ast": 159, "dynamic": 159, "cond": 159, "jacobian": 159, "checkpoint": 159, "autodiff": 159, "shine": 159, "merci": 159, "superset": 159, "cluster": 159, "compet": 159, "paradigm": 159, "parallelis": 159, "spmd": 159, "mixtur": [159, 806, 808, 811], "expert": 159, "sophist": 159, "depart": 159, "routin": 159, "hundr": 159, "thousand": 159, "deepli": [159, 1067, 1069], "broadli": 159, "supplementari": 159, "Is": 159, "reusabl": 159, "fanci": 159, "fusion": 159, "lose": 159, "vmap": 159, "pmap": 159, "overhead": 159, "ineffici": 159, "eventu": 159, "supplement": 159, "backdoor": 159, "callback": 159, "record": 159, "metric": 159, "somewhat": 159, "outsourc": 159, "gaussian": [170, 171, 174], "214": [170, 186, 189], "0768": [170, 191, 194], "231": [170, 191, 194], "693": [170, 191, 194, 407, 433, 436, 985, 996, 999], "363": [170, 191, 194], "462": [170, 201, 205, 407, 688], "604": [170, 201, 205, 407, 688], "984": [170, 201, 205, 407, 688], "997": [170, 201, 205, 407, 688], "array_method": [171, 172, 176, 177, 181, 182, 186, 187, 191, 192, 196, 197, 201, 203, 213, 214, 218, 219, 226, 227, 232, 233, 243, 244, 248, 249, 256, 257, 261, 263, 266, 268, 274, 276, 286, 287, 291, 292, 296, 297, 301, 302, 313, 314, 319, 320, 330, 331, 336, 337, 341, 342, 346, 347, 351, 352, 357, 358, 379, 380, 398, 400, 408, 409, 413, 414, 418, 419, 423, 424, 428, 429, 433, 434, 438, 439, 443, 444, 448, 449, 453, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 583, 584, 588, 589, 593, 594, 598, 599, 603, 604, 608, 609, 618, 619, 623, 624, 628, 629, 633, 634, 638, 639, 643, 644, 648, 649, 653, 654, 658, 659, 663, 664, 668, 669, 673, 674, 678, 680, 683, 685, 689, 691, 695, 696, 707, 708, 718, 719, 723, 724, 728, 729, 738, 739, 743, 744, 783, 784, 794, 796, 808, 809, 824, 825, 844, 846, 852, 853, 862, 863, 873, 874, 878, 879, 883, 884, 888, 889, 893, 894, 897, 898, 900, 901, 905, 906, 909, 910, 918, 919, 923, 924, 928, 929, 933, 934, 936, 937, 945, 946, 950, 952, 955, 957, 960, 962, 965, 967, 970, 972, 975, 977, 980, 982, 986, 987, 991, 992, 996, 997, 1002, 1003, 1007, 1008, 1011, 1012, 1015, 1016, 1019, 1020, 1023, 1024, 1027, 1028, 1032, 1033, 1037, 1038, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1086, 1087, 1093, 1094, 1098, 1099, 1103, 1104, 1119, 1121, 1124, 1126, 1129, 1131, 1134, 1136, 1140, 1141, 1145, 1146, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1171, 1172, 1175, 1176, 1179, 1181, 1185, 1186, 1190, 1191], "container_method": [171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 198, 200, 201, 202, 204, 210, 212, 213, 216, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 266, 267, 269, 271, 272, 274, 275, 277, 286, 288, 290, 291, 293, 295, 296, 298, 300, 301, 303, 305, 308, 310, 313, 315, 317, 319, 321, 323, 324, 326, 327, 329, 330, 332, 334, 336, 338, 340, 341, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 379, 381, 383, 398, 399, 401, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 614, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 679, 681, 683, 684, 686, 689, 690, 692, 695, 697, 699, 707, 709, 711, 718, 720, 722, 723, 725, 727, 728, 730, 732, 738, 740, 742, 743, 745, 747, 783, 785, 787, 794, 795, 797, 808, 810, 812, 813, 814, 816, 817, 819, 820, 821, 823, 824, 826, 828, 829, 830, 832, 833, 834, 836, 837, 838, 840, 844, 845, 847, 852, 854, 856, 862, 864, 866, 873, 875, 877, 878, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 900, 902, 904, 905, 907, 909, 911, 913, 914, 915, 917, 918, 920, 922, 923, 925, 927, 928, 930, 932, 936, 938, 940, 941, 942, 944, 945, 947, 949, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 996, 998, 1000, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1109, 1110, 1112, 1119, 1120, 1122, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1137, 1140, 1142, 1144, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1192, 1194], "faster": [206, 207], "invoc": [206, 207], "718281828459045": 208, "newaxi": 208, "alia": 208, "pi": 208, "141592653589793": 208, "chosen": [209, 210, 211, 407, 443, 446, 1113, 1117], "distanc": [209, 210, 211], "adjac": [209, 210, 211], "creation_funct": [209, 210, 211, 213, 215, 217, 218, 221, 223, 224, 226, 229, 231, 232, 235, 237, 238, 253, 254, 256, 259, 261, 265, 266, 270, 271, 273, 274, 278], "elsewher": [209, 223, 224, 1113, 1117], "row": [209, 223, 224, 872, 945, 948, 950, 954, 1091, 1092, 1113, 1116], "column": [209, 223, 224, 872, 893, 896, 936, 939, 945, 948, 950, 954], "__dlpack__": [209, 226, 229, 372, 398, 402], "interchang": [209, 226, 229, 1001, 1051, 1054], "cartesian": [209, 243, 246], "ij": [209, 243, 246, 1150, 1151, 1154], "ni": [209, 243, 246], "xi": [209, 243, 246], "n1": [209, 243, 246], "n2": [209, 243, 246], "n3": [209, 243, 246], "xv": [209, 243, 246], "yv": [209, 243, 246], "y1": [209, 274, 278], "y2": [209, 274, 278], "y3": [209, 274, 278], "intdtyp": [209, 274, 278, 279, 311, 351, 354], "defaultdtyp": [279, 280], "defaultfloatdtyp": [279, 281], "defaultintdtyp": [279, 282], "defaultuintdtyp": [279, 283], "uint_dtyp": [279, 312, 365], "incompat": [279, 296, 299], "data_type_funct": [279, 301, 304, 319, 322, 330, 333, 357, 360], "floatdtyp": [279, 308, 309], "int_dtyp": [279, 311, 364], "uintdtyp": [279, 312, 351, 354, 365, 370], "defualt": [279, 312], "4294967346": [279, 312], "native_int8": [279, 318, 371], "native_bool": [279, 318, 362, 371], "followng": [279, 319, 322], "occupi": [279, 319, 322, 330, 333, 694, 772, 773], "smallest_norm": [279, 319, 322], "4028235e": [279, 319, 322], "7976931348623157e": [279, 319, 322], "55040e": [279, 319, 322], "encapsul": [279, 330, 333], "2147483648": [279, 330, 333], "2147483647": [279, 330, 333], "18446744073709551615": [279, 330, 333], "9223372036854775808": [279, 330, 333], "9223372036854775807": [279, 330, 333], "127": [279, 330, 333], "314": [279, 330, 333], "32768": [279, 330, 333], "32767": [279, 330, 333], "1800": [279, 330, 333], "65535": [279, 330, 333], "4294967295": [279, 330, 333], "109": [279, 330, 333], "8400": [279, 330, 333], "119": [279, 330, 333], "122": [279, 330, 333, 407, 493, 496], "native_int16": [279, 335, 371], "type1": [279, 356], "type2": [279, 356], "default_dtype_stack": [279, 362], "native_int32": [279, 362, 371], "native_uint64": [279, 362, 371], "native_float64": [279, 362, 371], "ret1": [279, 366], "ret2": [279, 366], "reset": [279, 370, 372, 405, 694, 801, 802, 803], "native_float16": [279, 371], "native_int64": [279, 371], "native_uint8": [279, 371], "noinspect": [280, 281, 282, 373, 807], "pyshadowingnam": [280, 281, 282, 373, 807], "defaultdevic": [372, 373], "__enter__": 372, "_dev": 372, "__exit__": 372, "exc_typ": 372, "exc_val": 372, "exc_tb": 372, "exit": 372, "profil": 372, "save_dir": [372, 374], "139740789224448": [372, 387], "physic": [372, 389], "x4": [372, 391], "process_specif": [372, 392, 406], "percentag": [372, 392], "ram": [372, 392, 403, 406], "036902561555": [372, 392], "7024003467681645": [372, 392], "7095597456708771": [372, 392], "attr_onli": [372, 393], "chunk": [372, 395, 396, 397], "max_chunk_s": [372, 397], "chunk_siz": [372, 397], "input_ax": [372, 397], "output_ax": [372, 397], "feed": [372, 397], "fist": [372, 397], "caveat": [372, 398, 402], "portabl": [372, 398, 402, 1195], "gb": [372, 403, 406], "66700032": [372, 403], "589934592": [372, 403], "magnitud": [407, 408, 411, 423, 426, 618, 621, 872, 950, 954, 955, 959], "princip": [407, 413, 416, 428, 431, 438, 441], "x1_i": [407, 423, 426, 443, 446, 453, 456, 463, 466, 468, 471, 473, 476, 478, 481, 498, 501, 503, 506, 528, 531, 533, 536, 538, 541, 558, 561, 563, 566, 588, 591, 593, 596, 603, 606, 608, 611, 618, 621, 628, 631, 638, 641, 643, 646, 678, 682], "nor": [407, 423, 426, 618, 621, 806, 841, 850], "nearest": [407, 423, 426, 618, 621, 648, 651], "2019": [407, 423, 426, 518, 521, 618, 621], "commut": [407, 423, 426], "524": [407, 428, 431], "644": [407, 428, 431], "201": [407, 428, 431], "305": [407, 428, 431], "412": [407, 428, 431], "809": [407, 433, 436], "569": [407, 433, 436], "733": [407, 433, 436], "notat": [407, 443, 446, 1150, 1151, 1154], "denot": [407, 443, 446, 806, 841, 850], "pair": [407, 443, 446, 851, 871, 872, 878, 881], "quadrant": [407, 443, 446], "3\u03c0": [407, 443, 446], "588": [407, 443, 446], "719": [407, 443, 446], "197": [407, 443, 446], "bitwis": [407, 453, 456, 468, 471, 478, 481, 608, 611], "invert": [407, 458, 461], "arithmet": [407, 473, 476, 1150, 1159, 1162], "lh": [407, 473, 476], "rh": [407, 473, 476], "xor": [407, 478, 481, 608, 611], "78": [407, 478, 481, 573, 576, 653, 656, 872, 928, 931, 1091, 1098, 1101, 1150, 1151, 1154], "66": [407, 478, 481, 872, 928, 931, 1150, 1151, 1154], "77": [407, 478, 481, 872, 928, 931, 1150, 1151, 1154], "59": [407, 478, 481], "654": [407, 488, 491], "368": [407, 493, 496], "670": [407, 493, 496], "202": [407, 493, 496], "548": [407, 493, 496, 663, 666], "1490": [407, 493, 496], "698": [407, 498, 501], "accur": [407, 518, 521], "fdlibm": [407, 518, 521], "compliant": [407, 518, 521, 598, 601, 603, 606, 1150, 1155, 1158, 1159, 1162, 1163, 1166], "85e": [407, 518, 521], "632": [407, 518, 521], "20e": [407, 518, 521], "72e": [407, 518, 521], "00": [407, 518, 521, 872, 955, 959], "22000": [407, 518, 521], "442000": [407, 518, 521], "greatest": [407, 523, 526, 528, 531], "y_i": [407, 623, 626], "versu": [407, 638, 641], "odd": [407, 638, 641], "modulu": [407, 643, 646], "primarili": [407, 643, 646], "5654": [407, 648, 651], "034": [407, 648, 651], "433": [407, 648, 651], "343": [407, 648, 651], "124": [407, 653, 656], "932": [407, 658, 661], "746": [407, 658, 661], "443": [407, 658, 661], "657": [407, 658, 661, 694, 707, 710], "253": [407, 663, 666], "indistinguish": [407, 668, 671], "infinit": [407, 668, 671], "32455532": [407, 668, 671], "89897949": [407, 668, 671], "169": [407, 668, 671], "546": [407, 683, 687], "842": [407, 683, 687], "916": [407, 683, 687, 985, 986, 989], "996": [407, 683, 687], "328": [407, 683, 687], "decim": [407, 689, 693], "inspect": [694, 700, 1199, 1200], "417": [694, 707, 710], "583": [694, 707, 710], "0667": [694, 707, 710], "133": [694, 707, 710], "267": [694, 707, 710], "131": [694, 707, 710], "263": [694, 707, 710], "394": [694, 707, 710], "526": [694, 707, 710], "788": [694, 707, 710], "default_v": [694, 717], "catch_except": [694, 717], "rev": [694, 717], "with_cal": [694, 717], "mod": [694, 734], "max_freq": [694, 735], "num_band": [694, 735], "fourier": [694, 735], "band": [694, 735], "linearli": [694, 735, 872, 945, 948], "oppos": [694, 735], "geometr": [694, 735], "array_mod": [694, 749], "seen_set": [694, 754], "local_set": [694, 754], "decrement": [694, 758], "allow_dupl": [694, 766], "forkserv": [694, 767], "spawn": [694, 767], "hot": [694, 769], "scatter": [694, 769, 772, 773], "overrid": [694, 769], "tmp_dr": [694, 780], "temporari": [694, 780], "stabil": [694, 783, 786, 788, 1139, 1140, 1143, 1145, 1148], "49999999999975": [694, 783, 786], "5015015015010504": [694, 783, 786], "1j": [694, 783, 786], "000444502911705e": [694, 783, 786], "9999999999995j": [694, 783, 786], "min_bas": [694, 788], "100000023841858": [694, 792], "200000047683716": [694, 792], "299999952316284": [694, 792], "400000095367432": [694, 792], "599999904632568": [694, 792], "gradienttrack": [806, 807], "en": [806, 808, 811, 813, 815], "wikipedia": [806, 808, 811, 813, 815], "wiki": [806, 808, 811, 813, 815], "stochastic_gradient_desc": [806, 808, 811, 813, 815], "004": [806, 808, 811], "009": [806, 808, 811], "0125": [806, 808, 811], "601": [806, 808, 811], "025": [806, 808, 811], "992": [806, 808, 811], "209": [806, 808, 811, 1118, 1119, 1123], "271": [806, 808, 811], "0717": [806, 808, 811], "142": [806, 808, 811], "182": [806, 808, 811], "624": [806, 808, 811], "744": [806, 808, 811], "626": [806, 808, 811], "024": [806, 808, 811], "096": [806, 808, 811], "216": [806, 808, 811], "384": [806, 808, 811], "rate": [806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839, 1063, 1064, 1065, 1066, 1217, 1228, 1233, 1234, 1235, 1236, 1237, 1238], "ws_new": [806, 813, 815, 820, 822, 829, 831, 833, 835, 837, 839], "retain": [806, 817, 818], "trust": [806, 829, 831, 1233, 1235], "ratio": [806, 829, 831, 1233, 1235], "decai": [806, 829, 831, 833, 835, 1233, 1235, 1236], "layerwis": [806, 833, 835], "with_grads_stack": [806, 841, 850], "output_shap": [851, 857, 859, 861, 1217, 1219, 1221, 1223], "hwio": [851, 858], "unequ": [851, 858], "unsqueez": [851, 858, 862, 865], "ndhwc": [851, 860, 861, 1217, 1222, 1223], "volum": [851, 860], "fd": [851, 860, 861], "ncdhw": [851, 860, 861, 1217, 1222, 1223], "dhwio": [851, 860], "258": [851, 861], "depthwis": [851, 862, 865, 1217, 1224], "hwi": [851, 862, 865], "prob": [851, 867, 1091, 1092, 1217, 1225], "randomli": [851, 867, 1217, 1225], "bernoulli": [851, 867], "out_featur": [851, 867, 868], "incom": [851, 868], "outer_batch_shap": [851, 868], "inner_batch_shap": [851, 868], "in_featur": [851, 868], "cell": [851, 869, 1217, 1226], "num_queri": [851, 870, 871], "x_feat_dim": [851, 870], "num_kei": [851, 870, 871], "cont_feat_dim": [851, 870], "numhead": [851, 870], "feat_dim": [851, 870, 871], "out_feat_dim": [851, 870], "score": [851, 871], "decomposit": [872, 873, 876, 936, 939, 950, 954], "vif": [872, 878, 881], "293": [872, 883, 886], "46997": [872, 883, 886], "eigendecomposit": [872, 893, 896], "qlq\u1d40": [872, 893, 896], "orthogon": [872, 893, 896], "eig": [872, 893, 896], "eigenvalu": [872, 893, 896, 897, 899], "eigenvector": [872, 893, 896], "prepend": [872, 905, 908], "defici": [872, 918, 921], "array_lik": [872, 928, 931], "105": [872, 928, 931, 985, 986, 989], "112": [872, 928, 931, 1150, 1151, 1154], "104": [872, 928, 931, 1150, 1151, 1154], "120": [872, 928, 931], "moor": [872, 933, 935], "penros": [872, 933, 935], "pseudo": [872, 933, 935], "orthonorm": [872, 936, 939, 950, 954], "2d": [872, 941, 943, 1217, 1220, 1221, 1224], "logdet": [872, 941, 943], "coeffici": [872, 945, 948], "usvh": [872, 950, 954], "vh": [872, 950, 954], "hermitian": [872, 950, 954], "et": [872, 950, 954], "cetera": [872, 950, 954], "adjoint": [872, 950, 954], "reconstruct": [872, 950, 954, 1118, 1119, 1123, 1129, 1133], "reconstructed_x": [872, 950, 954], "ss": [872, 955, 959], "615": [872, 955, 959, 1118, 1119, 1123], "00e": [872, 955, 959], "38e": [872, 955, 959], "866": [872, 955, 959], "864": [872, 955, 959], "contract": [872, 960, 964, 1150, 1151, 1154], "doubl": [872, 960, 964], "manhattan": [872, 975, 979], "l2": [872, 975, 979], "euclidean": [872, 975, 979], "mathbf": [872, 980, 984], "mathbb": [872, 980, 984], "skew": [872, 980, 984], "discret": [985, 991, 994], "35667497": [985, 991, 994], "793291": [985, 996, 999], "512926": [985, 996, 999], "before_1": [1001, 1011, 1014, 1059, 1062], "after_1": [1001, 1011, 1014, 1059, 1062], "before_n": [1001, 1011, 1014, 1059, 1062], "after_n": [1001, 1011, 1014, 1059, 1062], "insert": [1001, 1015, 1018, 1067, 1072, 1113, 1114], "manipulation_funct": [1001, 1015, 1018], "reorder": [1001, 1019, 1022], "permut": [1001, 1023, 1026, 1051, 1054], "repetit": [1001, 1027, 1030, 1055, 1058], "famili": [1001, 1047, 1050], "intxx": [1001, 1047, 1050], "floatxx": [1001, 1047, 1050], "fomaml_step": 1063, "inner_cost_fn": [1063, 1064, 1065], "outer_cost_fn": [1063, 1064, 1065], "inner_grad_step": [1063, 1064, 1065, 1066], "inner_learning_r": [1063, 1064, 1065, 1066], "inner_optimization_step": [1063, 1064, 1065, 1066], "inner_batch_fn": [1063, 1064, 1065], "outer_batch_fn": [1063, 1064, 1065], "average_across_step": [1063, 1064, 1065], "inner_v": [1063, 1064, 1065], "keep_inner_v": [1063, 1064, 1065], "outer_v": [1063, 1064, 1065], "keep_outer_v": [1063, 1064, 1065], "return_inner_v": [1063, 1064, 1065, 1066], "num_task": [1063, 1064, 1065, 1066], "maml": [1063, 1064, 1065], "recev": [1063, 1064, 1065], "0x7fd7d1efd430": [1063, 1064, 1065, 1066], "maml_step": 1063, "rece": [1063, 1065], "reptile_step": 1063, "cost_fn": [1063, 1066], "reptil": [1063, 1066], "receivng": [1063, 1066], "all_nested_indic": 1067, "include_nest": [1067, 1068], "_index": [1067, 1068, 1078], "_base": [1067, 1068, 1077, 1078], "copy_nest": 1067, "to_mut": [1067, 1069, 1079], "mutabl": [1067, 1069, 1079], "insert_into_nest_at_index": 1067, "insert_into_nest_at_indic": 1067, "map_nest_at_index": 1067, "map_nest_at_indic": 1067, "multi_index_nest": 1067, "nested_ani": 1067, "check_nest": [1067, 1077, 1078], "conditon": [1067, 1077, 1078], "nested_indices_wher": 1067, "stop_after_n_found": [1067, 1078], "_depth": [1067, 1079], "_tuple_check_fn": [1067, 1079], "_list_check_fn": [1067, 1079], "_dict_check_fn": [1067, 1079], "nested_multi_map": 1067, "nest0": [1067, 1080], "ivy_arrai": [1067, 1080], "funciton": [1067, 1080], "prune_nest_at_index": 1067, "prune_nest_at_indic": 1067, "set_nest_at_index": 1067, "set_nest_at_indic": 1067, "111": [1067, 1084], "xyz": [1067, 1084], "pqr": [1067, 1084], "mini": [1085, 1086, 1089, 1231, 1232], "772": [1085, 1086, 1089], "796": [1085, 1086, 1089], "population_s": [1091, 1092], "num_sampl": [1091, 1092], "home": [1091, 1092, 1098, 1101, 1233, 1234, 1235, 1236, 1238], "uniformli": [1091, 1093, 1096, 1103, 1106], "22346112": [1091, 1098, 1101], "0922": [1091, 1098, 1101], "515": [1091, 1098, 1101], "361": [1091, 1098, 1101], "596": [1091, 1098, 1101], "247": [1091, 1098, 1101], "0426": [1091, 1098, 1101], "627": [1091, 1098, 1101], "9213753": [1091, 1098, 1101], "12818667": [1091, 1098, 1101], "799": [1091, 1098, 1101], "469": [1091, 1098, 1101], "287": [1091, 1098, 1101], "0366": [1091, 1098, 1101], "26431865": [1091, 1103, 1106], "475": [1091, 1103, 1106], "878": [1091, 1103, 1106], "861": [1091, 1103, 1106], "929": [1091, 1103, 1106], "545": [1091, 1103, 1106], "789": [1091, 1103, 1106], "519": [1091, 1103, 1106], "0435": [1091, 1103, 1106], "381": [1091, 1103, 1106, 1118, 1119, 1123], "4608004": [1091, 1103, 1106], "8458502": [1091, 1103, 1106], "occurr": [1113, 1114, 1115, 1118, 1119, 1123], "x_j": [1118, 1119, 1123, 1124, 1128, 1134, 1138], "impli": [1118, 1119, 1123, 1124, 1128, 1134, 1138], "inverse_indic": [1118, 1119, 1123, 1129, 1133], "aggreg": [1118, 1119, 1123], "fourth": [1118, 1119, 1123], "607": [1118, 1119, 1123], "735": [1118, 1119, 1123], "0396": [1118, 1119, 1123], "166": [1118, 1119, 1123], "58": [1118, 1119, 1123], "828": [1118, 1119, 1123], "144": [1118, 1119, 1123], "40501155": [1118, 1119, 1123], "77361575": [1118, 1119, 1123], "97776199": [1118, 1119, 1123], "36831157": [1118, 1119, 1123], "89148434": [1118, 1119, 1123], "9512272": [1118, 1119, 1123], "67542176": [1118, 1119, 1123], "41985657": [1118, 1119, 1123], "23478023": [1118, 1119, 1123], "1141": [1118, 1119, 1123], "8101": [1118, 1119, 1123], "9298": [1118, 1119, 1123], "8460": [1118, 1119, 1123], "2119": [1118, 1119, 1123], "3519": [1118, 1119, 1123], "6252": [1118, 1119, 1123], "4033": [1118, 1119, 1123], "7443": [1118, 1119, 1123], "2577": [1118, 1119, 1123], "3707": [1118, 1119, 1123], "0545": [1118, 1119, 1123], "3238": [1118, 1119, 1123], "5944": [1118, 1119, 1123], "0775": [1118, 1119, 1123], "4327": [1118, 1119, 1123], "176": [1118, 1119, 1123], "889": [1118, 1119, 1123], "175": [1118, 1119, 1123], "763": [1118, 1119, 1123], "071": [1118, 1119, 1123], "262": [1118, 1119, 1123], "456": [1118, 1119, 1123], "114": [1118, 1119, 1123], "349": [1118, 1119, 1123], "594": [1118, 1119, 1123], "335": [1118, 1119, 1123], "212": [1118, 1119, 1123], "457": [1118, 1119, 1123], "827": [1118, 1119, 1123], "set_funct": [1118, 1124, 1128], "ascend": [1139, 1140, 1143], "einstein": [1150, 1151, 1154], "summat": [1150, 1151, 1154], "seq": [1150, 1151, 1154], "jk": [1150, 1151, 1154], "ik": [1150, 1151, 1154], "126": [1150, 1151, 1154], "510": [1150, 1151, 1154], "108": [1150, 1151, 1154], "117": [1150, 1151, 1154], "sentinel": [1150, 1155, 1158, 1163, 1166], "8164966": [1150, 1171, 1174], "simplicit": [1184, 1185, 1188], "grow": 1195, "ai": 1195, "got": 1195, "colab": 1195, "sharp": 1195, "weekli": 1195, "immedi": 1195, "favorit": 1195, "jax_concat": 1195, "tf_concat": 1195, "np_concat": 1195, "mx_concat": 1195, "torch_concat": 1195, "get_devic": 1195, "reduce_prod": 1195, "gradient_imag": 1195, "linalg": 1195, "bilinear_resampl": 1195, "stack_imag": 1195, "neural_net": 1195, "ecosystem": [1195, 1201], "popular": [1195, 1201], "acceler": 1195, "articl": 1195, "lenton2021ivi": 1195, "inter": 1195, "lenton": 1195, "daniel": 1195, "pardo": 1195, "fabio": 1195, "falck": 1195, "fabian": 1195, "jame": 1195, "stephen": 1195, "clark": 1195, "ronald": 1195, "journal": 1195, "arxiv": 1195, "preprint": 1195, "2102": 1195, "02886": 1195, "2021": 1195, "add_array_spec": 1198, "fn_array_spec": 1198, "geglu": 1203, "native_modul": [1206, 1207], "native_module_class": [1206, 1207], "firstlayersiren": 1208, "kaimingnorm": [1208, 1212], "negative_slop": 1208, "Ones": 1208, "siren": 1208, "w0": [1208, 1214], "filter_s": [1217, 1218, 1219], "1d": [1217, 1218, 1219], "conv1dtranspos": 1217, "filter_shap": [1217, 1220, 1221, 1222, 1223, 1224], "conv2dtranspos": 1217, "conv3dtranspos": 1217, "depthwiseconv2d": 1217, "num_channel": [1217, 1224], "bernoul": [1217, 1225], "num_lay": [1217, 1226], "return_sequ": [1217, 1226], "return_st": [1217, 1226], "get_initial_st": [1217, 1226], "dens": [1217, 1227], "multiheadattent": 1217, "query_dim": [1217, 1228], "head_dim": [1217, 1228], "dropout_r": [1217, 1228], "context_dim": [1217, 1228], "with_to_q_fn": [1217, 1228], "with_to_kv_fn": [1217, 1228], "with_to_out_fn": [1217, 1228], "build_mod": [1217, 1228, 1229, 1230], "on_init": [1217, 1228, 1229, 1230], "__call__": [1217, 1228, 1229, 1230], "store_var": [1229, 1230], "arg_stateful_idx": [1229, 1230], "kwarg_stateful_idx": [1229, 1230], "fallback_to_non_compil": [1229, 1230, 1233, 1237], "with_partial_v": [1229, 1230], "initialz": [1229, 1230], "from_cal": [1229, 1230], "check_submod_ret": [1229, 1230], "get_mod_kei": [1229, 1230], "top_mod": [1229, 1230], "mod_depth": [1229, 1230], "mod_height": [1229, 1230], "mod_with_top_mod_key_chain": [1229, 1230], "save_weight": [1229, 1230], "weights_path": [1229, 1230], "show_mod_in_top_mod": [1229, 1230], "upper_depth": [1229, 1230], "lower_depth": [1229, 1230], "show_structur": [1229, 1230], "show_v_in_top_v": [1229, 1230], "sub_mod": [1229, 1230], "show_v": [1229, 1230], "track_submod_call_ord": [1229, 1230], "track_submod_ret": [1229, 1230], "v_with_top_v_key_chain": [1229, 1230], "layernorm": 1231, "normalized_shap": [1231, 1232], "elementwise_affin": [1231, 1232], "trail": [1231, 1232], "affin": [1231, 1232], "0x7fd7d1fd6430": [1233, 1236], "init_on_first_step": [1233, 1237], "ignore_miss": [1233, 1237], "overridden": [1233, 1237], "sgd": 1233, "stochast": [1233, 1238], "0x7fd7d1fd6160": [1233, 1238], "sub_modul": [1239, 1240]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [34, 0, 0, "-", "creation"], [36, 0, 0, "-", "data_type"], [38, 0, 0, "-", "device"], [40, 0, 0, "-", "elementwise"], [42, 0, 0, "-", "general"], [44, 0, 0, "-", "gradients"], [46, 0, 0, "-", "image"], [48, 0, 0, "-", "layers"], [50, 0, 0, "-", "linear_algebra"], [52, 0, 0, "-", "losses"], [54, 0, 0, "-", "manipulation"], [56, 0, 0, "-", "norms"], [58, 0, 0, "-", "random"], [60, 0, 0, "-", "searching"], [62, 0, 0, "-", "set"], [64, 0, 0, "-", "sorting"], [66, 0, 0, "-", "statistical"], [68, 0, 0, "-", "utility"], [70, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "args_to_ivy"], [27, 2, 1, "", "args_to_native"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "default_uint_dtype"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_devices"], [27, 2, 1, "", "function_supported_devices_and_dtypes"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_devices"], [27, 2, 1, "", "function_unsupported_devices_and_dtypes"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_array_mode"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_array_mode"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_default_uint_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_ivy"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_array_mode"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_default_uint_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[409, 4, 1, "", "abs"], [414, 4, 1, "", "acos"], [419, 4, 1, "", "acosh"], [809, 4, 1, "", "adam_step"], [424, 4, 1, "", "add"], [1186, 4, 1, "", "all"], [696, 4, 1, "", "all_equal"], [1191, 4, 1, "", "any"], [1141, 4, 1, "", "argsort"], [214, 4, 1, "", "asarray"], [429, 4, 1, "", "asin"], [434, 4, 1, "", "asinh"], [287, 4, 1, "", "astype"], [439, 4, 1, "", "atan"], [444, 4, 1, "", "atan2"], [449, 4, 1, "", "atanh"], [987, 4, 1, "", "binary_cross_entropy"], [454, 4, 1, "", "bitwise_and"], [459, 4, 1, "", "bitwise_invert"], [464, 4, 1, "", "bitwise_left_shift"], [469, 4, 1, "", "bitwise_or"], [474, 4, 1, "", "bitwise_right_shift"], [479, 4, 1, "", "bitwise_xor"], [292, 4, 1, "", "broadcast_arrays"], [297, 4, 1, "", "broadcast_to"], [302, 4, 1, "", "can_cast"], [484, 4, 1, "", "ceil"], [874, 4, 1, "", "cholesky"], [1003, 4, 1, "", "clip"], [708, 4, 1, "", "clip_vector_norm"], [1008, 4, 1, "", "concat"], [1012, 4, 1, "", "constant_pad"], [853, 4, 1, "", "conv1d"], [489, 4, 1, "", "cos"], [494, 4, 1, "", "cosh"], [879, 4, 1, "", "cross"], [992, 4, 1, "", "cross_entropy"], [863, 4, 1, "", "depthwise_conv2d"], [884, 4, 1, "", "det"], [380, 4, 1, "", "dev"], [889, 4, 1, "", "diagonal"], [499, 4, 1, "", "divide"], [314, 4, 1, "", "dtype"], [894, 4, 1, "", "eigh"], [898, 4, 1, "", "eigvalsh"], [719, 4, 1, "", "einops_rearrange"], [724, 4, 1, "", "einops_reduce"], [729, 4, 1, "", "einops_repeat"], [1152, 4, 1, "", "einsum"], [219, 4, 1, "", "empty_like"], [504, 4, 1, "", "equal"], [509, 4, 1, "", "erf"], [514, 4, 1, "", "exp"], [1016, 4, 1, "", "expand_dims"], [519, 4, 1, "", "expm1"], [320, 4, 1, "", "finfo"], [1020, 4, 1, "", "flip"], [524, 4, 1, "", "floor"], [529, 4, 1, "", "floor_divide"], [227, 4, 1, "", "from_dlpack"], [233, 4, 1, "", "full_like"], [739, 4, 1, "", "gather"], [744, 4, 1, "", "gather_nd"], [172, 4, 1, "", "gelu"], [534, 4, 1, "", "greater"], [539, 4, 1, "", "greater_equal"], [331, 4, 1, "", "iinfo"], [901, 4, 1, "", "inv"], [337, 4, 1, "", "is_bool_dtype"], [342, 4, 1, "", "is_float_dtype"], [347, 4, 1, "", "is_int_dtype"], [352, 4, 1, "", "is_uint_dtype"], [825, 4, 1, "", "is_variable"], [544, 4, 1, "", "isfinite"], [549, 4, 1, "", "isinf"], [554, 4, 1, "", "isnan"], [1087, 4, 1, "", "layer_norm"], [177, 4, 1, "", "leaky_relu"], [559, 4, 1, "", "less"], [564, 4, 1, "", "less_equal"], [569, 4, 1, "", "log"], [574, 4, 1, "", "log10"], [579, 4, 1, "", "log1p"], [584, 4, 1, "", "log2"], [589, 4, 1, "", "logaddexp"], [594, 4, 1, "", "logical_and"], [599, 4, 1, "", "logical_not"], [604, 4, 1, "", "logical_or"], [609, 4, 1, "", "logical_xor"], [906, 4, 1, "", "matmul"], [910, 4, 1, "", "matrix_norm"], [919, 4, 1, "", "matrix_rank"], [924, 4, 1, "", "matrix_transpose"], [1156, 4, 1, "", "max"], [1160, 4, 1, "", "mean"], [244, 4, 1, "", "meshgrid"], [1164, 4, 1, "", "min"], [619, 4, 1, "", "multiply"], [249, 4, 1, "", "native_array"], [624, 4, 1, "", "negative"], [629, 4, 1, "", "not_equal"], [257, 4, 1, "", "ones_like"], [929, 4, 1, "", "outer"], [1024, 4, 1, "", "permute_dims"], [934, 4, 1, "", "pinv"], [634, 4, 1, "", "positive"], [639, 4, 1, "", "pow"], [1168, 4, 1, "", "prod"], [937, 4, 1, "", "qr"], [1094, 4, 1, "", "randint"], [1099, 4, 1, "", "random_normal"], [1104, 4, 1, "", "random_uniform"], [182, 4, 1, "", "relu"], [644, 4, 1, "", "remainder"], [1028, 4, 1, "", "repeat"], [1033, 4, 1, "", "reshape"], [358, 4, 1, "", "result_type"], [1038, 4, 1, "", "roll"], [649, 4, 1, "", "round"], [187, 4, 1, "", "sigmoid"], [654, 4, 1, "", "sign"], [659, 4, 1, "", "sin"], [664, 4, 1, "", "sinh"], [192, 4, 1, "", "softmax"], [197, 4, 1, "", "softplus"], [946, 4, 1, "", "solve"], [1146, 4, 1, "", "sort"], [997, 4, 1, "", "sparse_cross_entropy"], [669, 4, 1, "", "sqrt"], [674, 4, 1, "", "square"], [1044, 4, 1, "", "squeeze"], [784, 4, 1, "", "stable_divide"], [1048, 4, 1, "", "stack"], [1172, 4, 1, "", "std"], [680, 4, 1, "", "subtract"], [1176, 4, 1, "", "sum"], [952, 4, 1, "", "svd"], [957, 4, 1, "", "svdvals"], [1052, 4, 1, "", "swapaxes"], [685, 4, 1, "", "tan"], [203, 4, 1, "", "tanh"], [962, 4, 1, "", "tensordot"], [1056, 4, 1, "", "tile"], [400, 4, 1, "", "to_device"], [796, 4, 1, "", "to_numpy"], [967, 4, 1, "", "trace"], [263, 4, 1, "", "tril"], [268, 4, 1, "", "triu"], [691, 4, 1, "", "trunc"], [1121, 4, 1, "", "unique_all"], [1126, 4, 1, "", "unique_counts"], [1131, 4, 1, "", "unique_inverse"], [1136, 4, 1, "", "unique_values"], [1181, 4, 1, "", "var"], [846, 4, 1, "", "variable"], [972, 4, 1, "", "vecdot"], [977, 4, 1, "", "vector_norm"], [982, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1060, 4, 1, "", "zero_pad"], [276, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_ivy"], [31, 4, 1, "", "args_to_native"], [32, 4, 1, "", "to_ivy"], [33, 4, 1, "", "to_native"]], "ivy.array.creation": [[35, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[35, 2, 1, "", "asarray"], [35, 2, 1, "", "empty_like"], [35, 2, 1, "", "from_dlpack"], [35, 2, 1, "", "full_like"], [35, 2, 1, "", "meshgrid"], [35, 2, 1, "", "native_array"], [35, 2, 1, "", "ones_like"], [35, 2, 1, "", "tril"], [35, 2, 1, "", "triu"], [35, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[37, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[37, 2, 1, "", "astype"], [37, 2, 1, "", "broadcast_arrays"], [37, 2, 1, "", "broadcast_to"], [37, 2, 1, "", "can_cast"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "finfo"], [37, 2, 1, "", "iinfo"], [37, 2, 1, "", "is_bool_dtype"], [37, 2, 1, "", "is_float_dtype"], [37, 2, 1, "", "is_int_dtype"], [37, 2, 1, "", "is_uint_dtype"], [37, 2, 1, "", "result_type"]], "ivy.array.device": [[39, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[39, 2, 1, "", "dev"], [39, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[41, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[41, 2, 1, "", "abs"], [41, 2, 1, "", "acos"], [41, 2, 1, "", "acosh"], [41, 2, 1, "", "add"], [41, 2, 1, "", "asin"], [41, 2, 1, "", "asinh"], [41, 2, 1, "", "atan"], [41, 2, 1, "", "atan2"], [41, 2, 1, "", "atanh"], [41, 2, 1, "", "bitwise_and"], [41, 2, 1, "", "bitwise_invert"], [41, 2, 1, "", "bitwise_left_shift"], [41, 2, 1, "", "bitwise_or"], [41, 2, 1, "", "bitwise_right_shift"], [41, 2, 1, "", "bitwise_xor"], [41, 2, 1, "", "ceil"], [41, 2, 1, "", "cos"], [41, 2, 1, "", "cosh"], [41, 2, 1, "", "divide"], [41, 2, 1, "", "equal"], [41, 2, 1, "", "erf"], [41, 2, 1, "", "exp"], [41, 2, 1, "", "expm1"], [41, 2, 1, "", "floor"], [41, 2, 1, "", "floor_divide"], [41, 2, 1, "", "greater"], [41, 2, 1, "", "greater_equal"], [41, 2, 1, "", "isfinite"], [41, 2, 1, "", "isinf"], [41, 2, 1, "", "isnan"], [41, 2, 1, "", "less"], [41, 2, 1, "", "less_equal"], [41, 2, 1, "", "log"], [41, 2, 1, "", "log10"], [41, 2, 1, "", "log1p"], [41, 2, 1, "", "log2"], [41, 2, 1, "", "logaddexp"], [41, 2, 1, "", "logical_and"], [41, 2, 1, "", "logical_not"], [41, 2, 1, "", "logical_or"], [41, 2, 1, "", "logical_xor"], [41, 2, 1, "", "multiply"], [41, 2, 1, "", "negative"], [41, 2, 1, "", "not_equal"], [41, 2, 1, "", "positive"], [41, 2, 1, "", "pow"], [41, 2, 1, "", "remainder"], [41, 2, 1, "", "round"], [41, 2, 1, "", "sign"], [41, 2, 1, "", "sin"], [41, 2, 1, "", "sinh"], [41, 2, 1, "", "sqrt"], [41, 2, 1, "", "square"], [41, 2, 1, "", "subtract"], [41, 2, 1, "", "tan"], [41, 2, 1, "", "tanh"], [41, 2, 1, "", "trunc"]], "ivy.array.general": [[43, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[43, 2, 1, "", "all_equal"], [43, 2, 1, "", "clip_vector_norm"], [43, 2, 1, "", "einops_rearrange"], [43, 2, 1, "", "einops_reduce"], [43, 2, 1, "", "einops_repeat"], [43, 2, 1, "", "gather"], [43, 2, 1, "", "gather_nd"], [43, 2, 1, "", "stable_divide"], [43, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[45, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[45, 2, 1, "", "adam_step"], [45, 2, 1, "", "is_variable"], [45, 2, 1, "", "variable"]], "ivy.array.image": [[47, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[49, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[49, 2, 1, "", "conv1d"], [49, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[51, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[51, 2, 1, "", "cholesky"], [51, 2, 1, "", "cross"], [51, 2, 1, "", "det"], [51, 2, 1, "", "diagonal"], [51, 2, 1, "", "eigh"], [51, 2, 1, "", "eigvalsh"], [51, 2, 1, "", "inv"], [51, 2, 1, "", "matmul"], [51, 2, 1, "", "matrix_norm"], [51, 2, 1, "", "matrix_rank"], [51, 2, 1, "", "matrix_transpose"], [51, 2, 1, "", "outer"], [51, 2, 1, "", "pinv"], [51, 2, 1, "", "qr"], [51, 2, 1, "", "solve"], [51, 2, 1, "", "svd"], [51, 2, 1, "", "svdvals"], [51, 2, 1, "", "tensordot"], [51, 2, 1, "", "trace"], [51, 2, 1, "", "vecdot"], [51, 2, 1, "", "vector_norm"], [51, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[53, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[53, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "cross_entropy"], [53, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[55, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[55, 2, 1, "", "clip"], [55, 2, 1, "", "concat"], [55, 2, 1, "", "constant_pad"], [55, 2, 1, "", "expand_dims"], [55, 2, 1, "", "flip"], [55, 2, 1, "", "permute_dims"], [55, 2, 1, "", "repeat"], [55, 2, 1, "", "reshape"], [55, 2, 1, "", "roll"], [55, 2, 1, "", "squeeze"], [55, 2, 1, "", "stack"], [55, 2, 1, "", "swapaxes"], [55, 2, 1, "", "tile"], [55, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[57, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[57, 2, 1, "", "layer_norm"]], "ivy.array.random": [[59, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[59, 2, 1, "", "randint"], [59, 2, 1, "", "random_normal"], [59, 2, 1, "", "random_uniform"]], "ivy.array.searching": [[61, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[63, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[63, 2, 1, "", "unique_all"], [63, 2, 1, "", "unique_counts"], [63, 2, 1, "", "unique_inverse"], [63, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[65, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[65, 2, 1, "", "argsort"], [65, 2, 1, "", "sort"]], "ivy.array.statistical": [[67, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[67, 2, 1, "", "einsum"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "min"], [67, 2, 1, "", "prod"], [67, 2, 1, "", "std"], [67, 2, 1, "", "sum"], [67, 2, 1, "", "var"]], "ivy.array.utility": [[69, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[69, 2, 1, "", "all"], [69, 2, 1, "", "any"]], "ivy.array.wrapping": [[71, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [160, 0, 0, "-", "func_wrapper"], [1198, 0, 0, "-", "inspection"], [1202, 0, 0, "-", "stateful"], [1242, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[73, 0, 0, "-", "activations"], [75, 0, 0, "-", "base"], [77, 0, 0, "-", "container"], [79, 0, 0, "-", "conversions"], [84, 0, 0, "-", "creation"], [86, 0, 0, "-", "data_type"], [88, 0, 0, "-", "device"], [90, 0, 0, "-", "elementwise"], [92, 0, 0, "-", "general"], [94, 0, 0, "-", "gradients"], [96, 0, 0, "-", "image"], [98, 0, 0, "-", "layers"], [100, 0, 0, "-", "linear_algebra"], [102, 0, 0, "-", "losses"], [104, 0, 0, "-", "manipulation"], [106, 0, 0, "-", "norms"], [108, 0, 0, "-", "random"], [110, 0, 0, "-", "searching"], [112, 0, 0, "-", "set"], [114, 0, 0, "-", "sorting"], [116, 0, 0, "-", "statistical"], [118, 0, 0, "-", "utility"], [120, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[74, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[74, 2, 1, "", "gelu"], [74, 2, 1, "", "leaky_relu"], [74, 2, 1, "", "relu"], [74, 2, 1, "", "sigmoid"], [74, 2, 1, "", "softmax"], [74, 2, 1, "", "softplus"], [74, 2, 1, "", "static_gelu"], [74, 2, 1, "", "static_leaky_relu"], [74, 2, 1, "", "static_relu"], [74, 2, 1, "", "static_sigmoid"], [74, 2, 1, "", "static_softmax"], [74, 2, 1, "", "static_softplus"], [74, 2, 1, "", "static_tanh"], [74, 2, 1, "", "tanh"]], "ivy.container.base": [[76, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[76, 2, 1, "", "__getitem__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__setitem__"], [76, 2, 1, "", "all_false"], [76, 2, 1, "", "all_key_chains"], [76, 2, 1, "", "all_true"], [76, 2, 1, "", "arrays_as_lists"], [76, 2, 1, "", "as_arrays"], [76, 2, 1, "", "as_bools"], [76, 2, 1, "", "as_variables"], [76, 2, 1, "", "assert_contains_sub_container"], [76, 2, 1, "", "assert_contains_sub_structure"], [76, 2, 1, "", "assert_identical"], [76, 2, 1, "", "assert_identical_structure"], [76, 2, 1, "", "at_key_chain"], [76, 2, 1, "", "at_key_chains"], [76, 2, 1, "", "at_keys"], [76, 2, 1, "", "clip"], [76, 2, 1, "", "combine"], [76, 2, 1, "", "common_key_chains"], [76, 3, 1, "", "config"], [76, 2, 1, "", "contains_sub_container"], [76, 2, 1, "", "contains_sub_structure"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "create_if_absent"], [76, 2, 1, "", "cutoff_at_depth"], [76, 2, 1, "", "cutoff_at_height"], [76, 2, 1, "", "deep_copy"], [76, 3, 1, "", "dev"], [76, 2, 1, "", "dev_clone"], [76, 2, 1, "", "dev_dist"], [76, 3, 1, "", "dev_str"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "dtype"], [76, 2, 1, "", "find_sub_container"], [76, 2, 1, "", "find_sub_structure"], [76, 2, 1, "", "flatten_key_chain"], [76, 2, 1, "", "flatten_key_chains"], [76, 2, 1, "", "format_key_chains"], [76, 2, 1, "", "from_disk_as_hdf5"], [76, 2, 1, "", "from_disk_as_json"], [76, 2, 1, "", "from_disk_as_pickled"], [76, 2, 1, "", "from_flat_list"], [76, 2, 1, "", "from_numpy"], [76, 2, 1, "", "h5_file_size"], [76, 2, 1, "", "handle_inplace"], [76, 2, 1, "", "has_key"], [76, 2, 1, "", "has_key_chain"], [76, 2, 1, "", "has_nans"], [76, 2, 1, "", "identical"], [76, 2, 1, "", "identical_array_shapes"], [76, 2, 1, "", "identical_configs"], [76, 2, 1, "", "identical_structure"], [76, 2, 1, "", "if_exists"], [76, 2, 1, "", "inplace_update"], [76, 3, 1, "", "ivy"], [76, 2, 1, "", "key_chains_containing"], [76, 2, 1, "", "list_join"], [76, 2, 1, "", "list_stack"], [76, 2, 1, "", "map"], [76, 2, 1, "", "map_conts"], [76, 2, 1, "", "matrix_norm"], [76, 3, 1, "", "max_depth"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "multi_map"], [76, 2, 1, "", "multi_map_in_static_method"], [76, 2, 1, "", "num_arrays"], [76, 2, 1, "", "overwrite_at_key_chain"], [76, 2, 1, "", "overwrite_at_key_chains"], [76, 2, 1, "", "prune_empty"], [76, 2, 1, "", "prune_key_chain"], [76, 2, 1, "", "prune_key_chains"], [76, 2, 1, "", "prune_key_from_key_chains"], [76, 2, 1, "", "prune_keys"], [76, 2, 1, "", "prune_keys_from_key_chains"], [76, 2, 1, "", "reduce"], [76, 2, 1, "", "remove_key_length_limit"], [76, 2, 1, "", "remove_print_limit"], [76, 2, 1, "", "reshape_like"], [76, 2, 1, "", "restructure"], [76, 2, 1, "", "restructure_key_chains"], [76, 2, 1, "", "set_at_key_chain"], [76, 2, 1, "", "set_at_key_chains"], [76, 2, 1, "", "set_at_keys"], [76, 2, 1, "", "set_framework"], [76, 2, 1, "", "set_ivy_backend"], [76, 3, 1, "", "shape"], [76, 3, 1, "", "shapes"], [76, 2, 1, "", "show"], [76, 2, 1, "", "show_sub_container"], [76, 2, 1, "", "shuffle"], [76, 2, 1, "", "shuffle_h5_file"], [76, 2, 1, "", "size_ordered_arrays"], [76, 2, 1, "", "slice_keys"], [76, 2, 1, "", "slice_via_key"], [76, 2, 1, "", "sort_by_key"], [76, 2, 1, "", "split"], [76, 2, 1, "", "stop_gradients"], [76, 2, 1, "", "structural_diff"], [76, 2, 1, "", "to_device"], [76, 2, 1, "", "to_dict"], [76, 2, 1, "", "to_disk_as_hdf5"], [76, 2, 1, "", "to_disk_as_json"], [76, 2, 1, "", "to_disk_as_pickled"], [76, 2, 1, "", "to_flat_list"], [76, 2, 1, "", "to_iterator"], [76, 2, 1, "", "to_iterator_keys"], [76, 2, 1, "", "to_iterator_values"], [76, 2, 1, "", "to_jsonable"], [76, 2, 1, "", "to_list"], [76, 2, 1, "", "to_numpy"], [76, 2, 1, "", "to_raw"], [76, 2, 1, "", "trim_key"], [76, 2, 1, "", "try_kc"], [76, 2, 1, "", "unify"], [76, 2, 1, "", "unstack"], [76, 2, 1, "", "update_config"], [76, 2, 1, "", "vector_norm"], [76, 2, 1, "", "with_default_key_color"], [76, 2, 1, "", "with_entries_as_lists"], [76, 2, 1, "", "with_ivy_backend"], [76, 2, 1, "", "with_key_length_limit"], [76, 2, 1, "", "with_print_indent"], [76, 2, 1, "", "with_print_limit"], [76, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[78, 1, 1, "", "Container"]], "ivy.container.container.Container": [[78, 2, 1, "", "__add__"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "__radd__"], [78, 2, 1, "", "arange"], [78, 2, 1, "", "arg_info"], [78, 2, 1, "", "arg_names"], [78, 2, 1, "", "argmax"], [78, 2, 1, "", "argmin"], [78, 2, 1, "", "array"], [78, 2, 1, "", "array_equal"], [78, 2, 1, "", "arrays_equal"], [78, 2, 1, "", "as_ivy_dev"], [78, 2, 1, "", "as_ivy_dtype"], [78, 2, 1, "", "as_native_dev"], [78, 2, 1, "", "as_native_dtype"], [78, 2, 1, "", "asarray"], [78, 2, 1, "", "assert_supports_inplace"], [78, 2, 1, "", "cache_fn"], [78, 2, 1, "", "clear_mem_on_dev"], [78, 2, 1, "", "clip_matrix_norm"], [78, 2, 1, "", "closest_valid_dtype"], [78, 2, 1, "", "container_types"], [78, 2, 1, "", "conv1d_transpose"], [78, 2, 1, "", "conv2d"], [78, 2, 1, "", "conv2d_transpose"], [78, 2, 1, "", "conv3d"], [78, 2, 1, "", "conv3d_transpose"], [78, 2, 1, "", "copy_array"], [78, 2, 1, "", "cumprod"], [78, 2, 1, "", "cumsum"], [78, 2, 1, "", "current_backend"], [78, 2, 1, "", "current_backend_str"], [78, 2, 1, "", "default"], [78, 2, 1, "", "default_device"], [78, 2, 1, "", "default_dtype"], [78, 2, 1, "", "default_float_dtype"], [78, 2, 1, "", "default_int_dtype"], [78, 2, 1, "", "default_uint_dtype"], [78, 2, 1, "", "dev_util"], [78, 2, 1, "", "dropout"], [78, 2, 1, "", "dtype_bits"], [78, 2, 1, "", "eigvalsh"], [78, 2, 1, "", "empty"], [78, 2, 1, "", "execute_with_gradients"], [78, 2, 1, "", "exists"], [78, 2, 1, "", "eye"], [78, 2, 1, "", "floormod"], [78, 2, 1, "", "fourier_encode"], [78, 2, 1, "", "full"], [78, 2, 1, "", "function_supported_devices"], [78, 2, 1, "", "function_supported_devices_and_dtypes"], [78, 2, 1, "", "function_supported_dtypes"], [78, 2, 1, "", "function_unsupported_devices"], [78, 2, 1, "", "function_unsupported_devices_and_dtypes"], [78, 2, 1, "", "function_unsupported_dtypes"], [78, 2, 1, "", "get_all_arrays_in_memory"], [78, 2, 1, "", "get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "get_array_mode"], [78, 2, 1, "", "get_min_base"], [78, 2, 1, "", "get_min_denominator"], [78, 2, 1, "", "get_nestable_mode"], [78, 2, 1, "", "get_num_dims"], [78, 2, 1, "", "get_referrers_recursive"], [78, 2, 1, "", "gpu_is_available"], [78, 2, 1, "", "handle_nestable"], [78, 2, 1, "", "handle_out_argument"], [78, 2, 1, "", "indices_where"], [78, 2, 1, "", "infer_device"], [78, 2, 1, "", "infer_dtype"], [78, 2, 1, "", "inplace_arrays_supported"], [78, 2, 1, "", "inplace_decrement"], [78, 2, 1, "", "inplace_increment"], [78, 2, 1, "", "inplace_variables_supported"], [78, 2, 1, "", "inputs_to_native_arrays"], [78, 2, 1, "", "invalid_dtype"], [78, 2, 1, "", "is_ivy_container"], [78, 2, 1, "", "linear"], [78, 2, 1, "", "linspace"], [78, 2, 1, "", "logspace"], [78, 2, 1, "", "lstm_update"], [78, 2, 1, "", "match_kwargs"], [78, 2, 1, "", "multi_head_attention"], [78, 2, 1, "", "multinomial"], [78, 2, 1, "", "multiprocessing"], [78, 2, 1, "", "nonzero"], [78, 2, 1, "", "num_arrays_in_memory"], [78, 2, 1, "", "num_cpu_cores"], [78, 2, 1, "", "num_gpus"], [78, 2, 1, "", "num_ivy_arrays_on_dev"], [78, 2, 1, "", "one_hot"], [78, 2, 1, "", "ones"], [78, 2, 1, "", "outputs_to_ivy_arrays"], [78, 2, 1, "", "percent_used_mem_on_dev"], [78, 2, 1, "", "pinv"], [78, 2, 1, "", "print_all_arrays_in_memory"], [78, 2, 1, "", "print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "promote_types"], [78, 2, 1, "", "queue_timeout"], [78, 2, 1, "", "scaled_dot_product_attention"], [78, 2, 1, "", "scatter_flat"], [78, 2, 1, "", "scatter_nd"], [78, 2, 1, "", "seed"], [78, 2, 1, "", "set_array_mode"], [78, 2, 1, "", "set_default_device"], [78, 2, 1, "", "set_default_dtype"], [78, 2, 1, "", "set_default_float_dtype"], [78, 2, 1, "", "set_default_int_dtype"], [78, 2, 1, "", "set_default_uint_dtype"], [78, 2, 1, "", "set_min_base"], [78, 2, 1, "", "set_min_denominator"], [78, 2, 1, "", "set_nestable_mode"], [78, 2, 1, "", "set_queue_timeout"], [78, 2, 1, "", "set_shape_array_mode"], [78, 2, 1, "", "set_split_factor"], [78, 2, 1, "", "set_tmp_dir"], [78, 2, 1, "", "set_with_grads"], [78, 2, 1, "", "shape_array_mode"], [78, 2, 1, "", "split_factor"], [78, 2, 1, "", "split_func_call"], [78, 2, 1, "", "stable_pow"], [78, 2, 1, "", "static_arg_info"], [78, 2, 1, "", "static_arg_names"], [78, 2, 1, "", "static_argmax"], [78, 2, 1, "", "static_argmin"], [78, 2, 1, "", "static_array"], [78, 2, 1, "", "static_array_equal"], [78, 2, 1, "", "static_arrays_equal"], [78, 2, 1, "", "static_as_ivy_dev"], [78, 2, 1, "", "static_as_ivy_dtype"], [78, 2, 1, "", "static_as_native_dev"], [78, 2, 1, "", "static_as_native_dtype"], [78, 2, 1, "", "static_assert_supports_inplace"], [78, 2, 1, "", "static_cache_fn"], [78, 2, 1, "", "static_clear_mem_on_dev"], [78, 2, 1, "", "static_clip_matrix_norm"], [78, 2, 1, "", "static_closest_valid_dtype"], [78, 2, 1, "", "static_concat"], [78, 2, 1, "", "static_constant_pad"], [78, 2, 1, "", "static_container_types"], [78, 2, 1, "", "static_conv1d_transpose"], [78, 2, 1, "", "static_conv2d"], [78, 2, 1, "", "static_conv2d_transpose"], [78, 2, 1, "", "static_conv3d"], [78, 2, 1, "", "static_conv3d_transpose"], [78, 2, 1, "", "static_copy_array"], [78, 2, 1, "", "static_cumprod"], [78, 2, 1, "", "static_cumsum"], [78, 2, 1, "", "static_current_backend"], [78, 2, 1, "", "static_current_backend_str"], [78, 2, 1, "", "static_default"], [78, 2, 1, "", "static_default_device"], [78, 2, 1, "", "static_default_dtype"], [78, 2, 1, "", "static_default_int_dtype"], [78, 2, 1, "", "static_default_uint_dtype"], [78, 2, 1, "", "static_dev_util"], [78, 2, 1, "", "static_dropout"], [78, 2, 1, "", "static_dtype_bits"], [78, 2, 1, "", "static_eigh"], [78, 2, 1, "", "static_eigvalsh"], [78, 2, 1, "", "static_einsum"], [78, 2, 1, "", "static_empty"], [78, 2, 1, "", "static_exists"], [78, 2, 1, "", "static_expand_dims"], [78, 2, 1, "", "static_flip"], [78, 2, 1, "", "static_floormod"], [78, 2, 1, "", "static_fourier_encode"], [78, 2, 1, "", "static_full"], [78, 2, 1, "", "static_function_supported_devices"], [78, 2, 1, "", "static_function_supported_devices_and_dtypes"], [78, 2, 1, "", "static_function_unsupported_devices"], [78, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [78, 2, 1, "", "static_get_all_arrays_in_memory"], [78, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_get_array_mode"], [78, 2, 1, "", "static_get_min_base"], [78, 2, 1, "", "static_get_min_denominator"], [78, 2, 1, "", "static_get_nestable_mode"], [78, 2, 1, "", "static_get_num_dims"], [78, 2, 1, "", "static_get_referrers_recursive"], [78, 2, 1, "", "static_gpu_is_available"], [78, 2, 1, "", "static_handle_nestable"], [78, 2, 1, "", "static_handle_out_argument"], [78, 2, 1, "", "static_has_nans"], [78, 2, 1, "", "static_indices_where"], [78, 2, 1, "", "static_infer_device"], [78, 2, 1, "", "static_infer_dtype"], [78, 2, 1, "", "static_inplace_arrays_supported"], [78, 2, 1, "", "static_inplace_decrement"], [78, 2, 1, "", "static_inplace_increment"], [78, 2, 1, "", "static_inplace_update"], [78, 2, 1, "", "static_inplace_variables_supported"], [78, 2, 1, "", "static_inputs_to_native_arrays"], [78, 2, 1, "", "static_invalid_dtype"], [78, 2, 1, "", "static_is_array"], [78, 2, 1, "", "static_is_ivy_array"], [78, 2, 1, "", "static_is_ivy_container"], [78, 2, 1, "", "static_is_native_array"], [78, 2, 1, "", "static_linear"], [78, 2, 1, "", "static_lstm_update"], [78, 2, 1, "", "static_match_kwargs"], [78, 2, 1, "", "static_matmul"], [78, 2, 1, "", "static_max"], [78, 2, 1, "", "static_maximum"], [78, 2, 1, "", "static_mean"], [78, 2, 1, "", "static_min"], [78, 2, 1, "", "static_multi_head_attention"], [78, 2, 1, "", "static_multinomial"], [78, 2, 1, "", "static_multiprocessing"], [78, 2, 1, "", "static_nonzero"], [78, 2, 1, "", "static_num_arrays_in_memory"], [78, 2, 1, "", "static_num_cpu_cores"], [78, 2, 1, "", "static_num_gpus"], [78, 2, 1, "", "static_num_ivy_arrays_on_dev"], [78, 2, 1, "", "static_one_hot"], [78, 2, 1, "", "static_outputs_to_ivy_arrays"], [78, 2, 1, "", "static_percent_used_mem_on_dev"], [78, 2, 1, "", "static_permute_dims"], [78, 2, 1, "", "static_pinv"], [78, 2, 1, "", "static_print_all_arrays_in_memory"], [78, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_prod"], [78, 2, 1, "", "static_promote_types"], [78, 2, 1, "", "static_queue_timeout"], [78, 2, 1, "", "static_scaled_dot_product_attention"], [78, 2, 1, "", "static_scatter_flat"], [78, 2, 1, "", "static_scatter_nd"], [78, 2, 1, "", "static_seed"], [78, 2, 1, "", "static_set_array_mode"], [78, 2, 1, "", "static_set_default_device"], [78, 2, 1, "", "static_set_default_dtype"], [78, 2, 1, "", "static_set_default_float_dtype"], [78, 2, 1, "", "static_set_default_int_dtype"], [78, 2, 1, "", "static_set_default_uint_dtype"], [78, 2, 1, "", "static_set_min_base"], [78, 2, 1, "", "static_set_min_denominator"], [78, 2, 1, "", "static_set_nestable_mode"], [78, 2, 1, "", "static_set_queue_timeout"], [78, 2, 1, "", "static_set_shape_array_mode"], [78, 2, 1, "", "static_set_split_factor"], [78, 2, 1, "", "static_set_tmp_dir"], [78, 2, 1, "", "static_set_with_grads"], [78, 2, 1, "", "static_shape"], [78, 2, 1, "", "static_shape_array_mode"], [78, 2, 1, "", "static_split"], [78, 2, 1, "", "static_split_factor"], [78, 2, 1, "", "static_split_func_call"], [78, 2, 1, "", "static_squeeze"], [78, 2, 1, "", "static_stable_pow"], [78, 2, 1, "", "static_stack"], [78, 2, 1, "", "static_std"], [78, 2, 1, "", "static_stop_gradient"], [78, 2, 1, "", "static_sum"], [78, 2, 1, "", "static_supports_inplace"], [78, 2, 1, "", "static_swapaxes"], [78, 2, 1, "", "static_tile"], [78, 2, 1, "", "static_tmp_dir"], [78, 2, 1, "", "static_to_ivy"], [78, 2, 1, "", "static_to_ivy_shape"], [78, 2, 1, "", "static_to_list"], [78, 2, 1, "", "static_to_native"], [78, 2, 1, "", "static_to_native_arrays_and_back"], [78, 2, 1, "", "static_to_native_shape"], [78, 2, 1, "", "static_to_scalar"], [78, 2, 1, "", "static_total_mem_on_dev"], [78, 2, 1, "", "static_tpu_is_available"], [78, 2, 1, "", "static_try_else_none"], [78, 2, 1, "", "static_type_promote_arrays"], [78, 2, 1, "", "static_unset_array_mode"], [78, 2, 1, "", "static_unset_default_device"], [78, 2, 1, "", "static_unset_default_dtype"], [78, 2, 1, "", "static_unset_default_float_dtype"], [78, 2, 1, "", "static_unset_default_int_dtype"], [78, 2, 1, "", "static_unset_default_uint_dtype"], [78, 2, 1, "", "static_unset_nestable_mode"], [78, 2, 1, "", "static_unset_shape_array_mode"], [78, 2, 1, "", "static_unset_with_grads"], [78, 2, 1, "", "static_unstack"], [78, 2, 1, "", "static_used_mem_on_dev"], [78, 2, 1, "", "static_valid_dtype"], [78, 2, 1, "", "static_value_is_nan"], [78, 2, 1, "", "static_variable_data"], [78, 2, 1, "", "static_where"], [78, 2, 1, "", "static_with_grads"], [78, 2, 1, "", "static_zero_pad"], [78, 2, 1, "", "stop_gradient"], [78, 2, 1, "", "supports_inplace"], [78, 2, 1, "", "tmp_dir"], [78, 2, 1, "", "to_ivy"], [78, 2, 1, "", "to_ivy_shape"], [78, 2, 1, "", "to_native"], [78, 2, 1, "", "to_native_arrays_and_back"], [78, 2, 1, "", "to_native_shape"], [78, 2, 1, "", "to_scalar"], [78, 2, 1, "", "total_mem_on_dev"], [78, 2, 1, "", "tpu_is_available"], [78, 2, 1, "", "try_else_none"], [78, 2, 1, "", "type_promote_arrays"], [78, 2, 1, "", "unset_array_mode"], [78, 2, 1, "", "unset_default_device"], [78, 2, 1, "", "unset_default_dtype"], [78, 2, 1, "", "unset_default_float_dtype"], [78, 2, 1, "", "unset_default_int_dtype"], [78, 2, 1, "", "unset_default_uint_dtype"], [78, 2, 1, "", "unset_nestable_mode"], [78, 2, 1, "", "unset_shape_array_mode"], [78, 2, 1, "", "unset_with_grads"], [78, 2, 1, "", "used_mem_on_dev"], [78, 2, 1, "", "valid_dtype"], [78, 2, 1, "", "value_is_nan"], [78, 2, 1, "", "variable_data"], [78, 2, 1, "", "where"], [78, 2, 1, "", "with_grads"], [78, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[410, 4, 1, "", "abs"], [415, 4, 1, "", "acos"], [420, 4, 1, "", "acosh"], [810, 4, 1, "", "adam_step"], [814, 4, 1, "", "adam_update"], [425, 4, 1, "", "add"], [1187, 4, 1, "", "all"], [697, 4, 1, "", "all_equal"], [1192, 4, 1, "", "any"], [1142, 4, 1, "", "argsort"], [430, 4, 1, "", "asin"], [435, 4, 1, "", "asinh"], [288, 4, 1, "", "astype"], [440, 4, 1, "", "atan"], [445, 4, 1, "", "atan2"], [450, 4, 1, "", "atanh"], [988, 4, 1, "", "binary_cross_entropy"], [455, 4, 1, "", "bitwise_and"], [460, 4, 1, "", "bitwise_invert"], [465, 4, 1, "", "bitwise_left_shift"], [470, 4, 1, "", "bitwise_or"], [475, 4, 1, "", "bitwise_right_shift"], [480, 4, 1, "", "bitwise_xor"], [293, 4, 1, "", "broadcast_arrays"], [298, 4, 1, "", "broadcast_to"], [303, 4, 1, "", "can_cast"], [485, 4, 1, "", "ceil"], [875, 4, 1, "", "cholesky"], [1004, 4, 1, "", "clip"], [709, 4, 1, "", "clip_vector_norm"], [1009, 4, 1, "", "concat"], [1013, 4, 1, "", "constant_pad"], [854, 4, 1, "", "conv1d"], [490, 4, 1, "", "cos"], [495, 4, 1, "", "cosh"], [880, 4, 1, "", "cross"], [993, 4, 1, "", "cross_entropy"], [864, 4, 1, "", "depthwise_conv2d"], [885, 4, 1, "", "det"], [381, 4, 1, "", "dev"], [890, 4, 1, "", "diagonal"], [500, 4, 1, "", "divide"], [315, 4, 1, "", "dtype"], [895, 4, 1, "", "eigh"], [720, 4, 1, "", "einops_rearrange"], [725, 4, 1, "", "einops_reduce"], [730, 4, 1, "", "einops_repeat"], [1153, 4, 1, "", "einsum"], [220, 4, 1, "", "empty_like"], [505, 4, 1, "", "equal"], [510, 4, 1, "", "erf"], [515, 4, 1, "", "exp"], [1017, 4, 1, "", "expand_dims"], [520, 4, 1, "", "expm1"], [321, 4, 1, "", "finfo"], [1021, 4, 1, "", "flip"], [525, 4, 1, "", "floor"], [530, 4, 1, "", "floor_divide"], [228, 4, 1, "", "from_dlpack"], [234, 4, 1, "", "full_like"], [740, 4, 1, "", "gather"], [745, 4, 1, "", "gather_nd"], [173, 4, 1, "", "gelu"], [821, 4, 1, "", "gradient_descent_update"], [535, 4, 1, "", "greater"], [540, 4, 1, "", "greater_equal"], [332, 4, 1, "", "iinfo"], [902, 4, 1, "", "inv"], [338, 4, 1, "", "is_bool_dtype"], [343, 4, 1, "", "is_float_dtype"], [348, 4, 1, "", "is_int_dtype"], [353, 4, 1, "", "is_uint_dtype"], [826, 4, 1, "", "is_variable"], [545, 4, 1, "", "isfinite"], [550, 4, 1, "", "isinf"], [555, 4, 1, "", "isnan"], [830, 4, 1, "", "lamb_update"], [834, 4, 1, "", "lars_update"], [1088, 4, 1, "", "layer_norm"], [178, 4, 1, "", "leaky_relu"], [560, 4, 1, "", "less"], [565, 4, 1, "", "less_equal"], [570, 4, 1, "", "log"], [575, 4, 1, "", "log10"], [580, 4, 1, "", "log1p"], [585, 4, 1, "", "log2"], [590, 4, 1, "", "logaddexp"], [595, 4, 1, "", "logical_and"], [600, 4, 1, "", "logical_not"], [605, 4, 1, "", "logical_or"], [610, 4, 1, "", "logical_xor"], [907, 4, 1, "", "matmul"], [911, 4, 1, "", "matrix_norm"], [915, 4, 1, "", "matrix_power"], [920, 4, 1, "", "matrix_rank"], [925, 4, 1, "", "matrix_transpose"], [1157, 4, 1, "", "max"], [1161, 4, 1, "", "mean"], [245, 4, 1, "", "meshgrid"], [1165, 4, 1, "", "min"], [615, 4, 1, "", "minimum"], [620, 4, 1, "", "multiply"], [250, 4, 1, "", "native_array"], [625, 4, 1, "", "negative"], [630, 4, 1, "", "not_equal"], [258, 4, 1, "", "ones_like"], [838, 4, 1, "", "optimizer_update"], [930, 4, 1, "", "outer"], [1025, 4, 1, "", "permute_dims"], [635, 4, 1, "", "positive"], [640, 4, 1, "", "pow"], [1169, 4, 1, "", "prod"], [938, 4, 1, "", "qr"], [1095, 4, 1, "", "randint"], [1100, 4, 1, "", "random_normal"], [1105, 4, 1, "", "random_uniform"], [183, 4, 1, "", "relu"], [645, 4, 1, "", "remainder"], [1029, 4, 1, "", "repeat"], [1034, 4, 1, "", "reshape"], [359, 4, 1, "", "result_type"], [1039, 4, 1, "", "roll"], [650, 4, 1, "", "round"], [1110, 4, 1, "", "shuffle"], [188, 4, 1, "", "sigmoid"], [655, 4, 1, "", "sign"], [660, 4, 1, "", "sin"], [665, 4, 1, "", "sinh"], [942, 4, 1, "", "slogdet"], [193, 4, 1, "", "softmax"], [198, 4, 1, "", "softplus"], [947, 4, 1, "", "solve"], [1147, 4, 1, "", "sort"], [998, 4, 1, "", "sparse_cross_entropy"], [670, 4, 1, "", "sqrt"], [675, 4, 1, "", "square"], [1045, 4, 1, "", "squeeze"], [785, 4, 1, "", "stable_divide"], [1049, 4, 1, "", "stack"], [412, 4, 1, "", "static_abs"], [417, 4, 1, "", "static_acos"], [422, 4, 1, "", "static_acosh"], [812, 4, 1, "", "static_adam_step"], [816, 4, 1, "", "static_adam_update"], [427, 4, 1, "", "static_add"], [1189, 4, 1, "", "static_all"], [699, 4, 1, "", "static_all_equal"], [1194, 4, 1, "", "static_any"], [212, 4, 1, "", "static_arange"], [1144, 4, 1, "", "static_argsort"], [216, 4, 1, "", "static_asarray"], [432, 4, 1, "", "static_asin"], [437, 4, 1, "", "static_asinh"], [290, 4, 1, "", "static_astype"], [442, 4, 1, "", "static_atan"], [447, 4, 1, "", "static_atan2"], [452, 4, 1, "", "static_atanh"], [990, 4, 1, "", "static_binary_cross_entropy"], [457, 4, 1, "", "static_bitwise_and"], [462, 4, 1, "", "static_bitwise_invert"], [467, 4, 1, "", "static_bitwise_left_shift"], [472, 4, 1, "", "static_bitwise_or"], [477, 4, 1, "", "static_bitwise_right_shift"], [482, 4, 1, "", "static_bitwise_xor"], [295, 4, 1, "", "static_broadcast_arrays"], [300, 4, 1, "", "static_broadcast_to"], [305, 4, 1, "", "static_can_cast"], [487, 4, 1, "", "static_ceil"], [877, 4, 1, "", "static_cholesky"], [1006, 4, 1, "", "static_clip"], [711, 4, 1, "", "static_clip_vector_norm"], [856, 4, 1, "", "static_conv1d"], [492, 4, 1, "", "static_cos"], [497, 4, 1, "", "static_cosh"], [882, 4, 1, "", "static_cross"], [995, 4, 1, "", "static_cross_entropy"], [310, 4, 1, "", "static_default_float_dtype"], [866, 4, 1, "", "static_depthwise_conv2d"], [887, 4, 1, "", "static_det"], [383, 4, 1, "", "static_dev"], [892, 4, 1, "", "static_diagonal"], [502, 4, 1, "", "static_divide"], [317, 4, 1, "", "static_dtype"], [722, 4, 1, "", "static_einops_rearrange"], [727, 4, 1, "", "static_einops_reduce"], [732, 4, 1, "", "static_einops_repeat"], [222, 4, 1, "", "static_empty_like"], [507, 4, 1, "", "static_equal"], [512, 4, 1, "", "static_erf"], [819, 4, 1, "", "static_execute_with_gradients"], [517, 4, 1, "", "static_exp"], [522, 4, 1, "", "static_expm1"], [225, 4, 1, "", "static_eye"], [323, 4, 1, "", "static_finfo"], [527, 4, 1, "", "static_floor"], [532, 4, 1, "", "static_floor_divide"], [230, 4, 1, "", "static_from_dlpack"], [236, 4, 1, "", "static_full_like"], [326, 4, 1, "", "static_function_supported_dtypes"], [329, 4, 1, "", "static_function_unsupported_dtypes"], [742, 4, 1, "", "static_gather"], [747, 4, 1, "", "static_gather_nd"], [175, 4, 1, "", "static_gelu"], [823, 4, 1, "", "static_gradient_descent_update"], [537, 4, 1, "", "static_greater"], [542, 4, 1, "", "static_greater_equal"], [334, 4, 1, "", "static_iinfo"], [904, 4, 1, "", "static_inv"], [340, 4, 1, "", "static_is_bool_dtype"], [345, 4, 1, "", "static_is_float_dtype"], [350, 4, 1, "", "static_is_int_dtype"], [355, 4, 1, "", "static_is_uint_dtype"], [828, 4, 1, "", "static_is_variable"], [547, 4, 1, "", "static_isfinite"], [552, 4, 1, "", "static_isinf"], [557, 4, 1, "", "static_isnan"], [832, 4, 1, "", "static_lamb_update"], [836, 4, 1, "", "static_lars_update"], [1090, 4, 1, "", "static_layer_norm"], [180, 4, 1, "", "static_leaky_relu"], [562, 4, 1, "", "static_less"], [567, 4, 1, "", "static_less_equal"], [239, 4, 1, "", "static_linspace"], [572, 4, 1, "", "static_log"], [577, 4, 1, "", "static_log10"], [582, 4, 1, "", "static_log1p"], [587, 4, 1, "", "static_log2"], [592, 4, 1, "", "static_logaddexp"], [597, 4, 1, "", "static_logical_and"], [602, 4, 1, "", "static_logical_not"], [607, 4, 1, "", "static_logical_or"], [612, 4, 1, "", "static_logical_xor"], [242, 4, 1, "", "static_logspace"], [913, 4, 1, "", "static_matrix_norm"], [917, 4, 1, "", "static_matrix_power"], [922, 4, 1, "", "static_matrix_rank"], [927, 4, 1, "", "static_matrix_transpose"], [247, 4, 1, "", "static_meshgrid"], [617, 4, 1, "", "static_minimum"], [622, 4, 1, "", "static_multiply"], [252, 4, 1, "", "static_native_array"], [627, 4, 1, "", "static_negative"], [632, 4, 1, "", "static_not_equal"], [255, 4, 1, "", "static_ones"], [260, 4, 1, "", "static_ones_like"], [840, 4, 1, "", "static_optimizer_update"], [932, 4, 1, "", "static_outer"], [637, 4, 1, "", "static_positive"], [642, 4, 1, "", "static_pow"], [940, 4, 1, "", "static_qr"], [1097, 4, 1, "", "static_randint"], [1102, 4, 1, "", "static_random_normal"], [1107, 4, 1, "", "static_random_uniform"], [185, 4, 1, "", "static_relu"], [647, 4, 1, "", "static_remainder"], [1031, 4, 1, "", "static_repeat"], [1036, 4, 1, "", "static_reshape"], [361, 4, 1, "", "static_result_type"], [1041, 4, 1, "", "static_roll"], [652, 4, 1, "", "static_round"], [1112, 4, 1, "", "static_shuffle"], [190, 4, 1, "", "static_sigmoid"], [657, 4, 1, "", "static_sign"], [662, 4, 1, "", "static_sin"], [667, 4, 1, "", "static_sinh"], [944, 4, 1, "", "static_slogdet"], [195, 4, 1, "", "static_softmax"], [200, 4, 1, "", "static_softplus"], [949, 4, 1, "", "static_solve"], [1149, 4, 1, "", "static_sort"], [1000, 4, 1, "", "static_sparse_cross_entropy"], [672, 4, 1, "", "static_sqrt"], [677, 4, 1, "", "static_square"], [787, 4, 1, "", "static_stable_divide"], [679, 4, 1, "", "static_subtract"], [951, 4, 1, "", "static_svd"], [956, 4, 1, "", "static_svdvals"], [684, 4, 1, "", "static_tan"], [202, 4, 1, "", "static_tanh"], [961, 4, 1, "", "static_tensordot"], [399, 4, 1, "", "static_to_device"], [795, 4, 1, "", "static_to_numpy"], [966, 4, 1, "", "static_trace"], [262, 4, 1, "", "static_tril"], [267, 4, 1, "", "static_triu"], [690, 4, 1, "", "static_trunc"], [1120, 4, 1, "", "static_unique_all"], [1125, 4, 1, "", "static_unique_counts"], [1130, 4, 1, "", "static_unique_inverse"], [1135, 4, 1, "", "static_unique_values"], [1180, 4, 1, "", "static_var"], [845, 4, 1, "", "static_variable"], [971, 4, 1, "", "static_vecdot"], [976, 4, 1, "", "static_vector_norm"], [981, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [272, 4, 1, "", "static_zeros"], [275, 4, 1, "", "static_zeros_like"], [1173, 4, 1, "", "std"], [681, 4, 1, "", "subtract"], [1177, 4, 1, "", "sum"], [953, 4, 1, "", "svd"], [958, 4, 1, "", "svdvals"], [1053, 4, 1, "", "swapaxes"], [686, 4, 1, "", "tan"], [204, 4, 1, "", "tanh"], [963, 4, 1, "", "tensordot"], [1057, 4, 1, "", "tile"], [401, 4, 1, "", "to_device"], [797, 4, 1, "", "to_numpy"], [968, 4, 1, "", "trace"], [264, 4, 1, "", "tril"], [269, 4, 1, "", "triu"], [692, 4, 1, "", "trunc"], [1122, 4, 1, "", "unique_all"], [1127, 4, 1, "", "unique_counts"], [1132, 4, 1, "", "unique_inverse"], [1137, 4, 1, "", "unique_values"], [1182, 4, 1, "", "var"], [847, 4, 1, "", "variable"], [973, 4, 1, "", "vecdot"], [978, 4, 1, "", "vector_norm"], [983, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1061, 4, 1, "", "zero_pad"], [277, 4, 1, "", "zeros_like"]], "ivy.container.conversions": [[80, 4, 1, "", "static_to_ivy"], [81, 4, 1, "", "static_to_native"], [82, 4, 1, "", "to_ivy"], [83, 4, 1, "", "to_native"]], "ivy.container.creation": [[85, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[85, 2, 1, "", "empty_like"], [85, 2, 1, "", "from_dlpack"], [85, 2, 1, "", "full_like"], [85, 2, 1, "", "meshgrid"], [85, 2, 1, "", "native_array"], [85, 2, 1, "", "ones_like"], [85, 2, 1, "", "static_arange"], [85, 2, 1, "", "static_asarray"], [85, 2, 1, "", "static_empty_like"], [85, 2, 1, "", "static_eye"], [85, 2, 1, "", "static_from_dlpack"], [85, 2, 1, "", "static_full_like"], [85, 2, 1, "", "static_linspace"], [85, 2, 1, "", "static_logspace"], [85, 2, 1, "", "static_meshgrid"], [85, 2, 1, "", "static_native_array"], [85, 2, 1, "", "static_ones"], [85, 2, 1, "", "static_ones_like"], [85, 2, 1, "", "static_tril"], [85, 2, 1, "", "static_triu"], [85, 2, 1, "", "static_zeros"], [85, 2, 1, "", "static_zeros_like"], [85, 2, 1, "", "tril"], [85, 2, 1, "", "triu"], [85, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[87, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[87, 2, 1, "", "astype"], [87, 2, 1, "", "broadcast_arrays"], [87, 2, 1, "", "broadcast_to"], [87, 2, 1, "", "can_cast"], [87, 2, 1, "", "dtype"], [87, 2, 1, "", "finfo"], [87, 2, 1, "", "iinfo"], [87, 2, 1, "", "is_bool_dtype"], [87, 2, 1, "", "is_float_dtype"], [87, 2, 1, "", "is_int_dtype"], [87, 2, 1, "", "is_uint_dtype"], [87, 2, 1, "", "result_type"], [87, 2, 1, "", "static_astype"], [87, 2, 1, "", "static_broadcast_arrays"], [87, 2, 1, "", "static_broadcast_to"], [87, 2, 1, "", "static_can_cast"], [87, 2, 1, "", "static_default_float_dtype"], [87, 2, 1, "", "static_dtype"], [87, 2, 1, "", "static_finfo"], [87, 2, 1, "", "static_function_supported_dtypes"], [87, 2, 1, "", "static_function_unsupported_dtypes"], [87, 2, 1, "", "static_iinfo"], [87, 2, 1, "", "static_is_bool_dtype"], [87, 2, 1, "", "static_is_float_dtype"], [87, 2, 1, "", "static_is_int_dtype"], [87, 2, 1, "", "static_is_uint_dtype"], [87, 2, 1, "", "static_result_type"]], "ivy.container.device": [[89, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[89, 2, 1, "", "dev"], [89, 2, 1, "", "static_dev"], [89, 2, 1, "", "static_to_device"], [89, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[91, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[91, 2, 1, "", "abs"], [91, 2, 1, "", "acos"], [91, 2, 1, "", "acosh"], [91, 2, 1, "", "add"], [91, 2, 1, "", "asin"], [91, 2, 1, "", "asinh"], [91, 2, 1, "", "atan"], [91, 2, 1, "", "atan2"], [91, 2, 1, "", "atanh"], [91, 2, 1, "", "bitwise_and"], [91, 2, 1, "", "bitwise_invert"], [91, 2, 1, "", "bitwise_left_shift"], [91, 2, 1, "", "bitwise_or"], [91, 2, 1, "", "bitwise_right_shift"], [91, 2, 1, "", "bitwise_xor"], [91, 2, 1, "", "ceil"], [91, 2, 1, "", "cos"], [91, 2, 1, "", "cosh"], [91, 2, 1, "", "divide"], [91, 2, 1, "", "equal"], [91, 2, 1, "", "erf"], [91, 2, 1, "", "exp"], [91, 2, 1, "", "expm1"], [91, 2, 1, "", "floor"], [91, 2, 1, "", "floor_divide"], [91, 2, 1, "", "greater"], [91, 2, 1, "", "greater_equal"], [91, 2, 1, "", "isfinite"], [91, 2, 1, "", "isinf"], [91, 2, 1, "", "isnan"], [91, 2, 1, "", "less"], [91, 2, 1, "", "less_equal"], [91, 2, 1, "", "log"], [91, 2, 1, "", "log10"], [91, 2, 1, "", "log1p"], [91, 2, 1, "", "log2"], [91, 2, 1, "", "logaddexp"], [91, 2, 1, "", "logical_and"], [91, 2, 1, "", "logical_not"], [91, 2, 1, "", "logical_or"], [91, 2, 1, "", "logical_xor"], [91, 2, 1, "", "minimum"], [91, 2, 1, "", "multiply"], [91, 2, 1, "", "negative"], [91, 2, 1, "", "not_equal"], [91, 2, 1, "", "positive"], [91, 2, 1, "", "pow"], [91, 2, 1, "", "remainder"], [91, 2, 1, "", "round"], [91, 2, 1, "", "sign"], [91, 2, 1, "", "sin"], [91, 2, 1, "", "sinh"], [91, 2, 1, "", "sqrt"], [91, 2, 1, "", "square"], [91, 2, 1, "", "static_abs"], [91, 2, 1, "", "static_acos"], [91, 2, 1, "", "static_acosh"], [91, 2, 1, "", "static_add"], [91, 2, 1, "", "static_asin"], [91, 2, 1, "", "static_asinh"], [91, 2, 1, "", "static_atan"], [91, 2, 1, "", "static_atan2"], [91, 2, 1, "", "static_atanh"], [91, 2, 1, "", "static_bitwise_and"], [91, 2, 1, "", "static_bitwise_invert"], [91, 2, 1, "", "static_bitwise_left_shift"], [91, 2, 1, "", "static_bitwise_or"], [91, 2, 1, "", "static_bitwise_right_shift"], [91, 2, 1, "", "static_bitwise_xor"], [91, 2, 1, "", "static_ceil"], [91, 2, 1, "", "static_cos"], [91, 2, 1, "", "static_cosh"], [91, 2, 1, "", "static_divide"], [91, 2, 1, "", "static_equal"], [91, 2, 1, "", "static_erf"], [91, 2, 1, "", "static_exp"], [91, 2, 1, "", "static_expm1"], [91, 2, 1, "", "static_floor"], [91, 2, 1, "", "static_floor_divide"], [91, 2, 1, "", "static_greater"], [91, 2, 1, "", "static_greater_equal"], [91, 2, 1, "", "static_isfinite"], [91, 2, 1, "", "static_isinf"], [91, 2, 1, "", "static_isnan"], [91, 2, 1, "", "static_less"], [91, 2, 1, "", "static_less_equal"], [91, 2, 1, "", "static_log"], [91, 2, 1, "", "static_log10"], [91, 2, 1, "", "static_log1p"], [91, 2, 1, "", "static_log2"], [91, 2, 1, "", "static_logaddexp"], [91, 2, 1, "", "static_logical_and"], [91, 2, 1, "", "static_logical_not"], [91, 2, 1, "", "static_logical_or"], [91, 2, 1, "", "static_logical_xor"], [91, 2, 1, "", "static_minimum"], [91, 2, 1, "", "static_multiply"], [91, 2, 1, "", "static_negative"], [91, 2, 1, "", "static_not_equal"], [91, 2, 1, "", "static_positive"], [91, 2, 1, "", "static_pow"], [91, 2, 1, "", "static_remainder"], [91, 2, 1, "", "static_round"], [91, 2, 1, "", "static_sign"], [91, 2, 1, "", "static_sin"], [91, 2, 1, "", "static_sinh"], [91, 2, 1, "", "static_sqrt"], [91, 2, 1, "", "static_square"], [91, 2, 1, "", "static_subtract"], [91, 2, 1, "", "static_tan"], [91, 2, 1, "", "static_tanh"], [91, 2, 1, "", "static_trunc"], [91, 2, 1, "", "subtract"], [91, 2, 1, "", "tan"], [91, 2, 1, "", "tanh"], [91, 2, 1, "", "trunc"]], "ivy.container.general": [[93, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[93, 2, 1, "", "all_equal"], [93, 2, 1, "", "clip_vector_norm"], [93, 2, 1, "", "einops_rearrange"], [93, 2, 1, "", "einops_reduce"], [93, 2, 1, "", "einops_repeat"], [93, 2, 1, "", "gather"], [93, 2, 1, "", "gather_nd"], [93, 2, 1, "", "stable_divide"], [93, 2, 1, "", "static_all_equal"], [93, 2, 1, "", "static_clip_vector_norm"], [93, 2, 1, "", "static_einops_rearrange"], [93, 2, 1, "", "static_einops_reduce"], [93, 2, 1, "", "static_einops_repeat"], [93, 2, 1, "", "static_gather"], [93, 2, 1, "", "static_gather_nd"], [93, 2, 1, "", "static_stable_divide"], [93, 2, 1, "", "static_to_numpy"], [93, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[95, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[95, 2, 1, "", "adam_step"], [95, 2, 1, "", "adam_update"], [95, 2, 1, "", "gradient_descent_update"], [95, 2, 1, "", "is_variable"], [95, 2, 1, "", "lamb_update"], [95, 2, 1, "", "lars_update"], [95, 2, 1, "", "optimizer_update"], [95, 2, 1, "", "static_adam_step"], [95, 2, 1, "", "static_adam_update"], [95, 2, 1, "", "static_execute_with_gradients"], [95, 2, 1, "", "static_gradient_descent_update"], [95, 2, 1, "", "static_is_variable"], [95, 2, 1, "", "static_lamb_update"], [95, 2, 1, "", "static_lars_update"], [95, 2, 1, "", "static_optimizer_update"], [95, 2, 1, "", "static_variable"], [95, 2, 1, "", "variable"]], "ivy.container.image": [[97, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[99, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[99, 2, 1, "", "conv1d"], [99, 2, 1, "", "depthwise_conv2d"], [99, 2, 1, "", "static_conv1d"], [99, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[101, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[101, 2, 1, "", "cholesky"], [101, 2, 1, "", "cross"], [101, 2, 1, "", "det"], [101, 2, 1, "", "diagonal"], [101, 2, 1, "", "eigh"], [101, 2, 1, "", "inv"], [101, 2, 1, "", "matmul"], [101, 2, 1, "", "matrix_norm"], [101, 2, 1, "", "matrix_power"], [101, 2, 1, "", "matrix_rank"], [101, 2, 1, "", "matrix_transpose"], [101, 2, 1, "", "outer"], [101, 2, 1, "", "qr"], [101, 2, 1, "", "slogdet"], [101, 2, 1, "", "solve"], [101, 2, 1, "", "static_cholesky"], [101, 2, 1, "", "static_cross"], [101, 2, 1, "", "static_det"], [101, 2, 1, "", "static_diagonal"], [101, 2, 1, "", "static_inv"], [101, 2, 1, "", "static_matrix_norm"], [101, 2, 1, "", "static_matrix_power"], [101, 2, 1, "", "static_matrix_rank"], [101, 2, 1, "", "static_matrix_transpose"], [101, 2, 1, "", "static_outer"], [101, 2, 1, "", "static_qr"], [101, 2, 1, "", "static_slogdet"], [101, 2, 1, "", "static_solve"], [101, 2, 1, "", "static_svd"], [101, 2, 1, "", "static_svdvals"], [101, 2, 1, "", "static_tensordot"], [101, 2, 1, "", "static_trace"], [101, 2, 1, "", "static_vecdot"], [101, 2, 1, "", "static_vector_norm"], [101, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [101, 2, 1, "", "svd"], [101, 2, 1, "", "svdvals"], [101, 2, 1, "", "tensordot"], [101, 2, 1, "", "trace"], [101, 2, 1, "", "vecdot"], [101, 2, 1, "", "vector_norm"], [101, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[103, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[103, 2, 1, "", "binary_cross_entropy"], [103, 2, 1, "", "cross_entropy"], [103, 2, 1, "", "sparse_cross_entropy"], [103, 2, 1, "", "static_binary_cross_entropy"], [103, 2, 1, "", "static_cross_entropy"], [103, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[105, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[105, 2, 1, "", "clip"], [105, 2, 1, "", "concat"], [105, 2, 1, "", "constant_pad"], [105, 2, 1, "", "expand_dims"], [105, 2, 1, "", "flip"], [105, 2, 1, "", "permute_dims"], [105, 2, 1, "", "repeat"], [105, 2, 1, "", "reshape"], [105, 2, 1, "", "roll"], [105, 2, 1, "", "squeeze"], [105, 2, 1, "", "stack"], [105, 2, 1, "", "static_clip"], [105, 2, 1, "", "static_repeat"], [105, 2, 1, "", "static_reshape"], [105, 2, 1, "", "static_roll"], [105, 2, 1, "", "swapaxes"], [105, 2, 1, "", "tile"], [105, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[107, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[107, 2, 1, "", "layer_norm"], [107, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[109, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[109, 2, 1, "", "randint"], [109, 2, 1, "", "random_normal"], [109, 2, 1, "", "random_uniform"], [109, 2, 1, "", "shuffle"], [109, 2, 1, "", "static_randint"], [109, 2, 1, "", "static_random_normal"], [109, 2, 1, "", "static_random_uniform"], [109, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[111, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[113, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[113, 2, 1, "", "static_unique_all"], [113, 2, 1, "", "static_unique_counts"], [113, 2, 1, "", "static_unique_inverse"], [113, 2, 1, "", "static_unique_values"], [113, 2, 1, "", "unique_all"], [113, 2, 1, "", "unique_counts"], [113, 2, 1, "", "unique_inverse"], [113, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[115, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[115, 2, 1, "", "argsort"], [115, 2, 1, "", "sort"], [115, 2, 1, "", "static_argsort"], [115, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[117, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[117, 2, 1, "", "einsum"], [117, 2, 1, "", "max"], [117, 2, 1, "", "mean"], [117, 2, 1, "", "min"], [117, 2, 1, "", "prod"], [117, 2, 1, "", "static_var"], [117, 2, 1, "", "std"], [117, 2, 1, "", "sum"], [117, 2, 1, "", "var"]], "ivy.container.utility": [[119, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[119, 2, 1, "", "all"], [119, 2, 1, "", "any"], [119, 2, 1, "", "static_all"], [119, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[121, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[161, 4, 1, "", "handle_nestable"], [162, 4, 1, "", "handle_out_argument"], [163, 4, 1, "", "infer_device"], [164, 4, 1, "", "infer_dtype"], [165, 4, 1, "", "inputs_to_ivy_arrays"], [166, 4, 1, "", "inputs_to_native_arrays"], [167, 4, 1, "", "outputs_to_ivy_arrays"], [168, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[170, 0, 0, "-", "activations"], [206, 0, 0, "-", "compilation"], [208, 0, 0, "-", "constants"], [209, 0, 0, "-", "creation"], [279, 0, 0, "-", "data_type"], [372, 0, 0, "-", "device"], [407, 0, 0, "-", "elementwise"], [694, 0, 0, "-", "general"], [806, 0, 0, "-", "gradients"], [851, 0, 0, "-", "layers"], [872, 0, 0, "-", "linear_algebra"], [985, 0, 0, "-", "losses"], [1001, 0, 0, "-", "manipulation"], [1063, 0, 0, "-", "meta"], [1067, 0, 0, "-", "nest"], [1085, 0, 0, "-", "norms"], [1091, 0, 0, "-", "random"], [1113, 0, 0, "-", "searching"], [1118, 0, 0, "-", "set"], [1139, 0, 0, "-", "sorting"], [1150, 0, 0, "-", "statistical"], [1184, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[174, 4, 1, "", "gelu"], [179, 4, 1, "", "leaky_relu"], [184, 4, 1, "", "relu"], [189, 4, 1, "", "sigmoid"], [194, 4, 1, "", "softmax"], [199, 4, 1, "", "softplus"], [205, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[207, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[208, 5, 1, "", "e"], [208, 5, 1, "", "inf"], [208, 5, 1, "", "nan"], [208, 5, 1, "", "newaxis"], [208, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[211, 4, 1, "", "arange"], [209, 4, 1, "", "array"], [215, 4, 1, "", "asarray"], [217, 4, 1, "", "empty"], [221, 4, 1, "", "empty_like"], [224, 4, 1, "", "eye"], [229, 4, 1, "", "from_dlpack"], [231, 4, 1, "", "full"], [235, 4, 1, "", "full_like"], [238, 4, 1, "", "linspace"], [241, 4, 1, "", "logspace"], [246, 4, 1, "", "meshgrid"], [251, 4, 1, "", "native_array"], [254, 4, 1, "", "ones"], [259, 4, 1, "", "ones_like"], [265, 4, 1, "", "tril"], [270, 4, 1, "", "triu"], [273, 4, 1, "", "zeros"], [278, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[279, 1, 1, "", "DefaultDtype"], [279, 1, 1, "", "DefaultFloatDtype"], [279, 1, 1, "", "DefaultIntDtype"], [279, 1, 1, "", "DefaultUintDtype"], [284, 4, 1, "", "as_ivy_dtype"], [285, 4, 1, "", "as_native_dtype"], [289, 4, 1, "", "astype"], [294, 4, 1, "", "broadcast_arrays"], [299, 4, 1, "", "broadcast_to"], [304, 4, 1, "", "can_cast"], [306, 4, 1, "", "closest_valid_dtype"], [307, 4, 1, "", "default_dtype"], [309, 4, 1, "", "default_float_dtype"], [311, 4, 1, "", "default_int_dtype"], [312, 4, 1, "", "default_uint_dtype"], [316, 4, 1, "", "dtype"], [318, 4, 1, "", "dtype_bits"], [322, 4, 1, "", "finfo"], [325, 4, 1, "", "function_supported_dtypes"], [328, 4, 1, "", "function_unsupported_dtypes"], [333, 4, 1, "", "iinfo"], [335, 4, 1, "", "invalid_dtype"], [339, 4, 1, "", "is_bool_dtype"], [344, 4, 1, "", "is_float_dtype"], [349, 4, 1, "", "is_int_dtype"], [354, 4, 1, "", "is_uint_dtype"], [356, 4, 1, "", "promote_types"], [360, 4, 1, "", "result_type"], [362, 4, 1, "", "set_default_dtype"], [363, 4, 1, "", "set_default_float_dtype"], [364, 4, 1, "", "set_default_int_dtype"], [365, 4, 1, "", "set_default_uint_dtype"], [366, 4, 1, "", "type_promote_arrays"], [367, 4, 1, "", "unset_default_dtype"], [368, 4, 1, "", "unset_default_float_dtype"], [369, 4, 1, "", "unset_default_int_dtype"], [370, 4, 1, "", "unset_default_uint_dtype"], [371, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[279, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[279, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[279, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[279, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[372, 1, 1, "", "DefaultDevice"], [374, 1, 1, "", "Profiler"], [375, 4, 1, "", "as_ivy_dev"], [376, 4, 1, "", "as_native_dev"], [377, 4, 1, "", "clear_mem_on_dev"], [378, 4, 1, "", "default_device"], [382, 4, 1, "", "dev"], [384, 4, 1, "", "dev_util"], [385, 4, 1, "", "function_supported_devices"], [386, 4, 1, "", "function_unsupported_devices"], [387, 4, 1, "", "get_all_ivy_arrays_on_dev"], [388, 4, 1, "", "gpu_is_available"], [389, 4, 1, "", "num_cpu_cores"], [390, 4, 1, "", "num_gpus"], [391, 4, 1, "", "num_ivy_arrays_on_dev"], [392, 4, 1, "", "percent_used_mem_on_dev"], [393, 4, 1, "", "print_all_ivy_arrays_on_dev"], [394, 4, 1, "", "set_default_device"], [395, 4, 1, "", "set_split_factor"], [396, 4, 1, "", "split_factor"], [397, 4, 1, "", "split_func_call"], [402, 4, 1, "", "to_device"], [403, 4, 1, "", "total_mem_on_dev"], [404, 4, 1, "", "tpu_is_available"], [405, 4, 1, "", "unset_default_device"], [406, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[372, 2, 1, "", "__enter__"], [372, 2, 1, "", "__exit__"], [372, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[374, 2, 1, "", "__init__"], [374, 2, 1, "", "start"], [374, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[411, 4, 1, "", "abs"], [416, 4, 1, "", "acos"], [421, 4, 1, "", "acosh"], [426, 4, 1, "", "add"], [431, 4, 1, "", "asin"], [436, 4, 1, "", "asinh"], [441, 4, 1, "", "atan"], [446, 4, 1, "", "atan2"], [451, 4, 1, "", "atanh"], [456, 4, 1, "", "bitwise_and"], [461, 4, 1, "", "bitwise_invert"], [466, 4, 1, "", "bitwise_left_shift"], [471, 4, 1, "", "bitwise_or"], [476, 4, 1, "", "bitwise_right_shift"], [481, 4, 1, "", "bitwise_xor"], [486, 4, 1, "", "ceil"], [491, 4, 1, "", "cos"], [496, 4, 1, "", "cosh"], [501, 4, 1, "", "divide"], [506, 4, 1, "", "equal"], [511, 4, 1, "", "erf"], [516, 4, 1, "", "exp"], [521, 4, 1, "", "expm1"], [526, 4, 1, "", "floor"], [531, 4, 1, "", "floor_divide"], [536, 4, 1, "", "greater"], [541, 4, 1, "", "greater_equal"], [546, 4, 1, "", "isfinite"], [551, 4, 1, "", "isinf"], [556, 4, 1, "", "isnan"], [561, 4, 1, "", "less"], [566, 4, 1, "", "less_equal"], [571, 4, 1, "", "log"], [576, 4, 1, "", "log10"], [581, 4, 1, "", "log1p"], [586, 4, 1, "", "log2"], [591, 4, 1, "", "logaddexp"], [596, 4, 1, "", "logical_and"], [601, 4, 1, "", "logical_not"], [606, 4, 1, "", "logical_or"], [611, 4, 1, "", "logical_xor"], [613, 4, 1, "", "maximum"], [616, 4, 1, "", "minimum"], [621, 4, 1, "", "multiply"], [626, 4, 1, "", "negative"], [631, 4, 1, "", "not_equal"], [636, 4, 1, "", "positive"], [641, 4, 1, "", "pow"], [646, 4, 1, "", "remainder"], [651, 4, 1, "", "round"], [656, 4, 1, "", "sign"], [661, 4, 1, "", "sin"], [666, 4, 1, "", "sinh"], [671, 4, 1, "", "sqrt"], [676, 4, 1, "", "square"], [682, 4, 1, "", "subtract"], [687, 4, 1, "", "tan"], [688, 4, 1, "", "tanh"], [693, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[698, 4, 1, "", "all_equal"], [700, 4, 1, "", "arg_info"], [701, 4, 1, "", "arg_names"], [702, 4, 1, "", "array_equal"], [703, 4, 1, "", "arrays_equal"], [704, 4, 1, "", "assert_supports_inplace"], [705, 4, 1, "", "cache_fn"], [706, 4, 1, "", "clip_matrix_norm"], [710, 4, 1, "", "clip_vector_norm"], [712, 4, 1, "", "container_types"], [713, 4, 1, "", "copy_array"], [714, 4, 1, "", "cumprod"], [715, 4, 1, "", "cumsum"], [716, 4, 1, "", "current_backend_str"], [717, 4, 1, "", "default"], [721, 4, 1, "", "einops_rearrange"], [726, 4, 1, "", "einops_reduce"], [731, 4, 1, "", "einops_repeat"], [733, 4, 1, "", "exists"], [734, 4, 1, "", "floormod"], [735, 4, 1, "", "fourier_encode"], [736, 4, 1, "", "function_supported_devices_and_dtypes"], [737, 4, 1, "", "function_unsupported_devices_and_dtypes"], [741, 4, 1, "", "gather"], [746, 4, 1, "", "gather_nd"], [748, 4, 1, "", "get_all_arrays_in_memory"], [749, 4, 1, "", "get_array_mode"], [750, 4, 1, "", "get_min_base"], [751, 4, 1, "", "get_min_denominator"], [752, 4, 1, "", "get_nestable_mode"], [753, 4, 1, "", "get_num_dims"], [754, 4, 1, "", "get_referrers_recursive"], [755, 4, 1, "", "has_nans"], [756, 4, 1, "", "indices_where"], [757, 4, 1, "", "inplace_arrays_supported"], [758, 4, 1, "", "inplace_decrement"], [759, 4, 1, "", "inplace_increment"], [760, 4, 1, "", "inplace_update"], [761, 4, 1, "", "inplace_variables_supported"], [762, 4, 1, "", "is_array"], [763, 4, 1, "", "is_ivy_array"], [764, 4, 1, "", "is_ivy_container"], [765, 4, 1, "", "is_native_array"], [766, 4, 1, "", "match_kwargs"], [767, 4, 1, "", "multiprocessing"], [768, 4, 1, "", "num_arrays_in_memory"], [769, 4, 1, "", "one_hot"], [770, 4, 1, "", "print_all_arrays_in_memory"], [771, 4, 1, "", "queue_timeout"], [772, 4, 1, "", "scatter_flat"], [773, 4, 1, "", "scatter_nd"], [774, 4, 1, "", "set_array_mode"], [775, 4, 1, "", "set_min_base"], [776, 4, 1, "", "set_min_denominator"], [777, 4, 1, "", "set_nestable_mode"], [778, 4, 1, "", "set_queue_timeout"], [779, 4, 1, "", "set_shape_array_mode"], [780, 4, 1, "", "set_tmp_dir"], [781, 4, 1, "", "shape"], [782, 4, 1, "", "shape_array_mode"], [786, 4, 1, "", "stable_divide"], [788, 4, 1, "", "stable_pow"], [789, 4, 1, "", "supports_inplace"], [790, 4, 1, "", "tmp_dir"], [791, 4, 1, "", "to_ivy_shape"], [792, 4, 1, "", "to_list"], [793, 4, 1, "", "to_native_shape"], [798, 4, 1, "", "to_numpy"], [799, 4, 1, "", "to_scalar"], [800, 4, 1, "", "try_else_none"], [801, 4, 1, "", "unset_array_mode"], [802, 4, 1, "", "unset_nestable_mode"], [803, 4, 1, "", "unset_shape_array_mode"], [804, 4, 1, "", "unstack"], [805, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[806, 1, 1, "", "GradientTracking"], [811, 4, 1, "", "adam_step"], [815, 4, 1, "", "adam_update"], [818, 4, 1, "", "execute_with_gradients"], [822, 4, 1, "", "gradient_descent_update"], [827, 4, 1, "", "is_variable"], [831, 4, 1, "", "lamb_update"], [835, 4, 1, "", "lars_update"], [839, 4, 1, "", "optimizer_update"], [841, 4, 1, "", "set_with_grads"], [842, 4, 1, "", "stop_gradient"], [843, 4, 1, "", "unset_with_grads"], [848, 4, 1, "", "variable"], [849, 4, 1, "", "variable_data"], [850, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[806, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[855, 4, 1, "", "conv1d"], [857, 4, 1, "", "conv1d_transpose"], [858, 4, 1, "", "conv2d"], [859, 4, 1, "", "conv2d_transpose"], [860, 4, 1, "", "conv3d"], [861, 4, 1, "", "conv3d_transpose"], [865, 4, 1, "", "depthwise_conv2d"], [867, 4, 1, "", "dropout"], [868, 4, 1, "", "linear"], [869, 4, 1, "", "lstm_update"], [870, 4, 1, "", "multi_head_attention"], [871, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[876, 4, 1, "", "cholesky"], [881, 4, 1, "", "cross"], [886, 4, 1, "", "det"], [891, 4, 1, "", "diagonal"], [896, 4, 1, "", "eigh"], [899, 4, 1, "", "eigvalsh"], [903, 4, 1, "", "inv"], [908, 4, 1, "", "matmul"], [912, 4, 1, "", "matrix_norm"], [916, 4, 1, "", "matrix_power"], [921, 4, 1, "", "matrix_rank"], [926, 4, 1, "", "matrix_transpose"], [931, 4, 1, "", "outer"], [935, 4, 1, "", "pinv"], [939, 4, 1, "", "qr"], [943, 4, 1, "", "slogdet"], [948, 4, 1, "", "solve"], [954, 4, 1, "", "svd"], [959, 4, 1, "", "svdvals"], [964, 4, 1, "", "tensordot"], [969, 4, 1, "", "trace"], [974, 4, 1, "", "vecdot"], [979, 4, 1, "", "vector_norm"], [984, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[989, 4, 1, "", "binary_cross_entropy"], [994, 4, 1, "", "cross_entropy"], [999, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1005, 4, 1, "", "clip"], [1010, 4, 1, "", "concat"], [1014, 4, 1, "", "constant_pad"], [1018, 4, 1, "", "expand_dims"], [1022, 4, 1, "", "flip"], [1026, 4, 1, "", "permute_dims"], [1030, 4, 1, "", "repeat"], [1035, 4, 1, "", "reshape"], [1040, 4, 1, "", "roll"], [1042, 4, 1, "", "split"], [1046, 4, 1, "", "squeeze"], [1050, 4, 1, "", "stack"], [1054, 4, 1, "", "swapaxes"], [1058, 4, 1, "", "tile"], [1062, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1064, 4, 1, "", "fomaml_step"], [1065, 4, 1, "", "maml_step"], [1066, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1068, 4, 1, "", "all_nested_indices"], [1069, 4, 1, "", "copy_nest"], [1070, 4, 1, "", "index_nest"], [1071, 4, 1, "", "insert_into_nest_at_index"], [1072, 4, 1, "", "insert_into_nest_at_indices"], [1073, 4, 1, "", "map"], [1074, 4, 1, "", "map_nest_at_index"], [1075, 4, 1, "", "map_nest_at_indices"], [1076, 4, 1, "", "multi_index_nest"], [1077, 4, 1, "", "nested_any"], [1078, 4, 1, "", "nested_indices_where"], [1079, 4, 1, "", "nested_map"], [1080, 4, 1, "", "nested_multi_map"], [1081, 4, 1, "", "prune_nest_at_index"], [1082, 4, 1, "", "prune_nest_at_indices"], [1083, 4, 1, "", "set_nest_at_index"], [1084, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1089, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1092, 4, 1, "", "multinomial"], [1096, 4, 1, "", "randint"], [1101, 4, 1, "", "random_normal"], [1106, 4, 1, "", "random_uniform"], [1108, 4, 1, "", "seed"], [1111, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1114, 4, 1, "", "argmax"], [1115, 4, 1, "", "argmin"], [1116, 4, 1, "", "nonzero"], [1117, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1123, 4, 1, "", "unique_all"], [1128, 4, 1, "", "unique_counts"], [1133, 4, 1, "", "unique_inverse"], [1138, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1143, 4, 1, "", "argsort"], [1148, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1154, 4, 1, "", "einsum"], [1158, 4, 1, "", "max"], [1162, 4, 1, "", "mean"], [1166, 4, 1, "", "min"], [1170, 4, 1, "", "prod"], [1174, 4, 1, "", "std"], [1178, 4, 1, "", "sum"], [1183, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1188, 4, 1, "", "all"], [1193, 4, 1, "", "any"]], "ivy.inspection": [[1199, 4, 1, "", "add_array_specs"], [1200, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1203, 0, 0, "-", "activations"], [1206, 0, 0, "-", "converters"], [1208, 0, 0, "-", "initializers"], [1217, 0, 0, "-", "layers"], [1229, 0, 0, "-", "module"], [1231, 0, 0, "-", "norms"], [1233, 0, 0, "-", "optimizers"], [1239, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1204, 1, 1, "", "GEGLU"], [1205, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1204, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1205, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1207, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1208, 1, 1, "", "Constant"], [1210, 1, 1, "", "FirstLayerSiren"], [1211, 1, 1, "", "GlorotUniform"], [1208, 1, 1, "", "KaimingNormal"], [1213, 1, 1, "", "Ones"], [1214, 1, 1, "", "Siren"], [1208, 1, 1, "", "Uniform"], [1216, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1208, 2, 1, "", "__init__"], [1208, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1210, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1211, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1208, 2, 1, "", "__init__"], [1208, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1213, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1214, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1208, 2, 1, "", "__init__"], [1208, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1216, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1218, 1, 1, "", "Conv1D"], [1219, 1, 1, "", "Conv1DTranspose"], [1220, 1, 1, "", "Conv2D"], [1221, 1, 1, "", "Conv2DTranspose"], [1222, 1, 1, "", "Conv3D"], [1223, 1, 1, "", "Conv3DTranspose"], [1224, 1, 1, "", "DepthwiseConv2D"], [1225, 1, 1, "", "Dropout"], [1226, 1, 1, "", "LSTM"], [1227, 1, 1, "", "Linear"], [1228, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1218, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1219, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1220, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1221, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1222, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1223, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1224, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1225, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1226, 2, 1, "", "__init__"], [1226, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1227, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1228, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1230, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1230, 2, 1, "", "__init__"], [1230, 2, 1, "", "build"], [1230, 3, 1, "", "build_mode"], [1230, 3, 1, "", "built"], [1230, 2, 1, "", "check_submod_rets"], [1230, 2, 1, "", "get_mod_key"], [1230, 2, 1, "", "mod_depth"], [1230, 2, 1, "", "mod_height"], [1230, 2, 1, "", "mod_with_top_mod_key_chain"], [1230, 2, 1, "", "save_weights"], [1230, 2, 1, "", "show_mod_in_top_mod"], [1230, 2, 1, "", "show_structure"], [1230, 2, 1, "", "show_v_in_top_v"], [1230, 2, 1, "", "sub_mods"], [1230, 2, 1, "", "track_submod_call_order"], [1230, 2, 1, "", "track_submod_rets"], [1230, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1232, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1232, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1234, 1, 1, "", "Adam"], [1235, 1, 1, "", "LAMB"], [1236, 1, 1, "", "LARS"], [1237, 1, 1, "", "Optimizer"], [1238, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1234, 2, 1, "", "__init__"], [1234, 2, 1, "", "set_state"], [1234, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1235, 2, 1, "", "__init__"], [1235, 2, 1, "", "set_state"], [1235, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1236, 2, 1, "", "__init__"], [1236, 2, 1, "", "set_state"], [1236, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1237, 2, 1, "", "__init__"], [1237, 2, 1, "", "set_state"], [1237, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1238, 2, 1, "", "__init__"], [1238, 2, 1, "", "set_state"], [1238, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1240, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1240, 2, 1, "", "__init__"]], "ivy.verbosity": [[1243, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 123, 133, 142, 159], "handler": [0, 142], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1195], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 159], "competit": 15, "do": [15, 129], "work": [15, 21], "The": [15, 19, 144, 159], "arrai": [15, 23, 26, 124, 128, 135, 144, 172, 177, 182, 187, 192, 197, 203, 214, 219, 227, 233, 244, 249, 257, 263, 268, 276, 287, 292, 297, 302, 314, 320, 331, 337, 342, 347, 352, 358, 380, 400, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 604, 609, 619, 624, 629, 634, 639, 644, 649, 654, 659, 664, 669, 674, 680, 685, 691, 696, 708, 719, 724, 729, 739, 744, 784, 796, 809, 825, 846, 853, 863, 874, 879, 884, 889, 894, 898, 901, 906, 910, 919, 924, 929, 934, 937, 946, 952, 957, 962, 967, 972, 977, 982, 987, 992, 997, 1003, 1008, 1012, 1016, 1020, 1024, 1028, 1033, 1038, 1044, 1048, 1052, 1056, 1060, 1087, 1094, 1099, 1104, 1121, 1126, 1131, 1136, 1141, 1146, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1181, 1186, 1191], "api": [15, 20, 123, 128, 136, 142, 144, 146, 147], "why": [16, 129], "unifi": [16, 144], "No": [16, 18], "more": [16, 18], "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1195], "set": [18, 62, 112, 133, 1118], "up": 18, "clone": 18, "ivi": [18, 19, 123, 127, 129, 130, 131, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 211, 212, 214, 215, 216, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 309, 310, 314, 315, 316, 317, 320, 321, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 358, 359, 360, 361, 380, 381, 382, 383, 399, 400, 401, 402, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686, 687, 690, 691, 692, 693, 696, 697, 698, 699, 708, 709, 710, 711, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 739, 740, 741, 742, 744, 745, 746, 747, 784, 785, 786, 787, 795, 796, 797, 798, 809, 810, 811, 812, 814, 815, 816, 818, 819, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 834, 835, 836, 838, 839, 840, 845, 846, 847, 848, 853, 854, 855, 856, 863, 864, 865, 866, 874, 875, 876, 877, 879, 880, 881, 882, 884, 885, 886, 887, 889, 890, 891, 892, 894, 895, 896, 898, 899, 901, 902, 903, 904, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 937, 938, 939, 940, 942, 943, 944, 946, 947, 948, 949, 951, 952, 953, 954, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 984, 987, 988, 989, 990, 992, 993, 994, 995, 997, 998, 999, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1087, 1088, 1089, 1090, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1164, 1165, 1166, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194], "pycharm": [18, 19], "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 145], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "detail": 18, "hypothesi": [18, 129], "log": [18, 568, 569, 570, 571], "github": 18, "codespac": 18, "pre": [18, 140], "commit": [18, 19, 140], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "interact": 19, "contain": [19, 72, 77, 136, 145, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 198, 200, 202, 204, 212, 216, 220, 222, 225, 228, 230, 234, 236, 239, 242, 245, 247, 250, 252, 255, 258, 260, 262, 264, 267, 269, 272, 275, 277, 288, 290, 293, 295, 298, 300, 303, 305, 310, 315, 317, 321, 323, 326, 329, 332, 334, 338, 340, 343, 345, 348, 350, 353, 355, 359, 361, 381, 383, 399, 401, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 679, 681, 684, 686, 690, 692, 697, 699, 709, 711, 720, 722, 725, 727, 730, 732, 740, 742, 745, 747, 785, 787, 795, 797, 810, 812, 814, 816, 819, 821, 823, 826, 828, 830, 832, 834, 836, 838, 840, 845, 847, 854, 856, 864, 866, 875, 877, 880, 882, 885, 887, 890, 892, 895, 902, 904, 907, 911, 913, 915, 917, 920, 922, 925, 927, 930, 932, 938, 940, 942, 944, 947, 949, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 976, 978, 981, 983, 988, 990, 993, 995, 998, 1000, 1004, 1006, 1009, 1013, 1017, 1021, 1025, 1029, 1031, 1034, 1036, 1039, 1041, 1045, 1049, 1053, 1057, 1061, 1088, 1090, 1095, 1097, 1100, 1102, 1105, 1107, 1110, 1112, 1120, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1142, 1144, 1147, 1149, 1153, 1157, 1161, 1165, 1169, 1173, 1177, 1180, 1182, 1187, 1189, 1192, 1194], "run": 19, "test": [19, 128, 129, 131], "local": 19, "most": 19, "out": [19, 124, 139], "id": 19, "open": 20, "task": 20, "function": [20, 124, 125, 129, 132, 134, 136, 137, 138, 142, 147, 159], "format": [20, 140], "frontend": [20, 130, 131, 147], "build": [21, 142], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 159], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 36, 86, 129, 137, 145, 159, 279, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "class": [22, 144, 1202], "activ": [24, 73, 170, 1203], "arraywithactiv": 25, "convers": [29, 79], "args_to_ivi": 30, "args_to_n": 31, "to_ivi": [32, 82], "to_n": [33, 83], "creation": [34, 84, 209], "arraywithcr": 35, "type": [36, 86, 132, 137, 159, 279], "arraywithdatatyp": 37, "devic": [38, 88, 124, 138, 372], "arraywithdevic": 39, "elementwis": [40, 90, 407], "arraywithelementwis": 41, "gener": [42, 92, 129, 694], "arraywithgener": 43, "gradient": [44, 94, 806], "arraywithgradi": 45, "imag": [46, 96], "arraywithimag": 47, "layer": [48, 98, 851, 1217], "arraywithlay": 49, "linear": [50, 100, 868, 872, 1227], "algebra": [50, 100, 872], "arraywithlinearalgebra": 51, "loss": [52, 102, 985], "arraywithloss": 53, "manipul": [54, 104, 1001], "arraywithmanipul": 55, "norm": [56, 106, 1085, 1231], "arraywithnorm": 57, "random": [58, 108, 1091], "arraywithrandom": 59, "search": [60, 110, 1113], "arraywithsearch": 61, "arraywithset": 63, "sort": [64, 114, 1139, 1145, 1146, 1147, 1148], "arraywithsort": 65, "statist": [66, 116, 1150], "arraywithstatist": 67, "util": [68, 118, 1184], "arraywithutil": 69, "wrap": [70, 120, 134], "add_ivy_array_instance_method": 71, "containerwithactiv": 74, "base": 75, "containerbas": 76, "static_to_ivi": 80, "static_to_n": 81, "containerwithcr": 85, "containerwithdatatyp": 87, "containerwithdevic": 89, "containerwithelementwis": 91, "containerwithgener": 93, "containerwithgradi": 95, "containerwithimag": 97, "containerwithlay": 99, "containerwithlinearalgebra": 101, "containerwithloss": 103, "containerwithmanipul": 105, "containerwithnorm": 107, "containerwithrandom": 109, "containerwithsearch": 111, "containerwithset": 113, "containerwithsort": 115, "containerwithstatist": 117, "containerwithutil": 119, "add_ivy_container_instance_method": 121, "deep": 122, "dive": 122, "navig": 123, "code": 123, "categor": 123, "submodul": [123, 125], "design": [123, 141, 1195], "argument": [124, 137, 138, 139], "exampl": [124, 125, 127, 130, 131, 140], "dtype": [124, 313, 314, 315, 316], "number": 124, "oper": [124, 144, 159], "integ": 124, "sequenc": 124, "nestabl": [124, 132, 136], "helper": [125, 129], "1": 125, "2": 125, "docstr": [126, 127], "tan": [127, 131, 683, 685, 686, 687], "roll": [127, 1037, 1038, 1039, 1040], "add": [127, 423, 424, 425, 426], "import": 129, "strategi": 129, "integr": 129, "we": 129, "need": 129, "how": 129, "write": 129, "effect": 129, "bonu": 129, "extend": 129, "featur": 129, "self": 129, "consist": 129, "explicit": 129, "test_array_funct": 129, "introduct": [130, 131], "full": [131, 231], "primari": 132, "composit": 132, "mix": 132, "standalon": 132, "conveni": 132, "nativ": 135, "handl": [135, 159], "instanc": [136, 144], "method": [136, 144, 145], "static": 136, "special": 136, "modul": [137, 138, 146, 1229, 1230], "other": [137, 138], "unsupport": 137, "inplac": 139, "updat": 139, "copi": 139, "lint": 140, "check": [140, 159], "hook": 140, "automat": 140, "reformat": 140, "befor": 140, "block": 142, "framework": [142, 143, 1202], "graph": [142, 147], "compil": [142, 147, 206, 207], "monkei": 144, "patch": 144, "construct": 145, "represent": 145, "recurs": 145, "built": 145, "ins": 145, "access": 145, "save": 145, "load": 145, "comparison": 145, "custom": [145, 159], "case": 145, "compartment": 145, "configur": 145, "network": [145, 147], "weight": 145, "state": [146, 159], "initi": [146, 1208], "optim": [146, 1233, 1237], "transpil": 147, "role": 147, "convert": [147, 1206], "model": [147, 154, 159], "builder": 149, "ecosystem": 150, "gym": [151, 158], "mech": 152, "memori": [153, 158], "robot": [155, 158], "vision": [156, 158], "extens": [157, 1195], "appli": 158, "librari": 158, "mechan": 158, "faq": 159, "maintain": 159, "version": 159, "dynam": 159, "size": 159, "shape": [159, 781, 1118, 1119, 1123, 1124, 1128, 1134, 1138], "gpu": 159, "deploy": 159, "control": 159, "flow": 159, "auto": 159, "differenti": 159, "replica": 159, "parallel": 159, "support": 159, "altern": 159, "structur": 159, "func": 160, "wrapper": 160, "handle_nest": 161, "handle_out_argu": 162, "infer_devic": 163, "infer_dtyp": 164, "inputs_to_ivy_arrai": 165, "inputs_to_native_arrai": 166, "outputs_to_ivy_arrai": 167, "to_native_arrays_and_back": 168, "gelu": [171, 172, 173, 174, 1205], "static_gelu": 175, "leaky_relu": [176, 177, 178, 179], "static_leaky_relu": 180, "relu": [181, 182, 183, 184], "static_relu": 185, "sigmoid": [186, 187, 188, 189], "static_sigmoid": 190, "softmax": [191, 192, 193, 194], "static_softmax": 195, "softplu": [196, 197, 198, 199], "static_softplu": 200, "tanh": [201, 203, 204, 205, 688], "static_tanh": 202, "constant": 208, "note": [209, 226, 229], "arang": [210, 211], "static_arang": 212, "asarrai": [213, 214, 215], "static_asarrai": 216, "empti": 217, "empty_lik": [218, 219, 220, 221], "static_empty_lik": 222, "ey": [223, 224], "static_ey": 225, "from_dlpack": [226, 227, 228, 229], "static_from_dlpack": 230, "full_lik": [232, 233, 234, 235], "static_full_lik": 236, "linspac": [237, 238], "static_linspac": 239, "logspac": [240, 241], "static_logspac": 242, "meshgrid": [243, 244, 245, 246], "static_meshgrid": 247, "native_arrai": [248, 249, 250, 251], "static_native_arrai": 252, "ones": [253, 254], "static_on": 255, "ones_lik": [256, 257, 258, 259], "static_ones_lik": 260, "tril": [261, 263, 264, 265], "static_tril": 262, "triu": [266, 268, 269, 270], "static_triu": 267, "zero": [271, 273, 1216], "static_zero": 272, "zeros_lik": [274, 276, 277, 278], "static_zeros_lik": 275, "as_ivy_dtyp": 284, "as_native_dtyp": 285, "astyp": [286, 287, 288, 289], "static_astyp": 290, "broadcast_arrai": [291, 292, 293, 294], "static_broadcast_arrai": 295, "broadcast_to": [296, 297, 298, 299], "static_broadcast_to": 300, "can_cast": [301, 302, 303, 304], "static_can_cast": 305, "closest_valid_dtyp": 306, "default_dtyp": 307, "default_float_dtyp": [308, 309], "static_default_float_dtyp": 310, "default_int_dtyp": 311, "default_uint_dtyp": 312, "static_dtyp": 317, "dtype_bit": 318, "finfo": [319, 320, 321, 322], "static_finfo": 323, "function_supported_dtyp": [324, 325], "static_function_supported_dtyp": 326, "function_unsupported_dtyp": [327, 328], "static_function_unsupported_dtyp": 329, "iinfo": [330, 331, 332, 333], "static_iinfo": 334, "invalid_dtyp": 335, "is_bool_dtyp": [336, 337, 338, 339], "static_is_bool_dtyp": 340, "is_float_dtyp": [341, 342, 343, 344], "static_is_float_dtyp": 345, "is_int_dtyp": [346, 347, 348, 349], "static_is_int_dtyp": 350, "is_uint_dtyp": [351, 352, 353, 354], "static_is_uint_dtyp": 355, "promote_typ": 356, "result_typ": [357, 358, 359, 360], "static_result_typ": 361, "set_default_dtyp": 362, "set_default_float_dtyp": 363, "set_default_int_dtyp": 364, "set_default_uint_dtyp": 365, "type_promote_arrai": 366, "unset_default_dtyp": 367, "unset_default_float_dtyp": 368, "unset_default_int_dtyp": 369, "unset_default_uint_dtyp": 370, "valid_dtyp": 371, "profil": 374, "as_ivy_dev": 375, "as_native_dev": 376, "clear_mem_on_dev": 377, "default_devic": 378, "dev": [379, 380, 381, 382], "static_dev": 383, "dev_util": 384, "function_supported_devic": 385, "function_unsupported_devic": 386, "get_all_ivy_arrays_on_dev": 387, "gpu_is_avail": 388, "num_cpu_cor": 389, "num_gpu": 390, "num_ivy_arrays_on_dev": 391, "percent_used_mem_on_dev": 392, "print_all_ivy_arrays_on_dev": 393, "set_default_devic": 394, "set_split_factor": 395, "split_factor": 396, "split_func_cal": 397, "to_devic": [398, 400, 401, 402], "static_to_devic": 399, "total_mem_on_dev": 403, "tpu_is_avail": 404, "unset_default_devic": 405, "used_mem_on_dev": 406, "ab": [408, 409, 410, 411], "static_ab": 412, "aco": [413, 414, 415, 416], "static_aco": 417, "acosh": [418, 419, 420, 421], "static_acosh": 422, "static_add": 427, "asin": [428, 429, 430, 431], "static_asin": 432, "asinh": [433, 434, 435, 436], "static_asinh": 437, "atan": [438, 439, 440, 441], "static_atan": 442, "atan2": [443, 444, 445, 446], "static_atan2": 447, "atanh": [448, 449, 450, 451], "static_atanh": 452, "bitwise_and": [453, 454, 455, 456], "static_bitwise_and": 457, "bitwise_invert": [458, 459, 460, 461], "static_bitwise_invert": 462, "bitwise_left_shift": [463, 464, 465, 466], "static_bitwise_left_shift": 467, "bitwise_or": [468, 469, 470, 471], "static_bitwise_or": 472, "bitwise_right_shift": [473, 474, 475, 476], "static_bitwise_right_shift": 477, "bitwise_xor": [478, 479, 480, 481], "static_bitwise_xor": 482, "ceil": [483, 484, 485, 486], "static_ceil": 487, "co": [488, 489, 490, 491], "static_co": 492, "cosh": [493, 494, 495, 496], "static_cosh": 497, "divid": [498, 499, 500, 501], "static_divid": 502, "equal": [503, 504, 505, 506], "static_equ": 507, "erf": [508, 509, 510, 511], "static_erf": 512, "exp": [513, 514, 515, 516], "static_exp": 517, "expm1": [518, 519, 520, 521], "static_expm1": 522, "floor": [523, 524, 525, 526], "static_floor": 527, "floor_divid": [528, 529, 530, 531], "static_floor_divid": 532, "greater": [533, 534, 535, 536], "static_great": 537, "greater_equ": [538, 539, 540, 541], "static_greater_equ": 542, "isfinit": [543, 544, 545, 546], "static_isfinit": 547, "isinf": [548, 549, 550, 551], "static_isinf": 552, "isnan": [553, 554, 555, 556], "static_isnan": 557, "less": [558, 559, 560, 561], "static_less": 562, "less_equ": [563, 564, 565, 566], "static_less_equ": 567, "static_log": 572, "log10": [573, 574, 575, 576], "static_log10": 577, "log1p": [578, 579, 580, 581], "static_log1p": 582, "log2": [583, 584, 585, 586], "static_log2": 587, "logaddexp": [588, 589, 590, 591], "static_logaddexp": 592, "logical_and": [593, 594, 595, 596], "static_logical_and": 597, "logical_not": [598, 599, 600, 601], "static_logical_not": 602, "logical_or": [603, 604, 605, 606], "static_logical_or": 607, "logical_xor": [608, 609, 610, 611], "static_logical_xor": 612, "maximum": 613, "minimum": [614, 615, 616], "static_minimum": 617, "multipli": [618, 619, 620, 621], "static_multipli": 622, "neg": [623, 624, 625, 626], "static_neg": 627, "not_equ": [628, 629, 630, 631], "static_not_equ": 632, "posit": [633, 634, 635, 636], "static_posit": 637, "pow": [638, 639, 640, 641], "static_pow": 642, "remaind": [643, 644, 645, 646], "static_remaind": 647, "round": [648, 649, 650, 651], "static_round": 652, "sign": [653, 654, 655, 656], "static_sign": 657, "sin": [658, 659, 660, 661], "static_sin": 662, "sinh": [663, 664, 665, 666], "static_sinh": 667, "sqrt": [668, 669, 670, 671], "static_sqrt": 672, "squar": [673, 674, 675, 676], "static_squar": 677, "subtract": [678, 680, 681, 682], "static_subtract": 679, "static_tan": 684, "trunc": [689, 691, 692, 693], "static_trunc": 690, "all_equ": [695, 696, 697, 698], "static_all_equ": 699, "arg_info": 700, "arg_nam": 701, "array_equ": 702, "arrays_equ": 703, "assert_supports_inplac": 704, "cache_fn": 705, "clip_matrix_norm": 706, "clip_vector_norm": [707, 708, 709, 710], "static_clip_vector_norm": 711, "container_typ": 712, "copy_arrai": 713, "cumprod": 714, "cumsum": 715, "current_backend_str": 716, "default": 717, "einops_rearrang": [718, 719, 720, 721], "static_einops_rearrang": 722, "einops_reduc": [723, 724, 725, 726], "static_einops_reduc": 727, "einops_repeat": [728, 729, 730, 731], "static_einops_repeat": 732, "exist": 733, "floormod": 734, "fourier_encod": 735, "function_supported_devices_and_dtyp": 736, "function_unsupported_devices_and_dtyp": 737, "gather": [738, 739, 740, 741], "static_gath": 742, "gather_nd": [743, 744, 745, 746], "static_gather_nd": 747, "get_all_arrays_in_memori": 748, "get_array_mod": 749, "get_min_bas": 750, "get_min_denomin": 751, "get_nestable_mod": 752, "get_num_dim": 753, "get_referrers_recurs": 754, "has_nan": 755, "indices_wher": 756, "inplace_arrays_support": 757, "inplace_decr": 758, "inplace_incr": 759, "inplace_upd": 760, "inplace_variables_support": 761, "is_arrai": 762, "is_ivy_arrai": 763, "is_ivy_contain": 764, "is_native_arrai": 765, "match_kwarg": 766, "multiprocess": 767, "num_arrays_in_memori": 768, "one_hot": 769, "print_all_arrays_in_memori": 770, "queue_timeout": 771, "scatter_flat": 772, "scatter_nd": 773, "set_array_mod": 774, "set_min_bas": 775, "set_min_denomin": 776, "set_nestable_mod": 777, "set_queue_timeout": 778, "set_shape_array_mod": 779, "set_tmp_dir": 780, "shape_array_mod": 782, "stable_divid": [783, 784, 785, 786], "static_stable_divid": 787, "stable_pow": 788, "supports_inplac": 789, "tmp_dir": 790, "to_ivy_shap": 791, "to_list": 792, "to_native_shap": 793, "to_numpi": [794, 796, 797, 798], "static_to_numpi": 795, "to_scalar": 799, "try_else_non": 800, "unset_array_mod": 801, "unset_nestable_mod": 802, "unset_shape_array_mod": 803, "unstack": 804, "value_is_nan": 805, "adam_step": [808, 809, 810, 811], "static_adam_step": 812, "adam_upd": [813, 814, 815], "static_adam_upd": 816, "execute_with_gradi": [817, 818], "static_execute_with_gradi": 819, "gradient_descent_upd": [820, 821, 822], "static_gradient_descent_upd": 823, "is_vari": [824, 825, 826, 827], "static_is_vari": 828, "lamb_upd": [829, 830, 831], "static_lamb_upd": 832, "lars_upd": [833, 834, 835], "static_lars_upd": 836, "optimizer_upd": [837, 838, 839], "static_optimizer_upd": 840, "set_with_grad": 841, "stop_gradi": 842, "unset_with_grad": 843, "variabl": [844, 846, 847, 848], "static_vari": 845, "variable_data": 849, "with_grad": 850, "conv1d": [852, 853, 854, 855, 1218], "static_conv1d": 856, "conv1d_transpos": 857, "conv2d": [858, 1220], "conv2d_transpos": 859, "conv3d": [860, 1222], "conv3d_transpos": 861, "depthwise_conv2d": [862, 863, 864, 865], "static_depthwise_conv2d": 866, "dropout": [867, 1225], "lstm_updat": 869, "multi_head_attent": 870, "scaled_dot_product_attent": 871, "choleski": [873, 874, 875, 876], "static_choleski": 877, "cross": [878, 879, 880, 881], "static_cross": 882, "det": [883, 884, 885, 886], "static_det": 887, "diagon": [888, 889, 890, 891], "static_diagon": 892, "eigh": [893, 894, 895, 896], "eigvalsh": [897, 898, 899], "inv": [900, 901, 902, 903], "static_inv": 904, "matmul": [905, 906, 907, 908], "matrix_norm": [909, 910, 911, 912], "static_matrix_norm": 913, "matrix_pow": [914, 915, 916], "static_matrix_pow": 917, "matrix_rank": [918, 919, 920, 921], "static_matrix_rank": 922, "matrix_transpos": [923, 924, 925, 926], "static_matrix_transpos": 927, "outer": [928, 929, 930, 931], "static_out": 932, "pinv": [933, 934, 935], "qr": [936, 937, 938, 939], "static_qr": 940, "slogdet": [941, 942, 943], "static_slogdet": 944, "solv": [945, 946, 947, 948], "static_solv": 949, "svd": [950, 952, 953, 954], "static_svd": 951, "svdval": [955, 957, 958, 959], "static_svdv": 956, "tensordot": [960, 962, 963, 964], "static_tensordot": 961, "trace": [965, 967, 968, 969], "static_trac": 966, "vecdot": [970, 972, 973, 974], "static_vecdot": 971, "vector_norm": [975, 977, 978, 979], "static_vector_norm": 976, "vector_to_skew_symmetric_matrix": [980, 982, 983, 984], "static_vector_to_skew_symmetric_matrix": 981, "binary_cross_entropi": [986, 987, 988, 989], "static_binary_cross_entropi": 990, "cross_entropi": [991, 992, 993, 994], "static_cross_entropi": 995, "sparse_cross_entropi": [996, 997, 998, 999], "static_sparse_cross_entropi": 1000, "clip": [1002, 1003, 1004, 1005], "static_clip": 1006, "concat": [1007, 1008, 1009, 1010], "constant_pad": [1011, 1012, 1013, 1014], "expand_dim": [1015, 1016, 1017, 1018], "flip": [1019, 1020, 1021, 1022], "permute_dim": [1023, 1024, 1025, 1026], "repeat": [1027, 1028, 1029, 1030], "static_repeat": 1031, "reshap": [1032, 1033, 1034, 1035], "static_reshap": 1036, "static_rol": 1041, "split": 1042, "squeez": [1043, 1044, 1045, 1046], "stack": [1047, 1048, 1049, 1050], "swapax": [1051, 1052, 1053, 1054], "tile": [1055, 1056, 1057, 1058], "zero_pad": [1059, 1060, 1061, 1062], "meta": 1063, "fomaml_step": 1064, "maml_step": 1065, "reptile_step": 1066, "nest": 1067, "all_nested_indic": 1068, "copy_nest": 1069, "index_nest": 1070, "insert_into_nest_at_index": 1071, "insert_into_nest_at_indic": 1072, "map": 1073, "map_nest_at_index": 1074, "map_nest_at_indic": 1075, "multi_index_nest": 1076, "nested_ani": 1077, "nested_indices_wher": 1078, "nested_map": 1079, "nested_multi_map": 1080, "prune_nest_at_index": 1081, "prune_nest_at_indic": 1082, "set_nest_at_index": 1083, "set_nest_at_indic": 1084, "layer_norm": [1086, 1087, 1088, 1089], "static_layer_norm": 1090, "multinomi": 1092, "randint": [1093, 1094, 1095, 1096], "static_randint": 1097, "random_norm": [1098, 1099, 1100, 1101], "static_random_norm": 1102, "random_uniform": [1103, 1104, 1105, 1106], "static_random_uniform": 1107, "seed": 1108, "shuffl": [1109, 1110, 1111], "static_shuffl": 1112, "argmax": 1114, "argmin": 1115, "nonzero": 1116, "where": 1117, "depend": [1118, 1119, 1123, 1124, 1128, 1134, 1138], "output": [1118, 1119, 1123, 1124, 1128, 1134, 1138], "unique_al": [1119, 1121, 1122, 1123], "static_unique_al": 1120, "unique_count": [1124, 1126, 1127, 1128], "static_unique_count": 1125, "unique_invers": [1129, 1131, 1132, 1133], "static_unique_invers": 1130, "unique_valu": [1134, 1136, 1137, 1138], "static_unique_valu": 1135, "argsort": [1140, 1141, 1142, 1143], "static_argsort": 1144, "static_sort": 1149, "einsum": [1151, 1152, 1153, 1154], "max": [1155, 1156, 1157, 1158], "mean": [1159, 1160, 1161, 1162], "min": [1163, 1164, 1165, 1166], "prod": [1167, 1168, 1169, 1170], "std": [1171, 1172, 1173, 1174], "sum": [1175, 1176, 1177, 1178], "var": [1179, 1181, 1182, 1183], "static_var": 1180, "all": [1185, 1186, 1187, 1188], "static_al": 1189, "ani": [1190, 1191, 1192, 1193], "static_ani": 1194, "content": 1195, "overview": 1195, "quick": 1195, "start": 1195, "roadmap": [1195, 1201], "citat": 1195, "inspect": 1198, "add_array_spec": 1199, "fn_array_spec": 1200, "geglu": 1204, "to_ivy_modul": 1207, "firstlayersiren": 1210, "glorotuniform": 1211, "Ones": 1213, "siren": 1214, "conv1dtranspos": 1219, "conv2dtranspos": 1221, "conv3dtranspos": 1223, "depthwiseconv2d": 1224, "lstm": 1226, "multiheadattent": 1228, "layernorm": 1232, "adam": 1234, "lamb": 1235, "lar": 1236, "sgd": 1238, "sequenti": [1239, 1240], "verbos": 1242, "cprint": 1243}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})