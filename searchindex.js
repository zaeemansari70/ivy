Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/numpy", "functional/frontends/numpy/mathematical_functions", "functional/frontends/numpy/mathematical_functions/add", "functional/frontends/numpy/mathematical_functions/tan", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/add", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/numpy.rst", "functional/frontends/numpy/mathematical_functions.rst", "functional/frontends/numpy/mathematical_functions/add.rst", "functional/frontends/numpy/mathematical_functions/tan.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/add.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Numpy", "Mathematical functions", "add", "tan", "Torch", "Pointwise ops", "add", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 105, 123, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 247, 250, 281, 287, 306, 311, 325, 397, 399, 409, 424, 427, 449, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 449], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 247, 288, 417, 418, 420, 421, 449, 456, 457, 458, 459, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 492, 493], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496], "base": [0, 19, 27, 30, 32, 38, 54, 86, 96, 105, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 187, 209, 220, 221, 222, 223, 235, 247, 272, 295, 302, 311, 429, 430, 431, 433, 437, 438, 456, 457, 458, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "object": [0, 40, 43, 86, 92, 105, 121, 137, 182, 311, 397, 400, 402, 404, 405, 406, 411, 412, 413, 414, 417, 423, 461, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 483], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 105, 106, 107, 108, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 311, 312, 417, 418, 420, 421, 449, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 86, 87, 417, 421], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 67, 68, 69, 71, 72, 73, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 116, 117, 118, 121, 123, 137, 146, 147, 155, 156, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 275, 278, 282, 288, 290, 293, 294, 295, 296, 301, 302, 308, 311, 314, 316, 318, 319, 320, 326, 327, 329, 332, 334, 335, 337, 339, 341, 343, 344, 345, 346, 347, 348, 357, 359, 362, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459, 460, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 137, 146, 161, 165, 169, 181, 247, 294, 459, 460, 482, 483], "kwarg": [0, 4, 38, 40, 42, 137, 146, 161, 165, 169, 247, 287, 459, 460, 482, 483], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 136, 137, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 459, 460, 470, 479, 480, 486, 490], "current": [0, 4, 5, 12, 16, 18, 20, 21, 28, 34, 38, 43, 54, 55, 105, 122, 124, 136, 137, 146, 170, 171, 175, 177, 247, 271, 278, 282, 289, 291, 397, 398, 407, 408, 449], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 83, 84, 86, 87, 105, 128, 137, 146, 147, 161, 165, 169, 187, 191, 192, 211, 244, 247, 249, 250, 254, 262, 269, 287, 294, 335, 338, 347, 377, 386, 397, 403, 415, 416, 437, 439, 444, 452, 454, 459, 460, 482, 483], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 85, 86, 97, 101, 102, 105, 122, 137, 156, 180, 187, 236, 247, 252, 311, 314, 316, 318, 320, 348, 366, 367, 397, 403, 409, 437, 443, 445, 449, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 146, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 459, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 86, 87, 88, 90, 92, 93, 94, 97, 98, 100, 104, 105, 114, 128, 137, 146, 147, 156, 171, 175, 180, 181, 187, 213, 241, 247, 262, 269, 270, 305, 311, 314, 318, 327, 332, 335, 343, 346, 348, 352, 366, 370, 377, 382, 385, 388, 393, 394, 395, 396, 397, 399, 409, 410, 417, 418, 419, 420, 421, 424, 428, 429, 430, 432, 437, 442, 443, 444, 445, 446, 447, 448, 449, 455, 459, 460, 470, 478, 481, 486, 490], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 75, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 121, 123, 124, 136, 137, 146, 147, 157, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 177, 179, 180, 181, 187, 236, 247, 249, 259, 260, 262, 269, 270, 271, 277, 281, 289, 290, 291, 293, 294, 309, 311, 314, 315, 316, 318, 319, 320, 322, 324, 325, 327, 329, 331, 335, 346, 348, 350, 352, 357, 365, 366, 370, 371, 373, 375, 376, 377, 379, 382, 384, 386, 387, 389, 397, 402, 403, 404, 405, 410, 411, 412, 413, 414, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 459, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 247, 308, 449], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 83, 84, 86, 87, 88, 90, 93, 94, 98, 100, 104, 187, 213, 247, 274, 299, 327, 332, 377, 385], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 105, 111, 137, 187, 191, 210, 235, 247, 254, 281, 302, 373, 374, 375, 376, 397, 408, 424, 425, 426, 428, 437, 439, 441, 443, 445, 449, 482, 483], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 105, 116, 117, 118, 137, 146, 147, 179, 180, 181, 247, 272, 273, 292, 295, 296, 297, 301, 302, 415, 416, 484, 485], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 137, 156, 166, 167, 178, 179, 180, 181, 187, 195, 247, 248, 295, 296, 297, 298, 311, 314, 316, 317, 318, 319, 320, 348, 350, 357, 359, 362, 365, 397, 398, 407, 408, 409, 413, 414, 417, 422, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 443, 445, 470, 479, 486, 487, 488, 489, 490, 491], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 136, 137, 146, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 294, 299, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 459, 460, 486, 490], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 93, 94, 97, 99, 100, 103, 104, 105, 111, 122, 137, 156, 157, 159, 171, 172, 173, 174, 175, 180, 182, 184, 185, 187, 191, 192, 196, 197, 198, 201, 202, 203, 204, 205, 209, 211, 213, 214, 218, 229, 230, 232, 237, 244, 247, 251, 252, 258, 259, 266, 269, 273, 284, 299, 305, 306, 307, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 359, 361, 366, 368, 369, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 443, 444, 446, 447, 449], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 86, 87, 89, 90, 91, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 111, 113, 128, 137, 156, 180, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 209, 210, 211, 220, 221, 223, 224, 226, 227, 231, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 281, 311, 314, 316, 318, 319, 320, 348, 349, 350, 357, 359, 362, 363, 365, 366, 370, 371, 373, 374, 375, 376, 377, 381, 382, 386, 387, 388, 389, 393, 394, 395, 397, 409, 410, 417, 420, 421, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 327, 333, 449, 455], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 67, 68, 69, 247, 306, 437, 438, 449], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 247, 306, 449], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 67, 69, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 90, 92, 94, 97, 98, 100, 101, 102, 103, 104, 105, 111, 113, 119, 137, 156, 157, 158, 159, 162, 163, 171, 175, 180, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 229, 230, 232, 234, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 251, 252, 253, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 279, 280, 281, 283, 284, 285, 286, 290, 299, 303, 305, 306, 307, 309, 310, 311, 315, 317, 322, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 403, 407, 408, 409, 415, 416, 417, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 470, 481], "arrai": [0, 4, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 119, 121, 123, 125, 126, 128, 132, 137, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 177, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 255, 256, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 280, 281, 283, 284, 286, 289, 290, 291, 293, 294, 299, 303, 305, 306, 307, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 322, 324, 325, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 409, 410, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 470, 478, 481], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 75, 77, 78, 79, 80, 82, 85, 86, 93, 94, 97, 99, 100, 104, 105, 111, 137, 156, 157, 159, 171, 173, 175, 182, 187, 191, 192, 194, 195, 197, 198, 201, 202, 204, 205, 209, 211, 213, 214, 218, 223, 229, 230, 232, 237, 244, 247, 251, 252, 255, 256, 259, 266, 269, 284, 299, 305, 327, 328, 330, 331, 333, 334, 335, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 356, 357, 359, 361, 362, 363, 366, 368, 369, 371, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 449], "0": [0, 4, 23, 24, 25, 38, 40, 41, 42, 43, 75, 77, 78, 79, 80, 81, 82, 86, 87, 91, 95, 96, 100, 101, 102, 103, 104, 105, 111, 121, 137, 139, 142, 146, 149, 153, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 209, 210, 211, 214, 220, 221, 223, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 251, 252, 255, 256, 258, 259, 260, 266, 269, 270, 275, 284, 290, 293, 294, 299, 305, 306, 307, 311, 313, 314, 318, 319, 327, 330, 331, 333, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 366, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 397, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 449, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 75, 77, 78, 79, 80, 81, 82, 86, 93, 94, 97, 99, 100, 103, 104, 105, 111, 122, 137, 157, 171, 172, 173, 174, 175, 177, 180, 184, 187, 191, 192, 196, 197, 198, 201, 202, 203, 204, 205, 209, 211, 213, 214, 218, 229, 230, 232, 237, 244, 247, 251, 252, 258, 259, 266, 269, 273, 291, 299, 305, 306, 307, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 361, 366, 368, 369, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 390, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 443, 444, 446, 447, 449], "function": [0, 4, 5, 6, 14, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 456, 457, 458, 486, 489, 491], "py": [0, 4, 5, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 417, 418, 420, 421], "noqa": [0, 4, 5, 86, 97, 187, 191, 197, 202, 205, 237, 244, 348, 351, 377, 381, 382, 386, 437, 439], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 75, 76, 77, 80, 82, 83, 84, 86, 87, 92, 96, 97, 101, 102, 105, 109, 110, 111, 115, 120, 122, 124, 127, 132, 136, 137, 146, 147, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 233, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 249, 251, 254, 255, 261, 262, 268, 270, 279, 280, 281, 283, 284, 285, 286, 288, 293, 294, 295, 296, 297, 300, 301, 302, 310, 311, 313, 314, 316, 318, 319, 320, 322, 325, 327, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 105, 122, 449], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 86, 97, 137, 156, 187, 188, 231, 235, 348, 356, 364, 365, 366, 369, 377, 381, 388, 429, 430, 431, 433, 437, 440, 442, 443, 444, 445], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 348, 357, 368, 370, 371, 415, 416, 417, 421, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 484, 485], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 83, 84, 86, 88, 98, 137, 182, 187, 191, 192, 207, 211, 214, 219, 244, 247, 248, 262, 263, 264, 265, 266, 269, 276, 283, 284, 285, 286, 301, 302, 311, 315, 335, 338, 347, 377, 386, 397, 403, 407, 415, 416, 417, 421, 437, 439, 446, 449], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 105, 115, 137, 146, 181, 187, 195, 247, 254, 281, 311, 325, 393, 394, 395, 459, 460, 482, 483, 486, 490, 492, 493], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 311, 317, 429, 430, 431, 433, 449], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 86, 87, 89, 93, 95, 96, 99, 101, 102, 103, 105, 111, 113, 137, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 175, 177, 180, 181, 182, 187, 236, 247, 249, 259, 269, 270, 276, 309, 327, 333, 348, 352, 357, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 388, 389, 392, 397, 402, 404, 405, 411, 412, 413, 414, 424, 425, 426, 429, 430, 431, 433, 434, 435, 437, 438, 442, 444, 446, 447, 448], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 247, 252, 335, 344, 345], "associ": [0, 5, 19, 28, 30, 55, 187, 191, 231, 348, 359, 362, 372], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 75, 77, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 115, 116, 117, 118, 124, 136, 137, 156, 180, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 249, 256, 259, 260, 261, 267, 269, 270, 288, 290, 293, 294, 301, 302, 311, 322, 335, 338, 341, 342, 347, 348, 357, 359, 362, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 397, 398, 403, 408, 409, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "str": [0, 5, 33, 34, 86, 97, 105, 109, 115, 116, 117, 120, 121, 123, 124, 125, 126, 129, 130, 131, 136, 137, 153, 156, 157, 159, 162, 163, 164, 165, 181, 247, 249, 261, 263, 264, 265, 288, 293, 294, 335, 336, 338, 340, 341, 342, 348, 363, 397, 403, 437, 438], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 311, 315, 449, 455], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 247, 249], "i": [0, 5, 19, 21, 22, 38, 41, 43, 86, 87, 97, 187, 188, 195, 199, 201, 203, 211, 212, 215, 229, 230, 232, 235, 236, 247, 251, 252, 311, 314, 316, 318, 319, 320, 348, 350, 356, 359, 362, 365, 366, 369, 371, 377, 389, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 85, 86, 97, 105, 110, 128, 137, 153, 187, 188, 195, 199, 201, 203, 209, 211, 212, 215, 220, 222, 229, 230, 232, 235, 236, 311, 314, 316, 318, 319, 320, 348, 350, 356, 359, 362, 365, 366, 371, 377, 389, 417, 420, 421, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 86, 87, 97, 105, 112, 114, 137, 166, 167, 168, 169, 181, 187, 191, 247, 287, 290, 293, 294, 348, 356, 357, 361, 363, 370, 371, 377, 381, 382, 386, 388, 424, 425, 427, 429, 430, 431, 432, 433, 437, 438, 449], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 75, 76, 77, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 116, 117, 118, 119, 137, 146, 147, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 176, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 249, 255, 256, 259, 260, 267, 268, 269, 270, 274, 275, 276, 278, 281, 282, 283, 284, 286, 287, 288, 290, 292, 293, 294, 297, 299, 301, 302, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 357, 359, 362, 363, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 71, 72, 73, 83, 84, 105, 122, 449], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 449], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 449], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 86, 92, 187, 191, 195, 216, 220, 221, 223, 224, 231, 236, 238, 239, 244, 247, 262, 283, 287, 288, 348, 356, 393, 394, 395, 396, 437, 442, 444, 470, 481, 482, 483], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 137, 156, 247, 263, 264, 265, 417, 418], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 75, 77, 78, 79, 80, 81, 82, 85, 105, 120, 137, 146, 147, 172, 176, 179, 180, 181, 182, 184, 186, 187, 192, 197, 202, 205, 211, 214, 229, 230, 232, 237, 247, 269, 272, 273, 287, 293, 294, 295, 296, 301, 302, 311, 313, 314, 318, 319, 335, 341, 343, 344, 346, 347, 348, 351, 352, 357, 373, 374, 377, 378, 381, 382, 384, 386, 390, 393, 394, 395, 396, 397, 398, 400, 406, 407, 408, 410, 415, 416, 424, 425, 426, 427, 429, 430, 431, 437, 438, 446, 447, 449, 470, 478, 481, 482, 483, 484, 485, 486, 488, 489], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 137, 181, 247, 292, 297, 308, 311, 315, 397, 398, 403, 407, 408, 470, 481, 482, 483, 486, 490], "nativ": [0, 6, 33, 35, 40, 41, 86, 98, 105, 109, 110, 115, 137, 153, 154, 155, 156, 157, 176, 183, 186, 247, 281, 283, 286, 459, 460], "native_arrai": [0, 6, 12, 75, 77, 78, 79, 80, 81, 82, 86, 97, 137, 159, 175, 187, 192, 197, 202, 211, 214, 229, 230, 232, 247, 252, 258, 259, 266, 269, 305, 306, 307, 335, 338, 341, 342, 347, 348, 350, 351, 352, 368, 373, 374, 376, 377, 378, 381, 382, 384, 387, 390, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 446, 447], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 71, 72, 75, 77, 78, 79, 80, 82, 86, 87, 94, 95, 96, 97, 99, 100, 104, 105, 111, 121, 137, 141, 144, 146, 151, 156, 157, 159, 161, 165, 169, 171, 174, 175, 180, 182, 187, 189, 190, 191, 192, 195, 197, 198, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 218, 220, 221, 222, 223, 229, 230, 232, 235, 237, 238, 239, 244, 247, 251, 252, 258, 259, 266, 269, 270, 284, 290, 293, 294, 299, 302, 305, 306, 307, 309, 327, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 355, 359, 361, 365, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 409, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 136, 137, 153, 154, 155, 156, 157, 159, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 281, 283, 284, 285, 286, 290, 293, 294, 295, 296, 299, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 322, 324, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 403, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 86, 88, 98, 247, 306], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 105, 111, 114, 119, 137, 156, 157, 168, 172, 176, 181, 184, 186, 187, 197, 213, 214, 215, 216, 217, 218, 226, 227, 247, 248, 251, 252, 259, 262, 266, 268, 274, 281, 283, 284, 286, 287, 299, 309, 311, 314, 315, 316, 317, 318, 319, 320, 348, 349, 357, 366, 371, 377, 387, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 417, 418, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459, 460, 482, 483, 486, 487, 488, 489, 490, 491], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 437, 443, 445], "dict": [0, 12, 32, 41, 42, 137, 146, 147, 156, 159, 162, 163, 164, 165, 247, 249, 263, 264, 265, 397, 399, 400, 403, 406, 409, 410], "previous": [0, 12, 18, 21, 27, 28, 38, 247, 254], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 86, 87, 105, 111, 114, 116, 117, 118, 137, 156, 187, 215, 216, 217, 247, 253, 308, 311, 317, 322, 348, 349, 351, 370, 371, 393, 394, 395, 397, 410, 424, 425, 426, 428, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 105, 111, 128, 137, 182, 187, 188, 189, 190, 192, 193, 194, 195, 204, 205, 209, 210, 220, 221, 222, 223, 231, 235, 236, 239, 240, 244, 348, 353, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 449], "wa": [0, 12, 15, 25, 38, 40, 247, 308, 397, 410, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "last": [0, 12, 16, 25, 29, 55, 75, 80, 137, 156, 327, 331, 335, 345, 348, 350, 352, 357, 369, 370, 373, 375, 376, 377, 382, 386, 387, 389, 434, 435, 436, 446, 447, 448, 470, 480], "henc": [0, 12, 429, 430, 431, 433], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 86, 95, 96, 105, 119, 187, 229, 230, 247, 290, 293, 294, 335, 343, 345, 348, 368, 377, 385, 387, 417, 418, 449, 470, 478, 480], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 137, 181, 187, 246, 335, 346, 347, 393, 394, 395, 397, 409, 429, 430, 431, 433, 437, 442, 444], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 377, 378], "swap": [0, 12, 377, 390], "python": [0, 12, 13, 14, 15, 18, 21, 38, 40, 41, 55, 86, 87, 137, 176, 186, 187, 236, 449, 455], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 106, 107, 108, 138, 145, 148, 312, 449, 462, 465, 468], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 453, 454, 455, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 105, 122, 124, 136, 137, 172, 174, 184, 247, 278, 281, 282, 288, 311, 314, 316, 318, 319, 320, 325, 449, 455, 459, 460, 486, 487, 488, 489, 490, 491], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 449, 455], "explos": [13, 15, 449], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 86, 91, 98, 137, 146, 147, 181, 187, 234, 245, 247, 273, 305, 348, 361, 364, 365, 366, 377, 387, 389, 397, 398, 400, 402, 404, 405, 406, 407, 408, 411, 412, 413, 414, 437, 438, 446, 447, 448, 449, 492, 493], "huge": [13, 15, 41, 449], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 105, 112, 120, 121, 123, 125, 126, 128, 137, 173, 174, 175, 187, 191, 195, 203, 211, 212, 229, 230, 231, 235, 236, 237, 238, 246, 247, 268, 273, 274, 289, 307, 310, 327, 331, 335, 346, 348, 353, 359, 364, 366, 370, 377, 378, 380, 383, 384, 386, 387, 389, 391, 392, 393, 394, 395, 396, 417, 418, 422, 424, 427, 429, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481], "tool": [13, 16, 39, 43, 54, 55, 449], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 75, 78, 86, 87, 89, 90, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 121, 137, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 256, 263, 264, 265, 267, 311, 317, 325, 335, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "explod": [13, 14, 449], "onto": [13, 14, 137, 166, 167, 397, 403, 409, 449], "scene": [13, 14, 22, 37, 39, 311, 314, 316, 318, 319, 320, 449], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 137, 159, 187, 191, 192, 197, 202, 205, 211, 214, 232, 237, 244, 247, 251, 252, 258, 259, 266, 269, 307, 335, 338, 341, 342, 347, 348, 349, 350, 351, 361, 365, 368, 372, 373, 374, 377, 378, 381, 382, 384, 386, 389, 390, 415, 416, 417, 421, 424, 426, 427, 428, 434, 435, 437, 438, 439, 446, 447, 449, 455], "why": [13, 15, 19, 32, 35, 36, 40, 449], "unifi": [13, 15, 31, 38, 55, 137, 166, 167, 168, 169, 181, 449], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 83, 84, 86, 97, 101, 102, 105, 113, 137, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 231, 233, 235, 236, 238, 239, 240, 241, 243, 244, 246, 247, 254, 281, 290, 311, 314, 316, 318, 319, 320, 335, 347, 348, 349, 350, 351, 352, 355, 356, 359, 361, 362, 363, 365, 366, 368, 369, 370, 371, 377, 385, 417, 423, 424, 425, 426, 429, 430, 431, 433, 437, 438, 439, 440, 442, 443, 444, 445, 449], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 449], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 247, 251, 252, 258, 307, 311, 313, 314, 316, 318, 319, 320, 335, 341, 377, 389, 424, 427, 437, 438, 443, 445, 449, 455], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 86, 97, 105, 121, 187, 191, 192, 197, 202, 205, 211, 237, 244, 348, 351, 377, 381, 382, 386, 415, 416, 417, 420, 429, 430, 431, 434, 435, 437, 439, 443, 445, 449, 455, 484, 485], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 137, 181, 247, 263, 327, 328, 331, 348, 368, 377, 386, 424, 428, 449], "collabor": [13, 14, 15, 449], "consortium": [13, 15, 449, 455], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 111, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 136, 137, 139, 140, 141, 142, 143, 144, 149, 150, 151, 153, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 233, 235, 236, 238, 239, 240, 241, 243, 244, 246, 247, 251, 252, 283, 284, 286, 303, 311, 317, 325, 327, 331, 333, 335, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 377, 381, 382, 383, 385, 386, 388, 389, 417, 423, 424, 425, 426, 427, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "api": [13, 14, 18, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439, 449, 455], "open": [14, 15, 16, 17, 18, 21, 24, 54, 86, 87, 417, 419, 421, 449], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 417, 418, 420, 421], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18], "year": [14, 16, 55, 449], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 449], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 187, 213, 311, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 486, 487, 488, 489, 490, 491], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 86, 88, 98, 105, 114, 137, 179, 180, 181, 327, 329, 348, 355, 377, 385, 417, 419, 449, 455], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 137, 161, 165, 169, 377, 380, 392, 397, 409], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 449, 455], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 75, 78, 79, 81, 86, 87, 90, 92, 99, 101, 102, 103, 137, 158, 159, 162, 171, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 252, 255, 256, 258, 259, 266, 269, 276, 285, 305, 306, 307, 327, 333, 335, 338, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 387, 390, 397, 410, 415, 416, 417, 418, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 486, 490, 492, 493], "term": [14, 19, 335, 345, 470, 480], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 311, 314, 318, 335, 345, 377, 391, 393, 394, 395, 396, 424, 425, 426, 429, 430, 431, 470, 481, 482, 483], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 348, 353, 449, 455], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 86, 87, 137, 146, 147, 171, 175, 177, 181, 187, 204, 226, 227, 237, 239, 244, 247, 248, 251, 252, 253, 271, 277, 278, 282, 289, 291, 303, 335, 344, 348, 350, 356, 357, 359, 362, 366, 367, 370, 377, 378, 382, 386, 397, 399, 403, 409, 417, 420, 421, 424, 425, 426, 427, 429, 430, 449, 492, 493], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 377, 387], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 105, 121, 137, 158, 159, 162, 163, 187, 191, 231, 243, 335, 344, 377, 389, 437, 442, 444, 449], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 187, 226, 227, 429, 430, 437, 440], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 86, 87, 88, 97, 98, 137, 161, 165, 169, 176, 181, 186, 187, 188, 191, 192, 197, 201, 202, 205, 210, 211, 226, 227, 236, 237, 244, 247, 268, 269, 281, 292, 297, 311, 314, 316, 317, 318, 319, 320, 325, 335, 338, 344, 347, 348, 351, 357, 364, 377, 381, 382, 385, 386, 389, 397, 403, 409, 410, 415, 416, 424, 425, 429, 430, 431, 433, 434, 435, 437, 439, 440, 443, 445, 449, 455, 482, 483, 486, 487, 488, 489, 490, 491], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 449], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 247, 269, 281, 311, 314, 335, 338, 344, 347, 348, 351, 377, 381, 382, 386, 393, 394, 395, 396, 397, 398, 399, 407, 408, 409, 415, 416, 429, 430, 431, 434, 435, 437, 439, 470, 480], "consid": [14, 15, 23, 28, 39, 40, 41, 187, 226, 227, 429, 430, 431, 433], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 75, 77, 78, 79, 80, 81, 82, 137, 159, 182, 187, 202, 335, 341, 342, 377, 378, 429, 430, 431, 434, 435, 437, 438, 449, 455], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 137, 182, 187, 210, 226, 227, 348, 353, 429, 430, 431, 433, 437, 439, 440, 441, 449], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 434, 435, 436], "against": [14, 27, 55, 105, 112, 348, 356, 357, 359, 362, 424, 425], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 348, 353, 449], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 86, 87, 97, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 209, 210, 211, 220, 221, 223, 224, 231, 235, 236, 237, 239, 240, 241, 244, 246, 311, 317, 325, 348, 366, 369, 377, 378, 389, 429, 430, 431, 433, 437, 439, 441, 444, 459, 460], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 67, 68, 69, 86, 93, 94, 97, 187, 195, 209, 222, 231, 235, 247, 277, 281, 290, 348, 353, 359, 362, 363, 366, 367, 369, 370, 377, 378, 380, 381, 383, 389, 392, 397, 398, 408, 417, 418, 424, 427, 437, 443, 445, 446, 447, 448, 449], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 429, 430, 431, 433], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 86, 89, 92, 93, 94, 99, 100, 103, 104, 105, 132, 187, 196, 222, 234, 245, 247, 263, 264, 265, 268, 269, 270, 293, 294, 295, 296, 301, 302, 311, 314, 316, 318, 319, 320, 327, 329, 332, 334, 377, 381, 385, 389, 397, 402, 413, 414, 415, 416, 449, 459, 460, 470, 480, 484, 485, 486, 487, 488, 489, 490, 491], "futur": [14, 16, 18, 19, 40, 55, 348, 353], "avail": [14, 18, 19, 24, 34, 55, 137, 156, 172, 173, 174, 184, 247, 264], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 105, 128, 137, 179, 182, 187, 226, 227, 247, 263, 264, 265, 288, 348, 353, 368, 377, 389, 393, 394, 395, 396, 417, 418, 437, 439, 440, 441, 449, 452, 454, 455, 482, 483], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 21, 22, 27, 29, 32, 35, 37, 55, 470, 481, 482, 483], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 449], "desir": [14, 105, 111, 114, 137, 182, 247, 277, 327, 333, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 83, 84, 86, 97, 105, 116, 117, 118, 124, 128, 136, 137, 156, 247, 262, 290, 294, 311, 314, 316, 318, 319, 320, 348, 370, 377, 382, 389, 424, 425, 437, 443, 445, 446, 447, 448, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 486, 487, 488, 489, 490, 491], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 83, 84, 86, 87, 101, 102, 137, 146, 171, 177, 247, 248, 251, 252, 271, 291, 306, 335, 345, 348, 365, 368, 371, 377, 382, 386, 393, 394, 395, 396, 397, 398, 399, 408, 409, 410, 417, 418, 421, 446, 449, 452, 454], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 247, 266], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 397, 409], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 75, 78, 86, 87, 89, 90, 91, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 137, 166, 167, 168, 169, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 256, 267, 294, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 422, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 486, 490], "determin": [14, 24, 28, 32, 33, 34, 105, 114, 115, 120, 124, 125, 126, 136, 137, 172, 173, 174, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 209, 210, 215, 216, 217, 220, 221, 223, 224, 228, 231, 235, 236, 239, 240, 241, 244, 247, 248, 251, 252, 276, 278, 282, 283, 284, 285, 286, 303, 310, 311, 317, 335, 346, 348, 349, 350, 351, 352, 355, 356, 359, 361, 362, 364, 365, 369, 370, 371, 393, 394, 395, 396, 429, 430, 431, 433, 446, 447, 448], "exactli": [14, 16, 25, 34, 449, 455], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 86, 87, 105, 121, 187, 195, 235, 373, 374, 375, 376, 377, 381, 389, 397, 403, 417, 419, 429, 430, 431, 433, 449, 486, 488], "find": [14, 18, 19, 38, 41, 429, 430, 431, 433, 449], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 247, 262, 486, 490], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 67, 68, 69, 187, 195, 311, 314, 316, 318, 319, 320, 348, 353, 357, 366, 367, 371, 377, 382, 393, 394, 395, 424, 427, 429, 430, 431, 433, 434, 435, 436, 492, 493], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 137, 152, 486, 490], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 137, 176, 182, 183, 186, 187, 191, 231, 236, 247, 249, 281, 377, 385, 417, 421, 449], "search": [14, 18, 23, 25, 27, 425, 426, 427, 428], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 83, 84, 86, 95, 96, 105, 127, 132, 137, 156, 168, 187, 191, 197, 199, 200, 201, 202, 207, 212, 214, 218, 219, 224, 225, 227, 228, 231, 233, 235, 243, 247, 251, 311, 315, 348, 350, 352, 353, 356, 361, 363, 366, 368, 370, 377, 379, 386, 389, 390, 393, 394, 395, 396, 397, 398, 407, 408, 417, 423, 424, 425, 426, 429, 430, 431, 470, 481, 482, 483, 486, 490], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 86, 87, 92, 95, 96, 105, 113, 128, 187, 191, 197, 199, 200, 201, 202, 206, 210, 218, 224, 227, 228, 231, 233, 235, 236, 243, 348, 359, 362, 365, 370, 371, 424, 426, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 137, 155], "front": [14, 37, 38, 41, 449, 455], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 449], "littl": [14, 31, 40], "deeper": [14, 22, 37, 137, 161, 165, 169, 397, 408, 409], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 105, 123, 137, 181, 187, 236, 247, 279, 280, 281, 301, 302, 311, 314, 316, 318, 319, 320, 335, 346, 347, 348, 363, 371, 397, 403, 409, 429, 430, 431, 433, 449, 470, 480, 486, 490], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 86, 87, 90, 94, 97, 100, 101, 102, 104, 105, 111, 112, 113, 137, 146, 147, 181, 187, 188, 191, 198, 203, 211, 231, 236, 237, 238, 246, 247, 267, 269, 270, 290, 293, 294, 311, 317, 322, 335, 336, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 363, 365, 366, 369, 370, 377, 379, 382, 383, 386, 388, 389, 393, 394, 395, 397, 410, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 449, 470, 471, 472, 473, 474, 475, 476, 477], "core": [14, 18, 20, 34, 38, 43, 137, 173, 449], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 86, 95, 96, 105, 128, 187, 191, 201, 202, 214, 232, 236, 247, 253, 263, 264, 265, 303, 311, 314, 316, 318, 319, 320, 335, 336, 337, 338, 339, 340, 341, 342, 344], "expos": [14, 38, 42, 247, 257], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 137, 171, 397, 410, 449], "uniqu": [14, 28, 32, 55, 137, 146, 147, 393, 394, 395, 396, 397, 403, 429, 430, 431, 432, 433], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 137, 177, 187, 226, 227, 348, 356, 363, 377, 382, 397, 398, 399, 407, 408, 424, 425, 426, 437, 440, 449, 486, 487, 488, 489, 490, 491], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 397, 398, 408, 449], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 137, 169, 348, 353, 437, 438, 482, 483], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 75, 78, 79, 81, 86, 97, 105, 112, 137, 146, 147, 158, 159, 160, 161, 162, 163, 164, 168, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 311, 314, 316, 318, 319, 320, 327, 330, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 356, 359, 360, 362, 365, 366, 377, 380, 384, 386, 387, 389, 391, 392, 397, 403, 410, 417, 418, 424, 427, 429, 430, 431, 437, 438, 449, 455, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 449], "similar": [14, 23, 32, 33, 34, 41, 55, 187, 236, 335, 346, 470, 481], "convent": [14, 54, 348, 356, 437, 438], "those": [14, 18, 19, 20, 32, 38, 43, 86, 87, 311, 325, 348, 363, 366, 377, 378], "introduc": [14, 32, 41, 377, 386, 429, 430], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 415, 416, 449, 461, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 187, 191, 192, 211, 244, 247, 269, 335, 338, 347, 377, 386, 415, 416, 437, 439], "present": [14, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 247, 249, 397, 409], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 187, 236], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 187, 191, 203, 211, 212, 231, 241, 246, 449], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 449, 455, 470, 481, 482, 483], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 449], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 105, 115, 122, 124, 136, 137, 176, 186, 247, 253, 266, 276, 283, 284, 285, 286, 303, 310, 311, 317, 348, 353, 397, 398, 407, 408, 409, 449], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 67, 68, 69, 71, 72, 73, 75, 77, 78, 86, 87, 137, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 258, 259, 260, 263, 264, 265, 267, 269, 327, 329, 332, 334, 335, 343, 344, 345, 346, 347, 348, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 415, 416, 417, 419, 424, 425, 426, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 470, 478], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 449], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 137, 161, 165, 169, 397, 409], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 449], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 449, 455], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 449], "With": [15, 16, 18, 25, 27, 38, 75, 77, 78, 79, 80, 81, 82, 86, 97, 137, 159, 175, 187, 191, 192, 197, 202, 205, 211, 214, 229, 230, 232, 237, 244, 247, 252, 258, 259, 266, 269, 305, 306, 307, 335, 338, 341, 342, 347, 348, 349, 350, 351, 352, 357, 368, 373, 374, 376, 377, 378, 381, 382, 384, 386, 387, 390, 415, 416, 417, 418, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 446, 447], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 86, 87, 247, 292, 297, 429, 432, 449], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 75, 80, 137, 182, 449], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 137, 181, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 479], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 105, 113, 187, 209, 235, 247, 253, 272, 281, 295, 302, 308, 348, 356, 358, 370, 377, 388, 389, 424, 427, 437, 439, 441, 446, 447, 448, 482, 483, 486, 490], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 75, 78, 79, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 121, 125, 126, 128, 137, 159, 163, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 254, 255, 256, 258, 267, 268, 269, 277, 281, 283, 284, 285, 286, 306, 307, 308, 311, 317, 322, 324, 325, 327, 329, 333, 334, 335, 338, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 369, 370, 371, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 397, 403, 415, 416, 417, 419, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 482, 483, 486, 487, 488, 490], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 311, 314, 316, 318, 319, 320, 449, 486, 487, 488, 489, 490, 491], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 71, 72, 83, 84, 86, 87, 187, 210, 247, 248, 249, 311, 315, 417, 421, 429, 432, 437, 443, 445, 449], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 449, 455, 482, 483, 486, 490], "momentum": 15, "won": [15, 16, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 247, 301, 302, 348, 353, 377, 381, 492, 493], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 437, 438, 470, 479], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 137], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 187, 235, 237], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 86, 87, 137, 181, 247, 283, 284, 286, 311, 317], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 86, 87, 95, 96, 247, 268], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 86, 97, 137, 176, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 209, 210, 211, 220, 221, 223, 224, 231, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 281, 293, 294, 348, 357, 377, 385, 397, 400, 406, 437, 439, 440, 441, 443, 444, 445, 470, 481, 482, 483, 486, 490], "unlik": [15, 25, 32, 137], "charger": 15, "charact": 15, "encod": [15, 41, 247, 268, 327, 329], "instant": [15, 449], "messag": [15, 19, 38, 40, 495, 496], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 187, 202, 247, 281, 377, 387], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 187, 192, 202, 205, 211, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "replac": [15, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 247, 293, 294, 377, 378, 417, 418], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 449], "10": [15, 18, 21, 25, 32, 38, 40, 41, 86, 93, 96, 137, 187, 197, 198, 205, 214, 221, 247, 259, 269, 292, 297, 311, 318, 335, 341, 348, 351, 352, 361, 368, 377, 382, 384, 387, 415, 416, 417, 418, 419, 424, 427, 429, 430, 437, 438, 439, 486, 488], "100": [15, 16, 41, 42, 43, 55, 449], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 429, 430, 431, 433, 449], "still": [15, 24, 27, 33, 40, 42, 55, 449], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 105, 132], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 449], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 348, 353], "technolog": 15, "sector": [15, 187, 190, 193, 196], "full": [15, 16, 19, 24, 33, 36, 38, 55, 86, 105, 121, 187, 214, 335, 341, 348, 363, 365, 366, 415, 416], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 187, 236], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 429, 430, 431, 433, 449, 470, 481, 482, 483], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 137, 181, 187, 191, 197, 200, 202, 207, 208, 213, 214, 218, 219, 225, 226, 227, 228, 231, 232, 233, 247, 255, 256, 259, 260, 311, 313, 314, 315, 316, 318, 319, 320, 322, 324, 327, 330, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 353, 354, 355, 356, 357, 363, 364, 365, 366, 370, 371, 373, 374, 375, 376, 397, 403, 429, 430, 431, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 137, 335, 345, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 486, 490], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 86, 88, 98, 101, 102, 247, 249, 311, 314, 316, 318, 319, 320, 335, 348, 349, 351, 352, 353, 354, 355, 359, 360, 362, 363, 365, 366, 367, 369, 397, 399, 409], "factor": [15, 137, 146, 179, 180, 181, 311, 313, 314, 318, 319, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 470, 471, 472, 473, 474, 475, 476, 477, 486, 487, 488, 489], "sata": 15, "connect": [15, 18, 42, 43, 470, 480, 481], "host": [15, 55], "bu": 15, "adapt": [15, 311, 319, 486, 489], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 247, 269, 270, 290, 293, 294, 417, 418, 419, 420, 421, 459, 460, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "html": [15, 21, 24, 187, 192, 202, 205, 211, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 397, 398, 407, 408], "commun": [15, 17, 19, 20, 55, 449, 455], "network": [15, 28, 32, 38, 42, 54, 335, 344, 449, 456, 470, 482, 483], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 247, 287, 305, 327, 333, 437, 439, 441], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 85, 105, 121, 187, 191, 210, 231, 236, 241], "754": [15, 85, 105, 121, 187, 191, 210, 231, 236, 241], "allow": [15, 38, 55, 86, 95, 96, 247, 287, 482, 483], "calcul": [15, 24, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 205, 206, 209, 210, 220, 221, 222, 223, 224, 231, 235, 239, 240, 241, 243, 244, 373, 374, 375, 376, 437, 439, 440, 441, 442, 443, 444, 445], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 105, 111, 187, 188, 189, 190, 192, 193, 194, 195, 204, 205, 209, 210, 220, 221, 222, 223, 235, 239, 240, 244, 348, 353, 363, 365, 366, 424, 428, 434, 435, 436], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 449], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 137, 181], "relev": [15, 18, 20, 25, 32, 33, 41, 486, 487, 488, 489, 490, 491], "area": [15, 35, 53, 187, 190, 193, 196, 449], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 429, 430, 431, 433], "easili": [15, 19, 41, 42, 43, 55, 449], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 137], "effect": [15, 24, 31, 32, 36, 55, 86, 97, 311, 320, 437, 443, 445], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 105, 121, 123, 187, 213, 348, 359, 362], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 86, 87, 89, 95, 96, 137, 170, 176, 178, 179, 180, 181, 183, 186, 247, 259, 260, 270, 293, 294, 309, 311, 313, 314, 316, 318, 319, 320, 335, 336, 337, 338, 339, 340, 341, 342, 348, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 386, 387, 391, 397, 404, 405, 417, 419, 420, 421, 423, 434, 436, 459, 460], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 187, 189, 190, 192, 195, 203, 220, 221, 223, 235, 236, 238, 241, 348, 359, 362, 371, 417, 421, 437, 445], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 187, 231, 335, 345, 449, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 86, 87, 105, 121, 137, 181, 187, 189, 190, 192, 195, 199, 201, 203, 211, 212, 220, 221, 223, 229, 235, 236, 238, 241, 246, 247, 283, 284, 286, 311, 317, 348, 350, 356, 359, 362, 371, 377, 378, 382, 388, 417, 421, 429, 430, 431, 433, 437, 442, 443, 444, 445], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 348, 349, 361, 437, 438], "80": [15, 348, 361, 437, 438], "90": [15, 187, 202, 237, 348, 361, 437, 438], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 449], "complet": [15, 19, 20, 31, 32, 40, 41, 348, 363], "natur": [15, 25, 31, 32, 54, 187, 209, 220, 222, 348, 364], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 311, 317, 417, 421, 449], "certainli": 15, "mission": [15, 449], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 103, 104, 137, 146, 147, 247, 269, 270, 290, 293, 294, 305, 311, 324, 417, 418, 419, 421, 449, 455, 459, 460, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 137, 146, 147, 176, 186], "ourselv": 15, "lead": [15, 16, 55, 348, 363, 366], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 429, 430, 431, 433], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 187, 195], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 86, 87, 88, 98, 247, 276, 310, 348, 371, 397, 398, 417, 421, 424, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 470, 480, 481, 484, 485], "member": [15, 19], "googl": [15, 449], "octoml": 15, "einop": [15, 247, 263, 264, 265], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 449], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 247, 252, 258, 327, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 352, 361, 449, 455], "shaw": 15, "co": [15, 38, 54, 187, 247, 268, 449], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 492, 493], "major": [15, 33, 34, 55, 424, 427], "involv": [15, 17, 21, 22, 33, 43, 105, 128, 187, 191, 231, 449, 455], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 86, 92, 105, 112, 114], "promis": 15, "sign": [15, 18, 39, 43, 86, 87, 187, 188, 191, 195, 201, 231, 236, 348, 364, 429, 430, 431, 433, 437, 442, 444], "pursuit": 15, "unif": [15, 17, 40, 449, 455], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 335, 346, 347, 470, 481], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 105, 113, 187, 191, 195, 197, 199, 200, 201, 202, 206, 207, 212, 214, 218, 219, 224, 225, 227, 228, 231, 233, 235, 236, 243, 348, 359, 362, 365, 368, 370, 371, 377, 385, 424, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "excit": [15, 17, 22, 449], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 187, 231], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 187, 210, 311, 313, 314, 316, 318, 319, 320, 325, 335, 343, 449, 470, 478], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 449, 455], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 85, 86, 87, 89, 91, 93, 99, 103, 105, 111, 121, 125, 128, 187, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 209, 210, 211, 220, 221, 223, 224, 231, 235, 236, 237, 239, 240, 241, 244, 246, 348, 349, 351, 353, 354, 355, 359, 362, 363, 365, 366, 371, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445], "mai": [16, 18, 32, 40, 42, 86, 87, 92, 137, 182, 187, 207, 214, 219, 226, 227, 247, 262, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441], "ask": [16, 19, 38, 40, 55, 449], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 377, 385], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 86, 87, 91, 97, 101, 102, 105, 127, 132, 187, 201, 237, 247, 251, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 377, 390, 429, 430, 431, 432, 433, 449], "streamlin": 16, "workflow": [16, 41, 53, 449], "save": [16, 55, 247, 298, 327, 329, 482, 483], "week": [16, 20, 449], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 437, 440, 443, 444, 445, 449], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 449], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 437, 443, 445], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 187, 213, 247, 278, 282, 327, 332], "g": [16, 22, 32, 55, 105, 110, 128, 137, 153, 417, 420, 421, 429, 430, 431, 433, 437, 439, 441, 442, 444], "inevit": 16, "deviat": [16, 415, 416, 417, 420, 437, 443, 484, 485], "origin": [16, 29, 30, 33, 38, 40, 187, 195, 348, 357, 377, 385, 386], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 311, 313, 314, 318, 449], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 75, 80, 86, 95, 96, 137, 247, 259, 263, 264, 265, 279, 280, 281, 311, 314, 316, 318, 319, 320, 327, 328, 331, 335, 343, 345, 348, 366, 393, 394, 395, 396, 397, 404, 405, 446, 447, 448], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 86, 95, 96, 247, 269, 270, 290, 293, 294, 417, 418, 419, 421, 429, 430, 431, 433, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "publish": [16, 55], "manag": [16, 17, 35, 55, 137], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 105, 119, 120, 121, 123, 137, 146, 147, 156, 157, 170, 171, 176, 180, 183, 186, 247, 250, 271, 272, 273, 292, 449, 455, 470, 479], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 449, 455], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 187, 236, 247, 281, 311, 317, 325, 397, 398, 407, 408, 409], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 247, 250, 449], "codebas": [16, 17, 22, 23, 35, 37, 137, 179, 180, 449], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 137, 183, 424, 427, 437, 443, 445], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 348, 352, 369], "test": [16, 18, 20, 22, 25, 55, 105, 125, 126, 187, 215, 216, 217, 446, 447, 448], "error": [16, 18, 27, 31, 34, 36, 40, 55, 75, 76, 137, 187, 208, 437, 439, 441, 482, 483, 486, 490], "iter": [16, 32, 38, 41, 83, 84, 137, 159, 160, 162, 163, 164, 165, 168, 181, 247, 248, 294, 299, 377, 380, 384, 387, 391, 392, 397, 398, 399, 403, 407, 408, 409], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 137, 146, 147, 166, 167, 168, 169, 247, 307, 310, 417, 420, 421, 429, 430], "multipl": [16, 19, 25, 28, 32, 55, 187, 191, 231, 247, 287, 348, 355, 377, 386, 387, 415, 416, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 480], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 449, 455], "convert": [16, 31, 38, 55, 56, 64, 86, 88, 98, 105, 109, 110, 137, 153, 154, 155, 156, 176, 183, 186, 247, 300, 306, 307, 327, 329, 334, 348, 372, 397, 399, 409, 410, 460], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 397, 409], "graph": [16, 28, 32, 39, 55, 311, 314, 316, 318, 319, 320, 429, 430, 431, 433, 482, 483], "guarante": [16, 31, 55, 429, 430], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 75, 77, 78, 80, 86, 94, 97, 100, 104, 137, 159, 175, 187, 191, 192, 195, 197, 202, 205, 211, 214, 229, 230, 232, 237, 244, 247, 252, 259, 268, 269, 305, 327, 329, 330, 331, 334, 335, 338, 339, 340, 342, 345, 347, 348, 350, 351, 352, 355, 359, 361, 368, 369, 373, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 449, 486, 487, 488, 489, 491], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 86, 87, 95, 96, 137, 311, 313, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 486, 487, 488, 489, 490, 491], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 187, 202, 327, 331, 449, 455], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 449, 455], "second": [16, 18, 25, 35, 40, 105, 127, 132, 137, 168, 187, 191, 197, 199, 200, 201, 202, 207, 212, 214, 218, 219, 224, 225, 227, 228, 231, 233, 235, 243, 247, 251, 292, 297, 311, 313, 314, 318, 348, 350, 352, 353, 356, 361, 363, 366, 368, 370, 377, 389, 390, 393, 395, 429, 430, 431, 486, 487, 488], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 449], "convers": [16, 37, 39, 43, 54, 55, 449, 455], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 83, 84], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 75, 78, 137, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 256, 260, 267, 269, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 415, 416, 417, 419, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 137, 181, 348, 355, 366, 417, 418], "know": [16, 429, 430, 431, 433], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 247, 263, 264, 265], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 137, 348, 350, 377, 385, 397, 399, 409, 449, 455], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 470, 481, 482, 483], "spend": 16, "torchvis": 16, "probabl": [16, 335, 343, 417, 418, 470, 478], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 105, 121, 123], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 105, 121, 449, 482, 483, 486, 487, 488, 489, 490, 491], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 75, 77, 78, 86, 89, 91, 97, 101, 102, 104, 105, 111, 187, 191, 192, 199, 205, 210, 211, 226, 227, 229, 230, 231, 232, 235, 236, 237, 244, 247, 259, 290, 293, 294, 311, 313, 314, 318, 319, 335, 343, 348, 351, 356, 359, 362, 370, 371, 377, 381, 382, 384, 386, 392, 415, 416, 417, 419, 424, 425, 426, 427, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 486, 487, 488, 489], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 247, 255, 256, 377, 378, 381], "said": 16, "high": [16, 20, 41, 417, 419, 421], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 137, 311, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 487, 488, 489, 491], "trainer": [16, 53, 55, 449], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 470, 480, 481], "offer": [16, 42], "strongli": [17, 18, 449, 455], "welcom": [17, 18, 449, 455], "absolut": [17, 187, 188, 348, 364], "skill": 17, "whether": [17, 18, 33, 35, 36, 75, 76, 83, 84, 105, 111, 119, 124, 125, 126, 136, 137, 156, 157, 168, 172, 176, 177, 181, 184, 186, 187, 217, 247, 248, 251, 252, 259, 262, 266, 268, 274, 276, 278, 281, 282, 283, 284, 285, 286, 287, 299, 303, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 322, 335, 343, 348, 353, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 417, 418, 446, 447, 448, 459, 460, 470, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 86, 87, 95, 96, 137, 152], "aspect": [17, 41, 327, 333, 449], "guid": [17, 18, 19, 27, 449], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 187, 195], "journei": [17, 449, 455], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 449], "split": [17, 19, 37, 38, 55, 137, 146, 162, 163, 164, 165, 179, 180, 181, 247, 287, 377, 449], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 429, 430, 431, 433], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 86, 97, 101, 102, 187, 197, 202, 205, 237, 348, 351, 352, 369, 377, 381, 382, 429, 430, 431, 434, 435, 449], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 247, 287], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 397, 408], "finish": [17, 18, 22, 449], "dive": [17, 19, 20, 37, 40, 41, 55, 449], "right": [17, 18, 19, 22, 25, 41, 187, 199, 201, 348, 366], "environ": [17, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 247, 288], "doc": [17, 20, 24, 36, 38, 41, 42, 449], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 393, 394, 395, 396, 449], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 247, 249, 437, 444, 449], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 455], "toward": [18, 38, 377, 386, 449, 455], "page": [18, 19, 39, 43, 53, 449, 455], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 449, 455], "main": [18, 21, 30, 32, 86, 91, 101, 102, 348, 352, 369], "prefer": [18, 32], "mode": [18, 25, 32, 55, 83, 84, 137, 166, 167, 168, 169, 181, 187, 191, 231, 348, 363], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 397, 398, 399, 407, 408, 409], "submodul": [18, 20, 21, 26, 27, 28, 34, 37, 38, 42, 449, 484, 485, 492, 493], "com": 18, "unifyai": [18, 21], "http": [18, 24, 187, 192, 202, 205, 211, 311, 313, 314, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 137, 156, 482, 483], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 105, 111], "familiar": [18, 20], "decid": [18, 397, 408], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 449], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 486, 490], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 67, 71, 187, 415, 416, 449, 455, 484, 485], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 247, 268, 327, 329, 330, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 137, 146, 247, 281, 293, 294, 311, 313, 314, 316, 318, 319, 320, 335, 345, 393, 394, 395, 397, 404, 405, 413, 414, 459, 460, 486, 487, 488, 489, 490, 491], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 187, 192, 202, 205, 211, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439, 470, 479], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 247, 281], "align": [18, 38, 40, 449, 455], "accord": [18, 21, 28, 33, 105, 114, 121, 187, 191, 201, 231, 247, 269, 293, 294, 348, 370, 377, 380, 392, 437, 443, 445], "stabl": [18, 38, 55, 247, 272, 273, 295, 296, 301, 302, 434, 435, 436], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 137, 187, 210], "pip": [18, 54, 449], "instal": [18, 21, 54, 449], "abil": [18, 39, 55], "certain": [18, 55, 86, 87, 95, 96], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 247, 309], "track": [18, 19, 137, 397, 409, 482, 483], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 137, 146, 311, 313, 314, 318, 393, 394, 395, 396, 470, 481, 482, 483], "command": [18, 21, 449], "ivy_dev": [18, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 83, 84, 247, 249, 348, 353, 363, 366, 429, 430, 431], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 75, 77, 78, 79, 80, 85, 86, 94, 97, 100, 103, 104, 137, 156, 159, 175, 182, 187, 191, 192, 197, 201, 202, 205, 209, 211, 213, 214, 218, 229, 230, 232, 237, 244, 247, 251, 252, 259, 266, 269, 299, 305, 307, 327, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 359, 361, 366, 368, 369, 372, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 444, 446, 447, 449], "8": [18, 21, 25, 32, 37, 41, 75, 79, 137, 159, 187, 191, 197, 205, 214, 229, 230, 237, 247, 252, 269, 327, 330, 335, 342, 348, 350, 351, 352, 361, 368, 373, 374, 377, 378, 382, 384, 387, 417, 418, 419, 424, 428, 429, 430, 437, 438, 449, 470, 481], "activ": [18, 21, 23, 42, 76, 77, 78, 79, 80, 81, 82, 449, 457, 458], "setup": 18, "click": [18, 24, 449], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 137, 182, 187, 226, 227, 424, 428, 429, 430, 431, 433, 437, 439, 440, 441], "left": [18, 25, 33, 187, 199, 348, 353, 357, 366, 424, 425, 449], "panel": 18, "select": [18, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 397, 398, 407, 408], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 83, 84, 187, 241, 348, 353, 377, 389, 459, 460], "cmd": [18, 21], "directori": [18, 21, 247, 298], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 247, 298, 482, 483], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 86, 97, 101, 102, 187, 191, 192, 197, 202, 205, 211, 231, 237, 244, 247, 269, 335, 338, 347, 348, 351, 352, 353, 369, 377, 381, 382, 386, 415, 416, 417, 419, 429, 430, 431, 434, 435, 437, 439, 442, 443, 444], "m": [18, 21, 22, 38, 86, 97, 101, 102, 247, 252, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 369, 417, 420, 421], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 21], "OR": [18, 21, 187, 200, 227, 446, 448], "bin": [18, 21], "mac": [18, 21], "linux": [18, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 137, 171], "os": 18, "note": [18, 19, 23, 24, 25, 32, 187, 236, 348, 353, 366, 377, 389, 429, 431, 437, 440], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 449], "ivyivy_teststest_array_api": 18, "cd": [18, 21], "r": [18, 247, 252, 309, 348, 363, 372], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 187, 210], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 137, 182, 187, 191, 247, 263, 264, 265, 415, 416, 470, 480], "yet": [18, 20, 32], "particular": [18, 23, 35, 187, 188], "system": [18, 55, 348, 365], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 449], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 247, 308], "deploy": 18, "top": [18, 27, 41, 42, 449], "press": [18, 41, 449], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 348, 357, 424, 425], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 247, 262], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 86, 92, 429, 430, 431, 433], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 86, 97, 247, 255, 256, 335, 343, 348, 357, 371, 470, 478], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 247, 252], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 86, 87, 88, 89, 97, 98, 99, 103, 105, 112, 137, 146, 147, 156, 158, 159, 162, 163, 166, 167, 181, 247, 252, 300, 305, 309, 327, 333, 335, 336, 337, 338, 339, 340, 341, 342, 348, 368, 377, 379, 382, 387, 389, 397, 398, 399, 403, 408, 409, 415, 416, 424, 427, 446, 447, 448, 449, 470, 471, 472, 473, 474, 475, 476, 477], "dev": [18, 28, 34, 38, 40, 42, 137, 146, 171], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 137], "post": [18, 43, 415, 416, 449, 455], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 75, 78, 137, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 256, 267, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 424, 425, 434, 435, 436, 446, 447, 448], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 449], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 137, 166, 167, 168, 169, 181, 247, 264, 393, 394, 395, 396, 397, 403, 417, 420, 429, 430, 437, 449, 461], "configur": [18, 21, 33, 137, 180, 397, 410], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 187, 231, 236, 247, 290, 348, 350, 353, 365, 417, 419, 437, 439, 440, 441], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 449], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439], "theme": 18, "too": [18, 19, 55, 187, 191, 231], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 105, 122], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 335, 345], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 335, 346, 449, 470, 481], "pane": 18, "readi": [18, 20], "begin": [18, 397, 398, 408], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 495, 496], "dropdown": 18, "tab": [18, 41, 449], "master": [18, 19, 32], "vs": 18, "view": [18, 86, 92, 335, 338, 342], "log": [18, 28, 32, 35, 38, 41, 86, 96, 187, 222, 224, 348, 364, 449], "built": [18, 39, 86, 87, 137, 470, 481, 482, 483], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 187, 197, 237, 335, 338, 348, 352, 361, 368, 377, 384, 386, 417, 419, 424, 427, 429, 430, 437, 438], "minut": 18, "launch": 18, "12": [18, 25, 32, 187, 197, 202, 205, 237, 247, 259, 273, 348, 352, 361, 368, 377, 382, 384, 386, 415, 416, 417, 419, 424, 428, 429, 430, 437, 438], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 75, 78, 86, 87, 89, 90, 91, 93, 94, 97, 99, 100, 103, 104, 137, 146, 147, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 254, 256, 260, 267, 269, 311, 315, 335, 337, 339, 341, 343, 345, 346, 347, 348, 369, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 391, 397, 410, 415, 416, 417, 419, 420, 421, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481], "That": [18, 19, 40, 41, 42, 187, 236], "alreadi": [18, 19, 29, 32, 36, 40, 55, 137, 187, 203, 211, 231, 237, 246, 348, 361, 449], "refer": [18, 19, 27, 28, 33, 36, 55, 86, 91, 187, 210, 222, 311, 313, 314, 348, 370, 372, 437, 443, 445, 446, 447, 448, 470, 480], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 335, 346, 347, 397, 403, 409], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 449], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 335, 341, 342, 348, 361, 437, 438, 449, 470, 481], "bit": [18, 25, 28, 31, 32, 40, 105, 120, 121, 123, 187, 198, 199, 201, 327, 329, 334, 437, 442, 444], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 86, 87, 105, 112, 187, 210, 348, 356, 377, 382, 429, 430, 431, 433, 449], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 86, 97, 187, 191, 192, 197, 202, 205, 211, 226, 227, 236, 237, 244, 247, 269, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439, 440, 449], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 75, 76, 77, 78, 79, 80, 81, 82, 105, 128, 247, 263, 264, 265, 311, 318, 319, 335, 344, 346, 347, 348, 359, 362, 373, 374, 375, 376, 377, 389, 393, 394, 395, 397, 403, 406, 409, 410, 415, 416, 449, 456, 457, 458, 484, 485], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 137], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 449], "server": [19, 449], "appropri": [19, 30, 187, 191, 231, 424, 425], "context": [19, 25, 32, 33, 34, 137, 247, 288, 335, 346, 470, 481], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 105, 111, 187, 191, 231, 247, 281, 311, 317, 322], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 105, 132, 377, 378, 437, 443, 445, 449], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 83, 86, 87, 95, 96, 187, 192, 202, 205, 211, 236, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 377, 381, 386, 417, 418, 419, 421, 422, 429, 430, 431, 434, 435, 437, 439, 449, 486, 490], "land": 19, "end": [19, 32, 35, 37, 54, 55, 86, 87, 187, 195, 449, 455], "world": 19, "come": [19, 20, 42, 53, 449, 455], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 137, 146, 147, 247, 250, 287, 470, 480], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 373, 374, 375, 376], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 348, 352, 356, 369, 377, 388, 393, 394, 395], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 247, 253, 262, 266, 397, 407], "strive": [19, 55], "repli": 19, "newli": [19, 35, 83, 84, 105, 111, 247, 254], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 86, 87, 88, 89, 90, 91, 93, 94, 98, 99, 100, 103, 104, 137, 182, 187, 191, 192, 197, 202, 205, 211, 237, 244, 247, 269, 279, 280, 281, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439, 486, 487, 488, 489, 490, 491], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 449], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 397, 409], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 137, 162, 163, 166, 167, 168, 169, 348, 352, 377, 387, 393, 394, 395, 396, 449], "mark": [19, 27], "ii": [19, 437, 438], "iii": 19, "titl": [19, 449], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 449, 455], "partial": [19, 482, 483], "solut": [19, 27, 32, 348, 365], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 86, 93, 94, 247, 248], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 75, 78, 86, 89, 90, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 137, 149, 177, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 256, 267, 270, 274, 290, 293, 294, 300, 327, 330, 332, 333, 335, 337, 338, 339, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 417, 419, 420, 421, 424, 425, 427, 434, 435, 436, 437, 438, 446, 447, 448, 449, 470, 472, 473, 474, 475, 476, 477, 484, 485], "move": [19, 23, 137, 182], "within": [19, 27, 42, 55, 86, 87, 417, 421], "7": [19, 21, 25, 28, 32, 35, 75, 77, 78, 137, 159, 187, 191, 197, 198, 202, 205, 209, 211, 214, 229, 230, 237, 244, 247, 252, 259, 269, 311, 313, 314, 318, 327, 330, 334, 335, 341, 342, 347, 348, 350, 351, 352, 361, 368, 373, 374, 375, 376, 377, 378, 381, 382, 384, 387, 390, 415, 416, 417, 418, 419, 421, 424, 428, 429, 430, 437, 438, 439], "dai": 19, "close": [19, 24, 187, 210, 237, 327, 333, 348, 366], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 137, 156, 311, 317], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 187, 210, 449], "remain": [19, 25, 55, 187, 191, 231, 236, 377, 385, 397, 403], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 335, 345], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 86, 101, 102, 105, 111, 137], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 311, 313, 314, 318, 437, 444, 486, 487, 488], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 105, 121, 123, 247, 255, 256, 377, 378], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 348, 349, 350], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 83, 84, 187, 195], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 187, 210], "role": [19, 39], "kept": [19, 35, 393, 394, 395], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 187, 241, 417, 418, 420, 421], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 437, 442, 444], "clone": [19, 21, 137, 158, 159, 160, 161], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 105, 127, 187, 191, 192, 211, 235, 244, 247, 269, 335, 338, 347, 348, 350, 356, 370, 377, 386, 415, 416, 437, 439], "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 247, 265, 377, 391], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 348, 356], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 86, 95, 96, 247, 268, 470, 481], "tickbox": 19, "lower": [19, 25, 38, 55, 86, 91, 101, 187, 229, 348, 349, 417, 421], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 247, 292, 297, 377, 385, 397, 399, 429, 430, 431, 433], "span": 19, "intent": [19, 35], "larg": [19, 41, 187, 191, 231], "discourag": 19, "philosophi": 19, "increment": [19, 247, 280], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 449], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 137, 335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "style": [19, 424, 427], "ve": [19, 37, 40, 417, 418, 449], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 86, 101, 102, 311, 314, 316, 318, 319, 320, 482, 483], "subsect": 19, "filepath": 19, "interact": [19, 449], "session": [19, 449], "block": [19, 28, 37, 39, 43, 55, 137, 449], "smaller": [19, 38, 43, 377, 378, 386, 437, 442, 444], "edit": 19, "exact": [19, 38, 429, 430], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 429, 430, 431, 433], "undo": 19, "stress": 19, "frequenc": [19, 247, 268], "wherebi": [20, 32, 397, 409], "broad": 20, "distribut": [20, 34, 55, 137, 158, 162, 163, 164, 165, 335, 343, 373, 374, 375, 376, 417, 418, 419, 420, 421, 470, 478, 482, 483], "across": [20, 25, 27, 28, 32, 33, 36, 137, 146, 147, 158, 159, 161, 162, 163, 164, 165, 169, 179, 180, 247, 251, 252, 397, 403, 424, 426], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 187, 226], "static": [20, 24, 25, 28, 55, 83, 84], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 75, 77, 78, 79, 80, 81, 82, 86, 92, 97, 187, 192, 197, 202, 205, 211, 214, 229, 230, 232, 237, 247, 257, 258, 269, 293, 294, 305, 307, 311, 318, 319, 335, 341, 347, 348, 350, 351, 373, 374, 376, 377, 378, 381, 382, 384, 387, 390, 397, 398, 408, 409, 410, 415, 416, 417, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 449, 470, 481, 482, 483], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 75, 77, 78, 79, 80, 81, 82, 86, 97, 137, 146, 178, 187, 191, 192, 197, 202, 205, 211, 214, 229, 230, 232, 237, 244, 247, 258, 269, 281, 305, 307, 335, 338, 341, 347, 348, 350, 351, 373, 374, 376, 377, 378, 381, 382, 384, 386, 387, 390, 415, 416, 417, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 459, 460], "revers": [20, 24, 25, 43, 55, 247, 262, 377, 382], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 105, 127, 393, 394, 395, 417, 418, 449, 492, 493], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 486, 489, 491], "direct": [20, 42, 43, 54, 434, 436], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 209, 210, 211, 220, 221, 223, 224, 231, 235, 236, 237, 238, 239, 240, 241, 244, 246, 437, 439, 440, 441, 443, 444, 445], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 449], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 247, 269, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "its": [20, 21, 24, 105, 112, 137, 181, 348, 356, 377, 381, 385, 386, 390], "docstr": [20, 21, 22, 23, 28, 32, 36, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 449, 455], "builder": [21, 53, 55, 449], "window": [21, 327, 333, 335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "maco": 21, "ubuntu": 21, "uid": 21, "bash": 21, "insid": [21, 23, 33], "make_docs_without_dock": 21, "rel": [21, 311, 314, 316, 318, 319, 320, 348, 352, 359, 362, 369, 377, 382, 386, 434, 435, 436, 449], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 187, 192, 202, 205, 211, 311, 313, 314, 348, 372, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "indic": [21, 39, 43, 75, 80, 187, 238, 247, 269, 270, 277, 290, 293, 294, 335, 336, 337, 338, 339, 340, 341, 342, 348, 371, 377, 386, 397, 398, 400, 402, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 427, 429, 430, 432, 434, 435, 436, 449, 452, 454, 470, 471, 472, 473, 474, 475, 476, 477, 482, 483], "privat": [21, 486, 490], "fulfil": [21, 37, 449], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 105, 119, 137, 157, 437, 438, 449], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 247, 257, 397, 410], "rst": 21, "skip": [21, 27, 397, 410], "read": [21, 449], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 86, 88, 92, 105, 111, 137, 182, 247, 258, 306, 307, 377, 385, 397, 399, 434, 436], "5": [21, 25, 29, 36, 40, 41, 42, 75, 77, 78, 80, 86, 94, 97, 100, 103, 104, 137, 159, 175, 180, 187, 191, 192, 196, 197, 201, 202, 205, 211, 214, 229, 230, 232, 237, 244, 247, 252, 259, 269, 305, 327, 330, 331, 335, 338, 340, 341, 347, 348, 349, 350, 351, 352, 355, 361, 368, 369, 373, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 415, 416, 417, 418, 419, 423, 424, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 470, 481], "create_rst_fil": 21, "filter": [21, 335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "repres": [21, 40, 86, 97, 105, 120, 187, 190, 191, 193, 196, 205, 231, 240, 335, 344, 348, 364, 365], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 75, 77, 78, 80, 86, 94, 137, 159, 175, 187, 191, 192, 197, 198, 202, 205, 211, 214, 229, 230, 232, 237, 244, 247, 252, 259, 269, 305, 327, 330, 335, 338, 341, 342, 347, 348, 350, 351, 352, 361, 366, 368, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 415, 416, 417, 418, 419, 424, 425, 428, 429, 430, 431, 437, 438, 439], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 187, 199, 348, 352, 356], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 187, 191, 197, 198, 229, 230, 237, 247, 269, 311, 313, 314, 318, 335, 338, 341, 342, 348, 350, 351, 352, 361, 366, 368, 377, 378, 382, 384, 386, 387, 417, 418, 419, 424, 428, 429, 430, 437, 438, 486, 487, 488], "index": [21, 28, 32, 40, 85, 86, 91, 97, 247, 249, 269, 270, 377, 389, 397, 400, 401, 404, 405, 406, 411, 413, 424, 425, 426, 427, 429, 430, 431, 434, 435, 452, 454], "create_index_rst": 21, "14": [21, 25, 32, 187, 202, 335, 347, 348, 352, 361, 377, 384, 429, 430, 437, 438], "\u03c0": [21, 187, 189, 192, 194, 195], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 137, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 449], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 311, 314, 316, 318, 319, 320], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 105, 128, 137, 175, 187, 197, 202, 214, 229, 230, 247, 258, 266, 269, 305, 306, 307, 335, 338, 341, 342, 347, 348, 368, 373, 374, 376, 377, 384, 415, 416, 424, 428, 437, 438, 440], "nestabl": [22, 24, 25, 27, 35, 187, 191, 192, 211, 244, 247, 269, 335, 338, 347, 377, 386, 415, 416, 437, 439], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 247, 254, 311, 325], "dynam": [22, 33, 34, 35, 38, 83, 84], "runtim": [22, 27, 137], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 83, 84, 137, 153, 154, 155, 156, 157, 171, 175, 176, 183, 186, 311, 314, 316, 318, 319, 320, 486, 487, 488, 489, 490, 491], "h": [22, 32, 327, 328, 329, 330, 332, 334, 335, 338, 339, 340, 341, 342], "inplac": [22, 25, 30, 31, 36, 40, 42, 247, 253, 278, 281, 282, 303, 311, 314, 316, 318, 319, 320, 459, 460, 486, 487, 488, 489, 490, 491], "j": [22, 247, 251, 252, 348, 369, 437, 438], "k": [22, 38, 67, 68, 69, 86, 91, 101, 102, 247, 251, 335, 347, 348, 356, 363, 365, 366, 367, 369, 417, 420, 421, 424, 427], "l": [22, 348, 349, 353, 356, 369], "borrow": 22, "n": [22, 86, 97, 101, 102, 247, 252, 335, 343, 348, 352, 356, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 371, 372, 377, 380, 381, 383, 389, 392, 417, 420, 421, 424, 427, 437, 440, 443, 444, 445, 446, 447, 448], "taken": [23, 43, 348, 352], "constant": [23, 28, 42, 43, 55, 137, 146, 147, 377, 380, 397, 403, 415, 416, 461, 462, 466, 469, 482, 483, 484, 485], "creation": [23, 33, 34, 38, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "data_typ": [23, 33, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "elementwis": [23, 28, 38, 43, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "linear_algebra": [23, 40, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "sort": [23, 348, 353, 366, 367, 435], "statist": [23, 33, 438, 439, 440, 441, 442, 443, 444, 445], "util": [23, 34, 137, 170, 447, 448], "compil": [23, 32, 37, 39, 55, 449, 482, 483, 486, 487, 488, 489, 490, 491], "gradient": [23, 32, 41, 42, 54, 55, 137, 181, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 393, 394, 395, 396, 449, 486, 487, 488, 489, 490, 491], "loss": [23, 28, 41, 42, 43, 374, 375, 376, 449], "meta": [23, 394, 395, 396], "nest": [23, 28, 32, 40, 41, 42, 55, 137, 161, 165, 169, 247, 305, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 482, 483, 486, 487, 488, 489, 490, 491], "norm": [23, 247, 255, 256, 348, 357, 371, 416, 449, 485, 486, 488], "random": [23, 34, 43, 54, 418, 419, 420, 421, 422, 423, 449], "overlap": 23, "sever": [23, 55, 348, 355], "judgement": 23, "locat": [23, 27, 29, 34, 417, 418], "matmul": [23, 29, 38, 348, 366, 449], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 449], "anyth": [23, 449], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 397, 398, 407, 408], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 170, 176, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 259, 260, 263, 264, 265, 267, 268, 269, 270, 274, 276, 277, 281, 290, 293, 294, 299, 300, 305, 306, 307, 309, 310, 311, 313, 314, 316, 318, 319, 320, 324, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 408, 409, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 111, 112, 113, 119, 121, 123, 125, 126, 128, 132, 137, 156, 157, 159, 175, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 274, 276, 277, 281, 290, 293, 294, 299, 305, 306, 307, 309, 310, 311, 313, 314, 316, 318, 319, 320, 324, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 409, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448], "ax": [23, 25, 33, 40, 137, 181, 247, 259, 348, 357, 365, 368, 371, 377, 380, 382, 383, 386, 388, 390, 392, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 75, 80, 83, 84, 86, 89, 91, 93, 94, 95, 96, 99, 101, 102, 103, 105, 113, 118, 120, 121, 123, 126, 137, 159, 162, 163, 164, 165, 173, 174, 175, 181, 182, 187, 197, 198, 199, 200, 201, 202, 247, 249, 259, 260, 263, 264, 265, 268, 269, 274, 290, 293, 294, 299, 300, 309, 311, 313, 314, 318, 327, 331, 333, 335, 336, 338, 340, 341, 342, 348, 350, 352, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 397, 409, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 83, 84, 86, 88, 89, 93, 98, 99, 103, 105, 113, 122, 137, 156, 247, 268, 300, 327, 333, 335, 338, 341, 342, 348, 359, 362, 366, 368, 371, 377, 379, 380, 382, 383, 386, 388, 389, 392, 397, 399, 400, 402, 404, 405, 406, 408, 409, 411, 412, 413, 414, 417, 420, 421, 424, 427, 429, 430, 431, 432, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "dtype": [23, 25, 28, 33, 34, 40, 67, 68, 69, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 103, 104, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 171, 177, 187, 192, 201, 205, 232, 237, 247, 251, 252, 290, 327, 330, 335, 343, 377, 381, 415, 416, 417, 421, 424, 425, 426, 434, 436, 437, 442, 443, 444, 446, 447, 449, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 492, 493], "nativedtyp": [23, 33, 34, 36, 86, 87, 88, 89, 90, 91, 93, 94, 98, 99, 100, 103, 104, 105, 110, 111, 117, 118, 119, 127, 437, 444], "nativedevic": [23, 33, 34, 36, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 103, 104, 137, 154, 155, 156, 170, 176, 178, 180, 182, 183, 186, 247, 269, 270, 290, 293, 294, 417, 418, 419, 420, 421], "my": 23, "nan": [23, 24, 85, 105, 111, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 209, 210, 211, 215, 217, 220, 221, 223, 224, 231, 235, 236, 237, 239, 240, 241, 244, 246, 247, 276, 310, 429, 430, 431, 433, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448], "y": [23, 25, 29, 32, 38, 40, 75, 77, 78, 79, 80, 81, 82, 86, 93, 94, 97, 99, 100, 104, 105, 111, 137, 157, 171, 175, 180, 187, 191, 192, 195, 197, 198, 201, 202, 203, 204, 205, 209, 211, 214, 229, 230, 232, 237, 244, 247, 251, 252, 258, 259, 266, 267, 269, 305, 306, 307, 311, 315, 327, 331, 334, 335, 341, 342, 344, 348, 349, 350, 351, 355, 361, 368, 369, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 437, 438, 439, 443, 444, 446, 447], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 94, 97, 98, 100, 101, 102, 104, 105, 111, 112, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 132, 137, 146, 147, 156, 157, 158, 159, 161, 162, 165, 169, 175, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 274, 276, 277, 279, 280, 281, 283, 284, 285, 286, 299, 300, 303, 305, 306, 307, 309, 310, 311, 315, 317, 322, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485], "numer": [23, 42, 86, 97, 105, 111, 187, 188, 191, 203, 206, 210, 211, 212, 215, 216, 217, 218, 226, 227, 231, 232, 233, 235, 236, 238, 243, 246, 247, 272, 273, 295, 296, 301, 302, 348, 350, 356, 361, 366, 368, 369, 370, 417, 423, 424, 425, 426, 437, 439, 442, 444, 461], "along": [23, 35, 86, 95, 96, 137, 162, 163, 164, 165, 166, 167, 168, 169, 181, 247, 259, 260, 269, 309, 327, 331, 348, 357, 369, 370, 371, 373, 375, 376, 377, 379, 382, 384, 386, 387, 389, 391, 393, 394, 395, 396, 417, 423, 424, 425, 426, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 75, 78, 86, 87, 105, 128, 137, 146, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 256, 260, 267, 269, 293, 294, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 352, 357, 366, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 397, 410, 415, 416, 417, 419, 424, 425, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "broadcast": [23, 24, 25, 32, 33, 75, 78, 105, 112, 113, 137, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 256, 267, 348, 356, 357, 359, 362, 365, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 424, 425, 426, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 86, 97, 137, 146, 147, 161, 165, 169, 247, 250, 287, 397, 403, 437, 444, 482, 483], "produc": [23, 137, 146, 147, 335, 347], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 67, 71, 187, 192, 429, 430, 431, 434, 435, 449], "firstli": [24, 25, 28, 31, 33, 35, 41], "correspond": [24, 25, 26, 28, 31, 32, 33, 36, 105, 112, 187, 195, 235, 348, 350, 353, 365, 377, 379, 386, 417, 418, 424, 425, 426, 429, 430, 431, 433, 437, 442, 443, 444, 445], "templat": [24, 449], "spec": [24, 25], "api_specif": [24, 187, 192, 202, 205, 211, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 449], "approxim": [24, 75, 76, 187, 189, 190, 192, 193, 194, 195, 204, 205, 209, 210, 220, 221, 222, 223, 235, 239, 240, 244, 348, 359, 362], "tangent": [24, 75, 82, 187, 194, 195, 196, 244, 245], "domain": [24, 187, 189, 190, 192, 193, 194, 195, 204, 205, 209, 210, 220, 221, 223, 239, 240, 241, 244], "infin": [24, 85, 105, 111, 187, 188, 190, 191, 193, 194, 195, 203, 204, 205, 209, 210, 211, 212, 215, 216, 220, 221, 223, 224, 231, 235, 236, 237, 239, 240, 241, 244, 246, 348, 371, 437, 439, 441, 446, 447, 448], "codomain": [24, 187, 189, 190, 192, 193, 194, 195, 204, 205, 209, 210, 220, 221, 223, 239, 240, 241, 244], "element": [24, 38, 43, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 93, 94, 101, 102, 137, 160, 164, 168, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 255, 256, 259, 260, 267, 277, 306, 307, 335, 343, 348, 350, 353, 356, 363, 366, 377, 378, 382, 384, 386, 387, 388, 417, 418, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 478], "x_i": [24, 187, 188, 189, 190, 192, 193, 194, 198, 203, 204, 205, 209, 210, 211, 215, 216, 217, 220, 221, 223, 226, 232, 237, 238, 239, 240, 241, 242, 244, 246, 429, 430, 431, 433, 437, 439, 440, 441, 443, 444, 445], "assum": [24, 29, 33, 40, 41, 55, 86, 97, 187, 191, 192, 197, 202, 204, 205, 211, 237, 239, 244, 247, 269, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "express": [24, 38, 43, 187, 189, 192, 194, 195, 204, 239, 244], "radian": [24, 187, 189, 192, 194, 195, 204, 239, 244], "float": [24, 28, 32, 33, 35, 36, 40, 42, 75, 77, 85, 86, 87, 89, 91, 93, 94, 95, 96, 99, 103, 105, 111, 117, 121, 125, 128, 137, 170, 176, 180, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 223, 224, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 255, 256, 268, 272, 273, 295, 296, 301, 302, 311, 313, 314, 316, 318, 319, 320, 327, 329, 334, 335, 338, 342, 347, 348, 349, 351, 353, 354, 355, 359, 362, 363, 365, 366, 371, 373, 374, 375, 376, 415, 416, 417, 420, 421, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445], "operand": [24, 187, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 209, 210, 211, 220, 221, 223, 224, 231, 235, 236, 237, 239, 240, 241, 244, 246, 437, 438, 439, 441, 444], "whose": [24, 86, 101, 102, 187, 190, 193, 196, 204, 205, 235, 239, 240, 244, 247, 254, 348, 349, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 365, 366, 367, 369, 377, 382, 386, 429, 430, 431, 437, 438], "ref": [24, 187, 201, 218, 231, 233, 236, 243, 377, 389], "promot": [24, 28, 33, 105, 111, 114, 127, 128, 132, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 209, 210, 220, 221, 223, 224, 228, 231, 235, 236, 239, 240, 241, 244, 348, 349, 350, 355, 356, 359, 361, 362, 365, 370, 371, 377, 389, 437, 440], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 449], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 86, 97, 187, 191, 192, 197, 202, 205, 210, 211, 237, 244, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439], "org": [24, 187, 192, 202, 205, 211, 311, 313, 314, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "elementwise_funct": [24, 187, 192, 202, 205, 211, 377, 386, 429, 430, 431, 434, 435, 437, 439], "explan": [24, 32, 36, 40], "descript": [24, 32, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 247, 269, 335, 338, 347, 348, 351, 371, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "simplic": [24, 42, 54, 86, 97, 187, 191, 192, 197, 202, 205, 211, 237, 244, 247, 269, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "judgment": 24, "beyond": [24, 377, 386], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 105, 113, 247, 253, 262, 281, 308, 348, 362, 377, 379, 389, 424, 427, 446, 447, 448], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 397, 398], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 377, 389, 397, 398, 399, 407, 408, 409], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 75, 76, 77, 78, 247, 268, 327, 331, 335, 343, 365, 449, 470, 471, 472, 473, 474, 475, 476, 477], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 247, 253, 279, 280, 281, 282, 283, 284, 286, 303, 311, 314, 315, 316, 317, 318, 319, 320, 322, 325, 335, 346, 348, 365, 393, 394, 395, 396, 415, 416, 449, 459, 460, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "store": [24, 29, 31, 32, 38, 40, 41, 42, 247, 268, 311, 325, 348, 369, 377, 387, 482, 483], "intern": [24, 31, 32, 34, 35, 137, 311, 325, 397, 398, 407, 408, 461, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 492, 493], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 482, 483, 486, 490], "_forward": [24, 38, 41, 42, 449], "former": 24, "trainabl": [24, 39, 41, 42, 311, 317, 459, 460, 482, 483, 492], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 348, 353, 470, 479, 481, 482, 483], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 105, 121, 122, 123, 137, 177], "docst": 24, "after": [25, 32, 33, 37, 105, 132, 187, 241, 311, 314, 315, 316, 318, 319, 320, 327, 328, 331, 415, 416, 486, 487, 488, 489, 490, 491], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 187], "multipli": [25, 29, 31, 187, 247, 259], "divid": [25, 31, 187, 212, 247, 301, 377, 387], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 86, 97, 187, 188, 191, 195, 197, 199, 200, 201, 202, 206, 207, 212, 213, 214, 218, 219, 224, 225, 227, 228, 231, 233, 236, 243, 311, 313, 314, 315, 316, 318, 319, 320, 348, 363, 393, 394, 395, 396], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 348, 350, 365, 417, 418], "combinatorili": 25, "equal": [25, 32, 33, 86, 91, 93, 94, 105, 111, 187, 199, 201, 215, 216, 235, 237, 247, 248, 251, 252, 348, 352, 359, 362, 377, 378, 380, 387, 392, 417, 421, 429, 430, 431, 433, 434, 435, 436, 437, 440, 443, 444, 445], "maximum": [25, 38, 41, 43, 137, 161, 165, 169, 181, 187, 247, 255, 256, 268, 311, 318, 377, 378, 397, 409, 424, 425, 437, 439, 441, 449], "variat": [25, 27], "grid": [25, 27, 54, 86, 97], "vari": [25, 27, 32, 40, 429, 430, 431, 433], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 86, 87, 91, 93, 94, 95, 96, 105, 111, 116, 117, 118, 137, 149, 180, 181, 187, 188, 189, 191, 192, 194, 203, 207, 208, 211, 212, 213, 214, 218, 219, 229, 230, 231, 233, 234, 235, 237, 246, 247, 255, 256, 257, 262, 268, 269, 270, 275, 278, 282, 292, 293, 294, 295, 296, 297, 310, 311, 313, 314, 315, 318, 322, 326, 327, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 359, 362, 363, 364, 365, 366, 367, 371, 377, 378, 380, 384, 385, 392, 393, 394, 395, 397, 401, 402, 403, 404, 405, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 490], "simplest": 25, "small": [25, 28, 38, 42, 55, 187, 231, 348, 359, 362, 415, 416, 484, 485], "dimens": [25, 38, 41, 75, 80, 86, 101, 102, 137, 168, 247, 263, 264, 265, 268, 274, 290, 309, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 365, 366, 367, 369, 370, 371, 373, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 396, 417, 423, 424, 425, 426, 427, 429, 430, 431, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481], "unus": [25, 35, 83, 84], "highlight": 25, "extra": [25, 30, 31, 38, 311, 315], "18": [25, 32, 187, 202, 348, 352, 361, 437, 438], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 137, 149, 482, 483, 486, 487, 488, 489, 491], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 417, 420, 429, 430, 437], "prod": [25, 33, 247, 264, 437], "var": [25, 38, 393, 394, 395, 437], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 83, 84, 86, 93, 105, 111, 114, 116, 117, 118, 119, 124, 125, 126, 136, 137, 156, 157, 172, 181, 184, 187, 197, 198, 200, 202, 207, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 233, 247, 248, 251, 252, 259, 262, 266, 268, 274, 276, 281, 283, 284, 285, 286, 299, 309, 310, 311, 322, 348, 349, 357, 366, 371, 377, 387, 397, 398, 399, 403, 407, 408, 409, 417, 418, 424, 425, 426, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 67, 68, 69, 75, 76, 83, 84, 86, 95, 105, 111, 114, 137, 156, 177, 187, 197, 213, 214, 215, 216, 217, 218, 226, 227, 247, 248, 251, 252, 253, 254, 259, 266, 268, 276, 277, 284, 299, 305, 307, 310, 311, 314, 316, 317, 318, 319, 320, 322, 335, 343, 348, 349, 357, 366, 371, 373, 374, 375, 376, 377, 387, 393, 394, 395, 396, 397, 398, 407, 408, 410, 417, 418, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 75, 80, 86, 95, 96, 137, 139, 142, 149, 162, 163, 164, 165, 166, 167, 168, 169, 181, 247, 259, 260, 269, 309, 327, 331, 348, 350, 352, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 417, 423, 424, 425, 426, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "54": [25, 187, 204, 335, 347, 348, 361, 437, 438], "jointli": 25, "three": [25, 32, 37, 86, 97, 449], "x0": [25, 247, 251], "x1": [25, 36, 67, 68, 105, 132, 137, 175, 187, 191, 195, 197, 199, 200, 201, 202, 206, 207, 212, 213, 214, 218, 219, 224, 225, 227, 228, 229, 230, 231, 233, 235, 236, 243, 247, 251, 335, 340, 348, 350, 356, 361, 365, 368, 370, 424, 428], "x2": [25, 36, 67, 68, 105, 132, 137, 175, 187, 191, 195, 197, 199, 200, 201, 202, 206, 207, 212, 213, 214, 218, 219, 224, 225, 227, 228, 229, 230, 231, 233, 235, 236, 243, 335, 340, 348, 350, 356, 361, 365, 368, 370, 424, 428], "combin": [25, 27, 28, 31, 32, 43, 327, 333, 348, 350], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 335, 346, 348, 350, 449, 455, 470, 481], "seper": [25, 247, 268], "pars": [25, 55], "satisfi": [25, 348, 372], "ignor": [25, 55, 86, 97, 397, 408, 486, 490], "far": [25, 34, 39, 40, 397, 398, 408], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 348, 353, 366], "shown": [25, 36, 38, 40, 55, 86, 97, 187, 197, 202, 205, 237, 348, 351, 377, 381, 382, 429, 430, 431, 434, 435], "rule": [25, 27, 28, 31, 32, 33, 105, 111, 114, 128, 187, 196, 201, 206, 231, 236, 348, 349, 350, 361, 365], "count": [25, 41, 137, 175, 348, 370, 377, 382, 429, 430, 431, 446, 447, 448], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 187, 244, 348, 361, 437, 438], "19": [25, 187, 202, 244, 348, 352, 377, 384], "143": [25, 187, 244], "16": [25, 41, 187, 244, 335, 341, 348, 352, 361, 415, 416, 424, 428, 437, 438], "38": [25, 187, 244], "11": [25, 32, 187, 191, 197, 237, 247, 259, 269, 348, 352, 361, 377, 382, 384, 417, 419, 424, 428, 429, 430, 437, 438], "13": [25, 32, 187, 197, 202, 205, 247, 259, 335, 342, 347, 348, 352, 361, 377, 384, 415, 416, 424, 428, 429, 430, 437, 438], "17": [25, 32, 75, 77, 348, 352], "shift": [25, 36, 187, 199, 201, 377, 386], "sequenc": [25, 33, 54, 137, 146, 147, 247, 252, 287, 327, 333, 377, 387, 389, 417, 419, 437, 439, 470, 479, 484, 485, 492, 493], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 247, 259, 260, 348, 370, 377, 384, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "non": [25, 32, 33, 38, 83, 84, 105, 111, 124, 187, 226, 227, 335, 338, 348, 351, 359, 366, 368, 370, 371, 424, 425, 426, 427, 437, 439, 440, 441, 442, 445, 446, 447, 448, 482, 483, 486, 490], "static_rol": [25, 32], "float32": [25, 33, 105, 109, 110, 187, 192, 205, 232, 237, 327, 330, 377, 381, 415, 416], "z": [25, 29, 32, 38, 40, 137, 171, 187, 191, 197, 202, 214, 229, 230, 247, 251, 252, 269, 348, 350, 373, 374, 375, 377, 384, 424, 425, 437, 438, 439], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 75, 76, 77, 78, 137], "test_array_api": [26, 27], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 137, 146, 397, 404, 405, 409, 410, 470, 481], "collect": [27, 54, 75, 83, 137, 247, 311, 327, 335, 373, 397, 410, 415, 417, 456, 470, 484, 486], "test_ivi": 27, "pytest": 27, "fixtur": 27, "ones": [27, 38, 40, 41, 86, 91, 100, 247, 290, 327, 333, 449], "consum": [27, 32, 36, 137], "300": [27, 187, 237], "ab": [27, 30, 187, 235, 348, 371, 449], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 327, 328, 331, 335, 343, 417, 418, 420, 421, 437, 443, 445, 470, 478], "rang": [27, 41, 42, 43, 86, 87, 95, 96, 429, 430, 437, 442, 444, 449], "previou": [27, 36, 43, 55, 311, 314, 318], "cach": [27, 28, 137, 155, 247, 254], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 397, 406], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 86, 97, 105, 112, 128, 137, 166, 167, 169], "verifi": [27, 33, 34, 40, 449, 455], "truth": [27, 187, 207, 213, 214, 218, 219, 233], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 247, 276, 348, 365], "suffic": [27, 30], "catch": [27, 247, 262], "systemat": 27, "compar": [27, 41, 247, 248, 251, 252, 429, 430, 431, 433, 434, 435, 436], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 137], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 86, 87, 247, 259, 283, 284, 286, 311, 317, 417, 419], "constitut": [28, 38, 437, 443, 445], "venn": 28, "diagram": 28, "lowest": [28, 55, 397, 409, 417, 419], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 373, 376], "pred": [28, 32, 35, 373, 374, 375, 376], "epsilon": [28, 32, 35, 42, 311, 313, 314, 318, 348, 359, 362, 373, 374, 375, 376, 415, 416, 484, 485, 486, 487, 488], "1e": [28, 32, 35, 42, 43, 247, 273, 311, 313, 314, 318, 348, 366, 373, 374, 375, 376, 415, 416, 449, 486, 487, 488, 489, 491], "clip": [28, 32, 35, 38, 41, 43, 187, 229, 230, 247, 255, 256, 377, 384, 449], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 75, 77, 86, 87, 91, 187, 215, 216, 231, 235, 236, 348, 366, 370, 371, 377, 382, 386, 446, 447, 448], "sum": [28, 32, 33, 35, 38, 137, 166, 167, 168, 169, 181, 187, 191, 224, 247, 260, 264, 293, 294, 335, 347, 348, 366, 369, 371, 437, 438, 443], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 437, 443, 445], "outsid": [28, 34, 38, 40, 43, 377, 378, 389], "cache_fn": [28, 247], "stable_divid": [28, 247], "denomin": [28, 55, 247, 267, 273, 296, 301, 302, 415, 416, 484, 485], "divis": [28, 187, 201, 206, 212, 236, 247, 267, 273, 296, 301, 302, 311, 313, 314, 318, 486, 487, 488], "leaf": [28, 32, 41, 397, 398, 407, 408], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 137, 179, 180, 247, 268, 327, 332, 335, 344, 348, 371, 393, 394, 395, 396, 415, 416, 484, 485], "concurr": [28, 32], "weight": [28, 32, 42, 43, 311, 313, 314, 316, 318, 319, 320, 335, 344, 345, 347, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 483, 486, 488, 489], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 83, 84, 137, 182, 247, 308, 311, 313, 314, 318, 348, 356, 393, 394, 395, 396, 437, 443, 445, 482, 483, 486, 487, 488, 490], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 327, 333], "briefli": [28, 41], "can_cast": [28, 33, 105], "cast": [28, 33, 67, 68, 69, 105, 111, 114, 327, 329, 334, 377, 379, 437, 442, 444, 449], "set_default_dtyp": [28, 33, 105], "default_dtyp": [28, 33, 105], "get_all_arrays_on_dev": 28, "nested_map": [28, 397], "index_nest": [28, 397], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 187, 231, 247, 290], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 105, 109, 110, 119, 124, 136, 137, 153, 154, 155, 156, 170, 176, 182, 183, 186, 247, 261], "unmodifi": [29, 33], "loop": [29, 55, 393, 394, 395, 396], "moment": [29, 55, 311, 313, 314, 318, 486, 487, 488], "fallback": 29, "freedom": [29, 437, 443, 445], "recommend": [29, 187, 226, 227, 236, 437, 440], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 187, 225, 226, 227, 446, 447, 448, 449], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 449], "empti": [31, 33, 34, 86, 87, 437, 443, 444, 446, 447, 448], "self": [31, 38, 40, 41, 42, 43, 137, 449, 486, 490], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 187, 247, 268, 449], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 393, 394, 395, 397, 410, 492, 493], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 187, 209, 210, 220, 221, 222, 223, 232, 238, 242, 397, 398, 407, 408, 446, 447, 448], "boolean": [32, 86, 93, 105, 111, 124, 136, 137, 172, 184, 187, 197, 198, 200, 202, 225, 226, 227, 228, 247, 248, 251, 252, 276, 277, 278, 282, 283, 284, 285, 286, 303, 310, 311, 317, 393, 394, 395, 397, 407, 437, 441], "to_iter": 32, "travers": [32, 38, 40, 397, 409], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 377], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 137, 149, 247, 249, 257, 335, 346, 347, 393, 394, 395, 397, 400, 406, 410, 459, 460, 470, 481, 486, 490], "underli": [32, 187, 197, 200, 202, 228], "queri": [32, 33, 40, 137, 170, 180, 335, 346, 347, 470, 481], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 247, 268, 377, 381], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 187, 202], "integ": [32, 33, 40, 86, 87, 93, 105, 123, 126, 128, 187, 188, 197, 198, 199, 200, 201, 202, 203, 211, 212, 228, 235, 236, 237, 246, 348, 358, 370, 371, 377, 387, 417, 419, 422, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "22": [32, 187, 202, 348, 352, 361, 424, 428, 437, 438], "25": [32, 348, 352, 355, 373, 375, 415, 416, 437, 438], "execute_with_gradi": [32, 41, 42, 43, 55, 311, 449], "multi_head_attent": [32, 35, 335], "func": [32, 83, 84, 137, 181, 247, 254, 311, 315, 397, 410], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 83, 84, 105, 122, 137, 181, 247, 249, 254, 262, 264, 393, 394, 395, 396, 397, 403, 407, 408, 409], "xs": [32, 137, 160, 164, 166, 167, 168, 247, 248, 252, 311, 315, 377, 379], "retain_grad": [32, 311, 315], "dy": [32, 311, 315, 327, 330], "dx": [32, 311, 315, 327, 330], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 449, 486, 490], "redund": 32, "scale": [32, 137, 179, 180, 311, 319, 335, 343, 346, 347, 415, 416, 470, 478, 481, 486, 489], "num_head": [32, 335, 346, 470, 481], "mask": [32, 335, 346, 347], "to_q_fn": [32, 335, 346], "to_kv_fn": [32, 335, 346], "to_out_fn": [32, 35, 335, 346], "to_q_v": [32, 335, 346], "to_kv_v": [32, 335, 346], "to_out_v": [32, 335, 346], "measur": [32, 335, 346, 470, 481], "dot": [32, 335, 346, 347, 348, 368, 370, 470, 481], "product": [32, 187, 231, 247, 259, 335, 346, 347, 348, 350, 356, 361, 368, 370, 437, 438, 442, 470, 481], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": 33, "int16": [33, 437, 442, 444], "int32": [33, 137, 171, 437, 442, 444], "int64": [33, 187, 201, 424, 425, 426, 437, 442, 444], "uint8": [33, 327, 329, 334], "uint16": [33, 105, 122, 437, 442, 444], "uint32": [33, 105, 122, 437, 442, 444], "uint64": [33, 105, 122, 437, 442, 444], "bfloat16": 33, "float16": [33, 105, 122], "float64": [33, 105, 111], "deriv": [33, 34, 40, 42, 86, 90, 94, 100, 104, 311, 313, 314, 316, 318, 319, 320, 397, 399, 409, 482, 486, 490, 492], "constructor": [33, 34, 40, 247, 250, 492, 493], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 449, 482, 483, 486, 490], "valid": [33, 38, 105, 115, 335, 336, 337, 338, 339, 340, 341, 342, 377, 389, 446, 447, 448, 470, 471, 472, 473, 474, 475, 476, 477], "invalid": [33, 348, 370, 446, 447, 448], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 105], "broadcast_to": [33, 105], "result_typ": [33, 105], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 247, 264, 293, 294, 446, 447, 448, 449], "overflow": [33, 187, 191, 437, 444], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 415, 416], "scalar": [33, 38, 43, 55, 86, 94, 247, 290, 307, 310, 348, 371], "default_int_dtyp": [33, 105], "default_float_dtyp": [33, 105], "settabl": [33, 34], "set_default_int_dtyp": [33, 105], "set_default_float_dtyp": [33, 105], "arang": [33, 86, 95, 96, 327, 330, 334, 437, 438, 449], "dim": [33, 247, 290, 327, 328, 333, 470, 481], "bear": 33, "popul": [33, 34, 38, 417, 418, 437, 443, 445], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 449], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 449], "nd": [33, 34, 35, 38, 43, 449], "One": [33, 38, 40, 41, 247, 264, 377, 385, 417, 419], "deleg": 33, "fill_valu": [33, 86, 93, 94, 187, 214], "shape_to_tupl": [33, 247], "item": [33, 38, 40, 41, 43, 105, 116, 137, 146, 147, 149, 156, 158, 160, 162, 164, 168, 247, 257, 275, 301, 302, 397, 402, 403, 404, 405, 409, 413, 414, 449, 482, 483], "as_n": [33, 105, 116, 117, 118, 119, 137, 156, 157], "cpu": [34, 55, 86, 95, 96, 137, 156, 157, 159, 173, 176, 182, 183, 185, 186, 247, 269, 270, 290, 293, 294, 417, 418, 419, 421, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "gpu": [34, 40, 55, 137, 156, 159, 172, 174, 180, 185, 417, 419], "idx": [34, 40, 247, 249], "tpu": [34, 137, 159, 184], "get_all_ivy_arrays_on_dev": [34, 137], "aliv": [34, 137, 171, 175, 177, 247, 271, 289, 291], "total_mem_on_dev": [34, 137], "amount": [34, 137, 183, 373, 374, 375, 376], "memori": [34, 35, 53, 55, 137, 155, 176, 181, 183, 186, 335, 345, 449], "dev_util": [34, 137], "num_cpu_cor": [34, 137], "default_devic": [34, 38, 137, 175, 185], "random_uniform": [34, 42, 417, 449], "dual": 34, "thrown": [34, 55, 247, 281], "rare": [34, 55], "set_default_devic": [34, 137, 185], "overwrit": [35, 38, 137, 181], "program": 35, "strictli": 35, "inplace_upd": [35, 247, 459, 460], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 247, 281], "val": [35, 40, 247, 279, 280, 281, 295, 296], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 247], "is_vari": [35, 311], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 105, 111], "inclus": [35, 86, 87, 417, 419], "omit": [35, 36, 429, 430, 431, 433], "unspecifi": [35, 187, 235, 236, 348, 353, 377, 389], "predominantli": [35, 54], "math": [35, 43, 449], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 348, 353, 356, 393, 394, 395, 396], "third": [35, 55, 348, 366, 429, 430], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 327, 330, 334, 377, 449], "asarrai": [35, 86, 335, 336, 429, 431], "equival": [35, 41, 43, 86, 87, 187, 201, 226, 227, 236, 348, 359, 362, 365, 371], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 311, 325, 459, 460], "posit": [36, 41, 54, 85, 86, 91, 105, 121, 137, 161, 165, 169, 187, 188, 215, 216, 231, 236, 247, 268, 348, 349, 377, 381, 386, 417, 422, 424, 427, 446, 447, 448, 459, 460], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 397, 398, 408], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 437, 444], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 461], "sound": 37, "higher": [37, 38, 43, 55, 311, 314, 316, 318, 319, 320], "overview": [37, 54], "handler": [37, 39, 43, 449], "fledg": [38, 39], "cuda": [38, 41, 55, 86, 95, 96, 137, 146, 153, 247, 269, 270, 290, 293, 294, 417, 418, 419, 421, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "syntact": [38, 43], "x_min": [38, 43, 377, 378, 384], "x_max": [38, 43, 377, 378, 384], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 187, 235, 236, 429, 430, 431, 433], "fit": [38, 327, 333, 377, 384], "logspac": [38, 86], "construct": [38, 39, 42, 43, 377, 391, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "stop": [38, 55, 86, 87, 95, 96, 137, 152, 181, 311, 314, 316, 318, 319, 320, 322, 393, 394, 395, 396, 486, 487, 488, 489, 490, 491], "num": [38, 86, 95, 96, 327, 333], "power_seq": 38, "linspac": [38, 86, 87, 449], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 86, 87, 95, 96, 348, 370, 377, 378, 389, 417, 419, 421, 446, 447, 448], "edg": [38, 43, 377, 378, 380, 392, 449], "wise": [38, 43, 75, 76, 77, 78, 79, 80, 81, 82, 187, 188, 189, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 206, 207, 208, 212, 213, 214, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 243, 247, 267, 377, 378], "larger": [38, 43, 105, 121, 377, 378, 386, 437, 443, 445], "param": [38, 43, 247, 249, 269, 270], "minimum": [38, 43, 137, 187, 188, 247, 272, 273, 295, 296, 301, 302, 377, 378, 424, 426, 437, 439, 441, 449], "ml_framework": [38, 43, 86, 87], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 137, 166, 247, 268, 377, 379, 449], "framework_handl": 38, "face": 38, "verbos": [38, 449, 496], "cprint": [38, 495], "framework_stack": 38, "stack": [38, 86, 101, 102, 327, 333, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 366, 367, 369, 377, 397, 398, 407, 408, 449, 470, 479], "_determine_framework_from_arg": 38, "valueerror": [38, 377, 388], "get_framework": 38, "neither": [38, 187, 191, 231], "illustr": [38, 54], "un": [38, 105, 124], "v": [38, 41, 42, 43, 335, 347, 449, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 490, 492, 493], "lstm_updat": [38, 335], "nn": [38, 43, 86, 97, 449], "init_h": [38, 335, 345], "init_c": [38, 335, 345], "kernel": [38, 55, 335, 345], "recurrent_kernel": [38, 335, 345], "bia": [38, 42, 335, 344, 345, 470, 471, 472, 473, 474, 475, 476, 477, 480], "recurrent_bia": [38, 335, 345], "x_shape": 38, "batch_shap": [38, 40, 43, 247, 290, 327, 328, 329, 330, 332, 333, 334, 335, 345, 346, 347, 348, 372, 417, 418, 470, 479], "timestep": [38, 335, 345, 470, 479], "input_channel": [38, 42, 470, 471, 472, 473, 474, 475, 476, 479, 480], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 335, 345], "wh": 38, "lstm": [38, 335, 345, 470], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 335, 345], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 247, 449], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 377, 387], "sigmoid": [38, 41, 42, 75, 449], "ft": 38, "gt": 38, "tanh": [38, 75, 187, 449], "ot": 38, "expand_dim": [38, 41, 377, 449], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 449], "reduce_sum": [38, 449], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 247, 252, 311, 313, 314, 316, 318, 319, 320, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 247, 283, 284, 286, 348], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 105, 122, 137, 146, 147, 247, 249, 308, 397, 398, 403, 404, 405, 407, 408, 409, 452, 454], "example_input": [38, 83, 84], "static_argnum": [38, 83, 84], "static_argnam": [38, 83, 84], "jit": [38, 55], "low": [38, 417, 419, 421], "frontend": [39, 67, 68, 69, 71, 72, 73], "treat": [39, 43, 83, 84], "primit": [39, 55], "describ": [39, 43, 437, 438, 442, 443, 444], "hierarch": [39, 41, 42], "solv": [39, 54, 348], "straight": [40, 449], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 247, 253], "is_native_arrai": [40, 247], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 137, 181, 247, 264, 348, 363, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "mul": 40, "len": [40, 43, 86, 97], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 137], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 348, 363, 366], "size": [40, 41, 86, 95, 96, 137, 179, 180, 181, 247, 293, 327, 332, 335, 347, 348, 352, 357, 361, 363, 366, 370, 377, 381, 386, 387, 388, 417, 418, 420, 421, 424, 425, 427, 446, 447, 448, 470, 471, 472], "matrix_transpos": [40, 348], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 247, 449], "genuin": 40, "some_method": 40, "similarli": [40, 86, 97], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 187, 201, 209, 235, 247, 272, 295, 302, 348, 358, 461], "enforc": 40, "notic": 40, "appear": [40, 377, 381], "inv": [40, 348, 449], "invers": [40, 54, 187, 189, 190, 192, 193, 194, 195, 196, 348, 355, 362], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 397, 410], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 247, 257], "abc": [40, 137, 146, 152, 247, 266, 482, 483, 486, 490], "newshap": [40, 377, 385], "new_shap": 40, "transpos": [40, 43, 137, 168, 335, 337, 339, 341, 348, 360, 362, 449, 470, 472, 474, 476], "flip": [40, 41, 43, 187, 198, 377, 449], "tidi": 40, "20": [40, 187, 202, 209, 237, 348, 352, 361, 368, 417, 419, 424, 427, 428, 437, 438], "shorter": 40, "crystal": 40, "41": [40, 187, 202, 348, 349, 437, 444], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 137, 180], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 449, 455], "hold": [41, 247, 293, 294], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 311, 314, 316, 318, 319, 320, 486, 487, 488, 489, 490, 491], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 327, 329], "hdf5": [41, 482, 483], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 397, 410], "batch_siz": [41, 327, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 417, 418], "dir": 41, "dataset": [41, 53, 449], "dropout": [41, 335, 470, 481], "adam": [41, 42, 43, 311, 313, 314, 318, 449, 486, 488], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 85], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 348, 371], "depth": [41, 42, 43, 54, 137, 161, 165, 169, 247, 275, 290, 397, 409, 482, 483], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 482, 483], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 327, 333], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 86, 87, 97, 348, 366, 367, 377, 385], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 449], "img_min": 41, "reduce_min": [41, 449], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 377, 389, 415, 416, 417, 420, 484, 485], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 137, 146, 247], "queue": [41, 137, 146, 147, 247, 292, 297], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 449], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 75, 77, 187, 202, 327, 334, 335, 338, 341, 348, 361, 424, 428, 437, 438], "batch_slic": 41, "model": [41, 42, 449], "mymodel": [41, 449], "linear0": [41, 42, 449], "linear1": [41, 42, 449], "relu": [41, 42, 75, 76, 77, 449], "x_in": [41, 42, 43, 449], "001": [41, 42, 415, 416], "loss_fn": [41, 42, 43, 449], "to_numpi": [41, 247, 449], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 470, 471, 472, 473, 474, 475, 476, 479, 480], "with_bia": [42, 470, 480], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 335, 345, 470, 479], "fed": [42, 137, 181], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "glorotuniform": [42, 461, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "bias_initi": [42, 470, 471, 472, 473, 474, 475, 476, 477, 480], "_w_init": 42, "_b_init": 42, "create_vari": [42, 461], "var_shap": [42, 461], "fan_out": [42, 461], "fan_in": [42, 461], "uniform": [42, 417, 418, 419, 421, 461, 463, 464, 467, 468], "fan_mod": [42, 461], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 393, 395], "descent": [42, 311, 316, 486, 491], "lar": [42, 311, 318, 319, 486], "lamb": [42, 311, 318, 486], "beta1": [42, 311, 313, 314, 318, 486, 487, 488], "beta2": [42, 311, 313, 314, 318, 486, 487, 488], "999": [42, 311, 313, 314, 318, 486, 487, 488], "07": [42, 311, 313, 314, 318, 373, 374, 375, 376, 486, 487, 488], "stop_gradi": [42, 137, 181, 311, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 486, 487, 488, 489, 490, 491], "compile_on_next_step": [42, 482, 483, 486, 487, 488, 489, 490, 491], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 486, 490], "new_v": 42, "adam_upd": [42, 311], "_lr": 42, "isinst": [42, 43, 247, 305], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 486, 487, 488, 489, 490, 491], "mw": [42, 311, 313, 314], "vw": [42, 311, 313, 314], "pre": [43, 55, 137], "captur": 43, "one_hot": [43, 247, 449], "sparse_funct": 43, "num_class": [43, 417, 418], "ey": [43, 86, 335, 338, 342], "cumprod": [43, 247], "ones_lik": [43, 86, 449], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 415, 416, 484, 485], "to_ivy_modul": [43, 459], "thinli": 43, "whilst": 43, "preserv": [43, 55, 311, 322, 377, 382], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 335, 343, 344], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 348, 361, 417, 422, 437, 438], "init": 43, "update_rul": 43, "01": [43, 187, 237], "tree_multimap": 43, "mechan": [53, 55, 449], "vision": [53, 449], "robot": [53, 449], "focus": 54, "field": [54, 348, 353, 363, 366, 429, 430, 431], "perfect": 54, "3d": [54, 470, 475, 476], "differenti": 54, "demo": [54, 449], "orient": 54, "pose": 54, "represent": [54, 85, 105, 109, 110, 121, 123, 137, 153, 154, 187, 188, 191, 197, 200, 202, 228, 231, 247, 249, 300, 305], "largest": [54, 105, 121, 123, 348, 366], "euler": [54, 85], "quaternion": 54, "rotat": 54, "matric": [54, 86, 97, 101, 102, 335, 344, 348, 349, 351, 352, 353, 354, 355, 358, 359, 360, 362, 363, 365, 366, 367, 369], "vector": [54, 86, 97, 247, 256, 335, 344, 348, 350, 353, 356, 361, 366, 367, 370, 371, 372, 470, 480], "angl": [54, 187, 195, 205, 240], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 348, 365], "warp": [54, 327, 328], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 335, 449, 456, 470], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 449], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 247, 259, 260], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 83, 84, 397, 407, 408, 424, 428], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "q": [55, 335, 347, 348, 353, 363], "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 187, 236, 348, 370, 446, 447, 448], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 105, 121, 123, 187, 235, 437, 442, 444], "gold": 55, "dex": 55, "phase": 55, "lax": 55, "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 137, 146, 147], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 397, 399], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "mathematical_funct": [67, 68, 69], "same_kind": [67, 68, 69], "subok": [67, 68, 69], "pointwise_op": [71, 72, 73], "alpha": [71, 72, 75, 77], "gelu": [75, 456], "gaussian": [75, 76], "leaki": [75, 76, 77], "leaky_relu": [75, 449], "rectifi": [75, 77, 78], "slope": [75, 77], "39": [75, 77, 348, 361, 415, 416, 437, 438], "85": [75, 77, 187, 202], "48": [75, 77, 348, 361, 437, 438], "88": [75, 77, 187, 202, 348, 361, 437, 438], "269": [75, 79], "731": [75, 79], "881": [75, 79], "214": [75, 79], "978": [75, 79], "891": [75, 79], "softmax": [75, 335, 346, 347, 449], "422": [75, 80], "155": [75, 80], "0768": [75, 80], "231": [75, 80], "693": [75, 80, 373, 376], "49": [75, 80, 437, 438], "147": [75, 80], "363": [75, 80], "softplu": [75, 449], "3461": [75, 81], "6491": [75, 81], "5349962": [75, 81], "4203641": [75, 81], "hyperbol": [75, 82, 187, 190, 193, 196, 205, 240, 245], "55": [75, 82, 335, 341, 348, 361, 437, 438], "501": [75, 82], "762": [75, 82], "964": [75, 82], "faster": [83, 84], "invoc": [83, 84], "718281828459045": 85, "inf": [85, 247, 276, 310, 348, 371], "newaxi": 85, "alia": 85, "pi": 85, "141592653589793": 85, "mathemat": [85, 187, 191, 195, 210, 231, 348, 371], "evenli": [86, 87, 95, 96, 377, 387], "half": [86, 87, 417, 419, 421], "word": [86, 87, 417, 421, 459, 460], "chosen": [86, 87, 187, 195, 424, 428], "distanc": [86, 87], "adjac": [86, 87], "dimension": [86, 87, 91, 97, 348, 350, 351, 356, 359, 361, 362, 370, 371, 377, 387, 424, 425, 426, 427, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "ceil": [86, 87, 187, 449], "datatyp": [86, 88, 98, 105, 115, 125, 126, 127], "interpret": [86, 88, 98], "fill": [86, 89, 93, 94, 99, 100, 103, 104, 417, 419], "uniniti": [86, 89, 90], "empty_lik": 86, "n_row": [86, 91], "n_col": [86, 91], "diagon": [86, 91, 101, 102, 348, 369], "elsewher": [86, 91, 424, 428], "row": [86, 91, 348, 365, 366, 417, 418, 424, 427], "column": [86, 91, 348, 353, 363, 365, 366], "upper": [86, 91, 102, 348, 349, 363, 417, 421], "from_dlpack": 86, "__dlpack__": [86, 92, 137, 182], "interchang": [86, 92, 377, 390], "full_lik": 86, "endpoint": [86, 95], "entri": [86, 95, 96, 377, 387, 397, 410], "meshgrid": 86, "xy": [86, 97], "coordin": [86, 97, 187, 195], "cartesian": [86, 97], "matrix": [86, 97, 101, 102, 247, 248, 255, 335, 344, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 369, 372, 470, 480], "ij": [86, 97, 437, 438], "rank": [86, 97, 247, 309, 348, 350, 359, 363, 365, 369, 370, 371, 377, 380, 381, 389, 392, 424, 427, 446, 447, 448], "ni": [86, 97], "xi": [86, 97], "n1": [86, 97], "n2": [86, 97], "n3": [86, 97], "accordingli": [86, 97, 187, 210, 348, 371, 424, 426, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "xv": [86, 97], "yv": [86, 97], "tril": 86, "triangular": [86, 101, 102, 348, 349, 363], "innermost": [86, 101, 102, 348, 349, 351, 352, 353, 354, 355, 359, 360, 362, 363, 365, 366, 367, 369], "mxn": [86, 101, 102, 348, 352, 359, 360, 362, 363, 367, 369], "triu": 86, "zeros_lik": [86, 377, 378, 449], "defaultdtyp": [105, 106], "defaultfloatdtyp": [105, 107], "float_dtyp": [105, 117, 130], "defaultintdtyp": [105, 108], "as_ivy_dtyp": 105, "dtype_in": [105, 109, 110, 120, 124, 125, 126, 136], "as_native_dtyp": 105, "match": [105, 111, 187, 236, 247, 287], "broadcast_arrai": 105, "incompat": [105, 113], "from_": [105, 114], "occur": [105, 114, 424, 425, 426, 429, 430, 431, 433], "closest_valid_dtyp": 105, "closest": [105, 115, 187, 203, 211, 212, 237, 246], "summari": [105, 116, 117, 118, 129, 130, 131, 137, 150, 151, 247, 257, 261, 275, 311, 321, 326], "floatdtyp": [105, 117], "int_dtyp": [105, 118, 131], "intdtyp": [105, 118], "dtype_bit": 105, "finfo": 105, "inform": [105, 121, 123, 247, 249, 311, 322], "followng": [105, 121], "occupi": [105, 121, 123, 247, 293, 294], "ep": [105, 121, 348, 359, 362], "smallest": [105, 121, 123, 187, 203], "max": [105, 121, 123, 187, 229, 247, 255, 256, 264, 293, 294, 348, 359, 362, 437, 486, 488], "min": [105, 121, 123, 187, 230, 247, 264, 293, 294, 301, 348, 363, 366, 367, 371, 437], "smallest_norm": [105, 121], "precis": [105, 121, 187, 231, 241], "function_unsupported_dtyp": 105, "acosh": [105, 122, 187, 449], "iinfo": 105, "encapsul": [105, 123], "invalid_dtyp": 105, "is_float_dtyp": 105, "is_int_dtyp": [105, 247, 307], "promote_typ": 105, "type1": [105, 127], "type2": [105, 127], "arrays_and_dtyp": [105, 128], "type_promote_arrai": 105, "ret1": [105, 132], "ret2": [105, 132], "unset_default_dtyp": 105, "unset_default_float_dtyp": 105, "unset_default_int_dtyp": 105, "valid_dtyp": 105, "noinspect": [106, 107, 108, 138, 312], "pyshadowingnam": [106, 107, 108, 138, 312], "defaultdevic": [137, 138], "__enter__": 137, "_dev": 137, "initialis": 137, "devcloneditem": [137, 159], "multidevitem": [137, 139, 142], "devclonedit": 137, "multidevit": [137, 140, 143, 146, 147, 151], "devclonednest": 137, "max_depth": [137, 141, 144, 151, 161, 165, 169, 247, 275, 397, 409], "multidevnest": [137, 141, 144], "devdistitem": 137, "devdistit": 137, "devdistnest": 137, "devmanag": [137, 145], "dev_mapp": 137, "da_dim_s": 137, "safety_factor": 137, "min_dev_dim_s": 137, "max_dev_dim_step_ratio": 137, "min_unit_dev_tune_step": 137, "min_sf_tune_step": 137, "starting_split_factor": 137, "max_split_factor_step_s": 137, "05": [137, 415, 416], "tune_dev_alloc": 137, "tune_dev_split": 137, "mapper": [137, 146, 147], "receivess": 137, "ratio": [137, 311, 318, 327, 333, 486, 488], "safe": [137, 146], "oom": 137, "tune": 137, "da_tune_step": 137, "dim_siz": 137, "ds_tune_step": 137, "to_clon": 137, "to_distribut": 137, "multidevic": [137, 146], "parallel": [137, 146, 147], "mutlidevic": [137, 146], "repeated_config_check": 137, "tune_step": 137, "devmapp": [137, 147], "ret_fn": [137, 146, 147], "queue_class": [137, 146, 147], "worker_class": [137, 146, 147], "timeout": [137, 146, 147, 247, 292, 297], "worker": [137, 146, 147], "used_dev": [137, 146], "split_factor": [137, 146], "sf": [137, 146], "devmappermultiproc": 137, "multidev": [137, 148, 149, 150, 169], "at_dev": [137, 150, 151], "profil": 137, "save_dir": [137, 152], "as_native_dev": 137, "clear_mem_on_dev": 137, "to_devic": [137, 156], "dev_clon": 137, "deviceic": [137, 158], "dev_clone_arrai": 137, "dev_clone_it": 137, "dev_clone_nest": 137, "dev_dist": 137, "dev_dist_arrai": 137, "dev_dist_it": 137, "dev_dist_nest": 137, "dev_unifi": 137, "concat": [137, 166, 167, 168, 169, 181, 247, 268, 377, 449], "concatten": [137, 166, 167, 168, 169, 181], "dev_unify_arrai": 137, "dev_unify_it": 137, "dev_unify_nest": 137, "spread": [137, 169], "140462020989616": [137, 171], "gpu_is_avail": 137, "num_ivy_arrays_on_dev": 137, "x3": [137, 175], "x4": [137, 175], "percent_used_mem_on_dev": 137, "process_specif": [137, 176, 186], "percentag": [137, 176], "ram": [137, 176, 183, 186], "alon": [137, 176, 186], "print_all_ivy_arrays_on_dev": 137, "attr_onli": [137, 177], "set_split_factor": 137, "chunk": [137, 179, 180, 181], "split_func_cal": 137, "max_chunk_s": [137, 181], "chunk_siz": [137, 181], "input_ax": [137, 181], "output_ax": [137, 181], "feed": [137, 181], "fist": [137, 181], "stream": [137, 182], "caveat": [137, 182], "portabl": [137, 182, 449], "gb": [137, 183, 186], "tpu_is_avail": 137, "unset_default_devic": 137, "reset": [137, 185], "used_mem_on_dev": 137, "magnitud": [187, 188, 191, 231, 348, 366, 367], "aco": [187, 449], "princip": [187, 189, 192, 194], "cosin": [187, 189, 190, 204, 205], "greater": [187, 189, 192, 195, 199, 201, 211, 212, 235, 236, 238, 246, 348, 350, 377, 388, 417, 421], "x1_i": [187, 191, 195, 197, 199, 200, 201, 202, 206, 207, 212, 213, 214, 218, 219, 224, 225, 227, 228, 231, 233, 235, 236, 243], "x2_i": [187, 191, 195, 197, 199, 200, 201, 202, 206, 207, 212, 213, 214, 218, 219, 224, 225, 227, 228, 231, 233, 235, 236, 243], "finit": [187, 191, 195, 215, 231, 235, 236], "nonzero": [187, 191, 231, 424], "nor": [187, 191, 231], "nearest": [187, 191, 231, 237], "2019": [187, 191, 210, 231], "commut": [187, 191], "asin": [187, 449], "sine": [187, 192, 193, 239, 240], "5707964": [187, 192], "5235988": [187, 192], "64350116": [187, 192], "10016742": [187, 192], "20135793": [187, 192], "30469266": [187, 192], "41151685": [187, 192], "asinh": [187, 449], "atan": [187, 449], "atan2": [187, 449], "quotient": [187, 195], "notat": [187, 195, 437, 438], "denot": [187, 195], "pair": [187, 195, 335, 347, 348, 350], "quadrant": [187, 195], "3\u03c0": [187, 195], "atanh": [187, 449], "549": [187, 196], "bitwise_and": 187, "bitwis": [187, 197, 200, 202, 228], "AND": [187, 197, 225, 446, 447], "binari": [187, 197, 200, 202, 228, 373, 374], "bitwise_invert": 187, "invert": [187, 198], "bitwise_left_shift": 187, "bitwise_or": 187, "bitwise_right_shift": 187, "arithmet": [187, 201, 437, 440], "propag": [187, 201, 437, 439, 440, 441, 443, 444, 445], "thu": [187, 201, 235, 236, 348, 353], "floor": [187, 201, 247, 267, 449], "lh": [187, 201], "rh": [187, 201], "bitwise_xor": 187, "xor": [187, 202, 228], "78": [187, 202, 348, 361, 437, 438], "91": [187, 202, 348, 361, 437, 438], "23": [187, 202, 335, 341, 347, 348, 352, 424, 428], "66": [187, 202, 348, 361, 415, 416, 437, 438], "77": [187, 202, 348, 361, 437, 438], "79": [187, 202], "89": [187, 202, 348, 368, 437, 444], "98": [187, 202, 348, 361, 424, 428, 437, 438], "26": [187, 202, 348, 352, 361, 368, 437, 438], "57": [187, 202, 348, 349], "21": [187, 202, 247, 259, 348, 352, 361, 437, 438], "34": [187, 202, 327, 334], "24": [187, 202, 247, 259, 348, 352, 361, 437, 438], "74": [187, 202], "51": [187, 202], "27": [187, 202, 205, 335, 347, 348, 361, 437, 438], "59": [187, 202], "416": [187, 204], "cosh": [187, 449], "5430806": [187, 205], "7621958": [187, 205], "067662": [187, 205], "308231": [187, 205], "0200667": [187, 205], "8283155": [187, 205], "110": [187, 205], "705475": [187, 205], "6685185": [187, 205], "567909": [187, 205], "57476": [187, 205], "286647": [187, 205], "40": [187, 205, 348, 361, 437, 438], "731575": [187, 205], "122": [187, 205], "34801": [187, 205], "367": [187, 205], "54822": [187, 205], "669": [187, 205], "71564": [187, 205], "201": [187, 205, 237], "548": [187, 205], "317": [187, 205], "1490": [187, 205], "4791": [187, 205], "dividend": [187, 206, 236], "divisor": [187, 206, 236, 311, 313, 314, 318, 437, 443, 445, 486, 487, 488], "erf": 187, "gauss": [187, 208], "exponenti": [187, 208, 209, 224, 235], "exp": [187, 210, 224, 449], "logarithm": [187, 209, 220, 221, 222, 223, 224, 348, 364], "7182817": [187, 209], "389056": [187, 209], "085537": [187, 209], "expm1": 187, "accur": [187, 210], "fdlibm": [187, 210], "compliant": [187, 210, 226, 227, 437, 439, 440, 441], "greatest": [187, 211, 212], "floor_divid": 187, "greater_equ": 187, "isfinit": 187, "out_i": [187, 215, 216, 217], "isinf": 187, "isnan": 187, "less_equ": 187, "log10": 187, "log1p": 187, "log2": 187, "logaddexp": 187, "logical_and": [187, 449], "logical_not": [187, 449], "logical_or": [187, 449], "logical_xor": 187, "threshold": [187, 229, 230], "exce": [187, 230], "y_i": [187, 232], "not_equ": 187, "pow": 187, "expon": [187, 235, 247, 302], "versu": [187, 235], "odd": [187, 235], "remaind": [187, 247, 267, 377, 387], "modulu": [187, 236], "primarili": [187, 236], "5654": [187, 237], "034": [187, 237], "433": [187, 237], "343": [187, 237], "44": [187, 237, 348, 361, 424, 428, 437, 438], "30": [187, 237, 327, 334, 348, 361, 437, 438, 461, 467], "81": [187, 237, 437, 438], "527": [187, 237], "301": [187, 237], "202": [187, 237], "sinh": [187, 449], "sqrt": [187, 348, 371], "squar": [187, 241, 335, 338, 348, 349, 351, 353, 354, 355, 358, 364, 365, 366], "indistinguish": [187, 241], "infinit": [187, 241], "546": [187, 244], "842": [187, 244], "916": [187, 244], "96": [187, 244, 348, 361, 437, 438], "37": [187, 244, 327, 334, 415, 416], "996": [187, 244], "328": [187, 244], "trunc": 187, "decim": [187, 246], "all_equ": 247, "equality_matrix": [247, 248], "arg_info": 247, "inspect": [247, 249, 453, 454], "arg_nam": 247, "array_equ": 247, "arrays_equ": 247, "assert_supports_inplac": 247, "later": [247, 254], "clip_matrix_norm": 247, "max_norm": [247, 255, 256], "downscal": [247, 255, 256], "clip_vector_norm": 247, "container_typ": 247, "copy_arrai": 247, "60": [247, 259, 348, 361, 437, 438], "cumsum": [247, 449], "current_backend_str": 247, "default_v": [247, 262], "catch_except": [247, 262], "rev": [247, 262], "with_cal": [247, 262], "einops_rearrang": 247, "axes_length": [247, 263, 264, 265], "rearrang": [247, 263, 265], "arrang": [247, 263], "einops_reduc": 247, "einops_repeat": 247, "123": [247, 266], "floormod": [247, 449], "mod": [247, 267], "fourier_encod": 247, "max_freq": [247, 268], "num_band": [247, 268], "flatten": [247, 268, 348, 361, 371, 377, 384, 386, 424, 425, 426, 429, 430, 431, 433], "pad": [247, 268, 335, 336, 337, 338, 339, 340, 341, 342, 377, 380, 392, 470, 471, 472, 473, 474, 475, 476, 477], "fourier": [247, 268], "band": [247, 268], "linearli": [247, 268, 348, 365], "oppos": [247, 268], "geometr": [247, 268], "gather": [247, 270], "slice": [247, 269, 270, 397, 406], "gather_nd": [247, 449], "get_all_arrays_in_memori": 247, "get_min_bas": 247, "get_min_denomin": 247, "get_num_dim": [247, 449], "as_arrai": [247, 274, 299], "get_referrers_recurs": 247, "seen_set": [247, 275], "local_set": [247, 275], "has_nan": 247, "include_inf": [247, 276, 310], "indices_wher": [247, 449], "inplace_arrays_support": 247, "inplace_decr": 247, "decrement": [247, 279], "inplace_incr": 247, "inplace_variables_support": 247, "is_arrai": 247, "is_ivy_contain": 247, "match_kwarg": 247, "allow_dupl": [247, 287], "forkserv": [247, 288], "spawn": [247, 288], "num_arrays_in_memori": 247, "hot": [247, 290], "scatter": [247, 290, 293, 294], "overrid": [247, 290], "print_all_arrays_in_memori": 247, "queue_timeout": 247, "scatter_flat": 247, "flat": [247, 293, 377, 384], "set_min_bas": 247, "set_min_denomin": 247, "set_queue_timeout": 247, "set_tmp_dir": 247, "tmp_dr": [247, 298], "temporari": [247, 298], "y_tupl": [247, 299], "y_tensor": [247, 299], "as_tensor": [247, 299], "min_denomin": [247, 301], "stabil": [247, 301, 302, 434, 435, 436], "_min_denomin": [247, 301], "stable_pow": 247, "min_bas": [247, 302], "_min_bas": [247, 302, 415, 416, 484, 485], "supports_inplac": 247, "tmp_dir": 247, "to_list": [247, 449], "to_scalar": 247, "try_else_non": 247, "keepdim": [247, 309, 348, 357, 371, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "unpack": [247, 309], "value_is_nan": 247, "gradienttrack": [311, 312], "with_grad": [311, 321], "adam_step": 311, "dcdw": [311, 313, 314, 316, 318, 319], "delta": [311, 313], "cost": [311, 313, 314, 316, 318, 319, 320, 393, 394, 395, 396], "ws": [311, 313, 314, 316, 318, 319, 320], "en": [311, 313, 314], "wikipedia": [311, 313, 314], "wiki": [311, 313, 314], "stochastic_gradient_desc": [311, 313, 314], "dc": [311, 313, 314, 316, 318, 319, 320], "dw": [311, 313, 314, 316, 318, 319, 320], "averag": [311, 313, 314, 318, 393, 394, 395], "forget": [311, 313, 314, 318, 486, 487, 488], "mw_tm1": [311, 314, 318], "vw_tm1": [311, 314, 318], "rate": [311, 314, 316, 318, 319, 320, 393, 394, 395, 396, 470, 481, 486, 487, 488, 489, 490, 491], "ws_new": [311, 314, 316, 318, 319, 320], "retain": [311, 315], "gradient_descent_upd": [311, 393, 394, 395, 396, 449], "lamb_upd": 311, "max_trust_ratio": [311, 318, 486, 488], "decay_lambda": [311, 318, 319, 486, 488, 489], "trust": [311, 318, 486, 488], "decai": [311, 318, 319, 486, 488, 489], "lars_upd": 311, "layerwis": [311, 319, 486, 489], "optimizer_upd": 311, "effective_grad": [311, 320], "set_with_grad": 311, "preserve_typ": [311, 322], "unset_with_grad": 311, "variable_data": 311, "bilinear_resampl": [327, 449], "bilinearli": [327, 328], "num_sampl": [327, 328, 331, 417, 418], "bilinear": [327, 328], "float_img_to_uint8_img": 327, "gradient_imag": [327, 449], "linear_resampl": 327, "interpol": [327, 331], "resampl": [327, 331], "random_crop": 327, "crop_siz": [327, 332], "image_dim": [327, 332], "seed": [327, 332, 417, 449], "randomli": [327, 332, 335, 343, 470, 478], "crop": [327, 332], "2d": [327, 332, 348, 364, 470, 473, 474, 477], "nh": [327, 332], "nw": [327, 332], "stack_imag": [327, 449], "desired_aspect_ratio": [327, 333], "width": [327, 333], "uint8_img_to_float_img": 327, "820471434542632e": [327, 334], "0082513512365273e": [327, 334], "658462758989161e": [327, 334], "003653270560797e": [327, 334], "conv1d": [335, 470], "stride": [335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "data_format": [335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "nwc": [335, 336, 337, 470, 471, 472], "dilat": [335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "convolut": [335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "d_in": [335, 336, 337, 338, 339, 340, 341], "fw": [335, 336, 337, 338, 339, 340, 341, 342], "d_out": [335, 336, 337, 338, 339, 340, 341], "slide": [335, 336, 337, 338, 339, 340, 341, 342, 470, 471, 472, 473, 474, 475, 476, 477], "ncw": [335, 336, 337, 470, 471, 472], "wio": [335, 336], "conv1d_transpos": 335, "output_shap": [335, 337, 339, 341, 470, 472, 474, 476], "conv2d": [335, 449, 470], "nhwc": [335, 338, 339, 342, 470, 473, 474, 477], "fh": [335, 338, 339, 340, 341, 342], "nchw": [335, 338, 339, 342, 470, 473, 474, 477], "hwio": [335, 338], "random_norm": [335, 338, 341, 342, 348, 366, 417, 429, 430], "unequ": [335, 338], "28": [335, 338, 341, 342, 348, 361, 437, 438], "unsqueez": [335, 338, 342], "conv2d_transpos": 335, "conv3d": [335, 470], "ndhwc": [335, 340, 341, 470, 475, 476], "volum": [335, 340], "fd": [335, 340, 341], "ncdhw": [335, 340, 341, 470, 475, 476], "dhwio": [335, 340], "conv3d_transpos": 335, "256": [335, 341], "258": [335, 341], "128": [335, 341, 348, 361], "depthwise_conv2d": [335, 449], "depthwis": [335, 342, 470, 477], "333": [335, 342], "inp": [335, 342], "prob": [335, 343, 417, 418, 470, 478], "bernoulli": [335, 343], "out_featur": [335, 343, 344], "incom": [335, 344], "outer_batch_shap": [335, 344], "inner_batch_shap": [335, 344], "in_featur": [335, 344], "cell": [335, 345, 470, 479], "num_queri": [335, 346, 347], "x_feat_dim": [335, 346], "num_kei": [335, 346, 347], "cont_feat_dim": [335, 346], "numhead": [335, 346], "feat_dim": [335, 346, 347], "out_feat_dim": [335, 346], "scaled_dot_product_attent": 335, "score": [335, 347], "04": [335, 347], "03": [335, 347, 415, 416], "35": [335, 347, 348, 350, 424, 428, 437, 438], "09": [335, 347], "08": [335, 347], "choleski": 348, "decomposit": [348, 349, 363, 366], "symmetr": [348, 349, 353, 354, 372], "u": [348, 349, 366], "73": [348, 349, 415, 416], "63": [348, 349, 361, 437, 438], "cross": [348, 373, 374, 375, 376, 449], "vif": [348, 350], "det": 348, "92": [348, 351], "293": [348, 351], "47": [348, 351], "offset": [348, 352, 369, 415, 416], "axis1": [348, 352, 377, 390], "axis2": [348, 352], "eigh": 348, "eigendecomposit": [348, 353], "qlq\u1d40": [348, 353], "orthogon": [348, 353], "eig": [348, 353], "namedtupl": [348, 353, 363, 366, 429, 430, 431], "eigenvalu": [348, 353, 354], "eigenvector": [348, 353], "eigvalsh": 348, "75": [348, 355, 361], "prepend": [348, 356], "matrix_norm": 348, "ord": [348, 357, 371], "fro": [348, 357], "matrix_pow": 348, "matrix_rank": 348, "rtol": [348, 359, 362], "singular": [348, 359, 362, 366, 367], "toler": [348, 359, 362], "largest_singular_valu": [348, 359, 362], "outer": [348, 393, 394, 395, 396], "array_lik": [348, 361], "33": [348, 361, 415, 416, 437, 438], "36": [348, 361, 437, 438], "45": [348, 361, 377, 387, 415, 416, 437, 438], "52": [348, 361, 437, 438], "50": [348, 361, 424, 427, 437, 438], "65": [348, 361, 437, 438], "72": [348, 361, 437, 438], "84": [348, 361, 437, 438], "105": [348, 361], "112": [348, 361, 437, 438], "104": [348, 361, 437, 438], "120": [348, 361], "pinv": [348, 449], "moor": [348, 362], "penros": [348, 362], "pseudo": [348, 362], "qr": 348, "orthonorm": [348, 363, 366], "slogdet": 348, "logdet": [348, 364], "equat": [348, 365, 437, 438], "coeffici": [348, 365], "svd": [348, 449], "full_matric": [348, 366], "usvh": [348, 366], "vh": [348, 366], "hermitian": [348, 366], "descend": [348, 366, 367, 434, 435, 436], "et": [348, 366], "cetera": [348, 366], "adjoint": [348, 366], "reconstruct": [348, 366, 429, 430, 432], "reconstructed_x": [348, 366], "svdval": 348, "tensordot": 348, "contract": [348, 368, 437, 438], "doubl": [348, 368], "76": [348, 368, 437, 438], "vecdot": 348, "vector_norm": 348, "singleton": [348, 371, 377, 388, 424, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "liter": [348, 371], "manhattan": [348, 371], "l2": [348, 371], "euclidean": [348, 371], "vector_to_skew_symmetric_matrix": [348, 449], "mathbf": [348, 372], "mathbb": [348, 372], "skew": [348, 372], "binary_cross_entropi": 373, "entropi": [373, 374, 375, 376], "predict": [373, 374, 375, 376], "smooth": [373, 374, 375, 376], "2231": [373, 374], "3567": [373, 374], "6094": [373, 374], "9163": [373, 374], "2040": [373, 374], "5108": [373, 374], "1054": [373, 374], "discret": [373, 375], "3862944": [373, 375], "35667497": [373, 375, 376], "sparse_cross_entropi": 373, "spars": [373, 376], "logit": [373, 376], "3025851": [373, 376], "357": [373, 376], "join": [377, 379, 389, 449], "constant_pad": 377, "pad_width": [377, 380, 392], "before_1": [377, 380, 392], "after_1": [377, 380, 392], "before_n": [377, 380, 392], "after_n": [377, 380, 392], "insert": [377, 381, 397, 402, 424, 425], "manipulation_funct": [377, 381], "reorder": [377, 382], "permute_dim": 377, "permut": [377, 383, 390], "repetit": [377, 384, 391], "restor": [377, 386], "with_remaind": [377, 387], "squeez": [377, 449], "famili": [377, 389], "intxx": [377, 389], "floatxx": [377, 389], "swapax": 377, "axis0": [377, 390], "tile": [377, 449], "rep": [377, 391], "zero_pad": [377, 449], "fomaml_step": 393, "inner_cost_fn": [393, 394, 395], "outer_cost_fn": [393, 394, 395], "inner_grad_step": [393, 394, 395, 396], "inner_learning_r": [393, 394, 395, 396], "inner_optimization_step": [393, 394, 395, 396], "inner_batch_fn": [393, 394, 395], "outer_batch_fn": [393, 394, 395], "average_across_step": [393, 394, 395], "inner_v": [393, 394, 395], "keep_inner_v": [393, 394, 395], "outer_v": [393, 394, 395], "keep_outer_v": [393, 394, 395], "return_inner_v": [393, 394, 395, 396], "num_task": [393, 394, 395, 396], "maml": [393, 394, 395], "recev": [393, 394, 395], "maml_step": 393, "rece": [393, 395], "reptile_step": 393, "cost_fn": [393, 396], "reptil": [393, 396], "receivng": [393, 396], "all_nested_indic": 397, "include_nest": [397, 398], "_index": [397, 398, 408], "_base": [397, 398, 407, 408], "copy_nest": 397, "include_deriv": [397, 399, 409], "to_mut": [397, 399, 409], "mutabl": [397, 399, 409], "insert_into_nest_at_index": 397, "insert_into_nest_at_indic": 397, "map_nest_at_index": 397, "map_nest_at_indic": 397, "multi_index_nest": 397, "nested_ani": 397, "check_nest": [397, 407, 408], "conditon": [397, 407, 408], "nested_indices_wher": 397, "to_ignor": [397, 408], "stop_after_n_found": [397, 408], "_depth": [397, 409], "_tuple_check_fn": [397, 409], "_list_check_fn": [397, 409], "_dict_check_fn": [397, 409], "nested_multi_map": 397, "key_chain": [397, 410], "to_appli": [397, 410], "prune_unappli": [397, 410], "prune": [397, 410, 411, 412], "leftmost": [397, 410], "nest0": [397, 410], "ivy_arrai": [397, 410], "funciton": [397, 410], "prune_nest_at_index": 397, "prune_nest_at_indic": 397, "set_nest_at_index": 397, "set_nest_at_indic": 397, "layer_norm": 415, "normalized_idx": [415, 416], "new_std": [415, 416, 484, 485], "mini": [415, 416, 484, 485], "gamma": [415, 416], "beta": [415, 416], "0976": [415, 416], "3452": [415, 416], "2740": [415, 416], "1047": [415, 416], "5886": [415, 416], "2732": [415, 416], "7696": [415, 416], "7024": [415, 416], "2518": [415, 416], "58": [415, 416], "283": [415, 416], "585": [415, 416], "909": [415, 416], "628": [415, 416], "997": [415, 416], "0707": [415, 416], "109": [415, 416], "877": [415, 416], "norm_idx": [415, 416], "228": [415, 416], "0285": [415, 416], "199": [415, 416], "204": [415, 416], "335": [415, 416, 429, 430], "multinomi": 417, "population_s": [417, 418], "draw": [417, 418, 420, 421], "unnorm": [417, 418], "drawn": [417, 418, 419, 420, 421], "home": [417, 418, 420, 421], "randint": [417, 449], "uniformli": [417, 419, 421], "highest": [417, 419], "parameter": [417, 420, 421], "6444774682897879": [417, 420], "boundari": [417, 421], "26431865": [417, 421], "475": [417, 421], "878": [417, 421], "861": [417, 421], "89150229": [417, 421], "89629126": [417, 421], "94198485": [417, 421], "91405606": [417, 421], "72848724": [417, 421], "7550739": [417, 421], "624": [417, 421], "00109": [417, 421], "seed_valu": [417, 422], "shuffl": [417, 449], "argmax": [424, 449], "occurr": [424, 425, 426, 429, 430], "argmin": [424, 449], "yield": [424, 428], "43": [424, 428], "unique_al": 429, "x_j": [429, 430, 431, 433], "impli": [429, 430, 431, 433], "inverse_indic": [429, 430, 432], "aggreg": [429, 430], "fourth": [429, 430], "1141": [429, 430], "8101": [429, 430], "2119": [429, 430], "3519": [429, 430], "40501155": [429, 430], "77361575": [429, 430], "97776199": [429, 430], "36831157": [429, 430], "89148434": [429, 430], "9512272": [429, 430], "67542176": [429, 430], "41985657": [429, 430], "23478023": [429, 430], "9298": [429, 430], "8460": [429, 430], "6252": [429, 430], "4033": [429, 430], "7443": [429, 430], "2577": [429, 430], "3707": [429, 430], "0545": [429, 430], "3238": [429, 430], "5944": [429, 430], "0775": [429, 430], "4327": [429, 430], "176": [429, 430], "889": [429, 430], "175": [429, 430], "763": [429, 430], "071": [429, 430], "262": [429, 430], "456": [429, 430], "114": [429, 430], "349": [429, 430], "615": [429, 430], "594": [429, 430], "212": [429, 430], "457": [429, 430], "827": [429, 430], "209": [429, 430], "unique_count": 429, "unique_invers": 429, "unique_valu": 429, "argsort": 434, "ascend": [434, 435], "einsum": 437, "einstein": [437, 438], "summat": [437, 438], "seq": [437, 438], "jk": [437, 438], "ik": [437, 438], "126": [437, 438], "510": [437, 438], "99": [437, 438], "108": [437, 438], "117": [437, 438], "sentinel": [437, 439, 441], "unsign": [437, 442, 444], "degre": [437, 443, 445], "bessel": [437, 443, 445], "8164966": [437, 443], "varianc": [437, 445], "unbias": [437, 445], "autom": 449, "grow": 449, "ai": 449, "got": 449, "colab": 449, "sharp": 449, "weekli": 449, "event": 449, "immedi": 449, "favorit": 449, "jax_concat": 449, "tf_concat": 449, "np_concat": 449, "mx_concat": 449, "torch_concat": 449, "prompt": 449, "get_devic": 449, "reduce_prod": 449, "linalg": 449, "neural_net": 449, "ecosystem": [449, 455], "popular": [449, 455], "acceler": 449, "articl": 449, "lenton2021ivi": 449, "inter": 449, "author": 449, "lenton": 449, "daniel": 449, "pardo": 449, "fabio": 449, "falck": 449, "fabian": 449, "jame": 449, "stephen": 449, "clark": 449, "ronald": 449, "journal": 449, "arxiv": 449, "preprint": 449, "2102": 449, "02886": 449, "2021": 449, "add_array_spec": 452, "fn_array_spec": 452, "geglu": 456, "native_modul": [459, 460], "native_module_class": [459, 460], "firstlayersiren": 461, "kaimingnorm": [461, 465], "negative_slop": 461, "Ones": 461, "siren": 461, "w0": [461, 467], "filter_s": [470, 471, 472], "1d": [470, 471, 472], "conv1dtranspos": 470, "filter_shap": [470, 473, 474, 475, 476, 477], "conv2dtranspos": 470, "conv3dtranspos": 470, "depthwiseconv2d": 470, "num_channel": [470, 477], "bernoul": [470, 478], "num_lay": [470, 479], "return_sequ": [470, 479], "return_st": [470, 479], "get_initial_st": [470, 479], "dens": [470, 480], "multiheadattent": 470, "query_dim": [470, 481], "head_dim": [470, 481], "dropout_r": [470, 481], "context_dim": [470, 481], "with_to_q_fn": [470, 481], "with_to_kv_fn": [470, 481], "with_to_out_fn": [470, 481], "build_mod": [470, 481, 482, 483], "on_init": [470, 481, 482, 483], "__call__": [470, 481, 482, 483], "store_var": [482, 483], "arg_stateful_idx": [482, 483], "kwarg_stateful_idx": [482, 483], "fallback_to_non_compil": [482, 483, 486, 490], "with_partial_v": [482, 483], "initialz": [482, 483], "from_cal": [482, 483], "check_submod_ret": [482, 483], "get_mod_kei": [482, 483], "top_mod": [482, 483], "mod_depth": [482, 483], "mod_height": [482, 483], "mod_with_top_mod_key_chain": [482, 483], "save_weight": [482, 483], "weights_path": [482, 483], "show_mod_in_top_mod": [482, 483], "upper_depth": [482, 483], "lower_depth": [482, 483], "show_structur": [482, 483], "show_v_in_top_v": [482, 483], "sub_mod": [482, 483], "show_v": [482, 483], "track_submod_call_ord": [482, 483], "track_submod_ret": [482, 483], "v_with_top_v_key_chain": [482, 483], "layernorm": 484, "normalized_shap": [484, 485], "elementwise_affin": [484, 485], "trail": [484, 485], "affin": [484, 485], "0001": [486, 487, 488], "init_on_first_step": [486, 490], "ignore_miss": [486, 490], "overriden": [486, 490], "sgd": 486, "stochast": [486, 491], "sub_modul": [492, 493], "color": [495, 496]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [452, 0, 0, "-", "inspection"], [495, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "numpy"], [70, 0, 0, "-", "torch"]], "ivy.functional.frontends.numpy": [[67, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.numpy.mathematical_functions": [[68, 3, 1, "", "add"], [69, 3, 1, "", "tan"]], "ivy.functional.frontends.torch": [[71, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[72, 3, 1, "", "add"], [73, 3, 1, "", "tan"]], "ivy.functional.ivy": [[75, 0, 0, "-", "activations"], [83, 0, 0, "-", "compilation"], [85, 0, 0, "-", "constants"], [86, 0, 0, "-", "creation"], [105, 0, 0, "-", "data_type"], [137, 0, 0, "-", "device"], [187, 0, 0, "-", "elementwise"], [247, 0, 0, "-", "general"], [311, 0, 0, "-", "gradients"], [327, 0, 0, "-", "image"], [335, 0, 0, "-", "layers"], [348, 0, 0, "-", "linear_algebra"], [373, 0, 0, "-", "losses"], [377, 0, 0, "-", "manipulation"], [393, 0, 0, "-", "meta"], [397, 0, 0, "-", "nest"], [415, 0, 0, "-", "norms"], [417, 0, 0, "-", "random"], [424, 0, 0, "-", "searching"], [429, 0, 0, "-", "set"], [434, 0, 0, "-", "sorting"], [437, 0, 0, "-", "statistical"], [446, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[76, 3, 1, "", "gelu"], [77, 3, 1, "", "leaky_relu"], [78, 3, 1, "", "relu"], [79, 3, 1, "", "sigmoid"], [80, 3, 1, "", "softmax"], [81, 3, 1, "", "softplus"], [82, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[84, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[85, 4, 1, "", "e"], [85, 4, 1, "", "inf"], [85, 4, 1, "", "nan"], [85, 4, 1, "", "newaxis"], [85, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[87, 3, 1, "", "arange"], [86, 3, 1, "", "array"], [88, 3, 1, "", "asarray"], [89, 3, 1, "", "empty"], [90, 3, 1, "", "empty_like"], [91, 3, 1, "", "eye"], [92, 3, 1, "", "from_dlpack"], [93, 3, 1, "", "full"], [94, 3, 1, "", "full_like"], [95, 3, 1, "", "linspace"], [96, 3, 1, "", "logspace"], [97, 3, 1, "", "meshgrid"], [98, 3, 1, "", "native_array"], [99, 3, 1, "", "ones"], [100, 3, 1, "", "ones_like"], [101, 3, 1, "", "tril"], [102, 3, 1, "", "triu"], [103, 3, 1, "", "zeros"], [104, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[105, 1, 1, "", "DefaultDtype"], [105, 1, 1, "", "DefaultFloatDtype"], [105, 1, 1, "", "DefaultIntDtype"], [109, 3, 1, "", "as_ivy_dtype"], [110, 3, 1, "", "as_native_dtype"], [111, 3, 1, "", "astype"], [112, 3, 1, "", "broadcast_arrays"], [113, 3, 1, "", "broadcast_to"], [114, 3, 1, "", "can_cast"], [115, 3, 1, "", "closest_valid_dtype"], [116, 3, 1, "", "default_dtype"], [117, 3, 1, "", "default_float_dtype"], [118, 3, 1, "", "default_int_dtype"], [119, 3, 1, "", "dtype"], [120, 3, 1, "", "dtype_bits"], [121, 3, 1, "", "finfo"], [122, 3, 1, "", "function_unsupported_dtypes"], [123, 3, 1, "", "iinfo"], [124, 3, 1, "", "invalid_dtype"], [125, 3, 1, "", "is_float_dtype"], [126, 3, 1, "", "is_int_dtype"], [127, 3, 1, "", "promote_types"], [128, 3, 1, "", "result_type"], [129, 3, 1, "", "set_default_dtype"], [130, 3, 1, "", "set_default_float_dtype"], [131, 3, 1, "", "set_default_int_dtype"], [132, 3, 1, "", "type_promote_arrays"], [133, 3, 1, "", "unset_default_dtype"], [134, 3, 1, "", "unset_default_float_dtype"], [135, 3, 1, "", "unset_default_int_dtype"], [136, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[105, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[105, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[105, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[137, 1, 1, "", "DefaultDevice"], [139, 1, 1, "", "DevClonedItem"], [140, 1, 1, "", "DevClonedIter"], [141, 1, 1, "", "DevClonedNest"], [142, 1, 1, "", "DevDistItem"], [143, 1, 1, "", "DevDistIter"], [144, 1, 1, "", "DevDistNest"], [137, 1, 1, "", "DevManager"], [146, 1, 1, "", "DevMapper"], [147, 1, 1, "", "DevMapperMultiProc"], [137, 1, 1, "", "MultiDev"], [149, 1, 1, "", "MultiDevItem"], [150, 1, 1, "", "MultiDevIter"], [151, 1, 1, "", "MultiDevNest"], [152, 1, 1, "", "Profiler"], [153, 3, 1, "", "as_ivy_dev"], [154, 3, 1, "", "as_native_dev"], [155, 3, 1, "", "clear_mem_on_dev"], [156, 3, 1, "", "default_device"], [157, 3, 1, "", "dev"], [158, 3, 1, "", "dev_clone"], [159, 3, 1, "", "dev_clone_array"], [160, 3, 1, "", "dev_clone_iter"], [161, 3, 1, "", "dev_clone_nest"], [162, 3, 1, "", "dev_dist"], [163, 3, 1, "", "dev_dist_array"], [164, 3, 1, "", "dev_dist_iter"], [165, 3, 1, "", "dev_dist_nest"], [166, 3, 1, "", "dev_unify"], [167, 3, 1, "", "dev_unify_array"], [168, 3, 1, "", "dev_unify_iter"], [169, 3, 1, "", "dev_unify_nest"], [170, 3, 1, "", "dev_util"], [171, 3, 1, "", "get_all_ivy_arrays_on_dev"], [172, 3, 1, "", "gpu_is_available"], [173, 3, 1, "", "num_cpu_cores"], [174, 3, 1, "", "num_gpus"], [175, 3, 1, "", "num_ivy_arrays_on_dev"], [176, 3, 1, "", "percent_used_mem_on_dev"], [177, 3, 1, "", "print_all_ivy_arrays_on_dev"], [178, 3, 1, "", "set_default_device"], [179, 3, 1, "", "set_split_factor"], [180, 3, 1, "", "split_factor"], [181, 3, 1, "", "split_func_call"], [182, 3, 1, "", "to_device"], [183, 3, 1, "", "total_mem_on_dev"], [184, 3, 1, "", "tpu_is_available"], [185, 3, 1, "", "unset_default_device"], [186, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[137, 2, 1, "", "__enter__"], [137, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "da_tune_step"], [137, 5, 1, "", "dim_size"], [137, 2, 1, "", "ds_tune_step"], [137, 2, 1, "", "map"], [137, 2, 1, "", "repeated_config_check"], [137, 5, 1, "", "tune_step"], [137, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[147, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[137, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "items"], [149, 2, 1, "", "keys"], [149, 5, 1, "", "shape"], [149, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "at_dev"], [150, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "start"], [152, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[188, 3, 1, "", "abs"], [189, 3, 1, "", "acos"], [190, 3, 1, "", "acosh"], [191, 3, 1, "", "add"], [192, 3, 1, "", "asin"], [193, 3, 1, "", "asinh"], [194, 3, 1, "", "atan"], [195, 3, 1, "", "atan2"], [196, 3, 1, "", "atanh"], [197, 3, 1, "", "bitwise_and"], [198, 3, 1, "", "bitwise_invert"], [199, 3, 1, "", "bitwise_left_shift"], [200, 3, 1, "", "bitwise_or"], [201, 3, 1, "", "bitwise_right_shift"], [202, 3, 1, "", "bitwise_xor"], [203, 3, 1, "", "ceil"], [204, 3, 1, "", "cos"], [205, 3, 1, "", "cosh"], [206, 3, 1, "", "divide"], [207, 3, 1, "", "equal"], [208, 3, 1, "", "erf"], [209, 3, 1, "", "exp"], [210, 3, 1, "", "expm1"], [211, 3, 1, "", "floor"], [212, 3, 1, "", "floor_divide"], [213, 3, 1, "", "greater"], [214, 3, 1, "", "greater_equal"], [215, 3, 1, "", "isfinite"], [216, 3, 1, "", "isinf"], [217, 3, 1, "", "isnan"], [218, 3, 1, "", "less"], [219, 3, 1, "", "less_equal"], [220, 3, 1, "", "log"], [221, 3, 1, "", "log10"], [222, 3, 1, "", "log1p"], [223, 3, 1, "", "log2"], [224, 3, 1, "", "logaddexp"], [225, 3, 1, "", "logical_and"], [226, 3, 1, "", "logical_not"], [227, 3, 1, "", "logical_or"], [228, 3, 1, "", "logical_xor"], [229, 3, 1, "", "maximum"], [230, 3, 1, "", "minimum"], [231, 3, 1, "", "multiply"], [232, 3, 1, "", "negative"], [233, 3, 1, "", "not_equal"], [234, 3, 1, "", "positive"], [235, 3, 1, "", "pow"], [236, 3, 1, "", "remainder"], [237, 3, 1, "", "round"], [238, 3, 1, "", "sign"], [239, 3, 1, "", "sin"], [240, 3, 1, "", "sinh"], [241, 3, 1, "", "sqrt"], [242, 3, 1, "", "square"], [243, 3, 1, "", "subtract"], [244, 3, 1, "", "tan"], [245, 3, 1, "", "tanh"], [246, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[248, 3, 1, "", "all_equal"], [249, 3, 1, "", "arg_info"], [250, 3, 1, "", "arg_names"], [251, 3, 1, "", "array_equal"], [252, 3, 1, "", "arrays_equal"], [253, 3, 1, "", "assert_supports_inplace"], [254, 3, 1, "", "cache_fn"], [255, 3, 1, "", "clip_matrix_norm"], [256, 3, 1, "", "clip_vector_norm"], [257, 3, 1, "", "container_types"], [258, 3, 1, "", "copy_array"], [259, 3, 1, "", "cumprod"], [260, 3, 1, "", "cumsum"], [261, 3, 1, "", "current_backend_str"], [262, 3, 1, "", "default"], [263, 3, 1, "", "einops_rearrange"], [264, 3, 1, "", "einops_reduce"], [265, 3, 1, "", "einops_repeat"], [266, 3, 1, "", "exists"], [267, 3, 1, "", "floormod"], [268, 3, 1, "", "fourier_encode"], [269, 3, 1, "", "gather"], [270, 3, 1, "", "gather_nd"], [271, 3, 1, "", "get_all_arrays_in_memory"], [272, 3, 1, "", "get_min_base"], [273, 3, 1, "", "get_min_denominator"], [274, 3, 1, "", "get_num_dims"], [275, 3, 1, "", "get_referrers_recursive"], [276, 3, 1, "", "has_nans"], [277, 3, 1, "", "indices_where"], [278, 3, 1, "", "inplace_arrays_supported"], [279, 3, 1, "", "inplace_decrement"], [280, 3, 1, "", "inplace_increment"], [281, 3, 1, "", "inplace_update"], [282, 3, 1, "", "inplace_variables_supported"], [283, 3, 1, "", "is_array"], [284, 3, 1, "", "is_ivy_array"], [285, 3, 1, "", "is_ivy_container"], [286, 3, 1, "", "is_native_array"], [287, 3, 1, "", "match_kwargs"], [288, 3, 1, "", "multiprocessing"], [289, 3, 1, "", "num_arrays_in_memory"], [290, 3, 1, "", "one_hot"], [291, 3, 1, "", "print_all_arrays_in_memory"], [292, 3, 1, "", "queue_timeout"], [293, 3, 1, "", "scatter_flat"], [294, 3, 1, "", "scatter_nd"], [295, 3, 1, "", "set_min_base"], [296, 3, 1, "", "set_min_denominator"], [297, 3, 1, "", "set_queue_timeout"], [298, 3, 1, "", "set_tmp_dir"], [299, 3, 1, "", "shape"], [300, 3, 1, "", "shape_to_tuple"], [301, 3, 1, "", "stable_divide"], [302, 3, 1, "", "stable_pow"], [303, 3, 1, "", "supports_inplace"], [304, 3, 1, "", "tmp_dir"], [305, 3, 1, "", "to_list"], [306, 3, 1, "", "to_numpy"], [307, 3, 1, "", "to_scalar"], [308, 3, 1, "", "try_else_none"], [309, 3, 1, "", "unstack"], [310, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[311, 1, 1, "", "GradientTracking"], [313, 3, 1, "", "adam_step"], [314, 3, 1, "", "adam_update"], [315, 3, 1, "", "execute_with_gradients"], [316, 3, 1, "", "gradient_descent_update"], [317, 3, 1, "", "is_variable"], [318, 3, 1, "", "lamb_update"], [319, 3, 1, "", "lars_update"], [320, 3, 1, "", "optimizer_update"], [321, 3, 1, "", "set_with_grads"], [322, 3, 1, "", "stop_gradient"], [323, 3, 1, "", "unset_with_grads"], [324, 3, 1, "", "variable"], [325, 3, 1, "", "variable_data"], [326, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[311, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[328, 3, 1, "", "bilinear_resample"], [329, 3, 1, "", "float_img_to_uint8_img"], [330, 3, 1, "", "gradient_image"], [331, 3, 1, "", "linear_resample"], [332, 3, 1, "", "random_crop"], [333, 3, 1, "", "stack_images"], [334, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[336, 3, 1, "", "conv1d"], [337, 3, 1, "", "conv1d_transpose"], [338, 3, 1, "", "conv2d"], [339, 3, 1, "", "conv2d_transpose"], [340, 3, 1, "", "conv3d"], [341, 3, 1, "", "conv3d_transpose"], [342, 3, 1, "", "depthwise_conv2d"], [343, 3, 1, "", "dropout"], [344, 3, 1, "", "linear"], [345, 3, 1, "", "lstm_update"], [346, 3, 1, "", "multi_head_attention"], [347, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[349, 3, 1, "", "cholesky"], [350, 3, 1, "", "cross"], [351, 3, 1, "", "det"], [352, 3, 1, "", "diagonal"], [353, 3, 1, "", "eigh"], [354, 3, 1, "", "eigvalsh"], [355, 3, 1, "", "inv"], [356, 3, 1, "", "matmul"], [357, 3, 1, "", "matrix_norm"], [358, 3, 1, "", "matrix_power"], [359, 3, 1, "", "matrix_rank"], [360, 3, 1, "", "matrix_transpose"], [361, 3, 1, "", "outer"], [362, 3, 1, "", "pinv"], [363, 3, 1, "", "qr"], [364, 3, 1, "", "slogdet"], [365, 3, 1, "", "solve"], [366, 3, 1, "", "svd"], [367, 3, 1, "", "svdvals"], [368, 3, 1, "", "tensordot"], [369, 3, 1, "", "trace"], [370, 3, 1, "", "vecdot"], [371, 3, 1, "", "vector_norm"], [372, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[374, 3, 1, "", "binary_cross_entropy"], [375, 3, 1, "", "cross_entropy"], [376, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[378, 3, 1, "", "clip"], [379, 3, 1, "", "concat"], [380, 3, 1, "", "constant_pad"], [381, 3, 1, "", "expand_dims"], [382, 3, 1, "", "flip"], [383, 3, 1, "", "permute_dims"], [384, 3, 1, "", "repeat"], [385, 3, 1, "", "reshape"], [386, 3, 1, "", "roll"], [387, 3, 1, "", "split"], [388, 3, 1, "", "squeeze"], [389, 3, 1, "", "stack"], [390, 3, 1, "", "swapaxes"], [391, 3, 1, "", "tile"], [392, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[394, 3, 1, "", "fomaml_step"], [395, 3, 1, "", "maml_step"], [396, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[398, 3, 1, "", "all_nested_indices"], [399, 3, 1, "", "copy_nest"], [400, 3, 1, "", "index_nest"], [401, 3, 1, "", "insert_into_nest_at_index"], [402, 3, 1, "", "insert_into_nest_at_indices"], [403, 3, 1, "", "map"], [404, 3, 1, "", "map_nest_at_index"], [405, 3, 1, "", "map_nest_at_indices"], [406, 3, 1, "", "multi_index_nest"], [407, 3, 1, "", "nested_any"], [408, 3, 1, "", "nested_indices_where"], [409, 3, 1, "", "nested_map"], [410, 3, 1, "", "nested_multi_map"], [411, 3, 1, "", "prune_nest_at_index"], [412, 3, 1, "", "prune_nest_at_indices"], [413, 3, 1, "", "set_nest_at_index"], [414, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[416, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[418, 3, 1, "", "multinomial"], [419, 3, 1, "", "randint"], [420, 3, 1, "", "random_normal"], [421, 3, 1, "", "random_uniform"], [422, 3, 1, "", "seed"], [423, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[425, 3, 1, "", "argmax"], [426, 3, 1, "", "argmin"], [427, 3, 1, "", "nonzero"], [428, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[430, 3, 1, "", "unique_all"], [431, 3, 1, "", "unique_counts"], [432, 3, 1, "", "unique_inverse"], [433, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[435, 3, 1, "", "argsort"], [436, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[438, 3, 1, "", "einsum"], [439, 3, 1, "", "max"], [440, 3, 1, "", "mean"], [441, 3, 1, "", "min"], [442, 3, 1, "", "prod"], [443, 3, 1, "", "std"], [444, 3, 1, "", "sum"], [445, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[447, 3, 1, "", "all"], [448, 3, 1, "", "any"]], "ivy.inspection": [[453, 3, 1, "", "add_array_specs"], [454, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[456, 0, 0, "-", "activations"], [459, 0, 0, "-", "converters"], [461, 0, 0, "-", "initializers"], [470, 0, 0, "-", "layers"], [482, 0, 0, "-", "module"], [484, 0, 0, "-", "norms"], [486, 0, 0, "-", "optimizers"], [492, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[457, 1, 1, "", "GEGLU"], [458, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[457, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[458, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[460, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[461, 1, 1, "", "Constant"], [463, 1, 1, "", "FirstLayerSiren"], [464, 1, 1, "", "GlorotUniform"], [461, 1, 1, "", "KaimingNormal"], [466, 1, 1, "", "Ones"], [467, 1, 1, "", "Siren"], [461, 1, 1, "", "Uniform"], [469, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[463, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[464, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[466, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[467, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[471, 1, 1, "", "Conv1D"], [472, 1, 1, "", "Conv1DTranspose"], [473, 1, 1, "", "Conv2D"], [474, 1, 1, "", "Conv2DTranspose"], [475, 1, 1, "", "Conv3D"], [476, 1, 1, "", "Conv3DTranspose"], [477, 1, 1, "", "DepthwiseConv2D"], [478, 1, 1, "", "Dropout"], [479, 1, 1, "", "LSTM"], [480, 1, 1, "", "Linear"], [481, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[474, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[475, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[476, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[477, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[478, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[479, 2, 1, "", "__init__"], [479, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[480, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[481, 2, 1, "", "__init__"]], "ivy.stateful.module": [[483, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[483, 2, 1, "", "__init__"], [483, 2, 1, "", "build"], [483, 5, 1, "", "build_mode"], [483, 5, 1, "", "built"], [483, 2, 1, "", "check_submod_rets"], [483, 2, 1, "", "get_mod_key"], [483, 2, 1, "", "mod_depth"], [483, 2, 1, "", "mod_height"], [483, 2, 1, "", "mod_with_top_mod_key_chain"], [483, 2, 1, "", "save_weights"], [483, 2, 1, "", "show_mod_in_top_mod"], [483, 2, 1, "", "show_structure"], [483, 2, 1, "", "show_v_in_top_v"], [483, 2, 1, "", "sub_mods"], [483, 2, 1, "", "track_submod_call_order"], [483, 2, 1, "", "track_submod_rets"], [483, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[485, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[485, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[487, 1, 1, "", "Adam"], [488, 1, 1, "", "LAMB"], [489, 1, 1, "", "LARS"], [490, 1, 1, "", "Optimizer"], [491, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[487, 2, 1, "", "__init__"], [487, 2, 1, "", "set_state"], [487, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[488, 2, 1, "", "__init__"], [488, 2, 1, "", "set_state"], [488, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[489, 2, 1, "", "__init__"], [489, 2, 1, "", "set_state"], [489, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[490, 2, 1, "", "__init__"], [490, 2, 1, "", "set_state"], [490, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[491, 2, 1, "", "__init__"], [491, 2, 1, "", "set_state"], [491, 5, 1, "", "state"]], "ivy.stateful.sequential": [[493, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[493, 2, 1, "", "__init__"]], "ivy.verbosity": [[496, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 449], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 449], "set": [18, 29, 429], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55, 67], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 449], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 69, 73, 244], "roll": [25, 386], "add": [25, 68, 72, 191], "hypothesi": 27, "data": [27, 33, 41, 55, 105, 429, 430, 431, 433], "gener": [27, 247], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 105], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 482, 483], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 137], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 119], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 83, 84], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 461], "optim": [42, 486, 490], "transpil": 43, "role": 43, "convert": [43, 459], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 449], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 299, 429, 430, 431, 433], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "numpi": 66, "mathemat": 67, "torch": 70, "pointwis": 71, "op": 71, "activ": [75, 456], "gelu": [76, 458], "leaky_relu": 77, "relu": 78, "sigmoid": 79, "softmax": 80, "softplu": 81, "tanh": [82, 245], "constant": 85, "creation": 86, "note": [86, 92], "arang": 87, "asarrai": 88, "empti": 89, "empty_lik": 90, "ey": 91, "from_dlpack": 92, "full": 93, "full_lik": 94, "linspac": 95, "logspac": 96, "meshgrid": 97, "native_arrai": 98, "ones": 99, "ones_lik": 100, "tril": 101, "triu": 102, "zero": [103, 469], "zeros_lik": 104, "as_ivy_dtyp": 109, "as_native_dtyp": 110, "astyp": 111, "broadcast_arrai": 112, "broadcast_to": 113, "can_cast": 114, "closest_valid_dtyp": 115, "default_dtyp": 116, "default_float_dtyp": 117, "default_int_dtyp": 118, "dtype_bit": 120, "finfo": 121, "function_unsupported_dtyp": 122, "iinfo": 123, "invalid_dtyp": 124, "is_float_dtyp": 125, "is_int_dtyp": 126, "promote_typ": 127, "result_typ": 128, "set_default_dtyp": 129, "set_default_float_dtyp": 130, "set_default_int_dtyp": 131, "type_promote_arrai": 132, "unset_default_dtyp": 133, "unset_default_float_dtyp": 134, "unset_default_int_dtyp": 135, "valid_dtyp": 136, "devcloneditem": 139, "devclonedit": 140, "devclonednest": 141, "devdistitem": 142, "devdistit": 143, "devdistnest": 144, "devmapp": 146, "devmappermultiproc": 147, "multidevitem": 149, "multidevit": 150, "multidevnest": 151, "profil": 152, "as_ivy_dev": 153, "as_native_dev": 154, "clear_mem_on_dev": 155, "default_devic": 156, "dev": 157, "dev_clon": 158, "dev_clone_arrai": 159, "dev_clone_it": 160, "dev_clone_nest": 161, "dev_dist": 162, "dev_dist_arrai": 163, "dev_dist_it": 164, "dev_dist_nest": 165, "dev_unifi": 166, "dev_unify_arrai": 167, "dev_unify_it": 168, "dev_unify_nest": 169, "dev_util": 170, "get_all_ivy_arrays_on_dev": 171, "gpu_is_avail": 172, "num_cpu_cor": 173, "num_gpu": 174, "num_ivy_arrays_on_dev": 175, "percent_used_mem_on_dev": 176, "print_all_ivy_arrays_on_dev": 177, "set_default_devic": 178, "set_split_factor": 179, "split_factor": 180, "split_func_cal": 181, "to_devic": 182, "total_mem_on_dev": 183, "tpu_is_avail": 184, "unset_default_devic": 185, "used_mem_on_dev": 186, "elementwis": 187, "ab": 188, "aco": 189, "acosh": 190, "asin": 192, "asinh": 193, "atan": 194, "atan2": 195, "atanh": 196, "bitwise_and": 197, "bitwise_invert": 198, "bitwise_left_shift": 199, "bitwise_or": 200, "bitwise_right_shift": 201, "bitwise_xor": 202, "ceil": 203, "co": 204, "cosh": 205, "divid": 206, "equal": 207, "erf": 208, "exp": 209, "expm1": 210, "floor": 211, "floor_divid": 212, "greater": 213, "greater_equ": 214, "isfinit": 215, "isinf": 216, "isnan": 217, "less": 218, "less_equ": 219, "log": 220, "log10": 221, "log1p": 222, "log2": 223, "logaddexp": 224, "logical_and": 225, "logical_not": 226, "logical_or": 227, "logical_xor": 228, "maximum": 229, "minimum": 230, "multipli": 231, "neg": 232, "not_equ": 233, "posit": 234, "pow": 235, "remaind": 236, "round": 237, "sign": 238, "sin": 239, "sinh": 240, "sqrt": 241, "squar": 242, "subtract": 243, "trunc": 246, "all_equ": 248, "arg_info": 249, "arg_nam": 250, "array_equ": 251, "arrays_equ": 252, "assert_supports_inplac": 253, "cache_fn": 254, "clip_matrix_norm": 255, "clip_vector_norm": 256, "container_typ": 257, "copy_arrai": 258, "cumprod": 259, "cumsum": 260, "current_backend_str": 261, "default": 262, "einops_rearrang": 263, "einops_reduc": 264, "einops_repeat": 265, "exist": 266, "floormod": 267, "fourier_encod": 268, "gather": 269, "gather_nd": 270, "get_all_arrays_in_memori": 271, "get_min_bas": 272, "get_min_denomin": 273, "get_num_dim": 274, "get_referrers_recurs": 275, "has_nan": 276, "indices_wher": 277, "inplace_arrays_support": 278, "inplace_decr": 279, "inplace_incr": 280, "inplace_upd": 281, "inplace_variables_support": 282, "is_arrai": 283, "is_ivy_arrai": 284, "is_ivy_contain": 285, "is_native_arrai": 286, "match_kwarg": 287, "multiprocess": 288, "num_arrays_in_memori": 289, "one_hot": 290, "print_all_arrays_in_memori": 291, "queue_timeout": 292, "scatter_flat": 293, "scatter_nd": 294, "set_min_bas": 295, "set_min_denomin": 296, "set_queue_timeout": 297, "set_tmp_dir": 298, "shape_to_tupl": 300, "stable_divid": 301, "stable_pow": 302, "supports_inplac": 303, "tmp_dir": 304, "to_list": 305, "to_numpi": 306, "to_scalar": 307, "try_else_non": 308, "unstack": 309, "value_is_nan": 310, "gradient": 311, "adam_step": 313, "adam_upd": 314, "execute_with_gradi": 315, "gradient_descent_upd": 316, "is_vari": 317, "lamb_upd": 318, "lars_upd": 319, "optimizer_upd": 320, "set_with_grad": 321, "stop_gradi": 322, "unset_with_grad": 323, "variabl": 324, "variable_data": 325, "with_grad": 326, "imag": 327, "bilinear_resampl": 328, "float_img_to_uint8_img": 329, "gradient_imag": 330, "linear_resampl": 331, "random_crop": 332, "stack_imag": 333, "uint8_img_to_float_img": 334, "layer": [335, 470], "conv1d": [336, 471], "conv1d_transpos": 337, "conv2d": [338, 473], "conv2d_transpos": 339, "conv3d": [340, 475], "conv3d_transpos": 341, "depthwise_conv2d": 342, "dropout": [343, 478], "linear": [344, 348, 480], "lstm_updat": 345, "multi_head_attent": 346, "scaled_dot_product_attent": 347, "algebra": 348, "choleski": 349, "cross": 350, "det": 351, "diagon": 352, "eigh": 353, "eigvalsh": 354, "inv": 355, "matmul": 356, "matrix_norm": 357, "matrix_pow": 358, "matrix_rank": 359, "matrix_transpos": 360, "outer": 361, "pinv": 362, "qr": 363, "slogdet": 364, "solv": 365, "svd": 366, "svdval": 367, "tensordot": 368, "trace": 369, "vecdot": 370, "vector_norm": 371, "vector_to_skew_symmetric_matrix": 372, "loss": 373, "binary_cross_entropi": 374, "cross_entropi": 375, "sparse_cross_entropi": 376, "manipul": 377, "clip": 378, "concat": 379, "constant_pad": 380, "expand_dim": 381, "flip": 382, "permute_dim": 383, "repeat": 384, "reshap": 385, "split": 387, "squeez": 388, "stack": 389, "swapax": 390, "tile": 391, "zero_pad": 392, "meta": 393, "fomaml_step": 394, "maml_step": 395, "reptile_step": 396, "nest": 397, "all_nested_indic": 398, "copy_nest": 399, "index_nest": 400, "insert_into_nest_at_index": 401, "insert_into_nest_at_indic": 402, "map": 403, "map_nest_at_index": 404, "map_nest_at_indic": 405, "multi_index_nest": 406, "nested_ani": 407, "nested_indices_wher": 408, "nested_map": 409, "nested_multi_map": 410, "prune_nest_at_index": 411, "prune_nest_at_indic": 412, "set_nest_at_index": 413, "set_nest_at_indic": 414, "norm": [415, 484], "layer_norm": 416, "random": 417, "multinomi": 418, "randint": 419, "random_norm": 420, "random_uniform": 421, "seed": 422, "shuffl": 423, "search": 424, "argmax": 425, "argmin": 426, "nonzero": 427, "where": 428, "depend": [429, 430, 431, 433], "output": [429, 430, 431, 433], "unique_al": 430, "unique_count": 431, "unique_invers": 432, "unique_valu": 433, "sort": [434, 436], "argsort": 435, "statist": 437, "einsum": 438, "max": 439, "mean": 440, "min": 441, "prod": 442, "std": 443, "sum": 444, "var": 445, "util": 446, "all": 447, "ani": 448, "content": 449, "overview": 449, "quick": 449, "start": 449, "roadmap": [449, 455], "citat": 449, "inspect": 452, "add_array_spec": 453, "fn_array_spec": 454, "geglu": 457, "to_ivy_modul": 460, "firstlayersiren": 463, "glorotuniform": 464, "Ones": 466, "siren": 467, "conv1dtranspos": 472, "conv2dtranspos": 474, "conv3dtranspos": 476, "depthwiseconv2d": 477, "lstm": 479, "multiheadattent": 481, "layernorm": 485, "adam": 487, "lamb": 488, "lar": 489, "sgd": 491, "sequenti": [492, 493], "verbos": 495, "cprint": 496}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})