Search.setIndex({"docnames": ["backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "floormod", "fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "with_grads", "Layers", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 5, 11, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 129, 130, 131, 132, 136, 137, 139, 140, 141, 151, 152, 153, 273, 320, 323, 362, 363, 683, 690, 745, 751, 791, 792, 794, 796, 833, 884, 888, 939, 940, 1051, 1053, 1063, 1094, 1097, 1176, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 126, 127, 128, 130, 131, 132, 133, 134, 135, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 170, 175, 180, 185, 190, 195, 200, 201, 202, 203, 204, 207, 211, 212, 217, 220, 225, 226, 231, 234, 237, 242, 247, 250, 255, 260, 265, 268, 273, 274, 275, 276, 281, 286, 291, 296, 297, 298, 301, 302, 303, 308, 309, 314, 317, 320, 325, 326, 331, 336, 341, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 402, 407, 412, 417, 422, 427, 432, 437, 442, 447, 452, 457, 462, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 603, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 678, 683, 684, 689, 690, 691, 692, 693, 694, 695, 696, 701, 702, 703, 704, 705, 706, 707, 708, 713, 718, 719, 720, 721, 722, 723, 728, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 773, 774, 775, 776, 777, 778, 779, 784, 785, 786, 787, 788, 789, 790, 791, 792, 797, 801, 804, 808, 813, 817, 821, 825, 826, 827, 828, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 851, 852, 853, 854, 855, 856, 857, 862, 867, 872, 877, 881, 884, 889, 893, 898, 902, 907, 912, 917, 920, 925, 929, 934, 939, 944, 949, 954, 959, 964, 969, 970, 975, 980, 985, 986, 991, 995, 999, 1003, 1007, 1011, 1016, 1021, 1026, 1027, 1031, 1035, 1039, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1075, 1076, 1077, 1082, 1087, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1105, 1110, 1115, 1120, 1121, 1126, 1131, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1165, 1166, 1171, 1176, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221], "backend_handl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1176], "contextmanag": 0, "modul": [0, 3, 4, 15, 17, 20, 69, 70, 71, 74, 75, 76, 77, 114, 115, 123, 124, 126, 127, 129, 133, 134, 136, 137, 139, 141, 152, 153, 683, 752, 1075, 1076, 1082, 1085, 1176, 1184, 1185, 1186, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 129, 130, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1180, 1181, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221], "base": [0, 18, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 123, 125, 128, 130, 136, 152, 203, 234, 235, 236, 273, 362, 363, 396, 502, 505, 557, 560, 562, 563, 564, 565, 566, 567, 570, 572, 573, 574, 575, 576, 627, 628, 630, 683, 735, 760, 773, 791, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1132, 1135, 1184, 1185, 1186, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "object": [0, 71, 74, 75, 76, 77, 84, 85, 94, 95, 123, 128, 138, 141, 203, 220, 223, 273, 309, 312, 362, 387, 391, 603, 604, 606, 791, 1051, 1054, 1056, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1075, 1093, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1207, 1208], "__init__": [0, 3, 4, 22, 25, 26, 27, 71, 74, 75, 76, 77, 117, 127, 131, 136, 138, 139, 140, 141, 273, 362, 363, 791, 1075, 1076, 1082, 1085, 1176, 1184, 1185, 1186, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "choose_random_backend": 0, "exclud": [0, 1, 121, 136, 203, 204, 205, 1075, 1087, 1090], "none": [0, 1, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 311, 312, 313, 314, 316, 317, 319, 320, 322, 323, 324, 325, 326, 328, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 347, 349, 351, 361, 362, 366, 367, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 739, 741, 742, 746, 752, 754, 757, 758, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 782, 785, 786, 787, 788, 791, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1057, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1187, 1188, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "clear_backend_stack": 0, "current_backend": [0, 22, 25, 26, 71, 76, 77, 117, 126], "arg": [0, 3, 20, 22, 25, 26, 28, 29, 30, 74, 75, 136, 138, 140, 362, 386, 683, 758, 1187, 1188, 1207, 1208], "kwarg": [0, 3, 22, 25, 26, 28, 29, 30, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 136, 138, 140, 683, 751, 1187, 1188, 1207, 1208], "return": [0, 3, 4, 11, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1061, 1062, 1063, 1064, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1187, 1188, 1195, 1204, 1205, 1211, 1215], "current": [0, 3, 4, 11, 15, 17, 18, 19, 20, 22, 25, 26, 71, 74, 75, 76, 77, 125, 126, 128, 130, 132, 136, 141, 152, 153, 273, 302, 314, 315, 317, 318, 325, 360, 361, 362, 373, 374, 375, 376, 380, 382, 683, 721, 722, 733, 734, 737, 742, 746, 753, 755, 767, 791, 825, 834, 1051, 1052, 1061, 1062, 1176], "prioriti": [0, 3, 18, 74, 75, 133], "global_backend": [0, 3], "argument": [0, 3, 4, 13, 19, 28, 29, 30, 31, 32, 71, 74, 75, 76, 77, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 138, 139, 200, 201, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 347, 350, 396, 397, 400, 412, 415, 417, 420, 422, 425, 472, 475, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 689, 690, 694, 706, 723, 726, 751, 758, 835, 842, 846, 849, 855, 856, 857, 860, 872, 875, 884, 888, 939, 940, 985, 1021, 1024, 1051, 1057, 1069, 1070, 1073, 1099, 1105, 1109, 1131, 1136, 1139, 1156, 1159, 1165, 1166, 1169, 1179, 1181, 1187, 1188, 1207, 1208], "": [0, 3, 4, 5, 11, 14, 15, 16, 17, 18, 20, 22, 25, 26, 28, 31, 32, 33, 34, 65, 66, 74, 75, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 202, 203, 237, 240, 255, 257, 259, 260, 262, 264, 273, 314, 315, 317, 318, 362, 367, 374, 375, 385, 396, 632, 635, 683, 692, 721, 722, 791, 797, 799, 804, 806, 813, 815, 821, 823, 856, 934, 938, 939, 943, 1051, 1057, 1063, 1131, 1152, 1155, 1160, 1162, 1164, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "paramet": [0, 3, 4, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 117, 120, 123, 138, 139, 152, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 364, 365, 366, 367, 368, 371, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 757, 758, 760, 761, 763, 765, 766, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1179, 1181, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "from": [0, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 47, 48, 53, 54, 57, 58, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 93, 98, 99, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 207, 208, 212, 213, 215, 220, 223, 225, 226, 227, 228, 229, 230, 237, 240, 242, 243, 245, 250, 251, 252, 253, 254, 268, 269, 270, 271, 272, 273, 291, 292, 293, 294, 295, 347, 348, 349, 350, 351, 362, 367, 376, 380, 385, 386, 396, 657, 660, 683, 706, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 777, 791, 797, 799, 813, 815, 835, 836, 838, 840, 846, 847, 848, 849, 850, 851, 854, 856, 872, 875, 934, 938, 954, 958, 985, 1003, 1006, 1016, 1017, 1018, 1019, 1020, 1027, 1030, 1047, 1048, 1049, 1050, 1051, 1053, 1063, 1064, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1098, 1099, 1100, 1104, 1110, 1114, 1131, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1182, 1187, 1188, 1195, 1203, 1206, 1211, 1212, 1213, 1214, 1215, 1216], "which": [0, 3, 4, 13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 33, 34, 35, 36, 41, 42, 51, 52, 53, 54, 57, 58, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 281, 283, 285, 291, 292, 293, 294, 295, 296, 303, 306, 309, 312, 320, 323, 325, 347, 348, 349, 351, 361, 362, 368, 371, 376, 380, 382, 384, 385, 386, 396, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 635, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 696, 698, 700, 703, 704, 706, 708, 710, 712, 713, 715, 717, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 741, 745, 753, 754, 755, 757, 758, 768, 770, 772, 779, 780, 782, 789, 791, 797, 799, 801, 802, 804, 806, 808, 810, 812, 813, 815, 817, 819, 821, 823, 826, 828, 829, 831, 832, 833, 835, 854, 856, 857, 859, 861, 862, 865, 872, 875, 893, 896, 902, 904, 906, 929, 932, 934, 938, 954, 958, 959, 963, 969, 970, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 990, 991, 994, 1003, 1006, 1011, 1014, 1016, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1031, 1034, 1051, 1056, 1057, 1058, 1059, 1064, 1065, 1066, 1067, 1068, 1070, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "try": [0, 3, 12, 14, 15, 17, 18, 19, 20, 74, 75, 129, 130, 134, 138, 153, 683, 785, 1176], "infer": [0, 3, 33, 34, 53, 54, 78, 79, 98, 99, 116, 127, 128, 131, 132, 136, 141, 200, 201, 203, 204, 205, 207, 208, 212, 213, 215, 225, 226, 227, 228, 229, 230, 242, 243, 245, 250, 251, 252, 253, 254, 268, 269, 270, 271, 272, 273, 302, 683, 738, 766, 985, 1016, 1017, 1018, 1019, 1020], "when": [0, 3, 13, 14, 17, 18, 19, 51, 52, 57, 58, 65, 66, 71, 74, 75, 76, 77, 96, 97, 102, 103, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 273, 276, 279, 396, 412, 415, 507, 510, 627, 630, 683, 694, 745, 773, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1051, 1062, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1098, 1131, 1136, 1139, 1144, 1147, 1152, 1155, 1160, 1162, 1164, 1176, 1207, 1208], "i": [0, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 164, 165, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 283, 285, 286, 289, 291, 293, 294, 295, 302, 303, 306, 309, 312, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 347, 349, 350, 351, 361, 362, 363, 367, 368, 371, 377, 378, 381, 385, 386, 392, 393, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 444, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 459, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 586, 587, 589, 590, 591, 592, 594, 596, 597, 599, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 694, 695, 696, 697, 698, 699, 700, 703, 704, 706, 708, 710, 712, 713, 715, 717, 718, 720, 723, 724, 725, 726, 727, 728, 730, 732, 737, 740, 741, 745, 747, 748, 749, 750, 751, 752, 756, 757, 758, 763, 768, 770, 772, 779, 780, 782, 789, 790, 791, 797, 799, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 826, 828, 829, 831, 834, 835, 836, 837, 842, 846, 849, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 884, 888, 889, 892, 893, 896, 902, 904, 905, 906, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 940, 944, 948, 949, 953, 954, 958, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1031, 1034, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1061, 1062, 1063, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216], "global": [0, 3, 4, 5, 11, 41, 42, 55, 56, 71, 74, 75, 76, 77, 86, 87, 100, 101, 126, 127, 131, 132, 136, 273, 297, 298, 299, 301, 302, 362, 384, 385, 386, 683, 735, 736, 756, 760, 761, 763, 768, 769, 770, 771, 772, 773, 791, 825, 834, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210], "set": [0, 3, 4, 5, 11, 13, 16, 18, 28, 31, 32, 41, 42, 43, 44, 62, 65, 66, 74, 75, 86, 87, 88, 89, 94, 95, 107, 116, 117, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 273, 302, 352, 355, 362, 367, 383, 384, 385, 386, 396, 432, 435, 683, 684, 685, 686, 687, 688, 759, 760, 761, 762, 763, 764, 765, 791, 797, 799, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 856, 862, 865, 893, 896, 902, 904, 905, 906, 917, 919, 929, 932, 1051, 1052, 1061, 1062, 1063, 1067, 1068, 1075, 1092, 1094, 1095, 1100, 1104, 1105, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1152, 1155, 1160, 1162, 1164, 1195, 1204, 1211, 1212, 1213, 1214, 1215, 1216], "ret": [0, 3, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 120, 124, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 303, 306, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 348, 349, 350, 351, 361, 362, 364, 365, 367, 368, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 757, 758, 766, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1179, 1181, 1187, 1188, 1211, 1215], "exampl": [0, 3, 4, 5, 11, 15, 17, 18, 19, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 276, 279, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 302, 303, 306, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 336, 339, 341, 344, 347, 348, 349, 350, 351, 352, 355, 360, 361, 362, 367, 368, 371, 373, 376, 377, 378, 379, 380, 383, 384, 385, 387, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 450, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 502, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 537, 540, 547, 548, 549, 550, 551, 552, 555, 582, 583, 584, 585, 586, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 696, 697, 698, 699, 700, 702, 703, 718, 723, 726, 728, 729, 730, 731, 732, 734, 736, 737, 748, 750, 759, 762, 764, 766, 767, 768, 769, 770, 771, 772, 777, 779, 780, 781, 782, 783, 784, 786, 787, 788, 791, 792, 793, 794, 795, 796, 808, 809, 810, 811, 812, 825, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 884, 887, 902, 904, 905, 906, 912, 915, 934, 938, 939, 943, 944, 948, 949, 953, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "If": [0, 3, 4, 5, 13, 16, 17, 18, 19, 20, 28, 31, 32, 33, 34, 49, 50, 51, 52, 53, 54, 57, 58, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 153, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 199, 203, 204, 205, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 283, 285, 286, 289, 291, 293, 295, 302, 347, 349, 350, 351, 362, 367, 385, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 601, 603, 604, 606, 607, 609, 610, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 745, 768, 770, 772, 779, 780, 782, 791, 797, 799, 804, 806, 808, 810, 812, 813, 815, 817, 819, 821, 823, 825, 828, 829, 831, 834, 856, 857, 858, 859, 860, 861, 862, 865, 893, 896, 902, 904, 905, 906, 917, 919, 920, 923, 929, 932, 934, 938, 954, 958, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 990, 999, 1002, 1003, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1047, 1048, 1049, 1051, 1063, 1064, 1070, 1072, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "import": [0, 3, 14, 18, 19, 69, 70, 114, 115, 117, 119, 120, 121, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 362, 383, 384, 396, 402, 405, 407, 410, 427, 430, 437, 440, 1176, 1182], "numpi": [0, 3, 4, 5, 13, 14, 18, 19, 41, 42, 74, 75, 86, 87, 118, 119, 123, 124, 125, 127, 131, 132, 133, 136, 138, 141, 396, 402, 405, 407, 410, 427, 430, 437, 440, 683, 768, 769, 770, 779, 780, 781, 782, 783, 1131, 1132, 1135, 1176], "np": [0, 3, 86, 87, 118, 119, 123, 125, 129, 131, 132, 133, 138, 139, 141, 396, 537, 540, 683, 768, 771, 772, 1176], "x": [0, 3, 11, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 209, 210, 212, 215, 216, 220, 223, 224, 226, 227, 228, 229, 230, 237, 240, 242, 245, 246, 250, 253, 254, 255, 256, 259, 260, 261, 264, 265, 267, 268, 269, 271, 272, 273, 276, 279, 280, 286, 289, 290, 291, 292, 293, 294, 295, 302, 303, 306, 307, 308, 309, 312, 320, 323, 336, 339, 347, 348, 349, 350, 351, 362, 367, 368, 371, 372, 376, 380, 385, 387, 388, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 450, 451, 457, 458, 459, 460, 461, 467, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 497, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 522, 524, 525, 526, 527, 530, 532, 535, 536, 537, 540, 541, 542, 545, 546, 547, 549, 550, 551, 552, 555, 557, 560, 561, 562, 565, 566, 567, 570, 571, 572, 575, 576, 582, 583, 584, 585, 586, 587, 590, 591, 602, 603, 605, 612, 615, 616, 622, 625, 626, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 665, 666, 672, 673, 674, 675, 676, 677, 678, 679, 682, 683, 684, 687, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 711, 712, 713, 716, 717, 718, 719, 720, 723, 726, 728, 729, 730, 731, 732, 736, 738, 740, 741, 743, 744, 745, 747, 748, 749, 750, 754, 766, 768, 769, 770, 771, 772, 774, 777, 779, 780, 781, 782, 783, 784, 789, 790, 791, 801, 802, 803, 808, 809, 810, 811, 812, 826, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 871, 872, 875, 876, 877, 880, 881, 883, 884, 887, 893, 896, 897, 898, 900, 901, 902, 904, 905, 906, 907, 910, 911, 912, 915, 917, 919, 920, 923, 924, 925, 927, 928, 934, 935, 938, 939, 943, 944, 948, 949, 950, 953, 959, 960, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1051, 1052, 1054, 1057, 1061, 1062, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1206], "arrai": [0, 3, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 153, 154, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 228, 229, 230, 231, 232, 234, 235, 237, 239, 240, 241, 242, 245, 247, 248, 250, 252, 253, 254, 255, 259, 260, 264, 265, 267, 268, 269, 271, 272, 273, 276, 279, 281, 283, 284, 285, 286, 289, 291, 293, 294, 295, 302, 303, 306, 309, 312, 320, 323, 326, 329, 331, 334, 336, 339, 341, 344, 347, 349, 350, 351, 356, 362, 367, 368, 371, 376, 380, 382, 386, 387, 391, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 679, 682, 683, 684, 686, 687, 688, 691, 692, 693, 695, 696, 698, 699, 700, 702, 703, 704, 707, 708, 711, 712, 713, 715, 716, 717, 718, 719, 720, 723, 725, 726, 727, 728, 730, 731, 732, 733, 738, 740, 741, 742, 743, 744, 745, 747, 748, 750, 753, 754, 755, 757, 758, 759, 764, 766, 768, 770, 771, 772, 774, 777, 779, 780, 782, 783, 784, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 799, 804, 806, 808, 810, 811, 812, 813, 815, 817, 819, 821, 823, 826, 828, 829, 831, 832, 833, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 898, 900, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 972, 973, 974, 975, 977, 978, 979, 980, 982, 983, 984, 985, 986, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1063, 1064, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1179, 1181, 1195, 1203, 1206], "2": [0, 3, 17, 18, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 118, 121, 123, 127, 130, 135, 136, 138, 139, 140, 141, 153, 164, 170, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 188, 195, 196, 197, 198, 199, 202, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 268, 272, 273, 276, 279, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 303, 306, 309, 312, 336, 339, 347, 348, 351, 362, 367, 368, 371, 373, 376, 378, 380, 384, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 424, 425, 426, 427, 430, 432, 433, 434, 435, 436, 437, 439, 441, 442, 445, 447, 450, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 473, 474, 475, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 537, 540, 547, 548, 549, 550, 551, 552, 555, 572, 573, 574, 575, 576, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 691, 692, 695, 696, 697, 698, 699, 700, 703, 718, 723, 726, 728, 729, 730, 731, 732, 748, 750, 766, 768, 769, 770, 771, 772, 777, 791, 792, 793, 794, 795, 796, 808, 809, 810, 811, 812, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 873, 874, 875, 876, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 912, 915, 917, 919, 920, 923, 934, 938, 939, 943, 944, 945, 946, 947, 948, 949, 953, 959, 960, 961, 962, 963, 969, 970, 971, 972, 973, 974, 975, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1148, 1151, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "0": [0, 3, 18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 123, 124, 125, 136, 138, 139, 140, 141, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 217, 218, 219, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 272, 273, 276, 279, 281, 282, 283, 284, 285, 291, 293, 294, 295, 303, 306, 309, 312, 320, 323, 336, 339, 347, 348, 351, 362, 364, 367, 368, 371, 373, 376, 380, 383, 384, 385, 386, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 452, 455, 462, 465, 467, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 502, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 519, 520, 521, 522, 525, 527, 530, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 572, 575, 587, 590, 602, 603, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 691, 692, 695, 696, 697, 698, 699, 700, 702, 703, 704, 718, 723, 726, 728, 729, 730, 731, 732, 739, 748, 750, 754, 757, 758, 766, 768, 769, 770, 771, 772, 777, 779, 780, 781, 782, 783, 784, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 828, 831, 832, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 873, 874, 875, 876, 884, 887, 902, 904, 905, 906, 934, 938, 939, 943, 944, 948, 949, 950, 951, 952, 953, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1043, 1045, 1051, 1054, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218], "print": [0, 3, 4, 5, 11, 17, 18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 130, 136, 138, 139, 140, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 276, 279, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 303, 306, 308, 314, 315, 317, 318, 336, 339, 347, 348, 349, 350, 351, 361, 362, 368, 371, 376, 377, 378, 379, 380, 382, 385, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 450, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 505, 507, 508, 509, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 537, 540, 547, 548, 549, 550, 551, 552, 555, 582, 583, 584, 585, 586, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 696, 697, 698, 699, 700, 702, 703, 718, 723, 726, 728, 729, 730, 731, 732, 736, 755, 766, 768, 769, 770, 771, 772, 777, 779, 780, 781, 782, 783, 784, 791, 792, 793, 795, 796, 808, 809, 810, 811, 812, 825, 834, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 884, 887, 902, 904, 906, 912, 915, 934, 938, 939, 943, 944, 948, 949, 953, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "function": [0, 3, 4, 5, 13, 18, 20, 22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 125, 127, 129, 133, 134, 135, 137, 138, 139, 140, 151, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 888, 889, 892, 893, 896, 898, 900, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 940, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1184, 1185, 1186, 1211, 1214, 1216], "py": [0, 3, 4, 18, 117, 118, 119, 120, 123, 124, 125, 126, 127, 131, 132, 134, 136, 138, 140, 141, 1075, 1076, 1082, 1085, 1211, 1212, 1213, 1214, 1216], "noqa": [0, 3, 4, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 412, 415, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 537, 540, 552, 555, 602, 603, 605, 617, 620, 637, 640, 642, 645, 657, 660, 662, 665, 672, 676, 677, 856, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1131, 1136, 1139], "The": [0, 3, 4, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 152, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 220, 223, 226, 228, 230, 234, 235, 250, 252, 254, 255, 257, 259, 260, 262, 264, 268, 269, 271, 273, 274, 275, 276, 279, 281, 283, 285, 291, 293, 295, 296, 308, 314, 315, 317, 318, 325, 331, 334, 341, 344, 346, 347, 349, 351, 355, 356, 361, 362, 363, 364, 365, 366, 367, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 691, 694, 695, 696, 698, 700, 705, 706, 708, 710, 712, 713, 715, 717, 720, 721, 722, 723, 725, 727, 728, 729, 730, 731, 732, 743, 744, 745, 747, 748, 749, 750, 752, 757, 758, 760, 761, 763, 768, 770, 771, 772, 773, 776, 778, 779, 780, 782, 790, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 808, 810, 812, 813, 815, 817, 819, 821, 823, 826, 828, 829, 831, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1039, 1042, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215], "set_backend": [0, 3, 4, 11, 43, 44, 88, 89, 126, 127, 128, 131, 273, 314, 315, 317, 318, 362, 383, 384, 396, 402, 405, 407, 410, 427, 430, 437, 440, 791, 828, 829, 830, 831, 832, 1176], "ha": [0, 3, 4, 13, 14, 15, 18, 61, 62, 65, 66, 74, 75, 106, 107, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 134, 136, 138, 140, 141, 152, 153, 203, 237, 240, 362, 367, 396, 397, 400, 607, 610, 627, 630, 791, 825, 834, 856, 889, 892, 925, 927, 929, 932, 934, 938, 949, 953, 985, 999, 1002, 1027, 1030, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1131, 1140, 1143, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "over": [0, 3, 13, 15, 17, 18, 65, 66, 67, 68, 69, 70, 74, 75, 94, 95, 110, 111, 112, 113, 114, 115, 120, 121, 123, 127, 133, 138, 153, 856, 893, 896, 944, 948, 954, 958, 959, 963, 1069, 1070, 1073, 1075, 1087, 1090, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1209, 1210], "ani": [0, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 33, 34, 39, 40, 41, 42, 67, 68, 69, 70, 74, 75, 84, 85, 86, 87, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 362, 387, 391, 396, 397, 400, 412, 415, 417, 420, 422, 425, 472, 475, 492, 493, 494, 495, 496, 507, 510, 512, 515, 527, 530, 537, 540, 552, 555, 602, 603, 605, 617, 618, 619, 620, 621, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 684, 685, 686, 687, 688, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 723, 726, 740, 747, 748, 749, 773, 791, 801, 802, 835, 842, 846, 849, 853, 855, 856, 857, 860, 872, 875, 985, 1021, 1024, 1047, 1048, 1049, 1050, 1051, 1054, 1057, 1061, 1067, 1068, 1069, 1070, 1073, 1075, 1087, 1090, 1099, 1105, 1109, 1131, 1136, 1139, 1165, 1166, 1169, 1175, 1176], "pass": [0, 3, 18, 19, 69, 70, 71, 74, 75, 76, 77, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 138, 153, 273, 296, 362, 386, 396, 432, 435, 683, 694, 745, 791, 833, 884, 888, 939, 940, 1047, 1048, 1049, 1187, 1188, 1207, 1208, 1211, 1215, 1217, 1218], "jax": [0, 3, 4, 5, 14, 15, 18, 19, 43, 44, 88, 89, 118, 119, 123, 124, 125, 127, 131, 132, 133, 136, 138, 141, 153, 791, 808, 809, 810, 811, 812, 828, 831, 832, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1176], "get_backend": [0, 126, 127], "specifi": [0, 4, 33, 34, 41, 42, 51, 52, 53, 54, 57, 58, 67, 68, 72, 73, 74, 75, 86, 87, 94, 95, 96, 97, 98, 99, 102, 103, 112, 113, 116, 118, 123, 124, 125, 126, 131, 132, 133, 136, 139, 140, 141, 170, 172, 174, 203, 204, 205, 211, 225, 231, 232, 234, 235, 247, 248, 255, 257, 259, 260, 262, 264, 265, 267, 273, 276, 279, 286, 289, 362, 376, 380, 382, 385, 386, 387, 391, 396, 632, 635, 683, 689, 703, 723, 724, 725, 726, 727, 728, 731, 740, 789, 856, 872, 875, 893, 896, 944, 948, 949, 953, 954, 958, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 991, 994, 995, 998, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1043, 1046, 1051, 1056, 1058, 1059, 1065, 1066, 1067, 1068, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1131, 1132, 1135, 1148, 1151, 1156, 1159, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "isn": [0, 4, 18, 128, 139, 153], "t": [0, 4, 14, 15, 17, 18, 19, 20, 22, 25, 26, 69, 70, 114, 115, 121, 123, 128, 131, 136, 138, 139, 140, 141, 153, 683, 692, 835, 852, 853], "associ": [0, 4, 18, 94, 95, 123, 125, 126, 128, 153, 396, 412, 415, 607, 610, 856, 902, 904, 905, 906, 917, 919, 964, 968], "option": [0, 4, 17, 18, 23, 24, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 136, 141, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 283, 285, 286, 289, 291, 293, 295, 296, 297, 298, 299, 301, 302, 325, 347, 349, 351, 361, 362, 367, 384, 385, 386, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 695, 696, 697, 698, 699, 700, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 741, 752, 754, 757, 758, 768, 769, 770, 771, 772, 773, 779, 780, 782, 791, 808, 810, 812, 826, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1057, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1105, 1106, 1108, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1211, 1212, 1213, 1215], "str": [0, 4, 28, 29, 30, 41, 42, 47, 48, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 119, 131, 132, 134, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 226, 228, 230, 237, 240, 250, 252, 254, 268, 269, 271, 273, 274, 281, 283, 285, 291, 293, 295, 296, 297, 298, 299, 308, 309, 312, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 347, 349, 351, 352, 353, 354, 355, 361, 362, 363, 364, 386, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 696, 698, 700, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 723, 725, 727, 728, 730, 732, 752, 757, 758, 768, 770, 772, 779, 780, 782, 808, 810, 812, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 857, 859, 861, 902, 904, 906, 920, 923, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1047, 1048, 1049, 1050, 1051, 1057, 1067, 1070, 1072, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1131, 1132, 1135, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "we": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 69, 70, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 152, 153, 791, 801, 802, 1176, 1182], "want": [0, 4, 14, 16, 17, 18, 69, 70, 114, 115, 123, 128, 139, 140, 141, 153], "retriev": [0, 4, 18, 683, 689], "e": [0, 4, 14, 15, 16, 18, 20, 57, 58, 65, 66, 94, 95, 102, 103, 116, 123, 130, 139, 153, 202, 203, 237, 240, 273, 275, 347, 350, 362, 364, 396, 397, 400, 432, 435, 452, 455, 462, 465, 472, 475, 502, 505, 512, 515, 517, 520, 532, 535, 557, 560, 567, 570, 602, 603, 605, 612, 615, 627, 630, 632, 635, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 856, 862, 865, 884, 888, 889, 892, 902, 904, 905, 906, 917, 919, 929, 932, 934, 938, 939, 940, 959, 963, 985, 1031, 1034, 1051, 1054, 1067, 1068, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "one": [0, 4, 14, 15, 17, 18, 22, 25, 26, 61, 62, 74, 75, 84, 85, 86, 87, 94, 95, 98, 99, 100, 101, 106, 107, 108, 109, 118, 121, 123, 124, 126, 129, 130, 131, 133, 134, 135, 138, 139, 141, 153, 203, 204, 205, 237, 240, 273, 281, 284, 291, 294, 362, 386, 396, 412, 416, 457, 461, 602, 603, 605, 683, 684, 686, 687, 688, 728, 732, 751, 754, 757, 758, 779, 780, 782, 856, 857, 861, 889, 892, 893, 896, 912, 915, 920, 923, 954, 958, 959, 963, 985, 986, 990, 999, 1002, 1003, 1006, 1016, 1020, 1021, 1024, 1025, 1027, 1030, 1069, 1070, 1072, 1073, 1074, 1094, 1095, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1126, 1130, 1131, 1132, 1135, 1176], "default": [0, 4, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 124, 126, 127, 130, 131, 132, 140, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 283, 285, 286, 289, 291, 293, 295, 297, 298, 299, 301, 302, 303, 306, 347, 349, 351, 352, 355, 360, 362, 367, 368, 371, 378, 381, 382, 383, 384, 385, 386, 387, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 695, 696, 697, 698, 699, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 750, 751, 752, 754, 756, 757, 758, 763, 766, 768, 769, 770, 771, 772, 773, 779, 780, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 826, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "torch": [0, 4, 11, 18, 88, 89, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 200, 201, 273, 314, 315, 317, 318, 336, 339, 362, 383, 384, 791, 828, 829, 832, 856, 939, 943, 985, 999, 1002, 1027, 1030, 1176], "tensorflow": [0, 4, 11, 14, 15, 18, 19, 43, 44, 118, 119, 123, 124, 125, 131, 132, 133, 136, 141, 153, 791, 828, 830, 832, 1176], "mxnet": [0, 4, 14, 19, 131, 132, 133, 136, 141, 1176], "either": [0, 4, 11, 17, 18, 20, 39, 40, 74, 75, 84, 85, 120, 121, 123, 126, 127, 130, 131, 132, 136, 138, 139, 153, 203, 220, 223, 396, 412, 415, 432, 435, 537, 538, 539, 540, 541, 557, 560, 562, 565, 572, 575, 577, 580, 607, 610, 632, 635, 642, 645, 647, 650, 672, 676, 683, 706, 747, 751, 752, 856, 884, 888, 889, 892, 939, 940, 1047, 1048, 1049, 1050, 1131, 1148, 1151, 1156, 1159, 1195, 1206, 1207, 1208], "doesn": [0, 4, 17, 20, 121, 123, 131, 136, 153], "matter": [0, 4, 13, 121], "been": [0, 4, 18, 41, 42, 86, 87, 118, 120, 123, 126, 127, 130, 131, 132, 134, 136, 152, 153, 362, 367, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 1075, 1076], "ivy_np": [0, 4, 123, 125], "us": [0, 4, 11, 15, 18, 19, 39, 40, 41, 42, 53, 54, 55, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 84, 85, 86, 87, 98, 99, 100, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 164, 165, 167, 169, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 202, 273, 308, 309, 312, 320, 323, 362, 363, 377, 381, 384, 385, 386, 387, 391, 393, 395, 396, 417, 420, 442, 445, 457, 459, 467, 470, 482, 485, 527, 530, 552, 555, 582, 583, 584, 586, 612, 615, 617, 620, 637, 638, 657, 660, 683, 723, 726, 735, 736, 751, 757, 758, 760, 761, 768, 769, 770, 771, 772, 773, 791, 792, 795, 797, 799, 813, 815, 817, 819, 835, 845, 851, 852, 854, 855, 856, 867, 870, 872, 875, 884, 888, 893, 896, 939, 940, 943, 969, 970, 973, 985, 999, 1002, 1003, 1006, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1035, 1038, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1060, 1061, 1062, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1131, 1132, 1135, 1165, 1166, 1169, 1176, 1195, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214], "ivy_jax": [0, 4, 125], "subsequ": [0, 5, 17, 118, 121, 123, 126, 129, 133, 140], "call": [0, 5, 11, 14, 18, 20, 71, 76, 77, 117, 118, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 362, 363, 386, 683, 756, 763, 785, 791, 801, 802, 884, 888, 939, 940, 1051, 1052, 1057, 1061, 1062, 1195, 1206, 1207, 1208, 1211, 1215], "nativ": [0, 5, 28, 30, 31, 32, 33, 34, 74, 75, 123, 124, 128, 131, 133, 138, 139, 203, 242, 243, 245, 273, 274, 275, 296, 302, 362, 364, 365, 366, 367, 368, 371, 381, 392, 395, 683, 745, 747, 750, 778, 1187, 1188], "native_arrai": [0, 5, 11, 33, 34, 35, 36, 39, 40, 41, 42, 78, 79, 84, 85, 86, 87, 108, 109, 123, 125, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 203, 226, 229, 237, 240, 268, 272, 273, 281, 282, 284, 291, 294, 303, 306, 309, 312, 320, 323, 336, 339, 347, 350, 362, 380, 396, 397, 400, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 487, 488, 490, 492, 493, 495, 507, 510, 512, 515, 517, 518, 520, 522, 525, 527, 530, 537, 540, 547, 550, 552, 555, 582, 585, 587, 590, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 677, 683, 684, 685, 686, 687, 688, 692, 696, 699, 702, 703, 718, 723, 726, 728, 731, 750, 777, 779, 780, 782, 783, 784, 791, 792, 795, 808, 811, 828, 832, 835, 836, 839, 842, 845, 846, 849, 855, 856, 862, 865, 867, 870, 872, 875, 902, 905, 939, 943, 944, 948, 969, 970, 973, 980, 983, 985, 986, 989, 999, 1002, 1003, 1006, 1011, 1014, 1016, 1019, 1021, 1024, 1026, 1027, 1030, 1035, 1038, 1075, 1076, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1109, 1120, 1126, 1128, 1129, 1131, 1132, 1135, 1136, 1139, 1160, 1164, 1165, 1166, 1169], "1": [0, 5, 11, 14, 15, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 118, 121, 123, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 140, 141, 153, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 203, 204, 205, 206, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 268, 272, 273, 276, 279, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 303, 306, 308, 309, 312, 336, 339, 347, 348, 351, 362, 367, 368, 371, 376, 379, 380, 387, 391, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 445, 447, 450, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 505, 507, 508, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 530, 537, 540, 547, 549, 550, 551, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 587, 590, 602, 603, 605, 612, 615, 617, 620, 627, 630, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 696, 697, 698, 699, 700, 702, 703, 718, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 748, 750, 754, 757, 758, 766, 768, 769, 770, 771, 772, 773, 777, 779, 780, 781, 782, 783, 784, 789, 791, 792, 793, 794, 795, 796, 808, 810, 811, 812, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 870, 872, 873, 874, 875, 876, 884, 887, 902, 904, 905, 906, 912, 915, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 955, 956, 957, 958, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1034, 1035, 1038, 1051, 1054, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "type": [0, 5, 11, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 136, 138, 139, 141, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 747, 748, 749, 750, 754, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 804, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 819, 820, 821, 822, 823, 824, 826, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "ndarrai": [0, 5, 33, 34, 118, 119, 129, 131, 132, 133, 138, 203, 207, 208, 209, 242, 245, 683, 779, 783], "Or": [0, 5, 139], "jaxlib": [0, 5, 17, 118, 119, 131, 132, 138], "xla_extens": [0, 5, 118, 119, 131, 132, 138], "devicearrai": [0, 5, 138], "try_import_ivy_jax": 0, "warn": [0, 6, 7, 8, 9, 10], "fals": [0, 6, 7, 8, 9, 10, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 53, 54, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 123, 125, 130, 133, 134, 139, 140, 141, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 276, 278, 279, 280, 281, 283, 285, 286, 288, 290, 291, 292, 293, 294, 295, 298, 300, 303, 304, 305, 306, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 325, 326, 328, 329, 330, 331, 333, 335, 336, 338, 339, 340, 341, 343, 344, 345, 347, 349, 351, 361, 362, 367, 368, 369, 370, 371, 372, 377, 378, 381, 386, 393, 395, 396, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 445, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 620, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 696, 698, 700, 703, 706, 708, 710, 712, 713, 715, 717, 718, 720, 723, 725, 727, 728, 730, 732, 734, 737, 738, 745, 747, 748, 750, 751, 759, 762, 764, 766, 767, 768, 770, 772, 779, 780, 782, 786, 787, 788, 789, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 831, 834, 856, 857, 858, 859, 860, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 889, 891, 893, 894, 895, 896, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 937, 938, 939, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 961, 962, 963, 964, 965, 967, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1061, 1062, 1063, 1064, 1070, 1072, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1113, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1187, 1188, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 43, 44, 88, 89, 127, 791, 828, 829, 830, 831, 832], "unset": [0, 11, 127, 136, 138], "adjust": [0, 11, 65, 66, 1131, 1152, 1155, 1160, 1162, 1164], "dict": [0, 11, 28, 29, 30, 31, 32, 41, 42, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 119, 124, 130, 134, 139, 140, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 362, 367, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 696, 698, 700, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 721, 722, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1051, 1053, 1054, 1057, 1060, 1063, 1064, 1067, 1068, 1070, 1072, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "previous": [0, 11, 17, 20, 123, 126, 136, 683, 694], "otherwis": [0, 11, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 39, 40, 43, 44, 49, 50, 53, 54, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 118, 123, 129, 130, 131, 132, 136, 138, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 226, 228, 230, 250, 252, 254, 268, 269, 271, 273, 276, 279, 281, 283, 285, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 326, 329, 336, 339, 347, 349, 351, 362, 367, 396, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 693, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 785, 791, 808, 809, 810, 811, 812, 826, 828, 829, 831, 856, 857, 858, 859, 860, 861, 867, 870, 902, 904, 906, 954, 958, 959, 963, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1047, 1048, 1049, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1095, 1096, 1098, 1105, 1106, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "implement": [0, 11, 19, 116, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 195, 199, 273, 276, 279, 347, 350, 362, 387, 391, 396, 397, 400, 402, 405, 407, 410, 417, 420, 422, 425, 427, 430, 432, 435, 477, 480, 482, 485, 502, 505, 507, 510, 557, 560, 562, 565, 567, 570, 572, 575, 607, 610, 627, 630, 632, 635, 647, 650, 652, 655, 672, 676, 677, 856, 877, 880, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1176], "wa": [0, 11, 14, 18, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 121, 136, 138, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 785, 808, 810, 812, 828, 829, 831, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "last": [0, 11, 15, 18, 51, 52, 67, 68, 74, 75, 96, 97, 112, 113, 121, 123, 125, 127, 134, 153, 164, 185, 188, 362, 367, 791, 825, 834, 835, 853, 856, 862, 865, 872, 875, 893, 896, 949, 953, 954, 958, 969, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1003, 1006, 1021, 1024, 1026, 1031, 1034, 1120, 1121, 1124, 1126, 1129, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1205], "henc": [0, 11, 123, 130, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "here": [0, 11, 17, 18, 19, 117, 118, 119, 121, 123, 124, 125, 130, 136, 137, 138, 139, 140, 141, 152, 153], "tensor": [0, 11, 13, 74, 75, 117, 118, 119, 124, 126, 127, 129, 131, 132, 133, 136, 138, 139, 140, 141, 153, 203, 231, 232, 234, 235, 273, 303, 306, 396, 442, 445, 602, 603, 605, 683, 754, 757, 758, 835, 851, 853, 856, 944, 948, 985, 999, 1002, 1026, 1075, 1076, 1094, 1097, 1176, 1195, 1203, 1205], "howev": [0, 11, 14, 17, 19, 118, 119, 120, 123, 124, 126, 127, 129, 130, 131, 132, 133, 138, 139, 140, 141, 153], "befor": [0, 11, 17, 18, 19, 74, 75, 120, 123, 128, 129, 131, 132, 133, 136, 139, 153, 362, 363, 386, 396, 678, 682, 835, 854, 855, 1047, 1048, 1049, 1051, 1063, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1148, 1151, 1156, 1159], "becom": [0, 11, 13, 15, 18, 121, 130, 136, 141, 153, 985, 986, 989], "swap": [0, 11, 985, 1035, 1038], "python": [0, 11, 12, 13, 14, 17, 18, 20, 123, 134, 136, 138, 139, 153, 203, 204, 205, 362, 381, 395, 396, 632, 635, 884, 888, 939, 940, 1176, 1182], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 42, 43, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 132, 135, 138, 141, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1221], "op": [0, 11, 117, 136, 153], "eagertensor": [0, 11], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 40, 42, 43, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1180, 1181, 1182, 1185, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1221], "backend": [3, 4, 5, 11, 13, 18, 19, 28, 30, 32, 74, 75, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 141, 273, 314, 315, 317, 318, 325, 361, 362, 374, 375, 377, 379, 393, 683, 721, 722, 742, 745, 746, 752, 778, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 833, 1176, 1182, 1187, 1188, 1211, 1212, 1213, 1214, 1215, 1216], "ml": [12, 14, 15, 16, 135, 136, 137, 139, 140, 141, 152, 1176, 1182], "explos": [12, 14, 1176], "A": [12, 13, 14, 15, 20, 33, 34, 35, 36, 67, 68, 71, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 98, 99, 112, 113, 116, 123, 126, 130, 131, 132, 136, 139, 153, 203, 217, 218, 242, 243, 245, 273, 281, 282, 283, 284, 285, 362, 386, 396, 622, 625, 683, 736, 768, 770, 772, 777, 828, 829, 831, 856, 884, 888, 912, 915, 925, 927, 929, 932, 934, 938, 939, 940, 985, 986, 988, 990, 1026, 1031, 1034, 1051, 1052, 1054, 1056, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1131, 1132, 1135, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1217, 1218], "huge": [12, 14, 139, 1176], "number": [12, 13, 17, 22, 25, 26, 35, 36, 41, 42, 53, 54, 61, 62, 65, 66, 67, 68, 71, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 94, 95, 98, 99, 106, 107, 112, 113, 121, 123, 125, 130, 132, 133, 136, 139, 141, 200, 201, 202, 203, 204, 205, 207, 209, 217, 218, 231, 232, 234, 235, 237, 240, 242, 245, 273, 281, 282, 283, 284, 285, 302, 308, 309, 312, 320, 323, 326, 329, 331, 334, 336, 339, 341, 344, 347, 348, 349, 350, 351, 362, 378, 379, 380, 396, 412, 415, 432, 435, 472, 475, 512, 515, 517, 520, 602, 603, 604, 606, 607, 610, 627, 630, 632, 635, 637, 640, 642, 645, 678, 682, 683, 684, 687, 720, 736, 738, 753, 768, 769, 770, 771, 772, 784, 790, 835, 854, 856, 872, 875, 877, 880, 902, 904, 905, 906, 925, 927, 934, 938, 954, 958, 985, 986, 987, 988, 989, 990, 995, 998, 1007, 1010, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1026, 1031, 1034, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1075, 1076, 1092, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206], "tool": [12, 15, 18, 137, 141, 152, 153, 1176], "have": [12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 309, 312, 362, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 808, 809, 810, 811, 812, 826, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "explod": [12, 13, 1176], "onto": [12, 13, 1051, 1057, 1063, 1176], "scene": [12, 13, 116, 135, 137, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1176], "b": [12, 15, 16, 22, 25, 26, 39, 40, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 121, 126, 127, 130, 135, 136, 137, 139, 140, 141, 151, 164, 195, 196, 198, 199, 203, 226, 228, 229, 230, 268, 272, 273, 281, 283, 284, 285, 291, 293, 294, 295, 303, 306, 336, 339, 347, 349, 351, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 420, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 445, 457, 459, 460, 461, 467, 470, 472, 474, 475, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 507, 509, 510, 512, 514, 515, 517, 519, 520, 521, 522, 524, 525, 526, 527, 530, 537, 540, 547, 549, 550, 551, 552, 555, 582, 584, 585, 586, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 684, 686, 687, 688, 691, 692, 696, 698, 699, 700, 702, 703, 718, 723, 726, 728, 730, 731, 732, 768, 770, 771, 772, 779, 780, 782, 783, 784, 791, 792, 794, 795, 796, 808, 810, 811, 812, 828, 829, 831, 832, 835, 836, 838, 839, 840, 842, 845, 846, 848, 849, 850, 855, 856, 857, 859, 860, 861, 862, 865, 867, 870, 872, 875, 902, 904, 905, 906, 912, 915, 929, 932, 939, 943, 944, 948, 964, 968, 969, 970, 972, 973, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 989, 990, 999, 1002, 1003, 1006, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1034, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1096, 1097, 1098, 1099, 1105, 1106, 1108, 1109, 1120, 1121, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1160, 1161, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1173, 1175, 1176, 1182], "why": [12, 14, 18, 118, 130, 133, 138, 1176], "unifi": [12, 14, 74, 75, 129, 136, 153, 362, 386, 1176], "should": [12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 39, 40, 49, 50, 53, 54, 65, 66, 71, 72, 73, 74, 75, 76, 77, 84, 85, 94, 95, 98, 99, 110, 111, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 164, 185, 187, 189, 195, 196, 197, 198, 199, 200, 201, 203, 237, 240, 255, 257, 259, 260, 262, 264, 273, 286, 289, 362, 363, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 694, 745, 754, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 884, 887, 889, 892, 902, 904, 905, 906, 912, 915, 917, 919, 920, 923, 929, 932, 934, 938, 944, 948, 949, 953, 954, 958, 959, 963, 985, 1016, 1017, 1018, 1019, 1020, 1075, 1093, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1176], "them": [12, 13, 14, 15, 116, 123, 125, 127, 128, 129, 130, 136, 138, 139, 140, 153, 1176], "c": [12, 14, 15, 16, 17, 43, 44, 47, 48, 65, 66, 84, 85, 88, 89, 116, 121, 126, 130, 135, 136, 137, 139, 153, 273, 309, 312, 320, 323, 396, 617, 620, 642, 644, 645, 683, 691, 692, 702, 784, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 836, 837, 845, 884, 888, 939, 940, 985, 1031, 1034, 1051, 1054, 1067, 1068, 1094, 1097, 1131, 1132, 1135, 1152, 1155, 1160, 1162, 1164, 1176, 1182], "standard": [12, 55, 56, 57, 58, 65, 66, 100, 101, 102, 103, 116, 117, 118, 120, 122, 123, 129, 133, 153, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 552, 555, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 856, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1084, 1085, 1086, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1152, 1155, 1160, 1162, 1164, 1165, 1166, 1169, 1176, 1182, 1209, 1210], "re": [12, 13, 14, 16, 17, 18, 19, 20, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 153, 362, 386, 683, 707, 856, 944, 948, 985, 1021, 1024, 1094, 1098, 1176], "collabor": [12, 13, 14, 1176], "consortium": [12, 14, 1176, 1182], "data": [12, 14, 17, 22, 23, 24, 25, 26, 27, 33, 34, 36, 39, 40, 43, 44, 49, 50, 53, 54, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 88, 89, 94, 95, 98, 99, 102, 103, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 125, 126, 128, 130, 132, 133, 138, 164, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 286, 289, 291, 292, 293, 294, 295, 296, 303, 306, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 350, 352, 356, 361, 362, 363, 364, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 691, 692, 747, 748, 750, 774, 791, 808, 809, 810, 811, 812, 833, 835, 852, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 929, 932, 934, 938, 944, 948, 949, 953, 954, 958, 959, 963, 985, 999, 1002, 1003, 1006, 1007, 1010, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1106, 1107, 1108, 1120, 1121, 1124, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1182, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "api": [12, 13, 17, 18, 116, 118, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 135, 137, 139, 153, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 552, 555, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 856, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169, 1176, 1182], "open": [13, 14, 15, 16, 17, 18, 20, 57, 58, 102, 103, 120, 152, 203, 204, 205, 1075, 1077, 1078, 1079, 1080, 1081, 1087, 1090, 1176], "project": [13, 14, 15, 17, 18, 20, 117, 123, 127, 138, 140, 152, 153, 1075, 1076, 1082, 1085, 1211, 1212, 1213, 1214, 1216], "grown": 13, "consider": [13, 118, 121], "recent": [13, 14, 17, 18, 123], "year": [13, 15, 153, 1176], "especi": [13, 17], "deep": [13, 16, 18, 19, 74, 75, 125, 130, 135, 139, 1176], "learn": [13, 14, 17, 19, 116, 126, 135, 141, 152, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1047, 1048, 1049, 1050, 1176, 1211, 1212, 1213, 1214, 1215, 1216], "can": [13, 14, 15, 16, 17, 18, 33, 34, 35, 36, 53, 54, 57, 58, 80, 81, 98, 99, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 203, 207, 208, 209, 242, 245, 273, 291, 292, 293, 294, 295, 362, 384, 385, 386, 856, 884, 887, 888, 939, 940, 985, 1016, 1017, 1018, 1019, 1020, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1176, 1182], "seen": [13, 14, 121, 123, 138, 139], "rapidli": 13, "increas": [13, 985, 995, 998, 1043, 1046, 1051, 1063], "github": [13, 18, 19, 120, 123], "repo": [13, 14, 15, 17, 18, 122, 136, 138, 139, 140, 141, 152, 1176, 1182], "contain": [13, 17, 19, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 61, 62, 65, 66, 67, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 123, 126, 128, 131, 133, 135, 136, 137, 140, 141, 153, 164, 165, 170, 175, 178, 180, 183, 185, 190, 193, 195, 197, 199, 203, 204, 205, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 276, 281, 282, 284, 286, 291, 294, 298, 303, 306, 309, 312, 314, 317, 320, 323, 326, 329, 331, 336, 339, 341, 347, 350, 362, 368, 376, 380, 387, 396, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 502, 503, 505, 507, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 613, 615, 617, 618, 620, 622, 623, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 669, 671, 672, 674, 676, 677, 678, 680, 682, 683, 684, 687, 689, 692, 695, 696, 699, 702, 703, 708, 713, 718, 723, 726, 728, 731, 737, 740, 749, 762, 768, 769, 771, 777, 779, 783, 784, 787, 791, 792, 795, 797, 801, 804, 808, 811, 813, 817, 821, 828, 832, 835, 836, 839, 842, 845, 846, 849, 855, 856, 857, 858, 860, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 898, 902, 905, 907, 910, 912, 915, 917, 919, 920, 923, 925, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 969, 970, 971, 973, 975, 976, 978, 980, 981, 983, 985, 986, 987, 989, 991, 995, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1019, 1021, 1024, 1026, 1027, 1030, 1031, 1035, 1038, 1039, 1043, 1047, 1048, 1049, 1050, 1051, 1064, 1067, 1069, 1070, 1073, 1075, 1076, 1077, 1082, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1107, 1109, 1110, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1169, 1171, 1172, 1174, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "term": [13, 18, 130, 835, 853, 1195, 1205], "time": [13, 14, 15, 17, 18, 19, 61, 62, 106, 107, 118, 119, 123, 126, 130, 131, 136, 139, 141, 153, 791, 797, 799, 813, 815, 835, 853, 985, 1039, 1042, 1047, 1048, 1049, 1050, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1195, 1206, 1207, 1208], "These": [13, 14, 15, 18, 118, 120, 121, 123, 124, 125, 126, 130, 131, 133, 136, 137, 139, 140, 141, 153, 856, 877, 880, 1176, 1182], "ar": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 39, 40, 41, 42, 53, 54, 57, 58, 71, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 94, 95, 98, 99, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 154, 162, 203, 204, 205, 226, 228, 230, 362, 376, 380, 382, 386, 396, 477, 478, 479, 480, 481, 587, 590, 592, 595, 637, 640, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676, 683, 684, 685, 686, 687, 688, 691, 692, 693, 733, 737, 741, 742, 746, 753, 755, 762, 774, 787, 791, 825, 834, 835, 852, 856, 862, 865, 884, 888, 889, 892, 893, 896, 902, 904, 905, 906, 917, 919, 934, 938, 939, 940, 943, 954, 958, 985, 986, 987, 988, 989, 990, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1051, 1053, 1057, 1063, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1176, 1217, 1218], "written": [13, 17, 117, 118, 120, 123, 124, 129, 133, 136, 138, 141, 153], "mani": [13, 14, 15, 17, 18, 19, 74, 75, 118, 120, 121, 123, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 153, 985, 1026], "differ": [13, 14, 15, 17, 18, 39, 40, 71, 74, 75, 76, 77, 116, 117, 118, 120, 121, 123, 124, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 153, 273, 309, 312, 396, 412, 415, 607, 610, 667, 669, 671, 835, 852, 985, 1031, 1034, 1131, 1148, 1151, 1156, 1159, 1176], "while": [13, 14, 17, 18, 71, 74, 75, 76, 77, 121, 123, 127, 133, 134, 140, 141, 153, 396, 587, 590, 592, 595, 1099, 1100, 1104, 1131, 1140, 1143], "thi": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 281, 282, 283, 285, 291, 292, 293, 294, 295, 309, 312, 320, 323, 326, 329, 336, 339, 347, 348, 349, 350, 351, 362, 363, 368, 369, 370, 372, 381, 386, 387, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 720, 723, 724, 725, 726, 727, 728, 729, 730, 732, 745, 756, 763, 768, 769, 770, 772, 779, 780, 781, 782, 791, 792, 793, 794, 796, 797, 799, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 840, 842, 846, 847, 848, 849, 850, 852, 855, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 884, 888, 893, 896, 902, 904, 906, 925, 927, 939, 940, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1031, 1034, 1051, 1057, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1094, 1095, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1127, 1128, 1130, 1131, 1136, 1139, 1140, 1143, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1182, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216], "wonder": [13, 15, 138], "thing": [13, 14, 15, 17, 18, 19, 123, 127, 138, 139], "research": [13, 152], "develop": [13, 14, 15, 16, 17, 18, 19, 152, 153, 1176], "also": [13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 281, 282, 283, 285, 291, 292, 293, 294, 295, 326, 329, 336, 339, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 726, 727, 728, 729, 730, 732, 745, 768, 769, 770, 772, 779, 780, 781, 782, 791, 792, 793, 794, 796, 797, 799, 808, 809, 810, 812, 828, 829, 830, 831, 835, 836, 837, 838, 840, 842, 846, 847, 848, 849, 850, 852, 855, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 902, 904, 906, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1130, 1131, 1136, 1139, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1195, 1205], "consid": [13, 14, 74, 75, 94, 95, 117, 126, 137, 138, 139, 396, 587, 590, 592, 595, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "speed": [13, 123], "evolv": 13, "sharabl": 13, "code": [13, 14, 15, 17, 18, 19, 20, 39, 40, 71, 74, 75, 76, 77, 88, 89, 94, 95, 108, 109, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 153, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 362, 363, 387, 391, 396, 467, 470, 632, 633, 662, 665, 791, 792, 794, 795, 796, 825, 834, 835, 845, 846, 849, 856, 902, 904, 905, 906, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1126, 1128, 1129, 1131, 1132, 1135, 1176, 1182], "significantli": 13, "hinder": [13, 118], "librari": [13, 14, 15, 22, 25, 26, 124, 136, 141, 151, 153, 362, 387, 391, 396, 507, 510, 587, 590, 592, 595, 856, 877, 880, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1176], "outdat": 13, "month": 13, "rigor": [13, 123], "maintain": [13, 18, 1120, 1121, 1124, 1126, 1129], "against": [13, 35, 36, 74, 75, 80, 81, 84, 85, 94, 95, 123, 153, 273, 281, 282, 283, 284, 603, 604, 606, 856, 889, 892, 893, 896, 902, 904, 905, 906, 917, 919, 1094, 1095], "newest": 13, "version": [13, 14, 15, 17, 18, 120, 124, 125, 131, 136, 138, 856, 877, 880, 1176], "For": [13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 43, 44, 88, 89, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 195, 199, 203, 204, 205, 237, 240, 396, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 557, 560, 562, 565, 572, 575, 577, 580, 587, 590, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 791, 808, 809, 810, 811, 812, 833, 856, 884, 888, 934, 938, 939, 940, 949, 953, 985, 986, 989, 1031, 1034, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1144, 1147, 1156, 1159, 1187, 1188], "softwar": [13, 14, 17, 18], "pipelin": [13, 129, 141], "where": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 33, 34, 53, 54, 57, 58, 65, 66, 67, 68, 71, 74, 75, 76, 77, 94, 95, 98, 99, 102, 103, 112, 113, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 153, 203, 225, 226, 227, 229, 237, 240, 396, 432, 435, 502, 505, 567, 570, 607, 610, 627, 630, 683, 741, 745, 754, 791, 825, 834, 856, 877, 880, 902, 904, 905, 906, 917, 919, 920, 923, 934, 938, 939, 943, 949, 953, 954, 958, 985, 986, 987, 988, 989, 990, 995, 998, 999, 1002, 1007, 1010, 1031, 1034, 1043, 1046, 1051, 1052, 1062, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1097, 1131, 1152, 1155, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "rapid": [13, 14, 17], "prototyp": 13, "vital": [13, 141], "signific": [13, 14, 153], "bottleneck": 13, "As": [13, 18, 69, 70, 114, 115, 118, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 153, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "new": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 41, 42, 53, 54, 55, 56, 74, 75, 80, 81, 86, 87, 98, 99, 100, 101, 116, 117, 120, 121, 123, 128, 130, 131, 133, 135, 138, 141, 152, 203, 211, 220, 223, 225, 226, 229, 247, 248, 250, 253, 265, 267, 268, 272, 273, 356, 396, 437, 440, 567, 570, 622, 625, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 757, 758, 760, 761, 768, 770, 771, 772, 773, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 985, 999, 1002, 1016, 1017, 1018, 1019, 1020, 1031, 1034, 1051, 1056, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1176, 1187, 1188, 1195, 1205, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216], "futur": [13, 15, 17, 18, 138, 153, 856, 877, 880], "avail": [13, 17, 18, 41, 42, 86, 87, 120, 124, 132, 153, 362, 367, 377, 378, 379, 393, 683, 708, 709, 710, 711, 712], "specif": [13, 18, 19, 41, 42, 74, 75, 86, 87, 116, 118, 119, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 152, 153, 273, 347, 350, 362, 384, 387, 391, 396, 587, 590, 592, 595, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 752, 856, 877, 880, 944, 948, 985, 1031, 1034, 1047, 1048, 1049, 1050, 1075, 1076, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1176, 1179, 1181, 1182, 1207, 1208], "quickli": [13, 15, 17, 18, 139, 140], "obsolet": [13, 15], "user": [13, 14, 17, 18, 20, 116, 123, 124, 127, 128, 130, 133, 135, 153, 1195, 1206, 1207, 1208], "constantli": 13, "invent": 13, "wheel": 13, "our": [13, 14, 16, 17, 18, 69, 70, 114, 115, 121, 123, 124, 125, 130, 134, 135, 138, 139, 140, 141, 153, 1176], "desir": [13, 18, 35, 36, 74, 75, 80, 81, 124, 273, 276, 279, 291, 292, 293, 294, 295, 362, 387, 391, 683, 741, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "provid": [13, 17, 18, 65, 66, 67, 68, 74, 75, 112, 113, 118, 120, 121, 123, 126, 129, 130, 131, 132, 133, 136, 140, 152, 153, 200, 201, 203, 237, 240, 273, 297, 298, 299, 301, 302, 325, 347, 350, 361, 362, 367, 683, 706, 754, 758, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 856, 954, 958, 985, 1003, 1006, 1031, 1034, 1094, 1095, 1131, 1152, 1155, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1211, 1212, 1213, 1214, 1215, 1216], "simultan": [13, 15], "all": [13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 41, 42, 53, 54, 57, 58, 67, 68, 69, 70, 74, 75, 84, 85, 86, 87, 94, 95, 98, 99, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 154, 162, 200, 201, 203, 204, 205, 255, 257, 259, 260, 262, 264, 362, 376, 382, 603, 604, 606, 683, 684, 687, 691, 692, 733, 755, 768, 770, 779, 780, 781, 782, 783, 835, 853, 856, 902, 905, 929, 932, 944, 948, 959, 963, 985, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1062, 1063, 1064, 1075, 1076, 1087, 1088, 1089, 1090, 1091, 1165, 1170, 1176, 1179, 1181], "modern": [13, 14], "simpl": [13, 17, 18, 117, 120, 121, 123, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 153, 683, 718], "scalabl": [13, 136], "manner": [13, 28, 31, 32, 74, 75, 117, 120, 123, 132, 139, 152, 153, 1051, 1063], "must": [13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 120, 121, 126, 129, 130, 131, 132, 136, 140, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 362, 386, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1211, 1215], "determin": [13, 22, 23, 24, 25, 26, 39, 40, 49, 50, 67, 68, 71, 72, 73, 74, 75, 76, 77, 84, 85, 94, 95, 112, 113, 120, 125, 126, 130, 131, 132, 164, 195, 196, 197, 198, 199, 273, 291, 294, 296, 308, 325, 326, 329, 331, 334, 336, 339, 341, 344, 361, 362, 377, 378, 379, 393, 396, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 502, 503, 504, 505, 506, 507, 509, 510, 511, 517, 518, 519, 521, 532, 535, 537, 540, 542, 545, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 597, 600, 607, 608, 609, 610, 611, 627, 628, 629, 630, 631, 632, 633, 635, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 683, 684, 687, 691, 692, 740, 742, 746, 747, 748, 749, 750, 774, 790, 791, 808, 811, 835, 854, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 884, 887, 889, 892, 902, 904, 905, 906, 912, 915, 917, 919, 925, 927, 929, 932, 949, 953, 954, 958, 959, 963, 1047, 1048, 1049, 1050, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "exactli": [13, 15, 121, 130, 132, 1176, 1182], "common": [13, 19, 74, 75, 119, 121, 126, 128, 130, 132, 134, 153], "ground": [13, 123], "li": 13, "between": [13, 51, 52, 71, 74, 75, 76, 77, 84, 85, 96, 97, 118, 121, 123, 125, 126, 129, 130, 135, 137, 138, 139, 141, 152, 203, 204, 205, 273, 309, 312, 396, 432, 435, 603, 604, 606, 627, 630, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 999, 1002, 1031, 1034, 1051, 1057, 1075, 1077, 1080, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1176, 1211, 1213], "find": [13, 17, 18, 74, 75, 123, 136, 139, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1176], "exist": [13, 14, 17, 19, 20, 22, 25, 26, 53, 54, 71, 74, 75, 76, 77, 98, 99, 119, 120, 121, 122, 123, 126, 127, 128, 133, 136, 153, 683, 706, 985, 1016, 1017, 1018, 1019, 1020, 1211, 1215], "essenti": [13, 14, 19, 121, 126, 132], "order": [13, 17, 18, 20, 71, 74, 75, 76, 77, 94, 95, 118, 120, 121, 124, 125, 127, 129, 130, 131, 132, 138, 139, 141, 153, 396, 432, 435, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 856, 877, 880, 893, 896, 934, 938, 939, 943, 959, 963, 985, 1003, 1006, 1047, 1048, 1049, 1094, 1097, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1217, 1218], "design": [13, 14, 116, 125, 133, 136, 138, 153], "univers": 13, "abstract": [13, 130, 140, 153, 362, 363, 1211, 1215], "In": [13, 15, 17, 18, 53, 54, 98, 99, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 362, 381, 387, 391, 392, 395, 396, 412, 415, 607, 610, 632, 635, 683, 689, 745, 985, 1016, 1017, 1018, 1019, 1020, 1075, 1087, 1090, 1176], "search": [13, 17, 28, 31, 32, 60, 74, 75, 105, 117, 121, 123, 1095, 1096, 1097, 1098], "languag": [13, 15, 136], "first": [13, 14, 17, 18, 20, 22, 25, 26, 39, 40, 61, 62, 71, 76, 77, 84, 85, 106, 107, 118, 121, 123, 125, 126, 128, 129, 130, 136, 138, 139, 141, 200, 201, 203, 231, 232, 234, 235, 273, 346, 356, 362, 367, 396, 412, 413, 414, 415, 416, 432, 433, 434, 436, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 492, 493, 495, 517, 520, 522, 523, 527, 528, 530, 547, 548, 550, 552, 553, 555, 577, 578, 580, 582, 583, 585, 592, 593, 595, 597, 598, 600, 607, 608, 610, 617, 618, 620, 627, 628, 630, 667, 668, 669, 670, 671, 683, 691, 791, 801, 802, 856, 862, 865, 872, 875, 877, 880, 884, 888, 889, 892, 912, 915, 920, 923, 934, 938, 939, 940, 944, 948, 954, 958, 985, 991, 994, 1021, 1024, 1031, 1034, 1035, 1038, 1047, 1048, 1049, 1050, 1051, 1052, 1061, 1062, 1075, 1093, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1195, 1206, 1207, 1208, 1211, 1215], "see": [13, 16, 17, 18, 19, 22, 25, 26, 39, 40, 65, 66, 67, 68, 71, 76, 77, 84, 85, 94, 95, 112, 113, 118, 122, 125, 126, 130, 132, 138, 139, 152, 153, 203, 204, 205, 220, 223, 231, 232, 234, 235, 273, 286, 289, 347, 350, 396, 412, 413, 414, 415, 416, 432, 433, 434, 436, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 487, 488, 489, 490, 491, 492, 493, 494, 496, 507, 510, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 547, 548, 549, 550, 551, 552, 553, 554, 556, 577, 578, 579, 580, 581, 582, 583, 584, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 856, 884, 888, 902, 904, 905, 906, 917, 919, 929, 932, 939, 940, 954, 958, 959, 963, 1094, 1096, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "clear": [13, 14, 15, 18, 19, 121, 131, 132, 136, 138, 362, 366], "front": [13, 135, 136, 139, 1176, 1182], "runner": 13, "look": [13, 17, 18, 20, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 132, 136, 138, 140, 141, 1176], "littl": [13, 138], "deeper": [13, 18, 116, 135, 1051, 1062, 1063], "follow": [13, 14, 17, 18, 19, 20, 74, 75, 86, 87, 117, 120, 121, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 153, 273, 320, 323, 362, 386, 396, 632, 635, 683, 743, 744, 745, 768, 770, 771, 772, 773, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 854, 855, 856, 920, 923, 959, 963, 1051, 1057, 1063, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1176, 1195, 1205, 1211, 1215], "same": [13, 15, 17, 18, 20, 28, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 57, 58, 61, 62, 65, 66, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 103, 106, 107, 110, 111, 117, 118, 119, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 138, 140, 141, 153, 203, 204, 205, 212, 213, 215, 226, 227, 228, 229, 230, 237, 240, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 362, 386, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 412, 415, 417, 418, 427, 428, 447, 448, 449, 450, 451, 457, 458, 459, 461, 472, 473, 474, 475, 476, 512, 513, 514, 515, 516, 607, 610, 612, 613, 614, 616, 622, 623, 624, 626, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 678, 679, 680, 681, 682, 683, 719, 723, 726, 728, 729, 730, 731, 732, 754, 757, 758, 791, 808, 809, 810, 811, 812, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 907, 910, 917, 919, 920, 923, 929, 932, 934, 938, 949, 953, 954, 958, 985, 991, 994, 1003, 1006, 1007, 1010, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1047, 1048, 1049, 1051, 1064, 1075, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "core": [13, 17, 19, 132, 136, 141, 362, 378, 1176], "principl": 13, "oper": [13, 17, 19, 22, 25, 26, 35, 36, 47, 48, 71, 74, 75, 76, 77, 80, 81, 92, 93, 120, 121, 123, 124, 126, 129, 130, 132, 133, 139, 140, 203, 231, 232, 234, 235, 273, 347, 348, 349, 350, 351, 396, 412, 415, 462, 465, 467, 470, 527, 530, 612, 615, 617, 620, 632, 635, 662, 665, 683, 693, 707, 708, 711, 713, 716, 774, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852], "expos": [13, 136, 140, 683, 701], "almost": [13, 18, 125, 130, 137, 139], "ident": [13, 15, 74, 75, 119, 124, 125, 126, 128, 130, 138, 139, 153, 362, 376, 1051, 1064, 1176], "uniqu": [13, 61, 62, 106, 107, 123, 125, 126, 130, 153, 1047, 1048, 1049, 1050, 1051, 1057, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119], "syntax": [13, 14, 134], "There": [13, 17, 18, 121, 124, 126, 129, 130, 131, 134, 136, 139, 153], "onli": [13, 16, 17, 18, 22, 25, 26, 57, 58, 74, 75, 102, 103, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 362, 382, 396, 587, 590, 592, 595, 856, 889, 892, 920, 923, 985, 1003, 1006, 1051, 1052, 1053, 1061, 1062, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1131, 1140, 1143, 1176, 1211, 1212, 1213, 1214, 1215, 1216], "so": [13, 14, 17, 18, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 836, 837, 838, 840, 846, 847, 848, 850, 857, 858, 859, 861, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1051, 1052, 1062, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1176], "wai": [13, 14, 17, 123, 127, 133, 138, 139, 140, 141, 153], "manipul": [13, 54, 99, 117, 141, 152, 986, 989, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1019, 1021, 1024, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046], "unsurprisingli": [13, 121], "fundament": [13, 130, 136], "consist": [13, 74, 75, 129, 131, 133, 856, 877, 880, 1131, 1132, 1135, 1207, 1208], "each": [13, 14, 15, 17, 18, 19, 23, 24, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 53, 54, 61, 62, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 92, 93, 94, 95, 98, 99, 106, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 152, 153, 164, 175, 178, 180, 183, 190, 193, 195, 196, 197, 198, 199, 203, 237, 240, 273, 281, 282, 283, 284, 285, 362, 386, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 492, 495, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 582, 585, 587, 589, 590, 591, 592, 595, 597, 600, 607, 610, 612, 613, 614, 615, 616, 617, 620, 622, 623, 624, 625, 626, 627, 630, 632, 633, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 877, 880, 889, 892, 902, 904, 905, 906, 907, 910, 917, 919, 929, 932, 934, 938, 985, 995, 998, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1026, 1031, 1034, 1039, 1042, 1043, 1046, 1051, 1057, 1064, 1075, 1076, 1094, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1131, 1132, 1135, 1176, 1182, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "veri": [13, 14, 17, 18, 117, 118, 121, 123, 126, 130, 132, 133, 137, 139, 140, 141, 153, 1176], "similar": [13, 117, 123, 128, 130, 131, 132, 139, 153, 396, 632, 635, 835, 854, 884, 888, 939, 940, 1195, 1206], "convent": [13, 152, 856, 889, 892, 1131, 1132, 1135], "those": [13, 17, 18, 19, 53, 54, 74, 75, 98, 99, 123, 128, 130, 136, 141, 203, 204, 205, 791, 833, 856, 884, 888, 920, 923, 934, 938, 939, 940, 985, 986, 987, 988, 989, 990], "introduc": [13, 130, 139, 985, 1021, 1024, 1099, 1100, 1104], "2006": 13, "layer": [13, 48, 55, 56, 93, 100, 101, 117, 120, 136, 137, 140, 836, 839, 841, 842, 843, 844, 845, 846, 849, 851, 852, 853, 854, 855, 1069, 1070, 1071, 1072, 1073, 1074, 1176, 1189, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218], "therefor": [13, 18, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 472, 475, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 872, 875, 985, 1021, 1024, 1069, 1070, 1073, 1099, 1105, 1109, 1131, 1136, 1139, 1165, 1166, 1169], "present": [13, 18, 74, 75, 118, 122, 130, 131, 132, 133, 136], "itself": [13, 17, 18, 118, 124, 130, 133, 140, 152, 153, 683, 689, 1051, 1063], "cut": 13, "cloth": 13, "adher": [13, 14, 120, 122, 136, 141], "semant": [13, 136, 141, 396, 632, 635], "round": [13, 14, 15, 17, 18, 19, 20, 39, 40, 84, 85, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 396, 412, 415, 472, 473, 474, 475, 476, 512, 513, 514, 515, 516, 517, 520, 607, 610, 641, 657, 660, 678, 679, 680, 681, 682, 1176], "up": [13, 14, 15, 16, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153], "hopefulli": [13, 14, 15, 17, 18, 19, 20, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152], "paint": [13, 136], "pictur": [13, 136], "how": [13, 15, 16, 17, 18, 19, 20, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 152, 153, 1176, 1182, 1195, 1206, 1207, 1208], "pleas": [13, 14, 15, 17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1176], "check": [13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 43, 44, 74, 75, 88, 89, 119, 123, 128, 130, 135, 136, 138, 139, 140, 141, 152, 273, 296, 314, 315, 317, 318, 325, 331, 334, 341, 344, 361, 362, 374, 375, 381, 395, 683, 693, 718, 721, 722, 737, 740, 747, 748, 749, 750, 762, 774, 787, 790, 791, 808, 809, 810, 811, 812, 856, 877, 880, 1051, 1052, 1061, 1062, 1063, 1176], "out": [13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 303, 305, 307, 362, 387, 388, 389, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1203], "discuss": [13, 14, 15, 16, 17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 1176], "faq": [13, 14, 15, 136, 138, 139, 140, 141, 152], "reach": [13, 14, 15, 17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1051, 1063], "discord": [13, 14, 15, 17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1176], "you": [13, 14, 15, 16, 17, 18, 19, 20, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 1176, 1182], "question": [13, 14, 15, 17, 18, 121, 123, 136, 138, 139, 140, 141, 152, 153, 1176], "With": [14, 15, 17, 22, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 65, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 121, 123, 124, 136, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 203, 226, 227, 228, 229, 230, 237, 240, 268, 272, 273, 281, 282, 283, 284, 285, 291, 294, 303, 306, 308, 309, 312, 320, 323, 336, 339, 347, 350, 352, 362, 380, 396, 397, 400, 402, 405, 407, 410, 412, 415, 416, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 457, 460, 461, 467, 470, 472, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 507, 510, 512, 515, 517, 518, 519, 520, 521, 522, 525, 527, 530, 537, 540, 547, 550, 552, 555, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 676, 677, 683, 684, 685, 686, 687, 688, 692, 696, 697, 698, 699, 700, 702, 703, 718, 723, 726, 728, 731, 732, 768, 771, 777, 779, 780, 781, 782, 783, 784, 791, 792, 793, 795, 808, 809, 810, 811, 812, 828, 829, 830, 831, 832, 835, 836, 839, 842, 845, 846, 849, 855, 856, 857, 860, 861, 862, 865, 867, 870, 872, 875, 893, 896, 902, 904, 905, 906, 939, 943, 944, 948, 969, 970, 973, 974, 975, 979, 980, 983, 984, 985, 986, 989, 990, 999, 1002, 1003, 1006, 1011, 1014, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1108, 1109, 1120, 1121, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1160, 1162, 1164, 1165, 1166, 1169], "central": 14, "goal": [14, 19], "being": [14, 15, 17, 18, 74, 75, 118, 121, 123, 128, 129, 130, 131, 132, 133, 134, 136, 139, 152, 153, 203, 204, 205, 683, 756, 763, 1099, 1110, 1114, 1176], "would": [14, 17, 18, 20, 53, 54, 98, 99, 116, 118, 120, 121, 123, 127, 128, 129, 130, 133, 135, 136, 138, 140, 141, 153, 164, 185, 188, 362, 387, 391, 985, 1016, 1017, 1018, 1019, 1020, 1176], "entir": [14, 15, 18, 65, 66, 67, 68, 74, 75, 110, 111, 112, 113, 121, 122, 123, 129, 130, 133, 138, 139, 140, 141, 153, 362, 386, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1204], "forgiven": 14, "rais": [14, 18, 53, 54, 57, 58, 67, 68, 74, 75, 98, 99, 102, 103, 112, 113, 119, 133, 134, 136, 138, 273, 286, 289, 396, 502, 505, 627, 630, 683, 693, 735, 745, 760, 773, 785, 791, 825, 834, 856, 889, 892, 898, 900, 954, 958, 985, 1016, 1017, 1018, 1019, 1020, 1027, 1030, 1031, 1034, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1097, 1131, 1136, 1139, 1144, 1147, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1207, 1208, 1211, 1215], "an": [14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 49, 50, 53, 54, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 102, 103, 106, 107, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 164, 175, 178, 180, 183, 190, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 294, 309, 312, 320, 323, 326, 329, 336, 339, 347, 348, 349, 350, 351, 362, 387, 391, 396, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 495, 497, 498, 502, 503, 505, 507, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 613, 615, 617, 618, 620, 622, 623, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 665, 667, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 694, 695, 696, 697, 698, 699, 700, 702, 719, 720, 723, 726, 741, 745, 747, 748, 749, 750, 779, 783, 784, 785, 791, 808, 809, 810, 811, 812, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 842, 846, 849, 855, 856, 857, 858, 860, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 888, 889, 892, 898, 900, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 940, 949, 953, 954, 958, 959, 963, 985, 986, 987, 989, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1051, 1057, 1069, 1070, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1093, 1094, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1187, 1188, 1207, 1208, 1211, 1212, 1213, 1215], "eyebrow": 14, "somehow": 14, "pytorch": [14, 15, 19, 118, 124, 125, 126, 131, 132, 133, 136, 138, 141, 153, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1176, 1211, 1212, 1213, 1214, 1215, 1216], "other": [14, 17, 18, 22, 25, 26, 35, 36, 41, 42, 65, 66, 71, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 117, 120, 121, 123, 124, 125, 126, 129, 130, 133, 134, 136, 138, 140, 141, 151, 152, 153, 200, 201, 203, 204, 205, 281, 282, 283, 396, 507, 510, 603, 604, 606, 683, 684, 685, 686, 687, 688, 689, 791, 801, 802, 1075, 1087, 1090, 1099, 1110, 1114, 1131, 1152, 1155, 1160, 1162, 1164, 1176], "strong": [14, 153], "industri": 14, "back": [14, 128, 129, 135, 136, 138, 153, 683, 759, 786, 1176, 1182, 1207, 1208, 1211, 1215], "momentum": 14, "won": [14, 15, 18, 141], "ad": [14, 17, 18, 19, 114, 115, 117, 118, 120, 121, 123, 124, 126, 128, 129, 130, 131, 133, 136, 140, 153, 683, 768, 771, 773, 856, 877, 880, 985, 999, 1002, 1217, 1218], "just": [14, 15, 17, 18, 120, 121, 123, 124, 125, 126, 128, 133, 136, 138, 139, 153, 1131, 1132, 1135, 1195, 1204], "make": [14, 15, 17, 18, 19, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141], "problem": [14, 18, 129, 138], "even": [14, 15, 17, 18, 118, 120, 126, 131, 132, 138, 139, 140, 141, 153, 396, 627, 630, 637, 640], "wors": 14, "rather": [14, 18, 43, 44, 74, 75, 88, 89, 117, 120, 123, 130, 141, 153, 203, 204, 205, 362, 386, 683, 747, 748, 750, 791, 808, 809, 810, 811, 812], "funni": 14, "comic": 14, "strip": 14, "easi": [14, 17, 18, 125, 126, 130], "feasibl": 14, "space": [14, 203, 204, 205, 231, 232, 234, 235, 683, 720, 791, 825, 834], "case": [14, 17, 18, 19, 28, 31, 32, 53, 54, 65, 66, 71, 74, 75, 76, 77, 94, 95, 98, 99, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 153, 164, 195, 199, 203, 237, 240, 362, 381, 392, 395, 396, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 467, 470, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 557, 560, 562, 565, 572, 575, 577, 580, 587, 590, 607, 610, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 683, 745, 757, 758, 856, 893, 896, 985, 1016, 1017, 1018, 1019, 1020, 1051, 1054, 1060, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1195, 1206, 1207, 1208, 1211, 1215], "unlik": [14, 121, 130], "charger": 14, "charact": [14, 134], "encod": [14, 139, 683, 720], "instant": [14, 1176], "messag": [14, 18, 134, 136, 138, 1220, 1221], "much": [14, 17, 18, 117, 129, 130, 133, 136, 138, 139], "doe": [14, 18, 20, 74, 75, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 131, 133, 136, 138, 139, 153, 396, 467, 470, 683, 745, 884, 888, 939, 940, 985, 1026], "mandat": [14, 123, 133], "adopt": [14, 18, 129], "continu": [14, 15, 122, 123, 134, 153], "own": [14, 15, 17, 119, 120, 123, 134, 136, 153], "signatur": [14, 117, 118, 120, 121, 123, 130, 131, 132, 133, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139], "replac": [14, 18, 20, 53, 54, 74, 75, 98, 99, 121, 123, 128, 130, 131, 132, 136, 138, 141, 153, 683, 757, 758, 985, 986, 987, 988, 989, 990, 1075, 1076], "your": [14, 15, 16, 17, 19, 20, 117, 120, 139, 140, 153, 1176], "10": [14, 17, 20, 39, 40, 57, 58, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 121, 123, 125, 130, 136, 138, 139, 203, 225, 226, 228, 229, 230, 234, 235, 236, 396, 407, 408, 409, 410, 411, 442, 445, 447, 450, 482, 483, 484, 485, 486, 507, 510, 527, 530, 552, 555, 562, 563, 564, 565, 566, 652, 653, 654, 655, 656, 657, 660, 683, 703, 723, 726, 756, 763, 768, 770, 771, 772, 791, 813, 814, 815, 816, 835, 836, 838, 839, 840, 845, 856, 867, 870, 872, 875, 912, 915, 939, 943, 944, 948, 985, 1003, 1006, 1026, 1027, 1029, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1094, 1097, 1099, 1100, 1104, 1131, 1132, 1135, 1136, 1139, 1160, 1162, 1164, 1211, 1213], "100": [14, 15, 123, 139, 140, 141, 153, 396, 657, 660, 1176], "despit": [14, 130, 132], "distinct": [14, 17, 120, 130, 133, 135, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1176], "still": [14, 18, 74, 75, 120, 123, 131, 138, 140, 153, 1176], "believ": [14, 18], "share": [14, 74, 75, 121, 123, 125, 126, 127, 130, 136, 273, 356], "bring": [14, 123, 136, 137], "benefit": [14, 15, 17, 18, 129, 130, 133, 138, 139, 153], "unrel": [14, 18], "what": [14, 15, 18, 116, 118, 120, 121, 123, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 1176], "again": [14, 15, 18, 117, 121, 123, 130, 133, 139, 141, 153], "contrari": 14, "bumpi": 14, "road": 14, "allud": [14, 139], "most": [14, 17, 74, 75, 117, 118, 123, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 153, 856, 877, 880], "technologi": 14, "sector": [14, 39, 40, 84, 85, 396, 407, 408, 409, 410, 411, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441], "full": [14, 15, 18, 22, 25, 26, 71, 76, 77, 118, 120, 123, 131, 136, 153, 203, 273, 309, 312, 396, 527, 530, 552, 555, 835, 845, 856, 902, 905, 920, 923, 929, 932, 934, 938], "success": 14, "reason": [14, 18, 117, 121, 126, 129, 130, 131, 133, 136, 138, 396, 632, 635], "build": [14, 16, 17, 126, 135, 137, 140, 141, 153, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1176, 1195, 1206, 1207, 1208], "custom": [14, 123, 140], "comput": [14, 15, 17, 22, 25, 26, 39, 40, 41, 42, 43, 44, 51, 52, 65, 66, 72, 73, 74, 75, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 110, 111, 123, 124, 126, 130, 136, 139, 153, 185, 187, 189, 362, 386, 396, 412, 415, 442, 445, 457, 460, 467, 470, 492, 495, 497, 498, 499, 500, 501, 522, 525, 527, 530, 547, 550, 552, 555, 582, 585, 587, 590, 592, 595, 597, 600, 603, 604, 606, 607, 610, 612, 615, 617, 620, 683, 695, 696, 697, 698, 699, 700, 703, 704, 791, 792, 795, 797, 799, 801, 802, 804, 806, 813, 815, 817, 819, 821, 823, 825, 826, 828, 829, 830, 831, 832, 834, 835, 836, 839, 841, 842, 843, 844, 845, 846, 849, 852, 854, 856, 857, 860, 862, 865, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 920, 923, 925, 927, 929, 932, 934, 938, 954, 958, 959, 963, 969, 970, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1051, 1057, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164], "thank": [14, 139], "interoper": 14, "compon": [14, 136, 791, 825, 834], "bio": [14, 17], "hardwar": [14, 17], "initi": [14, 18, 71, 74, 75, 76, 77, 123, 127, 131, 132, 835, 853, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1211, 1215], "pcie": 14, "interfac": [14, 141, 153], "motherboard": 14, "raid": 14, "storag": [14, 139], "virtual": [14, 18, 20], "bluetooth": 14, "wireless": 14, "exchang": 14, "btx": 14, "form": [14, 16, 28, 29, 30, 31, 32, 33, 34, 49, 50, 74, 75, 94, 95, 123, 126, 140, 141, 203, 207, 208, 209, 242, 245, 255, 257, 259, 260, 262, 264, 683, 689, 776, 778, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953, 1051, 1053, 1063], "factor": [14, 43, 44, 47, 48, 49, 50, 88, 89, 92, 93, 94, 95, 362, 384, 385, 386, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 817, 819, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 857, 858, 859, 860, 861, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1211, 1212, 1213, 1214], "sata": 14, "connect": [14, 17, 140, 141, 1195, 1205, 1206], "host": [14, 153], "bu": 14, "adapt": [14, 791, 817, 819, 1211, 1214], "devic": [14, 18, 22, 25, 26, 33, 34, 38, 41, 42, 57, 58, 74, 75, 78, 79, 83, 86, 87, 102, 103, 116, 117, 119, 125, 126, 128, 131, 138, 139, 153, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 683, 721, 722, 723, 726, 728, 729, 730, 731, 732, 754, 757, 758, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1187, 1188, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "html": [14, 20, 120, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139], "enabl": [14, 17, 18, 71, 74, 75, 76, 77, 123, 126, 128, 129, 130, 133, 135, 136, 137, 139, 141, 153, 791, 825, 834], "anyon": [14, 16, 153], "websit": 14, "tcp": 14, "ip": 14, "node": [14, 74, 75, 130, 1051, 1052, 1061, 1062], "commun": [14, 16, 18, 19, 153, 1176, 1182], "network": [14, 126, 130, 136, 140, 152, 835, 852, 1176, 1184, 1195, 1207, 1208], "smtp": 14, "possibl": [14, 16, 17, 18, 19, 53, 54, 98, 99, 120, 121, 123, 130, 131, 133, 136, 139, 152, 153, 683, 751, 985, 1016, 1017, 1018, 1019, 1020, 1131, 1136, 1139, 1144, 1147], "send": 14, "gmail": 14, "outlook": 14, "pop": 14, "u": [14, 16, 17, 18, 49, 50, 94, 95, 123, 125, 130, 133, 140, 153, 856, 857, 858, 859, 860, 861, 934, 938, 1176], "email": 14, "ieee": [14, 202, 273, 309, 312, 396, 412, 415, 507, 510, 607, 610, 632, 635, 657, 660], "754": [14, 202, 273, 309, 312, 396, 412, 415, 507, 510, 607, 610, 632, 635, 657, 660], "allow": [14, 18, 123, 124, 125, 128, 136, 153, 203, 231, 232, 234, 235, 683, 751, 1207, 1208], "calcul": [14, 51, 52, 65, 66, 71, 74, 75, 76, 77, 96, 97, 120, 164, 195, 199, 396, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 477, 480, 482, 485, 487, 490, 502, 505, 507, 510, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 607, 610, 627, 630, 647, 650, 652, 655, 657, 660, 667, 671, 672, 676, 677, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "live": [14, 15], "depend": [14, 17, 18, 22, 25, 26, 120, 123, 124, 128, 130, 131, 136, 153, 164, 195, 199, 273, 276, 279, 396, 397, 400, 402, 405, 407, 410, 417, 420, 422, 425, 427, 430, 432, 435, 477, 480, 482, 485, 502, 505, 507, 510, 557, 560, 562, 565, 567, 570, 572, 575, 627, 630, 647, 650, 652, 655, 672, 676, 677, 856, 877, 880, 920, 923, 929, 932, 934, 938, 1094, 1098, 1120, 1121, 1124, 1126, 1129], "did": [14, 19, 141], "aris": [14, 153], "until": [14, 18, 134, 153, 1176], "substanti": [14, 18, 123, 129], "innov": 14, "growth": 14, "usag": [14, 136, 153, 362, 386], "relev": [14, 17, 18, 19, 121, 130, 131, 139, 1211, 1212, 1213, 1214, 1215, 1216], "area": [14, 39, 40, 84, 85, 133, 151, 396, 407, 408, 409, 410, 411, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 1176], "necess": 14, "parti": [14, 153], "could": [14, 15, 17, 18, 121, 123, 128, 130, 131, 133, 136, 138, 139, 140, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "easili": [14, 18, 139, 140, 141, 153, 1176], "engag": [14, 16, 17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "regard": [14, 130], "effect": [14, 65, 66, 118, 120, 129, 130, 153, 203, 237, 240, 791, 821, 823, 1131, 1152, 1155, 1160, 1162, 1164], "2015": 14, "sinc": [14, 17, 18, 123, 153], "alongsid": 14, "machin": [14, 17, 94, 95, 126, 152, 273, 309, 312, 320, 323, 856, 902, 904, 905, 906, 917, 919], "given": [14, 15, 17, 18, 19, 20, 41, 42, 51, 52, 53, 54, 57, 58, 74, 75, 86, 87, 96, 97, 98, 99, 102, 103, 117, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 203, 204, 205, 211, 231, 232, 234, 235, 273, 302, 362, 373, 381, 383, 384, 385, 386, 392, 395, 683, 703, 704, 728, 729, 730, 731, 732, 757, 758, 764, 789, 791, 792, 795, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 836, 839, 841, 842, 843, 844, 845, 846, 849, 856, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 999, 1002, 1003, 1006, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1026, 1039, 1042, 1051, 1058, 1059, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1120, 1126, 1129, 1187, 1188], "frame": [14, 152], "less": [14, 18, 22, 25, 26, 39, 40, 57, 58, 65, 66, 84, 85, 94, 95, 102, 103, 118, 121, 130, 135, 136, 396, 402, 405, 407, 410, 417, 420, 432, 435, 472, 475, 551, 557, 560, 562, 565, 572, 575, 627, 630, 632, 635, 642, 645, 657, 660, 856, 902, 904, 905, 906, 917, 919, 959, 963, 1075, 1087, 1088, 1089, 1090, 1091, 1131, 1160, 1162, 1164], "matur": [14, 153], "state": [14, 118, 120, 123, 135, 136, 137, 139, 152, 273, 360, 396, 607, 610, 683, 734, 767, 786, 787, 788, 835, 853, 1176, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "than": [14, 18, 22, 25, 26, 43, 44, 57, 58, 61, 62, 65, 66, 74, 75, 88, 89, 94, 95, 102, 103, 106, 107, 117, 121, 123, 130, 133, 136, 139, 140, 141, 153, 203, 204, 205, 273, 309, 312, 362, 386, 396, 402, 405, 407, 410, 417, 420, 432, 435, 452, 455, 462, 465, 472, 475, 512, 515, 517, 520, 557, 560, 562, 565, 572, 575, 602, 627, 630, 632, 635, 642, 645, 657, 660, 678, 682, 683, 747, 748, 750, 791, 808, 809, 810, 811, 812, 856, 862, 865, 889, 892, 902, 904, 905, 906, 917, 919, 959, 963, 985, 986, 989, 1003, 1006, 1027, 1030, 1075, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1131, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "preced": [14, 140], "mention": [14, 17, 18, 118, 121, 126, 133], "aros": 14, "70": [14, 856, 912, 915, 1131, 1132, 1135], "80": [14, 856, 912, 915, 1131, 1132, 1135], "90": [14, 84, 85, 396, 467, 470, 637, 639, 640, 641, 856, 912, 915, 1131, 1132, 1135], "effort": [14, 16, 123, 153], "stage": [14, 16, 18, 20, 116, 134, 1176], "complet": [14, 18, 19, 74, 75, 129, 130, 138, 139, 856, 920, 923], "natur": [14, 121, 129, 130, 152, 396, 502, 505, 557, 560, 567, 570, 856, 925, 927], "like": [14, 17, 18, 20, 43, 44, 88, 89, 116, 117, 118, 120, 121, 123, 124, 125, 128, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 791, 808, 809, 810, 811, 812, 1075, 1087, 1090, 1176], "certainli": 14, "mission": [14, 1176], "creat": [14, 16, 17, 18, 20, 33, 34, 41, 42, 57, 58, 74, 75, 78, 79, 86, 87, 102, 103, 116, 119, 123, 124, 125, 128, 131, 132, 133, 136, 137, 140, 151, 152, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 265, 267, 268, 269, 270, 271, 272, 683, 723, 726, 728, 729, 730, 731, 732, 754, 757, 758, 777, 791, 828, 832, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1176, 1182, 1187, 1188, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "At": [14, 19, 119], "process": [14, 15, 16, 17, 18, 20, 123, 125, 126, 130, 136, 141, 362, 381, 395], "ourselv": 14, "lead": [14, 15, 71, 74, 75, 76, 77, 153, 856, 920, 923, 934, 938], "quansight": 14, "compani": 14, "made": [14, 18, 19, 130, 133, 136, 138], "organ": [14, 117, 126, 129, 130], "panda": 14, "scipi": 14, "conda": [14, 17, 20], "dask": [14, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "apach": 14, "onnx": 14, "scikit": 14, "jupyt": 14, "aw": 14, "cupi": 14, "net": [14, 15, 136, 141], "sympi": 14, "rai": [14, 396, 432, 435], "modin": 14, "spyder": 14, "includ": [14, 18, 19, 33, 34, 65, 66, 67, 68, 74, 75, 112, 113, 117, 118, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 152, 153, 203, 204, 205, 207, 208, 209, 242, 245, 683, 740, 790, 856, 959, 963, 1051, 1052, 1075, 1087, 1090, 1094, 1096, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1179, 1181, 1195, 1205, 1206, 1209, 1210], "member": [14, 18], "googl": [14, 1176], "octoml": 14, "einop": [14, 41, 42, 74, 75, 86, 87, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "further": [14, 15, 18, 20, 121, 124, 129, 135, 139, 140, 1176], "sponsor": 14, "lg": 14, "electron": 14, "microsoft": 14, "d": [14, 15, 16, 17, 47, 48, 92, 93, 116, 130, 139, 683, 692, 702, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 872, 875, 912, 915, 1051, 1054, 1067, 1068, 1176, 1182], "shaw": 14, "co": [14, 39, 40, 84, 85, 136, 152, 396, 481, 683, 720, 1176], "intel": 14, "togeth": [14, 74, 75, 129, 130, 134, 140, 141, 153, 1217, 1218], "major": [14, 123, 124, 131, 132, 153, 1094, 1097], "involv": [14, 16, 20, 35, 36, 80, 81, 116, 131, 141, 273, 347, 348, 349, 350, 351, 396, 412, 415, 607, 610, 1176, 1182], "anoth": [14, 17, 18, 74, 75, 84, 85, 123, 124, 125, 126, 130, 131, 138, 141, 203, 220, 223, 273, 281, 284, 291, 294, 603, 604, 606], "promis": 14, "sign": [14, 17, 39, 40, 84, 85, 137, 141, 203, 204, 205, 396, 397, 400, 412, 415, 432, 435, 462, 465, 607, 610, 632, 633, 634, 635, 636, 646, 856, 925, 927, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1148, 1151, 1156, 1159], "pursuit": 14, "unif": [14, 16, 138, 1176, 1182], "clearli": [14, 18, 19, 121, 123], "lot": [14, 15, 128, 138, 153], "thought": [14, 17, 18, 118], "care": [14, 18, 141], "attent": [14, 18, 129, 130, 835, 854, 855, 1195, 1206], "gone": [14, 135], "simplifi": [14, 136, 137, 138, 140], "compat": [14, 22, 25, 26, 39, 40, 53, 54, 65, 66, 67, 68, 71, 76, 77, 84, 85, 94, 95, 98, 99, 112, 113, 118, 119, 153, 273, 286, 289, 396, 412, 413, 414, 415, 416, 432, 433, 434, 435, 436, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 856, 902, 904, 905, 906, 917, 919, 929, 932, 944, 948, 954, 958, 959, 963, 985, 1016, 1017, 1018, 1019, 1020, 1094, 1096, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "excit": [14, 16, 116, 1176], "complianc": 14, "hope": [14, 153], "due": [14, 17, 22, 25, 26, 124, 130, 133, 396, 607, 610], "suit": [14, 17, 116, 122, 123, 139, 152], "some": [14, 15, 17, 18, 19, 74, 75, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 152, 153, 362, 363, 396, 507, 510, 791, 792, 795, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 833, 835, 851, 1176, 1195, 1203], "motiv": [14, 138], "great": [14, 15, 18, 123, 136, 138], "convinc": 14, "celebr": 14, "encourag": [14, 152, 153, 1176, 1182], "foundat": 14, "point": [15, 18, 23, 24, 39, 40, 49, 50, 57, 58, 65, 66, 72, 73, 84, 85, 94, 95, 102, 103, 110, 111, 118, 120, 121, 123, 129, 133, 136, 138, 139, 152, 164, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 209, 211, 217, 218, 225, 247, 248, 265, 267, 273, 276, 279, 309, 312, 331, 334, 347, 350, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 467, 470, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 515, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 607, 610, 627, 630, 632, 635, 637, 640, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 672, 673, 674, 675, 676, 677, 678, 682, 856, 857, 858, 859, 860, 861, 867, 870, 877, 880, 881, 883, 884, 887, 902, 904, 905, 906, 917, 919, 920, 923, 929, 932, 934, 938, 959, 963, 1075, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164], "mai": [15, 17, 18, 22, 25, 26, 39, 40, 84, 85, 123, 124, 130, 138, 140, 203, 204, 205, 220, 223, 362, 387, 391, 396, 492, 493, 494, 495, 496, 527, 530, 552, 555, 587, 590, 592, 595, 617, 618, 619, 621, 683, 706, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "ask": [15, 136, 138, 153, 1176], "perfectli": 15, "happi": [15, 17, 153], "abund": 15, "better": [15, 116, 119, 124, 125, 134, 135, 138, 139, 140], "ll": [15, 16, 18, 121, 130, 133, 139], "give": [15, 17, 18, 116, 118, 120, 121, 127, 138, 985, 1016, 1019], "two": [15, 17, 33, 34, 49, 50, 71, 76, 77, 94, 95, 120, 121, 123, 124, 125, 129, 130, 135, 139, 141, 203, 204, 205, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 273, 346, 356, 396, 462, 465, 637, 640, 683, 691, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 949, 953, 954, 958, 985, 1035, 1038, 1099, 1100, 1104, 1105, 1109, 1110, 1114, 1115, 1119, 1176], "streamlin": 15, "workflow": [15, 18, 19, 139, 151, 1176], "save": [15, 74, 75, 123, 134, 153, 362, 363, 683, 765, 1207, 1208], "week": [15, 18, 1176], "let": [15, 65, 66, 119, 120, 121, 123, 124, 125, 130, 131, 132, 136, 138, 139, 140, 141, 1131, 1140, 1143, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1176], "sai": [15, 17, 128, 138], "deepmind": 15, "releas": [15, 17, 19, 153, 1176], "awesom": 15, "paper": 15, "love": 15, "choic": [15, 17, 65, 66, 133, 139, 1131, 1152, 1155, 1160, 1162, 1164], "perceiverio": 15, "happen": [15, 17, 18, 123, 139], "slew": 15, "rush": 15, "f": [15, 18, 20, 116, 123, 130, 134, 136, 139, 141, 683, 742, 746, 884, 888, 939, 940, 1051, 1054, 1067, 1068], "g": [15, 57, 58, 102, 103, 116, 130, 153, 273, 275, 347, 350, 362, 364, 884, 888, 939, 940, 1051, 1054, 1067, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1144, 1147, 1148, 1151, 1156, 1159], "inevit": 15, "deviat": [15, 55, 56, 57, 58, 100, 101, 102, 103, 123, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1084, 1085, 1086, 1131, 1152, 1155, 1209, 1210], "origin": [15, 18, 53, 54, 71, 74, 75, 76, 77, 94, 95, 98, 99, 124, 127, 128, 131, 136, 138, 396, 432, 435, 856, 893, 896, 985, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "often": [15, 123, 126, 134, 153], "erron": 15, "train": [15, 43, 44, 88, 89, 126, 130, 132, 139, 140, 141, 151, 152, 153, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1176], "poor": 15, "converg": 15, "perform": [15, 67, 68, 74, 75, 112, 113, 117, 118, 121, 123, 125, 126, 127, 129, 130, 132, 133, 136, 139, 153, 164, 185, 188, 203, 231, 232, 234, 235, 683, 703, 707, 708, 711, 713, 716, 743, 744, 745, 759, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 851, 853, 856, 934, 938, 1047, 1048, 1049, 1050, 1051, 1058, 1059, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "issu": [15, 16, 19, 123, 136, 138, 140, 153], "etc": [15, 17, 18, 19, 41, 42, 57, 58, 69, 70, 74, 75, 86, 87, 102, 103, 114, 115, 117, 118, 121, 123, 129, 130, 131, 136, 138, 139, 153, 203, 231, 232, 234, 235, 683, 723, 726, 728, 729, 730, 731, 732, 754, 757, 758, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "publish": [15, 153], "manag": [15, 16, 133, 153], "get": [15, 16, 17, 19, 74, 75, 116, 123, 125, 126, 128, 131, 132, 133, 136, 137, 138, 139, 140, 273, 303, 306, 308, 309, 312, 320, 323, 362, 367, 368, 371, 373, 376, 381, 385, 392, 395, 683, 690, 733, 734, 735, 736, 737, 756, 767, 1176, 1182, 1195, 1204], "work": [15, 17, 18, 19, 116, 123, 124, 130, 131, 132, 135, 136, 137, 138, 140, 141, 1176, 1182], "repositori": [15, 17, 18, 20, 122, 134], "pull": [15, 16, 17, 20, 117, 153], "request": [15, 16, 117, 362, 378], "confus": [15, 133], "do": [15, 17, 18, 19, 43, 44, 74, 75, 88, 89, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 396, 632, 635, 683, 745, 791, 808, 809, 810, 811, 812, 833, 1051, 1052, 1061, 1062, 1063], "don": [15, 17, 18, 19, 69, 70, 114, 115, 123, 131, 140, 153], "expect": [15, 18, 123, 153, 683, 690, 1176], "codebas": [15, 16, 116, 117, 133, 135, 362, 384, 385, 1176], "total": [15, 16, 18, 65, 66, 71, 74, 75, 76, 77, 121, 123, 132, 139, 140, 153, 362, 392, 1094, 1097, 1131, 1152, 1155, 1160, 1162, 1164], "hour": 15, "spent": 15, "spin": 15, "off": [15, 17, 135, 856, 872, 875, 949, 953], "test": [15, 17, 19, 39, 40, 67, 68, 84, 85, 112, 113, 116, 121, 134, 153, 273, 326, 329, 336, 339, 396, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "error": [15, 17, 18, 39, 40, 74, 75, 84, 85, 118, 119, 121, 123, 129, 132, 134, 138, 153, 164, 165, 168, 396, 497, 498, 499, 500, 501, 856, 939, 943, 1131, 1136, 1139, 1144, 1147, 1207, 1208, 1211, 1215], "iter": [15, 28, 29, 30, 31, 32, 41, 42, 69, 70, 71, 74, 75, 76, 77, 86, 87, 114, 115, 130, 136, 139, 200, 201, 362, 386, 683, 684, 685, 686, 687, 688, 985, 995, 998, 1011, 1014, 1026, 1039, 1042, 1043, 1046, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068], "address": [15, 18, 19, 129, 136], "sake": 15, "singl": [15, 18, 57, 58, 74, 75, 102, 103, 117, 118, 121, 123, 126, 128, 130, 133, 136, 139, 140, 141, 153, 683, 784, 790, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104], "multipl": [15, 18, 55, 56, 65, 66, 67, 68, 74, 75, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 112, 113, 121, 126, 130, 153, 396, 412, 416, 457, 461, 602, 603, 605, 607, 610, 683, 684, 686, 687, 688, 728, 732, 751, 791, 808, 810, 811, 812, 856, 857, 860, 861, 884, 887, 985, 986, 989, 990, 1021, 1024, 1025, 1026, 1069, 1070, 1071, 1072, 1073, 1074, 1094, 1095, 1096, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1205], "line": [15, 17, 121, 123, 129, 134, 137, 138, 139, 140, 151, 1176, 1182], "convert": [15, 28, 29, 30, 31, 32, 33, 34, 74, 75, 123, 128, 129, 136, 153, 154, 162, 203, 207, 208, 209, 242, 245, 273, 274, 275, 362, 364, 365, 366, 367, 381, 392, 395, 683, 759, 776, 778, 779, 783, 784, 786, 856, 884, 888, 939, 940, 964, 968, 1051, 1053, 1063, 1064, 1188], "directli": [15, 18, 117, 118, 119, 120, 123, 124, 126, 128, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 153, 1051, 1063], "graph": [15, 22, 25, 26, 126, 130, 137, 153, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1207, 1208], "guarante": [15, 129, 153, 1099, 1100, 1104], "turn": [15, 17, 121, 123, 130], "4": [15, 20, 22, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 121, 123, 127, 130, 136, 138, 139, 140, 141, 164, 170, 173, 175, 178, 185, 188, 195, 196, 198, 199, 203, 226, 227, 228, 229, 230, 237, 240, 250, 253, 268, 272, 273, 281, 282, 283, 284, 285, 291, 293, 294, 295, 303, 306, 309, 312, 336, 339, 347, 350, 351, 362, 373, 380, 384, 396, 397, 399, 400, 401, 407, 409, 411, 412, 413, 414, 415, 416, 417, 420, 422, 424, 425, 426, 427, 430, 432, 434, 435, 436, 442, 445, 457, 458, 459, 460, 461, 467, 470, 472, 474, 475, 477, 480, 482, 485, 487, 488, 489, 490, 491, 492, 494, 495, 507, 509, 510, 512, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 537, 540, 547, 548, 549, 550, 551, 552, 555, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 649, 650, 651, 652, 655, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 692, 696, 698, 699, 700, 703, 720, 723, 726, 728, 730, 731, 732, 750, 768, 769, 770, 771, 772, 777, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 828, 829, 830, 832, 835, 836, 837, 838, 839, 840, 842, 843, 844, 846, 849, 853, 855, 856, 857, 858, 860, 862, 865, 867, 870, 872, 875, 884, 887, 902, 905, 912, 915, 939, 943, 944, 948, 949, 953, 969, 980, 983, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1030, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1120, 1121, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1165, 1166, 1169, 1176, 1211, 1212, 1213, 1214, 1216], "step": [15, 17, 18, 20, 43, 44, 74, 75, 78, 79, 88, 89, 121, 127, 129, 130, 131, 132, 136, 139, 140, 141, 152, 203, 204, 205, 206, 231, 232, 234, 235, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 806, 813, 814, 815, 816, 817, 819, 821, 823, 1047, 1048, 1049, 1050, 1176, 1211, 1212, 1213, 1214, 1215, 1216], "take": [15, 16, 17, 18, 120, 121, 123, 125, 130, 131, 132, 136, 138, 140, 141, 153, 396, 467, 470, 1176, 1182], "few": [15, 18, 123, 126, 130, 131, 132, 133, 134, 137, 138, 139, 140, 151, 1176, 1182], "second": [15, 17, 22, 25, 26, 39, 40, 43, 44, 61, 62, 71, 76, 77, 84, 85, 88, 89, 106, 107, 121, 123, 124, 125, 133, 138, 273, 346, 356, 396, 412, 413, 414, 415, 416, 432, 433, 434, 436, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 492, 493, 495, 517, 520, 522, 523, 527, 528, 530, 547, 548, 550, 552, 553, 555, 577, 578, 580, 582, 583, 585, 592, 593, 595, 597, 598, 600, 607, 608, 610, 617, 618, 620, 627, 628, 630, 667, 668, 669, 670, 671, 683, 691, 756, 763, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 856, 862, 865, 872, 875, 877, 880, 889, 892, 912, 915, 920, 923, 934, 938, 944, 948, 954, 958, 985, 1031, 1034, 1035, 1038, 1047, 1049, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1211, 1212, 1213], "automat": [15, 17, 18, 116, 118, 126, 130, 135, 136, 137, 140, 141, 1176], "convers": [15, 29, 30, 31, 32, 74, 75, 135, 137, 141, 152, 153, 683, 759, 1176, 1182], "everyon": [15, 16, 18, 153], "regardless": [15, 16, 74, 75, 138, 141, 200, 201], "wouldn": 15, "nice": [15, 123], "write": [15, 18, 19, 20, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 125, 126, 127, 133, 136, 138, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 286, 289, 362, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1098, 1099, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "onc": [15, 17, 18, 123, 130, 131, 132, 136, 139, 153, 362, 386, 856, 884, 887, 934, 938, 1075, 1076], "know": [15, 18, 123, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "among": [15, 74, 75, 123], "frantic": 15, "port": 15, "lucid": 15, "honk": 15, "improv": [15, 18, 126, 136], "understand": [15, 17, 18, 19, 20, 116, 118, 120, 121, 122, 124, 125, 134, 135], "pattern": [15, 41, 42, 74, 75, 86, 87, 120, 131, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "hasn": 15, "chang": [15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 120, 122, 123, 124, 130, 136, 140, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 836, 837, 838, 840, 846, 847, 848, 850, 856, 857, 858, 859, 861, 862, 865, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1051, 1053, 1063, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1176, 1182], "now": [15, 17, 20, 74, 75, 117, 118, 123, 128, 130, 131, 134, 138, 139, 141, 152, 153, 203, 268, 272, 1195, 1206, 1207, 1208], "spend": 15, "torchvis": 15, "probabl": [15, 123, 835, 851, 1075, 1076, 1195, 1203], "sonnet": 15, "about": [15, 17, 18, 122, 123, 135, 136, 140, 141, 153, 273, 309, 312, 320, 323], "next": [15, 17, 18, 20, 120, 121, 127, 128, 134, 138, 139, 273, 309, 312, 1176, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216], "everyth": [15, 18, 19, 123, 125, 137, 153], "zero": [15, 22, 25, 26, 33, 34, 35, 36, 39, 40, 43, 44, 65, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 84, 85, 88, 89, 94, 95, 102, 103, 110, 111, 112, 113, 118, 121, 123, 128, 129, 130, 131, 132, 136, 139, 140, 164, 170, 173, 175, 178, 195, 199, 203, 211, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 396, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 452, 455, 477, 478, 480, 482, 483, 484, 485, 486, 507, 510, 512, 515, 537, 540, 587, 590, 592, 595, 602, 603, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 637, 638, 640, 647, 650, 652, 653, 654, 656, 657, 660, 662, 665, 672, 676, 677, 683, 696, 699, 703, 754, 757, 758, 791, 792, 793, 794, 795, 796, 797, 799, 808, 811, 813, 815, 817, 819, 835, 851, 855, 856, 857, 860, 867, 870, 889, 892, 902, 904, 905, 906, 917, 919, 954, 958, 959, 963, 985, 999, 1002, 1003, 1006, 1021, 1024, 1043, 1046, 1069, 1070, 1073, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1087, 1089, 1090, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1211, 1212, 1213, 1214], "need": [15, 17, 18, 19, 20, 41, 42, 86, 87, 117, 120, 121, 122, 124, 125, 126, 129, 130, 133, 136, 138, 139, 152, 153, 683, 695, 696, 697, 698, 699, 700, 985, 986, 989, 999, 1002], "said": 15, "high": [15, 19, 57, 58, 102, 103, 139, 1075, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1089, 1090, 1091], "level": [15, 16, 18, 19, 126, 135, 136, 139, 140, 141, 153], "optim": [15, 133, 137, 139, 141, 152, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1047, 1048, 1049, 1050, 1176, 1212, 1213, 1214, 1216], "trainer": [15, 151, 153, 1176], "statu": 15, "quo": 15, "kera": 15, "dopamin": 15, "ignit": 15, "catalyst": 15, "lightn": 15, "fastai": 15, "haiku": [15, 141], "flax": [15, 141, 153], "trax": [15, 141], "objax": [15, 141], "idea": [15, 119, 124, 134, 152], "fulli": [15, 118, 129, 130, 136, 137, 138, 139, 140, 141, 153, 1195, 1205, 1206], "offer": [15, 140], "strongli": [16, 17, 1176, 1182], "welcom": [16, 17, 18, 1176, 1182], "absolut": [16, 39, 40, 74, 75, 84, 85, 396, 397, 398, 399, 400, 401, 856, 925, 927], "skill": 16, "whether": [16, 17, 22, 25, 26, 28, 29, 30, 31, 32, 41, 42, 43, 44, 53, 54, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 118, 130, 131, 133, 164, 165, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 207, 209, 226, 228, 230, 250, 252, 254, 268, 269, 271, 273, 276, 279, 281, 283, 285, 291, 293, 295, 302, 303, 306, 325, 326, 329, 331, 334, 336, 339, 341, 344, 347, 349, 351, 361, 362, 367, 368, 371, 377, 378, 381, 382, 386, 393, 395, 396, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 545, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 696, 698, 700, 703, 706, 708, 710, 712, 713, 715, 717, 718, 720, 723, 725, 727, 728, 730, 732, 737, 738, 740, 742, 745, 746, 747, 748, 749, 750, 751, 759, 762, 764, 766, 768, 770, 772, 774, 779, 780, 782, 787, 789, 790, 791, 797, 799, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 825, 826, 828, 829, 831, 834, 835, 851, 856, 857, 859, 861, 877, 880, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1061, 1062, 1063, 1064, 1070, 1072, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1165, 1166, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1187, 1188, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216], "vetern": 16, "beginn": 16, "start": [16, 17, 18, 19, 20, 74, 75, 78, 79, 116, 120, 121, 124, 131, 135, 136, 138, 139, 140, 152, 153, 203, 204, 205, 206, 231, 232, 233, 234, 235, 236, 362, 363], "aspect": [16, 139, 1176], "guid": [16, 17, 18, 19, 134, 1176], "through": [16, 18, 19, 116, 121, 123, 124, 125, 126, 127, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 396, 432, 435, 1051, 1054], "journei": [16, 1176, 1182], "inclusvi": 16, "big": [16, 153], "team": [16, 17, 18], "board": 16, "contributor": [16, 17, 18, 135, 1176], "split": [16, 18, 22, 25, 26, 74, 75, 135, 136, 153, 362, 384, 385, 386, 683, 751, 985, 1176], "section": [16, 18, 19, 116, 117, 118, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "below": [16, 17, 19, 20, 33, 34, 116, 117, 119, 121, 123, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 152, 164, 195, 199, 203, 255, 257, 259, 260, 262, 264, 396, 432, 435, 442, 445, 467, 470, 482, 485, 677, 856, 867, 870, 872, 875, 949, 953, 985, 999, 1002, 1003, 1006, 1099, 1100, 1104, 1120, 1121, 1124, 1176], "best": [16, 17, 18, 19, 20, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 683, 751], "go": [16, 17, 18, 19, 116, 117, 121, 124, 125, 130, 135, 139, 153, 1051, 1062], "finish": [16, 17, 116, 1176], "dive": [16, 18, 19, 125, 130, 135, 138, 139, 153, 1176], "right": [16, 17, 18, 74, 75, 116, 121, 139, 396, 452, 455, 462, 465, 856, 934, 938], "environ": [16, 18, 20, 152], "basic": [16, 19, 20], "fork": [16, 17, 683, 752], "doc": [16, 19, 118, 120, 136, 139, 140, 1176], "document": [16, 18, 123, 124, 125, 137, 139, 141], "local": [16, 17, 20, 126], "task": [16, 18, 152, 1047, 1048, 1049, 1050, 1176], "help": [16, 17, 121, 123, 124, 127, 129, 130, 138, 139, 140, 151, 683, 689, 1131, 1156, 1159, 1176], "video": [16, 18, 117, 118, 120, 121, 123, 124, 126, 127], "realli": [17, 130, 153], "contribut": [17, 18, 19, 136, 1182], "toward": [17, 53, 54, 98, 99, 136, 985, 1021, 1022, 1023, 1024, 1025, 1176, 1182], "page": [17, 18, 137, 141, 151, 1176, 1182], "explain": [17, 18, 19, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 1176, 1182], "main": [17, 20, 33, 34, 128, 130, 203, 217, 218, 255, 257, 259, 260, 262, 264, 856, 872, 875, 949, 953], "prefer": [17, 124, 128, 130], "mode": [17, 18, 49, 50, 74, 75, 94, 95, 121, 130, 153, 200, 201, 362, 386, 396, 412, 415, 607, 610, 683, 737, 759, 762, 764, 786, 787, 788, 856, 920, 921, 922, 923, 924], "git": [17, 18, 123], "recurs": [17, 20, 28, 29, 30, 31, 32, 74, 75, 126, 130, 140, 153, 1051, 1052, 1053, 1061, 1062, 1063], "submodul": [17, 18, 19, 20, 116, 122, 123, 126, 128, 132, 135, 136, 140, 1176, 1209, 1210, 1217, 1218], "com": 17, "unifyai": [17, 18, 20], "http": [17, 120, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 791, 792, 795, 797, 799, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139], "gh": 17, "your_fold": 17, "id": [17, 129, 130, 134, 362, 367, 1207, 1208], "cours": [17, 18, 121, 139, 153], "whatev": [17, 153], "integr": [17, 273, 276, 279], "familiar": [17, 19], "decid": [17, 74, 75, 124, 1051, 1062], "sure": [17, 18, 19, 122, 123], "elig": 17, "free": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 152, 1176], "student": 17, "licenc": 17, "peopl": [17, 18, 116], "seem": [17, 140, 153], "miss": [17, 121, 123, 129, 130, 134, 1211, 1215], "add": [17, 18, 19, 22, 25, 26, 39, 40, 55, 56, 69, 70, 71, 74, 75, 76, 77, 84, 85, 86, 87, 100, 101, 108, 109, 114, 115, 116, 117, 118, 120, 123, 124, 126, 127, 129, 130, 136, 138, 153, 396, 397, 400, 416, 602, 603, 605, 684, 688, 791, 825, 834, 1069, 1070, 1071, 1072, 1073, 1074, 1126, 1130, 1176, 1182, 1209, 1210], "explicit": [17, 20, 130, 131, 133, 136, 153], "remind": 17, "channel": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 683, 720, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205], "pace": 17, "updat": [17, 18, 19, 20, 43, 44, 74, 75, 88, 89, 116, 118, 121, 122, 128, 129, 130, 131, 136, 138, 139, 141, 153, 683, 745, 757, 758, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 853, 1047, 1048, 1049, 1051, 1058, 1059, 1067, 1068, 1187, 1188, 1211, 1212, 1213, 1214, 1215, 1216], "suggest": [17, 18, 117, 123], "latest": [17, 18, 19, 20, 120, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1195, 1204], "packag": [17, 20, 124, 134, 153], "ensur": [17, 18, 118, 119, 123, 124, 128, 129, 131, 134, 683, 745], "align": [17, 74, 75, 136, 138, 1176, 1182], "accord": [17, 20, 35, 36, 65, 66, 80, 81, 124, 126, 131, 273, 291, 292, 293, 294, 295, 302, 309, 312, 396, 412, 415, 462, 465, 607, 610, 683, 723, 726, 757, 758, 856, 954, 958, 985, 995, 998, 1043, 1046, 1131, 1152, 1155, 1160, 1162, 1164], "stabl": [17, 63, 64, 86, 87, 108, 109, 136, 153, 683, 735, 736, 760, 761, 768, 770, 771, 772, 773, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "pypi": [17, 19, 153], "mayb": [17, 28, 31, 32, 136, 138], "person": [17, 18], "experi": [17, 137, 139, 153], "avoid": [17, 18, 119, 123, 127, 128, 130, 134, 138, 396, 507, 510], "pip": [17, 152, 1176], "instal": [17, 18, 20, 134, 152, 1176], "abil": [17, 137, 153], "certain": [17, 18, 74, 75, 123, 124, 131, 153, 203, 204, 205, 231, 232, 234, 235], "perhap": [17, 138, 139, 140, 153], "keep": [17, 18, 74, 75, 119, 122, 123, 130, 137, 139, 141, 683, 789], "track": [17, 18, 1051, 1063, 1207, 1208], "termin": [17, 18, 20, 71, 74, 75, 76, 77, 130, 136, 139], "run": [17, 20, 43, 44, 88, 89, 118, 121, 122, 123, 125, 127, 134, 136, 137, 138, 139, 140, 141, 152, 153, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1047, 1048, 1049, 1050, 1195, 1206, 1207, 1208], "command": [17, 20, 1176], "ivy_dev": [17, 18, 20], "name": [17, 18, 20, 22, 25, 26, 61, 62, 106, 107, 119, 120, 123, 124, 125, 131, 134, 136, 138, 139, 141, 200, 201, 683, 689, 856, 877, 880, 920, 923, 934, 938, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109], "3": [17, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 57, 58, 65, 66, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 121, 123, 127, 130, 136, 138, 139, 140, 141, 164, 165, 166, 167, 169, 170, 173, 175, 178, 180, 183, 185, 188, 195, 196, 198, 199, 202, 203, 226, 227, 228, 229, 230, 237, 240, 250, 253, 265, 267, 268, 272, 273, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 303, 306, 309, 312, 336, 339, 347, 349, 350, 351, 362, 367, 380, 384, 387, 391, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 430, 432, 433, 434, 435, 436, 437, 440, 442, 445, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 474, 475, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 537, 540, 547, 548, 549, 550, 551, 552, 555, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 684, 685, 686, 691, 692, 696, 698, 699, 700, 703, 718, 723, 726, 728, 729, 730, 731, 732, 750, 766, 768, 769, 770, 771, 772, 777, 784, 791, 792, 793, 794, 795, 796, 808, 811, 828, 829, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 884, 887, 902, 905, 912, 915, 934, 938, 939, 943, 944, 948, 949, 953, 964, 968, 969, 970, 972, 973, 974, 975, 977, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1030, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1148, 1151, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1169, 1176], "8": [17, 20, 22, 25, 26, 39, 40, 41, 42, 51, 52, 53, 54, 57, 58, 63, 64, 71, 76, 77, 84, 85, 86, 87, 88, 89, 92, 93, 96, 97, 102, 103, 108, 109, 121, 123, 130, 135, 139, 164, 180, 183, 195, 199, 203, 226, 229, 268, 272, 273, 302, 308, 309, 312, 362, 373, 392, 396, 412, 415, 416, 422, 425, 426, 442, 445, 472, 475, 482, 485, 517, 518, 519, 520, 521, 522, 525, 527, 530, 547, 550, 552, 555, 587, 590, 602, 603, 605, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 657, 660, 662, 665, 677, 683, 692, 696, 699, 723, 726, 750, 768, 769, 770, 771, 772, 791, 792, 795, 808, 810, 811, 812, 835, 836, 838, 839, 840, 846, 849, 856, 862, 865, 867, 870, 872, 875, 912, 915, 939, 943, 944, 948, 969, 970, 971, 972, 973, 974, 975, 977, 979, 980, 981, 982, 984, 985, 986, 987, 989, 1003, 1006, 1026, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1098, 1099, 1100, 1104, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1176, 1195, 1206], "activ": [17, 18, 20, 24, 69, 70, 73, 114, 115, 117, 140, 165, 168, 170, 173, 175, 177, 178, 179, 180, 183, 185, 188, 190, 193, 195, 199, 1176, 1185, 1186], "setup": [17, 18], "click": [17, 18, 120, 1176], "icon": [17, 18], "side": [17, 18], "choos": [17, 18, 141, 362, 387, 391, 396, 587, 590, 592, 595, 1094, 1098, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "left": [17, 18, 74, 75, 94, 95, 121, 131, 396, 452, 455, 856, 877, 880, 893, 896, 934, 938, 1094, 1095, 1176], "panel": 17, "select": [17, 18, 123, 136, 138, 141, 153], "drop": [17, 153], "down": [17, 123, 138], "path": [17, 20], "manual": [17, 18, 123, 140, 1051, 1052, 1061, 1062], "builtin": [17, 20, 138, 140, 884, 888, 939, 940], "requir": [17, 20, 117, 118, 119, 120, 121, 123, 125, 128, 129, 131, 132, 138, 153, 200, 201, 396, 657, 660, 856, 877, 880, 985, 1031, 1034, 1187, 1188], "cmd": [17, 20], "directori": [17, 18, 20, 123, 124, 362, 363, 683, 765], "folder": [17, 18, 20, 117, 122, 123, 126], "file": [17, 18, 20, 74, 75, 117, 120, 123, 126, 127, 129, 130, 134, 136, 139, 683, 765, 1207, 1208], "abov": [17, 18, 20, 33, 34, 57, 58, 102, 103, 118, 120, 121, 123, 124, 126, 127, 129, 130, 133, 134, 138, 139, 140, 141, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 607, 610, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 877, 880, 949, 953, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1148, 1151, 1152, 1155, 1156, 1159, 1165, 1166, 1169], "m": [17, 18, 20, 33, 34, 49, 50, 57, 58, 84, 85, 94, 95, 102, 103, 116, 136, 203, 237, 240, 255, 257, 259, 260, 262, 264, 582, 584, 586, 683, 692, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091], "python3": [17, 18, 20], "script": [17, 18, 20, 121, 136, 153], "bat": [17, 18, 20], "OR": [17, 18, 20, 67, 68, 112, 113, 396, 457, 460, 592, 595, 1165, 1171, 1172, 1173, 1174, 1175], "bin": [17, 18, 20], "mac": [17, 18, 20], "linux": [17, 18, 20], "virtualenv": 17, "found": [17, 18, 71, 74, 75, 76, 77, 120, 128, 129, 130, 134, 362, 376, 884, 888, 939, 940], "o": [17, 116, 136, 683, 692], "note": [17, 18, 117, 120, 121, 123, 125, 130, 131, 396, 632, 635, 856, 877, 880, 934, 938, 985, 1031, 1034, 1099, 1105, 1109, 1131, 1140, 1143], "tick": [17, 18], "abl": [17, 18, 74, 75, 126, 131, 133, 134, 138, 141], "To": [17, 119, 121, 123, 125, 126, 130, 134, 139, 140, 141, 884, 888, 939, 940, 1176], "ivy_test": [17, 18, 125], "test_array_api": [17, 18, 122, 123], "cd": [17, 18, 20], "r": [17, 18, 74, 75, 116, 683, 692, 789, 856, 920, 923, 964, 968], "txt": 17, "visual": [17, 134, 153], "jetbrain": 17, "remot": 17, "mitig": 17, "potenti": [17, 135, 396, 507, 510], "conflict": [17, 18, 139], "addit": [17, 18, 41, 42, 55, 56, 74, 75, 86, 87, 100, 101, 117, 120, 123, 124, 130, 131, 138, 139, 141, 362, 387, 391, 396, 412, 415, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 1069, 1070, 1071, 1072, 1073, 1074, 1195, 1205], "yet": [17, 130, 153], "particular": [17, 18, 117, 119, 121, 123, 125, 128, 131, 133, 396, 397, 400, 587, 590], "system": [17, 18, 153, 856, 929, 932], "instruct": [17, 19], "desktop": 17, "wsl": 17, "powershel": 17, "admin": 17, "visit": [17, 18], "link": [17, 124], "imag": [17, 20, 46, 47, 48, 91, 92, 93, 117, 136, 137, 139, 141, 152, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 1176], "profession": 17, "execut": [17, 18, 20, 130, 133, 136, 138, 141, 153, 362, 363, 683, 785], "deploy": 17, "top": [17, 18, 123, 124, 139, 140, 1176], "press": [17, 18, 139, 1176], "ok": 17, "correctli": [17, 74, 75, 94, 95, 118, 123, 125, 130, 131, 134, 140, 153, 856, 893, 896, 1094, 1095], "caus": [17, 18, 121, 123, 130, 133, 134, 153], "earlier": [17, 18], "might": [17, 18, 117, 123, 128, 131, 136, 138, 139, 683, 706], "necessari": [17, 53, 54, 98, 99, 121, 127, 130, 133, 985, 1016, 1017, 1018, 1019, 1020], "virtualis": 17, "sudo": 17, "apt": 17, "ca": 17, "certif": 17, "curl": 17, "gnupg": 17, "lsb": 17, "mkdir": 17, "p": [17, 18, 41, 42, 74, 75, 86, 87, 94, 95, 116, 203, 237, 240, 683, 695, 696, 697, 698, 699, 700, 835, 851, 856, 893, 896, 959, 963, 1195, 1203], "keyr": 17, "fssl": 17, "download": [17, 123], "gpg": 17, "dearmor": 17, "echo": 17, "deb": 17, "arch": 17, "dpkg": 17, "architectur": [17, 141, 153], "lsb_releas": 17, "tee": 17, "list": [17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 55, 56, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 124, 125, 130, 131, 132, 134, 136, 139, 140, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 207, 208, 209, 226, 228, 230, 237, 238, 240, 242, 245, 250, 252, 254, 268, 269, 271, 273, 281, 282, 283, 284, 285, 291, 293, 295, 347, 349, 351, 362, 367, 386, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 692, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 777, 779, 780, 782, 789, 791, 792, 794, 796, 808, 810, 812, 825, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 857, 859, 861, 902, 904, 906, 944, 948, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 991, 994, 1003, 1006, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1031, 1034, 1051, 1052, 1053, 1054, 1057, 1062, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1097, 1099, 1105, 1106, 1108, 1109, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "dev": [17, 37, 38, 74, 75, 82, 83, 126, 132, 136, 138, 140, 362, 372, 376], "null": 17, "ce": 17, "cli": 17, "containerd": 17, "io": 17, "compos": [17, 123, 130, 153], "plugin": 17, "systemctl": 17, "permiss": 17, "relat": [17, 18, 119, 123, 134, 152, 362], "post": [17, 55, 56, 100, 101, 141, 1069, 1070, 1071, 1072, 1073, 1074, 1176, 1182], "gener": [17, 18, 19, 20, 42, 43, 44, 57, 58, 69, 70, 87, 88, 89, 102, 103, 114, 115, 116, 117, 118, 120, 121, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 200, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 632, 635, 647, 650, 657, 660, 662, 665, 684, 687, 689, 690, 691, 692, 693, 694, 695, 696, 699, 701, 702, 703, 704, 705, 706, 707, 708, 711, 713, 716, 718, 719, 720, 721, 722, 723, 726, 728, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 773, 774, 775, 776, 777, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 808, 809, 810, 811, 812, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1075, 1076, 1077, 1080, 1087, 1088, 1089, 1090, 1091, 1092, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1176, 1211, 1215], "dure": [17, 43, 44, 65, 66, 74, 75, 88, 89, 126, 128, 130, 131, 132, 133, 153, 200, 201, 362, 387, 391, 683, 785, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 856, 889, 892, 1047, 1048, 1049, 1050, 1131, 1152, 1155, 1160, 1162, 1164, 1207, 1208, 1211, 1212, 1213, 1215], "detect": [17, 74, 75, 118, 123, 130, 134, 139, 140, 1051, 1052, 1062], "its": [17, 19, 20, 35, 36, 53, 54, 80, 81, 98, 99, 119, 120, 123, 124, 128, 134, 141, 153, 273, 281, 282, 283, 284, 285, 362, 386, 683, 778, 856, 889, 892, 985, 999, 1002, 1016, 1019, 1021, 1022, 1023, 1024, 1025, 1035, 1038], "simplest": [17, 121, 123], "valu": [17, 18, 22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 106, 107, 118, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 141, 153, 164, 195, 196, 197, 198, 199, 203, 204, 205, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 273, 276, 279, 297, 298, 299, 301, 362, 385, 386, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 415, 417, 418, 419, 420, 421, 427, 428, 429, 430, 431, 432, 433, 434, 436, 472, 475, 487, 488, 489, 491, 492, 495, 497, 500, 502, 504, 506, 507, 509, 511, 512, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 597, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 617, 620, 622, 625, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 640, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 701, 706, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 739, 742, 746, 756, 757, 758, 760, 761, 763, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 813, 815, 825, 826, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 855, 856, 902, 904, 905, 906, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 959, 963, 985, 986, 987, 988, 989, 990, 995, 996, 997, 998, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1043, 1045, 1046, 1047, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215], "inform": [17, 18, 123, 130, 134, 273, 309, 312, 320, 323, 683, 689, 791, 826], "becaus": [17, 18, 118, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 140, 141, 153], "header": [17, 18], "summari": [17, 18, 74, 75, 80, 81, 123, 273, 297, 298, 299, 301, 353, 354, 683, 701, 705, 739], "recommend": [17, 127, 396, 587, 590, 592, 595, 632, 635, 1131, 1140, 1143], "advanc": [17, 884, 888, 939, 940], "bar": 17, "pytest": [17, 18, 123, 125], "checkbox": 17, "q": [17, 18, 116, 153, 835, 855, 856, 877, 880, 920, 923], "fail": [17, 18, 19, 122, 123, 134, 136, 138], "It": [17, 18, 20, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 68, 72, 73, 78, 79, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 286, 289, 362, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 888, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 925, 927, 929, 932, 934, 938, 939, 940, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1098, 1099, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1160, 1161, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "headach": 17, "arm": [17, 18], "m1": 17, "instead": [17, 18, 19, 118, 120, 121, 123, 125, 126, 128, 130, 133, 136, 138, 139, 153], "featur": [17, 18, 117, 118, 139, 153, 1176], "vm": 17, "azur": 17, "cloud": [17, 152], "mean": [17, 18, 41, 42, 57, 58, 65, 66, 74, 75, 86, 87, 102, 103, 110, 111, 114, 115, 116, 119, 121, 123, 126, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 362, 386, 683, 708, 709, 710, 711, 712, 1047, 1048, 1049, 1050, 1051, 1057, 1075, 1077, 1080, 1082, 1083, 1084, 1085, 1086, 1099, 1100, 1104, 1131, 1176, 1189], "configur": [17, 18, 20, 74, 75, 131, 362, 385, 1051, 1064], "defin": [17, 19, 117, 118, 120, 123, 131, 138, 140, 153, 396, 607, 610, 632, 635, 683, 754, 856, 862, 865, 877, 880, 929, 932, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "dockerfil": [17, 20], "longer": [17, 123, 131, 133], "worri": 17, "platform": 17, "agnost": [17, 118, 129, 136, 138, 141, 153, 1176], "usual": [17, 123, 124], "studio": 17, "favourit": 17, "extens": [17, 18, 120, 123, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 552, 555, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 856, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169], "theme": 17, "too": [17, 18, 134, 153, 396, 412, 415, 607, 610], "done": [17, 18, 121, 123, 134, 139], "unsupport": [17, 124, 134, 273, 317, 318, 362, 375, 683, 721, 722], "old": [17, 74, 75, 133], "slow": 17, "ipad": 17, "long": [17, 18, 121, 835, 853], "browser": 17, "cool": [17, 117], "requisit": 17, "head": [17, 130, 835, 854, 1176, 1195, 1206], "pane": [17, 18], "readi": 17, "begin": [17, 1051, 1052, 1062], "outlin": [17, 18, 19, 116, 120, 123, 126, 130, 133, 138], "green": [17, 18, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 1220, 1221], "dropdown": 17, "tab": [17, 139, 1176], "master": [17, 18, 130], "v": [17, 18, 123, 136, 139, 140, 141, 835, 855, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1215, 1217, 1218], "view": [17, 18, 203, 220, 223, 835, 842, 846, 849], "built": [17, 18, 123, 137, 203, 204, 205, 1195, 1206, 1207, 1208], "bottom": 17, "box": 17, "patient": 17, "upto": [17, 18], "15": [17, 39, 40, 57, 58, 78, 79, 86, 87, 102, 103, 121, 123, 203, 226, 228, 229, 230, 273, 309, 312, 396, 442, 445, 487, 490, 522, 523, 547, 548, 632, 633, 635, 637, 638, 640, 642, 643, 683, 696, 699, 768, 770, 771, 772, 835, 836, 839, 842, 856, 872, 875, 912, 915, 939, 943, 944, 948, 985, 1021, 1024, 1075, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1094, 1097, 1099, 1100, 1104, 1131, 1132, 1135], "minut": 17, "launch": 17, "12": [17, 39, 40, 57, 58, 84, 85, 86, 87, 92, 93, 98, 99, 100, 101, 102, 103, 121, 123, 130, 396, 442, 445, 467, 470, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 637, 640, 652, 654, 656, 683, 696, 699, 703, 736, 768, 770, 791, 792, 795, 836, 838, 840, 856, 872, 875, 912, 915, 944, 948, 985, 1003, 1006, 1021, 1024, 1027, 1029, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1080, 1082, 1083, 1085, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1104, 1131, 1132, 1135], "output": [17, 18, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 72, 73, 78, 79, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130, 132, 133, 136, 138, 140, 141, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 286, 289, 362, 386, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 694, 695, 696, 697, 698, 699, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 741, 754, 757, 758, 759, 786, 791, 801, 802, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1051, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1098, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206], "That": [17, 18, 123, 138, 139, 140, 396, 632, 635], "alreadi": [17, 18, 74, 75, 118, 127, 130, 131, 138, 153, 396, 472, 475, 512, 515, 607, 610, 637, 640, 678, 682, 856, 912, 915, 1176], "refer": [17, 18, 65, 66, 67, 68, 112, 113, 118, 123, 124, 126, 131, 153, 203, 217, 218, 396, 507, 510, 567, 570, 791, 792, 795, 797, 799, 856, 954, 958, 964, 968, 1131, 1152, 1155, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1205], "approach": [17, 18, 123, 126, 130, 138, 139, 153], "colour": 17, "applic": [17, 128, 131, 132, 140, 835, 854, 855, 1051, 1057, 1063], "good": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 140], "chanc": 17, "vscode": 17, "show": [17, 18, 74, 75, 121, 123, 133, 152, 153, 1176], "explor": [17, 18, 137, 141, 152], "troubleshoot": 17, "sometim": [17, 18, 123], "ever": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "64": [17, 47, 48, 92, 93, 102, 103, 123, 139, 140, 273, 308, 396, 657, 660, 662, 665, 835, 845, 846, 847, 848, 849, 850, 856, 912, 915, 939, 943, 1082, 1084, 1131, 1132, 1135, 1176, 1195, 1206], "bit": [17, 121, 123, 126, 130, 138, 273, 308, 309, 312, 320, 323, 396, 447, 450, 452, 455, 462, 465, 1131, 1148, 1151, 1156, 1159], "usr": 17, "nutshel": [17, 118], "hook": 17, "lint": 17, "accept": [17, 18, 28, 118, 120, 121, 123, 125, 126, 128, 129, 130, 132, 133, 138, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 587, 590, 592, 595, 602, 603, 605, 617, 620, 632, 635, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1073, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1140, 1143, 1165, 1166, 1169, 1176], "fix": [17, 18], "attempt": [17, 134, 153], "succe": 17, "problemat": 17, "appli": [17, 18, 19, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 123, 126, 128, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 273, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 350, 351, 368, 369, 370, 372, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 688, 696, 697, 698, 700, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 791, 792, 793, 794, 796, 808, 809, 810, 812, 813, 815, 817, 819, 828, 829, 830, 831, 835, 836, 837, 838, 840, 846, 847, 848, 850, 852, 854, 855, 856, 857, 858, 859, 861, 902, 904, 905, 906, 917, 919, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1031, 1034, 1047, 1048, 1049, 1051, 1057, 1060, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1176, 1184, 1185, 1186, 1209, 1210], "proce": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "modifi": [17, 18, 120, 126, 131, 132, 134, 136], "properli": [17, 116], "enter": [17, 18, 118, 128, 129, 131, 132, 362, 791, 825, 834], "unsur": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "feel": [17, 18, 19, 20, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 1176], "server": [18, 1176], "appropri": [18, 69, 70, 114, 115, 123, 128, 396, 412, 415, 607, 610, 1094, 1095], "context": [18, 121, 123, 130, 131, 132, 362, 683, 752, 835, 854, 1195, 1206], "suitabl": [18, 117, 130], "quick": [18, 116, 140], "alwai": [18, 19, 43, 44, 53, 54, 74, 75, 88, 89, 98, 99, 117, 118, 120, 123, 126, 127, 129, 130, 133, 134, 136, 138, 153, 273, 276, 279, 396, 412, 415, 607, 610, 683, 745, 791, 808, 809, 810, 811, 812, 826, 985, 1016, 1017, 1018, 1019, 1020], "correct": [18, 19, 65, 66, 110, 111, 116, 118, 126, 130, 131, 132, 134, 273, 356, 985, 986, 989, 1131, 1152, 1153, 1154, 1155, 1160, 1161, 1162, 1163, 1164, 1176], "tendenc": 18, "land": 18, "end": [18, 130, 133, 135, 152, 153, 203, 204, 205, 396, 432, 435, 1176, 1182], "world": 18, "come": [18, 123, 140, 151, 1176, 1182], "fly": 18, "hard": [18, 138], "receiv": [18, 123, 131, 132, 683, 690, 751, 884, 888, 939, 940, 1195, 1205], "respons": [18, 20], "internship": 18, "comment": [18, 134], "trigger": 18, "unansw": 18, "label": [18, 51, 52, 96, 97, 136, 137, 141, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984], "respond": 18, "remov": [18, 19, 20, 74, 75, 120, 123, 126, 131, 133, 141, 856, 872, 875, 889, 892, 949, 953, 985, 1027, 1030, 1047, 1048, 1049], "someon": [18, 153], "els": [18, 19, 57, 58, 102, 103, 117, 119, 125, 126, 127, 133, 136, 138, 140, 141, 153, 273, 302, 683, 693, 706, 718, 1051, 1061, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091], "strive": [18, 123, 153], "repli": 18, "newli": [18, 123, 133, 200, 201, 273, 276, 279, 683, 694], "place": [18, 33, 34, 53, 54, 74, 75, 78, 79, 98, 99, 116, 117, 118, 119, 120, 121, 123, 124, 126, 130, 132, 134, 141, 164, 195, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 259, 260, 264, 265, 267, 268, 269, 270, 271, 272, 273, 291, 294, 326, 329, 336, 339, 362, 387, 391, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 743, 744, 745, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1069, 1070, 1073, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169, 1211, 1212, 1213, 1214, 1215, 1216], "bug": [18, 123], "serv": [18, 118, 123, 126, 129, 130, 135, 1176], "suspect": 18, "behaviour": [18, 118, 120, 123, 124, 129, 130, 133, 138], "observ": 18, "confid": 18, "noth": [18, 74, 75], "wrong": 18, "someth": [18, 117, 139, 140, 153], "bet": 18, "act": [18, 121, 124, 153], "placehold": [18, 118, 129, 134, 1051, 1063], "sub": [18, 19, 74, 75, 84, 85, 94, 95, 116, 123, 124, 130, 138, 139, 140, 603, 604, 606, 856, 872, 875, 985, 1026, 1047, 1048, 1049, 1050, 1176], "mark": [18, 123], "ii": [18, 1131, 1132, 1135], "iii": 18, "titl": [18, 1176], "issue_numb": 18, "delet": [18, 20], "No": [18, 136], "wait": [18, 71, 74, 75, 76, 77], "progress": [18, 130, 137, 141], "pr": 18, "soon": [18, 130, 151, 153, 1176, 1182], "partial": [18, 74, 75, 1207, 1208], "solut": [18, 123, 130, 856, 929, 932], "review": [18, 117], "merg": 18, "everi": [18, 19, 20, 33, 34, 41, 42, 86, 87, 118, 121, 122, 123, 126, 127, 128, 130, 131, 133, 136, 138, 140, 203, 225, 226, 227, 229, 683, 684, 685, 686, 687, 688], "shape": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 120, 121, 123, 125, 131, 132, 133, 136, 138, 139, 140, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 362, 382, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 728, 729, 730, 731, 732, 738, 741, 754, 757, 758, 764, 776, 778, 788, 791, 792, 794, 796, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1106, 1107, 1108, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1160, 1161, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1209, 1210], "move": [18, 74, 75, 117, 362, 387, 391], "within": [18, 28, 31, 32, 123, 125, 140, 153, 203, 204, 205, 1075, 1087, 1090], "7": [18, 20, 22, 25, 26, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 53, 54, 57, 58, 63, 64, 71, 76, 77, 84, 85, 86, 87, 88, 89, 92, 93, 96, 97, 100, 101, 102, 103, 108, 109, 110, 111, 121, 123, 126, 130, 133, 164, 170, 173, 175, 178, 195, 199, 273, 309, 312, 320, 323, 347, 350, 362, 373, 396, 397, 400, 412, 413, 414, 415, 416, 422, 424, 442, 445, 447, 450, 457, 458, 459, 460, 461, 467, 470, 472, 475, 482, 484, 485, 486, 487, 488, 490, 492, 493, 495, 502, 505, 512, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 530, 547, 549, 550, 551, 552, 555, 587, 590, 602, 603, 605, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 650, 652, 655, 657, 660, 672, 676, 677, 683, 692, 696, 699, 703, 723, 726, 750, 768, 769, 772, 791, 792, 793, 794, 795, 796, 797, 799, 808, 809, 811, 813, 815, 835, 836, 837, 838, 839, 840, 845, 846, 849, 855, 856, 862, 865, 867, 870, 872, 875, 912, 915, 939, 943, 944, 948, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 999, 1002, 1003, 1006, 1026, 1035, 1038, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1098, 1099, 1100, 1104, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1160, 1161, 1163, 1164], "dai": 18, "close": [18, 120, 123, 396, 507, 510, 637, 640, 856, 934, 938], "likewis": [18, 118, 120, 126, 130, 131, 139], "freed": 18, "flag": [18, 43, 44, 74, 75, 88, 89, 131, 133, 138, 362, 367, 791, 808, 809, 810, 811, 812], "purpos": [18, 20, 118, 119, 121, 123, 126, 128, 129, 130, 135, 138, 396, 507, 510, 1176], "remain": [18, 53, 54, 98, 99, 121, 153, 396, 412, 415, 607, 610, 632, 635, 985, 1016, 1017, 1018, 1019, 1020, 1051, 1057], "access": [18, 20, 74, 75, 124, 131], "more": [18, 22, 25, 26, 61, 62, 106, 107, 116, 117, 118, 121, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 203, 204, 205, 273, 281, 284, 396, 507, 510, 856, 884, 888, 889, 892, 939, 940, 985, 1003, 1006, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1176], "short": [18, 140, 835, 853], "basi": [18, 122, 139], "situat": [18, 141], "alloc": [18, 33, 34, 153, 203, 255, 257, 259, 260, 262, 264, 273, 276, 279], "upon": [18, 121, 123, 133, 153], "period": 18, "prevent": [18, 43, 44, 88, 89, 133, 134, 138, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1131, 1156, 1159, 1211, 1212, 1213], "unabl": 18, "obvious": 18, "never": [18, 53, 54, 98, 99, 123, 130, 985, 1016, 1017, 1018, 1019, 1020], "reflect": [18, 129], "qualiti": 18, "hypothet": 18, "frustrat": 18, "delai": 18, "busi": 18, "fine": [18, 138, 141], "inact": 18, "limit": [18, 71, 74, 75, 76, 77, 121, 123, 134, 136, 139, 141, 153, 273, 309, 312, 320, 323, 683, 695, 696, 699, 985, 986, 989], "me": 18, "unfairli": 18, "definit": [18, 49, 50, 94, 95, 126, 131, 138, 856, 857, 858, 859, 860, 861, 862, 865], "investig": 18, "Then": [18, 20, 119, 124, 128, 138, 153], "practic": 18, "separ": [18, 123, 125, 129, 130, 134, 136, 138, 139], "branch": [18, 130, 153, 200, 201, 396, 432, 435], "simpli": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 118, 120, 121, 123, 124, 126, 129, 130, 132, 133, 136, 140, 141, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 836, 837, 838, 840, 846, 847, 848, 850, 857, 858, 859, 861, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175], "role": [18, 124, 137], "kept": [18, 71, 74, 75, 76, 77, 133, 1047, 1048, 1049], "date": 18, "upstream": [18, 122], "complic": [18, 125, 136], "root": [18, 20, 39, 40, 84, 85, 139, 396, 657, 658, 659, 660, 661, 1075, 1076, 1082, 1085, 1211, 1212, 1213, 1214, 1216], "merge_with_upstream": 18, "sh": 18, "name_of_your_branch": 18, "resolv": [18, 1131, 1148, 1151, 1156, 1159], "clone": [18, 20, 74, 75], "push": [18, 122, 134], "both": [18, 118, 119, 120, 121, 123, 124, 125, 126, 130, 132, 133, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 346, 396, 397, 400, 412, 415, 417, 420, 422, 425, 472, 475, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 627, 630, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 723, 726, 791, 792, 795, 835, 842, 846, 849, 855, 856, 857, 860, 862, 865, 872, 875, 884, 888, 889, 892, 939, 940, 954, 958, 985, 1021, 1024, 1069, 1070, 1073, 1099, 1105, 1109, 1131, 1136, 1139, 1165, 1166, 1169], "abort": 18, "tediou": 18, "resolut": [18, 273, 309, 312], "stash": 18, "reinstat": 18, "correspond": [18, 35, 36, 39, 40, 41, 42, 53, 54, 65, 66, 71, 74, 75, 76, 77, 80, 81, 84, 85, 98, 99, 118, 120, 121, 122, 123, 126, 128, 129, 130, 131, 273, 281, 282, 283, 284, 285, 396, 432, 433, 434, 435, 436, 627, 628, 630, 768, 769, 856, 862, 865, 877, 880, 929, 932, 985, 991, 994, 1021, 1022, 1023, 1024, 1025, 1075, 1076, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "fetch": 18, "uncommit": 18, "unstag": 18, "untrack": 18, "comprehens": 18, "explan": [18, 118, 120, 124, 130, 138], "atlassian": 18, "tutori": [18, 124], "wrote": 18, "piec": [18, 126, 128, 129, 136], "tag": 18, "describ": [18, 123, 137, 141, 1131, 1132, 1135, 1148, 1151, 1152, 1155, 1156, 1159], "navig": [18, 116], "blame": 18, "revis": 18, "author": [18, 1176], "log": [18, 39, 40, 84, 85, 126, 130, 133, 136, 139, 203, 234, 235, 396, 561, 567, 570, 577, 580, 856, 925, 927, 1176], "eg": [18, 123], "16": [18, 39, 40, 49, 50, 57, 58, 84, 85, 86, 87, 102, 103, 121, 123, 139, 273, 308, 320, 323, 396, 637, 638, 672, 673, 675, 676, 768, 770, 835, 845, 846, 849, 856, 857, 858, 860, 872, 875, 912, 915, 939, 943, 1077, 1078, 1081, 1082, 1084, 1087, 1089, 1091, 1094, 1098, 1131, 1132, 1135], "5": [18, 20, 22, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 49, 50, 53, 54, 55, 56, 57, 58, 63, 64, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 103, 108, 109, 118, 121, 123, 125, 127, 138, 139, 140, 164, 170, 173, 175, 178, 185, 188, 195, 196, 198, 199, 203, 226, 227, 228, 229, 230, 237, 240, 250, 253, 265, 267, 268, 272, 273, 281, 282, 283, 284, 285, 291, 293, 294, 295, 303, 306, 309, 312, 336, 339, 347, 350, 351, 362, 380, 384, 396, 397, 399, 400, 401, 407, 410, 412, 413, 414, 415, 416, 417, 420, 422, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 473, 474, 475, 482, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 507, 508, 509, 510, 512, 513, 514, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 537, 540, 547, 548, 549, 550, 551, 552, 555, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 684, 685, 692, 696, 698, 699, 700, 703, 723, 726, 728, 731, 732, 750, 768, 769, 770, 771, 772, 777, 791, 792, 794, 795, 796, 808, 811, 828, 832, 835, 836, 838, 839, 840, 842, 844, 845, 846, 849, 855, 856, 857, 858, 860, 862, 865, 867, 870, 872, 875, 884, 887, 912, 915, 939, 943, 944, 948, 949, 953, 969, 980, 983, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1030, 1035, 1038, 1051, 1054, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1165, 1166, 1169, 1195, 1206], "past": 18, "l": [18, 49, 50, 84, 85, 94, 95, 116, 582, 584, 586, 856, 857, 858, 859, 860, 861, 877, 880, 889, 892, 949, 953], "filepath": [18, 74, 75], "grep": 18, "commit_id": 18, "handi": [18, 123], "histori": 18, "toggl": 18, "vertic": 18, "highlight": [18, 121], "previou": [18, 118, 123, 124, 141, 153, 273, 360, 683, 786, 787, 788, 791, 797, 799, 813, 815], "shown": [18, 69, 70, 74, 75, 114, 115, 118, 119, 121, 123, 124, 134, 136, 138, 153, 164, 195, 199, 396, 432, 435, 442, 445, 467, 470, 482, 485, 677, 856, 867, 870, 985, 999, 1002, 1003, 1006, 1099, 1100, 1104, 1120, 1121, 1124], "whenev": [18, 123, 125, 128, 138, 139], "think": [18, 121], "gain": [18, 135, 140, 1189], "quit": [18, 120, 123, 126, 128, 129], "repeat": [18, 41, 42, 53, 54, 86, 87, 98, 99, 120, 121, 123, 127, 129, 130, 131, 134, 683, 713, 714, 715, 716, 717, 985, 1015, 1039, 1042], "yourself": [18, 19, 123, 152], "simpler": [18, 138], "cannot": [18, 119, 124, 127, 131, 141], "least": [18, 121, 123, 126, 129, 856, 889, 892], "after": [18, 55, 56, 74, 75, 100, 101, 121, 123, 124, 130, 131, 135, 273, 356, 362, 363, 396, 657, 660, 791, 797, 799, 801, 802, 804, 806, 813, 815, 817, 819, 821, 823, 1069, 1070, 1071, 1072, 1073, 1074, 1211, 1212, 1213, 1214, 1215, 1216], "approv": 18, "respect": [18, 39, 40, 43, 44, 84, 85, 88, 89, 118, 119, 121, 123, 129, 130, 131, 134, 203, 237, 240, 396, 397, 400, 412, 415, 432, 435, 442, 445, 452, 455, 457, 460, 462, 465, 467, 470, 487, 490, 492, 495, 517, 520, 522, 525, 527, 530, 547, 550, 552, 555, 577, 580, 582, 585, 592, 595, 597, 600, 607, 610, 617, 620, 632, 633, 634, 635, 636, 667, 671, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 806, 813, 815, 817, 819, 821, 823, 856, 920, 923, 1047, 1048, 1049, 1050], "hash": [18, 139], "detail": [18, 19, 117, 118, 122, 123, 125, 126, 127, 128, 130, 139, 140, 203, 220, 223, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "rel": [18, 20, 53, 54, 78, 79, 94, 95, 98, 99, 125, 226, 228, 230, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 856, 872, 875, 902, 904, 905, 906, 917, 919, 949, 953, 985, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1120, 1121, 1124, 1126, 1129, 1176], "cancel": 18, "speedup": 18, "button": 18, "unavail": 18, "final": [18, 120, 121, 126, 129, 131, 133, 134, 136, 138, 139, 203, 231, 232, 234, 235, 683, 720, 1195, 1206], "tickbox": 18, "lower": [18, 33, 34, 49, 50, 57, 58, 94, 95, 102, 103, 121, 123, 136, 153, 203, 217, 218, 255, 257, 259, 396, 602, 856, 857, 858, 859, 860, 861, 1075, 1087, 1088, 1089, 1090, 1091], "corner": 18, "without": [18, 74, 75, 117, 118, 119, 121, 124, 126, 129, 130, 132, 134, 136, 138, 139, 140, 152, 153, 683, 756, 763, 985, 1016, 1019, 1051, 1053, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "span": 18, "intent": [18, 133], "larg": [18, 139, 396, 412, 415, 607, 610], "discourag": 18, "philosophi": 18, "increment": [18, 683, 744], "frequent": [18, 19], "valuabl": 18, "infrequ": 18, "earli": [18, 1176], "wast": 18, "spot": [18, 126], "mistak": [18, 134], "propos": 18, "mountain": 18, "around": [18, 71, 74, 75, 76, 77, 118, 126, 129, 138, 153], "advoc": [18, 153], "individu": [18, 19, 126], "per": [18, 47, 48, 92, 93, 123, 139, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "style": [18, 1094, 1097], "ve": [18, 135, 138, 1075, 1076, 1176], "were": [18, 74, 75, 117, 123, 130, 134], "actual": [18, 116, 126, 133, 135, 138, 140, 153], "aim": [18, 135], "part": [18, 33, 34, 117, 122, 123, 126, 136, 137, 141, 152, 153, 203, 255, 257, 259, 260, 262, 264, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1207, 1208], "subsect": 18, "session": [18, 1176], "block": [18, 123, 126, 134, 135, 137, 141, 153, 362, 791, 825, 834, 1176], "smaller": [18, 53, 54, 98, 99, 136, 141, 985, 986, 989, 1021, 1022, 1023, 1024, 1025, 1131, 1148, 1151, 1156, 1159], "edit": 18, "exact": [18, 72, 73, 74, 75, 136, 165, 167, 169, 1099, 1100, 1104], "beauti": 18, "particularli": [18, 123, 139, 153], "concern": [18, 116, 121, 130, 133, 135], "effici": [18, 118, 123, 126, 128, 130, 133, 134, 136, 139, 153], "difficult": [18, 123, 153, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "undo": 18, "stress": 18, "frequenc": [18, 683, 720], "advantag": 18, "nifti": 18, "reassur": 18, "isol": 18, "bash": [18, 20], "shell": 18, "rm": 18, "structur": [18, 20, 71, 74, 75, 76, 77, 117, 126, 129, 130, 139, 140, 683, 701, 1051, 1064], "fact": [18, 123, 139], "mount": 18, "local_path_to_ivi": 18, "overwrit": [18, 74, 75, 133, 136, 362, 386], "subfold": [18, 117, 123, 125], "insid": [18, 20, 117, 123, 130, 131], "wide": [18, 123], "via": [18, 117, 130, 131, 132, 133, 136, 138, 139, 152, 1051, 1052, 1061, 1062], "dep": 18, "fresh": 18, "copi": [18, 20, 33, 34, 35, 36, 41, 42, 53, 54, 74, 75, 78, 79, 80, 81, 86, 87, 98, 99, 120, 127, 131, 136, 138, 139, 152, 153, 203, 207, 208, 209, 210, 220, 223, 273, 276, 277, 278, 279, 280, 362, 387, 391, 683, 702, 768, 770, 779, 780, 781, 782, 783, 784, 985, 1016, 1017, 1018, 1019, 1020, 1051, 1053, 1120, 1126, 1129], "arsen": 18, "declar": [18, 884, 888, 939, 940], "exec": 18, "rf": 18, "cp": 18, "ivy_contain": 18, "test_ivi": [18, 123, 125], "test_funct": [18, 123], "test_cor": 18, "test_imag": 18, "test_random_crop": 18, "array_api_test": 18, "test_creation_funct": 18, "test_arang": 18, "window": [18, 20, 47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "variou": [18, 118, 120, 128, 152], "cpu": [18, 41, 42, 57, 58, 74, 75, 86, 87, 102, 103, 132, 153, 203, 231, 232, 234, 235, 268, 272, 362, 367, 368, 371, 373, 378, 381, 383, 384, 387, 391, 392, 394, 395, 683, 723, 726, 728, 729, 730, 731, 732, 754, 757, 758, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "gpu": [18, 132, 138, 362, 367, 373, 377, 379, 383, 384, 385, 392, 394], "combin": [18, 71, 74, 75, 76, 77, 121, 123, 126, 129, 130, 141, 683, 721, 722, 856, 862, 865], "text": [18, 120], "ctrl": 18, "prompt": [18, 1176], "instanc": [18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 124, 125, 126, 128, 129, 131, 133, 139, 140, 141, 154, 162, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 252, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 271, 272, 273, 281, 282, 283, 291, 292, 293, 294, 303, 306, 309, 312, 320, 323, 326, 329, 336, 339, 347, 348, 349, 362, 368, 369, 370, 383, 387, 388, 389, 390, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 432, 433, 434, 435, 437, 438, 439, 442, 443, 444, 445, 447, 448, 449, 452, 453, 454, 457, 458, 459, 462, 463, 464, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 482, 483, 484, 485, 487, 488, 489, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 522, 523, 524, 527, 528, 529, 530, 532, 533, 534, 537, 538, 539, 540, 542, 543, 544, 547, 548, 549, 552, 553, 554, 555, 557, 558, 559, 562, 563, 564, 567, 568, 569, 572, 573, 574, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 592, 593, 594, 597, 598, 599, 602, 603, 605, 607, 608, 609, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 667, 669, 670, 672, 674, 675, 676, 677, 678, 680, 681, 683, 684, 685, 686, 696, 697, 698, 700, 702, 708, 709, 710, 713, 714, 715, 723, 724, 725, 726, 728, 729, 730, 745, 764, 768, 769, 770, 777, 779, 781, 782, 783, 784, 792, 793, 794, 796, 808, 809, 810, 828, 830, 831, 835, 836, 837, 838, 842, 845, 846, 847, 848, 849, 855, 856, 857, 858, 859, 860, 862, 865, 867, 870, 872, 875, 884, 888, 902, 904, 939, 940, 943, 969, 970, 971, 972, 973, 975, 976, 977, 980, 981, 982, 985, 986, 987, 988, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1038, 1069, 1070, 1071, 1072, 1073, 1077, 1078, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1139, 1160, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1187, 1188], "shift": [18, 53, 54, 78, 79, 98, 99, 118, 121, 226, 228, 230, 396, 452, 455, 462, 465, 985, 1021, 1022, 1023, 1024, 1025], "whole": 18, "multipli": [18, 39, 40, 84, 85, 121, 127, 129, 396, 611, 683, 703], "cursor": 18, "alt": 18, "j": [18, 84, 85, 116, 582, 584, 586, 683, 691, 692, 856, 949, 953, 1131, 1132, 1135], "locat": [18, 117, 123, 125, 127, 132, 1075, 1076], "blog": 18, "debug": [18, 123, 130, 139], "breakpoint": 18, "gutter": 18, "caret": 18, "f8": 18, "f9": 18, "toolbar": 18, "method": [18, 19, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 134, 136, 137, 140, 141, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 208, 212, 213, 220, 221, 223, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 272, 273, 281, 282, 283, 285, 291, 292, 293, 295, 303, 306, 309, 312, 320, 323, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 696, 697, 698, 700, 701, 702, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 726, 727, 728, 729, 730, 732, 757, 758, 768, 769, 770, 772, 777, 779, 780, 781, 782, 783, 784, 791, 792, 793, 794, 796, 808, 809, 810, 812, 813, 815, 817, 819, 825, 828, 829, 830, 831, 834, 835, 836, 837, 838, 840, 845, 846, 847, 848, 850, 855, 856, 857, 858, 859, 861, 862, 865, 867, 870, 884, 888, 902, 904, 906, 939, 940, 943, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1035, 1038, 1051, 1052, 1062, 1063, 1064, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1136, 1139, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1195, 1206, 1207, 1208], "result": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 117, 118, 120, 121, 123, 124, 125, 128, 129, 130, 131, 133, 139, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 286, 289, 347, 348, 349, 350, 351, 362, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1051, 1054, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1104, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "Into": 18, "f7": 18, "smart": 18, "sever": [18, 117, 153, 856, 884, 887], "interest": 18, "consol": [18, 138], "store": [18, 74, 75, 120, 127, 129, 130, 136, 138, 139, 140, 203, 268, 272, 683, 720, 791, 833, 856, 949, 953, 985, 1026, 1207, 1208], "variabl": [18, 22, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44, 55, 56, 74, 75, 88, 89, 100, 101, 118, 119, 120, 123, 127, 130, 131, 133, 134, 139, 140, 141, 153, 683, 693, 743, 744, 745, 746, 747, 748, 750, 774, 791, 797, 799, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 815, 817, 819, 821, 823, 826, 829, 833, 835, 854, 856, 929, 932, 1047, 1048, 1049, 1050, 1069, 1070, 1071, 1072, 1073, 1074, 1176, 1187, 1188, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "fragment": 18, "except": [18, 57, 58, 67, 68, 74, 75, 102, 103, 112, 113, 119, 120, 129, 133, 134, 138, 153, 273, 286, 289, 683, 693, 706, 745, 785, 856, 917, 919, 985, 991, 994, 1031, 1034, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1097, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "pychram": 18, "depth": [18, 139, 140, 141, 152, 683, 739, 754, 1051, 1063, 1207, 1208], "dummi": 18, "wherein": [18, 123], "evalu": [18, 39, 40, 74, 75, 84, 85, 130, 396, 502, 503, 504, 505, 506, 507, 509, 510, 511, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 587, 589, 591, 612, 613, 614, 615, 616, 622, 623, 624, 626, 642, 643, 644, 645, 646, 662, 665, 1051, 1052, 1061, 1062, 1165, 1166, 1169, 1171, 1174], "failur": [18, 122], "wherebi": [19, 130, 1051, 1063], "broad": 19, "distribut": [19, 51, 52, 57, 58, 74, 75, 96, 97, 102, 103, 123, 132, 153, 835, 851, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1195, 1203, 1207, 1208], "across": [19, 74, 75, 94, 95, 118, 121, 123, 126, 130, 131, 362, 384, 385, 683, 691, 692, 1051, 1057, 1094, 1096], "todo": 19, "commit": [19, 123], "NOT": [19, 396, 587, 590], "static": [19, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 126, 128, 153, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 200, 201, 226, 230, 250, 254, 268, 269, 281, 285, 291, 295, 347, 351, 368, 372, 396, 397, 401, 402, 406, 407, 411, 412, 416, 417, 421, 422, 426, 427, 431, 432, 436, 437, 441, 442, 446, 447, 451, 452, 456, 457, 461, 462, 466, 467, 471, 472, 476, 477, 481, 482, 486, 487, 491, 492, 496, 497, 501, 502, 506, 507, 510, 511, 512, 516, 517, 521, 522, 526, 527, 531, 532, 536, 537, 541, 542, 546, 547, 551, 552, 556, 557, 561, 562, 566, 567, 571, 572, 576, 577, 581, 582, 586, 587, 591, 592, 596, 597, 601, 607, 611, 612, 616, 617, 621, 622, 626, 627, 631, 632, 636, 637, 641, 642, 646, 647, 651, 657, 661, 662, 666, 667, 668, 672, 673, 678, 679, 684, 688, 708, 712, 713, 717, 723, 727, 728, 732, 768, 772, 779, 780, 808, 812, 828, 829, 836, 840, 846, 850, 857, 861, 884, 888, 902, 906, 939, 940, 970, 974, 975, 979, 980, 984, 986, 990, 1011, 1015, 1016, 1020, 1021, 1025, 1070, 1074, 1077, 1081, 1082, 1086, 1087, 1091, 1105, 1106, 1126, 1130, 1160, 1161, 1166, 1170, 1171, 1175], "revers": [19, 22, 25, 26, 71, 76, 77, 120, 121, 141, 153, 683, 706, 985, 1003, 1006], "resourc": 19, "content": [19, 20, 74, 75, 124, 133, 136, 139], "thei": [19, 74, 75, 116, 117, 121, 123, 126, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 153, 273, 346, 1047, 1048, 1049, 1075, 1076, 1176, 1217, 1218], "hypothesi": [19, 125], "cover": [19, 120, 121, 123, 126, 128, 135], "lambda": [19, 136, 139, 1211, 1214, 1216], "direct": [19, 124, 140, 141, 152, 1120, 1126, 1129], "bind": [19, 130], "def": [19, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 884, 888, 939, 940, 1176], "special": [19, 22, 25, 26, 65, 66, 71, 76, 77, 117, 118, 120, 121, 129, 164, 195, 199, 396, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 467, 470, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 557, 560, 562, 565, 572, 575, 577, 580, 587, 590, 607, 610, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "aforement": 19, "categori": [19, 117, 124, 129, 130, 131, 135, 1176], "parent": [19, 138, 791, 825, 834], "arraywithelementwis": [19, 22, 25, 26, 39, 129], "containerwithmanipul": [19, 71, 76, 77, 98], "hint": [19, 117, 118, 120, 126, 129, 133, 134, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1073, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169], "docstr": [19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 126, 130, 134, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 237, 240, 242, 243, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 281, 282, 283, 285, 291, 292, 293, 294, 295, 309, 312, 320, 323, 347, 348, 349, 350, 351, 368, 369, 370, 372, 387, 388, 389, 390, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 605, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 836, 837, 838, 840, 846, 847, 848, 850, 856, 857, 858, 859, 861, 867, 870, 872, 875, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1130, 1131, 1136, 1139, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175], "thorough": [19, 118, 120, 123], "transpil": [19, 124, 135, 137, 1176, 1182], "verifi": [19, 119, 123, 131, 132, 138, 1176, 1182], "builder": [20, 151, 153, 1176], "maco": 20, "ubuntu": 20, "uid": 20, "make_docs_without_dock": 20, "synchron": 20, "rest": [20, 137, 141], "remove_doc": 20, "_": [20, 39, 40, 84, 85, 120, 123, 130, 133, 138, 139, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 508, 509, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 791, 792, 795, 797, 799, 856, 872, 875, 939, 943, 964, 968, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1120, 1121, 1124, 1131, 1136, 1139], "indic": [20, 41, 42, 47, 48, 53, 54, 55, 56, 74, 75, 86, 87, 92, 93, 98, 99, 100, 101, 124, 134, 137, 141, 164, 185, 188, 203, 207, 209, 396, 642, 645, 683, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 741, 754, 757, 758, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 959, 963, 985, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1051, 1052, 1054, 1056, 1058, 1059, 1060, 1062, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1110, 1114, 1120, 1121, 1124, 1126, 1129, 1176, 1179, 1181, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1207, 1208], "privat": [20, 123, 1211, 1215], "fulfil": [20, 135, 1176], "autogenerated_sourc": 20, "format": [20, 74, 75, 116, 120, 131, 132, 136, 138, 139, 273, 303, 306, 362, 368, 371, 1131, 1132, 1135, 1176], "png": [20, 139], "_imag": 20, "lastli": 20, "rst": 20, "skip": [20, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 123, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "read": [20, 74, 75, 1176], "partial_sourc": 20, "conf": 20, "create_rst_fil": 20, "filter": [20, 47, 48, 92, 93, 123, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "repres": [20, 23, 24, 39, 40, 72, 73, 84, 85, 123, 138, 164, 195, 196, 197, 198, 199, 203, 237, 240, 273, 308, 396, 407, 408, 409, 410, 411, 412, 415, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 482, 483, 484, 485, 486, 607, 610, 652, 653, 654, 655, 656, 677, 791, 825, 834, 835, 852, 856, 925, 927, 929, 932], "overal": [20, 120, 130, 131, 132, 141], "markup": 20, "6": [20, 22, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 53, 54, 57, 58, 63, 64, 71, 76, 77, 78, 79, 84, 85, 86, 87, 92, 93, 96, 97, 100, 101, 102, 103, 108, 109, 121, 123, 127, 130, 138, 139, 140, 164, 170, 173, 175, 178, 185, 188, 195, 199, 203, 226, 227, 228, 229, 230, 268, 272, 273, 281, 284, 303, 306, 309, 312, 362, 380, 396, 397, 398, 399, 400, 401, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 427, 429, 430, 431, 432, 434, 435, 436, 442, 445, 447, 450, 457, 458, 459, 460, 461, 467, 470, 472, 473, 474, 475, 477, 479, 480, 481, 482, 485, 487, 489, 490, 491, 492, 493, 494, 495, 507, 509, 512, 515, 517, 519, 520, 521, 522, 524, 525, 526, 527, 530, 537, 540, 547, 549, 550, 551, 552, 555, 587, 590, 602, 603, 605, 612, 615, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 657, 660, 662, 665, 672, 676, 677, 683, 692, 696, 699, 703, 723, 726, 728, 731, 732, 750, 768, 769, 770, 771, 772, 777, 791, 792, 793, 795, 835, 836, 837, 838, 839, 840, 842, 845, 846, 849, 855, 856, 862, 865, 867, 870, 872, 875, 912, 915, 934, 938, 939, 943, 944, 948, 969, 970, 972, 973, 974, 975, 977, 979, 980, 982, 983, 984, 985, 986, 987, 989, 991, 994, 999, 1002, 1003, 1006, 1011, 1014, 1021, 1024, 1026, 1027, 1030, 1035, 1038, 1051, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1098, 1099, 1100, 1104, 1105, 1109, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1148, 1151, 1160, 1164], "extract": [20, 117, 119], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 153], "module_nam": 20, "copy_readme_to_rst": 20, "tabl": 20, "toc": 20, "tree": 20, "append": [20, 74, 75, 123, 136, 139, 396, 452, 455, 856, 872, 875, 889, 892], "append_toctree_to_rst": 20, "9": [20, 22, 25, 26, 39, 40, 41, 42, 43, 44, 47, 48, 53, 54, 57, 58, 65, 66, 71, 76, 77, 84, 85, 86, 87, 88, 89, 92, 93, 102, 103, 108, 109, 110, 111, 121, 123, 139, 140, 273, 302, 309, 312, 320, 323, 396, 402, 403, 412, 413, 414, 415, 416, 422, 425, 437, 438, 439, 441, 442, 445, 447, 450, 487, 488, 489, 490, 491, 492, 493, 494, 495, 517, 519, 520, 521, 587, 590, 602, 603, 605, 637, 639, 640, 641, 642, 645, 657, 660, 662, 665, 683, 696, 699, 723, 726, 750, 768, 769, 770, 772, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 811, 813, 814, 815, 816, 835, 836, 837, 838, 839, 840, 842, 845, 846, 849, 856, 862, 865, 867, 870, 872, 875, 912, 915, 934, 938, 939, 943, 944, 948, 985, 986, 987, 989, 1003, 1006, 1021, 1024, 1026, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1098, 1099, 1100, 1104, 1120, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1160, 1161, 1162, 1163, 1164, 1211, 1212, 1213], "index": [20, 33, 34, 41, 42, 61, 62, 74, 75, 78, 79, 86, 87, 106, 107, 126, 130, 138, 202, 203, 217, 218, 237, 238, 239, 240, 241, 362, 383, 683, 689, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 985, 1031, 1034, 1051, 1054, 1055, 1058, 1059, 1060, 1065, 1067, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1179, 1181], "create_index_rst": 20, "14": [20, 39, 40, 57, 58, 84, 85, 86, 87, 100, 101, 102, 103, 121, 123, 130, 273, 309, 312, 320, 323, 396, 402, 404, 405, 406, 422, 425, 432, 433, 434, 435, 436, 467, 470, 642, 646, 652, 654, 656, 683, 768, 770, 771, 791, 792, 795, 835, 836, 839, 855, 856, 872, 875, 912, 915, 1070, 1072, 1074, 1077, 1078, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1099, 1100, 1104, 1131, 1132, 1135], "\u03c0": [20, 202, 396, 402, 405, 417, 420, 427, 430, 432, 435], "namespac": [20, 117, 128, 131, 136, 141], "arraywithactiv": [22, 23, 25, 26], "arraywithcr": [22, 25, 26, 33], "arraywithdatatyp": [22, 25, 26, 35], "arraywithdevic": [22, 25, 26, 37, 138], "arraywithgener": [22, 25, 26, 41, 138], "arraywithgradi": [22, 25, 26, 43, 138], "arraywithimag": [22, 25, 26, 45, 138], "arraywithlay": [22, 25, 26, 47], "arraywithlinearalgebra": [22, 25, 26, 49], "arraywithloss": [22, 25, 26, 51], "arraywithmanipul": [22, 25, 26, 53], "arraywithnorm": [22, 25, 26, 55], "arraywithrandom": [22, 25, 26, 57, 138], "arraywithsearch": [22, 25, 26, 59], "arraywithset": [22, 25, 26, 61], "arraywithsort": [22, 25, 26, 63], "arraywithstatist": [22, 25, 26, 65], "arraywithutil": [22, 25, 26, 67], "properti": [22, 25, 26, 74, 75, 121, 123, 125, 126, 130, 138, 139, 140, 1207, 1208, 1211, 1212, 1213, 1214, 1216], "__add__": [22, 25, 26, 71, 76, 77, 118, 120, 121, 129, 130, 138], "variant": [22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 836, 837, 838, 840, 846, 847, 848, 850, 857, 858, 859, 861, 902, 904, 906, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175], "wrap": [22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 123, 126, 127, 129, 130, 131, 132, 133, 136, 138, 141, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 688, 694, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 791, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 833, 836, 837, 838, 840, 846, 847, 848, 850, 857, 858, 859, 861, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175], "minim": [22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 120, 133, 136, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 252, 254, 255, 257, 260, 262, 268, 269, 270, 271, 281, 282, 283, 285, 291, 292, 293, 295, 347, 348, 349, 351, 368, 369, 370, 372, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 696, 697, 698, 700, 708, 709, 710, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 732, 768, 769, 770, 772, 779, 780, 781, 782, 792, 793, 794, 796, 808, 809, 810, 812, 828, 829, 830, 831, 836, 837, 838, 840, 846, 847, 848, 850, 857, 858, 859, 861, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 986, 987, 988, 990, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1105, 1106, 1107, 1108, 1126, 1127, 1128, 1130, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175], "self": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 129, 130, 136, 138, 139, 140, 141, 165, 166, 167, 170, 171, 172, 175, 176, 177, 180, 181, 182, 185, 186, 187, 190, 191, 192, 195, 197, 198, 207, 208, 212, 213, 214, 220, 221, 222, 226, 227, 228, 230, 237, 238, 239, 242, 243, 244, 250, 251, 252, 254, 255, 257, 258, 260, 262, 263, 268, 269, 270, 271, 276, 277, 278, 281, 282, 283, 286, 287, 288, 291, 292, 293, 303, 304, 305, 309, 310, 311, 320, 321, 322, 326, 327, 328, 331, 332, 333, 336, 337, 338, 341, 342, 343, 347, 348, 349, 351, 362, 368, 369, 370, 387, 389, 390, 397, 398, 399, 402, 403, 404, 407, 408, 409, 412, 413, 414, 417, 418, 419, 422, 423, 424, 427, 428, 429, 432, 433, 434, 437, 438, 439, 442, 443, 444, 447, 448, 449, 452, 453, 454, 457, 458, 459, 462, 463, 464, 467, 468, 469, 472, 473, 474, 477, 478, 479, 482, 483, 484, 487, 488, 489, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 512, 513, 514, 517, 518, 519, 522, 523, 524, 527, 528, 529, 532, 533, 534, 537, 538, 539, 542, 543, 544, 547, 548, 549, 552, 553, 554, 557, 558, 559, 562, 563, 564, 567, 568, 569, 572, 573, 574, 577, 578, 579, 582, 583, 584, 587, 588, 589, 592, 593, 594, 597, 598, 599, 603, 604, 607, 608, 609, 612, 613, 614, 617, 618, 619, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 642, 643, 644, 647, 648, 649, 652, 653, 654, 657, 658, 659, 662, 663, 664, 667, 669, 670, 672, 674, 675, 678, 680, 681, 684, 685, 686, 696, 697, 698, 708, 709, 710, 713, 714, 715, 723, 724, 725, 728, 729, 730, 768, 769, 770, 779, 780, 781, 782, 792, 793, 794, 797, 798, 804, 805, 808, 809, 810, 813, 814, 817, 818, 821, 822, 828, 830, 831, 836, 837, 838, 846, 847, 848, 857, 858, 859, 861, 862, 863, 864, 867, 868, 869, 872, 873, 874, 877, 878, 879, 881, 882, 884, 885, 886, 889, 890, 891, 893, 894, 895, 898, 899, 902, 903, 904, 907, 908, 909, 912, 913, 914, 917, 918, 920, 921, 922, 925, 926, 929, 930, 931, 934, 936, 937, 939, 941, 942, 944, 946, 947, 949, 951, 952, 954, 956, 957, 959, 961, 962, 964, 966, 967, 970, 971, 972, 975, 976, 977, 980, 981, 982, 986, 987, 988, 991, 992, 993, 995, 996, 997, 999, 1000, 1001, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1016, 1017, 1018, 1021, 1022, 1023, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1043, 1044, 1045, 1070, 1071, 1072, 1077, 1078, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1100, 1102, 1103, 1105, 1107, 1108, 1110, 1112, 1113, 1115, 1117, 1118, 1121, 1122, 1123, 1126, 1127, 1128, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1176, 1211, 1215], "input": [22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 154, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 312, 320, 323, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 356, 361, 362, 367, 368, 371, 380, 386, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 726, 728, 729, 730, 731, 732, 737, 738, 740, 741, 743, 744, 745, 747, 748, 749, 750, 754, 757, 758, 759, 762, 766, 768, 769, 770, 771, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 801, 802, 808, 809, 810, 811, 812, 826, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1209, 1210], "numer": [22, 25, 26, 39, 40, 41, 42, 57, 58, 71, 76, 77, 84, 85, 86, 87, 102, 103, 117, 125, 140, 203, 237, 240, 273, 276, 279, 396, 397, 398, 399, 400, 401, 412, 413, 414, 415, 416, 472, 473, 474, 475, 476, 487, 490, 507, 510, 512, 513, 514, 515, 516, 517, 520, 532, 535, 537, 540, 542, 545, 547, 550, 587, 590, 592, 595, 607, 610, 612, 613, 614, 615, 616, 617, 620, 622, 623, 624, 626, 627, 630, 632, 635, 637, 638, 639, 641, 642, 643, 644, 645, 646, 662, 665, 667, 668, 670, 671, 678, 682, 683, 735, 736, 760, 761, 768, 769, 770, 771, 772, 773, 856, 862, 865, 889, 892, 912, 915, 934, 938, 944, 948, 949, 953, 954, 958, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1131, 1136, 1139, 1148, 1151, 1156, 1159, 1189], "broadcast": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 117, 120, 121, 123, 130, 131, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 362, 387, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 699, 700, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 728, 729, 730, 731, 732, 741, 754, 757, 758, 791, 826, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1115, 1119, 1120, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "element": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 53, 54, 61, 62, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 98, 99, 106, 107, 120, 123, 125, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 225, 226, 227, 228, 229, 230, 255, 257, 259, 260, 262, 264, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 691, 692, 695, 696, 699, 703, 704, 719, 741, 768, 769, 770, 772, 779, 780, 781, 782, 783, 784, 791, 825, 834, 835, 851, 856, 862, 865, 877, 880, 889, 892, 920, 923, 934, 938, 985, 986, 987, 988, 989, 990, 1003, 1006, 1011, 1014, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1051, 1054, 1075, 1076, 1094, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1169, 1171, 1174, 1195, 1203], "wise": [22, 25, 26, 39, 40, 71, 72, 73, 74, 75, 76, 77, 84, 85, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 396, 397, 400, 402, 405, 412, 413, 414, 415, 416, 417, 420, 427, 430, 432, 435, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 683, 719, 985, 986, 989, 1211, 1214], "sum": [22, 25, 26, 39, 40, 41, 42, 65, 66, 71, 74, 75, 76, 77, 84, 85, 86, 87, 110, 111, 126, 130, 131, 133, 136, 362, 386, 396, 412, 413, 414, 415, 416, 577, 580, 667, 668, 670, 683, 704, 708, 709, 710, 711, 712, 757, 758, 835, 855, 856, 934, 938, 949, 953, 959, 963, 1131, 1132, 1135, 1152, 1155], "promot": [22, 23, 24, 25, 26, 35, 36, 39, 40, 49, 50, 71, 72, 73, 76, 77, 80, 81, 84, 85, 94, 95, 120, 126, 131, 164, 195, 196, 197, 198, 199, 273, 276, 279, 291, 292, 293, 294, 295, 346, 347, 350, 356, 396, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 502, 503, 504, 505, 506, 507, 509, 510, 511, 517, 518, 519, 521, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 597, 600, 607, 608, 609, 610, 611, 627, 628, 629, 630, 631, 632, 633, 635, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 856, 857, 858, 859, 860, 861, 862, 865, 884, 887, 889, 892, 902, 904, 905, 906, 912, 915, 917, 919, 929, 932, 954, 958, 959, 963, 985, 1031, 1034, 1131, 1140, 1143], "y": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 117, 121, 124, 127, 130, 136, 138, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 268, 272, 273, 276, 279, 281, 282, 283, 284, 285, 303, 306, 309, 312, 320, 323, 347, 349, 350, 362, 368, 371, 376, 380, 385, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 450, 457, 458, 459, 460, 461, 462, 465, 467, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 547, 548, 549, 550, 551, 552, 555, 582, 583, 584, 585, 586, 587, 590, 602, 603, 605, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 696, 697, 698, 699, 700, 702, 703, 718, 719, 723, 726, 728, 729, 730, 731, 732, 766, 768, 769, 770, 771, 772, 777, 779, 780, 781, 782, 783, 784, 791, 801, 802, 828, 829, 830, 831, 832, 835, 845, 846, 847, 848, 849, 850, 852, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 884, 887, 902, 904, 906, 912, 915, 939, 943, 944, 948, 949, 953, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 999, 1002, 1003, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035, 1038, 1051, 1054, 1067, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175], "z": [22, 25, 26, 39, 40, 41, 42, 51, 52, 57, 58, 71, 76, 77, 84, 85, 86, 87, 96, 97, 102, 103, 121, 127, 130, 136, 138, 362, 376, 396, 412, 413, 414, 415, 416, 432, 433, 434, 435, 436, 442, 445, 457, 458, 459, 460, 461, 467, 470, 522, 524, 525, 526, 527, 530, 537, 540, 547, 549, 550, 551, 552, 555, 582, 583, 584, 586, 602, 603, 605, 683, 691, 692, 723, 726, 728, 729, 730, 732, 766, 768, 769, 770, 771, 772, 856, 862, 865, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 989, 1051, 1054, 1067, 1075, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1094, 1095, 1131, 1132, 1135, 1136, 1139, 1148, 1151], "mix": [22, 25, 26, 35, 36, 39, 40, 41, 42, 71, 76, 77, 80, 81, 84, 85, 96, 97, 102, 103, 116, 121, 123, 136, 273, 281, 282, 283, 284, 285, 347, 350, 362, 380, 396, 412, 415, 442, 445, 457, 460, 467, 470, 487, 488, 490, 492, 493, 494, 495, 517, 518, 519, 520, 521, 522, 525, 527, 530, 547, 550, 552, 555, 617, 620, 632, 633, 634, 635, 636, 683, 684, 685, 702, 718, 723, 726, 728, 731, 777, 779, 783, 784, 835, 836, 839, 842, 845, 846, 849, 855, 856, 857, 860, 944, 948, 969, 970, 973, 974, 975, 979, 980, 983, 984, 985, 986, 989, 1069, 1070, 1073, 1077, 1081, 1082, 1086, 1087, 1091, 1094, 1098, 1120, 1126, 1129, 1131, 1132, 1135, 1140, 1143], "__le__": [22, 25, 26], "equal": [22, 25, 26, 33, 34, 39, 40, 41, 42, 57, 58, 65, 66, 74, 75, 84, 85, 86, 87, 94, 95, 102, 103, 121, 130, 131, 203, 217, 218, 225, 226, 227, 229, 273, 276, 279, 396, 452, 455, 462, 465, 496, 532, 535, 537, 540, 627, 630, 637, 640, 683, 684, 685, 686, 687, 688, 691, 692, 856, 872, 875, 902, 904, 905, 906, 917, 919, 985, 986, 989, 995, 998, 1026, 1043, 1046, 1075, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1140, 1143, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "bool": [22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 49, 50, 53, 54, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 119, 121, 130, 131, 133, 134, 141, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 207, 209, 225, 226, 228, 230, 250, 252, 254, 268, 269, 271, 273, 276, 279, 281, 283, 285, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 306, 325, 326, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 347, 349, 351, 352, 361, 362, 367, 368, 371, 377, 378, 381, 382, 386, 393, 395, 396, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 456, 457, 459, 460, 461, 462, 464, 466, 467, 469, 470, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 696, 698, 700, 703, 706, 708, 710, 712, 713, 715, 717, 718, 720, 723, 725, 727, 728, 730, 732, 734, 737, 738, 740, 745, 747, 748, 749, 750, 766, 767, 768, 770, 772, 779, 780, 782, 789, 790, 791, 808, 809, 810, 811, 812, 825, 826, 828, 829, 831, 834, 856, 857, 858, 859, 860, 861, 893, 896, 902, 904, 906, 934, 938, 959, 963, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1061, 1062, 1063, 1070, 1072, 1075, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1095, 1096, 1105, 1106, 1108, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1211, 1212, 1213, 1214, 1215, 1216], "true": [22, 23, 24, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 123, 124, 125, 126, 130, 131, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 288, 290, 291, 292, 293, 294, 295, 298, 300, 303, 305, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 325, 326, 328, 329, 330, 331, 333, 335, 336, 338, 339, 340, 341, 343, 344, 345, 347, 349, 351, 361, 362, 367, 378, 382, 383, 396, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 445, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 470, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 620, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 693, 694, 696, 698, 700, 703, 708, 710, 712, 713, 715, 717, 718, 720, 723, 725, 727, 728, 730, 732, 734, 737, 740, 741, 748, 750, 759, 762, 764, 766, 767, 768, 770, 772, 777, 779, 780, 782, 784, 786, 787, 788, 790, 791, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 831, 834, 835, 851, 856, 857, 858, 859, 860, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 889, 891, 893, 895, 896, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 936, 937, 938, 939, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 962, 963, 964, 965, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1061, 1062, 1064, 1070, 1072, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1113, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216], "__radd__": [22, 25, 26, 71, 76, 77, 120, 121], "adam_upd": [22, 25, 26, 88, 89, 140, 791], "invok": [22, 25, 26], "function_nam": [22, 25, 26], "arang": [22, 25, 26, 71, 76, 77, 131, 203, 231, 232, 234, 235, 1131, 1132, 1135, 1176], "arg_info": [22, 25, 26, 71, 76, 77, 683], "arg_nam": [22, 25, 26, 71, 76, 77, 683], "argmax": [22, 25, 26, 71, 76, 77, 1094, 1176], "argmin": [22, 25, 26, 71, 76, 77, 1094, 1176], "array_equ": [22, 25, 26, 71, 76, 77, 683], "arrays_equ": [22, 25, 26, 71, 74, 75, 76, 77, 683], "as_ivy_dev": [22, 25, 26, 71, 76, 77, 138, 362], "as_ivy_dtyp": [22, 25, 26, 71, 76, 77, 124, 273], "as_native_dev": [22, 25, 26, 71, 76, 77, 362], "as_native_dtyp": [22, 25, 26, 71, 76, 77, 273], "assert_supports_inplac": [22, 25, 26, 71, 76, 77, 683], "cache_fn": [22, 25, 26, 71, 76, 77, 126, 683], "clear_mem_on_dev": [22, 25, 26, 71, 76, 77, 362], "clip_matrix_norm": [22, 25, 26, 71, 76, 77, 683], "closest_valid_dtyp": [22, 25, 26, 71, 76, 77, 273], "container_typ": [22, 25, 26, 71, 76, 77, 683], "conv1d_transpos": [22, 25, 26, 71, 76, 77, 835], "conv2d": [22, 25, 26, 71, 76, 77, 835, 1176, 1195], "conv2d_transpos": [22, 25, 26, 71, 76, 77, 835], "conv3d": [22, 25, 26, 71, 76, 77, 835, 1195], "conv3d_transpos": [22, 25, 26, 71, 76, 77, 835], "copy_arrai": [22, 25, 26, 71, 76, 77, 683], "cumprod": [22, 25, 26, 71, 76, 77, 141, 683], "cumsum": [22, 25, 26, 71, 76, 77, 683, 1176], "current_backend_str": [22, 25, 26, 71, 76, 77, 119, 683], "default_devic": [22, 25, 26, 71, 76, 77, 132, 136, 362, 380, 383, 384, 394], "default_dtyp": [22, 25, 26, 71, 76, 77, 126, 131, 273], "default_float_dtyp": [22, 25, 26, 71, 76, 77, 131, 273], "default_int_dtyp": [22, 25, 26, 71, 76, 77, 131, 273], "default_uint_dtyp": [22, 25, 26, 71, 76, 77, 273, 355, 360], "dev_util": [22, 25, 26, 71, 76, 77, 132, 362], "dropout": [22, 25, 26, 71, 76, 77, 139, 835, 1195, 1206], "dtype": [22, 25, 26, 33, 34, 35, 36, 57, 58, 65, 66, 74, 75, 78, 79, 80, 81, 86, 87, 102, 103, 110, 111, 117, 119, 121, 123, 124, 125, 126, 128, 131, 132, 134, 138, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 382, 396, 462, 465, 683, 691, 692, 721, 722, 754, 779, 780, 782, 783, 835, 851, 985, 999, 1002, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1120, 1126, 1129, 1131, 1148, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1159, 1165, 1166, 1169, 1176, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1217, 1218], "dtype_bit": [22, 25, 26, 71, 76, 77, 273], "einops_rearrang": [22, 25, 26, 74, 75, 683], "empti": [22, 25, 26, 71, 74, 75, 76, 77, 129, 131, 132, 203, 204, 205, 791, 825, 834, 1131, 1152, 1155, 1156, 1159, 1165, 1166, 1169, 1171, 1174], "execute_with_gradi": [22, 25, 26, 71, 76, 77, 130, 139, 140, 141, 153, 791, 1176], "ey": [22, 25, 26, 71, 76, 77, 141, 203, 835, 842, 846, 849], "floormod": [22, 25, 26, 71, 76, 77, 683, 1176], "fourier_encod": [22, 25, 26, 71, 76, 77, 683], "function_supported_devic": [22, 25, 26, 71, 76, 77, 362], "function_supported_devices_and_dtyp": [22, 25, 26, 71, 76, 77, 683], "function_supported_dtyp": [22, 25, 26, 71, 76, 77, 119, 273], "function_unsupported_devic": [22, 25, 26, 71, 76, 77, 362], "function_unsupported_devices_and_dtyp": [22, 25, 26, 71, 76, 77, 683], "function_unsupported_dtyp": [22, 25, 26, 71, 76, 77, 119, 273], "get_all_arrays_in_memori": [22, 25, 26, 71, 76, 77, 683], "get_all_ivy_arrays_on_dev": [22, 25, 26, 71, 76, 77, 132, 362], "get_array_mod": [22, 25, 26, 71, 76, 77, 683, 759, 786], "get_min_bas": [22, 25, 26, 71, 76, 77, 683], "get_min_denomin": [22, 25, 26, 71, 76, 77, 683], "get_nestable_mod": [22, 25, 26, 71, 76, 77, 683, 762, 787], "get_num_dim": [22, 25, 26, 71, 76, 77, 683, 1176], "get_referrers_recurs": [22, 25, 26, 71, 76, 77, 683], "gpu_is_avail": [22, 25, 26, 71, 76, 77, 362], "gradient_descent_upd": [22, 25, 26, 88, 89, 791, 1047, 1048, 1049, 1050, 1176], "handle_nest": [22, 25, 26, 71, 76, 77, 126, 128, 130, 154], "handle_out_argu": [22, 25, 26, 71, 76, 77, 118, 128, 131, 132, 133, 154], "has_nan": [22, 25, 26, 74, 75, 683], "indices_wher": [22, 25, 26, 71, 76, 77, 134, 683, 1176], "infer_devic": [22, 25, 26, 71, 76, 77, 118, 128, 131, 132, 154], "infer_dtyp": [22, 25, 26, 71, 76, 77, 118, 128, 131, 132, 154], "inplace_arrays_support": [22, 25, 26, 71, 76, 77, 683], "inplace_decr": [22, 25, 26, 71, 76, 77, 683], "inplace_incr": [22, 25, 26, 71, 76, 77, 683], "inplace_upd": [22, 25, 26, 74, 75, 133, 683, 1187, 1188], "inplace_variables_support": [22, 25, 26, 71, 76, 77, 683], "inputs_to_native_arrai": [22, 25, 26, 71, 76, 77, 128, 129, 154], "invalid_dtyp": [22, 25, 26, 71, 76, 77, 119, 131, 273], "is_arrai": [22, 25, 26, 124, 683], "is_ivy_arrai": [22, 25, 26, 133, 138, 683], "is_ivy_contain": [22, 25, 26, 71, 76, 77, 683], "is_native_arrai": [22, 25, 26, 138, 683], "is_vari": [22, 25, 26, 43, 44, 88, 89, 133, 791, 812], "boolean": [22, 25, 26, 39, 40, 41, 42, 43, 44, 53, 54, 74, 75, 84, 85, 86, 87, 88, 89, 98, 99, 123, 125, 130, 203, 207, 209, 225, 273, 276, 279, 325, 361, 362, 377, 393, 396, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 683, 684, 685, 686, 687, 688, 691, 692, 740, 741, 742, 746, 747, 748, 749, 750, 759, 762, 764, 774, 790, 791, 808, 809, 810, 811, 812, 825, 834, 985, 1016, 1017, 1018, 1019, 1020, 1047, 1048, 1049, 1051, 1061, 1131, 1144, 1147], "trainabl": [22, 25, 26, 43, 44, 88, 89, 120, 137, 139, 140, 791, 808, 809, 810, 811, 812, 1187, 1188, 1207, 1208, 1217], "lamb_upd": [22, 25, 26, 88, 89, 791], "lars_upd": [22, 25, 26, 88, 89, 791], "linear": [22, 25, 26, 71, 72, 73, 76, 77, 120, 136, 139, 140, 141, 164, 165, 168, 170, 173, 175, 177, 178, 179, 683, 720, 835, 851, 929, 932, 1176, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "linspac": [22, 25, 26, 71, 76, 77, 136, 203, 204, 205, 1176], "logspac": [22, 25, 26, 71, 76, 77, 136, 203], "lstm_updat": [22, 25, 26, 71, 76, 77, 136, 835], "mt": [22, 25, 26, 138], "match_kwarg": [22, 25, 26, 71, 76, 77, 683], "matrix_pow": [22, 25, 26, 94, 95, 856], "maximum": [22, 25, 26, 41, 42, 53, 54, 71, 74, 75, 76, 77, 86, 87, 98, 99, 121, 136, 139, 141, 362, 386, 396, 683, 695, 696, 697, 698, 699, 700, 720, 791, 813, 815, 985, 986, 987, 988, 989, 990, 1051, 1063, 1094, 1095, 1131, 1136, 1139, 1144, 1147, 1176], "minimum": [22, 25, 26, 41, 42, 53, 54, 74, 75, 84, 85, 86, 87, 98, 99, 136, 141, 396, 397, 400, 606, 683, 735, 736, 760, 761, 768, 769, 770, 771, 772, 773, 985, 986, 987, 988, 989, 990, 1094, 1096, 1131, 1136, 1139, 1144, 1147, 1176], "multi_head_attent": [22, 25, 26, 71, 76, 77, 130, 133, 835], "multinomi": [22, 25, 26, 71, 76, 77, 1075], "multiprocess": [22, 25, 26, 71, 74, 75, 76, 77, 139, 153, 683], "ndim": [22, 25, 26, 123, 138, 856, 920, 923, 934, 938], "dimens": [22, 25, 26, 33, 34, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 65, 66, 67, 68, 71, 74, 75, 76, 77, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 112, 113, 121, 123, 124, 125, 136, 139, 164, 185, 188, 203, 255, 257, 259, 260, 262, 264, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 738, 754, 789, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 856, 857, 858, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953, 954, 958, 959, 963, 969, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 991, 994, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1047, 1048, 1049, 1050, 1075, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1205, 1206], "ax": [22, 25, 26, 49, 50, 53, 54, 65, 66, 67, 68, 72, 73, 74, 75, 94, 95, 98, 99, 112, 113, 117, 121, 123, 131, 138, 185, 187, 189, 362, 386, 683, 703, 856, 893, 896, 929, 932, 944, 945, 946, 947, 948, 959, 963, 985, 995, 998, 1003, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1035, 1038, 1043, 1046, 1094, 1095, 1096, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "nonzero": [22, 25, 26, 71, 76, 77, 396, 412, 415, 607, 610, 1094], "num_arrays_in_memori": [22, 25, 26, 71, 76, 77, 683], "num_cpu_cor": [22, 25, 26, 71, 76, 77, 132, 362], "num_gpu": [22, 25, 26, 71, 76, 77, 123, 132, 362], "num_ivy_arrays_on_dev": [22, 25, 26, 71, 76, 77, 362], "one_hot": [22, 25, 26, 71, 76, 77, 141, 683, 1176], "ones": [22, 25, 26, 33, 34, 57, 58, 71, 74, 75, 76, 77, 78, 79, 102, 103, 123, 136, 138, 139, 203, 217, 218, 226, 227, 229, 250, 251, 252, 253, 254, 268, 272, 396, 472, 475, 683, 754, 1077, 1078, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1176], "optimizer_upd": [22, 25, 26, 88, 89, 791], "outputs_to_ivy_arrai": [22, 25, 26, 71, 76, 77, 118, 128, 129, 131, 132, 154], "percent_used_mem_on_dev": [22, 25, 26, 71, 76, 77, 362], "print_all_arrays_in_memori": [22, 25, 26, 71, 76, 77, 683], "print_all_ivy_arrays_on_dev": [22, 25, 26, 71, 76, 77, 362], "promote_typ": [22, 25, 26, 71, 76, 77, 273], "queue_timeout": [22, 25, 26, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 683], "scaled_dot_product_attent": [22, 25, 26, 71, 76, 77, 835], "scatter_flat": [22, 25, 26, 71, 76, 77, 683], "scatter_nd": [22, 25, 26, 71, 76, 77, 138, 683, 1176], "seed": [22, 25, 26, 71, 74, 75, 76, 77, 1075, 1176], "set_array_mod": [22, 25, 26, 71, 76, 77, 683, 734, 786], "set_default_devic": [22, 25, 26, 71, 76, 77, 132, 362, 394], "set_default_dtyp": [22, 25, 26, 71, 76, 77, 126, 131, 273], "set_default_float_dtyp": [22, 25, 26, 71, 76, 77, 131, 273], "set_default_int_dtyp": [22, 25, 26, 71, 76, 77, 131, 273], "set_default_uint_dtyp": [22, 25, 26, 71, 76, 77, 273, 302, 360], "set_min_bas": [22, 25, 26, 71, 76, 77, 683], "set_min_denomin": [22, 25, 26, 71, 76, 77, 683], "set_nestable_mod": [22, 25, 26, 71, 76, 77, 683, 737, 787], "set_queue_timeout": [22, 25, 26, 71, 76, 77, 683], "set_shape_array_mod": [22, 25, 26, 71, 76, 77, 683, 767, 788], "set_split_factor": [22, 25, 26, 71, 76, 77, 362], "set_tmp_dir": [22, 25, 26, 71, 76, 77, 683], "set_with_grad": [22, 25, 26, 71, 76, 77, 791, 834], "shape_array_mod": [22, 25, 26, 71, 76, 77, 683, 764, 788], "shuffl": [22, 25, 26, 74, 75, 1075, 1176], "size": [22, 25, 26, 53, 54, 71, 74, 75, 76, 77, 94, 95, 98, 99, 123, 125, 138, 139, 203, 231, 232, 234, 235, 362, 384, 385, 386, 683, 757, 835, 855, 856, 872, 875, 893, 896, 912, 915, 920, 923, 934, 938, 939, 943, 954, 958, 985, 999, 1002, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1075, 1076, 1094, 1095, 1097, 1165, 1166, 1169, 1171, 1174, 1195, 1196, 1197], "product": [22, 25, 26, 39, 40, 130, 396, 607, 608, 610, 683, 703, 835, 854, 855, 856, 862, 865, 889, 892, 912, 915, 944, 948, 954, 958, 1131, 1132, 1135, 1148, 1151, 1195, 1206], "unknown": [22, 25, 26], "model": [22, 25, 26, 139, 140, 1176], "slogdet": [22, 25, 26, 94, 95, 856], "split_factor": [22, 25, 26, 71, 76, 77, 362, 384], "split_func_cal": [22, 25, 26, 71, 76, 77, 362], "stable_pow": [22, 25, 26, 71, 76, 77, 683], "stop_gradi": [22, 25, 26, 71, 74, 75, 76, 77, 88, 89, 140, 362, 386, 791, 797, 798, 799, 800, 804, 805, 806, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1047, 1048, 1049, 1050, 1176, 1211, 1212, 1213, 1214, 1215, 1216], "supports_inplac": [22, 25, 26, 71, 76, 77, 683], "tmp_dir": [22, 25, 26, 71, 76, 77, 683], "to_ivy_shap": [22, 25, 26, 71, 76, 77, 683], "to_list": [22, 25, 26, 74, 75, 683, 1176], "to_native_arrays_and_back": [22, 25, 26, 71, 76, 77, 118, 128, 154], "to_native_shap": [22, 25, 26, 71, 76, 77, 683], "to_scalar": [22, 25, 26, 71, 76, 77, 683], "total_mem_on_dev": [22, 25, 26, 71, 76, 77, 132, 362], "tpu_is_avail": [22, 25, 26, 71, 76, 77, 362], "try_else_non": [22, 25, 26, 71, 76, 77, 683], "type_promote_arrai": [22, 25, 26, 71, 76, 77, 273], "unset_array_mod": [22, 25, 26, 71, 76, 77, 683], "unset_default_devic": [22, 25, 26, 71, 76, 77, 362], "unset_default_dtyp": [22, 25, 26, 71, 76, 77, 273, 352], "unset_default_float_dtyp": [22, 25, 26, 71, 76, 77, 273], "unset_default_int_dtyp": [22, 25, 26, 71, 76, 77, 273], "unset_default_uint_dtyp": [22, 25, 26, 71, 76, 77, 273], "unset_nestable_mod": [22, 25, 26, 71, 76, 77, 683], "unset_shape_array_mod": [22, 25, 26, 71, 76, 77, 683, 786], "unset_with_grad": [22, 25, 26, 71, 76, 77, 791], "unstack": [22, 25, 26, 74, 75, 130, 136, 139, 683, 1176], "used_mem_on_dev": [22, 25, 26, 71, 76, 77, 362], "valid_dtyp": [22, 25, 26, 71, 76, 77, 273], "value_is_nan": [22, 25, 26, 71, 76, 77, 683], "variable_data": [22, 25, 26, 71, 76, 77, 791], "with_grad": [22, 25, 26, 71, 76, 77, 791, 825], "abc": [23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 138, 362, 363, 683, 718, 1051, 1068, 1207, 1208, 1211, 1215], "gelu": [23, 24, 72, 73, 164, 169, 1184], "approxim": [23, 24, 72, 73, 94, 95, 120, 164, 165, 166, 167, 168, 169, 195, 199, 396, 402, 405, 407, 410, 417, 420, 422, 425, 427, 430, 432, 435, 477, 480, 482, 485, 502, 505, 507, 510, 557, 560, 562, 565, 567, 570, 572, 575, 627, 630, 647, 650, 652, 655, 672, 676, 677, 856, 902, 904, 905, 906, 917, 919], "185": [23, 24, 72, 73, 165, 166, 167, 169], "046": [23, 24, 72, 73, 165, 166, 167, 169], "leaky_relu": [23, 24, 72, 73, 123, 164, 174, 1176], "alpha": [23, 24, 72, 73, 123, 124, 164, 170, 171, 172, 173, 174], "39": [23, 24, 57, 58, 72, 73, 102, 103, 164, 170, 171, 172, 173, 174, 396, 422, 425, 502, 505, 791, 792, 795, 856, 912, 915, 1075, 1082, 1083, 1084, 1085, 1086, 1131, 1132, 1135], "85": [23, 24, 57, 58, 72, 73, 102, 103, 164, 170, 171, 172, 173, 174, 396, 467, 470, 683, 768, 771, 1075, 1077, 1078, 1082, 1083, 1084, 1087, 1088, 1090], "17": [23, 24, 72, 73, 92, 93, 102, 103, 121, 130, 164, 170, 171, 172, 173, 174, 396, 487, 490, 836, 838, 840, 856, 872, 875, 939, 943, 1075, 1077, 1079, 1081, 1082, 1084, 1087, 1089, 1090, 1091], "relu": [23, 24, 69, 70, 72, 73, 139, 140, 164, 170, 172, 173, 174, 179, 1176], "sigmoid": [23, 24, 72, 73, 136, 139, 140, 164, 184, 1176], "269": [23, 24, 72, 73, 164, 180, 181, 182, 183, 184], "731": [23, 24, 72, 73, 164, 180, 181, 182, 183, 184], "881": [23, 24, 39, 40, 72, 73, 84, 85, 164, 180, 181, 182, 183, 184, 396, 422, 423, 424, 425], "softmax": [23, 24, 69, 70, 72, 73, 164, 189, 835, 854, 855, 1176], "axi": [23, 24, 41, 42, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 86, 87, 94, 95, 96, 97, 98, 99, 108, 109, 110, 111, 112, 113, 118, 121, 123, 124, 126, 130, 131, 133, 134, 136, 138, 141, 152, 164, 185, 186, 187, 188, 189, 203, 231, 232, 233, 234, 235, 236, 362, 386, 683, 703, 704, 723, 724, 725, 726, 727, 789, 856, 862, 863, 864, 865, 866, 872, 875, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 969, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 991, 992, 993, 994, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1075, 1093, 1094, 1095, 1096, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "422": [23, 24, 72, 73, 164, 185, 186, 187, 188, 189], "155": [23, 24, 72, 73, 164, 185, 186, 187, 188, 189], "softplu": [23, 24, 72, 73, 164, 194, 1176], "3461": [23, 24, 72, 73, 164, 190, 191, 192, 193, 194], "6491": [23, 24, 72, 73, 164, 190, 191, 192, 193, 194], "535": [23, 24, 72, 73, 164, 190, 191, 192, 193, 194], "42": [23, 24, 57, 58, 72, 73, 100, 101, 102, 103, 141, 164, 190, 191, 192, 193, 194, 791, 792, 795, 856, 912, 915, 1070, 1072, 1074, 1075, 1082, 1083, 1084, 1092, 1131, 1132, 1135], "tanh": [23, 24, 39, 40, 72, 73, 84, 85, 136, 164, 196, 396, 1176], "whose": [23, 24, 33, 34, 39, 40, 49, 50, 53, 54, 61, 62, 72, 73, 78, 79, 84, 85, 94, 95, 98, 99, 106, 107, 120, 123, 164, 195, 196, 197, 198, 199, 203, 226, 228, 230, 255, 257, 259, 260, 262, 264, 396, 407, 408, 409, 410, 411, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 627, 628, 630, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 672, 673, 674, 675, 676, 677, 683, 694, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953, 985, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1131, 1132, 1135], "hyperbol": [23, 24, 39, 40, 72, 73, 84, 85, 164, 195, 196, 197, 198, 199, 396, 407, 408, 409, 410, 411, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 482, 483, 484, 485, 486, 652, 653, 654, 655, 656, 677], "angl": [23, 24, 39, 40, 72, 73, 84, 85, 152, 164, 195, 196, 197, 198, 199, 396, 432, 435, 482, 483, 484, 485, 486, 652, 653, 654, 655, 656, 677], "real": [23, 24, 39, 40, 72, 73, 84, 85, 164, 195, 196, 197, 198, 199, 396, 402, 403, 404, 406, 407, 408, 417, 418, 419, 421, 427, 428, 429, 431, 432, 433, 434, 436, 487, 488, 489, 491, 502, 504, 506, 507, 509, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 597, 598, 607, 608, 609, 611, 627, 628, 629, 631, 632, 633, 634, 636, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 677, 678, 679, 680, 681], "float": [23, 24, 33, 34, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 57, 58, 65, 66, 72, 73, 78, 79, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 110, 111, 118, 119, 120, 123, 125, 126, 130, 131, 133, 138, 140, 164, 170, 173, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 209, 211, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 265, 267, 273, 276, 279, 298, 299, 309, 312, 331, 334, 347, 350, 362, 373, 381, 384, 385, 392, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 467, 470, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 492, 493, 495, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 515, 517, 520, 522, 525, 527, 530, 537, 540, 547, 550, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 695, 696, 697, 698, 699, 700, 720, 735, 736, 760, 761, 768, 771, 773, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 842, 846, 849, 855, 856, 857, 858, 859, 860, 861, 867, 870, 877, 880, 881, 883, 884, 887, 902, 904, 905, 906, 917, 919, 920, 923, 929, 932, 934, 938, 959, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1047, 1048, 1049, 1050, 1069, 1070, 1071, 1072, 1073, 1075, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1211, 1212, 1213, 1214, 1215, 1216], "tangent": [23, 24, 39, 40, 72, 73, 84, 85, 120, 164, 195, 196, 197, 198, 199, 396, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 672, 673, 674, 675, 676, 677], "762": [23, 24, 39, 40, 72, 73, 84, 85, 164, 195, 197, 198, 199, 396, 677], "964": [23, 24, 39, 40, 72, 73, 84, 85, 164, 195, 197, 198, 199, 396, 677], "collect": [28, 74, 75, 123, 125, 152, 164, 200, 362, 683, 791, 835, 969, 1051, 1064, 1069, 1075, 1184, 1195, 1209, 1211], "args_to_ivi": 28, "include_deriv": [28, 29, 30, 31, 32, 1051, 1053, 1063], "keyword": [28, 29, 30, 71, 74, 75, 76, 77, 117, 118, 123, 124, 125, 131, 132, 133, 139, 203, 237, 240, 683, 690, 751, 1051, 1057, 1131, 1156, 1159, 1207, 1208], "nest": [28, 29, 30, 31, 32, 71, 74, 75, 76, 77, 117, 123, 126, 129, 130, 138, 139, 140, 153, 683, 777, 791, 825, 834, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216], "unchang": [28, 29, 30, 31, 32], "posit": [28, 29, 30, 39, 40, 49, 50, 53, 54, 84, 85, 94, 95, 98, 99, 118, 123, 124, 125, 139, 152, 202, 203, 217, 218, 273, 309, 312, 396, 397, 400, 532, 535, 537, 538, 539, 540, 541, 607, 610, 626, 632, 635, 683, 720, 856, 857, 858, 859, 860, 861, 985, 999, 1002, 1021, 1022, 1023, 1024, 1025, 1075, 1092, 1094, 1097, 1165, 1166, 1169, 1171, 1174, 1187, 1188], "deriv": [28, 29, 30, 31, 32, 33, 34, 43, 44, 78, 79, 88, 89, 131, 132, 138, 140, 203, 212, 213, 215, 226, 227, 229, 250, 251, 252, 253, 254, 268, 269, 270, 271, 272, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1051, 1053, 1063, 1207, 1211, 1215, 1217], "tupl": [28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 53, 54, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 119, 123, 124, 125, 130, 131, 132, 134, 138, 139, 140, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 207, 208, 209, 226, 228, 230, 242, 245, 250, 252, 254, 268, 269, 271, 273, 281, 283, 285, 286, 289, 291, 293, 295, 314, 315, 317, 318, 347, 349, 351, 356, 362, 367, 374, 375, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 720, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 835, 842, 845, 846, 847, 848, 849, 850, 853, 856, 857, 859, 861, 902, 904, 905, 906, 917, 919, 934, 935, 936, 937, 938, 944, 948, 959, 963, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 991, 994, 995, 998, 1003, 1006, 1007, 1010, 1016, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1034, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1056, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1097, 1099, 1105, 1106, 1108, 1109, 1110, 1114, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "kei": [28, 29, 30, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 123, 125, 130, 134, 139, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 696, 698, 700, 701, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 835, 854, 855, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1047, 1048, 1049, 1051, 1054, 1060, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175, 1187, 1188, 1195, 1206, 1211, 1215], "word": [28, 29, 30, 130, 203, 204, 205, 1075, 1087, 1090, 1187, 1188], "args_to_n": [28, 133, 138], "to_ivi": [28, 74, 75, 138, 1051, 1064], "leaf": [28, 31, 32, 74, 75, 126, 130, 139, 1051, 1052, 1061, 1062], "union": [28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 65, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 117, 118, 119, 121, 126, 129, 130, 131, 132, 133, 134, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 255, 259, 260, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 293, 295, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 312, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 364, 365, 366, 367, 368, 369, 371, 373, 376, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 691, 692, 695, 696, 698, 699, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 740, 741, 743, 744, 745, 750, 754, 757, 758, 766, 768, 769, 770, 771, 772, 776, 777, 778, 779, 780, 782, 783, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 808, 810, 811, 812, 813, 815, 817, 819, 821, 823, 826, 828, 829, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 857, 859, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 935, 936, 937, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1062, 1063, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1211, 1212, 1213, 1215], "nativearrai": [28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 53, 54, 57, 58, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 112, 113, 117, 118, 121, 126, 128, 129, 130, 133, 134, 136, 138, 141, 154, 162, 164, 165, 168, 169, 170, 173, 174, 175, 178, 179, 180, 183, 184, 185, 188, 189, 190, 193, 194, 195, 199, 203, 204, 205, 207, 209, 212, 215, 226, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 250, 253, 254, 255, 259, 260, 264, 268, 269, 272, 273, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 294, 303, 306, 309, 312, 320, 323, 326, 329, 331, 334, 336, 339, 341, 344, 347, 348, 350, 356, 362, 367, 368, 371, 380, 386, 387, 391, 396, 397, 400, 401, 402, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 480, 482, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 505, 506, 507, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 565, 566, 567, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 645, 646, 647, 650, 652, 655, 657, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 679, 682, 683, 684, 685, 687, 691, 692, 695, 696, 699, 700, 702, 703, 704, 707, 708, 711, 712, 713, 714, 716, 717, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 740, 741, 743, 744, 745, 750, 754, 757, 758, 759, 766, 768, 769, 770, 771, 772, 777, 779, 780, 783, 784, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 808, 811, 812, 813, 815, 817, 819, 821, 823, 826, 828, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 857, 860, 861, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 902, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1051, 1053, 1054, 1063, 1067, 1068, 1069, 1070, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1109, 1110, 1114, 1115, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1164, 1165, 1166, 1169, 1170, 1171, 1174, 1175], "travers": [28, 31, 32, 74, 75, 130, 136, 138, 1051, 1063], "lowest": [28, 31, 32, 57, 58, 74, 75, 102, 103, 126, 153, 1051, 1063, 1075, 1077, 1078, 1079, 1080, 1081], "leav": [28, 31, 32, 71, 74, 75, 76, 77, 118, 120, 121, 123, 126, 130, 131, 133, 139, 140, 985, 1031, 1034, 1051, 1052, 1053, 1061, 1062, 1063], "to_n": [28, 74, 75], "item": [28, 32, 69, 70, 74, 75, 86, 87, 131, 136, 138, 139, 141, 273, 297, 362, 367, 683, 701, 739, 768, 770, 771, 772, 773, 1051, 1056, 1057, 1058, 1059, 1063, 1067, 1068, 1176, 1207, 1208], "asarrai": [33, 34, 41, 42, 71, 76, 77, 86, 87, 123, 125, 128, 133, 203, 683, 768, 769, 770, 771, 772, 835, 836, 839, 1099, 1105, 1109], "nativedtyp": [33, 34, 57, 58, 78, 79, 102, 103, 117, 118, 131, 132, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 298, 299, 301, 302, 303, 306, 308, 346, 352, 361, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1131, 1156, 1159], "datatyp": [33, 34, 74, 75, 80, 81, 203, 207, 208, 226, 227, 229, 242, 243, 245, 273, 296, 346, 352], "nativedevic": [33, 34, 37, 38, 57, 58, 78, 79, 102, 103, 117, 118, 131, 132, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 252, 253, 254, 265, 267, 268, 269, 270, 271, 272, 362, 365, 366, 367, 368, 369, 371, 373, 376, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 395, 683, 754, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1211, 1212, 1213, 1215], "interpret": [33, 34, 203, 207, 208, 209, 242, 243, 245], "empty_lik": [33, 34, 78, 79, 203], "uniniti": [33, 34, 203, 211, 212, 213, 215], "from_dlpack": [33, 34, 78, 79, 203], "full_lik": [33, 34, 78, 79, 119, 203, 230], "fill_valu": [33, 34, 78, 79, 119, 125, 131, 203, 225, 226, 227, 228, 229, 230, 396, 527, 530, 552, 555], "scalar": [33, 34, 72, 73, 78, 79, 131, 136, 141, 153, 170, 172, 174, 203, 226, 227, 228, 229, 230, 683, 754, 784, 790, 856, 959, 963], "fill": [33, 34, 57, 58, 74, 75, 78, 79, 102, 103, 125, 203, 211, 225, 226, 227, 228, 229, 230, 247, 248, 250, 251, 252, 253, 254, 265, 267, 268, 269, 270, 271, 272, 1075, 1077, 1078, 1079, 1080, 1081], "int": [33, 34, 41, 42, 43, 44, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 78, 79, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 113, 117, 118, 119, 121, 124, 125, 126, 130, 131, 132, 133, 134, 141, 164, 185, 188, 200, 201, 203, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 255, 257, 259, 260, 262, 264, 273, 286, 289, 301, 308, 309, 312, 320, 323, 336, 339, 362, 378, 379, 380, 386, 387, 391, 396, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 683, 689, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 723, 724, 725, 726, 727, 738, 754, 757, 768, 771, 789, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 835, 836, 837, 838, 839, 840, 842, 844, 845, 846, 847, 848, 849, 850, 856, 857, 859, 861, 862, 865, 872, 875, 944, 948, 949, 953, 954, 958, 959, 963, 969, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1042, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1092, 1094, 1095, 1096, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "000123": [33, 34, 203, 226, 227, 229], "meshgrid": [33, 34, 78, 79, 203], "xy": [33, 34, 78, 79, 203, 237, 238, 239, 240, 241], "ones_lik": [33, 34, 78, 79, 141, 203, 254, 1176], "tril": [33, 34, 78, 79, 203], "k": [33, 34, 57, 58, 78, 79, 84, 85, 102, 103, 116, 124, 125, 136, 203, 217, 218, 219, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 582, 584, 586, 683, 691, 835, 855, 856, 889, 892, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1097], "n": [33, 34, 57, 58, 65, 66, 67, 68, 84, 85, 94, 95, 102, 103, 112, 113, 116, 123, 203, 237, 240, 255, 257, 259, 260, 262, 264, 582, 584, 586, 683, 692, 835, 851, 856, 872, 875, 889, 892, 898, 899, 900, 901, 902, 904, 905, 906, 907, 910, 912, 915, 917, 919, 920, 923, 934, 938, 939, 943, 949, 953, 954, 958, 959, 963, 964, 968, 985, 995, 998, 999, 1002, 1007, 1010, 1031, 1034, 1043, 1046, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1097, 1131, 1140, 1143, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "innermost": [33, 34, 49, 50, 94, 95, 203, 255, 257, 259, 260, 262, 264, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953], "mxn": [33, 34, 94, 95, 203, 255, 257, 259, 260, 262, 264, 856, 872, 875, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 939, 943, 949, 953], "matric": [33, 34, 49, 50, 94, 95, 152, 203, 237, 240, 255, 257, 259, 260, 262, 264, 835, 852, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 898, 900, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953], "diagon": [33, 34, 49, 50, 94, 95, 203, 217, 218, 255, 257, 259, 260, 262, 264, 856, 949, 953], "triangular": [33, 34, 49, 50, 94, 95, 203, 255, 257, 259, 260, 262, 264, 856, 857, 858, 859, 860, 861, 920, 923], "triu": [33, 34, 78, 79, 203], "upper": [33, 34, 49, 50, 57, 58, 94, 95, 102, 103, 123, 203, 217, 218, 260, 262, 264, 856, 857, 858, 859, 860, 861, 920, 923, 1075, 1087, 1088, 1089, 1090, 1091], "zeros_lik": [33, 34, 78, 79, 124, 203, 269, 835, 846, 849, 985, 986, 989, 1176], "creation": [34, 71, 74, 75, 76, 77, 79, 117, 119, 123, 125, 128, 131, 132, 136, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "data_typ": [35, 36, 80, 81, 117, 119, 123, 131, 273, 274, 275, 276, 279, 281, 284, 286, 289, 291, 294, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 312, 314, 315, 317, 318, 320, 323, 325, 326, 329, 331, 334, 336, 339, 341, 344, 346, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "astyp": [35, 36, 47, 48, 80, 81, 92, 93, 124, 131, 133, 273, 846, 847, 848, 850], "broadcast_arrai": [35, 36, 80, 81, 273, 285], "arbitrari": [35, 36, 74, 75, 80, 81, 118, 123, 126, 130, 133, 140, 153, 203, 237, 240, 273, 281, 282, 283, 284, 285, 347, 348, 349, 350, 351], "x1": [35, 36, 39, 40, 41, 42, 80, 81, 84, 85, 86, 87, 94, 95, 118, 121, 124, 203, 268, 272, 273, 281, 282, 283, 284, 285, 303, 306, 356, 362, 380, 396, 412, 415, 416, 432, 435, 436, 442, 445, 446, 452, 455, 456, 457, 460, 461, 462, 465, 466, 467, 470, 471, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 530, 531, 547, 548, 550, 551, 552, 555, 556, 577, 580, 581, 582, 585, 586, 592, 595, 596, 597, 600, 601, 602, 603, 605, 606, 607, 610, 611, 617, 620, 621, 627, 630, 631, 632, 633, 634, 635, 636, 667, 668, 671, 683, 684, 685, 686, 687, 688, 691, 835, 844, 856, 862, 865, 866, 889, 892, 912, 915, 916, 929, 932, 933, 944, 945, 948, 954, 955, 958, 1094, 1098], "x2": [35, 36, 39, 40, 41, 42, 49, 50, 74, 75, 80, 81, 84, 85, 86, 87, 94, 95, 118, 121, 124, 203, 268, 272, 273, 281, 282, 283, 284, 285, 356, 362, 380, 396, 412, 413, 414, 415, 416, 432, 433, 434, 435, 436, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 683, 684, 685, 686, 687, 688, 835, 844, 856, 862, 863, 864, 865, 866, 889, 890, 891, 892, 912, 913, 914, 915, 916, 929, 930, 931, 932, 933, 944, 945, 946, 947, 948, 954, 955, 956, 957, 958, 1094, 1098], "x3": [35, 36, 203, 268, 272, 273, 281, 282, 284, 362, 380], "broadcast_to": [35, 36, 80, 81, 131, 273], "can_cast": [35, 36, 80, 81, 126, 131, 273, 295, 309, 312], "cast": [35, 36, 80, 81, 124, 125, 126, 131, 273, 276, 279, 291, 292, 293, 294, 295, 347, 348, 349, 351, 985, 991, 994, 1131, 1148, 1151, 1156, 1159, 1176], "occur": [35, 36, 61, 62, 80, 81, 106, 107, 273, 291, 292, 293, 294, 295, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119], "rule": [35, 36, 49, 50, 80, 81, 94, 95, 121, 123, 126, 129, 130, 131, 134, 273, 276, 279, 291, 292, 293, 294, 295, 347, 350, 396, 437, 440, 462, 465, 487, 490, 607, 610, 632, 635, 856, 857, 858, 859, 860, 861, 862, 865, 912, 915, 929, 932], "float32": [35, 36, 47, 48, 80, 81, 86, 87, 92, 93, 121, 123, 131, 203, 268, 272, 273, 274, 275, 291, 292, 293, 295, 303, 306, 308, 309, 312, 325, 336, 339, 347, 351, 361, 683, 779, 780, 783, 846, 847, 848, 850], "float64": [35, 36, 57, 58, 80, 81, 102, 103, 123, 131, 273, 276, 279, 291, 292, 294, 309, 312, 325, 336, 339, 347, 348, 349, 350, 351, 352, 361, 1075, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091], "as_n": [35, 36, 37, 38, 80, 81, 82, 83, 131, 273, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 362, 367, 368, 369, 370, 371, 372, 383], "finfo": [35, 36, 80, 81, 273], "iinfo": [35, 36, 80, 81, 134, 273], "is_bool_dtyp": [35, 36, 80, 81, 273], "is_float_dtyp": [35, 36, 80, 81, 119, 273], "is_int_dtyp": [35, 36, 80, 81, 119, 125, 273, 683, 784], "is_uint_dtyp": [35, 36, 80, 81, 119, 125, 273], "result_typ": [35, 36, 80, 81, 131, 273, 351], "arrays_and_dtyp": [35, 36, 80, 81, 273, 347, 348, 349, 350, 351], "int32": [35, 36, 57, 58, 80, 81, 86, 87, 102, 103, 123, 131, 203, 268, 272, 273, 291, 293, 294, 295, 303, 306, 320, 323, 336, 339, 347, 348, 349, 350, 351, 352, 683, 779, 780, 782, 783, 985, 999, 1002, 1075, 1077, 1078, 1079, 1081, 1082, 1085, 1087, 1090, 1131, 1148, 1151, 1156, 1159], "to_devic": [37, 38, 74, 75, 82, 83, 362, 367, 388], "stream": [37, 38, 82, 83, 362, 387, 388, 389, 390, 391], "ab": [39, 40, 84, 85, 123, 128, 396, 401, 627, 630, 856, 939, 943, 959, 963, 1176], "aco": [39, 40, 84, 85, 396, 406, 1176], "invers": [39, 40, 84, 85, 138, 152, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 856, 884, 887, 917, 919], "cosin": [39, 40, 84, 85, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "57": [39, 40, 84, 85, 362, 373, 396, 402, 403, 404, 405, 406, 407, 410, 417, 420, 422, 425, 432, 433, 435, 467, 470, 482, 485], "69": [39, 40, 102, 103, 402, 403, 1082, 1084, 1087, 1091], "acosh": [39, 40, 84, 85, 273, 314, 315, 317, 318, 396, 1176], "32": [39, 40, 43, 44, 57, 58, 84, 85, 102, 103, 123, 139, 164, 170, 173, 273, 308, 396, 407, 408, 409, 410, 411, 467, 470, 637, 638, 642, 643, 792, 793, 835, 842, 845, 846, 849, 856, 912, 915, 1075, 1077, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1091, 1094, 1098, 1131, 1132, 1135], "99": [39, 40, 84, 85, 102, 103, 396, 407, 408, 409, 410, 411, 422, 425, 477, 478, 683, 768, 771, 1082, 1084, 1131, 1132, 1135], "asin": [39, 40, 84, 85, 396, 421, 1176], "sine": [39, 40, 84, 85, 396, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "asinh": [39, 40, 84, 85, 396, 426, 1176], "82": [39, 40, 102, 103, 422, 423, 1082, 1084, 1087, 1089], "atan": [39, 40, 84, 85, 396, 431, 1176], "785": [39, 40, 84, 85, 396, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "464": [39, 40, 102, 103, 396, 427, 428, 432, 435, 1082, 1086], "atan2": [39, 40, 84, 85, 396, 436, 1176], "coordin": [39, 40, 84, 85, 203, 237, 240, 396, 432, 433, 434, 435, 436], "quotient": [39, 40, 84, 85, 396, 432, 433, 434, 435, 436], "245": [39, 40, 432, 433], "atanh": [39, 40, 84, 85, 396, 441, 1176], "549": [39, 40, 84, 85, 396, 437, 438, 439, 440, 441], "47": [39, 40, 57, 58, 84, 85, 102, 103, 396, 437, 438, 439, 441, 657, 660, 1075, 1082, 1084, 1087, 1088, 1090], "bitwise_and": [39, 40, 84, 85, 396, 446], "integ": [39, 40, 57, 58, 65, 66, 67, 68, 74, 75, 84, 85, 94, 95, 102, 103, 112, 113, 123, 125, 130, 131, 138, 203, 204, 205, 225, 273, 320, 323, 336, 339, 347, 350, 396, 397, 400, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 512, 515, 517, 520, 597, 600, 627, 630, 632, 635, 637, 640, 678, 682, 856, 898, 900, 954, 958, 959, 963, 985, 1026, 1075, 1077, 1078, 1079, 1080, 1081, 1092, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "bitwise_invert": [39, 40, 84, 85, 396, 451], "bitiwse_invert": [39, 40, 447, 448], "bitwise_left_shift": [39, 40, 84, 85, 396, 456], "bitwise_or": [39, 40, 84, 85, 396, 461], "bitwise_right_shift": [39, 40, 84, 85, 396, 466], "bitwise_xor": [39, 40, 84, 85, 396, 471], "ceil": [39, 40, 84, 85, 203, 204, 205, 396, 476, 1176], "express": [39, 40, 84, 85, 120, 134, 136, 141, 396, 402, 405, 417, 420, 427, 430, 432, 435, 477, 478, 479, 480, 481, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676], "radian": [39, 40, 84, 85, 120, 396, 402, 405, 417, 420, 427, 430, 432, 435, 477, 478, 479, 480, 481, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676], "54": [39, 40, 84, 85, 100, 101, 102, 103, 121, 396, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 657, 660, 835, 855, 856, 912, 915, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1131, 1132, 1135], "416": [39, 40, 396, 477, 478, 480], "cosh": [39, 40, 84, 85, 396, 407, 411, 486, 1176], "76": [39, 40, 72, 73, 84, 85, 102, 103, 195, 196, 273, 320, 323, 396, 407, 409, 411, 482, 483, 484, 485, 486, 652, 654, 656, 791, 792, 795, 856, 944, 948, 1082, 1084, 1131, 1132, 1135], "23": [39, 40, 57, 58, 78, 79, 84, 85, 102, 103, 203, 226, 228, 229, 230, 396, 432, 435, 467, 470, 482, 483, 484, 486, 537, 540, 632, 635, 637, 638, 642, 645, 652, 653, 654, 655, 656, 835, 845, 856, 872, 875, 939, 943, 1077, 1078, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1094, 1098], "03": [39, 40, 84, 85, 102, 103, 482, 483, 484, 486, 683, 768, 771, 835, 855, 1069, 1070, 1073, 1082, 1084, 1087, 1091], "81": [39, 40, 102, 103, 273, 320, 323, 396, 482, 483, 637, 640, 662, 665, 1075, 1087, 1089, 1090, 1131, 1132, 1135], "divid": [39, 40, 41, 42, 74, 75, 84, 85, 121, 129, 396, 491, 517, 520, 683, 768, 769, 771, 985, 1026], "dividend": [39, 40, 84, 85, 396, 487, 488, 489, 490, 491, 517, 518, 519, 521, 632, 633, 635], "divisor": [39, 40, 43, 44, 65, 66, 84, 85, 88, 89, 396, 487, 488, 489, 490, 491, 517, 518, 519, 521, 522, 524, 526, 632, 633, 635, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1131, 1152, 1155, 1160, 1162, 1164, 1211, 1212, 1213], "375": [39, 40, 396, 492, 493, 495], "erf": [39, 40, 84, 85, 396, 501], "exponenti": [39, 40, 84, 85, 396, 497, 498, 499, 500, 501, 502, 503, 505, 577, 580, 627, 628, 630], "gauss": [39, 40, 84, 85, 396, 497, 498, 499, 500, 501], "exp": [39, 40, 84, 85, 396, 506, 507, 510, 577, 580, 1176], "expm1": [39, 40, 84, 85, 396, 511], "244": [39, 40, 507, 508], "918": [39, 40, 507, 508], "48": [39, 40, 84, 85, 102, 103, 164, 170, 173, 396, 407, 409, 410, 411, 507, 508, 657, 660, 791, 792, 795, 856, 912, 915, 1082, 1084, 1087, 1091, 1131, 1132, 1135], "147": [39, 40, 164, 185, 188, 396, 507, 508, 510], "floor": [39, 40, 84, 85, 396, 462, 465, 516, 683, 719, 1176], "floor_divid": [39, 40, 84, 85, 396, 521], "13": [39, 40, 47, 48, 57, 58, 86, 87, 92, 93, 102, 103, 121, 123, 130, 273, 320, 323, 362, 373, 396, 442, 445, 467, 470, 482, 485, 507, 510, 517, 518, 520, 657, 660, 683, 696, 699, 700, 703, 768, 771, 791, 792, 795, 835, 836, 837, 838, 840, 855, 856, 872, 875, 912, 915, 939, 943, 1077, 1078, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1094, 1098, 1099, 1100, 1104, 1131, 1132, 1135], "greater": [39, 40, 57, 58, 84, 85, 102, 103, 396, 402, 405, 417, 420, 432, 435, 452, 455, 462, 465, 512, 515, 517, 520, 526, 627, 630, 632, 635, 642, 645, 678, 682, 856, 862, 865, 985, 1027, 1030, 1075, 1087, 1088, 1089, 1090, 1091], "greater_equ": [39, 40, 84, 85, 396, 531, 577, 579, 581], "isfinit": [39, 40, 84, 85, 123, 396, 536], "out_i": [39, 40, 84, 85, 396, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546], "self_i": [39, 40, 84, 85, 532, 533, 534, 537, 538, 539, 542, 543, 544], "finit": [39, 40, 84, 85, 396, 412, 415, 432, 435, 532, 533, 534, 535, 536, 607, 610, 627, 630, 632, 635], "isinf": [39, 40, 84, 85, 396, 541], "neg": [39, 40, 53, 54, 57, 58, 67, 68, 72, 73, 84, 85, 98, 99, 102, 103, 112, 113, 126, 130, 133, 164, 170, 172, 173, 174, 203, 204, 205, 217, 218, 396, 532, 535, 537, 538, 539, 540, 541, 607, 610, 616, 627, 630, 632, 635, 856, 934, 938, 954, 958, 959, 963, 985, 1003, 1006, 1021, 1022, 1023, 1024, 1025, 1075, 1082, 1083, 1084, 1085, 1086, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "infin": [39, 40, 84, 85, 120, 164, 195, 199, 202, 273, 276, 279, 396, 397, 400, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 517, 520, 532, 535, 537, 538, 539, 540, 541, 557, 560, 562, 565, 572, 575, 577, 580, 587, 590, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 856, 959, 963, 1131, 1136, 1139, 1144, 1147, 1165, 1166, 1169, 1171, 1174], "isnan": [39, 40, 84, 85, 396, 546], "nan": [39, 40, 65, 66, 74, 75, 84, 85, 117, 120, 123, 164, 195, 199, 202, 273, 276, 279, 396, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 532, 535, 542, 543, 544, 545, 546, 557, 560, 562, 565, 572, 575, 577, 580, 587, 590, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 683, 740, 790, 835, 855, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1169, 1171, 1174], "less_equ": [39, 40, 84, 85, 396, 556], "log10": [39, 40, 84, 85, 396, 566], "logarithm": [39, 40, 84, 85, 396, 502, 505, 557, 560, 562, 563, 564, 565, 566, 567, 570, 572, 573, 574, 575, 576, 577, 580, 856, 925, 927], "log1p": [39, 40, 84, 85, 396, 571], "log2": [39, 40, 84, 85, 396, 576], "logaddexp": [39, 40, 84, 85, 396], "logical_and": [39, 40, 84, 85, 396, 586, 1176], "logical_not": [39, 40, 84, 85, 396, 591, 1176], "logical_or": [39, 40, 84, 85, 396, 596, 1176], "logical_xor": [39, 40, 84, 85, 396, 601], "not_equ": [39, 40, 84, 85, 396, 621], "pow": [39, 40, 84, 85, 396, 631], "expon": [39, 40, 396, 627, 628, 630, 683, 773], "remaind": [39, 40, 74, 75, 84, 85, 396, 636, 683, 719, 985, 1026], "x2_i": [39, 40, 84, 85, 396, 412, 415, 432, 435, 442, 445, 452, 455, 457, 460, 462, 465, 467, 470, 487, 490, 492, 495, 517, 520, 522, 525, 527, 530, 547, 550, 552, 555, 577, 580, 582, 585, 592, 595, 597, 600, 607, 610, 617, 620, 627, 630, 632, 633, 634, 635, 636, 667, 671], "11": [39, 40, 43, 44, 47, 48, 57, 58, 71, 76, 77, 84, 85, 92, 93, 98, 99, 102, 103, 121, 123, 130, 396, 412, 414, 415, 416, 427, 430, 442, 445, 507, 509, 632, 633, 635, 637, 640, 683, 703, 723, 726, 792, 793, 835, 836, 837, 838, 839, 840, 856, 872, 875, 912, 915, 939, 943, 969, 980, 983, 985, 1003, 1006, 1027, 1029, 1051, 1068, 1075, 1077, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1104, 1131, 1132, 1135], "18": [39, 40, 57, 58, 84, 85, 102, 103, 121, 130, 396, 432, 435, 467, 470, 487, 490, 632, 633, 652, 653, 654, 655, 656, 856, 872, 875, 912, 915, 1075, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1131, 1132, 1135], "94": [39, 40, 57, 58, 84, 85, 102, 103, 422, 426, 637, 638, 642, 643, 1087, 1088, 1089], "256": [39, 40, 637, 638, 642, 643, 835, 845], "0001": [39, 40, 637, 638, 642, 643, 1211, 1212, 1213], "36": [39, 40, 396, 432, 435, 637, 638, 642, 643, 856, 912, 915, 939, 943, 1131, 1132, 1135], "37": [39, 40, 84, 85, 396, 422, 425, 426, 637, 638, 652, 654, 656, 672, 676, 1075, 1082, 1085], "67": [39, 40, 41, 42, 84, 85, 102, 103, 130, 396, 467, 470, 482, 484, 485, 486, 637, 638, 642, 643, 652, 654, 656, 768, 769, 1087, 1089], "45": [39, 40, 84, 85, 102, 103, 123, 396, 432, 434, 435, 436, 487, 489, 490, 491, 637, 638, 642, 643, 791, 792, 795, 856, 912, 915, 985, 1026, 1069, 1070, 1073, 1082, 1084, 1087, 1089, 1131, 1132, 1135], "24": [39, 40, 92, 93, 100, 101, 102, 103, 396, 467, 470, 637, 638, 642, 643, 657, 660, 683, 703, 791, 792, 795, 836, 838, 840, 856, 872, 875, 912, 915, 1069, 1070, 1072, 1073, 1074, 1077, 1079, 1082, 1084, 1087, 1089, 1131, 1132, 1135], "678": [39, 40, 637, 638, 642, 643], "25": [39, 40, 41, 42, 49, 50, 51, 52, 57, 58, 84, 85, 86, 87, 92, 93, 100, 101, 102, 103, 130, 396, 487, 489, 490, 491, 637, 638, 652, 655, 657, 660, 662, 665, 683, 768, 769, 771, 772, 836, 838, 840, 856, 857, 858, 860, 872, 875, 884, 887, 969, 975, 976, 978, 1069, 1070, 1072, 1073, 1074, 1077, 1078, 1082, 1083, 1084, 1086, 1087, 1089, 1131, 1132, 1135], "33": [39, 40, 55, 56, 57, 58, 84, 85, 86, 87, 396, 422, 424, 427, 430, 637, 638, 683, 696, 698, 768, 771, 856, 912, 915, 1051, 1068, 1069, 1070, 1071, 1073, 1077, 1078, 1131, 1132, 1135], "sin": [39, 40, 84, 85, 129, 136, 396, 651, 683, 720, 1176], "841": [39, 40, 84, 85, 396, 647, 648, 649, 650, 651], "909": [39, 40, 84, 85, 86, 87, 396, 647, 648, 649, 650, 651, 768, 772], "141": [39, 40, 84, 85, 396, 647, 648, 649, 650, 651], "sinh": [39, 40, 84, 85, 396, 656, 1176], "63": [39, 40, 43, 44, 84, 85, 94, 95, 396, 652, 653, 654, 655, 656, 657, 660, 792, 793, 856, 857, 859, 860, 861, 912, 915, 1131, 1132, 1135], "232": [39, 40, 84, 85, 396, 652, 653, 654, 655, 656], "51": [39, 40, 102, 103, 396, 467, 470, 652, 653, 655, 1082, 1086, 1087, 1089], "sqrt": [39, 40, 84, 85, 396, 661, 856, 959, 963], "squar": [39, 40, 49, 50, 84, 85, 94, 95, 123, 396, 657, 658, 659, 660, 661, 666, 835, 842, 856, 857, 858, 859, 860, 861, 867, 870, 877, 880, 881, 883, 884, 887, 898, 900, 925, 927, 929, 932, 934, 938], "subtract": [39, 40, 84, 85, 121, 129, 396, 668], "tan": [39, 40, 84, 85, 118, 120, 124, 126, 130, 133, 136, 396, 417, 420, 422, 425, 673, 856, 872, 875, 1099, 1100, 1104, 1120, 1121, 1124, 1176], "56": [39, 40, 57, 58, 84, 85, 121, 396, 657, 660, 672, 673, 674, 675, 676, 791, 792, 795, 856, 912, 915, 939, 943, 1082, 1083, 1131, 1132, 1135], "19": [39, 40, 57, 58, 84, 85, 102, 103, 121, 396, 422, 424, 426, 467, 470, 672, 673, 674, 675, 676, 856, 872, 875, 1075, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1120, 1126, 1129], "trunc": [39, 40, 84, 85, 396, 679], "elementwis": [40, 74, 75, 85, 117, 126, 136, 141, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 671, 672, 676, 677, 678, 682], "all_equ": [41, 42, 86, 87, 683, 688], "equality_matrix": [41, 42, 86, 87, 683, 684, 685, 686, 687, 688], "compar": [41, 42, 74, 75, 86, 87, 123, 125, 134, 139, 683, 684, 685, 686, 687, 688, 691, 692, 856, 939, 943, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1120, 1121, 1124, 1126, 1129], "matrix": [41, 42, 49, 50, 74, 75, 86, 87, 94, 95, 203, 237, 240, 255, 259, 260, 264, 683, 684, 685, 686, 687, 688, 695, 835, 852, 856, 857, 858, 859, 860, 861, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 898, 900, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 929, 932, 934, 938, 939, 943, 949, 953, 964, 968, 1195, 1205], "clip_vector_norm": [41, 42, 86, 87, 683, 700], "max_norm": [41, 42, 86, 87, 683, 695, 696, 697, 698, 699, 700], "norm": [41, 42, 56, 74, 75, 86, 87, 94, 95, 101, 117, 683, 695, 696, 697, 698, 699, 700, 856, 893, 896, 959, 963, 1070, 1071, 1072, 1073, 1074, 1176, 1210, 1211, 1213], "vector": [41, 42, 74, 75, 86, 87, 94, 95, 152, 203, 237, 240, 683, 696, 697, 698, 699, 700, 835, 852, 856, 862, 865, 877, 880, 889, 892, 912, 915, 934, 938, 939, 943, 954, 958, 959, 963, 964, 965, 968, 1195, 1205], "downscal": [41, 42, 86, 87, 683, 695, 696, 697, 698, 699, 700], "max": [41, 42, 65, 66, 86, 87, 94, 95, 110, 111, 273, 309, 312, 320, 323, 396, 602, 683, 695, 696, 697, 698, 699, 700, 708, 709, 710, 711, 712, 757, 758, 856, 902, 904, 905, 906, 917, 919, 1131, 1211, 1213], "894": [41, 42, 86, 87, 683, 696, 697, 699, 700, 1069, 1070, 1073], "79": [41, 42, 86, 87, 102, 103, 396, 467, 470, 487, 490, 683, 696, 697, 699, 700, 1087, 1089], "einops_reduc": [41, 42, 86, 87, 683, 712], "reduct": [41, 42, 67, 68, 74, 75, 86, 87, 112, 113, 123, 131, 138, 683, 708, 709, 710, 711, 712, 757, 758, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "axes_length": [41, 42, 74, 75, 86, 87, 683, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "reduc": [41, 42, 49, 50, 65, 66, 67, 68, 74, 75, 86, 87, 94, 95, 112, 113, 138, 362, 386, 683, 708, 709, 710, 711, 712, 856, 920, 921, 922, 923, 924, 1094, 1095, 1096, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "callabl": [41, 42, 86, 87, 119, 123, 130, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 200, 201, 273, 314, 315, 317, 318, 362, 374, 375, 386, 683, 689, 694, 706, 708, 709, 710, 711, 712, 721, 722, 1047, 1048, 1049, 1050, 1051, 1057, 1058, 1059, 1061, 1062, 1063, 1064], "One": [41, 42, 53, 54, 57, 58, 86, 87, 98, 99, 102, 103, 123, 125, 131, 136, 138, 139, 683, 708, 709, 710, 711, 712, 985, 1016, 1017, 1018, 1019, 1020, 1075, 1077, 1078, 1079, 1080, 1081], "min": [41, 42, 65, 66, 86, 87, 110, 111, 273, 309, 312, 320, 323, 396, 603, 605, 683, 708, 709, 710, 711, 712, 757, 758, 768, 771, 856, 920, 923, 934, 938, 939, 943, 959, 963, 1131], "prod": [41, 42, 65, 66, 86, 87, 110, 111, 121, 131, 683, 708, 709, 710, 711, 712, 1131], "einops_repeat": [41, 42, 86, 87, 683, 717], "rearrang": [41, 42, 74, 75, 86, 87, 683, 707, 713, 714, 715, 716, 717], "gather": [41, 42, 86, 87, 683, 727, 728, 729, 730, 731, 732], "along": [41, 42, 51, 52, 53, 54, 65, 66, 67, 68, 72, 73, 74, 75, 86, 87, 94, 95, 96, 97, 98, 99, 112, 113, 117, 133, 185, 187, 189, 203, 231, 232, 234, 235, 362, 386, 683, 703, 704, 723, 724, 725, 726, 727, 789, 856, 893, 896, 949, 953, 954, 958, 959, 963, 969, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 991, 994, 1003, 1006, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1026, 1031, 1034, 1039, 1042, 1047, 1048, 1049, 1050, 1075, 1093, 1094, 1095, 1096, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "gather_nd": [41, 42, 86, 87, 683, 732, 1176], "cuda": [41, 42, 57, 58, 74, 75, 86, 87, 102, 103, 136, 139, 153, 203, 231, 232, 234, 235, 362, 364, 383, 384, 683, 723, 726, 728, 729, 730, 731, 732, 754, 757, 758, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218], "stable_divid": [41, 42, 86, 87, 126, 683, 772], "denomin": [41, 42, 55, 56, 86, 87, 100, 101, 126, 153, 683, 719, 736, 761, 768, 769, 770, 771, 772, 773, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210], "min_denomin": [41, 42, 86, 87, 683, 768, 769, 770, 771, 772], "divis": [41, 42, 43, 44, 86, 87, 88, 89, 126, 396, 462, 465, 487, 490, 517, 520, 632, 635, 683, 719, 736, 761, 768, 769, 770, 771, 772, 773, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1211, 1212, 1213], "_min_denomin": [41, 42, 86, 87, 683, 768, 769, 770, 771, 772], "to_numpi": [41, 42, 74, 75, 86, 87, 139, 683, 780, 1176], "adam_step": [43, 44, 88, 89, 791, 796], "mw": [43, 44, 88, 89, 140, 791, 792, 793, 794, 795, 796, 797, 799], "vw": [43, 44, 88, 89, 140, 791, 792, 793, 794, 795, 796, 797, 799], "beta1": [43, 44, 88, 89, 140, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 816, 1211, 1212, 1213], "beta2": [43, 44, 88, 89, 140, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 816, 1211, 1212, 1213], "999": [43, 44, 72, 73, 84, 85, 88, 89, 140, 164, 195, 196, 198, 199, 396, 677, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 816, 1211, 1212, 1213], "epsilon": [43, 44, 51, 52, 55, 56, 88, 89, 94, 95, 96, 97, 100, 101, 126, 130, 133, 140, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 816, 856, 902, 904, 905, 906, 917, 919, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210, 1211, 1212, 1213], "1e": [43, 44, 51, 52, 55, 56, 88, 89, 96, 97, 100, 101, 125, 126, 130, 133, 140, 141, 273, 309, 312, 683, 736, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 816, 856, 934, 938, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1069, 1070, 1071, 1072, 1073, 1074, 1176, 1211, 1212, 1213, 1214, 1216], "07": [43, 44, 51, 52, 84, 85, 88, 89, 96, 97, 102, 103, 140, 396, 432, 434, 435, 436, 642, 645, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 816, 856, 939, 943, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1082, 1084, 1211, 1212, 1213], "cost": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1047, 1048, 1049, 1050], "weight": [43, 44, 88, 89, 126, 130, 140, 141, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 835, 852, 853, 855, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1207, 1208, 1211, 1213, 1214], "w": [43, 44, 47, 48, 74, 75, 84, 85, 88, 89, 92, 93, 136, 139, 140, 582, 584, 586, 683, 692, 768, 771, 791, 792, 793, 794, 795, 796, 797, 799, 800, 804, 806, 807, 813, 815, 816, 817, 819, 820, 821, 823, 824, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850], "dc": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823], "dw": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823], "averag": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1047, 1048, 1049], "moment": [43, 44, 88, 89, 127, 153, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1211, 1212, 1213], "forget": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1211, 1212, 1213], "adam": [43, 44, 88, 89, 139, 140, 141, 791, 792, 793, 794, 795, 796, 797, 799, 813, 815, 1176, 1211, 1213], "delta": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796], "dcdw": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 813, 814, 815, 816, 817, 818, 819, 820], "adam_step_delta": [43, 44, 88, 89, 791, 792, 793, 794, 795, 796], "639": [43, 44, 791, 792, 793, 795], "00121": [43, 44, 792, 793], "0102": [43, 44, 792, 793], "0397": [43, 44, 792, 793], "exclus": [43, 44, 74, 75, 88, 89, 123, 126, 130, 141, 203, 204, 205, 683, 703, 747, 748, 750, 791, 808, 809, 810, 811, 812, 1075, 1077, 1080], "is_var": [43, 44, 88, 89, 791, 808, 809, 810, 811, 812], "gradient": [44, 74, 75, 89, 117, 130, 139, 140, 152, 153, 362, 386, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 806, 808, 811, 813, 815, 817, 819, 821, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 1047, 1048, 1049, 1050, 1176, 1211, 1212, 1213, 1214, 1215, 1216], "conv1d": [47, 48, 92, 93, 835, 840, 1195], "stride": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "pad": [47, 48, 92, 93, 683, 720, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 985, 995, 998, 1043, 1046, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "data_format": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "nwc": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 1195, 1196, 1197], "dilat": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "batch_siz": [47, 48, 92, 93, 139, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1075, 1076], "d_in": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850], "convolut": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "fw": [47, 48, 92, 93, 123, 125, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850], "d_out": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845], "slide": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "valid": [47, 48, 67, 68, 92, 93, 112, 113, 123, 124, 125, 131, 136, 273, 296, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 985, 1031, 1034, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "algorithm": [47, 48, 72, 73, 92, 93, 153, 165, 167, 169, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "ncw": [47, 48, 92, 93, 835, 836, 837, 838, 839, 840, 841, 1195, 1196, 1197], "wio": [47, 48, 835, 836, 837, 839], "20": [47, 48, 57, 58, 84, 85, 86, 87, 102, 103, 138, 396, 467, 470, 502, 505, 507, 510, 637, 639, 640, 641, 657, 660, 683, 768, 771, 772, 836, 837, 856, 872, 875, 912, 915, 944, 948, 1075, 1077, 1078, 1079, 1080, 1094, 1097, 1098, 1131, 1132, 1135], "depthwise_conv2d": [47, 48, 92, 93, 835, 850, 1176], "nhwc": [47, 48, 92, 93, 835, 842, 843, 846, 847, 848, 849, 850, 1195, 1198, 1199, 1202], "h": [47, 48, 92, 93, 116, 130, 835, 842, 843, 844, 845, 846, 847, 848, 849, 850, 1051, 1054, 1067], "fh": [47, 48, 92, 93, 835, 842, 843, 844, 845, 846, 847, 848, 849, 850], "nchw": [47, 48, 92, 93, 835, 842, 843, 846, 847, 848, 849, 850, 1195, 1198, 1199, 1202], "randint": [47, 48, 57, 58, 92, 93, 102, 103, 846, 847, 848, 850, 1075, 1081, 1176], "255": [47, 48, 92, 93, 846, 847, 848, 850], "128": [47, 48, 92, 93, 273, 320, 323, 835, 845, 846, 847, 848, 850, 856, 912, 915], "random_norm": [47, 48, 57, 58, 92, 93, 102, 103, 123, 835, 842, 845, 846, 847, 848, 849, 850, 856, 934, 938, 1075, 1086, 1099, 1100, 1104], "linear_algebra": [49, 50, 94, 95, 117, 138, 856, 857, 860, 862, 865, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 893, 896, 898, 900, 902, 905, 907, 910, 912, 915, 917, 919, 920, 923, 925, 927, 929, 932, 934, 938, 939, 943, 944, 948, 949, 953, 954, 958, 959, 963, 964, 968], "choleski": [49, 50, 94, 95, 856, 861], "symmetr": [49, 50, 94, 95, 130, 856, 857, 858, 859, 860, 861, 877, 880, 881, 883, 964, 968], "625": [49, 50, 856, 857, 858, 860], "cross": [49, 50, 51, 52, 94, 95, 96, 97, 856, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1176], "det": [49, 50, 94, 95, 856], "offset": [49, 50, 55, 56, 94, 95, 100, 101, 856, 872, 873, 874, 875, 876, 949, 950, 951, 952, 953, 1069, 1070, 1071, 1072, 1073, 1074], "axis1": [49, 50, 53, 54, 94, 95, 98, 99, 856, 872, 873, 874, 875, 876, 985, 1035, 1036, 1037, 1038], "axis2": [49, 50, 94, 95, 856, 872, 873, 874, 875, 876], "eigh": [49, 50, 94, 95, 856], "namedtupl": [49, 50, 61, 62, 94, 95, 106, 107, 856, 877, 878, 879, 880, 920, 921, 923, 934, 938, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1114], "eigvalsh": [49, 50, 71, 76, 77, 856], "inv": [49, 50, 94, 95, 138, 856, 1176], "matmul": [49, 50, 94, 95, 117, 123, 127, 136, 856, 934, 938, 1176], "matrix_norm": [49, 50, 74, 75, 94, 95, 856], "ord": [49, 50, 74, 75, 94, 95, 856, 893, 894, 895, 896, 897, 959, 960, 961, 962, 963], "fro": [49, 50, 94, 95, 856, 893, 894, 895, 896, 897], "keepdim": [49, 50, 65, 66, 67, 68, 74, 75, 94, 95, 110, 111, 112, 113, 134, 683, 789, 856, 893, 894, 895, 896, 897, 959, 960, 961, 962, 963, 1094, 1095, 1096, 1131, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "matrix_rank": [49, 50, 94, 95, 856, 906], "rtol": [49, 50, 94, 95, 125, 856, 902, 903, 904, 905, 906, 917, 918, 919], "matrix_transpos": [49, 50, 94, 95, 138, 856], "outer": [49, 50, 94, 95, 856, 1047, 1048, 1049, 1050], "pinv": [49, 50, 71, 76, 77, 856, 1176], "qr": [49, 50, 94, 95, 856], "solv": [49, 50, 94, 95, 137, 152, 856], "svd": [49, 50, 94, 95, 856, 939, 943, 1176], "full_matric": [49, 50, 94, 95, 856, 934, 935, 936, 937, 938], "svdval": [49, 50, 94, 95, 856], "tensordot": [49, 50, 94, 95, 856], "trace": [49, 50, 74, 75, 94, 95, 136, 153, 683, 747, 748, 750, 856], "vecdot": [49, 50, 94, 95, 856], "vector_norm": [49, 50, 74, 75, 94, 95, 856], "vector_to_skew_symmetric_matrix": [49, 50, 94, 95, 856, 1176], "binary_cross_entropi": [51, 52, 96, 97, 969, 974], "pred": [51, 52, 96, 97, 126, 130, 133, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984], "predict": [51, 52, 96, 97, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984], "amount": [51, 52, 96, 97, 132, 362, 392, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984], "smooth": [51, 52, 96, 97, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984], "binari": [51, 52, 96, 97, 396, 442, 445, 457, 460, 467, 470, 597, 600, 969, 970, 971, 972, 973, 974], "entropi": [51, 52, 96, 97, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984], "357": [51, 52, 96, 97, 969, 970, 971, 972, 973, 974, 980, 981, 983, 984], "223": [51, 52, 96, 97, 969, 970, 971, 972, 973, 974, 980, 981, 982, 984], "cross_entropi": [51, 52, 96, 97, 126, 130, 133, 969, 979, 980, 983], "3862944": [51, 52, 969, 975, 976, 978], "sparse_cross_entropi": [51, 52, 96, 97, 969, 984], "logit": [51, 52, 96, 97, 969, 980, 981, 982, 983, 984], "spars": [51, 52, 96, 97, 969, 980, 981, 982, 983, 984], "loss": [52, 97, 117, 126, 139, 140, 141, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 1176], "clip": [53, 54, 74, 75, 98, 99, 126, 130, 133, 136, 139, 141, 396, 602, 603, 605, 683, 695, 696, 699, 985, 990, 1176], "x_min": [53, 54, 74, 75, 98, 99, 136, 141, 985, 986, 987, 988, 989, 990], "x_max": [53, 54, 74, 75, 98, 99, 136, 141, 985, 986, 987, 988, 989, 990], "roll": [53, 54, 98, 99, 118, 130, 985, 986, 987, 1016, 1017, 1025], "concat": [53, 54, 74, 75, 98, 99, 124, 362, 386, 683, 720, 985, 1176], "constant_pad": [53, 54, 98, 99, 985], "pad_width": [53, 54, 98, 99, 985, 995, 996, 997, 998, 1043, 1044, 1045, 1046], "expand_dim": [53, 54, 98, 99, 136, 139, 985, 1176], "flip": [53, 54, 98, 99, 138, 139, 141, 396, 447, 450, 985, 1176], "permute_dim": [53, 54, 98, 99, 985], "reshap": [53, 54, 74, 75, 98, 99, 123, 133, 136, 138, 141, 985, 1020, 1176], "nativeshap": [53, 54, 57, 58, 98, 99, 102, 103, 203, 211, 225, 247, 248, 265, 267, 683, 758, 766, 776, 778, 835, 841, 843, 845, 985, 1016, 1017, 1018, 1019, 1020, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091], "sequenc": [53, 54, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 121, 123, 124, 131, 134, 152, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 692, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 751, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 985, 986, 988, 990, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1031, 1034, 1051, 1067, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1131, 1136, 1139, 1160, 1161, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1195, 1204, 1209, 1210, 1217, 1218], "length": [53, 54, 71, 74, 75, 76, 77, 98, 99, 123, 125, 134, 139, 203, 204, 205, 237, 240, 856, 934, 938, 939, 943, 985, 1016, 1017, 1018, 1019, 1020], "valueerror": [53, 54, 98, 99, 136, 985, 1016, 1017, 1018, 1019, 1020, 1027, 1030], "reus": [53, 54, 98, 99, 123, 985, 1016, 1017, 1018, 1019, 1020], "memori": [53, 54, 98, 99, 132, 133, 151, 153, 362, 366, 381, 386, 392, 395, 835, 853, 985, 1016, 1017, 1018, 1019, 1020, 1176], "buffer": [53, 54, 98, 99, 153, 985, 1016, 1017, 1018, 1019, 1020], "larger": [53, 54, 65, 66, 98, 99, 123, 136, 141, 273, 309, 312, 985, 986, 989, 1021, 1022, 1023, 1024, 1025, 1131, 1152, 1155, 1160, 1162, 1164], "flatten": [53, 54, 61, 62, 74, 75, 94, 95, 98, 99, 106, 107, 683, 720, 856, 912, 915, 959, 963, 985, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1119], "restor": [53, 54, 98, 99, 985, 1021, 1022, 1023, 1024, 1025], "squeez": [53, 54, 98, 99, 985, 1176], "stack": [53, 54, 74, 75, 94, 95, 98, 99, 136, 203, 255, 259, 260, 264, 856, 867, 870, 872, 875, 877, 880, 881, 883, 884, 887, 889, 892, 898, 900, 902, 904, 905, 906, 907, 910, 917, 919, 920, 923, 934, 938, 939, 943, 949, 953, 985, 1051, 1052, 1061, 1062, 1176, 1195, 1204], "swapax": [53, 54, 98, 99, 985], "axis0": [53, 54, 98, 99, 985, 1035, 1036, 1037, 1038], "tile": [53, 54, 98, 99, 985, 1176], "rep": [53, 54, 98, 99, 985, 1039, 1040, 1041, 1042], "zero_pad": [53, 54, 98, 99, 985, 1176], "layer_norm": [55, 56, 100, 101, 1069, 1074], "normalized_idx": [55, 56, 100, 101, 1069, 1070, 1071, 1072, 1073, 1074], "05": [55, 56, 100, 101, 123, 125, 791, 792, 795, 1069, 1070, 1071, 1072, 1073, 1074], "scale": [55, 56, 100, 101, 124, 130, 362, 384, 385, 791, 817, 819, 835, 851, 854, 855, 1069, 1070, 1071, 1072, 1073, 1074, 1195, 1203, 1206, 1211, 1214], "new_std": [55, 56, 100, 101, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210], "normal": [55, 56, 57, 58, 100, 101, 102, 103, 139, 985, 1031, 1034, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1084, 1085, 1086, 1209, 1210], "small": [55, 56, 94, 95, 100, 101, 121, 125, 126, 136, 140, 153, 396, 607, 610, 856, 902, 904, 905, 906, 917, 919, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210], "constant": [55, 56, 100, 101, 117, 126, 140, 141, 153, 985, 995, 998, 1051, 1057, 1069, 1070, 1071, 1072, 1073, 1074, 1189, 1192, 1194, 1207, 1208, 1209, 1210], "_min_bas": [55, 56, 100, 101, 683, 773, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210], "learnabl": [55, 56, 100, 101, 141, 1069, 1070, 1071, 1072, 1073, 1074, 1209, 1210], "gamma": [55, 56, 100, 101, 1069, 1070, 1071, 1072, 1073, 1074], "beta": [55, 56, 100, 101, 1069, 1070, 1071, 1072, 1073, 1074], "0976": [55, 56, 1069, 1070, 1071, 1073], "3452": [55, 56, 1069, 1070, 1071, 1073], "2740": [55, 56, 1069, 1070, 1071, 1073], "1047": [55, 56, 1069, 1070, 1071, 1073], "5886": [55, 56, 1069, 1070, 1071, 1073], "2732": [55, 56, 1069, 1070, 1071, 1073], "7696": [55, 56, 1069, 1070, 1071, 1073], "7024": [55, 56, 1069, 1070, 1071, 1073], "2518": [55, 56, 1069, 1070, 1071, 1073], "001": [55, 56, 139, 140, 273, 309, 312, 396, 642, 645, 791, 792, 795, 1069, 1070, 1071, 1073], "576": [55, 56, 1069, 1070, 1071, 1073], "292": [55, 56, 1069, 1070, 1071, 1073], "581": [55, 56, 791, 792, 795, 1069, 1070, 1071, 1073], "891": [55, 56, 164, 180, 183, 1069, 1070, 1071, 1073], "01": [55, 56, 102, 103, 141, 396, 637, 640, 642, 645, 683, 768, 771, 856, 939, 943, 1069, 1070, 1071, 1073, 1075, 1082, 1085, 1087, 1089], "579": [55, 56, 1069, 1070, 1071, 1073], "931": [55, 56, 1069, 1070, 1071, 1073], "drawn": [57, 58, 102, 103, 123, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091], "highest": [57, 58, 102, 103, 1075, 1077, 1078, 1079, 1080, 1081], "sampl": [57, 58, 65, 66, 102, 103, 123, 835, 851, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1131, 1152, 1155, 1160, 1162, 1164, 1195, 1203], "low": [57, 58, 102, 103, 136, 1075, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1089, 1090, 1091], "uniform": [57, 58, 102, 103, 140, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1189, 1190, 1191, 1193], "half": [57, 58, 102, 103, 203, 204, 205, 1075, 1077, 1078, 1079, 1080, 1081, 1087, 1090], "interv": [57, 58, 67, 68, 102, 103, 112, 113, 136, 141, 203, 204, 205, 231, 232, 234, 235, 856, 954, 958, 985, 986, 989, 1031, 1034, 1075, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1089, 1090, 1091, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "int8": [57, 58, 102, 103, 123, 131, 273, 320, 323, 336, 339, 361, 1077, 1078, 1079], "int16": [57, 58, 102, 103, 123, 131, 273, 291, 294, 320, 323, 336, 339, 1077, 1078, 1079, 1131, 1148, 1151, 1156, 1159], "int64": [57, 58, 80, 81, 102, 103, 123, 131, 273, 291, 293, 294, 295, 308, 320, 323, 341, 344, 361, 396, 462, 465, 1077, 1078, 1079, 1094, 1095, 1096, 1131, 1148, 1151, 1156, 1159], "98": [57, 58, 84, 85, 102, 103, 396, 467, 470, 482, 484, 486, 652, 654, 656, 856, 912, 915, 1077, 1078, 1087, 1089, 1094, 1098, 1131, 1132, 1135], "46": [57, 58, 102, 103, 396, 642, 645, 1077, 1078, 1082, 1084], "std": [57, 58, 65, 66, 102, 103, 110, 111, 121, 1075, 1077, 1080, 1082, 1083, 1084, 1085, 1086, 1099, 1100, 1104, 1131], "non": [57, 58, 65, 66, 67, 68, 94, 95, 102, 103, 110, 111, 112, 113, 121, 130, 131, 136, 200, 201, 273, 276, 279, 325, 396, 587, 590, 592, 595, 835, 842, 856, 867, 870, 902, 904, 905, 906, 934, 938, 944, 948, 954, 958, 959, 963, 1075, 1082, 1083, 1084, 1085, 1086, 1094, 1095, 1096, 1097, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1207, 1208, 1211, 1215], "parameter": [57, 58, 102, 103, 1075, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091], "44": [57, 58, 102, 103, 396, 422, 425, 637, 640, 657, 660, 662, 665, 856, 912, 915, 1077, 1079, 1081, 1082, 1083, 1084, 1094, 1098, 1131, 1132, 1135], "72": [57, 58, 396, 502, 505, 507, 510, 791, 792, 795, 856, 912, 915, 1082, 1083, 1131, 1132, 1135], "235": [57, 58, 1082, 1083], "27": [57, 58, 102, 103, 396, 467, 470, 482, 485, 652, 655, 657, 660, 835, 855, 856, 912, 915, 1077, 1081, 1082, 1083, 1131, 1132, 1135], "22": [57, 58, 102, 103, 130, 396, 467, 470, 856, 872, 875, 912, 915, 1051, 1068, 1077, 1079, 1082, 1083, 1084, 1087, 1089, 1094, 1098, 1131, 1132, 1135], "float16": [57, 58, 102, 103, 123, 124, 131, 273, 309, 312, 317, 318, 361, 1082, 1083, 1084, 1087, 1088, 1089], "26": [57, 58, 102, 103, 396, 467, 470, 487, 490, 652, 655, 791, 792, 795, 835, 846, 849, 856, 872, 875, 912, 915, 944, 948, 1077, 1079, 1082, 1083, 1131, 1132, 1135], "49": [57, 58, 164, 185, 188, 396, 657, 660, 1082, 1083, 1131, 1132, 1135], "02": [57, 58, 84, 85, 102, 103, 422, 424, 683, 768, 771, 791, 792, 795, 1075, 1082, 1083, 1084, 1087, 1090], "95": [57, 58, 102, 103, 396, 642, 645, 791, 792, 795, 1075, 1082, 1083, 1084, 1085, 1087, 1089], "807": [57, 58, 1082, 1083], "21": [57, 58, 84, 85, 102, 103, 273, 320, 323, 396, 422, 424, 432, 434, 435, 436, 467, 470, 683, 703, 856, 872, 875, 912, 915, 969, 980, 983, 1077, 1079, 1082, 1083, 1084, 1131, 1132, 1135], "random_uniform": [57, 58, 102, 103, 123, 132, 140, 1075, 1091, 1176], "boundari": [57, 58, 102, 103, 1075, 1087, 1088, 1089, 1090, 1091], "86": [57, 58, 102, 103, 791, 792, 795, 1082, 1084, 1087, 1088, 1089], "89": [57, 58, 102, 103, 123, 273, 320, 323, 396, 467, 470, 856, 944, 948, 1082, 1084, 1087, 1088, 1131, 1156, 1159], "06": [57, 58, 84, 85, 123, 273, 309, 312, 407, 409, 411, 482, 484, 486, 791, 792, 795, 1087, 1088], "53": [57, 58, 84, 85, 362, 392, 507, 509, 1087, 1088], "random": [58, 74, 75, 103, 117, 132, 141, 152, 1076, 1077, 1080, 1082, 1085, 1087, 1090, 1092, 1093, 1176], "unique_al": [61, 62, 106, 107, 1099], "unique_count": [61, 62, 106, 107, 1099, 1106], "count": [61, 62, 67, 68, 106, 107, 112, 113, 121, 139, 362, 380, 856, 954, 958, 985, 1003, 1006, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "field": [61, 62, 106, 107, 152, 856, 877, 880, 920, 923, 934, 938, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109], "uc": [61, 62, 1105, 1107], "unique_invers": [61, 62, 106, 107, 1099], "unique_valu": [61, 62, 106, 107, 1099], "argsort": [63, 64, 108, 109, 1120], "descend": [63, 64, 108, 109, 856, 934, 938, 939, 943, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "sort": [64, 71, 74, 75, 76, 77, 109, 117, 856, 877, 880, 934, 938, 939, 943, 1121, 1124, 1130], "einsum": [65, 66, 110, 111, 1131], "equat": [65, 66, 110, 111, 856, 929, 932, 1131, 1132, 1133, 1134, 1135], "var": [65, 66, 110, 111, 114, 115, 121, 136, 1047, 1048, 1049, 1131, 1161], "varianc": [65, 66, 110, 111, 1131, 1160, 1161, 1162, 1163, 1164], "x_i": [65, 66, 84, 85, 120, 164, 195, 199, 396, 397, 400, 402, 405, 407, 410, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 532, 535, 536, 537, 540, 541, 542, 545, 546, 557, 560, 562, 565, 572, 575, 587, 590, 612, 615, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 676, 677, 678, 682, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "propag": [65, 66, 396, 462, 465, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1162, 1164], "By": [65, 66, 67, 68, 112, 113, 121, 124, 126, 130, 133, 140, 141, 683, 703, 704, 856, 954, 958, 985, 1011, 1014, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "degre": [65, 66, 1131, 1152, 1155, 1160, 1162, 1164], "freedom": [65, 66, 127, 1131, 1152, 1155, 1160, 1162, 1164], "popul": [65, 66, 74, 75, 123, 131, 132, 136, 1075, 1076, 1131, 1152, 1155, 1160, 1162, 1164], "constitut": [65, 66, 126, 136, 1131, 1152, 1155, 1160, 1162, 1164], "unbias": [65, 66, 1131, 1160, 1162, 1164], "commonli": [65, 66, 126, 1131, 1152, 1155, 1160, 1162, 1164], "bessel": [65, 66, 1131, 1152, 1155, 1160, 1162, 1164], "singleton": [65, 66, 67, 68, 112, 113, 856, 959, 963, 985, 1027, 1030, 1094, 1096, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "accordingli": [65, 66, 67, 68, 112, 113, 124, 134, 203, 237, 240, 396, 507, 510, 856, 959, 963, 1094, 1096, 1099, 1100, 1104, 1105, 1109, 1115, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "dimension": [65, 66, 67, 68, 74, 75, 94, 95, 110, 111, 112, 113, 203, 204, 205, 217, 218, 237, 240, 856, 862, 865, 867, 870, 889, 892, 902, 904, 905, 906, 912, 915, 917, 919, 954, 958, 959, 963, 985, 1026, 1094, 1095, 1096, 1097, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "07472222": [65, 66, 1131, 1160, 1162, 1164], "statist": [66, 111, 114, 115, 117, 123, 131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164], "logic": [67, 68, 112, 113, 123, 128, 129, 131, 132, 138, 362, 378, 396, 582, 585, 587, 590, 592, 595, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "AND": [67, 68, 112, 113, 396, 442, 445, 582, 585, 1165, 1166, 1167, 1168, 1169, 1170], "rank": [67, 68, 94, 95, 112, 113, 203, 237, 240, 683, 789, 856, 862, 865, 902, 904, 905, 906, 920, 923, 929, 932, 949, 953, 954, 958, 959, 963, 985, 995, 998, 999, 1002, 1031, 1034, 1043, 1046, 1094, 1097, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "backward": [67, 68, 112, 113, 153, 396, 632, 635, 856, 954, 958, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "invalid": [67, 68, 112, 113, 124, 131, 134, 856, 954, 958, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175], "util": [68, 113, 117, 132, 362, 373, 1166, 1169, 1171, 1174], "add_ivy_array_instance_method": 69, "cl": [69, 70, 114, 115], "to_ignor": [69, 70, 114, 115, 1051, 1062], "loop": [69, 70, 114, 115, 127, 134, 153, 1047, 1048, 1049, 1050], "_wrap_funct": [69, 70, 114, 115, 126, 128], "toi": [69, 70, 114, 115], "arrayexampl": [69, 70], "hasattr": [69, 70, 114, 115, 119, 138], "dict_in": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "queue": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 139, 683, 756, 763], "queue_load_s": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "container_combine_method": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "list_join": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "print_limit": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "key_length_limit": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "print_ind": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "print_line_spac": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "ivyh": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "default_key_color": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "keyword_color_dict": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "rebuild_child_contain": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "types_to_iteratively_nest": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "alphabetical_kei": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "containerwithactiv": [71, 72, 76, 77], "containerwithcr": [71, 76, 77, 78], "containerwithdatatyp": [71, 76, 77, 80], "containerwithdevic": [71, 76, 77, 82], "containerwithelementwis": [71, 76, 77, 84, 130], "containerwithgener": [71, 76, 77, 86], "containerwithgradi": [71, 76, 77, 88], "containerwithimag": [71, 76, 77, 90], "containerwithlay": [71, 76, 77, 92], "containerwithlinearalgebra": [71, 76, 77, 94], "containerwithloss": [71, 76, 77, 96], "containerwithnorm": [71, 76, 77, 100], "containerwithrandom": [71, 76, 77, 102], "containerwithsearch": [71, 76, 77, 104], "containerwithset": [71, 76, 77, 106], "containerwithsort": [71, 76, 77, 108], "containerwithstatist": [71, 76, 77, 110], "containerwithutil": [71, 76, 77, 112], "represent": [71, 74, 75, 76, 77, 152, 202, 273, 274, 275, 309, 312, 320, 323, 362, 364, 365, 396, 397, 400, 412, 415, 442, 445, 457, 460, 467, 470, 597, 600, 607, 610, 683, 689, 777], "dictionari": [71, 74, 75, 76, 77, 139, 153, 362, 385], "asynchron": [71, 74, 75, 76, 77], "arriv": [71, 74, 75, 76, 77], "timeout": [71, 74, 75, 76, 77, 683, 756, 763], "whitespac": [71, 74, 75, 76, 77], "indent": [71, 74, 75, 76, 77, 139], "extra": [71, 74, 75, 76, 77, 121, 123, 124, 125, 128, 129, 136, 791, 801, 802], "newlin": [71, 74, 75, 76, 77, 120], "handl": [71, 74, 75, 76, 77, 116, 118, 123, 124, 125, 126, 128, 130, 131, 132, 133, 140, 200, 201, 362, 364, 365, 366, 367, 368, 371, 376, 380, 381, 392, 395, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1211, 1212, 1213, 1214, 1215, 1216], "color": [71, 74, 75, 76, 77, 1220, 1221], "map": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 118, 123, 126, 130, 139, 152, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1051, 1058, 1059, 1063, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175, 1195, 1206], "termcolor": [71, 74, 75, 76, 77], "rebuild": [71, 74, 75, 76, 77], "constructor": [71, 74, 75, 76, 77, 131, 132, 138, 683, 690, 1217, 1218], "param": [71, 74, 75, 76, 77, 86, 87, 136, 141, 683, 689, 723, 726, 727, 728, 731, 732], "alphabet": [71, 74, 75, 76, 77], "preserv": [71, 74, 75, 76, 77, 123, 141, 153, 791, 826, 985, 1003, 1006], "key_chain": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 276, 278, 280, 281, 283, 285, 286, 288, 290, 291, 293, 295, 298, 300, 303, 305, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 326, 328, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 797, 798, 800, 801, 803, 804, 805, 807, 808, 810, 812, 813, 814, 816, 817, 818, 820, 821, 822, 824, 828, 829, 831, 857, 859, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 889, 891, 893, 895, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 937, 939, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 962, 964, 965, 967, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1100, 1101, 1103, 1105, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1118, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "to_appli": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 276, 278, 280, 281, 283, 285, 286, 288, 290, 291, 293, 295, 298, 300, 303, 305, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 326, 328, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 797, 798, 800, 801, 803, 804, 805, 807, 808, 810, 812, 813, 814, 816, 817, 818, 820, 821, 822, 824, 828, 829, 831, 857, 859, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 889, 891, 893, 895, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 937, 939, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 962, 964, 965, 967, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1100, 1101, 1103, 1105, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1118, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "prune_unappli": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 276, 278, 280, 281, 283, 285, 286, 288, 290, 291, 293, 295, 298, 300, 303, 305, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 326, 328, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 797, 798, 800, 801, 803, 804, 805, 807, 808, 810, 812, 813, 814, 816, 817, 818, 820, 821, 822, 824, 828, 829, 831, 857, 859, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 889, 891, 893, 895, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 937, 939, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 962, 964, 965, 967, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1100, 1101, 1103, 1105, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1118, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "map_sequ": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 276, 278, 280, 281, 283, 285, 286, 288, 290, 291, 293, 295, 298, 300, 303, 305, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 326, 328, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 797, 798, 800, 801, 803, 804, 805, 807, 808, 810, 812, 813, 814, 816, 817, 818, 820, 821, 822, 824, 828, 829, 831, 857, 859, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 893, 895, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 937, 939, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 962, 964, 965, 967, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1100, 1101, 1103, 1105, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1118, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "static_arg_info": [71, 76, 77], "static_arg_nam": [71, 76, 77], "static_argmax": [71, 76, 77], "static_argmin": [71, 76, 77], "static_arrai": [71, 76, 77], "static_array_equ": [71, 76, 77], "static_arrays_equ": [71, 76, 77], "static_as_ivy_dev": [71, 76, 77], "static_as_ivy_dtyp": [71, 76, 77], "static_as_native_dev": [71, 76, 77], "static_as_native_dtyp": [71, 76, 77], "static_assert_supports_inplac": [71, 76, 77], "static_cache_fn": [71, 76, 77], "static_clear_mem_on_dev": [71, 76, 77], "static_clip_matrix_norm": [71, 76, 77], "static_closest_valid_dtyp": [71, 76, 77], "static_concat": [71, 76, 77], "static_constant_pad": [71, 76, 77], "static_container_typ": [71, 76, 77], "static_conv1d_transpos": [71, 76, 77], "static_conv2d": [71, 76, 77], "static_conv2d_transpos": [71, 76, 77], "static_conv3d": [71, 76, 77], "static_conv3d_transpos": [71, 76, 77], "static_copy_arrai": [71, 76, 77], "static_cumprod": [71, 76, 77], "static_cumsum": [71, 76, 77], "static_current_backend": [71, 76, 77], "static_current_backend_str": [71, 76, 77], "static_default": [71, 76, 77], "static_default_devic": [71, 76, 77], "static_default_dtyp": [71, 76, 77], "static_default_int_dtyp": [71, 76, 77], "static_default_uint_dtyp": [71, 76, 77], "static_dev_util": [71, 76, 77], "static_dropout": [71, 76, 77], "static_dtype_bit": [71, 76, 77], "static_eigh": [71, 76, 77], "static_eigvalsh": [71, 76, 77], "static_einops_rearrang": [71, 76, 77], "static_einsum": [71, 76, 77], "static_empti": [71, 76, 77], "static_exist": [71, 76, 77], "static_expand_dim": [71, 76, 77], "static_flip": [71, 76, 77], "static_floormod": [71, 76, 77], "static_fourier_encod": [71, 76, 77], "static_ful": [71, 76, 77], "static_function_supported_devic": [71, 76, 77], "static_function_supported_devices_and_dtyp": [71, 76, 77], "static_function_unsupported_devic": [71, 76, 77], "static_function_unsupported_devices_and_dtyp": [71, 76, 77], "static_get_all_arrays_in_memori": [71, 76, 77], "static_get_all_ivy_arrays_on_dev": [71, 76, 77], "static_get_array_mod": [71, 76, 77], "static_get_min_bas": [71, 76, 77], "static_get_min_denomin": [71, 76, 77], "static_get_nestable_mod": [71, 76, 77], "static_get_num_dim": [71, 76, 77], "static_get_referrers_recurs": [71, 76, 77], "static_gpu_is_avail": [71, 76, 77], "static_handle_nest": [71, 76, 77], "static_handle_out_argu": [71, 76, 77], "static_has_nan": [71, 76, 77], "static_indices_wher": [71, 76, 77], "static_infer_devic": [71, 76, 77], "static_infer_dtyp": [71, 76, 77], "static_inplace_arrays_support": [71, 76, 77], "static_inplace_decr": [71, 76, 77], "static_inplace_incr": [71, 76, 77], "static_inplace_upd": [71, 76, 77], "static_inplace_variables_support": [71, 76, 77], "static_inputs_to_native_arrai": [71, 76, 77], "static_invalid_dtyp": [71, 76, 77], "static_is_arrai": [71, 76, 77], "static_is_ivy_arrai": [71, 76, 77], "static_is_ivy_contain": [71, 76, 77], "static_is_native_arrai": [71, 76, 77], "static_linear": [71, 76, 77], "static_lstm_upd": [71, 76, 77], "static_match_kwarg": [71, 76, 77], "static_matmul": [71, 76, 77], "static_max": [71, 76, 77], "static_maximum": [71, 76, 77], "static_mean": [71, 76, 77], "static_min": [71, 76, 77], "static_multi_head_attent": [71, 76, 77], "static_multinomi": [71, 76, 77], "static_multiprocess": [71, 76, 77], "static_nonzero": [71, 76, 77], "static_num_arrays_in_memori": [71, 76, 77], "static_num_cpu_cor": [71, 76, 77], "static_num_gpu": [71, 76, 77], "static_num_ivy_arrays_on_dev": [71, 76, 77], "static_one_hot": [71, 76, 77], "static_outputs_to_ivy_arrai": [71, 76, 77], "static_percent_used_mem_on_dev": [71, 76, 77], "static_permute_dim": [71, 76, 77], "static_pinv": [71, 76, 77], "static_print_all_arrays_in_memori": [71, 76, 77], "static_print_all_ivy_arrays_on_dev": [71, 76, 77], "static_prod": [71, 76, 77], "static_promote_typ": [71, 76, 77], "static_queue_timeout": [71, 76, 77], "static_scaled_dot_product_attent": [71, 76, 77], "static_scatter_flat": [71, 76, 77], "static_scatter_nd": [71, 76, 77], "static_se": [71, 76, 77], "static_set_array_mod": [71, 76, 77], "static_set_default_devic": [71, 76, 77], "static_set_default_dtyp": [71, 76, 77], "static_set_default_float_dtyp": [71, 76, 77], "static_set_default_int_dtyp": [71, 76, 77], "static_set_default_uint_dtyp": [71, 76, 77], "static_set_min_bas": [71, 76, 77], "static_set_min_denomin": [71, 76, 77], "static_set_nestable_mod": [71, 76, 77], "static_set_queue_timeout": [71, 76, 77], "static_set_shape_array_mod": [71, 76, 77], "static_set_split_factor": [71, 76, 77], "static_set_tmp_dir": [71, 76, 77], "static_set_with_grad": [71, 76, 77], "static_shap": [71, 76, 77], "static_shape_array_mod": [71, 76, 77], "static_shuffl": [71, 76, 77], "static_split": [71, 76, 77], "static_split_factor": [71, 76, 77], "static_split_func_cal": [71, 76, 77], "static_squeez": [71, 76, 77], "static_stable_pow": [71, 76, 77], "static_stack": [71, 76, 77], "static_std": [71, 76, 77], "static_stop_gradi": [71, 76, 77], "static_sum": [71, 76, 77], "static_supports_inplac": [71, 76, 77], "static_swapax": [71, 76, 77], "static_til": [71, 76, 77], "static_tmp_dir": [71, 76, 77], "static_to_ivy_shap": [71, 76, 77], "static_to_list": [71, 76, 77], "static_to_native_arrays_and_back": [71, 76, 77], "static_to_native_shap": [71, 76, 77], "static_to_scalar": [71, 76, 77], "static_total_mem_on_dev": [71, 76, 77], "static_tpu_is_avail": [71, 76, 77], "static_try_else_non": [71, 76, 77], "static_type_promote_arrai": [71, 76, 77], "static_unset_array_mod": [71, 76, 77], "static_unset_default_devic": [71, 76, 77], "static_unset_default_dtyp": [71, 76, 77], "static_unset_default_float_dtyp": [71, 76, 77], "static_unset_default_int_dtyp": [71, 76, 77], "static_unset_default_uint_dtyp": [71, 76, 77], "static_unset_nestable_mod": [71, 76, 77], "static_unset_shape_array_mod": [71, 76, 77], "static_unset_with_grad": [71, 76, 77], "static_unstack": [71, 76, 77], "static_used_mem_on_dev": [71, 76, 77], "static_valid_dtyp": [71, 76, 77], "static_value_is_nan": [71, 76, 77], "static_variable_data": [71, 76, 77], "static_wher": [71, 76, 77], "static_with_grad": [71, 76, 77], "static_zero_pad": [71, 76, 77], "containerbas": [72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 130], "formul": [72, 73, 165, 167, 169], "chain": [72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 129, 130, 140, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1047, 1048, 1049, 1051, 1064, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175, 1217, 1218], "prune": [72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 250, 252, 254, 268, 269, 271, 281, 283, 285, 291, 293, 295, 347, 349, 351, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 808, 810, 812, 828, 829, 831, 857, 859, 861, 902, 904, 906, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 1016, 1018, 1020, 1021, 1023, 1025, 1051, 1064, 1065, 1066, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1105, 1106, 1108, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "unit": [72, 73, 122, 123, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194], "slope": [72, 73, 164, 170, 172, 173, 174], "leaki": [72, 73, 164, 170, 172, 173, 174], "rectifi": [72, 73, 164, 170, 173, 175, 177, 178, 179], "static_gelu": [72, 73, 165], "static_leaky_relu": [72, 73, 170], "static_relu": [72, 73, 175], "static_sigmoid": [72, 73, 180], "static_softmax": [72, 73, 185], "static_softplu": [72, 73, 190], "static_tanh": [72, 73, 84, 85, 195], "96": [72, 73, 84, 85, 102, 103, 195, 196, 396, 477, 479, 480, 481, 672, 676, 791, 792, 795, 856, 912, 915, 1087, 1089, 1131, 1132, 1135], "995": [72, 73, 84, 85, 164, 195, 196, 198, 199, 396, 677], "9999": [72, 73, 84, 85, 195, 196], "__getitem__": [74, 75, 130], "queri": [74, 75, 130, 131, 138, 362, 373, 385, 835, 854, 855, 1195, 1206], "slice": [74, 75, 683, 723, 726, 728, 731, 1051, 1060], "__setitem__": [74, 75, 129, 130, 138], "val": [74, 75, 133, 138, 683, 743, 744, 745, 760, 761], "all_fals": [74, 75], "assert_is_bool": [74, 75], "entri": [74, 75, 203, 231, 232, 234, 235, 985, 1026, 1051, 1064], "assert": [74, 75, 119, 123, 134, 138, 139, 683, 693], "all_key_chain": [74, 75], "include_empti": [74, 75], "all_tru": [74, 75, 130, 139], "arrays_as_list": [74, 75], "intermedi": [74, 75], "as_arrai": [74, 75, 683, 738, 766], "as_bool": [74, 75], "as_vari": [74, 75, 123, 125], "assert_contains_sub_contain": [74, 75], "sub_cont": [74, 75], "diff": [74, 75, 130, 139], "screen": [74, 75, 139], "assert_contains_sub_structur": [74, 75], "check_shap": [74, 75], "assert_ident": [74, 75], "check_typ": [74, 75], "same_arrai": [74, 75, 139], "assert_identical_structur": [74, 75], "at_key_chain": [74, 75], "ignore_key_error": [74, 75], "ignore_non": [74, 75], "at_kei": [74, 75], "ignor": [74, 75, 121, 123, 153, 203, 237, 240, 884, 888, 939, 940, 1051, 1062, 1211, 1215], "substr": [74, 75], "clip_min": [74, 75], "clip_max": [74, 75], "config": [74, 75, 139, 1051, 1064], "duplic": [74, 75, 120, 127, 128, 134, 138, 140], "container_rightmost": [74, 75], "common_key_chain": [74, 75, 130], "contains_sub_contain": [74, 75], "match": [74, 75, 130, 273, 276, 279, 396, 632, 635, 683, 751], "contains_sub_structur": [74, 75], "create_if_abs": [74, 75], "inplac": [74, 75, 88, 89, 116, 118, 121, 128, 129, 138, 140, 683, 693, 742, 745, 746, 774, 791, 797, 798, 799, 800, 804, 805, 806, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1187, 1188, 1211, 1212, 1213, 1214, 1215, 1216], "cutoff_at_depth": [74, 75], "depth_cutoff": [74, 75], "cutoff_at_height": [74, 75], "height_cutoff": [74, 75], "deep_copi": [74, 75, 139], "intern": [74, 75, 120, 123, 129, 130, 132, 133, 791, 833, 1051, 1052, 1061, 1062, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1217, 1218], "belong": [74, 75, 140], "dev_clon": [74, 75], "dev_dist": [74, 75], "dev_str": [74, 75], "diff_kei": [74, 75], "detect_key_diff": [74, 75], "detect_value_diff": [74, 75], "detect_shape_diff": [74, 75], "treat": [74, 75, 123, 137, 141, 200, 201], "container0": [74, 75], "find_sub_contain": [74, 75], "sub_cont_to_find": [74, 75], "exsit": [74, 75], "find_sub_structur": [74, 75], "sub_struc_to_find": [74, 75], "flatten_key_chain": [74, 75, 139, 1207, 1208], "__": [74, 75, 121, 139], "above_height": [74, 75, 139], "below_depth": [74, 75, 139], "format_key_chain": [74, 75], "format_fn": [74, 75], "string": [74, 75, 127, 131, 132, 134, 136, 139, 273, 274, 275, 303, 306, 325, 361, 362, 364, 365, 366, 367, 373, 381, 387, 391, 392, 395, 683, 705], "from_disk_as_hdf5": [74, 75, 139], "h5_obj_or_filepath": [74, 75], "slice_obj": [74, 75], "load": [74, 75, 153], "disk": [74, 75, 139], "h5py": [74, 75], "hdf5": [74, 75, 139, 1207, 1208], "h5": [74, 75], "from_disk_as_json": [74, 75, 139], "json_filepath": [74, 75], "json": [74, 75, 139], "from_disk_as_pickl": [74, 75, 139], "pickle_filepath": [74, 75], "pickl": [74, 75, 130, 139], "from_flat_list": [74, 75], "flat_list": [74, 75], "hierarchi": [74, 75, 139], "flat": [74, 75, 683, 757, 985, 1011, 1014], "from_numpi": [74, 75, 139], "h5_file_s": [74, 75], "batch": [74, 75, 126, 130, 139, 362, 384, 385, 683, 720, 835, 852, 856, 959, 963, 1047, 1048, 1049, 1050, 1069, 1070, 1073, 1209, 1210], "handle_inplac": [74, 75], "prime": [74, 75], "overwritten": [74, 75, 127, 129], "has_kei": [74, 75], "query_kei": [74, 75], "somewher": [74, 75], "has_key_chain": [74, 75], "include_inf": [74, 75, 683, 740, 790], "leafwis": [74, 75], "well": [74, 75, 123, 124, 133, 140, 141, 152, 683, 740, 856, 929, 932], "inf": [74, 75, 94, 95, 123, 202, 396, 432, 435, 507, 510, 537, 540, 683, 740, 790, 856, 959, 963], "identical_array_shap": [74, 75], "identical_config": [74, 75], "identical_structur": [74, 75], "if_exist": [74, 75], "key_chains_contain": [74, 75], "sub_str": [74, 75], "join": [74, 75, 985, 991, 994, 1031, 1034, 1176], "list_stack": [74, 75, 139], "dim": [74, 75, 124, 125, 131, 683, 754, 1195, 1206], "func": [74, 75, 88, 89, 130, 200, 201, 362, 386, 683, 694, 791, 801, 802, 803, 1051, 1064], "map_cont": [74, 75], "include_self": [74, 75], "possibi": [74, 75], "max_depth": [74, 75, 683, 739, 1051, 1063], "multi_map": [74, 75, 130], "map_nest": [74, 75, 94, 95, 98, 99, 889, 891, 991, 993, 1031, 1033], "leftmost": [74, 75, 1051, 1064], "multi_map_in_static_method": [74, 75, 130], "fn_name": [74, 75, 125], "num_arrai": [74, 75, 123], "overwrite_at_key_chain": [74, 75], "target_dict": [74, 75], "return_dict": [74, 75], "prune_empti": [74, 75], "keep_non": [74, 75], "prune_key_chain": [74, 75], "key1": [74, 75, 140], "key2": [74, 75], "key3": [74, 75], "prune_key_from_key_chain": [74, 75], "prune_kei": [74, 75], "prune_keys_from_key_chain": [74, 75], "remove_key_length_limit": [74, 75], "remove_print_limit": [74, 75], "reshape_lik": [74, 75], "leading_shap": [74, 75], "return_cont": [74, 75], "restructur": [74, 75], "keep_orig": [74, 75], "transpos": [74, 75, 138, 141, 835, 841, 843, 845, 856, 907, 910, 917, 919, 1176, 1195, 1197, 1199, 1201], "restructure_key_chain": [74, 75], "keychain_map": [74, 75], "set_at_key_chain": [74, 75], "set_at_kei": [74, 75], "set_framework": [74, 75, 136, 138, 139, 141], "set_ivy_backend": [74, 75], "ivy_backend": [74, 75], "attribut": [74, 75, 119, 120, 124, 128, 130, 131, 137, 138, 139, 140, 273, 309, 312, 314, 315, 317, 318, 320, 323, 362, 374, 375, 382, 683, 721, 722], "show_sub_contain": [74, 75], "sub_cont_or_keychain": [74, 75], "seed_valu": [74, 75, 1075, 1092], "shuffle_h5_fil": [74, 75], "dataset": [74, 75, 139, 151, 1176], "size_ordered_arrai": [74, 75], "keychain": [74, 75], "smallest": [74, 75, 273, 309, 312, 320, 323, 396, 472, 475], "largest": [74, 75, 152, 273, 309, 312, 320, 323, 856, 934, 938], "slice_kei": [74, 75], "key_slic": [74, 75], "all_depth": [74, 75], "slice_via_kei": [74, 75], "sort_by_kei": [74, 75], "num_or_size_split": [74, 75, 136, 985, 1026], "with_remaind": [74, 75, 985, 1026], "constitu": [74, 75, 141], "evenli": [74, 75, 203, 204, 205, 231, 232, 234, 235, 985, 1026], "preserve_typ": [74, 75, 791, 826], "stop": [74, 75, 78, 79, 136, 153, 203, 204, 205, 206, 231, 232, 233, 234, 235, 236, 362, 363, 386, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 826, 1047, 1048, 1049, 1050, 1211, 1212, 1213, 1214, 1215, 1216], "structural_diff": [74, 75], "target": [74, 75, 116, 135, 139, 140, 141, 362, 366, 1176], "to_dict": [74, 75], "to_disk_as_hdf5": [74, 75, 139], "starting_index": [74, 75], "max_batch_s": [74, 75], "later": [74, 75, 123, 683, 694], "to_disk_as_json": [74, 75, 139], "to_disk_as_pickl": [74, 75, 139], "to_flat_list": [74, 75], "to_iter": [74, 75, 130], "leaf_keys_onli": [74, 75], "to_iterator_kei": [74, 75], "to_iterator_valu": [74, 75], "to_json": [74, 75], "update_backend": [74, 75], "to_raw": [74, 75], "raw": [74, 75, 120], "trim_kei": [74, 75], "max_length": [74, 75], "try_kc": [74, 75], "tri": [74, 75], "concatten": [74, 75, 94, 95, 362, 386], "dim_siz": [74, 75], "update_config": [74, 75], "global_norm": [74, 75, 94, 95], "with_default_key_color": [74, 75], "with_entries_as_list": [74, 75], "with_ivy_backend": [74, 75], "with_key_length_limit": [74, 75, 139], "with_print_ind": [74, 75, 139], "with_print_limit": [74, 75, 139], "with_print_line_spac": [74, 75], "2324": [78, 79, 203, 226, 228, 229, 230], "234": [78, 79, 203, 226, 228, 229, 230], "123": [78, 79, 123, 203, 226, 228, 229, 230, 683, 718], "static_arang": [78, 79, 204], "static_asarrai": [78, 79, 207], "static_empty_lik": [78, 79, 212], "static_ey": [78, 79, 217], "n_row": [78, 79, 203, 217, 218, 219], "n_col": [78, 79, 203, 217, 218, 219], "static_from_dlpack": [78, 79, 220], "static_full_lik": [78, 79, 226], "static_linspac": [78, 79, 231], "num": [78, 79, 136, 203, 231, 232, 233, 234, 235, 236], "endpoint": [78, 79, 203, 231, 232, 233, 234, 236], "static_logspac": [78, 79, 234], "static_meshgrid": [78, 79, 237], "static_native_arrai": [78, 79, 242], "static_on": [78, 79, 247], "static_ones_lik": [78, 79, 250], "static_tril": [78, 79, 255], "static_triu": [78, 79, 260], "static_zero": [78, 79, 265], "static_zeros_lik": [78, 79, 268], "broadcats": [80, 81, 281, 283], "static_astyp": [80, 81, 276], "static_broadcast_arrai": [80, 81, 281], "And": [80, 81, 281, 285], "static_broadcast_to": [80, 81, 286], "static_can_cast": [80, 81, 291], "from_": [80, 81, 273, 291, 294, 295], "static_default_float_dtyp": [80, 81, 298], "float_dtyp": [80, 81, 273, 298, 299, 300, 353], "static_dtyp": [80, 81, 303], "static_finfo": [80, 81, 309], "static_function_supported_dtyp": [80, 81, 314], "fn": [80, 81, 119, 136, 138, 154, 155, 156, 157, 158, 159, 160, 161, 162, 273, 314, 315, 316, 317, 318, 319, 362, 374, 375, 683, 689, 721, 722, 785, 1051, 1052, 1057, 1058, 1059, 1061, 1062, 1063, 1179, 1181], "static_function_unsupported_dtyp": [80, 81, 317], "static_iinfo": [80, 81, 320], "static_is_bool_dtyp": [80, 81, 326], "dtype_in": [80, 81, 273, 274, 275, 308, 325, 326, 329, 330, 331, 334, 335, 336, 339, 340, 341, 344, 345, 361], "static_is_float_dtyp": [80, 81, 331], "static_is_int_dtyp": [80, 81, 336], "static_is_uint_dtyp": [80, 81, 341], "static_result_typ": [80, 81, 347], "static_dev": [82, 83, 368], "static_to_devic": [82, 83, 387], "61": [84, 85, 96, 97, 102, 103, 396, 422, 424, 662, 665, 835, 846, 849, 969, 970, 972, 973, 974, 980, 982, 984, 1087, 1089], "41": [84, 85, 86, 87, 94, 95, 138, 396, 427, 429, 430, 431, 467, 470, 657, 660, 683, 696, 699, 700, 856, 857, 859, 860, 861, 1075, 1087, 1090, 1131, 1156, 1159], "915": [84, 85, 396, 432, 434, 435, 436], "29": [84, 85, 102, 103, 396, 432, 434, 435, 436, 1077, 1079, 1082, 1084, 1087, 1089, 1091], "983": [84, 85, 396, 432, 434, 435, 436], "75": [84, 85, 86, 87, 92, 93, 102, 103, 396, 422, 425, 426, 432, 434, 435, 436, 487, 490, 768, 770, 836, 838, 840, 856, 884, 887, 912, 915, 1075, 1082, 1086, 1087, 1090], "35": [84, 85, 102, 103, 396, 432, 434, 435, 436, 657, 660, 835, 855, 856, 862, 865, 1082, 1084, 1086, 1087, 1091, 1094, 1098, 1131, 1132, 1135], "978": [84, 85, 164, 180, 183, 396, 432, 434, 435, 436], "696": [84, 85, 102, 103, 396, 432, 434, 435, 436, 1082, 1084], "993": [84, 85, 396, 432, 434, 435, 436], "203": [84, 85, 437, 439, 441], "34": [84, 85, 102, 103, 273, 320, 323, 396, 467, 470, 482, 484, 486, 652, 654, 656, 657, 660, 1075, 1077, 1081, 1082, 1084, 1087, 1090], "52": [84, 85, 102, 103, 396, 432, 435, 482, 484, 486, 487, 489, 490, 491, 791, 792, 795, 856, 912, 915, 1087, 1089, 1099, 1100, 1104, 1131, 1132, 1135], "333": [84, 85, 396, 487, 489, 490, 491, 683, 696, 699, 835, 846, 849], "thefunct": [84, 85, 497, 499, 507, 511, 512, 516], "649": [84, 85, 507, 509], "220": [84, 85, 507, 509], "959": [84, 85, 396, 507, 509, 647, 649, 650, 651], "865": [84, 85, 507, 509], "metho": [84, 85, 527, 529, 572, 574], "threshold": [84, 85, 396, 602, 603, 604, 605, 606], "300": [84, 85, 123, 396, 637, 639, 640, 641], "527": [84, 85, 396, 637, 639, 640, 641], "301": [84, 85, 396, 637, 639, 640, 641], "757": [84, 85, 396, 647, 649, 650, 651], "279": [84, 85, 396, 647, 649, 650, 651], "835": [84, 85, 652, 654, 656], "347": [84, 85, 652, 654, 656], "721": [84, 85, 652, 654, 656], "static_ab": [84, 85, 397], "static_aco": [84, 85, 402], "static_acosh": [84, 85, 407], "static_add": [84, 85, 120, 121, 130, 412], "static_asin": [84, 85, 417], "static_asinh": [84, 85, 422], "97": [84, 85, 102, 103, 396, 422, 425, 426, 1082, 1084], "static_atan": [84, 85, 427], "static_atan2": [84, 85, 432], "static_atanh": [84, 85, 437], "static_bitwise_and": [84, 85, 442], "static_bitwise_invert": [84, 85, 447], "static_bitwise_left_shift": [84, 85, 452], "static_bitwise_or": [84, 85, 457], "static_bitwise_right_shift": [84, 85, 462], "static_bitwise_xor": [84, 85, 467], "static_ceil": [84, 85, 472], "static_co": [84, 85, 477], "static_cosh": [84, 85, 482], "static_divid": [84, 85, 130, 487], "static_equ": [84, 85, 492], "static_erf": [84, 85, 497], "static_exp": [84, 85, 502], "static_expm1": [84, 85, 396, 507, 510], "areal": [84, 85, 507, 511], "static_floor": [84, 85, 512], "static_floor_divid": [84, 85, 517], "static_great": [84, 85, 522], "static_greater_equ": [84, 85, 527], "static_isfinit": [84, 85, 532], "static_isinf": [84, 85, 396, 537, 540], "static_isnan": [84, 85, 542], "static_less": [84, 85, 547], "static_less_equ": [84, 85, 552], "static_log": [84, 85, 557], "static_log10": [84, 85, 562], "static_log1p": [84, 85, 567], "static_log2": [84, 85, 572], "static_logaddexp": [84, 85, 577], "static_logical_and": [84, 85, 582], "static_logical_not": [84, 85, 587], "static_logical_or": [84, 85, 592], "static_logical_xor": [84, 85, 597], "static_minimum": [84, 85, 603], "static_multipli": [84, 85, 130, 607], "static_neg": [84, 85, 612], "static_not_equ": [84, 85, 617], "static_posit": [84, 85, 622], "static_pow": [84, 85, 627], "static_remaind": [84, 85, 632], "static_round": [84, 85, 637], "thevfunct": [84, 85, 637, 641], "static_sign": [84, 85, 642], "static_sin": [84, 85, 647], "static_sinh": [84, 85, 652], "static_sqrt": [84, 85, 657], "static_squar": [84, 85, 662], "static_subtract": [84, 85, 130, 667], "static_tan": [84, 85, 121, 130, 672], "143": [84, 85, 121, 396, 672, 673, 675, 676], "38": [84, 85, 102, 103, 121, 273, 309, 312, 396, 672, 673, 675, 676, 1087, 1091], "static_trunc": [84, 85, 678], "static_all_equ": [86, 87, 684, 686], "667": [86, 87, 396, 487, 490, 683, 696, 698, 768, 770, 771, 1099, 1100, 1104], "833": [86, 87, 696, 698], "static_clip_vector_norm": [86, 87, 696], "849": [86, 87, 683, 696, 699, 700], "static_einops_reduc": [86, 87, 708], "static_einops_repeat": [86, 87, 713], "static_gath": [86, 87, 723], "static_gather_nd": [86, 87, 728], "static_stable_divid": [86, 87, 768], "30": [86, 87, 102, 103, 396, 637, 640, 683, 768, 771, 772, 856, 912, 915, 1077, 1079, 1082, 1084, 1086, 1131, 1132, 1135, 1189, 1193], "40": [86, 87, 102, 103, 396, 482, 485, 657, 660, 683, 768, 771, 772, 856, 912, 915, 1082, 1084, 1131, 1132, 1135], "50": [86, 87, 396, 657, 660, 683, 768, 771, 772, 856, 912, 915, 1094, 1097, 1131, 1132, 1135], "22222222": [86, 87, 768, 772], "11111111": [86, 87, 768, 772], "857": [86, 87, 683, 768, 771, 772, 1099, 1100, 1104], "444": [86, 87, 768, 772], "static_to_numpi": [86, 87, 779, 782], "lr": [88, 89, 139, 140, 791, 797, 798, 799, 800, 804, 805, 806, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1211, 1212, 1213, 1214, 1215, 1216], "mw_tm1": [88, 89, 791, 797, 798, 799, 800, 813, 814, 815, 816], "vw_tm1": [88, 89, 791, 797, 798, 799, 800, 813, 814, 815, 816], "max_trust_ratio": [88, 89, 791, 813, 814, 815, 816, 1211, 1213], "decay_lambda": [88, 89, 791, 813, 814, 815, 816, 817, 818, 819, 820, 1211, 1213, 1214], "effective_grad": [88, 89, 791, 821, 822, 823, 824], "static_adam_step": [88, 89, 792], "87": [88, 89, 791, 792, 795, 796], "976": [88, 89, 164, 195, 199, 396, 677, 791, 792, 795, 796], "static_adam_upd": [88, 89, 797], "static_execute_with_gradi": [88, 89, 801], "retain_grad": [88, 89, 130, 791, 801, 802, 803], "static_gradient_descent_upd": [88, 89, 804], "static_is_vari": [88, 89, 808], "static_lamb_upd": [88, 89, 813], "static_lars_upd": [88, 89, 817], "static_optimizer_upd": [88, 89, 821], "static_vari": [88, 89, 828], "inp": [92, 93, 835, 846, 848, 849, 850], "static_conv1d": [92, 93, 836], "static_depthwise_conv2d": [92, 93, 846], "73": [94, 95, 123, 396, 657, 660, 856, 857, 859, 860, 861, 1069, 1070, 1073, 1075, 1082, 1085], "577": [94, 95, 856, 857, 859, 860, 861], "707": [94, 95, 856, 857, 859, 860, 861], "liter": [94, 95, 134, 856, 959, 963], "nuc": [94, 95], "singular": [94, 95, 856, 902, 904, 905, 906, 917, 919, 934, 938, 939, 943], "toler": [94, 95, 125, 856, 902, 904, 905, 906, 917, 919], "largest_singular_valu": [94, 95, 856, 902, 904, 905, 906, 917, 919], "equival": [94, 95, 133, 139, 141, 203, 204, 205, 396, 462, 465, 587, 590, 592, 595, 632, 635, 856, 902, 904, 905, 906, 917, 919, 929, 932, 959, 963], "ep": [94, 95, 273, 309, 312, 856, 902, 904, 905, 906, 917, 919], "static_choleski": [94, 95, 857], "static_rol": [94, 95, 98, 99, 121, 130, 857, 861, 986, 990, 1021], "static_cross": [94, 95, 862], "static_det": [94, 95, 867], "static_diagon": [94, 95, 872], "static_inv": [94, 95, 884], "static_matrix_norm": [94, 95, 893], "static_matrix_pow": [94, 95, 898], "static_matrix_rank": [94, 95, 902], "ref": [94, 95, 120, 396, 462, 465, 547, 550, 607, 610, 617, 620, 632, 635, 667, 671, 902, 906, 985, 1031, 1034], "static_matrix_transpos": [94, 95, 907], "static_out": [94, 95, 912], "static_qr": [94, 95, 920], "static_slogdet": [94, 95, 925], "static_solv": [94, 95, 929], "static_svd": [94, 95, 934], "static_svdv": [94, 95, 939], "static_tensordot": [94, 95, 944], "static_trac": [94, 95, 949], "static_vecdot": [94, 95, 954], "static_vector_norm": [94, 95, 959], "static_vector_to_skew_symmetric_matrix": [94, 95, 964], "511": [96, 97, 969, 970, 972, 973, 974, 980, 982, 984], "5108256": [96, 97, 975, 977], "609438": [96, 97, 975, 977], "static_binary_cross_entropi": [96, 97, 970], "static_cross_entropi": [96, 97, 975], "20397282": [96, 97, 975, 979], "83258148": [96, 97, 975, 979], "60943794": [96, 97, 975, 979], "static_sparse_cross_entropi": [96, 97, 980], "static_clip": [98, 99, 986], "static_repeat": [98, 99, 1011], "static_reshap": [98, 99, 1016], "658": [100, 101, 1069, 1070, 1072, 1073, 1074], "04": [100, 101, 273, 309, 312, 396, 507, 510, 835, 855, 1069, 1070, 1072, 1073, 1074], "759": [100, 101, 1069, 1070, 1072, 1073, 1074], "403": [100, 101, 1070, 1072, 1074], "62": [100, 101, 102, 103, 396, 652, 655, 1070, 1072, 1074, 1075, 1077, 1079, 1087, 1090], "static_layer_norm": [100, 101, 1070], "28": [102, 103, 791, 792, 795, 835, 842, 845, 846, 849, 856, 912, 915, 1077, 1079, 1082, 1084, 1087, 1089, 1131, 1132, 1135], "102": [102, 103, 1077, 1079], "60": [102, 103, 683, 703, 768, 771, 856, 912, 915, 1077, 1079, 1131, 1132, 1135], "431": [102, 103, 1082, 1084], "55": [102, 103, 835, 845, 856, 912, 915, 939, 943, 1075, 1082, 1084, 1085, 1087, 1089, 1131, 1132, 1135], "31": [102, 103, 396, 657, 660, 856, 939, 943, 1082, 1084, 1087, 1089], "68": [102, 103, 396, 422, 425, 432, 435, 1069, 1070, 1073, 1082, 1084, 1087, 1089], "93": [102, 103, 362, 373, 396, 657, 660, 1082, 1084, 1087, 1089], "83": [102, 103, 396, 657, 660, 1082, 1084], "84": [102, 103, 273, 320, 323, 362, 373, 856, 912, 915, 1082, 1084, 1087, 1089, 1131, 1132, 1135], "274": [102, 103, 1082, 1084], "08": [102, 103, 123, 396, 422, 425, 507, 510, 835, 855, 1082, 1084, 1087, 1089], "09": [102, 103, 396, 662, 665, 835, 855, 1082, 1084], "92": [102, 103, 856, 867, 870, 1082, 1084, 1087, 1089], "91": [102, 103, 396, 467, 470, 856, 912, 915, 1075, 1082, 1084, 1085, 1131, 1132, 1135], "65": [102, 103, 791, 792, 795, 856, 912, 915, 1082, 1084, 1087, 1089, 1131, 1132, 1135], "43": [102, 103, 1075, 1082, 1084, 1085, 1087, 1089, 1090, 1094, 1098], "88": [102, 103, 164, 170, 173, 396, 467, 470, 856, 912, 915, 939, 943, 1075, 1087, 1089, 1090, 1131, 1132, 1135], "static_randint": [102, 103, 1077], "static_random_norm": [102, 103, 1082], "651": [102, 103, 1082, 1086], "static_random_uniform": [102, 103, 1087], "481": [102, 103, 1087, 1091], "74": [102, 103, 396, 467, 470, 1087, 1091], "0999": [102, 103, 1087, 1091], "static_unique_al": [106, 107, 1100], "static_unique_count": [106, 107, 1105], "classivi": [106, 107, 985, 1026, 1099, 1105, 1106, 1108, 1109], "static_unique_invers": [106, 107, 1110], "static_unique_valu": [106, 107, 1115], "static_argsort": [108, 109, 1121], "static_sort": [108, 109, 1126], "static_var": [110, 111, 1160], "12666667": [110, 111, 1131, 1160, 1161, 1163, 1164], "11555555": [110, 111, 1131, 1160, 1161, 1163, 1164], "arraycontain": [110, 111, 1160, 1163], "static_al": [112, 113, 1166], "static_ani": [112, 113, 1171], "add_ivy_container_instance_method": 114, "containerexampl": [114, 115], "who": [116, 135, 153], "mainli": [116, 137, 139], "under": [116, 120, 121, 122, 123, 124, 126, 130, 135, 136, 139, 141, 153], "hood": [116, 121, 123, 126, 130, 135, 136, 139, 141], "weed": [116, 135], "behind": [116, 123, 135, 137, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823], "tour": 116, "primari": [116, 123, 127, 133, 153], "composit": [116, 123, 125, 127, 129, 130, 133, 136, 140, 141, 153], "nestabl": [116, 120, 121, 123, 133, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 472, 475, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 872, 875, 985, 1021, 1024, 1069, 1070, 1073, 1099, 1105, 1109, 1131, 1136, 1139, 1165, 1166, 1169], "dynam": [116, 131, 132, 133, 136, 200, 201], "runtim": [116, 123, 362], "helper": [116, 125, 139], "borrow": 116, "frontend": [116, 137], "taken": [117, 134, 141, 856, 872, 875], "compil": [117, 130, 135, 137, 153, 1176, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216], "meta": [117, 129, 1048, 1049, 1050], "overlap": 117, "judgement": 117, "some_namespac": 117, "some_backend": 117, "another_backend": 117, "break": [117, 118, 134, 138, 153, 1176], "anyth": [117, 123, 1176], "refactor": 117, "ongo": 117, "file_nam": [117, 123], "my_func": [117, 121], "my": 117, "cooler": 117, "produc": [117, 123, 835, 855], "something_cool": 117, "category_nam": [118, 120, 126, 131, 132], "backend_nam": [118, 120, 126, 127, 128, 131, 132], "adress": 118, "conveni": [118, 125, 131, 132, 137, 139, 140], "revisit": [118, 141], "dedic": [118, 138, 140, 791, 833, 1187, 1188], "four": [118, 121, 126, 131, 139], "tf": [118, 119, 124, 129, 131, 132, 133, 136, 141, 153, 1176], "jnp": [118, 119, 131, 132, 133, 141, 1176], "jaxarrai": [118, 119, 131, 132, 133], "wherea": [118, 121, 123, 126, 129, 131, 132, 141], "__sub__": [118, 121, 129, 130, 138], "__mul__": [118, 121, 129, 130, 138], "__div__": 118, "permit": [118, 123, 129], "dicat": 118, "addition": [118, 130, 133], "omit": [118, 133, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "wrapper": [118, 128, 129, 130, 131, 133, 138], "contrast": [118, 120], "futher": 118, "absenc": [118, 130], "pep": 118, "484": 118, "annot": [118, 134], "dictat": [118, 121, 129, 133], "brittl": 118, "intend": [118, 1131, 1156, 1159], "subset": [118, 120, 123, 136], "freeli": 118, "extend": [118, 120, 127, 153], "consum": [118, 123, 125, 130], "inde": [118, 153], "flexibl": 118, "technic": [118, 130, 133, 153], "original_typ": 118, "cumbersom": 118, "readabl": [118, 119, 129, 130, 138, 139], "clean": [119, 134, 136, 137, 139], "_assert_fill_value_and_dtype_are_compat": 119, "isinst": [119, 140, 141, 683, 777], "_to_devic": 119, "experiment": 119, "_is_valid_dtypes_attribut": 119, "supported_dtyp": 119, "unsupported_dtyp": [119, 124, 131], "fn_supported_dtyp": 119, "fn_unsupported_dtyp": 119, "backend_str": 119, "account": 120, "instanti": 120, "firstli": [120, 121, 126, 128, 129, 131, 133, 139], "templat": [120, 123, 1176], "spec": [120, 121], "api_specif": [120, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139], "array_api": 120, "preview": 120, "render": 120, "incorrectli": [120, 134], "onlin": [120, 1176], "domain": [120, 164, 195, 199, 396, 402, 405, 407, 410, 417, 420, 422, 425, 427, 430, 432, 435, 477, 480, 482, 485, 502, 505, 507, 510, 557, 560, 562, 565, 572, 575, 647, 650, 652, 655, 657, 660, 672, 676, 677], "codomain": [120, 164, 195, 199, 396, 402, 405, 407, 410, 417, 420, 422, 425, 427, 430, 432, 435, 477, 480, 482, 485, 502, 505, 507, 510, 557, 560, 562, 565, 572, 575, 647, 650, 652, 655, 657, 660, 672, 676, 677], "assum": [120, 123, 125, 127, 131, 138, 139, 153, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 477, 480, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1073, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169], "operand": [120, 124, 164, 195, 199, 396, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 467, 470, 472, 475, 477, 480, 482, 485, 502, 505, 507, 510, 512, 515, 557, 560, 562, 565, 572, 575, 577, 580, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 1131, 1132, 1135, 1136, 1139, 1144, 1147, 1156, 1159], "But": [120, 128, 130, 141], "needless": 120, "info": [120, 1176], "renam": 120, "conform": [120, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 552, 555, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 856, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169], "org": [120, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 309, 312, 320, 323, 347, 350, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 791, 792, 795, 797, 799, 856, 872, 875, 985, 999, 1002, 1021, 1024, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139], "elementwise_funct": [120, 396, 397, 400, 417, 420, 422, 425, 432, 435, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 647, 650, 657, 660, 662, 665, 856, 872, 875, 985, 1021, 1024, 1099, 1100, 1104, 1120, 1121, 1124, 1131, 1136, 1139], "descript": [120, 123, 130, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 959, 963, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1073, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1165, 1166, 1169], "simplic": [120, 140, 152, 164, 195, 199, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 291, 294, 326, 329, 336, 339, 396, 397, 400, 412, 415, 417, 420, 422, 425, 432, 435, 442, 445, 467, 470, 472, 475, 482, 485, 507, 510, 512, 515, 537, 540, 602, 603, 605, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 723, 726, 835, 842, 846, 849, 855, 856, 857, 860, 867, 870, 872, 875, 985, 999, 1002, 1003, 1006, 1021, 1024, 1069, 1070, 1073, 1099, 1100, 1104, 1105, 1109, 1120, 1121, 1124, 1131, 1136, 1139], "judgment": 120, "beyond": [120, 985, 1021, 1024], "func_nam": [120, 121, 126], "pure": [120, 138, 141, 153], "themselv": [120, 126, 130, 131, 132, 140, 1051, 1052], "operator_nam": 120, "succinct": 120, "contstructor": 120, "though": [120, 126, 131, 139, 153], "forward": [120, 123, 141, 152, 153, 1207, 1208, 1211, 1215], "_forward": [120, 136, 139, 140, 1176], "former": 120, "explicitli": [120, 126, 127, 128, 129, 130, 133, 136, 153, 856, 877, 880, 1195, 1204, 1206, 1207, 1208], "latter": [120, 127], "implicit": [120, 123, 130, 136, 884, 888, 939, 940], "docst": 120, "eight": 121, "static_": 121, "op_nam": 121, "__r": 121, "__truediv__": [121, 129, 130], "recap": [121, 130, 140], "independ": [121, 122, 128, 130, 136, 141, 856, 862, 865, 929, 932, 1075, 1076], "combinatorili": 121, "variat": [121, 123], "grid": [121, 123, 152, 203, 237, 240], "vari": [121, 123, 130, 138, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "unus": [121, 133, 134, 200, 201], "excess": [121, 127, 138], "okai": [121, 136], "showcas": [121, 152], "demonstr": [121, 138], "replic": [121, 131], "meant": 121, "imaginari": 121, "some_flag": 121, "another_flag": 121, "jointli": 121, "three": [121, 123, 124, 130, 135, 203, 237, 240, 1176], "x0": [121, 683, 691], "procedur": 121, "sens": [121, 130, 138], "5574077": 121, "1850398": 121, "5463025": 121, "8422884": 121, "91601413": 121, "9647598": 121, "3738229": 121, "1597457": 121, "0963247": 121, "9955841": 121, "3278579": 121, "multi": [121, 130, 135, 153, 835, 854, 856, 862, 865, 1176, 1182, 1195, 1206], "seper": [121, 683, 720], "pars": [121, 153], "satisfi": [121, 856, 964, 968], "far": [121, 132, 137, 138, 1051, 1052, 1062], "asid": [121, 152], "irrelev": [121, 131], "increasingli": 121, "complex": [121, 124, 139, 140, 141, 153, 683, 768, 771, 856, 877, 880, 934, 938], "14254655": 121, "1578213": 121, "380515": 121, "trivial": 121, "exlud": 121, "thoroughli": 122, "ci": [122, 123, 153], "On": [123, 124, 134, 137, 141], "fixtur": 123, "hit": [123, 136], "action": 123, "eleg": 123, "intellig": 123, "rang": [123, 139, 140, 141, 203, 204, 205, 231, 232, 234, 235, 1099, 1100, 1104, 1131, 1148, 1151, 1156, 1159, 1176], "cach": [123, 126, 362, 366, 683, 694], "unexplor": 123, "known": 123, "repeatedli": [123, 130, 1051, 1060], "upload": 123, "artifact": 123, "parametr": 123, "statement": [123, 134, 153], "plai": [123, 124, 141], "varieti": [123, 131, 132], "valid_int_dtyp": 123, "uint8": [123, 131, 273, 291, 294, 302, 341, 344, 347, 350, 352, 355, 360, 361], "uint16": [123, 131, 273, 302, 308, 317, 318, 320, 323, 341, 344, 1131, 1148, 1151, 1156, 1159], "uint32": [123, 131, 273, 302, 317, 318, 320, 323, 360, 1131, 1148, 1151, 1156, 1159], "uint64": [123, 131, 273, 302, 317, 318, 320, 323, 325, 347, 350, 352, 355, 1131, 1148, 1151, 1156, 1159], "custom_strategi": 123, "st": [123, 125], "sampled_from": [123, 125], "min_siz": 123, "max_siz": 123, "referenc": 123, "print_hypothesis_exampl": 123, "searchstrategi": 123, "randomis": 123, "simplist": 123, "intricaci": 123, "briefli": [123, 126, 139], "bound": [123, 136], "mechan": [123, 151, 153, 1176], "power": [123, 138, 139, 140, 396, 462, 465, 502, 505, 627, 630, 683, 735, 760, 773, 856, 898, 900, 1189], "math": [123, 133, 141, 396, 537, 540, 1176], "inclus": [123, 133, 203, 204, 205, 1075, 1077, 1080], "width": 123, "losslessli": 123, "mostli": 123, "one_of": 123, "datum": 123, "pipe": 123, "overload": 123, "shorthand": 123, "draw": [123, 125, 1075, 1076, 1082, 1085, 1087, 1090], "input_dtyp": [123, 125], "reject": 123, "flatmap": 123, "suppos": 123, "interact": [123, 1176], "dataobject": 123, "test_argsort": 123, "decor": [123, 125, 126, 128, 130, 131, 132, 133], "initialis": [123, 362], "snippet": 123, "dtype_and_x": [123, 125], "dtype_and_valu": [123, 125], "valid_float_dtyp": [123, 125], "list_of_length": [123, 125], "num_positional_arg": [123, 125], "instance_method": 123, "test_leaky_relu": 123, "exhaust": 123, "num_posit": 123, "indirectli": 123, "advis": 123, "seri": [123, 124], "9433925": 123, "401298464324817e": 123, "574352379": 123, "99999": 123, "2250738585072014e": 123, "308": [123, 273, 309, 312], "103515625e": 123, "unpack": [123, 134, 683, 789], "seamlessli": 123, "edg": [123, 136, 141, 985, 986, 989, 995, 998, 1043, 1046, 1176], "encount": 123, "criterion": 123, "straight": [123, 138, 1176], "array_valu": 123, "valid_ax": 123, "hand": [123, 126, 134, 153], "craft": 123, "polici": [123, 152], "hoc": 123, "overview": [123, 135, 152], "array_dtyp": 123, "array_bool": [123, 125], "na": 123, "test_concat": 123, "test_devic": 123, "array_shap": 123, "test_manipul": 123, "common_shap": 123, "test_lay": 123, "size_bound": 123, "precis": [123, 273, 309, 312, 396, 607, 610, 657, 660], "283405296074752": 123, "564049465049088": 123, "0417876997507982e": 123, "min_valu": 123, "max_valu": 123, "allow_inf": 123, "min_num_dim": [123, 125], "wherev": 123, "reshape_shap": 123, "stand": 123, "alon": [123, 362, 381, 395], "fashion": 123, "some_sequ": 123, "allow_subnorm": 123, "exclude_min": 123, "960464477539063e": 123, "coverag": 123, "allow_nan": 123, "Such": 123, "kind": [123, 153, 273, 309, 312, 320, 323, 396, 627, 630, 1131, 1148, 1151, 1156, 1159], "get_shap": [123, 125], "allow_non": [123, 125], "max_num_dim": [123, 125], "min_dim_s": [123, 125], "none_or_list_of_float": 123, "200": 123, "199": [123, 396, 422, 425], "99999999999997": 123, "000000000000002": 123, "125": 123, "43759670925832": 123, "get_mean_std": 123, "probabilist": 123, "811428143185347e": 123, "none_or_list_float": 123, "get_bound": 123, "arrays_valu": 123, "put": [123, 153], "36418": 123, "213": 123, "21716926": 123, "get_prob": 123, "unnorm": [123, 1075, 1076], "099609375": 123, "get_axi": 123, "number_positional_argu": 123, "mind": [123, 129, 130], "bodi": 123, "possibli": [123, 153, 683, 777], "test_valu": [123, 125], "enough": [123, 138, 139, 140], "justifi": 123, "unduli": 123, "labori": 123, "straightforward": [123, 139], "scenario": 123, "autom": [123, 1176], "report": 123, "test_demo": 123, "falsifi": 123, "failing_test": 123, "traceback": 123, "assertionerror": [123, 791, 825, 834], "shrink": 123, "prescrib": 123, "behavior": [123, 130, 136, 153, 396, 627, 630, 632, 635, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "identifi": 123, "closest": [123, 273, 296, 396, 472, 475, 512, 515, 517, 520, 637, 640, 678, 682], "checkout": 123, "scratch": 123, "databas": 123, "therebi": 123, "event": [123, 1176], "test_gelu": 123, "test_fil": 123, "brief": 123, "phase": [123, 153], "notabl": 123, "displai": [123, 130, 139], "verbos": [123, 136, 1176, 1221], "newer": 123, "max_exampl": 123, "impact": [123, 140], "deadlin": 123, "weird": 123, "truth": [123, 396, 492, 495, 522, 525, 527, 530, 547, 550, 552, 555, 617, 620], "opt": [123, 127, 133, 138], "defer": [123, 126, 128, 129, 130, 131, 132, 133], "suffic": [123, 128], "catch": [123, 683, 706], "systemat": 123, "safeguard": 123, "inabl": 123, "lax": [124, 125, 153], "bfloat16": [124, 131], "thu": [124, 396, 462, 465, 627, 630, 632, 635, 856, 877, 880], "categoris": 124, "notic": [124, 125, 138], "mathematical_funct": 124, "arithmetic_oper": 124, "same_kind": [124, 125], "subok": [124, 125], "mathemat": [124, 202, 396, 412, 415, 432, 435, 507, 510, 607, 610, 856, 959, 963], "slightli": [124, 130, 136, 140], "recov": 124, "obtain": 124, "trigonometric_funct": 124, "pointwise_op": 124, "concaten": [124, 136, 139, 683, 720, 985, 991, 994, 1176], "manipulation_routin": 124, "joining_arrai": 124, "indexing_slicing_joining_mutating_op": 124, "cat": [124, 136, 141], "grasp": 124, "youtub": 124, "jump": 125, "knowledg": 125, "strategi": 125, "test_frontend_funct": 125, "heavi": 125, "lift": 125, "np_frontend_help": 125, "behav": [125, 138], "test_frontend": 125, "test_jax": 125, "test_jax_lax_oper": 125, "available_dtyp": 125, "test_jax_lax_tan": 125, "as_variable_flag": 125, "with_out": 125, "native_array_flag": 125, "test_numpi": 125, "test_mathematical_funct": 125, "test_np_trigonometric_funct": 125, "test_numpy_tan": 125, "handle_where_and_array_bool": 125, "test_tensorflow": 125, "test_tf_funct": 125, "ivy_tf": 125, "test_tensorflow_tan": 125, "test_torch": 125, "test_pointwise_op": 125, "intersect": [125, 152], "ivy_torch": 125, "test_torch_tan": 125, "_dtype": [125, 138], "valid_numeric_dtyp": 125, "_fill_valu": 125, "max_dim_s": 125, "test_jax_lax_ful": 125, "uint": [125, 273, 302, 341, 344, 355, 360], "creation_routin": 125, "test_from_shape_or_valu": 125, "test_numpy_ful": 125, "test_tensorflow_ful": 125, "discrep": 125, "test_creation_op": 125, "_requires_grad": 125, "requires_grad": 125, "test_torch_ful": 125, "accommod": 125, "unsign": [125, 1131, 1148, 1151, 1156, 1159], "categor": [126, 132], "mutual": [126, 130], "venn": 126, "diagram": 126, "light": [126, 153], "log_pr": [126, 130, 133], "array_arg": 126, "typic": 126, "whatsoev": [126, 130], "outsid": [126, 132, 134, 136, 138, 141, 985, 986, 989, 1031, 1034], "deal": [126, 153], "concurr": [126, 130], "modif": 126, "group": [126, 130], "get_all_arrays_on_dev": 126, "nested_map": [126, 1051], "index_nest": [126, 1051], "implicit_backend": 127, "unless": [127, 132, 133, 153, 396, 607, 610, 683, 754, 856, 902, 905], "__dict__": [127, 136, 138], "ivy_original_dict": [127, 136], "unmodifi": [127, 131], "fallback": 127, "achiev": [128, 134, 139, 141], "counterpart": [128, 130], "inputs_to_ivy_arrai": [128, 154], "heavili": [128, 153], "nearli": 128, "anywai": [128, 129], "facilit": 128, "topic": [128, 138], "_data": [129, 138], "organiz": [129, 130], "inherit": [129, 130, 138, 153], "bear": [129, 130, 131], "necessarili": [129, 130], "although": [129, 130], "underpin": [129, 130, 136], "programmat": [129, 130], "backup": [129, 130], "accident": [129, 130], "absent": [129, 130], "perk": [129, 130], "auto": [129, 130, 139], "throw": [129, 138], "imposs": 129, "coupl": [129, 130, 138, 140], "secondli": [129, 131], "easier": 129, "five": [130, 139], "decis": [130, 136, 138], "arbitrarili": [130, 139], "__repr__": 130, "control": [130, 131, 133, 138, 139, 152], "__getattr__": 130, "underli": [130, 396, 442, 445, 457, 460, 467, 470, 597, 600], "__setattr__": 130, "__contains__": 130, "__getstate__": 130, "__setstate__": 130, "unpickl": 130, "expand": [130, 683, 720, 985, 999, 1002], "irrespect": [130, 133, 138, 273, 276, 279], "presenc": [130, 133], "implicitli": [130, 884, 888, 939, 940], "intuit": [130, 139, 140], "chronolog": 130, "had": [130, 133], "sequenti": [130, 140], "flow": [130, 152], "implic": 130, "eager": [130, 153], "children": 130, "shallowest": 130, "deepest": 130, "dy": [130, 791, 801, 802], "dx": [130, 791, 801, 802], "autograd": [130, 153], "grad": [130, 139, 140, 141, 1176, 1211, 1215], "redund": 130, "num_head": [130, 835, 854, 1195, 1206], "mask": [130, 835, 854, 855], "to_q_fn": [130, 835, 854], "to_kv_fn": [130, 835, 854], "to_out_fn": [130, 133, 835, 854], "to_q_v": [130, 835, 854], "to_kv_v": [130, 835, 854], "to_out_v": [130, 835, 854], "measur": [130, 835, 854, 1195, 1206], "dot": [130, 835, 854, 855, 856, 944, 948, 954, 958, 1195, 1206], "all_dtyp": 131, "all_numeric_dtyp": 131, "all_int_dtyp": 131, "all_float_dtyp": 131, "fall": [131, 135, 1176, 1207, 1208, 1211, 1215], "thirdli": 131, "native_float32": [131, 273, 361], "importantli": [131, 138, 141, 152], "arguabl": [131, 132], "compound": 131, "overflow": [131, 396, 412, 415, 1131, 1156, 1159], "arr": [131, 132], "settabl": [131, 132], "mx": [131, 132, 133, 1176], "nd": [131, 132, 133, 136, 141, 1176], "deleg": 131, "shape_to_tupl": 131, "idx": [132, 138, 683, 689], "tpu": [132, 362, 384, 393], "aliv": [132, 362, 376, 380, 382, 683, 733, 753, 755], "dual": 132, "thrown": [132, 153, 683, 745], "rare": [132, 153], "program": 133, "strictli": 133, "ration": 133, "speak": 133, "subtli": 133, "ensure_in_backend": [133, 683, 745], "x_nativ": 133, "val_n": 133, "assign": [133, 134, 138], "elif": 133, "unspecifi": [133, 396, 627, 630, 632, 635, 856, 877, 880, 985, 1031, 1034], "predominantli": [133, 152], "altern": [133, 139], "_wrap_fn": 133, "maxim": [133, 136], "inner": [133, 138, 856, 877, 880, 889, 892, 1047, 1048, 1049, 1050], "third": [133, 153, 856, 934, 938, 1099, 1100, 1104], "leverag": 133, "input_arrai": 133, "flake8": 134, "undefin": 134, "yield": [134, 1094, 1098], "handler": [134, 135, 137, 141, 1176], "carri": 134, "star": 134, "byte": 134, "notimpl": 134, "notimplementederror": 134, "unsuccess": 134, "exce": [134, 396, 603, 605], "black": 134, "disobei": 134, "successfulli": 134, "comparison": 134, "sound": 135, "higher": [135, 136, 141, 153, 791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823], "fledg": [136, 137], "syntact": [136, 141], "clip_by_valu": [136, 141], "clamp": [136, 141], "fit": [136, 985, 1011, 1014], "construct": [136, 137, 140, 141, 985, 1039, 1042, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218], "power_seq": 136, "resid": [136, 140], "ml_framework": [136, 141, 203, 204, 205], "current_framework": [136, 141], "furthermor": 136, "framework_handl": 136, "face": 136, "cprint": [136, 1220], "framework_stack": 136, "_determine_framework_from_arg": 136, "get_framework": 136, "neither": [136, 396, 412, 415, 607, 610, 791, 825, 834, 884, 888, 939, 940], "illustr": [136, 152], "un": [136, 273, 325], "nn": [136, 141, 203, 237, 240, 1176], "init_h": [136, 835, 853], "init_c": [136, 835, 853], "kernel": [136, 153, 835, 853], "recurrent_kernel": [136, 835, 853], "bia": [136, 140, 835, 852, 853, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1205], "recurrent_bia": [136, 835, 853], "x_shape": 136, "batch_shap": [136, 138, 141, 203, 217, 218, 683, 754, 835, 853, 854, 855, 856, 964, 968, 1075, 1076, 1195, 1204], "timestep": [136, 835, 853, 1195, 1204], "input_channel": [136, 140, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1204, 1205], "x_flat": 136, "wi": 136, "wi_x": 136, "wii_x": 136, "wif_x": 136, "wig_x": 136, "wio_x": 136, "recurr": [136, 835, 853], "wh": 136, "lstm": [136, 835, 853, 1195], "ht": 136, "ct": 136, "hts_list": 136, "unrol": [136, 139, 835, 853], "wii_xt": 136, "wif_xt": 136, "wig_xt": 136, "wio_xt": 136, "zip": 136, "htm1": 136, "ctm1": 136, "wh_htm1": 136, "whi_htm1": 136, "whf_htm1": 136, "whg_htm1": 136, "who_htm1": 136, "ft": 136, "gt": 136, "ot": 136, "offici": 136, "reliabl": 136, "sacrific": 136, "hear": 136, "virtu": 136, "pure_ivi": 136, "reduce_mean": [136, 139, 140, 141, 1176], "reduce_sum": [136, 1176], "reduce_var": 136, "compile_graph": [136, 141], "pure_torch": 136, "backbon": [136, 139], "_layer": 136, "super": [136, 139, 140, 141], "random_unifrom": 136, "unclean": 136, "wx": 136, "temp": 136, "torchscript": 136, "example_input": [136, 200, 201], "static_argnum": [136, 200, 201], "static_argnam": [136, 200, 201], "jit": [136, 153], "primit": [137, 153], "hierarch": [137, 139, 140], "arraywithlinalg": 138, "arraywithlog": 138, "arraywithmath": 138, "arraywithmeta": 138, "arraywithreduct": 138, "_shape": 138, "_size": 138, "functool": 138, "mul": 138, "len": [138, 141, 203, 237, 240], "_devic": 138, "_dev_str": 138, "_pre_repr": 138, "_post_repr": 138, "answer": [138, 153], "typeerror": 138, "immut": 138, "claim": 138, "truli": 138, "_native_wrapp": 138, "attributeerror": 138, "genuin": 138, "some_method": 138, "similarli": [138, 203, 237, 240], "rewritten": 138, "__pow__": 138, "strang": 138, "enforc": 138, "appear": [138, 985, 999, 1002], "_wrap_method": 138, "func_wrapp": [138, 154, 155, 156, 157, 158, 159, 160, 161, 162], "__name__": 138, "non_wrapped_method": 138, "_method_wrap": 138, "native_arg": 138, "native_kwarg": 138, "inner_fn": 138, "whist": 138, "unwrap": 138, "transit": 138, "needlessli": 138, "randn": 138, "_unwrap_method": 138, "method_wrap": 138, "compartment": 138, "public": [138, 683, 701], "newshap": 138, "new_shap": 138, "tidi": 138, "shorter": 138, "crystal": 138, "ton": 139, "ado": [139, 140], "incredibli": [139, 153], "soup": 139, "walk": [139, 140], "dct": 139, "cnt": 139, "combo": [139, 1176, 1182], "hold": [139, 683, 757, 758], "1000": [139, 396, 657, 660], "uda": 139, "3333": 139, "6667": 139, "178": 139, "new_weight": 139, "0600": 139, "3100": 139, "2400": 139, "6900": 139, "delimit": 139, "autocomplet": 139, "midwai": 139, "agent": 139, "total_spe": 139, "total_height": 139, "total_width": 139, "ag": 139, "tot": 139, "total_": 139, "total_h": 139, "dir": 139, "cnt0": 139, "cnt1": 139, "diff_0": 139, "diff_1": 139, "config0": 139, "config1": 139, "Not": [139, 140, 153, 202], "decod": 139, "l0": 139, "l1": [139, 856, 959, 963], "clearer": 139, "truncat": 139, "decoder__l0": 139, "decoder__l1": 139, "encoder__l0": 139, "encoder__l1": 139, "height": 139, "l0__b": 139, "l0__w": 139, "l1__b": 139, "l1__w": 139, "printabl": 139, "obviou": 139, "foresight": 139, "untidili": 139, "update_ag": 139, "normalize_img": 139, "img": 139, "img_max": 139, "reduce_max": [139, 1176], "img_min": 139, "reduce_min": [139, 1176], "img_rang": 139, "agent_posit": 139, "agent_veloc": 139, "agent_cam_front_rgb": 139, "agent_cam_front_depth": 139, "agent_cam_rear_rgb": 139, "agent_cam_rear_depth": 139, "agent_cam_lidar": 139, "cleaner": 139, "camera": 139, "front_rgb": 139, "front_depth": 139, "rear_rgb": 139, "rear_depth": 139, "lidar": 139, "rgb": 139, "rear": 139, "veloc": 139, "cam": 139, "cam_max": 139, "cam_min": 139, "cam_rang": 139, "Of": 139, "ideal": 139, "perman": 139, "afterward": 139, "thread": 139, "incorpor": 139, "pretti": 139, "dataload": [139, 151, 1176], "_cnt": 139, "img_": 139, "_dataset_s": 139, "_batch_siz": 139, "_count": [139, 140], "__next__": 139, "filenam": 139, "img_fnam": 139, "fname": 139, "loaded_img": 139, "cv2": 139, "imread": 139, "loader": [139, 153], "batch_slic": 139, "mymodel": [139, 1176], "linear0": [139, 140, 1176], "linear1": [139, 140, 1176], "x_in": [139, 140, 141, 1176], "loss_fn": [139, 140, 141, 1176], "0145": 139, "grad_fn": 139, "addbackward0": 139, "_create_vari": 140, "output_channel": [140, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1204, 1205], "with_bia": [140, 1195, 1205], "_input_channel": 140, "_output_channel": 140, "_w_shape": 140, "_b_shape": 140, "_with_bia": 140, "8979": 140, "3198": 140, "0196": 140, "3126": 140, "3717": 140, "9687": 140, "6958": 140, "5122": 140, "3902": 140, "8800": 140, "5613": 140, "1982": 140, "nightmar": 140, "overcom": 140, "fc": 140, "9563": 140, "v0": 140, "v1": 140, "6440": 140, "key0": 140, "1823": 140, "8075": 140, "linear3": 140, "v2": 140, "2346": 140, "counter": 140, "hidden": [140, 835, 853, 1195, 1204], "fed": [140, 362, 386], "1300": 140, "decoupl": 140, "scheme": 140, "weight_initi": [140, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205], "glorotuniform": [140, 1189, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205], "bias_initi": [140, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1205], "_w_init": 140, "_b_init": 140, "create_vari": [140, 1189], "var_shap": [140, 1189], "fan_out": [140, 1189], "fan_in": [140, 1189], "fan_mod": [140, 1189], "fan_sum": 140, "slight": 140, "misnom": 140, "saw": 140, "vanilla": [140, 1047, 1049], "descent": [140, 791, 804, 806, 1211, 1216], "lar": [140, 791, 813, 815, 817, 819, 1211], "lamb": [140, 791, 813, 815, 1211], "compile_on_next_step": [140, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216], "_beta1": 140, "_beta2": 140, "_epsilon": 140, "_mw": 140, "_vw": 140, "_first_pass": 140, "_should_compil": 140, "_step": [140, 1211, 1215], "new_v": 140, "_lr": 140, "_inplac": 140, "_stop_gradi": 140, "set_stat": [140, 1211, 1212, 1213, 1214, 1215, 1216], "pre": [141, 153], "captur": 141, "sparse_funct": 141, "num_class": 141, "num_dim": 141, "new_axi": 141, "_linear": 141, "to_backend": 141, "jax_graph": 141, "to_ivy_modul": [141, 1187], "thinli": 141, "whilst": 141, "to_haiku_modul": 141, "hk": 141, "loss_fn_t": 141, "transform": [141, 152, 835, 851, 852], "without_apply_rng": 141, "rng": 141, "prngkei": 141, "init": 141, "update_rul": 141, "tree_multimap": 141, "vision": [151, 1176], "robot": [151, 1176], "focus": 152, "perfect": 152, "3d": [152, 1195, 1200, 1201], "differenti": 152, "demo": [152, 1176], "orient": 152, "pose": 152, "euler": [152, 202], "quaternion": 152, "rotat": 152, "ivy_mech": 152, "target_facing_rotation_matrix": 152, "polar_to_cartesian_coord": 152, "ordin": [152, 856, 929, 932], "warp": 152, "optic": 152, "voxel": 152, "ivy_vis": 152, "coords_to_voxel_grid": 152, "render_pixel_coord": 152, "neural": [152, 835, 1176, 1184, 1195], "radianc": 152, "nerf": 152, "trajectori": 152, "motion": 152, "plan": [152, 1176], "mobil": 152, "ivy_robot": 152, "sample_spline_path": 152, "rigidmobil": 152, "sample_bodi": 152, "drone": 152, "sample_link": 152, "openai": 152, "swimmer": 152, "cumul": [152, 683, 703, 704], "reward": 152, "supervis": 152, "reinforc": 152, "door": [152, 153], "cartpol": 152, "mountain_car": 152, "pendulum": 152, "reacher": 152, "condit": [152, 200, 201, 1051, 1061, 1062, 1094, 1098], "learnt": 152, "ture": 152, "ntm": 152, "egospher": 152, "spatial": 152, "esm": 152, "ivy_memori": 152, "egocentr": 152, "room": 152, "inspir": 152, "doubt": 153, "grate": 153, "probe": 153, "undergo": 153, "remark": 153, "surpris": 153, "lock": 153, "contunu": 153, "minor": 153, "xla": 153, "gold": 153, "dex": 153, "ye": 153, "scan": 153, "tricki": 153, "predictor": 153, "tight": 153, "driver": 153, "schedul": 153, "dispatch": 153, "Will": 153, "ast": 153, "dynamic": 153, "cond": 153, "jacobian": 153, "checkpoint": 153, "autodiff": 153, "shine": 153, "merci": 153, "superset": 153, "cluster": 153, "compet": 153, "paradigm": 153, "parallelis": 153, "spmd": 153, "mixtur": [153, 791, 792, 795], "expert": 153, "sophist": 153, "depart": 153, "routin": 153, "hundr": 153, "thousand": 153, "deepli": [153, 1051, 1053], "broadli": 153, "supplementari": 153, "reusabl": 153, "fanci": 153, "fusion": 153, "lose": 153, "vmap": 153, "pmap": 153, "overhead": 153, "ineffici": 153, "eventu": 153, "supplement": 153, "backdoor": 153, "callback": 153, "record": 153, "metric": 153, "somewhat": 153, "outsourc": 153, "gaussian": [164, 165, 168], "214": [164, 180, 183], "0768": [164, 185, 188], "231": [164, 185, 188], "693": [164, 185, 188, 396, 422, 425, 969, 980, 983], "363": [164, 185, 188], "462": [164, 195, 199, 396, 677], "604": [164, 195, 199, 396, 677], "984": [164, 195, 199, 396, 677], "997": [164, 195, 199, 396, 677], "array_method": [165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 195, 197, 207, 208, 212, 213, 220, 221, 226, 227, 237, 238, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 276, 277, 281, 282, 286, 287, 291, 292, 303, 304, 309, 310, 320, 321, 326, 327, 331, 332, 336, 337, 341, 342, 347, 348, 368, 369, 387, 389, 397, 398, 402, 403, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 607, 608, 612, 613, 617, 618, 622, 623, 627, 628, 632, 633, 637, 638, 642, 643, 647, 648, 652, 653, 657, 658, 662, 663, 667, 669, 672, 674, 678, 680, 684, 685, 696, 697, 708, 709, 713, 714, 723, 724, 728, 729, 768, 769, 779, 781, 792, 793, 808, 809, 828, 830, 836, 837, 846, 847, 857, 858, 862, 863, 867, 868, 872, 873, 877, 878, 881, 882, 884, 885, 889, 890, 893, 894, 902, 903, 907, 908, 912, 913, 917, 918, 920, 921, 929, 930, 934, 936, 939, 941, 944, 946, 949, 951, 954, 956, 959, 961, 964, 966, 970, 971, 975, 976, 980, 981, 986, 987, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1008, 1011, 1012, 1016, 1017, 1021, 1022, 1027, 1028, 1031, 1032, 1035, 1036, 1039, 1040, 1043, 1044, 1070, 1071, 1077, 1078, 1082, 1083, 1087, 1088, 1100, 1102, 1105, 1107, 1110, 1112, 1115, 1117, 1121, 1122, 1126, 1127, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1160, 1162, 1166, 1167, 1171, 1172], "container_method": [165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 276, 278, 280, 281, 283, 285, 286, 288, 290, 291, 293, 295, 298, 300, 303, 305, 307, 309, 311, 313, 314, 316, 317, 319, 320, 322, 324, 326, 328, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 347, 349, 351, 368, 370, 372, 387, 388, 390, 397, 399, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 698, 700, 708, 710, 712, 713, 715, 717, 723, 725, 727, 728, 730, 732, 768, 770, 772, 779, 780, 782, 792, 794, 796, 797, 798, 800, 801, 803, 804, 805, 807, 808, 810, 812, 813, 814, 816, 817, 818, 820, 821, 822, 824, 828, 829, 831, 836, 838, 840, 846, 848, 850, 857, 859, 861, 862, 864, 866, 867, 869, 871, 872, 874, 876, 877, 879, 884, 886, 888, 889, 891, 893, 895, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 920, 922, 924, 925, 926, 928, 929, 931, 933, 934, 935, 937, 939, 940, 942, 944, 945, 947, 949, 950, 952, 954, 955, 957, 959, 960, 962, 964, 965, 967, 970, 972, 974, 975, 977, 979, 980, 982, 984, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1070, 1072, 1074, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1100, 1101, 1103, 1105, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1118, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1160, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175], "faster": [200, 201], "invoc": [200, 201], "718281828459045": 202, "newaxi": 202, "alia": 202, "pi": 202, "141592653589793": 202, "chosen": [203, 204, 205, 396, 432, 435, 1094, 1098], "distanc": [203, 204, 205], "adjac": [203, 204, 205], "creation_funct": [203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "elsewher": [203, 217, 218, 1094, 1098], "row": [203, 217, 218, 856, 929, 932, 934, 938, 1075, 1076, 1094, 1097], "column": [203, 217, 218, 856, 877, 880, 920, 923, 929, 932, 934, 938], "__dlpack__": [203, 220, 223, 362, 387, 391], "interchang": [203, 220, 223, 985, 1035, 1038], "cartesian": [203, 237, 240], "ij": [203, 237, 240, 1131, 1132, 1135], "ni": [203, 237, 240], "xi": [203, 237, 240], "n1": [203, 237, 240], "n2": [203, 237, 240], "n3": [203, 237, 240], "xv": [203, 237, 240], "yv": [203, 237, 240], "y1": [203, 268, 272], "y2": [203, 268, 272], "y3": [203, 268, 272], "intdtyp": [203, 268, 272, 273, 301, 341, 344], "defaultdtyp": 273, "defaultfloatdtyp": 273, "defaultintdtyp": 273, "defaultuintdtyp": 273, "uint_dtyp": [273, 302, 355], "incompat": [273, 286, 289], "data_type_funct": [273, 291, 294, 309, 312, 320, 323, 347, 350], "floatdtyp": [273, 298, 299], "int_dtyp": [273, 301, 354], "uintdtyp": [273, 302, 341, 344, 355, 360], "defualt": [273, 302], "4294967346": [273, 302], "native_int8": [273, 308, 361], "native_bool": [273, 308, 352, 361], "followng": [273, 309, 312], "occupi": [273, 309, 312, 320, 323, 683, 757, 758], "smallest_norm": [273, 309, 312], "4028235e": [273, 309, 312], "7976931348623157e": [273, 309, 312], "55040e": [273, 309, 312], "encapsul": [273, 320, 323], "2147483648": [273, 320, 323], "2147483647": [273, 320, 323], "18446744073709551615": [273, 320, 323], "9223372036854775808": [273, 320, 323], "9223372036854775807": [273, 320, 323], "127": [273, 320, 323], "314": [273, 320, 323], "32768": [273, 320, 323], "32767": [273, 320, 323], "1800": [273, 320, 323], "65535": [273, 320, 323], "4294967295": [273, 320, 323], "109": [273, 320, 323], "8400": [273, 320, 323], "119": [273, 320, 323], "122": [273, 320, 323, 396, 482, 485], "native_int16": [273, 325, 361], "type1": [273, 346], "type2": [273, 346], "default_dtype_stack": [273, 352], "native_int32": [273, 352, 361], "native_uint64": [273, 352, 361], "native_float64": [273, 352, 361], "ret1": [273, 356], "ret2": [273, 356], "reset": [273, 360, 362, 394, 683, 786, 787, 788], "native_float16": [273, 361], "native_int64": [273, 361], "native_uint8": [273, 361], "defaultdevic": 362, "__enter__": 362, "_dev": 362, "__exit__": 362, "exc_typ": 362, "exc_val": 362, "exc_tb": 362, "exit": 362, "profil": 362, "save_dir": [362, 363], "139740789224448": [362, 376], "physic": [362, 378], "x4": [362, 380], "process_specif": [362, 381, 395], "percentag": [362, 381], "ram": [362, 381, 392, 395], "attr_onli": [362, 382], "chunk": [362, 384, 385, 386], "max_chunk_s": [362, 386], "chunk_siz": [362, 386], "input_ax": [362, 386], "output_ax": [362, 386], "feed": [362, 386], "fist": [362, 386], "caveat": [362, 387, 391], "portabl": [362, 387, 391, 1176], "gb": [362, 392, 395], "66700032": [362, 392], "589934592": [362, 392], "magnitud": [396, 397, 400, 412, 415, 607, 610, 856, 934, 938, 939, 943], "princip": [396, 402, 405, 417, 420, 427, 430], "x1_i": [396, 412, 415, 432, 435, 442, 445, 452, 455, 457, 460, 462, 465, 467, 470, 487, 490, 492, 495, 517, 520, 522, 525, 527, 530, 547, 550, 552, 555, 577, 580, 582, 585, 592, 595, 597, 600, 607, 610, 617, 620, 627, 630, 632, 635, 667, 671], "nor": [396, 412, 415, 607, 610, 791, 825, 834], "nearest": [396, 412, 415, 607, 610, 637, 640], "2019": [396, 412, 415, 507, 510, 607, 610], "commut": [396, 412, 415], "524": [396, 417, 420], "644": [396, 417, 420], "201": [396, 417, 420], "305": [396, 417, 420], "412": [396, 417, 420], "809": [396, 422, 425], "569": [396, 422, 425], "733": [396, 422, 425], "notat": [396, 432, 435, 1131, 1132, 1135], "denot": [396, 432, 435, 791, 825, 834], "pair": [396, 432, 435, 835, 855, 856, 862, 865], "quadrant": [396, 432, 435], "3\u03c0": [396, 432, 435], "588": [396, 432, 435], "719": [396, 432, 435], "197": [396, 432, 435], "bitwis": [396, 442, 445, 457, 460, 467, 470, 597, 600], "invert": [396, 447, 450], "arithmet": [396, 462, 465, 1131, 1140, 1143], "lh": [396, 462, 465], "rh": [396, 462, 465], "xor": [396, 467, 470, 597, 600], "78": [396, 467, 470, 642, 645, 856, 912, 915, 1075, 1082, 1085, 1131, 1132, 1135], "66": [396, 467, 470, 856, 912, 915, 1131, 1132, 1135], "77": [396, 467, 470, 856, 912, 915, 1131, 1132, 1135], "59": [396, 467, 470], "654": [396, 477, 480], "368": [396, 482, 485], "670": [396, 482, 485], "202": [396, 482, 485], "548": [396, 482, 485, 652, 655], "1490": [396, 482, 485], "698": [396, 487, 490], "accur": [396, 507, 510], "fdlibm": [396, 507, 510], "compliant": [396, 507, 510, 587, 590, 592, 595, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "85e": [396, 507, 510], "632": [396, 507, 510], "20e": [396, 507, 510], "72e": [396, 507, 510], "00": [396, 507, 510, 856, 939, 943], "22000": [396, 507, 510], "442000": [396, 507, 510], "greatest": [396, 512, 515, 517, 520], "y_i": [396, 612, 615], "versu": [396, 627, 630], "odd": [396, 627, 630], "modulu": [396, 632, 635], "primarili": [396, 632, 635], "5654": [396, 637, 640], "034": [396, 637, 640], "433": [396, 637, 640], "343": [396, 637, 640], "124": [396, 642, 645], "932": [396, 647, 650], "746": [396, 647, 650], "443": [396, 647, 650], "657": [396, 647, 650, 683, 696, 699], "253": [396, 652, 655], "indistinguish": [396, 657, 660], "infinit": [396, 657, 660], "32455532": [396, 657, 660], "89897949": [396, 657, 660], "169": [396, 657, 660], "546": [396, 672, 676], "842": [396, 672, 676], "916": [396, 672, 676, 969, 970, 973], "996": [396, 672, 676], "328": [396, 672, 676], "decim": [396, 678, 682], "inspect": [683, 689, 1180, 1181], "417": [683, 696, 699], "583": [683, 696, 699], "0667": [683, 696, 699], "133": [683, 696, 699], "267": [683, 696, 699], "131": [683, 696, 699], "263": [683, 696, 699], "394": [683, 696, 699], "526": [683, 696, 699], "788": [683, 696, 699], "default_v": [683, 706], "catch_except": [683, 706], "rev": [683, 706], "with_cal": [683, 706], "arrang": [683, 707], "mod": [683, 719], "max_freq": [683, 720], "num_band": [683, 720], "fourier": [683, 720], "band": [683, 720], "linearli": [683, 720, 856, 929, 932], "oppos": [683, 720], "geometr": [683, 720], "array_mod": [683, 734], "seen_set": [683, 739], "local_set": [683, 739], "decrement": [683, 743], "allow_dupl": [683, 751], "forkserv": [683, 752], "spawn": [683, 752], "hot": [683, 754], "scatter": [683, 754, 757, 758], "overrid": [683, 754], "tmp_dr": [683, 765], "temporari": [683, 765], "stabil": [683, 768, 771, 773, 1120, 1121, 1124, 1126, 1129], "49999999999975": [683, 768, 771], "5015015015010504": [683, 768, 771], "1j": [683, 768, 771], "000444502911705e": [683, 768, 771], "9999999999995j": [683, 768, 771], "min_bas": [683, 773], "100000023841858": [683, 777], "200000047683716": [683, 777], "299999952316284": [683, 777], "400000095367432": [683, 777], "599999904632568": [683, 777], "gradienttrack": 791, "en": [791, 792, 795, 797, 799], "wikipedia": [791, 792, 795, 797, 799], "wiki": [791, 792, 795, 797, 799], "stochastic_gradient_desc": [791, 792, 795, 797, 799], "004": [791, 792, 795], "009": [791, 792, 795], "0125": [791, 792, 795], "601": [791, 792, 795], "025": [791, 792, 795], "992": [791, 792, 795], "209": [791, 792, 795, 1099, 1100, 1104], "271": [791, 792, 795], "0717": [791, 792, 795], "142": [791, 792, 795], "182": [791, 792, 795], "624": [791, 792, 795], "744": [791, 792, 795], "626": [791, 792, 795], "024": [791, 792, 795], "096": [791, 792, 795], "216": [791, 792, 795], "384": [791, 792, 795], "rate": [791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823, 1047, 1048, 1049, 1050, 1195, 1206, 1211, 1212, 1213, 1214, 1215, 1216], "ws_new": [791, 797, 799, 804, 806, 813, 815, 817, 819, 821, 823], "retain": [791, 801, 802], "trust": [791, 813, 815, 1211, 1213], "ratio": [791, 813, 815, 1211, 1213], "decai": [791, 813, 815, 817, 819, 1211, 1213, 1214], "layerwis": [791, 817, 819], "with_grads_stack": [791, 825, 834], "output_shap": [835, 841, 843, 845, 1195, 1197, 1199, 1201], "hwio": [835, 842], "unequ": [835, 842], "unsqueez": [835, 842, 846, 849], "ndhwc": [835, 844, 845, 1195, 1200, 1201], "volum": [835, 844], "fd": [835, 844, 845], "ncdhw": [835, 844, 845, 1195, 1200, 1201], "dhwio": [835, 844], "258": [835, 845], "depthwis": [835, 846, 849, 1195, 1202], "hwi": [835, 846, 849], "prob": [835, 851, 1075, 1076, 1195, 1203], "randomli": [835, 851, 1195, 1203], "bernoulli": [835, 851], "out_featur": [835, 851, 852], "incom": [835, 852], "outer_batch_shap": [835, 852], "inner_batch_shap": [835, 852], "in_featur": [835, 852], "cell": [835, 853, 1195, 1204], "num_queri": [835, 854, 855], "x_feat_dim": [835, 854], "num_kei": [835, 854, 855], "cont_feat_dim": [835, 854], "numhead": [835, 854], "feat_dim": [835, 854, 855], "out_feat_dim": [835, 854], "score": [835, 855], "decomposit": [856, 857, 860, 920, 923, 934, 938], "vif": [856, 862, 865], "293": [856, 867, 870], "46997": [856, 867, 870], "eigendecomposit": [856, 877, 880], "qlq\u1d40": [856, 877, 880], "orthogon": [856, 877, 880], "eig": [856, 877, 880], "eigenvalu": [856, 877, 880, 881, 883], "eigenvector": [856, 877, 880], "prepend": [856, 889, 892], "defici": [856, 902, 905], "array_lik": [856, 912, 915], "105": [856, 912, 915, 969, 970, 973], "112": [856, 912, 915, 1131, 1132, 1135], "104": [856, 912, 915, 1131, 1132, 1135], "120": [856, 912, 915], "moor": [856, 917, 919], "penros": [856, 917, 919], "pseudo": [856, 917, 919], "orthonorm": [856, 920, 923, 934, 938], "2d": [856, 925, 927, 1195, 1198, 1199, 1202], "logdet": [856, 925, 927], "coeffici": [856, 929, 932], "usvh": [856, 934, 938], "vh": [856, 934, 938], "hermitian": [856, 934, 938], "et": [856, 934, 938], "cetera": [856, 934, 938], "adjoint": [856, 934, 938], "reconstruct": [856, 934, 938, 1099, 1100, 1104, 1110, 1114], "reconstructed_x": [856, 934, 938], "ss": [856, 939, 943], "615": [856, 939, 943, 1099, 1100, 1104], "00e": [856, 939, 943], "38e": [856, 939, 943], "866": [856, 939, 943], "864": [856, 939, 943], "contract": [856, 944, 948, 1131, 1132, 1135], "doubl": [856, 944, 948], "manhattan": [856, 959, 963], "l2": [856, 959, 963], "euclidean": [856, 959, 963], "mathbf": [856, 964, 968], "mathbb": [856, 964, 968], "skew": [856, 964, 968], "staticmethod": [884, 888, 939, 940], "idiom": [884, 888, 939, 940], "arg1": [884, 888, 939, 940], "arg2": [884, 888, 939, 940], "java": [884, 888, 939, 940], "concept": [884, 888, 939, 940], "classmethod": [884, 888, 939, 940], "discret": [969, 975, 978], "35667497": [969, 975, 978], "793291": [969, 980, 983], "512926": [969, 980, 983], "before_1": [985, 995, 998, 1043, 1046], "after_1": [985, 995, 998, 1043, 1046], "before_n": [985, 995, 998, 1043, 1046], "after_n": [985, 995, 998, 1043, 1046], "insert": [985, 999, 1002, 1051, 1056, 1094, 1095], "manipulation_funct": [985, 999, 1002], "reorder": [985, 1003, 1006], "permut": [985, 1007, 1010, 1035, 1038], "repetit": [985, 1011, 1014, 1039, 1042], "famili": [985, 1031, 1034], "intxx": [985, 1031, 1034], "floatxx": [985, 1031, 1034], "fomaml_step": 1047, "inner_cost_fn": [1047, 1048, 1049], "outer_cost_fn": [1047, 1048, 1049], "inner_grad_step": [1047, 1048, 1049, 1050], "inner_learning_r": [1047, 1048, 1049, 1050], "inner_optimization_step": [1047, 1048, 1049, 1050], "inner_batch_fn": [1047, 1048, 1049], "outer_batch_fn": [1047, 1048, 1049], "average_across_step": [1047, 1048, 1049], "inner_v": [1047, 1048, 1049], "keep_inner_v": [1047, 1048, 1049], "outer_v": [1047, 1048, 1049], "keep_outer_v": [1047, 1048, 1049], "return_inner_v": [1047, 1048, 1049, 1050], "num_task": [1047, 1048, 1049, 1050], "maml": [1047, 1048, 1049], "recev": [1047, 1048, 1049], "0x7f38f3f49b80": [1047, 1048, 1049, 1050], "maml_step": 1047, "rece": [1047, 1049], "reptile_step": 1047, "cost_fn": [1047, 1050], "reptil": [1047, 1050], "receivng": [1047, 1050], "all_nested_indic": 1051, "include_nest": [1051, 1052], "_index": [1051, 1052, 1062], "_base": [1051, 1052, 1061, 1062], "copy_nest": 1051, "to_mut": [1051, 1053, 1063], "mutabl": [1051, 1053, 1063], "insert_into_nest_at_index": 1051, "insert_into_nest_at_indic": 1051, "map_nest_at_index": 1051, "map_nest_at_indic": 1051, "multi_index_nest": 1051, "nested_ani": 1051, "check_nest": [1051, 1061, 1062], "conditon": [1051, 1061, 1062], "nested_indices_wher": 1051, "stop_after_n_found": [1051, 1062], "_depth": [1051, 1063], "_tuple_check_fn": [1051, 1063], "_list_check_fn": [1051, 1063], "_dict_check_fn": [1051, 1063], "nested_multi_map": 1051, "nest0": [1051, 1064], "ivy_arrai": [1051, 1064], "funciton": [1051, 1064], "prune_nest_at_index": 1051, "prune_nest_at_indic": 1051, "set_nest_at_index": 1051, "set_nest_at_indic": 1051, "111": [1051, 1068], "xyz": [1051, 1068], "pqr": [1051, 1068], "mini": [1069, 1070, 1073, 1209, 1210], "772": [1069, 1070, 1073], "796": [1069, 1070, 1073], "population_s": [1075, 1076], "num_sampl": [1075, 1076], "home": [1075, 1076, 1082, 1085, 1211, 1212, 1213, 1214, 1216], "uniformli": [1075, 1077, 1080, 1087, 1090], "22346112": [1075, 1082, 1085], "0922": [1075, 1082, 1085], "515": [1075, 1082, 1085], "361": [1075, 1082, 1085], "596": [1075, 1082, 1085], "247": [1075, 1082, 1085], "0426": [1075, 1082, 1085], "627": [1075, 1082, 1085], "9213753": [1075, 1082, 1085], "12818667": [1075, 1082, 1085], "799": [1075, 1082, 1085], "469": [1075, 1082, 1085], "287": [1075, 1082, 1085], "0366": [1075, 1082, 1085], "26431865": [1075, 1087, 1090], "475": [1075, 1087, 1090], "878": [1075, 1087, 1090], "861": [1075, 1087, 1090], "929": [1075, 1087, 1090], "545": [1075, 1087, 1090], "789": [1075, 1087, 1090], "519": [1075, 1087, 1090], "0435": [1075, 1087, 1090], "381": [1075, 1087, 1090, 1099, 1100, 1104], "4608004": [1075, 1087, 1090], "8458502": [1075, 1087, 1090], "occurr": [1094, 1095, 1096, 1099, 1100, 1104], "x_j": [1099, 1100, 1104, 1105, 1109, 1115, 1119], "impli": [1099, 1100, 1104, 1105, 1109, 1115, 1119], "inverse_indic": [1099, 1100, 1104, 1110, 1114], "aggreg": [1099, 1100, 1104], "fourth": [1099, 1100, 1104], "607": [1099, 1100, 1104], "735": [1099, 1100, 1104], "0396": [1099, 1100, 1104], "166": [1099, 1100, 1104], "58": [1099, 1100, 1104], "828": [1099, 1100, 1104], "144": [1099, 1100, 1104], "40501155": [1099, 1100, 1104], "77361575": [1099, 1100, 1104], "97776199": [1099, 1100, 1104], "36831157": [1099, 1100, 1104], "89148434": [1099, 1100, 1104], "9512272": [1099, 1100, 1104], "67542176": [1099, 1100, 1104], "41985657": [1099, 1100, 1104], "23478023": [1099, 1100, 1104], "1141": [1099, 1100, 1104], "8101": [1099, 1100, 1104], "9298": [1099, 1100, 1104], "8460": [1099, 1100, 1104], "2119": [1099, 1100, 1104], "3519": [1099, 1100, 1104], "6252": [1099, 1100, 1104], "4033": [1099, 1100, 1104], "7443": [1099, 1100, 1104], "2577": [1099, 1100, 1104], "3707": [1099, 1100, 1104], "0545": [1099, 1100, 1104], "3238": [1099, 1100, 1104], "5944": [1099, 1100, 1104], "0775": [1099, 1100, 1104], "4327": [1099, 1100, 1104], "176": [1099, 1100, 1104], "889": [1099, 1100, 1104], "175": [1099, 1100, 1104], "763": [1099, 1100, 1104], "071": [1099, 1100, 1104], "262": [1099, 1100, 1104], "456": [1099, 1100, 1104], "114": [1099, 1100, 1104], "349": [1099, 1100, 1104], "594": [1099, 1100, 1104], "335": [1099, 1100, 1104], "212": [1099, 1100, 1104], "457": [1099, 1100, 1104], "827": [1099, 1100, 1104], "set_funct": [1099, 1105, 1109], "ascend": [1120, 1121, 1124], "einstein": [1131, 1132, 1135], "summat": [1131, 1132, 1135], "seq": [1131, 1132, 1135], "jk": [1131, 1132, 1135], "ik": [1131, 1132, 1135], "126": [1131, 1132, 1135], "510": [1131, 1132, 1135], "108": [1131, 1132, 1135], "117": [1131, 1132, 1135], "sentinel": [1131, 1136, 1139, 1144, 1147], "8164966": [1131, 1152, 1155], "simplicit": [1165, 1166, 1169], "grow": 1176, "ai": 1176, "got": 1176, "colab": 1176, "sharp": 1176, "weekli": 1176, "immedi": 1176, "favorit": 1176, "jax_concat": 1176, "tf_concat": 1176, "np_concat": 1176, "mx_concat": 1176, "torch_concat": 1176, "get_devic": 1176, "reduce_prod": 1176, "gradient_imag": 1176, "linalg": 1176, "bilinear_resampl": 1176, "stack_imag": 1176, "neural_net": 1176, "ecosystem": [1176, 1182], "popular": [1176, 1182], "acceler": 1176, "articl": 1176, "lenton2021ivi": 1176, "inter": 1176, "lenton": 1176, "daniel": 1176, "pardo": 1176, "fabio": 1176, "falck": 1176, "fabian": 1176, "jame": 1176, "stephen": 1176, "clark": 1176, "ronald": 1176, "journal": 1176, "arxiv": 1176, "preprint": 1176, "2102": 1176, "02886": 1176, "2021": 1176, "add_array_spec": 1179, "fn_array_spec": 1179, "geglu": 1184, "native_modul": [1187, 1188], "native_module_class": [1187, 1188], "firstlayersiren": 1189, "kaimingnorm": 1189, "negative_slop": 1189, "Ones": 1189, "siren": 1189, "w0": [1189, 1193], "filter_s": [1195, 1196, 1197], "1d": [1195, 1196, 1197], "conv1dtranspos": 1195, "filter_shap": [1195, 1198, 1199, 1200, 1201, 1202], "conv2dtranspos": 1195, "conv3dtranspos": 1195, "depthwiseconv2d": 1195, "num_channel": [1195, 1202], "bernoul": [1195, 1203], "num_lay": [1195, 1204], "return_sequ": [1195, 1204], "return_st": [1195, 1204], "get_initial_st": [1195, 1204], "dens": [1195, 1205], "multiheadattent": 1195, "query_dim": [1195, 1206], "head_dim": [1195, 1206], "dropout_r": [1195, 1206], "context_dim": [1195, 1206], "with_to_q_fn": [1195, 1206], "with_to_kv_fn": [1195, 1206], "with_to_out_fn": [1195, 1206], "build_mod": [1195, 1206, 1207, 1208], "on_init": [1195, 1206, 1207, 1208], "__call__": [1195, 1206, 1207, 1208], "store_var": [1207, 1208], "arg_stateful_idx": [1207, 1208], "kwarg_stateful_idx": [1207, 1208], "fallback_to_non_compil": [1207, 1208, 1211, 1215], "with_partial_v": [1207, 1208], "initialz": [1207, 1208], "from_cal": [1207, 1208], "check_submod_ret": [1207, 1208], "get_mod_kei": [1207, 1208], "top_mod": [1207, 1208], "mod_depth": [1207, 1208], "mod_height": [1207, 1208], "mod_with_top_mod_key_chain": [1207, 1208], "save_weight": [1207, 1208], "weights_path": [1207, 1208], "show_mod_in_top_mod": [1207, 1208], "upper_depth": [1207, 1208], "lower_depth": [1207, 1208], "show_structur": [1207, 1208], "show_v_in_top_v": [1207, 1208], "sub_mod": [1207, 1208], "show_v": [1207, 1208], "track_submod_call_ord": [1207, 1208], "track_submod_ret": [1207, 1208], "v_with_top_v_key_chain": [1207, 1208], "layernorm": 1209, "normalized_shap": [1209, 1210], "elementwise_affin": [1209, 1210], "trail": [1209, 1210], "affin": [1209, 1210], "0x7f38f3e31a60": [1211, 1214], "init_on_first_step": [1211, 1215], "ignore_miss": [1211, 1215], "overridden": [1211, 1215], "sgd": 1211, "stochast": [1211, 1216], "0x7f38f3e31790": [1211, 1216], "sub_modul": [1217, 1218]}, "objects": {"ivy.array": [[23, 0, 0, "-", "activations"], [25, 0, 0, "-", "array"], [28, 0, 0, "-", "conversions"], [33, 0, 0, "-", "creation"], [35, 0, 0, "-", "data_type"], [37, 0, 0, "-", "device"], [39, 0, 0, "-", "elementwise"], [41, 0, 0, "-", "general"], [43, 0, 0, "-", "gradients"], [45, 0, 0, "-", "image"], [47, 0, 0, "-", "layers"], [49, 0, 0, "-", "linear_algebra"], [51, 0, 0, "-", "losses"], [53, 0, 0, "-", "manipulation"], [55, 0, 0, "-", "norms"], [57, 0, 0, "-", "random"], [59, 0, 0, "-", "searching"], [61, 0, 0, "-", "set"], [63, 0, 0, "-", "sorting"], [65, 0, 0, "-", "statistical"], [67, 0, 0, "-", "utility"], [69, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[24, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[24, 2, 1, "", "gelu"], [24, 2, 1, "", "leaky_relu"], [24, 2, 1, "", "relu"], [24, 2, 1, "", "sigmoid"], [24, 2, 1, "", "softmax"], [24, 2, 1, "", "softplus"], [24, 2, 1, "", "tanh"]], "ivy.array.array": [[26, 1, 1, "", "Array"], [27, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[26, 3, 1, "", "T"], [26, 2, 1, "", "__add__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__le__"], [26, 2, 1, "", "__radd__"], [26, 2, 1, "", "adam_update"], [26, 2, 1, "", "arange"], [26, 2, 1, "", "arg_info"], [26, 2, 1, "", "arg_names"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 2, 1, "", "array"], [26, 2, 1, "", "array_equal"], [26, 2, 1, "", "arrays_equal"], [26, 2, 1, "", "as_ivy_dev"], [26, 2, 1, "", "as_ivy_dtype"], [26, 2, 1, "", "as_native_dev"], [26, 2, 1, "", "as_native_dtype"], [26, 2, 1, "", "assert_supports_inplace"], [26, 2, 1, "", "cache_fn"], [26, 2, 1, "", "clear_mem_on_dev"], [26, 2, 1, "", "clip_matrix_norm"], [26, 2, 1, "", "closest_valid_dtype"], [26, 2, 1, "", "container_types"], [26, 2, 1, "", "conv1d_transpose"], [26, 2, 1, "", "conv2d"], [26, 2, 1, "", "conv2d_transpose"], [26, 2, 1, "", "conv3d"], [26, 2, 1, "", "conv3d_transpose"], [26, 2, 1, "", "copy_array"], [26, 2, 1, "", "cumprod"], [26, 2, 1, "", "cumsum"], [26, 2, 1, "", "current_backend"], [26, 2, 1, "", "current_backend_str"], [26, 3, 1, "", "data"], [26, 2, 1, "", "default"], [26, 2, 1, "", "default_device"], [26, 2, 1, "", "default_dtype"], [26, 2, 1, "", "default_float_dtype"], [26, 2, 1, "", "default_int_dtype"], [26, 2, 1, "", "default_uint_dtype"], [26, 2, 1, "", "dev_util"], [26, 3, 1, "", "device"], [26, 2, 1, "", "dropout"], [26, 3, 1, "", "dtype"], [26, 2, 1, "", "dtype_bits"], [26, 2, 1, "", "einops_rearrange"], [26, 2, 1, "", "empty"], [26, 2, 1, "", "execute_with_gradients"], [26, 2, 1, "", "exists"], [26, 2, 1, "", "eye"], [26, 2, 1, "", "floormod"], [26, 2, 1, "", "fourier_encode"], [26, 2, 1, "", "full"], [26, 2, 1, "", "function_supported_devices"], [26, 2, 1, "", "function_supported_devices_and_dtypes"], [26, 2, 1, "", "function_supported_dtypes"], [26, 2, 1, "", "function_unsupported_devices"], [26, 2, 1, "", "function_unsupported_devices_and_dtypes"], [26, 2, 1, "", "function_unsupported_dtypes"], [26, 2, 1, "", "get_all_arrays_in_memory"], [26, 2, 1, "", "get_all_ivy_arrays_on_dev"], [26, 2, 1, "", "get_array_mode"], [26, 2, 1, "", "get_min_base"], [26, 2, 1, "", "get_min_denominator"], [26, 2, 1, "", "get_nestable_mode"], [26, 2, 1, "", "get_num_dims"], [26, 2, 1, "", "get_referrers_recursive"], [26, 2, 1, "", "gpu_is_available"], [26, 2, 1, "", "gradient_descent_update"], [26, 2, 1, "", "handle_nestable"], [26, 2, 1, "", "handle_out_argument"], [26, 2, 1, "", "has_nans"], [26, 2, 1, "", "indices_where"], [26, 2, 1, "", "infer_device"], [26, 2, 1, "", "infer_dtype"], [26, 2, 1, "", "inplace_arrays_supported"], [26, 2, 1, "", "inplace_decrement"], [26, 2, 1, "", "inplace_increment"], [26, 2, 1, "", "inplace_update"], [26, 2, 1, "", "inplace_variables_supported"], [26, 2, 1, "", "inputs_to_native_arrays"], [26, 2, 1, "", "invalid_dtype"], [26, 2, 1, "", "is_array"], [26, 2, 1, "", "is_ivy_array"], [26, 2, 1, "", "is_ivy_container"], [26, 2, 1, "", "is_native_array"], [26, 3, 1, "", "is_variable"], [26, 2, 1, "", "lamb_update"], [26, 2, 1, "", "lars_update"], [26, 2, 1, "", "linear"], [26, 2, 1, "", "linspace"], [26, 2, 1, "", "logspace"], [26, 2, 1, "", "lstm_update"], [26, 3, 1, "", "mT"], [26, 2, 1, "", "match_kwargs"], [26, 2, 1, "", "matrix_power"], [26, 2, 1, "", "maximum"], [26, 2, 1, "", "minimum"], [26, 2, 1, "", "multi_head_attention"], [26, 2, 1, "", "multinomial"], [26, 2, 1, "", "multiprocessing"], [26, 3, 1, "", "ndim"], [26, 2, 1, "", "nonzero"], [26, 2, 1, "", "num_arrays_in_memory"], [26, 2, 1, "", "num_cpu_cores"], [26, 2, 1, "", "num_gpus"], [26, 2, 1, "", "num_ivy_arrays_on_dev"], [26, 2, 1, "", "one_hot"], [26, 2, 1, "", "ones"], [26, 2, 1, "", "optimizer_update"], [26, 2, 1, "", "outputs_to_ivy_arrays"], [26, 2, 1, "", "percent_used_mem_on_dev"], [26, 2, 1, "", "print_all_arrays_in_memory"], [26, 2, 1, "", "print_all_ivy_arrays_on_dev"], [26, 2, 1, "", "promote_types"], [26, 2, 1, "", "queue_timeout"], [26, 2, 1, "", "scaled_dot_product_attention"], [26, 2, 1, "", "scatter_flat"], [26, 2, 1, "", "scatter_nd"], [26, 2, 1, "", "seed"], [26, 2, 1, "", "set_array_mode"], [26, 2, 1, "", "set_default_device"], [26, 2, 1, "", "set_default_dtype"], [26, 2, 1, "", "set_default_float_dtype"], [26, 2, 1, "", "set_default_int_dtype"], [26, 2, 1, "", "set_default_uint_dtype"], [26, 2, 1, "", "set_min_base"], [26, 2, 1, "", "set_min_denominator"], [26, 2, 1, "", "set_nestable_mode"], [26, 2, 1, "", "set_queue_timeout"], [26, 2, 1, "", "set_shape_array_mode"], [26, 2, 1, "", "set_split_factor"], [26, 2, 1, "", "set_tmp_dir"], [26, 2, 1, "", "set_with_grads"], [26, 3, 1, "", "shape"], [26, 2, 1, "", "shape_array_mode"], [26, 2, 1, "", "shuffle"], [26, 3, 1, "", "size"], [26, 2, 1, "", "slogdet"], [26, 2, 1, "", "split"], [26, 2, 1, "", "split_factor"], [26, 2, 1, "", "split_func_call"], [26, 2, 1, "", "stable_pow"], [26, 2, 1, "", "stop_gradient"], [26, 2, 1, "", "supports_inplace"], [26, 2, 1, "", "tmp_dir"], [26, 2, 1, "", "to_ivy_shape"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_native_arrays_and_back"], [26, 2, 1, "", "to_native_shape"], [26, 2, 1, "", "to_scalar"], [26, 2, 1, "", "total_mem_on_dev"], [26, 2, 1, "", "tpu_is_available"], [26, 2, 1, "", "try_else_none"], [26, 2, 1, "", "type_promote_arrays"], [26, 2, 1, "", "unset_array_mode"], [26, 2, 1, "", "unset_default_device"], [26, 2, 1, "", "unset_default_dtype"], [26, 2, 1, "", "unset_default_float_dtype"], [26, 2, 1, "", "unset_default_int_dtype"], [26, 2, 1, "", "unset_default_uint_dtype"], [26, 2, 1, "", "unset_nestable_mode"], [26, 2, 1, "", "unset_shape_array_mode"], [26, 2, 1, "", "unset_with_grads"], [26, 2, 1, "", "unstack"], [26, 2, 1, "", "used_mem_on_dev"], [26, 2, 1, "", "valid_dtype"], [26, 2, 1, "", "value_is_nan"], [26, 2, 1, "", "variable_data"], [26, 2, 1, "", "where"], [26, 2, 1, "", "with_grads"], [26, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[27, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[398, 4, 1, "", "abs"], [403, 4, 1, "", "acos"], [408, 4, 1, "", "acosh"], [793, 4, 1, "", "adam_step"], [413, 4, 1, "", "add"], [1167, 4, 1, "", "all"], [685, 4, 1, "", "all_equal"], [1172, 4, 1, "", "any"], [1122, 4, 1, "", "argsort"], [208, 4, 1, "", "asarray"], [418, 4, 1, "", "asin"], [423, 4, 1, "", "asinh"], [277, 4, 1, "", "astype"], [428, 4, 1, "", "atan"], [433, 4, 1, "", "atan2"], [438, 4, 1, "", "atanh"], [971, 4, 1, "", "binary_cross_entropy"], [443, 4, 1, "", "bitwise_and"], [448, 4, 1, "", "bitwise_invert"], [453, 4, 1, "", "bitwise_left_shift"], [458, 4, 1, "", "bitwise_or"], [463, 4, 1, "", "bitwise_right_shift"], [468, 4, 1, "", "bitwise_xor"], [282, 4, 1, "", "broadcast_arrays"], [287, 4, 1, "", "broadcast_to"], [292, 4, 1, "", "can_cast"], [473, 4, 1, "", "ceil"], [858, 4, 1, "", "cholesky"], [987, 4, 1, "", "clip"], [697, 4, 1, "", "clip_vector_norm"], [992, 4, 1, "", "concat"], [996, 4, 1, "", "constant_pad"], [837, 4, 1, "", "conv1d"], [478, 4, 1, "", "cos"], [483, 4, 1, "", "cosh"], [863, 4, 1, "", "cross"], [976, 4, 1, "", "cross_entropy"], [847, 4, 1, "", "depthwise_conv2d"], [868, 4, 1, "", "det"], [369, 4, 1, "", "dev"], [873, 4, 1, "", "diagonal"], [488, 4, 1, "", "divide"], [304, 4, 1, "", "dtype"], [878, 4, 1, "", "eigh"], [882, 4, 1, "", "eigvalsh"], [709, 4, 1, "", "einops_reduce"], [714, 4, 1, "", "einops_repeat"], [1133, 4, 1, "", "einsum"], [213, 4, 1, "", "empty_like"], [493, 4, 1, "", "equal"], [498, 4, 1, "", "erf"], [503, 4, 1, "", "exp"], [1000, 4, 1, "", "expand_dims"], [508, 4, 1, "", "expm1"], [310, 4, 1, "", "finfo"], [1004, 4, 1, "", "flip"], [513, 4, 1, "", "floor"], [518, 4, 1, "", "floor_divide"], [221, 4, 1, "", "from_dlpack"], [227, 4, 1, "", "full_like"], [724, 4, 1, "", "gather"], [729, 4, 1, "", "gather_nd"], [166, 4, 1, "", "gelu"], [523, 4, 1, "", "greater"], [528, 4, 1, "", "greater_equal"], [321, 4, 1, "", "iinfo"], [885, 4, 1, "", "inv"], [327, 4, 1, "", "is_bool_dtype"], [332, 4, 1, "", "is_float_dtype"], [337, 4, 1, "", "is_int_dtype"], [342, 4, 1, "", "is_uint_dtype"], [809, 4, 1, "", "is_variable"], [533, 4, 1, "", "isfinite"], [538, 4, 1, "", "isinf"], [543, 4, 1, "", "isnan"], [1071, 4, 1, "", "layer_norm"], [171, 4, 1, "", "leaky_relu"], [548, 4, 1, "", "less"], [553, 4, 1, "", "less_equal"], [558, 4, 1, "", "log"], [563, 4, 1, "", "log10"], [568, 4, 1, "", "log1p"], [573, 4, 1, "", "log2"], [578, 4, 1, "", "logaddexp"], [583, 4, 1, "", "logical_and"], [588, 4, 1, "", "logical_not"], [593, 4, 1, "", "logical_or"], [598, 4, 1, "", "logical_xor"], [890, 4, 1, "", "matmul"], [894, 4, 1, "", "matrix_norm"], [903, 4, 1, "", "matrix_rank"], [908, 4, 1, "", "matrix_transpose"], [1137, 4, 1, "", "max"], [1141, 4, 1, "", "mean"], [238, 4, 1, "", "meshgrid"], [1145, 4, 1, "", "min"], [608, 4, 1, "", "multiply"], [243, 4, 1, "", "native_array"], [613, 4, 1, "", "negative"], [618, 4, 1, "", "not_equal"], [251, 4, 1, "", "ones_like"], [913, 4, 1, "", "outer"], [1008, 4, 1, "", "permute_dims"], [918, 4, 1, "", "pinv"], [623, 4, 1, "", "positive"], [628, 4, 1, "", "pow"], [1149, 4, 1, "", "prod"], [921, 4, 1, "", "qr"], [1078, 4, 1, "", "randint"], [1083, 4, 1, "", "random_normal"], [1088, 4, 1, "", "random_uniform"], [176, 4, 1, "", "relu"], [633, 4, 1, "", "remainder"], [1012, 4, 1, "", "repeat"], [1017, 4, 1, "", "reshape"], [348, 4, 1, "", "result_type"], [1022, 4, 1, "", "roll"], [638, 4, 1, "", "round"], [181, 4, 1, "", "sigmoid"], [643, 4, 1, "", "sign"], [648, 4, 1, "", "sin"], [653, 4, 1, "", "sinh"], [186, 4, 1, "", "softmax"], [191, 4, 1, "", "softplus"], [930, 4, 1, "", "solve"], [1127, 4, 1, "", "sort"], [981, 4, 1, "", "sparse_cross_entropy"], [658, 4, 1, "", "sqrt"], [663, 4, 1, "", "square"], [1028, 4, 1, "", "squeeze"], [769, 4, 1, "", "stable_divide"], [1032, 4, 1, "", "stack"], [1153, 4, 1, "", "std"], [669, 4, 1, "", "subtract"], [1157, 4, 1, "", "sum"], [936, 4, 1, "", "svd"], [941, 4, 1, "", "svdvals"], [1036, 4, 1, "", "swapaxes"], [674, 4, 1, "", "tan"], [197, 4, 1, "", "tanh"], [946, 4, 1, "", "tensordot"], [1040, 4, 1, "", "tile"], [389, 4, 1, "", "to_device"], [781, 4, 1, "", "to_numpy"], [951, 4, 1, "", "trace"], [257, 4, 1, "", "tril"], [262, 4, 1, "", "triu"], [680, 4, 1, "", "trunc"], [1102, 4, 1, "", "unique_all"], [1107, 4, 1, "", "unique_counts"], [1112, 4, 1, "", "unique_inverse"], [1117, 4, 1, "", "unique_values"], [1162, 4, 1, "", "var"], [830, 4, 1, "", "variable"], [956, 4, 1, "", "vecdot"], [961, 4, 1, "", "vector_norm"], [966, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1044, 4, 1, "", "zero_pad"], [270, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[29, 4, 1, "", "args_to_ivy"], [30, 4, 1, "", "args_to_native"], [31, 4, 1, "", "to_ivy"], [32, 4, 1, "", "to_native"]], "ivy.array.creation": [[34, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[34, 2, 1, "", "asarray"], [34, 2, 1, "", "empty_like"], [34, 2, 1, "", "from_dlpack"], [34, 2, 1, "", "full_like"], [34, 2, 1, "", "meshgrid"], [34, 2, 1, "", "native_array"], [34, 2, 1, "", "ones_like"], [34, 2, 1, "", "tril"], [34, 2, 1, "", "triu"], [34, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[36, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[36, 2, 1, "", "astype"], [36, 2, 1, "", "broadcast_arrays"], [36, 2, 1, "", "broadcast_to"], [36, 2, 1, "", "can_cast"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "finfo"], [36, 2, 1, "", "iinfo"], [36, 2, 1, "", "is_bool_dtype"], [36, 2, 1, "", "is_float_dtype"], [36, 2, 1, "", "is_int_dtype"], [36, 2, 1, "", "is_uint_dtype"], [36, 2, 1, "", "result_type"]], "ivy.array.device": [[38, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[38, 2, 1, "", "dev"], [38, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[40, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[40, 2, 1, "", "abs"], [40, 2, 1, "", "acos"], [40, 2, 1, "", "acosh"], [40, 2, 1, "", "add"], [40, 2, 1, "", "asin"], [40, 2, 1, "", "asinh"], [40, 2, 1, "", "atan"], [40, 2, 1, "", "atan2"], [40, 2, 1, "", "atanh"], [40, 2, 1, "", "bitwise_and"], [40, 2, 1, "", "bitwise_invert"], [40, 2, 1, "", "bitwise_left_shift"], [40, 2, 1, "", "bitwise_or"], [40, 2, 1, "", "bitwise_right_shift"], [40, 2, 1, "", "bitwise_xor"], [40, 2, 1, "", "ceil"], [40, 2, 1, "", "cos"], [40, 2, 1, "", "cosh"], [40, 2, 1, "", "divide"], [40, 2, 1, "", "equal"], [40, 2, 1, "", "erf"], [40, 2, 1, "", "exp"], [40, 2, 1, "", "expm1"], [40, 2, 1, "", "floor"], [40, 2, 1, "", "floor_divide"], [40, 2, 1, "", "greater"], [40, 2, 1, "", "greater_equal"], [40, 2, 1, "", "isfinite"], [40, 2, 1, "", "isinf"], [40, 2, 1, "", "isnan"], [40, 2, 1, "", "less"], [40, 2, 1, "", "less_equal"], [40, 2, 1, "", "log"], [40, 2, 1, "", "log10"], [40, 2, 1, "", "log1p"], [40, 2, 1, "", "log2"], [40, 2, 1, "", "logaddexp"], [40, 2, 1, "", "logical_and"], [40, 2, 1, "", "logical_not"], [40, 2, 1, "", "logical_or"], [40, 2, 1, "", "logical_xor"], [40, 2, 1, "", "multiply"], [40, 2, 1, "", "negative"], [40, 2, 1, "", "not_equal"], [40, 2, 1, "", "positive"], [40, 2, 1, "", "pow"], [40, 2, 1, "", "remainder"], [40, 2, 1, "", "round"], [40, 2, 1, "", "sign"], [40, 2, 1, "", "sin"], [40, 2, 1, "", "sinh"], [40, 2, 1, "", "sqrt"], [40, 2, 1, "", "square"], [40, 2, 1, "", "subtract"], [40, 2, 1, "", "tan"], [40, 2, 1, "", "tanh"], [40, 2, 1, "", "trunc"]], "ivy.array.general": [[42, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[42, 2, 1, "", "all_equal"], [42, 2, 1, "", "clip_vector_norm"], [42, 2, 1, "", "einops_reduce"], [42, 2, 1, "", "einops_repeat"], [42, 2, 1, "", "gather"], [42, 2, 1, "", "gather_nd"], [42, 2, 1, "", "stable_divide"], [42, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[44, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[44, 2, 1, "", "adam_step"], [44, 2, 1, "", "is_variable"], [44, 2, 1, "", "variable"]], "ivy.array.image": [[46, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[48, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[48, 2, 1, "", "conv1d"], [48, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[50, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[50, 2, 1, "", "cholesky"], [50, 2, 1, "", "cross"], [50, 2, 1, "", "det"], [50, 2, 1, "", "diagonal"], [50, 2, 1, "", "eigh"], [50, 2, 1, "", "eigvalsh"], [50, 2, 1, "", "inv"], [50, 2, 1, "", "matmul"], [50, 2, 1, "", "matrix_norm"], [50, 2, 1, "", "matrix_rank"], [50, 2, 1, "", "matrix_transpose"], [50, 2, 1, "", "outer"], [50, 2, 1, "", "pinv"], [50, 2, 1, "", "qr"], [50, 2, 1, "", "solve"], [50, 2, 1, "", "svd"], [50, 2, 1, "", "svdvals"], [50, 2, 1, "", "tensordot"], [50, 2, 1, "", "trace"], [50, 2, 1, "", "vecdot"], [50, 2, 1, "", "vector_norm"], [50, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[52, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[52, 2, 1, "", "binary_cross_entropy"], [52, 2, 1, "", "cross_entropy"], [52, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[54, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[54, 2, 1, "", "clip"], [54, 2, 1, "", "concat"], [54, 2, 1, "", "constant_pad"], [54, 2, 1, "", "expand_dims"], [54, 2, 1, "", "flip"], [54, 2, 1, "", "permute_dims"], [54, 2, 1, "", "repeat"], [54, 2, 1, "", "reshape"], [54, 2, 1, "", "roll"], [54, 2, 1, "", "squeeze"], [54, 2, 1, "", "stack"], [54, 2, 1, "", "swapaxes"], [54, 2, 1, "", "tile"], [54, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[56, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[56, 2, 1, "", "layer_norm"]], "ivy.array.random": [[58, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[58, 2, 1, "", "randint"], [58, 2, 1, "", "random_normal"], [58, 2, 1, "", "random_uniform"]], "ivy.array.searching": [[60, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[62, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[62, 2, 1, "", "unique_all"], [62, 2, 1, "", "unique_counts"], [62, 2, 1, "", "unique_inverse"], [62, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[64, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[64, 2, 1, "", "argsort"], [64, 2, 1, "", "sort"]], "ivy.array.statistical": [[66, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[66, 2, 1, "", "einsum"], [66, 2, 1, "", "max"], [66, 2, 1, "", "mean"], [66, 2, 1, "", "min"], [66, 2, 1, "", "prod"], [66, 2, 1, "", "std"], [66, 2, 1, "", "sum"], [66, 2, 1, "", "var"]], "ivy.array.utility": [[68, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[68, 2, 1, "", "all"], [68, 2, 1, "", "any"]], "ivy.array.wrapping": [[70, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [154, 0, 0, "-", "func_wrapper"], [1179, 0, 0, "-", "inspection"], [1183, 0, 0, "-", "stateful"], [1220, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [1, 4, 1, "", "choose_random_backend"], [2, 4, 1, "", "clear_backend_stack"], [3, 4, 1, "", "current_backend"], [4, 4, 1, "", "get_backend"], [5, 4, 1, "", "set_backend"], [6, 4, 1, "", "try_import_ivy_jax"], [7, 4, 1, "", "try_import_ivy_mxnet"], [8, 4, 1, "", "try_import_ivy_numpy"], [9, 4, 1, "", "try_import_ivy_tf"], [10, 4, 1, "", "try_import_ivy_torch"], [11, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[72, 0, 0, "-", "activations"], [74, 0, 0, "-", "base"], [76, 0, 0, "-", "container"], [78, 0, 0, "-", "creation"], [80, 0, 0, "-", "data_type"], [82, 0, 0, "-", "device"], [84, 0, 0, "-", "elementwise"], [86, 0, 0, "-", "general"], [88, 0, 0, "-", "gradients"], [90, 0, 0, "-", "image"], [92, 0, 0, "-", "layers"], [94, 0, 0, "-", "linear_algebra"], [96, 0, 0, "-", "losses"], [98, 0, 0, "-", "manipulation"], [100, 0, 0, "-", "norms"], [102, 0, 0, "-", "random"], [104, 0, 0, "-", "searching"], [106, 0, 0, "-", "set"], [108, 0, 0, "-", "sorting"], [110, 0, 0, "-", "statistical"], [112, 0, 0, "-", "utility"], [114, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[73, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[73, 2, 1, "", "gelu"], [73, 2, 1, "", "leaky_relu"], [73, 2, 1, "", "relu"], [73, 2, 1, "", "sigmoid"], [73, 2, 1, "", "softmax"], [73, 2, 1, "", "softplus"], [73, 2, 1, "", "static_gelu"], [73, 2, 1, "", "static_leaky_relu"], [73, 2, 1, "", "static_relu"], [73, 2, 1, "", "static_sigmoid"], [73, 2, 1, "", "static_softmax"], [73, 2, 1, "", "static_softplus"], [73, 2, 1, "", "static_tanh"], [73, 2, 1, "", "tanh"]], "ivy.container.base": [[75, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[75, 2, 1, "", "__getitem__"], [75, 2, 1, "", "__init__"], [75, 2, 1, "", "__setitem__"], [75, 2, 1, "", "all_false"], [75, 2, 1, "", "all_key_chains"], [75, 2, 1, "", "all_true"], [75, 2, 1, "", "arrays_as_lists"], [75, 2, 1, "", "as_arrays"], [75, 2, 1, "", "as_bools"], [75, 2, 1, "", "as_variables"], [75, 2, 1, "", "assert_contains_sub_container"], [75, 2, 1, "", "assert_contains_sub_structure"], [75, 2, 1, "", "assert_identical"], [75, 2, 1, "", "assert_identical_structure"], [75, 2, 1, "", "at_key_chain"], [75, 2, 1, "", "at_key_chains"], [75, 2, 1, "", "at_keys"], [75, 2, 1, "", "clip"], [75, 2, 1, "", "combine"], [75, 2, 1, "", "common_key_chains"], [75, 3, 1, "", "config"], [75, 2, 1, "", "contains_sub_container"], [75, 2, 1, "", "contains_sub_structure"], [75, 2, 1, "", "copy"], [75, 2, 1, "", "create_if_absent"], [75, 2, 1, "", "cutoff_at_depth"], [75, 2, 1, "", "cutoff_at_height"], [75, 2, 1, "", "deep_copy"], [75, 3, 1, "", "dev"], [75, 2, 1, "", "dev_clone"], [75, 2, 1, "", "dev_dist"], [75, 3, 1, "", "dev_str"], [75, 2, 1, "", "diff"], [75, 2, 1, "", "dtype"], [75, 2, 1, "", "einops_rearrange"], [75, 2, 1, "", "find_sub_container"], [75, 2, 1, "", "find_sub_structure"], [75, 2, 1, "", "flatten_key_chain"], [75, 2, 1, "", "flatten_key_chains"], [75, 2, 1, "", "format_key_chains"], [75, 2, 1, "", "from_disk_as_hdf5"], [75, 2, 1, "", "from_disk_as_json"], [75, 2, 1, "", "from_disk_as_pickled"], [75, 2, 1, "", "from_flat_list"], [75, 2, 1, "", "from_numpy"], [75, 2, 1, "", "h5_file_size"], [75, 2, 1, "", "handle_inplace"], [75, 2, 1, "", "has_key"], [75, 2, 1, "", "has_key_chain"], [75, 2, 1, "", "has_nans"], [75, 2, 1, "", "identical"], [75, 2, 1, "", "identical_array_shapes"], [75, 2, 1, "", "identical_configs"], [75, 2, 1, "", "identical_structure"], [75, 2, 1, "", "if_exists"], [75, 2, 1, "", "inplace_update"], [75, 3, 1, "", "ivy"], [75, 2, 1, "", "key_chains_containing"], [75, 2, 1, "", "list_join"], [75, 2, 1, "", "list_stack"], [75, 2, 1, "", "map"], [75, 2, 1, "", "map_conts"], [75, 2, 1, "", "matrix_norm"], [75, 3, 1, "", "max_depth"], [75, 2, 1, "", "maximum"], [75, 2, 1, "", "multi_map"], [75, 2, 1, "", "multi_map_in_static_method"], [75, 2, 1, "", "num_arrays"], [75, 2, 1, "", "overwrite_at_key_chain"], [75, 2, 1, "", "overwrite_at_key_chains"], [75, 2, 1, "", "prune_empty"], [75, 2, 1, "", "prune_key_chain"], [75, 2, 1, "", "prune_key_chains"], [75, 2, 1, "", "prune_key_from_key_chains"], [75, 2, 1, "", "prune_keys"], [75, 2, 1, "", "prune_keys_from_key_chains"], [75, 2, 1, "", "reduce"], [75, 2, 1, "", "remove_key_length_limit"], [75, 2, 1, "", "remove_print_limit"], [75, 2, 1, "", "reshape_like"], [75, 2, 1, "", "restructure"], [75, 2, 1, "", "restructure_key_chains"], [75, 2, 1, "", "set_at_key_chain"], [75, 2, 1, "", "set_at_key_chains"], [75, 2, 1, "", "set_at_keys"], [75, 2, 1, "", "set_framework"], [75, 2, 1, "", "set_ivy_backend"], [75, 3, 1, "", "shape"], [75, 3, 1, "", "shapes"], [75, 2, 1, "", "show"], [75, 2, 1, "", "show_sub_container"], [75, 2, 1, "", "shuffle"], [75, 2, 1, "", "shuffle_h5_file"], [75, 2, 1, "", "size_ordered_arrays"], [75, 2, 1, "", "slice_keys"], [75, 2, 1, "", "slice_via_key"], [75, 2, 1, "", "sort_by_key"], [75, 2, 1, "", "split"], [75, 2, 1, "", "stop_gradients"], [75, 2, 1, "", "structural_diff"], [75, 2, 1, "", "to_device"], [75, 2, 1, "", "to_dict"], [75, 2, 1, "", "to_disk_as_hdf5"], [75, 2, 1, "", "to_disk_as_json"], [75, 2, 1, "", "to_disk_as_pickled"], [75, 2, 1, "", "to_flat_list"], [75, 2, 1, "", "to_iterator"], [75, 2, 1, "", "to_iterator_keys"], [75, 2, 1, "", "to_iterator_values"], [75, 2, 1, "", "to_ivy"], [75, 2, 1, "", "to_jsonable"], [75, 2, 1, "", "to_list"], [75, 2, 1, "", "to_native"], [75, 2, 1, "", "to_numpy"], [75, 2, 1, "", "to_raw"], [75, 2, 1, "", "trim_key"], [75, 2, 1, "", "try_kc"], [75, 2, 1, "", "unify"], [75, 2, 1, "", "unstack"], [75, 2, 1, "", "update_config"], [75, 2, 1, "", "vector_norm"], [75, 2, 1, "", "with_default_key_color"], [75, 2, 1, "", "with_entries_as_lists"], [75, 2, 1, "", "with_ivy_backend"], [75, 2, 1, "", "with_key_length_limit"], [75, 2, 1, "", "with_print_indent"], [75, 2, 1, "", "with_print_limit"], [75, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[77, 1, 1, "", "Container"]], "ivy.container.container.Container": [[77, 2, 1, "", "__add__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__radd__"], [77, 2, 1, "", "arange"], [77, 2, 1, "", "arg_info"], [77, 2, 1, "", "arg_names"], [77, 2, 1, "", "argmax"], [77, 2, 1, "", "argmin"], [77, 2, 1, "", "array"], [77, 2, 1, "", "array_equal"], [77, 2, 1, "", "arrays_equal"], [77, 2, 1, "", "as_ivy_dev"], [77, 2, 1, "", "as_ivy_dtype"], [77, 2, 1, "", "as_native_dev"], [77, 2, 1, "", "as_native_dtype"], [77, 2, 1, "", "asarray"], [77, 2, 1, "", "assert_supports_inplace"], [77, 2, 1, "", "cache_fn"], [77, 2, 1, "", "clear_mem_on_dev"], [77, 2, 1, "", "clip_matrix_norm"], [77, 2, 1, "", "closest_valid_dtype"], [77, 2, 1, "", "container_types"], [77, 2, 1, "", "conv1d_transpose"], [77, 2, 1, "", "conv2d"], [77, 2, 1, "", "conv2d_transpose"], [77, 2, 1, "", "conv3d"], [77, 2, 1, "", "conv3d_transpose"], [77, 2, 1, "", "copy_array"], [77, 2, 1, "", "cumprod"], [77, 2, 1, "", "cumsum"], [77, 2, 1, "", "current_backend"], [77, 2, 1, "", "current_backend_str"], [77, 2, 1, "", "default"], [77, 2, 1, "", "default_device"], [77, 2, 1, "", "default_dtype"], [77, 2, 1, "", "default_float_dtype"], [77, 2, 1, "", "default_int_dtype"], [77, 2, 1, "", "default_uint_dtype"], [77, 2, 1, "", "dev_util"], [77, 2, 1, "", "dropout"], [77, 2, 1, "", "dtype_bits"], [77, 2, 1, "", "eigvalsh"], [77, 2, 1, "", "empty"], [77, 2, 1, "", "execute_with_gradients"], [77, 2, 1, "", "exists"], [77, 2, 1, "", "eye"], [77, 2, 1, "", "floormod"], [77, 2, 1, "", "fourier_encode"], [77, 2, 1, "", "full"], [77, 2, 1, "", "function_supported_devices"], [77, 2, 1, "", "function_supported_devices_and_dtypes"], [77, 2, 1, "", "function_supported_dtypes"], [77, 2, 1, "", "function_unsupported_devices"], [77, 2, 1, "", "function_unsupported_devices_and_dtypes"], [77, 2, 1, "", "function_unsupported_dtypes"], [77, 2, 1, "", "get_all_arrays_in_memory"], [77, 2, 1, "", "get_all_ivy_arrays_on_dev"], [77, 2, 1, "", "get_array_mode"], [77, 2, 1, "", "get_min_base"], [77, 2, 1, "", "get_min_denominator"], [77, 2, 1, "", "get_nestable_mode"], [77, 2, 1, "", "get_num_dims"], [77, 2, 1, "", "get_referrers_recursive"], [77, 2, 1, "", "gpu_is_available"], [77, 2, 1, "", "handle_nestable"], [77, 2, 1, "", "handle_out_argument"], [77, 2, 1, "", "indices_where"], [77, 2, 1, "", "infer_device"], [77, 2, 1, "", "infer_dtype"], [77, 2, 1, "", "inplace_arrays_supported"], [77, 2, 1, "", "inplace_decrement"], [77, 2, 1, "", "inplace_increment"], [77, 2, 1, "", "inplace_variables_supported"], [77, 2, 1, "", "inputs_to_native_arrays"], [77, 2, 1, "", "invalid_dtype"], [77, 2, 1, "", "is_ivy_container"], [77, 2, 1, "", "linear"], [77, 2, 1, "", "linspace"], [77, 2, 1, "", "logspace"], [77, 2, 1, "", "lstm_update"], [77, 2, 1, "", "match_kwargs"], [77, 2, 1, "", "multi_head_attention"], [77, 2, 1, "", "multinomial"], [77, 2, 1, "", "multiprocessing"], [77, 2, 1, "", "nonzero"], [77, 2, 1, "", "num_arrays_in_memory"], [77, 2, 1, "", "num_cpu_cores"], [77, 2, 1, "", "num_gpus"], [77, 2, 1, "", "num_ivy_arrays_on_dev"], [77, 2, 1, "", "one_hot"], [77, 2, 1, "", "ones"], [77, 2, 1, "", "outputs_to_ivy_arrays"], [77, 2, 1, "", "percent_used_mem_on_dev"], [77, 2, 1, "", "pinv"], [77, 2, 1, "", "print_all_arrays_in_memory"], [77, 2, 1, "", "print_all_ivy_arrays_on_dev"], [77, 2, 1, "", "promote_types"], [77, 2, 1, "", "queue_timeout"], [77, 2, 1, "", "scaled_dot_product_attention"], [77, 2, 1, "", "scatter_flat"], [77, 2, 1, "", "scatter_nd"], [77, 2, 1, "", "seed"], [77, 2, 1, "", "set_array_mode"], [77, 2, 1, "", "set_default_device"], [77, 2, 1, "", "set_default_dtype"], [77, 2, 1, "", "set_default_float_dtype"], [77, 2, 1, "", "set_default_int_dtype"], [77, 2, 1, "", "set_default_uint_dtype"], [77, 2, 1, "", "set_min_base"], [77, 2, 1, "", "set_min_denominator"], [77, 2, 1, "", "set_nestable_mode"], [77, 2, 1, "", "set_queue_timeout"], [77, 2, 1, "", "set_shape_array_mode"], [77, 2, 1, "", "set_split_factor"], [77, 2, 1, "", "set_tmp_dir"], [77, 2, 1, "", "set_with_grads"], [77, 2, 1, "", "shape_array_mode"], [77, 2, 1, "", "split_factor"], [77, 2, 1, "", "split_func_call"], [77, 2, 1, "", "stable_pow"], [77, 2, 1, "", "static_arg_info"], [77, 2, 1, "", "static_arg_names"], [77, 2, 1, "", "static_argmax"], [77, 2, 1, "", "static_argmin"], [77, 2, 1, "", "static_array"], [77, 2, 1, "", "static_array_equal"], [77, 2, 1, "", "static_arrays_equal"], [77, 2, 1, "", "static_as_ivy_dev"], [77, 2, 1, "", "static_as_ivy_dtype"], [77, 2, 1, "", "static_as_native_dev"], [77, 2, 1, "", "static_as_native_dtype"], [77, 2, 1, "", "static_assert_supports_inplace"], [77, 2, 1, "", "static_cache_fn"], [77, 2, 1, "", "static_clear_mem_on_dev"], [77, 2, 1, "", "static_clip_matrix_norm"], [77, 2, 1, "", "static_closest_valid_dtype"], [77, 2, 1, "", "static_concat"], [77, 2, 1, "", "static_constant_pad"], [77, 2, 1, "", "static_container_types"], [77, 2, 1, "", "static_conv1d_transpose"], [77, 2, 1, "", "static_conv2d"], [77, 2, 1, "", "static_conv2d_transpose"], [77, 2, 1, "", "static_conv3d"], [77, 2, 1, "", "static_conv3d_transpose"], [77, 2, 1, "", "static_copy_array"], [77, 2, 1, "", "static_cumprod"], [77, 2, 1, "", "static_cumsum"], [77, 2, 1, "", "static_current_backend"], [77, 2, 1, "", "static_current_backend_str"], [77, 2, 1, "", "static_default"], [77, 2, 1, "", "static_default_device"], [77, 2, 1, "", "static_default_dtype"], [77, 2, 1, "", "static_default_int_dtype"], [77, 2, 1, "", "static_default_uint_dtype"], [77, 2, 1, "", "static_dev_util"], [77, 2, 1, "", "static_dropout"], [77, 2, 1, "", "static_dtype_bits"], [77, 2, 1, "", "static_eigh"], [77, 2, 1, "", "static_eigvalsh"], [77, 2, 1, "", "static_einops_rearrange"], [77, 2, 1, "", "static_einsum"], [77, 2, 1, "", "static_empty"], [77, 2, 1, "", "static_exists"], [77, 2, 1, "", "static_expand_dims"], [77, 2, 1, "", "static_flip"], [77, 2, 1, "", "static_floormod"], [77, 2, 1, "", "static_fourier_encode"], [77, 2, 1, "", "static_full"], [77, 2, 1, "", "static_function_supported_devices"], [77, 2, 1, "", "static_function_supported_devices_and_dtypes"], [77, 2, 1, "", "static_function_unsupported_devices"], [77, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [77, 2, 1, "", "static_get_all_arrays_in_memory"], [77, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [77, 2, 1, "", "static_get_array_mode"], [77, 2, 1, "", "static_get_min_base"], [77, 2, 1, "", "static_get_min_denominator"], [77, 2, 1, "", "static_get_nestable_mode"], [77, 2, 1, "", "static_get_num_dims"], [77, 2, 1, "", "static_get_referrers_recursive"], [77, 2, 1, "", "static_gpu_is_available"], [77, 2, 1, "", "static_handle_nestable"], [77, 2, 1, "", "static_handle_out_argument"], [77, 2, 1, "", "static_has_nans"], [77, 2, 1, "", "static_indices_where"], [77, 2, 1, "", "static_infer_device"], [77, 2, 1, "", "static_infer_dtype"], [77, 2, 1, "", "static_inplace_arrays_supported"], [77, 2, 1, "", "static_inplace_decrement"], [77, 2, 1, "", "static_inplace_increment"], [77, 2, 1, "", "static_inplace_update"], [77, 2, 1, "", "static_inplace_variables_supported"], [77, 2, 1, "", "static_inputs_to_native_arrays"], [77, 2, 1, "", "static_invalid_dtype"], [77, 2, 1, "", "static_is_array"], [77, 2, 1, "", "static_is_ivy_array"], [77, 2, 1, "", "static_is_ivy_container"], [77, 2, 1, "", "static_is_native_array"], [77, 2, 1, "", "static_linear"], [77, 2, 1, "", "static_lstm_update"], [77, 2, 1, "", "static_match_kwargs"], [77, 2, 1, "", "static_matmul"], [77, 2, 1, "", "static_max"], [77, 2, 1, "", "static_maximum"], [77, 2, 1, "", "static_mean"], [77, 2, 1, "", "static_min"], [77, 2, 1, "", "static_multi_head_attention"], [77, 2, 1, "", "static_multinomial"], [77, 2, 1, "", "static_multiprocessing"], [77, 2, 1, "", "static_nonzero"], [77, 2, 1, "", "static_num_arrays_in_memory"], [77, 2, 1, "", "static_num_cpu_cores"], [77, 2, 1, "", "static_num_gpus"], [77, 2, 1, "", "static_num_ivy_arrays_on_dev"], [77, 2, 1, "", "static_one_hot"], [77, 2, 1, "", "static_outputs_to_ivy_arrays"], [77, 2, 1, "", "static_percent_used_mem_on_dev"], [77, 2, 1, "", "static_permute_dims"], [77, 2, 1, "", "static_pinv"], [77, 2, 1, "", "static_print_all_arrays_in_memory"], [77, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [77, 2, 1, "", "static_prod"], [77, 2, 1, "", "static_promote_types"], [77, 2, 1, "", "static_queue_timeout"], [77, 2, 1, "", "static_scaled_dot_product_attention"], [77, 2, 1, "", "static_scatter_flat"], [77, 2, 1, "", "static_scatter_nd"], [77, 2, 1, "", "static_seed"], [77, 2, 1, "", "static_set_array_mode"], [77, 2, 1, "", "static_set_default_device"], [77, 2, 1, "", "static_set_default_dtype"], [77, 2, 1, "", "static_set_default_float_dtype"], [77, 2, 1, "", "static_set_default_int_dtype"], [77, 2, 1, "", "static_set_default_uint_dtype"], [77, 2, 1, "", "static_set_min_base"], [77, 2, 1, "", "static_set_min_denominator"], [77, 2, 1, "", "static_set_nestable_mode"], [77, 2, 1, "", "static_set_queue_timeout"], [77, 2, 1, "", "static_set_shape_array_mode"], [77, 2, 1, "", "static_set_split_factor"], [77, 2, 1, "", "static_set_tmp_dir"], [77, 2, 1, "", "static_set_with_grads"], [77, 2, 1, "", "static_shape"], [77, 2, 1, "", "static_shape_array_mode"], [77, 2, 1, "", "static_shuffle"], [77, 2, 1, "", "static_split"], [77, 2, 1, "", "static_split_factor"], [77, 2, 1, "", "static_split_func_call"], [77, 2, 1, "", "static_squeeze"], [77, 2, 1, "", "static_stable_pow"], [77, 2, 1, "", "static_stack"], [77, 2, 1, "", "static_std"], [77, 2, 1, "", "static_stop_gradient"], [77, 2, 1, "", "static_sum"], [77, 2, 1, "", "static_supports_inplace"], [77, 2, 1, "", "static_swapaxes"], [77, 2, 1, "", "static_tile"], [77, 2, 1, "", "static_tmp_dir"], [77, 2, 1, "", "static_to_ivy_shape"], [77, 2, 1, "", "static_to_list"], [77, 2, 1, "", "static_to_native_arrays_and_back"], [77, 2, 1, "", "static_to_native_shape"], [77, 2, 1, "", "static_to_scalar"], [77, 2, 1, "", "static_total_mem_on_dev"], [77, 2, 1, "", "static_tpu_is_available"], [77, 2, 1, "", "static_try_else_none"], [77, 2, 1, "", "static_type_promote_arrays"], [77, 2, 1, "", "static_unset_array_mode"], [77, 2, 1, "", "static_unset_default_device"], [77, 2, 1, "", "static_unset_default_dtype"], [77, 2, 1, "", "static_unset_default_float_dtype"], [77, 2, 1, "", "static_unset_default_int_dtype"], [77, 2, 1, "", "static_unset_default_uint_dtype"], [77, 2, 1, "", "static_unset_nestable_mode"], [77, 2, 1, "", "static_unset_shape_array_mode"], [77, 2, 1, "", "static_unset_with_grads"], [77, 2, 1, "", "static_unstack"], [77, 2, 1, "", "static_used_mem_on_dev"], [77, 2, 1, "", "static_valid_dtype"], [77, 2, 1, "", "static_value_is_nan"], [77, 2, 1, "", "static_variable_data"], [77, 2, 1, "", "static_where"], [77, 2, 1, "", "static_with_grads"], [77, 2, 1, "", "static_zero_pad"], [77, 2, 1, "", "stop_gradient"], [77, 2, 1, "", "supports_inplace"], [77, 2, 1, "", "tmp_dir"], [77, 2, 1, "", "to_ivy_shape"], [77, 2, 1, "", "to_native_arrays_and_back"], [77, 2, 1, "", "to_native_shape"], [77, 2, 1, "", "to_scalar"], [77, 2, 1, "", "total_mem_on_dev"], [77, 2, 1, "", "tpu_is_available"], [77, 2, 1, "", "try_else_none"], [77, 2, 1, "", "type_promote_arrays"], [77, 2, 1, "", "unset_array_mode"], [77, 2, 1, "", "unset_default_device"], [77, 2, 1, "", "unset_default_dtype"], [77, 2, 1, "", "unset_default_float_dtype"], [77, 2, 1, "", "unset_default_int_dtype"], [77, 2, 1, "", "unset_default_uint_dtype"], [77, 2, 1, "", "unset_nestable_mode"], [77, 2, 1, "", "unset_shape_array_mode"], [77, 2, 1, "", "unset_with_grads"], [77, 2, 1, "", "used_mem_on_dev"], [77, 2, 1, "", "valid_dtype"], [77, 2, 1, "", "value_is_nan"], [77, 2, 1, "", "variable_data"], [77, 2, 1, "", "where"], [77, 2, 1, "", "with_grads"], [77, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[399, 4, 1, "", "abs"], [404, 4, 1, "", "acos"], [409, 4, 1, "", "acosh"], [794, 4, 1, "", "adam_step"], [798, 4, 1, "", "adam_update"], [414, 4, 1, "", "add"], [1168, 4, 1, "", "all"], [686, 4, 1, "", "all_equal"], [1173, 4, 1, "", "any"], [1123, 4, 1, "", "argsort"], [419, 4, 1, "", "asin"], [424, 4, 1, "", "asinh"], [278, 4, 1, "", "astype"], [429, 4, 1, "", "atan"], [434, 4, 1, "", "atan2"], [439, 4, 1, "", "atanh"], [972, 4, 1, "", "binary_cross_entropy"], [444, 4, 1, "", "bitwise_and"], [449, 4, 1, "", "bitwise_invert"], [454, 4, 1, "", "bitwise_left_shift"], [459, 4, 1, "", "bitwise_or"], [464, 4, 1, "", "bitwise_right_shift"], [469, 4, 1, "", "bitwise_xor"], [283, 4, 1, "", "broadcast_arrays"], [288, 4, 1, "", "broadcast_to"], [293, 4, 1, "", "can_cast"], [474, 4, 1, "", "ceil"], [859, 4, 1, "", "cholesky"], [988, 4, 1, "", "clip"], [698, 4, 1, "", "clip_vector_norm"], [993, 4, 1, "", "concat"], [997, 4, 1, "", "constant_pad"], [838, 4, 1, "", "conv1d"], [479, 4, 1, "", "cos"], [484, 4, 1, "", "cosh"], [864, 4, 1, "", "cross"], [977, 4, 1, "", "cross_entropy"], [848, 4, 1, "", "depthwise_conv2d"], [869, 4, 1, "", "det"], [370, 4, 1, "", "dev"], [874, 4, 1, "", "diagonal"], [489, 4, 1, "", "divide"], [305, 4, 1, "", "dtype"], [879, 4, 1, "", "eigh"], [710, 4, 1, "", "einops_reduce"], [715, 4, 1, "", "einops_repeat"], [1134, 4, 1, "", "einsum"], [214, 4, 1, "", "empty_like"], [494, 4, 1, "", "equal"], [499, 4, 1, "", "erf"], [504, 4, 1, "", "exp"], [1001, 4, 1, "", "expand_dims"], [509, 4, 1, "", "expm1"], [311, 4, 1, "", "finfo"], [1005, 4, 1, "", "flip"], [514, 4, 1, "", "floor"], [519, 4, 1, "", "floor_divide"], [222, 4, 1, "", "from_dlpack"], [228, 4, 1, "", "full_like"], [725, 4, 1, "", "gather"], [730, 4, 1, "", "gather_nd"], [167, 4, 1, "", "gelu"], [805, 4, 1, "", "gradient_descent_update"], [524, 4, 1, "", "greater"], [529, 4, 1, "", "greater_equal"], [322, 4, 1, "", "iinfo"], [886, 4, 1, "", "inv"], [328, 4, 1, "", "is_bool_dtype"], [333, 4, 1, "", "is_float_dtype"], [338, 4, 1, "", "is_int_dtype"], [343, 4, 1, "", "is_uint_dtype"], [810, 4, 1, "", "is_variable"], [534, 4, 1, "", "isfinite"], [539, 4, 1, "", "isinf"], [544, 4, 1, "", "isnan"], [814, 4, 1, "", "lamb_update"], [818, 4, 1, "", "lars_update"], [1072, 4, 1, "", "layer_norm"], [172, 4, 1, "", "leaky_relu"], [549, 4, 1, "", "less"], [554, 4, 1, "", "less_equal"], [559, 4, 1, "", "log"], [564, 4, 1, "", "log10"], [569, 4, 1, "", "log1p"], [574, 4, 1, "", "log2"], [579, 4, 1, "", "logaddexp"], [584, 4, 1, "", "logical_and"], [589, 4, 1, "", "logical_not"], [594, 4, 1, "", "logical_or"], [599, 4, 1, "", "logical_xor"], [891, 4, 1, "", "matmul"], [895, 4, 1, "", "matrix_norm"], [899, 4, 1, "", "matrix_power"], [904, 4, 1, "", "matrix_rank"], [909, 4, 1, "", "matrix_transpose"], [1138, 4, 1, "", "max"], [1142, 4, 1, "", "mean"], [239, 4, 1, "", "meshgrid"], [1146, 4, 1, "", "min"], [604, 4, 1, "", "minimum"], [609, 4, 1, "", "multiply"], [244, 4, 1, "", "native_array"], [614, 4, 1, "", "negative"], [619, 4, 1, "", "not_equal"], [252, 4, 1, "", "ones_like"], [822, 4, 1, "", "optimizer_update"], [914, 4, 1, "", "outer"], [1009, 4, 1, "", "permute_dims"], [624, 4, 1, "", "positive"], [629, 4, 1, "", "pow"], [1150, 4, 1, "", "prod"], [922, 4, 1, "", "qr"], [1079, 4, 1, "", "randint"], [1084, 4, 1, "", "random_normal"], [1089, 4, 1, "", "random_uniform"], [177, 4, 1, "", "relu"], [634, 4, 1, "", "remainder"], [1013, 4, 1, "", "repeat"], [1018, 4, 1, "", "reshape"], [349, 4, 1, "", "result_type"], [1023, 4, 1, "", "roll"], [639, 4, 1, "", "round"], [182, 4, 1, "", "sigmoid"], [644, 4, 1, "", "sign"], [649, 4, 1, "", "sin"], [654, 4, 1, "", "sinh"], [926, 4, 1, "", "slogdet"], [187, 4, 1, "", "softmax"], [192, 4, 1, "", "softplus"], [931, 4, 1, "", "solve"], [1128, 4, 1, "", "sort"], [982, 4, 1, "", "sparse_cross_entropy"], [659, 4, 1, "", "sqrt"], [664, 4, 1, "", "square"], [1029, 4, 1, "", "squeeze"], [770, 4, 1, "", "stable_divide"], [1033, 4, 1, "", "stack"], [401, 4, 1, "", "static_abs"], [406, 4, 1, "", "static_acos"], [411, 4, 1, "", "static_acosh"], [796, 4, 1, "", "static_adam_step"], [800, 4, 1, "", "static_adam_update"], [416, 4, 1, "", "static_add"], [1170, 4, 1, "", "static_all"], [688, 4, 1, "", "static_all_equal"], [1175, 4, 1, "", "static_any"], [206, 4, 1, "", "static_arange"], [1125, 4, 1, "", "static_argsort"], [210, 4, 1, "", "static_asarray"], [421, 4, 1, "", "static_asin"], [426, 4, 1, "", "static_asinh"], [280, 4, 1, "", "static_astype"], [431, 4, 1, "", "static_atan"], [436, 4, 1, "", "static_atan2"], [441, 4, 1, "", "static_atanh"], [974, 4, 1, "", "static_binary_cross_entropy"], [446, 4, 1, "", "static_bitwise_and"], [451, 4, 1, "", "static_bitwise_invert"], [456, 4, 1, "", "static_bitwise_left_shift"], [461, 4, 1, "", "static_bitwise_or"], [466, 4, 1, "", "static_bitwise_right_shift"], [471, 4, 1, "", "static_bitwise_xor"], [285, 4, 1, "", "static_broadcast_arrays"], [290, 4, 1, "", "static_broadcast_to"], [295, 4, 1, "", "static_can_cast"], [476, 4, 1, "", "static_ceil"], [861, 4, 1, "", "static_cholesky"], [990, 4, 1, "", "static_clip"], [700, 4, 1, "", "static_clip_vector_norm"], [840, 4, 1, "", "static_conv1d"], [481, 4, 1, "", "static_cos"], [486, 4, 1, "", "static_cosh"], [866, 4, 1, "", "static_cross"], [979, 4, 1, "", "static_cross_entropy"], [300, 4, 1, "", "static_default_float_dtype"], [850, 4, 1, "", "static_depthwise_conv2d"], [871, 4, 1, "", "static_det"], [372, 4, 1, "", "static_dev"], [876, 4, 1, "", "static_diagonal"], [491, 4, 1, "", "static_divide"], [307, 4, 1, "", "static_dtype"], [712, 4, 1, "", "static_einops_reduce"], [717, 4, 1, "", "static_einops_repeat"], [216, 4, 1, "", "static_empty_like"], [496, 4, 1, "", "static_equal"], [501, 4, 1, "", "static_erf"], [803, 4, 1, "", "static_execute_with_gradients"], [506, 4, 1, "", "static_exp"], [511, 4, 1, "", "static_expm1"], [219, 4, 1, "", "static_eye"], [313, 4, 1, "", "static_finfo"], [516, 4, 1, "", "static_floor"], [521, 4, 1, "", "static_floor_divide"], [224, 4, 1, "", "static_from_dlpack"], [230, 4, 1, "", "static_full_like"], [316, 4, 1, "", "static_function_supported_dtypes"], [319, 4, 1, "", "static_function_unsupported_dtypes"], [727, 4, 1, "", "static_gather"], [732, 4, 1, "", "static_gather_nd"], [169, 4, 1, "", "static_gelu"], [807, 4, 1, "", "static_gradient_descent_update"], [526, 4, 1, "", "static_greater"], [531, 4, 1, "", "static_greater_equal"], [324, 4, 1, "", "static_iinfo"], [888, 4, 1, "", "static_inv"], [330, 4, 1, "", "static_is_bool_dtype"], [335, 4, 1, "", "static_is_float_dtype"], [340, 4, 1, "", "static_is_int_dtype"], [345, 4, 1, "", "static_is_uint_dtype"], [812, 4, 1, "", "static_is_variable"], [536, 4, 1, "", "static_isfinite"], [541, 4, 1, "", "static_isinf"], [546, 4, 1, "", "static_isnan"], [816, 4, 1, "", "static_lamb_update"], [820, 4, 1, "", "static_lars_update"], [1074, 4, 1, "", "static_layer_norm"], [174, 4, 1, "", "static_leaky_relu"], [551, 4, 1, "", "static_less"], [556, 4, 1, "", "static_less_equal"], [233, 4, 1, "", "static_linspace"], [561, 4, 1, "", "static_log"], [566, 4, 1, "", "static_log10"], [571, 4, 1, "", "static_log1p"], [576, 4, 1, "", "static_log2"], [581, 4, 1, "", "static_logaddexp"], [586, 4, 1, "", "static_logical_and"], [591, 4, 1, "", "static_logical_not"], [596, 4, 1, "", "static_logical_or"], [601, 4, 1, "", "static_logical_xor"], [236, 4, 1, "", "static_logspace"], [897, 4, 1, "", "static_matrix_norm"], [901, 4, 1, "", "static_matrix_power"], [906, 4, 1, "", "static_matrix_rank"], [911, 4, 1, "", "static_matrix_transpose"], [241, 4, 1, "", "static_meshgrid"], [606, 4, 1, "", "static_minimum"], [611, 4, 1, "", "static_multiply"], [246, 4, 1, "", "static_native_array"], [616, 4, 1, "", "static_negative"], [621, 4, 1, "", "static_not_equal"], [249, 4, 1, "", "static_ones"], [254, 4, 1, "", "static_ones_like"], [824, 4, 1, "", "static_optimizer_update"], [916, 4, 1, "", "static_outer"], [626, 4, 1, "", "static_positive"], [631, 4, 1, "", "static_pow"], [924, 4, 1, "", "static_qr"], [1081, 4, 1, "", "static_randint"], [1086, 4, 1, "", "static_random_normal"], [1091, 4, 1, "", "static_random_uniform"], [179, 4, 1, "", "static_relu"], [636, 4, 1, "", "static_remainder"], [1015, 4, 1, "", "static_repeat"], [1020, 4, 1, "", "static_reshape"], [351, 4, 1, "", "static_result_type"], [1025, 4, 1, "", "static_roll"], [641, 4, 1, "", "static_round"], [184, 4, 1, "", "static_sigmoid"], [646, 4, 1, "", "static_sign"], [651, 4, 1, "", "static_sin"], [656, 4, 1, "", "static_sinh"], [928, 4, 1, "", "static_slogdet"], [189, 4, 1, "", "static_softmax"], [194, 4, 1, "", "static_softplus"], [933, 4, 1, "", "static_solve"], [1130, 4, 1, "", "static_sort"], [984, 4, 1, "", "static_sparse_cross_entropy"], [661, 4, 1, "", "static_sqrt"], [666, 4, 1, "", "static_square"], [772, 4, 1, "", "static_stable_divide"], [668, 4, 1, "", "static_subtract"], [935, 4, 1, "", "static_svd"], [940, 4, 1, "", "static_svdvals"], [673, 4, 1, "", "static_tan"], [196, 4, 1, "", "static_tanh"], [945, 4, 1, "", "static_tensordot"], [388, 4, 1, "", "static_to_device"], [780, 4, 1, "", "static_to_numpy"], [950, 4, 1, "", "static_trace"], [256, 4, 1, "", "static_tril"], [261, 4, 1, "", "static_triu"], [679, 4, 1, "", "static_trunc"], [1101, 4, 1, "", "static_unique_all"], [1106, 4, 1, "", "static_unique_counts"], [1111, 4, 1, "", "static_unique_inverse"], [1116, 4, 1, "", "static_unique_values"], [1161, 4, 1, "", "static_var"], [829, 4, 1, "", "static_variable"], [955, 4, 1, "", "static_vecdot"], [960, 4, 1, "", "static_vector_norm"], [965, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [266, 4, 1, "", "static_zeros"], [269, 4, 1, "", "static_zeros_like"], [1154, 4, 1, "", "std"], [670, 4, 1, "", "subtract"], [1158, 4, 1, "", "sum"], [937, 4, 1, "", "svd"], [942, 4, 1, "", "svdvals"], [1037, 4, 1, "", "swapaxes"], [675, 4, 1, "", "tan"], [198, 4, 1, "", "tanh"], [947, 4, 1, "", "tensordot"], [1041, 4, 1, "", "tile"], [390, 4, 1, "", "to_device"], [782, 4, 1, "", "to_numpy"], [952, 4, 1, "", "trace"], [258, 4, 1, "", "tril"], [263, 4, 1, "", "triu"], [681, 4, 1, "", "trunc"], [1103, 4, 1, "", "unique_all"], [1108, 4, 1, "", "unique_counts"], [1113, 4, 1, "", "unique_inverse"], [1118, 4, 1, "", "unique_values"], [1163, 4, 1, "", "var"], [831, 4, 1, "", "variable"], [957, 4, 1, "", "vecdot"], [962, 4, 1, "", "vector_norm"], [967, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1045, 4, 1, "", "zero_pad"], [271, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[79, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[79, 2, 1, "", "empty_like"], [79, 2, 1, "", "from_dlpack"], [79, 2, 1, "", "full_like"], [79, 2, 1, "", "meshgrid"], [79, 2, 1, "", "native_array"], [79, 2, 1, "", "ones_like"], [79, 2, 1, "", "static_arange"], [79, 2, 1, "", "static_asarray"], [79, 2, 1, "", "static_empty_like"], [79, 2, 1, "", "static_eye"], [79, 2, 1, "", "static_from_dlpack"], [79, 2, 1, "", "static_full_like"], [79, 2, 1, "", "static_linspace"], [79, 2, 1, "", "static_logspace"], [79, 2, 1, "", "static_meshgrid"], [79, 2, 1, "", "static_native_array"], [79, 2, 1, "", "static_ones"], [79, 2, 1, "", "static_ones_like"], [79, 2, 1, "", "static_tril"], [79, 2, 1, "", "static_triu"], [79, 2, 1, "", "static_zeros"], [79, 2, 1, "", "static_zeros_like"], [79, 2, 1, "", "tril"], [79, 2, 1, "", "triu"], [79, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[81, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[81, 2, 1, "", "astype"], [81, 2, 1, "", "broadcast_arrays"], [81, 2, 1, "", "broadcast_to"], [81, 2, 1, "", "can_cast"], [81, 2, 1, "", "dtype"], [81, 2, 1, "", "finfo"], [81, 2, 1, "", "iinfo"], [81, 2, 1, "", "is_bool_dtype"], [81, 2, 1, "", "is_float_dtype"], [81, 2, 1, "", "is_int_dtype"], [81, 2, 1, "", "is_uint_dtype"], [81, 2, 1, "", "result_type"], [81, 2, 1, "", "static_astype"], [81, 2, 1, "", "static_broadcast_arrays"], [81, 2, 1, "", "static_broadcast_to"], [81, 2, 1, "", "static_can_cast"], [81, 2, 1, "", "static_default_float_dtype"], [81, 2, 1, "", "static_dtype"], [81, 2, 1, "", "static_finfo"], [81, 2, 1, "", "static_function_supported_dtypes"], [81, 2, 1, "", "static_function_unsupported_dtypes"], [81, 2, 1, "", "static_iinfo"], [81, 2, 1, "", "static_is_bool_dtype"], [81, 2, 1, "", "static_is_float_dtype"], [81, 2, 1, "", "static_is_int_dtype"], [81, 2, 1, "", "static_is_uint_dtype"], [81, 2, 1, "", "static_result_type"]], "ivy.container.device": [[83, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[83, 2, 1, "", "dev"], [83, 2, 1, "", "static_dev"], [83, 2, 1, "", "static_to_device"], [83, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[85, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[85, 2, 1, "", "abs"], [85, 2, 1, "", "acos"], [85, 2, 1, "", "acosh"], [85, 2, 1, "", "add"], [85, 2, 1, "", "asin"], [85, 2, 1, "", "asinh"], [85, 2, 1, "", "atan"], [85, 2, 1, "", "atan2"], [85, 2, 1, "", "atanh"], [85, 2, 1, "", "bitwise_and"], [85, 2, 1, "", "bitwise_invert"], [85, 2, 1, "", "bitwise_left_shift"], [85, 2, 1, "", "bitwise_or"], [85, 2, 1, "", "bitwise_right_shift"], [85, 2, 1, "", "bitwise_xor"], [85, 2, 1, "", "ceil"], [85, 2, 1, "", "cos"], [85, 2, 1, "", "cosh"], [85, 2, 1, "", "divide"], [85, 2, 1, "", "equal"], [85, 2, 1, "", "erf"], [85, 2, 1, "", "exp"], [85, 2, 1, "", "expm1"], [85, 2, 1, "", "floor"], [85, 2, 1, "", "floor_divide"], [85, 2, 1, "", "greater"], [85, 2, 1, "", "greater_equal"], [85, 2, 1, "", "isfinite"], [85, 2, 1, "", "isinf"], [85, 2, 1, "", "isnan"], [85, 2, 1, "", "less"], [85, 2, 1, "", "less_equal"], [85, 2, 1, "", "log"], [85, 2, 1, "", "log10"], [85, 2, 1, "", "log1p"], [85, 2, 1, "", "log2"], [85, 2, 1, "", "logaddexp"], [85, 2, 1, "", "logical_and"], [85, 2, 1, "", "logical_not"], [85, 2, 1, "", "logical_or"], [85, 2, 1, "", "logical_xor"], [85, 2, 1, "", "minimum"], [85, 2, 1, "", "multiply"], [85, 2, 1, "", "negative"], [85, 2, 1, "", "not_equal"], [85, 2, 1, "", "positive"], [85, 2, 1, "", "pow"], [85, 2, 1, "", "remainder"], [85, 2, 1, "", "round"], [85, 2, 1, "", "sign"], [85, 2, 1, "", "sin"], [85, 2, 1, "", "sinh"], [85, 2, 1, "", "sqrt"], [85, 2, 1, "", "square"], [85, 2, 1, "", "static_abs"], [85, 2, 1, "", "static_acos"], [85, 2, 1, "", "static_acosh"], [85, 2, 1, "", "static_add"], [85, 2, 1, "", "static_asin"], [85, 2, 1, "", "static_asinh"], [85, 2, 1, "", "static_atan"], [85, 2, 1, "", "static_atan2"], [85, 2, 1, "", "static_atanh"], [85, 2, 1, "", "static_bitwise_and"], [85, 2, 1, "", "static_bitwise_invert"], [85, 2, 1, "", "static_bitwise_left_shift"], [85, 2, 1, "", "static_bitwise_or"], [85, 2, 1, "", "static_bitwise_right_shift"], [85, 2, 1, "", "static_bitwise_xor"], [85, 2, 1, "", "static_ceil"], [85, 2, 1, "", "static_cos"], [85, 2, 1, "", "static_cosh"], [85, 2, 1, "", "static_divide"], [85, 2, 1, "", "static_equal"], [85, 2, 1, "", "static_erf"], [85, 2, 1, "", "static_exp"], [85, 2, 1, "", "static_expm1"], [85, 2, 1, "", "static_floor"], [85, 2, 1, "", "static_floor_divide"], [85, 2, 1, "", "static_greater"], [85, 2, 1, "", "static_greater_equal"], [85, 2, 1, "", "static_isfinite"], [85, 2, 1, "", "static_isinf"], [85, 2, 1, "", "static_isnan"], [85, 2, 1, "", "static_less"], [85, 2, 1, "", "static_less_equal"], [85, 2, 1, "", "static_log"], [85, 2, 1, "", "static_log10"], [85, 2, 1, "", "static_log1p"], [85, 2, 1, "", "static_log2"], [85, 2, 1, "", "static_logaddexp"], [85, 2, 1, "", "static_logical_and"], [85, 2, 1, "", "static_logical_not"], [85, 2, 1, "", "static_logical_or"], [85, 2, 1, "", "static_logical_xor"], [85, 2, 1, "", "static_minimum"], [85, 2, 1, "", "static_multiply"], [85, 2, 1, "", "static_negative"], [85, 2, 1, "", "static_not_equal"], [85, 2, 1, "", "static_positive"], [85, 2, 1, "", "static_pow"], [85, 2, 1, "", "static_remainder"], [85, 2, 1, "", "static_round"], [85, 2, 1, "", "static_sign"], [85, 2, 1, "", "static_sin"], [85, 2, 1, "", "static_sinh"], [85, 2, 1, "", "static_sqrt"], [85, 2, 1, "", "static_square"], [85, 2, 1, "", "static_subtract"], [85, 2, 1, "", "static_tan"], [85, 2, 1, "", "static_tanh"], [85, 2, 1, "", "static_trunc"], [85, 2, 1, "", "subtract"], [85, 2, 1, "", "tan"], [85, 2, 1, "", "tanh"], [85, 2, 1, "", "trunc"]], "ivy.container.general": [[87, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[87, 2, 1, "", "all_equal"], [87, 2, 1, "", "clip_vector_norm"], [87, 2, 1, "", "einops_reduce"], [87, 2, 1, "", "einops_repeat"], [87, 2, 1, "", "gather"], [87, 2, 1, "", "gather_nd"], [87, 2, 1, "", "stable_divide"], [87, 2, 1, "", "static_all_equal"], [87, 2, 1, "", "static_clip_vector_norm"], [87, 2, 1, "", "static_einops_reduce"], [87, 2, 1, "", "static_einops_repeat"], [87, 2, 1, "", "static_gather"], [87, 2, 1, "", "static_gather_nd"], [87, 2, 1, "", "static_stable_divide"], [87, 2, 1, "", "static_to_numpy"], [87, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[89, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[89, 2, 1, "", "adam_step"], [89, 2, 1, "", "adam_update"], [89, 2, 1, "", "gradient_descent_update"], [89, 2, 1, "", "is_variable"], [89, 2, 1, "", "lamb_update"], [89, 2, 1, "", "lars_update"], [89, 2, 1, "", "optimizer_update"], [89, 2, 1, "", "static_adam_step"], [89, 2, 1, "", "static_adam_update"], [89, 2, 1, "", "static_execute_with_gradients"], [89, 2, 1, "", "static_gradient_descent_update"], [89, 2, 1, "", "static_is_variable"], [89, 2, 1, "", "static_lamb_update"], [89, 2, 1, "", "static_lars_update"], [89, 2, 1, "", "static_optimizer_update"], [89, 2, 1, "", "static_variable"], [89, 2, 1, "", "variable"]], "ivy.container.image": [[91, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[93, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[93, 2, 1, "", "conv1d"], [93, 2, 1, "", "depthwise_conv2d"], [93, 2, 1, "", "static_conv1d"], [93, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[95, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[95, 2, 1, "", "cholesky"], [95, 2, 1, "", "cross"], [95, 2, 1, "", "det"], [95, 2, 1, "", "diagonal"], [95, 2, 1, "", "eigh"], [95, 2, 1, "", "inv"], [95, 2, 1, "", "matmul"], [95, 2, 1, "", "matrix_norm"], [95, 2, 1, "", "matrix_power"], [95, 2, 1, "", "matrix_rank"], [95, 2, 1, "", "matrix_transpose"], [95, 2, 1, "", "outer"], [95, 2, 1, "", "qr"], [95, 2, 1, "", "slogdet"], [95, 2, 1, "", "solve"], [95, 2, 1, "", "static_cholesky"], [95, 2, 1, "", "static_cross"], [95, 2, 1, "", "static_det"], [95, 2, 1, "", "static_diagonal"], [95, 2, 1, "", "static_inv"], [95, 2, 1, "", "static_matrix_norm"], [95, 2, 1, "", "static_matrix_power"], [95, 2, 1, "", "static_matrix_rank"], [95, 2, 1, "", "static_matrix_transpose"], [95, 2, 1, "", "static_outer"], [95, 2, 1, "", "static_qr"], [95, 2, 1, "", "static_slogdet"], [95, 2, 1, "", "static_solve"], [95, 2, 1, "", "static_svd"], [95, 2, 1, "", "static_svdvals"], [95, 2, 1, "", "static_tensordot"], [95, 2, 1, "", "static_trace"], [95, 2, 1, "", "static_vecdot"], [95, 2, 1, "", "static_vector_norm"], [95, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [95, 2, 1, "", "svd"], [95, 2, 1, "", "svdvals"], [95, 2, 1, "", "tensordot"], [95, 2, 1, "", "trace"], [95, 2, 1, "", "vecdot"], [95, 2, 1, "", "vector_norm"], [95, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[97, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[97, 2, 1, "", "binary_cross_entropy"], [97, 2, 1, "", "cross_entropy"], [97, 2, 1, "", "sparse_cross_entropy"], [97, 2, 1, "", "static_binary_cross_entropy"], [97, 2, 1, "", "static_cross_entropy"], [97, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[99, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[99, 2, 1, "", "clip"], [99, 2, 1, "", "concat"], [99, 2, 1, "", "constant_pad"], [99, 2, 1, "", "expand_dims"], [99, 2, 1, "", "flip"], [99, 2, 1, "", "permute_dims"], [99, 2, 1, "", "repeat"], [99, 2, 1, "", "reshape"], [99, 2, 1, "", "roll"], [99, 2, 1, "", "squeeze"], [99, 2, 1, "", "stack"], [99, 2, 1, "", "static_clip"], [99, 2, 1, "", "static_repeat"], [99, 2, 1, "", "static_reshape"], [99, 2, 1, "", "static_roll"], [99, 2, 1, "", "swapaxes"], [99, 2, 1, "", "tile"], [99, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[101, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[101, 2, 1, "", "layer_norm"], [101, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[103, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[103, 2, 1, "", "randint"], [103, 2, 1, "", "random_normal"], [103, 2, 1, "", "random_uniform"], [103, 2, 1, "", "static_randint"], [103, 2, 1, "", "static_random_normal"], [103, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[105, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[107, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[107, 2, 1, "", "static_unique_all"], [107, 2, 1, "", "static_unique_counts"], [107, 2, 1, "", "static_unique_inverse"], [107, 2, 1, "", "static_unique_values"], [107, 2, 1, "", "unique_all"], [107, 2, 1, "", "unique_counts"], [107, 2, 1, "", "unique_inverse"], [107, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[109, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[109, 2, 1, "", "argsort"], [109, 2, 1, "", "sort"], [109, 2, 1, "", "static_argsort"], [109, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[111, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[111, 2, 1, "", "einsum"], [111, 2, 1, "", "max"], [111, 2, 1, "", "mean"], [111, 2, 1, "", "min"], [111, 2, 1, "", "prod"], [111, 2, 1, "", "static_var"], [111, 2, 1, "", "std"], [111, 2, 1, "", "sum"], [111, 2, 1, "", "var"]], "ivy.container.utility": [[113, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[113, 2, 1, "", "all"], [113, 2, 1, "", "any"], [113, 2, 1, "", "static_all"], [113, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[115, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[155, 4, 1, "", "handle_nestable"], [156, 4, 1, "", "handle_out_argument"], [157, 4, 1, "", "infer_device"], [158, 4, 1, "", "infer_dtype"], [159, 4, 1, "", "inputs_to_ivy_arrays"], [160, 4, 1, "", "inputs_to_native_arrays"], [161, 4, 1, "", "outputs_to_ivy_arrays"], [162, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[164, 0, 0, "-", "activations"], [200, 0, 0, "-", "compilation"], [202, 0, 0, "-", "constants"], [203, 0, 0, "-", "creation"], [273, 0, 0, "-", "data_type"], [362, 0, 0, "-", "device"], [396, 0, 0, "-", "elementwise"], [683, 0, 0, "-", "general"], [791, 0, 0, "-", "gradients"], [835, 0, 0, "-", "layers"], [856, 0, 0, "-", "linear_algebra"], [969, 0, 0, "-", "losses"], [985, 0, 0, "-", "manipulation"], [1047, 0, 0, "-", "meta"], [1051, 0, 0, "-", "nest"], [1069, 0, 0, "-", "norms"], [1075, 0, 0, "-", "random"], [1094, 0, 0, "-", "searching"], [1099, 0, 0, "-", "set"], [1120, 0, 0, "-", "sorting"], [1131, 0, 0, "-", "statistical"], [1165, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[168, 4, 1, "", "gelu"], [173, 4, 1, "", "leaky_relu"], [178, 4, 1, "", "relu"], [183, 4, 1, "", "sigmoid"], [188, 4, 1, "", "softmax"], [193, 4, 1, "", "softplus"], [199, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[201, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[202, 5, 1, "", "e"], [202, 5, 1, "", "inf"], [202, 5, 1, "", "nan"], [202, 5, 1, "", "newaxis"], [202, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[205, 4, 1, "", "arange"], [203, 4, 1, "", "array"], [209, 4, 1, "", "asarray"], [211, 4, 1, "", "empty"], [215, 4, 1, "", "empty_like"], [218, 4, 1, "", "eye"], [223, 4, 1, "", "from_dlpack"], [225, 4, 1, "", "full"], [229, 4, 1, "", "full_like"], [232, 4, 1, "", "linspace"], [235, 4, 1, "", "logspace"], [240, 4, 1, "", "meshgrid"], [245, 4, 1, "", "native_array"], [248, 4, 1, "", "ones"], [253, 4, 1, "", "ones_like"], [259, 4, 1, "", "tril"], [264, 4, 1, "", "triu"], [267, 4, 1, "", "zeros"], [272, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[273, 1, 1, "", "DefaultDtype"], [273, 1, 1, "", "DefaultFloatDtype"], [273, 1, 1, "", "DefaultIntDtype"], [273, 1, 1, "", "DefaultUintDtype"], [274, 4, 1, "", "as_ivy_dtype"], [275, 4, 1, "", "as_native_dtype"], [279, 4, 1, "", "astype"], [284, 4, 1, "", "broadcast_arrays"], [289, 4, 1, "", "broadcast_to"], [294, 4, 1, "", "can_cast"], [296, 4, 1, "", "closest_valid_dtype"], [297, 4, 1, "", "default_dtype"], [299, 4, 1, "", "default_float_dtype"], [301, 4, 1, "", "default_int_dtype"], [302, 4, 1, "", "default_uint_dtype"], [306, 4, 1, "", "dtype"], [308, 4, 1, "", "dtype_bits"], [312, 4, 1, "", "finfo"], [315, 4, 1, "", "function_supported_dtypes"], [318, 4, 1, "", "function_unsupported_dtypes"], [323, 4, 1, "", "iinfo"], [325, 4, 1, "", "invalid_dtype"], [329, 4, 1, "", "is_bool_dtype"], [334, 4, 1, "", "is_float_dtype"], [339, 4, 1, "", "is_int_dtype"], [344, 4, 1, "", "is_uint_dtype"], [346, 4, 1, "", "promote_types"], [350, 4, 1, "", "result_type"], [352, 4, 1, "", "set_default_dtype"], [353, 4, 1, "", "set_default_float_dtype"], [354, 4, 1, "", "set_default_int_dtype"], [355, 4, 1, "", "set_default_uint_dtype"], [356, 4, 1, "", "type_promote_arrays"], [357, 4, 1, "", "unset_default_dtype"], [358, 4, 1, "", "unset_default_float_dtype"], [359, 4, 1, "", "unset_default_int_dtype"], [360, 4, 1, "", "unset_default_uint_dtype"], [361, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[362, 1, 1, "", "DefaultDevice"], [363, 1, 1, "", "Profiler"], [364, 4, 1, "", "as_ivy_dev"], [365, 4, 1, "", "as_native_dev"], [366, 4, 1, "", "clear_mem_on_dev"], [367, 4, 1, "", "default_device"], [371, 4, 1, "", "dev"], [373, 4, 1, "", "dev_util"], [374, 4, 1, "", "function_supported_devices"], [375, 4, 1, "", "function_unsupported_devices"], [376, 4, 1, "", "get_all_ivy_arrays_on_dev"], [377, 4, 1, "", "gpu_is_available"], [378, 4, 1, "", "num_cpu_cores"], [379, 4, 1, "", "num_gpus"], [380, 4, 1, "", "num_ivy_arrays_on_dev"], [381, 4, 1, "", "percent_used_mem_on_dev"], [382, 4, 1, "", "print_all_ivy_arrays_on_dev"], [383, 4, 1, "", "set_default_device"], [384, 4, 1, "", "set_split_factor"], [385, 4, 1, "", "split_factor"], [386, 4, 1, "", "split_func_call"], [391, 4, 1, "", "to_device"], [392, 4, 1, "", "total_mem_on_dev"], [393, 4, 1, "", "tpu_is_available"], [394, 4, 1, "", "unset_default_device"], [395, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[362, 2, 1, "", "__enter__"], [362, 2, 1, "", "__exit__"], [362, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[363, 2, 1, "", "__init__"], [363, 2, 1, "", "start"], [363, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[400, 4, 1, "", "abs"], [405, 4, 1, "", "acos"], [410, 4, 1, "", "acosh"], [415, 4, 1, "", "add"], [420, 4, 1, "", "asin"], [425, 4, 1, "", "asinh"], [430, 4, 1, "", "atan"], [435, 4, 1, "", "atan2"], [440, 4, 1, "", "atanh"], [445, 4, 1, "", "bitwise_and"], [450, 4, 1, "", "bitwise_invert"], [455, 4, 1, "", "bitwise_left_shift"], [460, 4, 1, "", "bitwise_or"], [465, 4, 1, "", "bitwise_right_shift"], [470, 4, 1, "", "bitwise_xor"], [475, 4, 1, "", "ceil"], [480, 4, 1, "", "cos"], [485, 4, 1, "", "cosh"], [490, 4, 1, "", "divide"], [495, 4, 1, "", "equal"], [500, 4, 1, "", "erf"], [505, 4, 1, "", "exp"], [510, 4, 1, "", "expm1"], [515, 4, 1, "", "floor"], [520, 4, 1, "", "floor_divide"], [525, 4, 1, "", "greater"], [530, 4, 1, "", "greater_equal"], [535, 4, 1, "", "isfinite"], [540, 4, 1, "", "isinf"], [545, 4, 1, "", "isnan"], [550, 4, 1, "", "less"], [555, 4, 1, "", "less_equal"], [560, 4, 1, "", "log"], [565, 4, 1, "", "log10"], [570, 4, 1, "", "log1p"], [575, 4, 1, "", "log2"], [580, 4, 1, "", "logaddexp"], [585, 4, 1, "", "logical_and"], [590, 4, 1, "", "logical_not"], [595, 4, 1, "", "logical_or"], [600, 4, 1, "", "logical_xor"], [602, 4, 1, "", "maximum"], [605, 4, 1, "", "minimum"], [610, 4, 1, "", "multiply"], [615, 4, 1, "", "negative"], [620, 4, 1, "", "not_equal"], [625, 4, 1, "", "positive"], [630, 4, 1, "", "pow"], [635, 4, 1, "", "remainder"], [640, 4, 1, "", "round"], [645, 4, 1, "", "sign"], [650, 4, 1, "", "sin"], [655, 4, 1, "", "sinh"], [660, 4, 1, "", "sqrt"], [665, 4, 1, "", "square"], [671, 4, 1, "", "subtract"], [676, 4, 1, "", "tan"], [677, 4, 1, "", "tanh"], [682, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[687, 4, 1, "", "all_equal"], [689, 4, 1, "", "arg_info"], [690, 4, 1, "", "arg_names"], [691, 4, 1, "", "array_equal"], [692, 4, 1, "", "arrays_equal"], [693, 4, 1, "", "assert_supports_inplace"], [694, 4, 1, "", "cache_fn"], [695, 4, 1, "", "clip_matrix_norm"], [699, 4, 1, "", "clip_vector_norm"], [701, 4, 1, "", "container_types"], [702, 4, 1, "", "copy_array"], [703, 4, 1, "", "cumprod"], [704, 4, 1, "", "cumsum"], [705, 4, 1, "", "current_backend_str"], [706, 4, 1, "", "default"], [707, 4, 1, "", "einops_rearrange"], [711, 4, 1, "", "einops_reduce"], [716, 4, 1, "", "einops_repeat"], [718, 4, 1, "", "exists"], [719, 4, 1, "", "floormod"], [720, 4, 1, "", "fourier_encode"], [721, 4, 1, "", "function_supported_devices_and_dtypes"], [722, 4, 1, "", "function_unsupported_devices_and_dtypes"], [726, 4, 1, "", "gather"], [731, 4, 1, "", "gather_nd"], [733, 4, 1, "", "get_all_arrays_in_memory"], [734, 4, 1, "", "get_array_mode"], [735, 4, 1, "", "get_min_base"], [736, 4, 1, "", "get_min_denominator"], [737, 4, 1, "", "get_nestable_mode"], [738, 4, 1, "", "get_num_dims"], [739, 4, 1, "", "get_referrers_recursive"], [740, 4, 1, "", "has_nans"], [741, 4, 1, "", "indices_where"], [742, 4, 1, "", "inplace_arrays_supported"], [743, 4, 1, "", "inplace_decrement"], [744, 4, 1, "", "inplace_increment"], [745, 4, 1, "", "inplace_update"], [746, 4, 1, "", "inplace_variables_supported"], [747, 4, 1, "", "is_array"], [748, 4, 1, "", "is_ivy_array"], [749, 4, 1, "", "is_ivy_container"], [750, 4, 1, "", "is_native_array"], [751, 4, 1, "", "match_kwargs"], [752, 4, 1, "", "multiprocessing"], [753, 4, 1, "", "num_arrays_in_memory"], [754, 4, 1, "", "one_hot"], [755, 4, 1, "", "print_all_arrays_in_memory"], [756, 4, 1, "", "queue_timeout"], [757, 4, 1, "", "scatter_flat"], [758, 4, 1, "", "scatter_nd"], [759, 4, 1, "", "set_array_mode"], [760, 4, 1, "", "set_min_base"], [761, 4, 1, "", "set_min_denominator"], [762, 4, 1, "", "set_nestable_mode"], [763, 4, 1, "", "set_queue_timeout"], [764, 4, 1, "", "set_shape_array_mode"], [765, 4, 1, "", "set_tmp_dir"], [766, 4, 1, "", "shape"], [767, 4, 1, "", "shape_array_mode"], [771, 4, 1, "", "stable_divide"], [773, 4, 1, "", "stable_pow"], [774, 4, 1, "", "supports_inplace"], [775, 4, 1, "", "tmp_dir"], [776, 4, 1, "", "to_ivy_shape"], [777, 4, 1, "", "to_list"], [778, 4, 1, "", "to_native_shape"], [783, 4, 1, "", "to_numpy"], [784, 4, 1, "", "to_scalar"], [785, 4, 1, "", "try_else_none"], [786, 4, 1, "", "unset_array_mode"], [787, 4, 1, "", "unset_nestable_mode"], [788, 4, 1, "", "unset_shape_array_mode"], [789, 4, 1, "", "unstack"], [790, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[791, 1, 1, "", "GradientTracking"], [795, 4, 1, "", "adam_step"], [799, 4, 1, "", "adam_update"], [802, 4, 1, "", "execute_with_gradients"], [806, 4, 1, "", "gradient_descent_update"], [811, 4, 1, "", "is_variable"], [815, 4, 1, "", "lamb_update"], [819, 4, 1, "", "lars_update"], [823, 4, 1, "", "optimizer_update"], [825, 4, 1, "", "set_with_grads"], [826, 4, 1, "", "stop_gradient"], [827, 4, 1, "", "unset_with_grads"], [832, 4, 1, "", "variable"], [833, 4, 1, "", "variable_data"], [834, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[791, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[839, 4, 1, "", "conv1d"], [841, 4, 1, "", "conv1d_transpose"], [842, 4, 1, "", "conv2d"], [843, 4, 1, "", "conv2d_transpose"], [844, 4, 1, "", "conv3d"], [845, 4, 1, "", "conv3d_transpose"], [849, 4, 1, "", "depthwise_conv2d"], [851, 4, 1, "", "dropout"], [852, 4, 1, "", "linear"], [853, 4, 1, "", "lstm_update"], [854, 4, 1, "", "multi_head_attention"], [855, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[860, 4, 1, "", "cholesky"], [865, 4, 1, "", "cross"], [870, 4, 1, "", "det"], [875, 4, 1, "", "diagonal"], [880, 4, 1, "", "eigh"], [883, 4, 1, "", "eigvalsh"], [887, 4, 1, "", "inv"], [892, 4, 1, "", "matmul"], [896, 4, 1, "", "matrix_norm"], [900, 4, 1, "", "matrix_power"], [905, 4, 1, "", "matrix_rank"], [910, 4, 1, "", "matrix_transpose"], [915, 4, 1, "", "outer"], [919, 4, 1, "", "pinv"], [923, 4, 1, "", "qr"], [927, 4, 1, "", "slogdet"], [932, 4, 1, "", "solve"], [938, 4, 1, "", "svd"], [943, 4, 1, "", "svdvals"], [948, 4, 1, "", "tensordot"], [953, 4, 1, "", "trace"], [958, 4, 1, "", "vecdot"], [963, 4, 1, "", "vector_norm"], [968, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[973, 4, 1, "", "binary_cross_entropy"], [978, 4, 1, "", "cross_entropy"], [983, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[989, 4, 1, "", "clip"], [994, 4, 1, "", "concat"], [998, 4, 1, "", "constant_pad"], [1002, 4, 1, "", "expand_dims"], [1006, 4, 1, "", "flip"], [1010, 4, 1, "", "permute_dims"], [1014, 4, 1, "", "repeat"], [1019, 4, 1, "", "reshape"], [1024, 4, 1, "", "roll"], [1026, 4, 1, "", "split"], [1030, 4, 1, "", "squeeze"], [1034, 4, 1, "", "stack"], [1038, 4, 1, "", "swapaxes"], [1042, 4, 1, "", "tile"], [1046, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1048, 4, 1, "", "fomaml_step"], [1049, 4, 1, "", "maml_step"], [1050, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1052, 4, 1, "", "all_nested_indices"], [1053, 4, 1, "", "copy_nest"], [1054, 4, 1, "", "index_nest"], [1055, 4, 1, "", "insert_into_nest_at_index"], [1056, 4, 1, "", "insert_into_nest_at_indices"], [1057, 4, 1, "", "map"], [1058, 4, 1, "", "map_nest_at_index"], [1059, 4, 1, "", "map_nest_at_indices"], [1060, 4, 1, "", "multi_index_nest"], [1061, 4, 1, "", "nested_any"], [1062, 4, 1, "", "nested_indices_where"], [1063, 4, 1, "", "nested_map"], [1064, 4, 1, "", "nested_multi_map"], [1065, 4, 1, "", "prune_nest_at_index"], [1066, 4, 1, "", "prune_nest_at_indices"], [1067, 4, 1, "", "set_nest_at_index"], [1068, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1073, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1076, 4, 1, "", "multinomial"], [1080, 4, 1, "", "randint"], [1085, 4, 1, "", "random_normal"], [1090, 4, 1, "", "random_uniform"], [1092, 4, 1, "", "seed"], [1093, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1095, 4, 1, "", "argmax"], [1096, 4, 1, "", "argmin"], [1097, 4, 1, "", "nonzero"], [1098, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1104, 4, 1, "", "unique_all"], [1109, 4, 1, "", "unique_counts"], [1114, 4, 1, "", "unique_inverse"], [1119, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1124, 4, 1, "", "argsort"], [1129, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1135, 4, 1, "", "einsum"], [1139, 4, 1, "", "max"], [1143, 4, 1, "", "mean"], [1147, 4, 1, "", "min"], [1151, 4, 1, "", "prod"], [1155, 4, 1, "", "std"], [1159, 4, 1, "", "sum"], [1164, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1169, 4, 1, "", "all"], [1174, 4, 1, "", "any"]], "ivy.inspection": [[1180, 4, 1, "", "add_array_specs"], [1181, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1184, 0, 0, "-", "activations"], [1187, 0, 0, "-", "converters"], [1189, 0, 0, "-", "initializers"], [1195, 0, 0, "-", "layers"], [1207, 0, 0, "-", "module"], [1209, 0, 0, "-", "norms"], [1211, 0, 0, "-", "optimizers"], [1217, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1185, 1, 1, "", "GEGLU"], [1186, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1185, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1186, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1188, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1189, 1, 1, "", "Constant"], [1190, 1, 1, "", "FirstLayerSiren"], [1191, 1, 1, "", "GlorotUniform"], [1189, 1, 1, "", "KaimingNormal"], [1192, 1, 1, "", "Ones"], [1193, 1, 1, "", "Siren"], [1189, 1, 1, "", "Uniform"], [1194, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1190, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1191, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1192, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1193, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1194, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1196, 1, 1, "", "Conv1D"], [1197, 1, 1, "", "Conv1DTranspose"], [1198, 1, 1, "", "Conv2D"], [1199, 1, 1, "", "Conv2DTranspose"], [1200, 1, 1, "", "Conv3D"], [1201, 1, 1, "", "Conv3DTranspose"], [1202, 1, 1, "", "DepthwiseConv2D"], [1203, 1, 1, "", "Dropout"], [1204, 1, 1, "", "LSTM"], [1205, 1, 1, "", "Linear"], [1206, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1196, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1197, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1198, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1199, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1200, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1201, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1202, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1203, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1204, 2, 1, "", "__init__"], [1204, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1205, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1206, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1208, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1208, 2, 1, "", "__init__"], [1208, 2, 1, "", "build"], [1208, 3, 1, "", "build_mode"], [1208, 3, 1, "", "built"], [1208, 2, 1, "", "check_submod_rets"], [1208, 2, 1, "", "get_mod_key"], [1208, 2, 1, "", "mod_depth"], [1208, 2, 1, "", "mod_height"], [1208, 2, 1, "", "mod_with_top_mod_key_chain"], [1208, 2, 1, "", "save_weights"], [1208, 2, 1, "", "show_mod_in_top_mod"], [1208, 2, 1, "", "show_structure"], [1208, 2, 1, "", "show_v_in_top_v"], [1208, 2, 1, "", "sub_mods"], [1208, 2, 1, "", "track_submod_call_order"], [1208, 2, 1, "", "track_submod_rets"], [1208, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1210, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1210, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1212, 1, 1, "", "Adam"], [1213, 1, 1, "", "LAMB"], [1214, 1, 1, "", "LARS"], [1215, 1, 1, "", "Optimizer"], [1216, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1212, 2, 1, "", "__init__"], [1212, 2, 1, "", "set_state"], [1212, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1213, 2, 1, "", "__init__"], [1213, 2, 1, "", "set_state"], [1213, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1214, 2, 1, "", "__init__"], [1214, 2, 1, "", "set_state"], [1214, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1215, 2, 1, "", "__init__"], [1215, 2, 1, "", "set_state"], [1215, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1216, 2, 1, "", "__init__"], [1216, 2, 1, "", "set_state"], [1216, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1218, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1218, 2, 1, "", "__init__"]], "ivy.verbosity": [[1221, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 117, 127, 136, 153], "handler": [0, 136], "choose_random_backend": 1, "clear_backend_stack": 2, "current_backend": 3, "get_backend": 4, "set_backend": 5, "try_import_ivy_jax": 6, "try_import_ivy_mxnet": 7, "try_import_ivy_numpi": 8, "try_import_ivy_tf": 9, "try_import_ivy_torch": 10, "unset_backend": 11, "background": [12, 1176], "ml": 13, "explos": 13, "standard": 14, "skeptic": 14, "complimentari": 14, "v": [14, 153], "competit": 14, "do": [14, 123], "work": [14, 20], "The": [14, 18, 138, 153], "arrai": [14, 22, 25, 118, 122, 129, 138, 166, 171, 176, 181, 186, 191, 197, 208, 213, 221, 227, 238, 243, 251, 257, 262, 270, 277, 282, 287, 292, 304, 310, 321, 327, 332, 337, 342, 348, 369, 389, 398, 403, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 608, 613, 618, 623, 628, 633, 638, 643, 648, 653, 658, 663, 669, 674, 680, 685, 697, 709, 714, 724, 729, 769, 781, 793, 809, 830, 837, 847, 858, 863, 868, 873, 878, 882, 885, 890, 894, 903, 908, 913, 918, 921, 930, 936, 941, 946, 951, 956, 961, 966, 971, 976, 981, 987, 992, 996, 1000, 1004, 1008, 1012, 1017, 1022, 1028, 1032, 1036, 1040, 1044, 1071, 1078, 1083, 1088, 1102, 1107, 1112, 1117, 1122, 1127, 1133, 1137, 1141, 1145, 1149, 1153, 1157, 1162, 1167, 1172], "api": [14, 19, 117, 122, 130, 136, 138, 140, 141], "why": [15, 123], "unifi": [15, 138], "No": [15, 17], "more": [15, 17], "re": 15, "implement": 15, "infinit": 15, "shelf": 15, "life": 15, "contribut": [16, 1176], "set": [17, 61, 106, 127, 1099], "up": 17, "clone": 17, "ivi": [17, 18, 117, 121, 123, 124, 125, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 205, 206, 208, 209, 210, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 299, 300, 304, 305, 306, 307, 310, 311, 312, 313, 315, 316, 318, 319, 321, 322, 323, 324, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 348, 349, 350, 351, 369, 370, 371, 372, 388, 389, 390, 391, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 682, 685, 686, 687, 688, 697, 698, 699, 700, 709, 710, 711, 712, 714, 715, 716, 717, 724, 725, 726, 727, 729, 730, 731, 732, 769, 770, 771, 772, 780, 781, 782, 783, 793, 794, 795, 796, 798, 799, 800, 802, 803, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 822, 823, 824, 829, 830, 831, 832, 837, 838, 839, 840, 847, 848, 849, 850, 858, 859, 860, 861, 863, 864, 865, 866, 868, 869, 870, 871, 873, 874, 875, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 918, 919, 921, 922, 923, 924, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 938, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 984, 987, 988, 989, 990, 992, 993, 994, 996, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1044, 1045, 1046, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175], "pycharm": [17, 18], "virtual": 17, "environ": 17, "docker": [17, 18, 20], "us": [17, 20, 139], "miniconda": [17, 20], "venv": [17, 20], "interpret": 17, "window": 17, "maco": 17, "ubuntu": 17, "detail": 17, "hypothesi": [17, 123], "log": [17, 557, 558, 559, 560], "github": 17, "codespac": 17, "pre": [17, 134], "commit": [17, 18, 134], "basic": 18, "get": 18, "help": 18, "todo": 18, "list": 18, "issu": 18, "manag": 18, "your": 18, "fork": 18, "who": 18, "To": 18, "ask": 18, "With": 18, "command": 18, "line": 18, "browser": 18, "pull": 18, "request": 18, "small": 18, "often": 18, "interact": 18, "contain": [18, 71, 76, 130, 139, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 196, 198, 206, 210, 214, 216, 219, 222, 224, 228, 230, 233, 236, 239, 241, 244, 246, 249, 252, 254, 256, 258, 261, 263, 266, 269, 271, 278, 280, 283, 285, 288, 290, 293, 295, 300, 305, 307, 311, 313, 316, 319, 322, 324, 328, 330, 333, 335, 338, 340, 343, 345, 349, 351, 370, 372, 388, 390, 399, 401, 404, 406, 409, 411, 414, 416, 419, 421, 424, 426, 429, 431, 434, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 668, 670, 673, 675, 679, 681, 686, 688, 698, 700, 710, 712, 715, 717, 725, 727, 730, 732, 770, 772, 780, 782, 794, 796, 798, 800, 803, 805, 807, 810, 812, 814, 816, 818, 820, 822, 824, 829, 831, 838, 840, 848, 850, 859, 861, 864, 866, 869, 871, 874, 876, 879, 886, 888, 891, 895, 897, 899, 901, 904, 906, 909, 911, 914, 916, 922, 924, 926, 928, 931, 933, 935, 937, 940, 942, 945, 947, 950, 952, 955, 957, 960, 962, 965, 967, 972, 974, 977, 979, 982, 984, 988, 990, 993, 997, 1001, 1005, 1009, 1013, 1015, 1018, 1020, 1023, 1025, 1029, 1033, 1037, 1041, 1045, 1072, 1074, 1079, 1081, 1084, 1086, 1089, 1091, 1101, 1103, 1106, 1108, 1111, 1113, 1116, 1118, 1123, 1125, 1128, 1130, 1134, 1138, 1142, 1146, 1150, 1154, 1158, 1161, 1163, 1168, 1170, 1173, 1175], "run": 18, "test": [18, 122, 123, 125], "local": 18, "most": 18, "out": [18, 118, 133], "id": 18, "open": 19, "task": 19, "function": [19, 118, 119, 123, 126, 128, 130, 131, 132, 136, 141, 153], "format": [19, 134], "frontend": [19, 124, 125, 141], "build": [20, 136], "doc": 20, "dockerless": 20, "document": 20, "pipelin": [20, 153], "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "data": [21, 35, 80, 123, 131, 139, 153, 273, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "class": [21, 138, 1183], "activ": [23, 72, 164, 1184], "arraywithactiv": 24, "convers": 28, "args_to_ivi": 29, "args_to_n": 30, "to_ivi": 31, "to_n": 32, "creation": [33, 78, 203], "arraywithcr": 34, "type": [35, 80, 126, 131, 153, 273], "arraywithdatatyp": 36, "devic": [37, 82, 118, 132, 362], "arraywithdevic": 38, "elementwis": [39, 84, 396], "arraywithelementwis": 40, "gener": [41, 86, 123, 683], "arraywithgener": 42, "gradient": [43, 88, 791], "arraywithgradi": 44, "imag": [45, 90], "arraywithimag": 46, "layer": [47, 92, 835, 1195], "arraywithlay": 48, "linear": [49, 94, 852, 856, 1205], "algebra": [49, 94, 856], "arraywithlinearalgebra": 50, "loss": [51, 96, 969], "arraywithloss": 52, "manipul": [53, 98, 985], "arraywithmanipul": 54, "norm": [55, 100, 1069, 1209], "arraywithnorm": 56, "random": [57, 102, 1075], "arraywithrandom": 58, "search": [59, 104, 1094], "arraywithsearch": 60, "arraywithset": 62, "sort": [63, 108, 1120, 1126, 1127, 1128, 1129], "arraywithsort": 64, "statist": [65, 110, 1131], "arraywithstatist": 66, "util": [67, 112, 1165], "arraywithutil": 68, "wrap": [69, 114, 128], "add_ivy_array_instance_method": 70, "containerwithactiv": 73, "base": 74, "containerbas": 75, "containerwithcr": 79, "containerwithdatatyp": 81, "containerwithdevic": 83, "containerwithelementwis": 85, "containerwithgener": 87, "containerwithgradi": 89, "containerwithimag": 91, "containerwithlay": 93, "containerwithlinearalgebra": 95, "containerwithloss": 97, "containerwithmanipul": 99, "containerwithnorm": 101, "containerwithrandom": 103, "containerwithsearch": 105, "containerwithset": 107, "containerwithsort": 109, "containerwithstatist": 111, "containerwithutil": 113, "add_ivy_container_instance_method": 115, "deep": 116, "dive": 116, "navig": 117, "code": 117, "categor": 117, "submodul": [117, 119], "design": [117, 135, 1176], "argument": [118, 131, 132, 133], "exampl": [118, 119, 121, 124, 125, 134], "dtype": [118, 303, 304, 305, 306], "number": 118, "oper": [118, 138, 153], "integ": 118, "sequenc": 118, "nestabl": [118, 126, 130], "helper": [119, 123], "1": 119, "2": 119, "docstr": [120, 121], "tan": [121, 125, 672, 674, 675, 676], "roll": [121, 1021, 1022, 1023, 1024], "add": [121, 412, 413, 414, 415], "import": 123, "strategi": 123, "integr": 123, "we": 123, "need": 123, "how": 123, "write": 123, "effect": 123, "bonu": 123, "extend": 123, "featur": 123, "self": 123, "consist": 123, "explicit": 123, "test_array_funct": 123, "introduct": [124, 125], "full": [125, 225], "primari": 126, "composit": 126, "mix": 126, "standalon": 126, "conveni": 126, "nativ": 129, "handl": [129, 153], "instanc": [130, 138], "method": [130, 138, 139], "static": 130, "special": 130, "modul": [131, 132, 140, 1207, 1208], "other": [131, 132], "unsupport": 131, "inplac": 133, "updat": 133, "copi": 133, "lint": 134, "check": [134, 153], "hook": 134, "automat": 134, "reformat": 134, "befor": 134, "block": 136, "framework": [136, 137, 1183], "graph": [136, 141], "compil": [136, 141, 200, 201], "monkei": 138, "patch": 138, "construct": 139, "represent": 139, "recurs": 139, "built": 139, "ins": 139, "access": 139, "save": 139, "load": 139, "comparison": 139, "custom": [139, 153], "case": 139, "compartment": 139, "configur": 139, "network": [139, 141], "weight": 139, "state": [140, 153], "initi": [140, 1189], "optim": [140, 1211, 1215], "transpil": 141, "role": 141, "convert": [141, 1187], "model": [141, 148, 153], "builder": 143, "ecosystem": 144, "gym": [145, 152], "mech": 146, "memori": [147, 152], "robot": [149, 152], "vision": [150, 152], "extens": [151, 1176], "appli": 152, "librari": 152, "mechan": 152, "faq": 153, "maintain": 153, "version": 153, "dynam": 153, "size": 153, "shape": [153, 766, 1099, 1100, 1104, 1105, 1109, 1115, 1119], "gpu": 153, "deploy": 153, "control": 153, "flow": 153, "auto": 153, "differenti": 153, "replica": 153, "parallel": 153, "support": 153, "altern": 153, "structur": 153, "func": 154, "wrapper": 154, "handle_nest": 155, "handle_out_argu": 156, "infer_devic": 157, "infer_dtyp": 158, "inputs_to_ivy_arrai": 159, "inputs_to_native_arrai": 160, "outputs_to_ivy_arrai": 161, "to_native_arrays_and_back": 162, "gelu": [165, 166, 167, 168, 1186], "static_gelu": 169, "leaky_relu": [170, 171, 172, 173], "static_leaky_relu": 174, "relu": [175, 176, 177, 178], "static_relu": 179, "sigmoid": [180, 181, 182, 183], "static_sigmoid": 184, "softmax": [185, 186, 187, 188], "static_softmax": 189, "softplu": [190, 191, 192, 193], "static_softplu": 194, "tanh": [195, 197, 198, 199, 677], "static_tanh": 196, "constant": 202, "note": [203, 220, 223], "arang": [204, 205], "static_arang": 206, "asarrai": [207, 208, 209], "static_asarrai": 210, "empti": 211, "empty_lik": [212, 213, 214, 215], "static_empty_lik": 216, "ey": [217, 218], "static_ey": 219, "from_dlpack": [220, 221, 222, 223], "static_from_dlpack": 224, "full_lik": [226, 227, 228, 229], "static_full_lik": 230, "linspac": [231, 232], "static_linspac": 233, "logspac": [234, 235], "static_logspac": 236, "meshgrid": [237, 238, 239, 240], "static_meshgrid": 241, "native_arrai": [242, 243, 244, 245], "static_native_arrai": 246, "ones": [247, 248], "static_on": 249, "ones_lik": [250, 251, 252, 253], "static_ones_lik": 254, "tril": [255, 257, 258, 259], "static_tril": 256, "triu": [260, 262, 263, 264], "static_triu": 261, "zero": [265, 267, 1194], "static_zero": 266, "zeros_lik": [268, 270, 271, 272], "static_zeros_lik": 269, "as_ivy_dtyp": 274, "as_native_dtyp": 275, "astyp": [276, 277, 278, 279], "static_astyp": 280, "broadcast_arrai": [281, 282, 283, 284], "static_broadcast_arrai": 285, "broadcast_to": [286, 287, 288, 289], "static_broadcast_to": 290, "can_cast": [291, 292, 293, 294], "static_can_cast": 295, "closest_valid_dtyp": 296, "default_dtyp": 297, "default_float_dtyp": [298, 299], "static_default_float_dtyp": 300, "default_int_dtyp": 301, "default_uint_dtyp": 302, "static_dtyp": 307, "dtype_bit": 308, "finfo": [309, 310, 311, 312], "static_finfo": 313, "function_supported_dtyp": [314, 315], "static_function_supported_dtyp": 316, "function_unsupported_dtyp": [317, 318], "static_function_unsupported_dtyp": 319, "iinfo": [320, 321, 322, 323], "static_iinfo": 324, "invalid_dtyp": 325, "is_bool_dtyp": [326, 327, 328, 329], "static_is_bool_dtyp": 330, "is_float_dtyp": [331, 332, 333, 334], "static_is_float_dtyp": 335, "is_int_dtyp": [336, 337, 338, 339], "static_is_int_dtyp": 340, "is_uint_dtyp": [341, 342, 343, 344], "static_is_uint_dtyp": 345, "promote_typ": 346, "result_typ": [347, 348, 349, 350], "static_result_typ": 351, "set_default_dtyp": 352, "set_default_float_dtyp": 353, "set_default_int_dtyp": 354, "set_default_uint_dtyp": 355, "type_promote_arrai": 356, "unset_default_dtyp": 357, "unset_default_float_dtyp": 358, "unset_default_int_dtyp": 359, "unset_default_uint_dtyp": 360, "valid_dtyp": 361, "profil": 363, "as_ivy_dev": 364, "as_native_dev": 365, "clear_mem_on_dev": 366, "default_devic": 367, "dev": [368, 369, 370, 371], "static_dev": 372, "dev_util": 373, "function_supported_devic": 374, "function_unsupported_devic": 375, "get_all_ivy_arrays_on_dev": 376, "gpu_is_avail": 377, "num_cpu_cor": 378, "num_gpu": 379, "num_ivy_arrays_on_dev": 380, "percent_used_mem_on_dev": 381, "print_all_ivy_arrays_on_dev": 382, "set_default_devic": 383, "set_split_factor": 384, "split_factor": 385, "split_func_cal": 386, "to_devic": [387, 389, 390, 391], "static_to_devic": 388, "total_mem_on_dev": 392, "tpu_is_avail": 393, "unset_default_devic": 394, "used_mem_on_dev": 395, "ab": [397, 398, 399, 400], "static_ab": 401, "aco": [402, 403, 404, 405], "static_aco": 406, "acosh": [407, 408, 409, 410], "static_acosh": 411, "static_add": 416, "asin": [417, 418, 419, 420], "static_asin": 421, "asinh": [422, 423, 424, 425], "static_asinh": 426, "atan": [427, 428, 429, 430], "static_atan": 431, "atan2": [432, 433, 434, 435], "static_atan2": 436, "atanh": [437, 438, 439, 440], "static_atanh": 441, "bitwise_and": [442, 443, 444, 445], "static_bitwise_and": 446, "bitwise_invert": [447, 448, 449, 450], "static_bitwise_invert": 451, "bitwise_left_shift": [452, 453, 454, 455], "static_bitwise_left_shift": 456, "bitwise_or": [457, 458, 459, 460], "static_bitwise_or": 461, "bitwise_right_shift": [462, 463, 464, 465], "static_bitwise_right_shift": 466, "bitwise_xor": [467, 468, 469, 470], "static_bitwise_xor": 471, "ceil": [472, 473, 474, 475], "static_ceil": 476, "co": [477, 478, 479, 480], "static_co": 481, "cosh": [482, 483, 484, 485], "static_cosh": 486, "divid": [487, 488, 489, 490], "static_divid": 491, "equal": [492, 493, 494, 495], "static_equ": 496, "erf": [497, 498, 499, 500], "static_erf": 501, "exp": [502, 503, 504, 505], "static_exp": 506, "expm1": [507, 508, 509, 510], "static_expm1": 511, "floor": [512, 513, 514, 515], "static_floor": 516, "floor_divid": [517, 518, 519, 520], "static_floor_divid": 521, "greater": [522, 523, 524, 525], "static_great": 526, "greater_equ": [527, 528, 529, 530], "static_greater_equ": 531, "isfinit": [532, 533, 534, 535], "static_isfinit": 536, "isinf": [537, 538, 539, 540], "static_isinf": 541, "isnan": [542, 543, 544, 545], "static_isnan": 546, "less": [547, 548, 549, 550], "static_less": 551, "less_equ": [552, 553, 554, 555], "static_less_equ": 556, "static_log": 561, "log10": [562, 563, 564, 565], "static_log10": 566, "log1p": [567, 568, 569, 570], "static_log1p": 571, "log2": [572, 573, 574, 575], "static_log2": 576, "logaddexp": [577, 578, 579, 580], "static_logaddexp": 581, "logical_and": [582, 583, 584, 585], "static_logical_and": 586, "logical_not": [587, 588, 589, 590], "static_logical_not": 591, "logical_or": [592, 593, 594, 595], "static_logical_or": 596, "logical_xor": [597, 598, 599, 600], "static_logical_xor": 601, "maximum": 602, "minimum": [603, 604, 605], "static_minimum": 606, "multipli": [607, 608, 609, 610], "static_multipli": 611, "neg": [612, 613, 614, 615], "static_neg": 616, "not_equ": [617, 618, 619, 620], "static_not_equ": 621, "posit": [622, 623, 624, 625], "static_posit": 626, "pow": [627, 628, 629, 630], "static_pow": 631, "remaind": [632, 633, 634, 635], "static_remaind": 636, "round": [637, 638, 639, 640], "static_round": 641, "sign": [642, 643, 644, 645], "static_sign": 646, "sin": [647, 648, 649, 650], "static_sin": 651, "sinh": [652, 653, 654, 655], "static_sinh": 656, "sqrt": [657, 658, 659, 660], "static_sqrt": 661, "squar": [662, 663, 664, 665], "static_squar": 666, "subtract": [667, 669, 670, 671], "static_subtract": 668, "static_tan": 673, "trunc": [678, 680, 681, 682], "static_trunc": 679, "all_equ": [684, 685, 686, 687], "static_all_equ": 688, "arg_info": 689, "arg_nam": 690, "array_equ": 691, "arrays_equ": 692, "assert_supports_inplac": 693, "cache_fn": 694, "clip_matrix_norm": 695, "clip_vector_norm": [696, 697, 698, 699], "static_clip_vector_norm": 700, "container_typ": 701, "copy_arrai": 702, "cumprod": 703, "cumsum": 704, "current_backend_str": 705, "default": 706, "einops_rearrang": 707, "einops_reduc": [708, 709, 710, 711], "static_einops_reduc": 712, "einops_repeat": [713, 714, 715, 716], "static_einops_repeat": 717, "exist": 718, "floormod": 719, "fourier_encod": 720, "function_supported_devices_and_dtyp": 721, "function_unsupported_devices_and_dtyp": 722, "gather": [723, 724, 725, 726], "static_gath": 727, "gather_nd": [728, 729, 730, 731], "static_gather_nd": 732, "get_all_arrays_in_memori": 733, "get_array_mod": 734, "get_min_bas": 735, "get_min_denomin": 736, "get_nestable_mod": 737, "get_num_dim": 738, "get_referrers_recurs": 739, "has_nan": 740, "indices_wher": 741, "inplace_arrays_support": 742, "inplace_decr": 743, "inplace_incr": 744, "inplace_upd": 745, "inplace_variables_support": 746, "is_arrai": 747, "is_ivy_arrai": 748, "is_ivy_contain": 749, "is_native_arrai": 750, "match_kwarg": 751, "multiprocess": 752, "num_arrays_in_memori": 753, "one_hot": 754, "print_all_arrays_in_memori": 755, "queue_timeout": 756, "scatter_flat": 757, "scatter_nd": 758, "set_array_mod": 759, "set_min_bas": 760, "set_min_denomin": 761, "set_nestable_mod": 762, "set_queue_timeout": 763, "set_shape_array_mod": 764, "set_tmp_dir": 765, "shape_array_mod": 767, "stable_divid": [768, 769, 770, 771], "static_stable_divid": 772, "stable_pow": 773, "supports_inplac": 774, "tmp_dir": 775, "to_ivy_shap": 776, "to_list": 777, "to_native_shap": 778, "to_numpi": [779, 781, 782, 783], "static_to_numpi": 780, "to_scalar": 784, "try_else_non": 785, "unset_array_mod": 786, "unset_nestable_mod": 787, "unset_shape_array_mod": 788, "unstack": 789, "value_is_nan": 790, "adam_step": [792, 793, 794, 795], "static_adam_step": 796, "adam_upd": [797, 798, 799], "static_adam_upd": 800, "execute_with_gradi": [801, 802], "static_execute_with_gradi": 803, "gradient_descent_upd": [804, 805, 806], "static_gradient_descent_upd": 807, "is_vari": [808, 809, 810, 811], "static_is_vari": 812, "lamb_upd": [813, 814, 815], "static_lamb_upd": 816, "lars_upd": [817, 818, 819], "static_lars_upd": 820, "optimizer_upd": [821, 822, 823], "static_optimizer_upd": 824, "set_with_grad": 825, "stop_gradi": 826, "unset_with_grad": 827, "variabl": [828, 830, 831, 832], "static_vari": 829, "variable_data": 833, "with_grad": 834, "conv1d": [836, 837, 838, 839, 1196], "static_conv1d": 840, "conv1d_transpos": 841, "conv2d": [842, 1198], "conv2d_transpos": 843, "conv3d": [844, 1200], "conv3d_transpos": 845, "depthwise_conv2d": [846, 847, 848, 849], "static_depthwise_conv2d": 850, "dropout": [851, 1203], "lstm_updat": 853, "multi_head_attent": 854, "scaled_dot_product_attent": 855, "choleski": [857, 858, 859, 860], "static_choleski": 861, "cross": [862, 863, 864, 865], "static_cross": 866, "det": [867, 868, 869, 870], "static_det": 871, "diagon": [872, 873, 874, 875], "static_diagon": 876, "eigh": [877, 878, 879, 880], "eigvalsh": [881, 882, 883], "inv": [884, 885, 886, 887], "static_inv": 888, "matmul": [889, 890, 891, 892], "matrix_norm": [893, 894, 895, 896], "static_matrix_norm": 897, "matrix_pow": [898, 899, 900], "static_matrix_pow": 901, "matrix_rank": [902, 903, 904, 905], "static_matrix_rank": 906, "matrix_transpos": [907, 908, 909, 910], "static_matrix_transpos": 911, "outer": [912, 913, 914, 915], "static_out": 916, "pinv": [917, 918, 919], "qr": [920, 921, 922, 923], "static_qr": 924, "slogdet": [925, 926, 927], "static_slogdet": 928, "solv": [929, 930, 931, 932], "static_solv": 933, "svd": [934, 936, 937, 938], "static_svd": 935, "svdval": [939, 941, 942, 943], "static_svdv": 940, "tensordot": [944, 946, 947, 948], "static_tensordot": 945, "trace": [949, 951, 952, 953], "static_trac": 950, "vecdot": [954, 956, 957, 958], "static_vecdot": 955, "vector_norm": [959, 961, 962, 963], "static_vector_norm": 960, "vector_to_skew_symmetric_matrix": [964, 966, 967, 968], "static_vector_to_skew_symmetric_matrix": 965, "binary_cross_entropi": [970, 971, 972, 973], "static_binary_cross_entropi": 974, "cross_entropi": [975, 976, 977, 978], "static_cross_entropi": 979, "sparse_cross_entropi": [980, 981, 982, 983], "static_sparse_cross_entropi": 984, "clip": [986, 987, 988, 989], "static_clip": 990, "concat": [991, 992, 993, 994], "constant_pad": [995, 996, 997, 998], "expand_dim": [999, 1000, 1001, 1002], "flip": [1003, 1004, 1005, 1006], "permute_dim": [1007, 1008, 1009, 1010], "repeat": [1011, 1012, 1013, 1014], "static_repeat": 1015, "reshap": [1016, 1017, 1018, 1019], "static_reshap": 1020, "static_rol": 1025, "split": 1026, "squeez": [1027, 1028, 1029, 1030], "stack": [1031, 1032, 1033, 1034], "swapax": [1035, 1036, 1037, 1038], "tile": [1039, 1040, 1041, 1042], "zero_pad": [1043, 1044, 1045, 1046], "meta": 1047, "fomaml_step": 1048, "maml_step": 1049, "reptile_step": 1050, "nest": 1051, "all_nested_indic": 1052, "copy_nest": 1053, "index_nest": 1054, "insert_into_nest_at_index": 1055, "insert_into_nest_at_indic": 1056, "map": 1057, "map_nest_at_index": 1058, "map_nest_at_indic": 1059, "multi_index_nest": 1060, "nested_ani": 1061, "nested_indices_wher": 1062, "nested_map": 1063, "nested_multi_map": 1064, "prune_nest_at_index": 1065, "prune_nest_at_indic": 1066, "set_nest_at_index": 1067, "set_nest_at_indic": 1068, "layer_norm": [1070, 1071, 1072, 1073], "static_layer_norm": 1074, "multinomi": 1076, "randint": [1077, 1078, 1079, 1080], "static_randint": 1081, "random_norm": [1082, 1083, 1084, 1085], "static_random_norm": 1086, "random_uniform": [1087, 1088, 1089, 1090], "static_random_uniform": 1091, "seed": 1092, "shuffl": 1093, "argmax": 1095, "argmin": 1096, "nonzero": 1097, "where": 1098, "depend": [1099, 1100, 1104, 1105, 1109, 1115, 1119], "output": [1099, 1100, 1104, 1105, 1109, 1115, 1119], "unique_al": [1100, 1102, 1103, 1104], "static_unique_al": 1101, "unique_count": [1105, 1107, 1108, 1109], "static_unique_count": 1106, "unique_invers": [1110, 1112, 1113, 1114], "static_unique_invers": 1111, "unique_valu": [1115, 1117, 1118, 1119], "static_unique_valu": 1116, "argsort": [1121, 1122, 1123, 1124], "static_argsort": 1125, "static_sort": 1130, "einsum": [1132, 1133, 1134, 1135], "max": [1136, 1137, 1138, 1139], "mean": [1140, 1141, 1142, 1143], "min": [1144, 1145, 1146, 1147], "prod": [1148, 1149, 1150, 1151], "std": [1152, 1153, 1154, 1155], "sum": [1156, 1157, 1158, 1159], "var": [1160, 1162, 1163, 1164], "static_var": 1161, "all": [1166, 1167, 1168, 1169], "static_al": 1170, "ani": [1171, 1172, 1173, 1174], "static_ani": 1175, "content": 1176, "overview": 1176, "quick": 1176, "start": 1176, "roadmap": [1176, 1182], "citat": 1176, "inspect": 1179, "add_array_spec": 1180, "fn_array_spec": 1181, "geglu": 1185, "to_ivy_modul": 1188, "firstlayersiren": 1190, "glorotuniform": 1191, "Ones": 1192, "siren": 1193, "conv1dtranspos": 1197, "conv2dtranspos": 1199, "conv3dtranspos": 1201, "depthwiseconv2d": 1202, "lstm": 1204, "multiheadattent": 1206, "layernorm": 1210, "adam": 1212, "lamb": 1213, "lar": 1214, "sgd": 1216, "sequenti": [1217, 1218], "verbos": 1220, "cprint": 1221}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})