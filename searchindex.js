Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_dimensions", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_kernel_padding_size", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_same_dtype", "assertions/check_shape", "assertions/check_shapes_broadcastable", "assertions/check_true", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_array_function", "func_wrapper/handle_array_like_without_promotion", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/output_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_ivy_arrays_and_back", "func_wrapper/to_native_arrays_and_back", "func_wrapper/try_array_function_override", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/mish", "functional/ivy/activations/mish/mish_array", "functional/ivy/activations/mish/mish_container", "functional/ivy/activations/mish/mish_functional", "functional/ivy/activations/mish/static_mish_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/constants", "functional/ivy/control_flow_ops", "functional/ivy/control_flow_ops/IfElse", "functional/ivy/control_flow_ops/WhileLoop", "functional/ivy/control_flow_ops/if_else", "functional/ivy/control_flow_ops/while_loop", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_array", "functional/ivy/creation/linspace/linspace_container", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_array", "functional/ivy/creation/logspace/logspace_container", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultComplexDtype", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_complex_dtype", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_complex_dtype", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_complex_dtype", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_complex_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/activations", "functional/ivy/experimental/activations/logit", "functional/ivy/experimental/activations/prelu", "functional/ivy/experimental/activations/thresholded_relu", "functional/ivy/experimental/adjoint", "functional/ivy/experimental/adjoint/adjoint_array", "functional/ivy/experimental/adjoint/adjoint_container", "functional/ivy/experimental/adjoint/adjoint_functional", "functional/ivy/experimental/adjoint/static_adjoint_container", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/angle", "functional/ivy/experimental/angle/angle_array", "functional/ivy/experimental/angle/angle_container", "functional/ivy/experimental/angle/angle_functional", "functional/ivy/experimental/angle/static_angle_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/bernoulli", "functional/ivy/experimental/bernoulli/bernoulli_array", "functional/ivy/experimental/bernoulli/bernoulli_container", "functional/ivy/experimental/bernoulli/bernoulli_functional", "functional/ivy/experimental/bernoulli/static_bernoulli_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/beta/beta_array", "functional/ivy/experimental/beta/beta_container", "functional/ivy/experimental/beta/beta_functional", "functional/ivy/experimental/beta/static_beta_container", "functional/ivy/experimental/bicubic", "functional/ivy/experimental/binarizer", "functional/ivy/experimental/binarizer/binarizer_array", "functional/ivy/experimental/binarizer/binarizer_container", "functional/ivy/experimental/binarizer/binarizer_functional", "functional/ivy/experimental/binarizer/static_binarizer_container", "functional/ivy/experimental/binary_cross_entropy_with_logits", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container", "functional/ivy/experimental/bind_custom_gradient_function", "functional/ivy/experimental/broadcast_shapes", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container", "functional/ivy/experimental/compilation", "functional/ivy/experimental/constants", "functional/ivy/experimental/copysign", "functional/ivy/experimental/copysign/copysign_array", "functional/ivy/experimental/copysign/copysign_container", "functional/ivy/experimental/copysign/copysign_functional", "functional/ivy/experimental/copysign/static_copysign_container", "functional/ivy/experimental/corrcoef", "functional/ivy/experimental/corrcoef/corrcoef_array", "functional/ivy/experimental/corrcoef/corrcoef_container", "functional/ivy/experimental/corrcoef/corrcoef_functional", "functional/ivy/experimental/corrcoef/static_corrcoef_container", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/creation", "functional/ivy/experimental/creation/eye_like", "functional/ivy/experimental/creation/hamming_window", "functional/ivy/experimental/creation/hann_window", "functional/ivy/experimental/creation/kaiser_bessel_derived_window", "functional/ivy/experimental/creation/kaiser_window", "functional/ivy/experimental/creation/tril_indices", "functional/ivy/experimental/creation/triu_indices", "functional/ivy/experimental/creation/vorbis_window", "functional/ivy/experimental/cubic", "functional/ivy/experimental/data_type", "functional/ivy/experimental/data_type/is_native_dtype", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/device", "functional/ivy/experimental/dft", "functional/ivy/experimental/dft/dft_container", "functional/ivy/experimental/dft/dft_functional", "functional/ivy/experimental/dft/static_dft_container", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_container", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dropout1d", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/eig", "functional/ivy/experimental/eig/eig_array", "functional/ivy/experimental/eig/eig_container", "functional/ivy/experimental/eig/eig_functional", "functional/ivy/experimental/eig/static_eig_container", "functional/ivy/experimental/eigvals", "functional/ivy/experimental/eigvals/eigvals_array", "functional/ivy/experimental/eigvals/eigvals_container", "functional/ivy/experimental/eigvals/eigvals_functional", "functional/ivy/experimental/eigvals/static_eigvals_container", "functional/ivy/experimental/elementwise", "functional/ivy/experimental/elementwise/allclose", "functional/ivy/experimental/elementwise/angle", "functional/ivy/experimental/elementwise/binarizer", "functional/ivy/experimental/elementwise/copysign", "functional/ivy/experimental/elementwise/count_nonzero", "functional/ivy/experimental/elementwise/diff", "functional/ivy/experimental/elementwise/exp2", "functional/ivy/experimental/elementwise/fix", "functional/ivy/experimental/elementwise/float_power", "functional/ivy/experimental/elementwise/fmax", "functional/ivy/experimental/elementwise/fmin", "functional/ivy/experimental/elementwise/fmod", "functional/ivy/experimental/elementwise/gcd", "functional/ivy/experimental/elementwise/gradient", "functional/ivy/experimental/elementwise/hypot", "functional/ivy/experimental/elementwise/imag", "functional/ivy/experimental/elementwise/isclose", "functional/ivy/experimental/elementwise/lcm", "functional/ivy/experimental/elementwise/logaddexp2", "functional/ivy/experimental/elementwise/nan_to_num", "functional/ivy/experimental/elementwise/nansum", "functional/ivy/experimental/elementwise/nextafter", "functional/ivy/experimental/elementwise/real", "functional/ivy/experimental/elementwise/signbit", "functional/ivy/experimental/elementwise/sinc", "functional/ivy/experimental/elementwise/trapz", "functional/ivy/experimental/elementwise/xlogy", "functional/ivy/experimental/elementwise/zeta", "functional/ivy/experimental/embedding", "functional/ivy/experimental/embedding/embedding_array", "functional/ivy/experimental/embedding/embedding_container", "functional/ivy/experimental/embedding/embedding_functional", "functional/ivy/experimental/embedding/static_embedding_container", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/expand", "functional/ivy/experimental/expand/expand_array", "functional/ivy/experimental/expand/expand_container", "functional/ivy/experimental/expand/expand_functional", "functional/ivy/experimental/expand/static_expand_container", "functional/ivy/experimental/eye_like", "functional/ivy/experimental/eye_like/eye_like_array", "functional/ivy/experimental/eye_like/eye_like_container", "functional/ivy/experimental/eye_like/eye_like_functional", "functional/ivy/experimental/eye_like/static_eye_like_container", "functional/ivy/experimental/fft", "functional/ivy/experimental/fft/fft_array", "functional/ivy/experimental/fft/fft_container", "functional/ivy/experimental/fft/fft_functional", "functional/ivy/experimental/fft/static_fft_container", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmin", "functional/ivy/experimental/fmin/fmin_array", "functional/ivy/experimental/fmin/fmin_container", "functional/ivy/experimental/fmin/fmin_functional", "functional/ivy/experimental/fmin/static_fmin_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gamma/gamma_array", "functional/ivy/experimental/gamma/gamma_functional", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/general", "functional/ivy/experimental/general/isin", "functional/ivy/experimental/gradient", "functional/ivy/experimental/gradient/gradient_array", "functional/ivy/experimental/gradient/gradient_container", "functional/ivy/experimental/gradient/gradient_functional", "functional/ivy/experimental/gradient/static_gradient_container", "functional/ivy/experimental/gradients", "functional/ivy/experimental/gradients/bind_custom_gradient_function", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/hypot", "functional/ivy/experimental/hypot/hypot_array", "functional/ivy/experimental/hypot/hypot_container", "functional/ivy/experimental/hypot/hypot_functional", "functional/ivy/experimental/hypot/static_hypot_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/ifft", "functional/ivy/experimental/ifft/ifft_array", "functional/ivy/experimental/ifft/ifft_container", "functional/ivy/experimental/ifft/ifft_functional", "functional/ivy/experimental/ifft/static_ifft_container", "functional/ivy/experimental/imag", "functional/ivy/experimental/imag/imag_array", "functional/ivy/experimental/imag/imag_container", "functional/ivy/experimental/imag/imag_functional", "functional/ivy/experimental/imag/static_imag_container", "functional/ivy/experimental/instance_norm", "functional/ivy/experimental/instance_norm/instance_norm_array", "functional/ivy/experimental/instance_norm/instance_norm_container", "functional/ivy/experimental/instance_norm/instance_norm_functional", "functional/ivy/experimental/instance_norm/static_instance_norm_container", "functional/ivy/experimental/interp", "functional/ivy/experimental/interpolate", "functional/ivy/experimental/interpolate/interpolate_array", "functional/ivy/experimental/interpolate/interpolate_container", "functional/ivy/experimental/interpolate/interpolate_functional", "functional/ivy/experimental/interpolate/static_interpolate_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_dtype", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/l2_normalize", "functional/ivy/experimental/l2_normalize/l2_normalize_array", "functional/ivy/experimental/l2_normalize/l2_normalize_container", "functional/ivy/experimental/l2_normalize/l2_normalize_functional", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container", "functional/ivy/experimental/layers", "functional/ivy/experimental/layers/avg_pool1d", "functional/ivy/experimental/layers/avg_pool2d", "functional/ivy/experimental/layers/avg_pool3d", "functional/ivy/experimental/layers/bicubic", "functional/ivy/experimental/layers/cubic", "functional/ivy/experimental/layers/dct", "functional/ivy/experimental/layers/dft", "functional/ivy/experimental/layers/dropout1d", "functional/ivy/experimental/layers/embedding", "functional/ivy/experimental/layers/fft", "functional/ivy/experimental/layers/ifft", "functional/ivy/experimental/layers/interp", "functional/ivy/experimental/layers/interpolate", "functional/ivy/experimental/layers/max_pool1d", "functional/ivy/experimental/layers/max_pool2d", "functional/ivy/experimental/layers/max_pool3d", "functional/ivy/experimental/layers/paddedRow", "functional/ivy/experimental/layers/padding_ceil_mode", "functional/ivy/experimental/layers/polynomial_calclulation", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/lexsort", "functional/ivy/experimental/lexsort/lexsort_array", "functional/ivy/experimental/lexsort/lexsort_container", "functional/ivy/experimental/lexsort/lexsort_functional", "functional/ivy/experimental/lexsort/static_lexsort_container", "functional/ivy/experimental/linear_algebra", "functional/ivy/experimental/linear_algebra/adjoint", "functional/ivy/experimental/linear_algebra/diagflat", "functional/ivy/experimental/linear_algebra/eig", "functional/ivy/experimental/linear_algebra/eigvals", "functional/ivy/experimental/linear_algebra/kron", "functional/ivy/experimental/linear_algebra/matrix_exp", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/logit", "functional/ivy/experimental/logit/logit_array", "functional/ivy/experimental/logit/logit_container", "functional/ivy/experimental/logit/logit_functional", "functional/ivy/experimental/logit/static_logit_container", "functional/ivy/experimental/losses", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits", "functional/ivy/experimental/lp_normalize", "functional/ivy/experimental/lp_normalize/lp_normalize_array", "functional/ivy/experimental/lp_normalize/lp_normalize_container", "functional/ivy/experimental/lp_normalize/lp_normalize_functional", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container", "functional/ivy/experimental/manipulation", "functional/ivy/experimental/manipulation/atleast_1d", "functional/ivy/experimental/manipulation/atleast_2d", "functional/ivy/experimental/manipulation/atleast_3d", "functional/ivy/experimental/manipulation/broadcast_shapes", "functional/ivy/experimental/manipulation/dsplit", "functional/ivy/experimental/manipulation/dstack", "functional/ivy/experimental/manipulation/expand", "functional/ivy/experimental/manipulation/flatten", "functional/ivy/experimental/manipulation/fliplr", "functional/ivy/experimental/manipulation/flipud", "functional/ivy/experimental/manipulation/heaviside", "functional/ivy/experimental/manipulation/hsplit", "functional/ivy/experimental/manipulation/hstack", "functional/ivy/experimental/manipulation/i0", "functional/ivy/experimental/manipulation/moveaxis", "functional/ivy/experimental/manipulation/ndenumerate", "functional/ivy/experimental/manipulation/ndindex", "functional/ivy/experimental/manipulation/pad", "functional/ivy/experimental/manipulation/rot90", "functional/ivy/experimental/manipulation/take_along_axis", "functional/ivy/experimental/manipulation/top_k", "functional/ivy/experimental/manipulation/vsplit", "functional/ivy/experimental/manipulation/vstack", "functional/ivy/experimental/matrix_exp", "functional/ivy/experimental/matrix_exp/matrix_exp_array", "functional/ivy/experimental/matrix_exp/matrix_exp_container", "functional/ivy/experimental/matrix_exp/matrix_exp_functional", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/meta", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nanmedian", "functional/ivy/experimental/nanmedian/nanmedian_array", "functional/ivy/experimental/nanmedian/nanmedian_container", "functional/ivy/experimental/nanmedian/nanmedian_functional", "functional/ivy/experimental/nanmedian/static_nanmedian_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nest", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/norms", "functional/ivy/experimental/norms/instance_norm", "functional/ivy/experimental/norms/l2_normalize", "functional/ivy/experimental/norms/lp_normalize", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/paddedRow", "functional/ivy/experimental/padding_ceil_mode", "functional/ivy/experimental/poisson", "functional/ivy/experimental/poisson/poisson_array", "functional/ivy/experimental/poisson/poisson_container", "functional/ivy/experimental/poisson/poisson_functional", "functional/ivy/experimental/poisson/static_poisson_container", "functional/ivy/experimental/polynomial_calclulation", "functional/ivy/experimental/prelu", "functional/ivy/experimental/prelu/prelu_array", "functional/ivy/experimental/prelu/prelu_container", "functional/ivy/experimental/prelu/prelu_functional", "functional/ivy/experimental/prelu/static_prelu_container", "functional/ivy/experimental/quantile", "functional/ivy/experimental/quantile/quantile_array", "functional/ivy/experimental/quantile/quantile_container", "functional/ivy/experimental/quantile/quantile_functional", "functional/ivy/experimental/quantile/static_quantile_container", "functional/ivy/experimental/random", "functional/ivy/experimental/random/bernoulli", "functional/ivy/experimental/random/beta", "functional/ivy/experimental/random/dirichlet", "functional/ivy/experimental/random/gamma", "functional/ivy/experimental/random/poisson", "functional/ivy/experimental/real", "functional/ivy/experimental/real/real_array", "functional/ivy/experimental/real/real_container", "functional/ivy/experimental/real/real_functional", "functional/ivy/experimental/real/static_real_container", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/searching", "functional/ivy/experimental/set", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/sorting", "functional/ivy/experimental/sorting/lexsort", "functional/ivy/experimental/sorting/msort", "functional/ivy/experimental/sparse_array", "functional/ivy/experimental/sparse_array/NativeSparseArray", "functional/ivy/experimental/sparse_array/SparseArray", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array", "functional/ivy/experimental/sparse_array/is_native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/statistical", "functional/ivy/experimental/statistical/corrcoef", "functional/ivy/experimental/statistical/median", "functional/ivy/experimental/statistical/nanmean", "functional/ivy/experimental/statistical/nanmedian", "functional/ivy/experimental/statistical/quantile", "functional/ivy/experimental/statistical/unravel_index", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/thresholded_relu", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/tril_indices", "functional/ivy/experimental/tril_indices/static_tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/utility", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/xlogy", "functional/ivy/experimental/xlogy/static_xlogy_container", "functional/ivy/experimental/xlogy/xlogy_array", "functional/ivy/experimental/xlogy/xlogy_container", "functional/ivy/experimental/xlogy/xlogy_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_container", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/array_equal/static_array_equal_container", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eig", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_array", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/tensorsolve", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/duplicate_array_index_chains", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_empty", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/prod/static_prod_container", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "nested_array/nested_array", "nested_array/nested_array/NestedArray", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/ModuleConverters", "stateful/converters/MyTFModule", "stateful/converters/MyTorchModule", "stateful/converters/to_ivy_module", "stateful/helpers", "stateful/helpers/ModuleHelpers", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "testing/assertions", "testing/assertions/assert_all_close", "testing/assertions/assert_same_type_and_shape", "testing/assertions/check_unsupported_device", "testing/assertions/check_unsupported_device_and_dtype", "testing/assertions/check_unsupported_dtype", "testing/assertions/test_unsupported_function", "testing/assertions/value_test", "testing/available_frameworks", "testing/available_frameworks/available_frameworks", "testing/available_frameworks/ground_truth", "testing/function_testing", "testing/function_testing/args_to_container", "testing/function_testing/as_cont", "testing/function_testing/as_lists", "testing/function_testing/convtrue", "testing/function_testing/create_args_kwargs", "testing/function_testing/empty_func", "testing/function_testing/flatten", "testing/function_testing/flatten_and_to_np", "testing/function_testing/flatten_fw_and_to_np", "testing/function_testing/framework_comparator", "testing/function_testing/get_frontend_ret", "testing/function_testing/get_ret_and_flattened_np_array", "testing/function_testing/gradient_incompatible_function", "testing/function_testing/gradient_test", "testing/function_testing/gradient_unsupported_dtypes", "testing/function_testing/kwargs_to_args_n_kwargs", "testing/function_testing/make_json_pickable", "testing/function_testing/test_frontend_function", "testing/function_testing/test_frontend_method", "testing/function_testing/test_function", "testing/function_testing/test_method", "testing/function_testing/var_fn", "testing/globals", "testing/globals/InterruptedTest", "testing/globals/TestData", "testing/globals/remove_all_current_framework", "testing/globals/setup_api_test", "testing/globals/setup_frontend_test", "testing/globals/teardown_api_test", "testing/globals/teardown_frontend_test", "testing/hypothesis_helpers", "testing/hypothesis_helpers/array_helpers", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape", "testing/hypothesis_helpers/array_helpers/array_bools", "testing/hypothesis_helpers/array_helpers/array_indices_axis", "testing/hypothesis_helpers/array_helpers/array_values", "testing/hypothesis_helpers/array_helpers/arrays_and_axes", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling", "testing/hypothesis_helpers/array_helpers/broadcast_shapes", "testing/hypothesis_helpers/array_helpers/dtype_and_values", "testing/hypothesis_helpers/array_helpers/dtype_values_axis", "testing/hypothesis_helpers/array_helpers/list_of_size", "testing/hypothesis_helpers/array_helpers/lists", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes", "testing/hypothesis_helpers/array_helpers/prod", "testing/hypothesis_helpers/dtype_helpers", "testing/hypothesis_helpers/dtype_helpers/array_dtypes", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype", "testing/hypothesis_helpers/dtype_helpers/get_dtypes", "testing/hypothesis_helpers/general_helpers", "testing/hypothesis_helpers/general_helpers/apply_safety_factor", "testing/hypothesis_helpers/general_helpers/embedding_helper", "testing/hypothesis_helpers/general_helpers/get_axis", "testing/hypothesis_helpers/general_helpers/get_bounds", "testing/hypothesis_helpers/general_helpers/get_mean_std", "testing/hypothesis_helpers/general_helpers/get_shape", "testing/hypothesis_helpers/general_helpers/matrix_is_stable", "testing/hypothesis_helpers/general_helpers/reshape_shapes", "testing/hypothesis_helpers/general_helpers/subsets", "testing/hypothesis_helpers/general_helpers/x_and_filters", "testing/hypothesis_helpers/number_helpers", "testing/hypothesis_helpers/number_helpers/floats", "testing/hypothesis_helpers/number_helpers/ints", "testing/hypothesis_helpers/number_helpers/number", "testing/structs", "testing/structs/FrontendMethodData", "testing/test_parameter_flags", "testing/test_parameter_flags/FrontendFunctionTestFlags", "testing/test_parameter_flags/FrontendMethodTestFlags", "testing/test_parameter_flags/FunctionTestFlags", "testing/test_parameter_flags/MethodTestFlags", "testing/test_parameter_flags/build_flag", "testing/test_parameter_flags/frontend_function_flags", "testing/test_parameter_flags/frontend_method_flags", "testing/test_parameter_flags/function_flags", "testing/test_parameter_flags/method_flags", "testing/testing_helpers", "testing/testing_helpers/handle_frontend_method", "testing/testing_helpers/handle_frontend_test", "testing/testing_helpers/handle_method", "testing/testing_helpers/handle_test", "testing/testing_helpers/num_positional_args", "testing/testing_helpers/num_positional_args_method", "testing/testing_helpers/seed", "utils/_importlib", "utils/backend", "utils/backend/ast_helpers", "utils/backend/ast_helpers/ImportTransformer", "utils/backend/ast_helpers/IvyLoader", "utils/backend/ast_helpers/IvyPathFinder", "utils/backend/handler", "utils/backend/handler/ContextManager", "utils/backend/handler/choose_random_backend", "utils/backend/handler/clear_backend_stack", "utils/backend/handler/convert_from_numpy_to_target_backend", "utils/backend/handler/convert_from_source_backend_to_numpy", "utils/backend/handler/current_backend", "utils/backend/handler/fn_name_from_version_specific_fn_name", "utils/backend/handler/get_backend", "utils/backend/handler/prevent_access_locally", "utils/backend/handler/set_backend", "utils/backend/handler/set_backend_to_specific_version", "utils/backend/handler/set_jax_backend", "utils/backend/handler/set_numpy_backend", "utils/backend/handler/set_tensorflow_backend", "utils/backend/handler/set_torch_backend", "utils/backend/handler/unset_backend", "utils/backend/handler/with_backend", "utils/dynamic_import", "utils/dynamic_import/import_module", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_dimensions.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_kernel_padding_size.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_same_dtype.rst", "assertions/check_shape.rst", "assertions/check_shapes_broadcastable.rst", "assertions/check_true.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_array_function.rst", "func_wrapper/handle_array_like_without_promotion.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/output_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_ivy_arrays_and_back.rst", "func_wrapper/to_native_arrays_and_back.rst", "func_wrapper/try_array_function_override.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/mish.rst", "functional/ivy/activations/mish/mish_array.rst", "functional/ivy/activations/mish/mish_container.rst", "functional/ivy/activations/mish/mish_functional.rst", "functional/ivy/activations/mish/static_mish_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/constants.rst", "functional/ivy/control_flow_ops.rst", "functional/ivy/control_flow_ops/IfElse.rst", "functional/ivy/control_flow_ops/WhileLoop.rst", "functional/ivy/control_flow_ops/if_else.rst", "functional/ivy/control_flow_ops/while_loop.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_array.rst", "functional/ivy/creation/linspace/linspace_container.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_array.rst", "functional/ivy/creation/logspace/logspace_container.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultComplexDtype.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_complex_dtype.rst", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional.rst", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional.rst", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_complex_dtype.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_complex_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/activations.rst", "functional/ivy/experimental/activations/logit.rst", "functional/ivy/experimental/activations/prelu.rst", "functional/ivy/experimental/activations/thresholded_relu.rst", "functional/ivy/experimental/adjoint.rst", "functional/ivy/experimental/adjoint/adjoint_array.rst", "functional/ivy/experimental/adjoint/adjoint_container.rst", "functional/ivy/experimental/adjoint/adjoint_functional.rst", "functional/ivy/experimental/adjoint/static_adjoint_container.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/angle.rst", "functional/ivy/experimental/angle/angle_array.rst", "functional/ivy/experimental/angle/angle_container.rst", "functional/ivy/experimental/angle/angle_functional.rst", "functional/ivy/experimental/angle/static_angle_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/bernoulli.rst", "functional/ivy/experimental/bernoulli/bernoulli_array.rst", "functional/ivy/experimental/bernoulli/bernoulli_container.rst", "functional/ivy/experimental/bernoulli/bernoulli_functional.rst", "functional/ivy/experimental/bernoulli/static_bernoulli_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/beta/beta_array.rst", "functional/ivy/experimental/beta/beta_container.rst", "functional/ivy/experimental/beta/beta_functional.rst", "functional/ivy/experimental/beta/static_beta_container.rst", "functional/ivy/experimental/bicubic.rst", "functional/ivy/experimental/binarizer.rst", "functional/ivy/experimental/binarizer/binarizer_array.rst", "functional/ivy/experimental/binarizer/binarizer_container.rst", "functional/ivy/experimental/binarizer/binarizer_functional.rst", "functional/ivy/experimental/binarizer/static_binarizer_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/bind_custom_gradient_function.rst", "functional/ivy/experimental/broadcast_shapes.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional.rst", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container.rst", "functional/ivy/experimental/compilation.rst", "functional/ivy/experimental/constants.rst", "functional/ivy/experimental/copysign.rst", "functional/ivy/experimental/copysign/copysign_array.rst", "functional/ivy/experimental/copysign/copysign_container.rst", "functional/ivy/experimental/copysign/copysign_functional.rst", "functional/ivy/experimental/copysign/static_copysign_container.rst", "functional/ivy/experimental/corrcoef.rst", "functional/ivy/experimental/corrcoef/corrcoef_array.rst", "functional/ivy/experimental/corrcoef/corrcoef_container.rst", "functional/ivy/experimental/corrcoef/corrcoef_functional.rst", "functional/ivy/experimental/corrcoef/static_corrcoef_container.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/creation.rst", "functional/ivy/experimental/creation/eye_like.rst", "functional/ivy/experimental/creation/hamming_window.rst", "functional/ivy/experimental/creation/hann_window.rst", "functional/ivy/experimental/creation/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/creation/kaiser_window.rst", "functional/ivy/experimental/creation/tril_indices.rst", "functional/ivy/experimental/creation/triu_indices.rst", "functional/ivy/experimental/creation/vorbis_window.rst", "functional/ivy/experimental/cubic.rst", "functional/ivy/experimental/data_type.rst", "functional/ivy/experimental/data_type/is_native_dtype.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/device.rst", "functional/ivy/experimental/dft.rst", "functional/ivy/experimental/dft/dft_container.rst", "functional/ivy/experimental/dft/dft_functional.rst", "functional/ivy/experimental/dft/static_dft_container.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_container.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dropout1d.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/eig.rst", "functional/ivy/experimental/eig/eig_array.rst", "functional/ivy/experimental/eig/eig_container.rst", "functional/ivy/experimental/eig/eig_functional.rst", "functional/ivy/experimental/eig/static_eig_container.rst", "functional/ivy/experimental/eigvals.rst", "functional/ivy/experimental/eigvals/eigvals_array.rst", "functional/ivy/experimental/eigvals/eigvals_container.rst", "functional/ivy/experimental/eigvals/eigvals_functional.rst", "functional/ivy/experimental/eigvals/static_eigvals_container.rst", "functional/ivy/experimental/elementwise.rst", "functional/ivy/experimental/elementwise/allclose.rst", "functional/ivy/experimental/elementwise/angle.rst", "functional/ivy/experimental/elementwise/binarizer.rst", "functional/ivy/experimental/elementwise/copysign.rst", "functional/ivy/experimental/elementwise/count_nonzero.rst", "functional/ivy/experimental/elementwise/diff.rst", "functional/ivy/experimental/elementwise/exp2.rst", "functional/ivy/experimental/elementwise/fix.rst", "functional/ivy/experimental/elementwise/float_power.rst", "functional/ivy/experimental/elementwise/fmax.rst", "functional/ivy/experimental/elementwise/fmin.rst", "functional/ivy/experimental/elementwise/fmod.rst", "functional/ivy/experimental/elementwise/gcd.rst", "functional/ivy/experimental/elementwise/gradient.rst", "functional/ivy/experimental/elementwise/hypot.rst", "functional/ivy/experimental/elementwise/imag.rst", "functional/ivy/experimental/elementwise/isclose.rst", "functional/ivy/experimental/elementwise/lcm.rst", "functional/ivy/experimental/elementwise/logaddexp2.rst", "functional/ivy/experimental/elementwise/nan_to_num.rst", "functional/ivy/experimental/elementwise/nansum.rst", "functional/ivy/experimental/elementwise/nextafter.rst", "functional/ivy/experimental/elementwise/real.rst", "functional/ivy/experimental/elementwise/signbit.rst", "functional/ivy/experimental/elementwise/sinc.rst", "functional/ivy/experimental/elementwise/trapz.rst", "functional/ivy/experimental/elementwise/xlogy.rst", "functional/ivy/experimental/elementwise/zeta.rst", "functional/ivy/experimental/embedding.rst", "functional/ivy/experimental/embedding/embedding_array.rst", "functional/ivy/experimental/embedding/embedding_container.rst", "functional/ivy/experimental/embedding/embedding_functional.rst", "functional/ivy/experimental/embedding/static_embedding_container.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/expand.rst", "functional/ivy/experimental/expand/expand_array.rst", "functional/ivy/experimental/expand/expand_container.rst", "functional/ivy/experimental/expand/expand_functional.rst", "functional/ivy/experimental/expand/static_expand_container.rst", "functional/ivy/experimental/eye_like.rst", "functional/ivy/experimental/eye_like/eye_like_array.rst", "functional/ivy/experimental/eye_like/eye_like_container.rst", "functional/ivy/experimental/eye_like/eye_like_functional.rst", "functional/ivy/experimental/eye_like/static_eye_like_container.rst", "functional/ivy/experimental/fft.rst", "functional/ivy/experimental/fft/fft_array.rst", "functional/ivy/experimental/fft/fft_container.rst", "functional/ivy/experimental/fft/fft_functional.rst", "functional/ivy/experimental/fft/static_fft_container.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmin.rst", "functional/ivy/experimental/fmin/fmin_array.rst", "functional/ivy/experimental/fmin/fmin_container.rst", "functional/ivy/experimental/fmin/fmin_functional.rst", "functional/ivy/experimental/fmin/static_fmin_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gamma/gamma_array.rst", "functional/ivy/experimental/gamma/gamma_functional.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/general.rst", "functional/ivy/experimental/general/isin.rst", "functional/ivy/experimental/gradient.rst", "functional/ivy/experimental/gradient/gradient_array.rst", "functional/ivy/experimental/gradient/gradient_container.rst", "functional/ivy/experimental/gradient/gradient_functional.rst", "functional/ivy/experimental/gradient/static_gradient_container.rst", "functional/ivy/experimental/gradients.rst", "functional/ivy/experimental/gradients/bind_custom_gradient_function.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/hypot.rst", "functional/ivy/experimental/hypot/hypot_array.rst", "functional/ivy/experimental/hypot/hypot_container.rst", "functional/ivy/experimental/hypot/hypot_functional.rst", "functional/ivy/experimental/hypot/static_hypot_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/ifft.rst", "functional/ivy/experimental/ifft/ifft_array.rst", "functional/ivy/experimental/ifft/ifft_container.rst", "functional/ivy/experimental/ifft/ifft_functional.rst", "functional/ivy/experimental/ifft/static_ifft_container.rst", "functional/ivy/experimental/imag.rst", "functional/ivy/experimental/imag/imag_array.rst", "functional/ivy/experimental/imag/imag_container.rst", "functional/ivy/experimental/imag/imag_functional.rst", "functional/ivy/experimental/imag/static_imag_container.rst", "functional/ivy/experimental/instance_norm.rst", "functional/ivy/experimental/instance_norm/instance_norm_array.rst", "functional/ivy/experimental/instance_norm/instance_norm_container.rst", "functional/ivy/experimental/instance_norm/instance_norm_functional.rst", "functional/ivy/experimental/instance_norm/static_instance_norm_container.rst", "functional/ivy/experimental/interp.rst", "functional/ivy/experimental/interpolate.rst", "functional/ivy/experimental/interpolate/interpolate_array.rst", "functional/ivy/experimental/interpolate/interpolate_container.rst", "functional/ivy/experimental/interpolate/interpolate_functional.rst", "functional/ivy/experimental/interpolate/static_interpolate_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_dtype.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/l2_normalize.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_array.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_container.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_functional.rst", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container.rst", "functional/ivy/experimental/layers.rst", "functional/ivy/experimental/layers/avg_pool1d.rst", "functional/ivy/experimental/layers/avg_pool2d.rst", "functional/ivy/experimental/layers/avg_pool3d.rst", "functional/ivy/experimental/layers/bicubic.rst", "functional/ivy/experimental/layers/cubic.rst", "functional/ivy/experimental/layers/dct.rst", "functional/ivy/experimental/layers/dft.rst", "functional/ivy/experimental/layers/dropout1d.rst", "functional/ivy/experimental/layers/embedding.rst", "functional/ivy/experimental/layers/fft.rst", "functional/ivy/experimental/layers/ifft.rst", "functional/ivy/experimental/layers/interp.rst", "functional/ivy/experimental/layers/interpolate.rst", "functional/ivy/experimental/layers/max_pool1d.rst", "functional/ivy/experimental/layers/max_pool2d.rst", "functional/ivy/experimental/layers/max_pool3d.rst", "functional/ivy/experimental/layers/paddedRow.rst", "functional/ivy/experimental/layers/padding_ceil_mode.rst", "functional/ivy/experimental/layers/polynomial_calclulation.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/lexsort.rst", "functional/ivy/experimental/lexsort/lexsort_array.rst", "functional/ivy/experimental/lexsort/lexsort_container.rst", "functional/ivy/experimental/lexsort/lexsort_functional.rst", "functional/ivy/experimental/lexsort/static_lexsort_container.rst", "functional/ivy/experimental/linear_algebra.rst", "functional/ivy/experimental/linear_algebra/adjoint.rst", "functional/ivy/experimental/linear_algebra/diagflat.rst", "functional/ivy/experimental/linear_algebra/eig.rst", "functional/ivy/experimental/linear_algebra/eigvals.rst", "functional/ivy/experimental/linear_algebra/kron.rst", "functional/ivy/experimental/linear_algebra/matrix_exp.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/logit.rst", "functional/ivy/experimental/logit/logit_array.rst", "functional/ivy/experimental/logit/logit_container.rst", "functional/ivy/experimental/logit/logit_functional.rst", "functional/ivy/experimental/logit/static_logit_container.rst", "functional/ivy/experimental/losses.rst", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/lp_normalize.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_array.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_container.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_functional.rst", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container.rst", "functional/ivy/experimental/manipulation.rst", "functional/ivy/experimental/manipulation/atleast_1d.rst", "functional/ivy/experimental/manipulation/atleast_2d.rst", "functional/ivy/experimental/manipulation/atleast_3d.rst", "functional/ivy/experimental/manipulation/broadcast_shapes.rst", "functional/ivy/experimental/manipulation/dsplit.rst", "functional/ivy/experimental/manipulation/dstack.rst", "functional/ivy/experimental/manipulation/expand.rst", "functional/ivy/experimental/manipulation/flatten.rst", "functional/ivy/experimental/manipulation/fliplr.rst", "functional/ivy/experimental/manipulation/flipud.rst", "functional/ivy/experimental/manipulation/heaviside.rst", "functional/ivy/experimental/manipulation/hsplit.rst", "functional/ivy/experimental/manipulation/hstack.rst", "functional/ivy/experimental/manipulation/i0.rst", "functional/ivy/experimental/manipulation/moveaxis.rst", "functional/ivy/experimental/manipulation/ndenumerate.rst", "functional/ivy/experimental/manipulation/ndindex.rst", "functional/ivy/experimental/manipulation/pad.rst", "functional/ivy/experimental/manipulation/rot90.rst", "functional/ivy/experimental/manipulation/take_along_axis.rst", "functional/ivy/experimental/manipulation/top_k.rst", "functional/ivy/experimental/manipulation/vsplit.rst", "functional/ivy/experimental/manipulation/vstack.rst", "functional/ivy/experimental/matrix_exp.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_array.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_container.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_functional.rst", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/meta.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nanmedian.rst", "functional/ivy/experimental/nanmedian/nanmedian_array.rst", "functional/ivy/experimental/nanmedian/nanmedian_container.rst", "functional/ivy/experimental/nanmedian/nanmedian_functional.rst", "functional/ivy/experimental/nanmedian/static_nanmedian_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nest.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/norms.rst", "functional/ivy/experimental/norms/instance_norm.rst", "functional/ivy/experimental/norms/l2_normalize.rst", "functional/ivy/experimental/norms/lp_normalize.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/paddedRow.rst", "functional/ivy/experimental/padding_ceil_mode.rst", "functional/ivy/experimental/poisson.rst", "functional/ivy/experimental/poisson/poisson_array.rst", "functional/ivy/experimental/poisson/poisson_container.rst", "functional/ivy/experimental/poisson/poisson_functional.rst", "functional/ivy/experimental/poisson/static_poisson_container.rst", "functional/ivy/experimental/polynomial_calclulation.rst", "functional/ivy/experimental/prelu.rst", "functional/ivy/experimental/prelu/prelu_array.rst", "functional/ivy/experimental/prelu/prelu_container.rst", "functional/ivy/experimental/prelu/prelu_functional.rst", "functional/ivy/experimental/prelu/static_prelu_container.rst", "functional/ivy/experimental/quantile.rst", "functional/ivy/experimental/quantile/quantile_array.rst", "functional/ivy/experimental/quantile/quantile_container.rst", "functional/ivy/experimental/quantile/quantile_functional.rst", "functional/ivy/experimental/quantile/static_quantile_container.rst", "functional/ivy/experimental/random.rst", "functional/ivy/experimental/random/bernoulli.rst", "functional/ivy/experimental/random/beta.rst", "functional/ivy/experimental/random/dirichlet.rst", "functional/ivy/experimental/random/gamma.rst", "functional/ivy/experimental/random/poisson.rst", "functional/ivy/experimental/real.rst", "functional/ivy/experimental/real/real_array.rst", "functional/ivy/experimental/real/real_container.rst", "functional/ivy/experimental/real/real_functional.rst", "functional/ivy/experimental/real/static_real_container.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/searching.rst", "functional/ivy/experimental/set.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/sorting.rst", "functional/ivy/experimental/sorting/lexsort.rst", "functional/ivy/experimental/sorting/msort.rst", "functional/ivy/experimental/sparse_array.rst", "functional/ivy/experimental/sparse_array/NativeSparseArray.rst", "functional/ivy/experimental/sparse_array/SparseArray.rst", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/ivy/experimental/sparse_array/is_native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/statistical.rst", "functional/ivy/experimental/statistical/corrcoef.rst", "functional/ivy/experimental/statistical/median.rst", "functional/ivy/experimental/statistical/nanmean.rst", "functional/ivy/experimental/statistical/nanmedian.rst", "functional/ivy/experimental/statistical/quantile.rst", "functional/ivy/experimental/statistical/unravel_index.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/thresholded_relu.rst", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/tril_indices.rst", "functional/ivy/experimental/tril_indices/static_tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/utility.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/xlogy.rst", "functional/ivy/experimental/xlogy/static_xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_array.rst", "functional/ivy/experimental/xlogy/xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_container.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/array_equal/static_array_equal_container.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eig.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_array.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/tensorsolve.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/duplicate_array_index_chains.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_empty.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/prod/static_prod_container.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "nested_array/nested_array.rst", "nested_array/nested_array/NestedArray.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/ModuleConverters.rst", "stateful/converters/MyTFModule.rst", "stateful/converters/MyTorchModule.rst", "stateful/converters/to_ivy_module.rst", "stateful/helpers.rst", "stateful/helpers/ModuleHelpers.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "testing/assertions.rst", "testing/assertions/assert_all_close.rst", "testing/assertions/assert_same_type_and_shape.rst", "testing/assertions/check_unsupported_device.rst", "testing/assertions/check_unsupported_device_and_dtype.rst", "testing/assertions/check_unsupported_dtype.rst", "testing/assertions/test_unsupported_function.rst", "testing/assertions/value_test.rst", "testing/available_frameworks.rst", "testing/available_frameworks/available_frameworks.rst", "testing/available_frameworks/ground_truth.rst", "testing/function_testing.rst", "testing/function_testing/args_to_container.rst", "testing/function_testing/as_cont.rst", "testing/function_testing/as_lists.rst", "testing/function_testing/convtrue.rst", "testing/function_testing/create_args_kwargs.rst", "testing/function_testing/empty_func.rst", "testing/function_testing/flatten.rst", "testing/function_testing/flatten_and_to_np.rst", "testing/function_testing/flatten_fw_and_to_np.rst", "testing/function_testing/framework_comparator.rst", "testing/function_testing/get_frontend_ret.rst", "testing/function_testing/get_ret_and_flattened_np_array.rst", "testing/function_testing/gradient_incompatible_function.rst", "testing/function_testing/gradient_test.rst", "testing/function_testing/gradient_unsupported_dtypes.rst", "testing/function_testing/kwargs_to_args_n_kwargs.rst", "testing/function_testing/make_json_pickable.rst", "testing/function_testing/test_frontend_function.rst", "testing/function_testing/test_frontend_method.rst", "testing/function_testing/test_function.rst", "testing/function_testing/test_method.rst", "testing/function_testing/var_fn.rst", "testing/globals.rst", "testing/globals/InterruptedTest.rst", "testing/globals/TestData.rst", "testing/globals/remove_all_current_framework.rst", "testing/globals/setup_api_test.rst", "testing/globals/setup_frontend_test.rst", "testing/globals/teardown_api_test.rst", "testing/globals/teardown_frontend_test.rst", "testing/hypothesis_helpers.rst", "testing/hypothesis_helpers/array_helpers.rst", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape.rst", "testing/hypothesis_helpers/array_helpers/array_bools.rst", "testing/hypothesis_helpers/array_helpers/array_indices_axis.rst", "testing/hypothesis_helpers/array_helpers/array_values.rst", "testing/hypothesis_helpers/array_helpers/arrays_and_axes.rst", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling.rst", "testing/hypothesis_helpers/array_helpers/broadcast_shapes.rst", "testing/hypothesis_helpers/array_helpers/dtype_and_values.rst", "testing/hypothesis_helpers/array_helpers/dtype_values_axis.rst", "testing/hypothesis_helpers/array_helpers/list_of_size.rst", "testing/hypothesis_helpers/array_helpers/lists.rst", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes.rst", "testing/hypothesis_helpers/array_helpers/prod.rst", "testing/hypothesis_helpers/dtype_helpers.rst", "testing/hypothesis_helpers/dtype_helpers/array_dtypes.rst", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype.rst", "testing/hypothesis_helpers/dtype_helpers/get_dtypes.rst", "testing/hypothesis_helpers/general_helpers.rst", "testing/hypothesis_helpers/general_helpers/apply_safety_factor.rst", "testing/hypothesis_helpers/general_helpers/embedding_helper.rst", "testing/hypothesis_helpers/general_helpers/get_axis.rst", "testing/hypothesis_helpers/general_helpers/get_bounds.rst", "testing/hypothesis_helpers/general_helpers/get_mean_std.rst", "testing/hypothesis_helpers/general_helpers/get_shape.rst", "testing/hypothesis_helpers/general_helpers/matrix_is_stable.rst", "testing/hypothesis_helpers/general_helpers/reshape_shapes.rst", "testing/hypothesis_helpers/general_helpers/subsets.rst", "testing/hypothesis_helpers/general_helpers/x_and_filters.rst", "testing/hypothesis_helpers/number_helpers.rst", "testing/hypothesis_helpers/number_helpers/floats.rst", "testing/hypothesis_helpers/number_helpers/ints.rst", "testing/hypothesis_helpers/number_helpers/number.rst", "testing/structs.rst", "testing/structs/FrontendMethodData.rst", "testing/test_parameter_flags.rst", "testing/test_parameter_flags/FrontendFunctionTestFlags.rst", "testing/test_parameter_flags/FrontendMethodTestFlags.rst", "testing/test_parameter_flags/FunctionTestFlags.rst", "testing/test_parameter_flags/MethodTestFlags.rst", "testing/test_parameter_flags/build_flag.rst", "testing/test_parameter_flags/frontend_function_flags.rst", "testing/test_parameter_flags/frontend_method_flags.rst", "testing/test_parameter_flags/function_flags.rst", "testing/test_parameter_flags/method_flags.rst", "testing/testing_helpers.rst", "testing/testing_helpers/handle_frontend_method.rst", "testing/testing_helpers/handle_frontend_test.rst", "testing/testing_helpers/handle_method.rst", "testing/testing_helpers/handle_test.rst", "testing/testing_helpers/num_positional_args.rst", "testing/testing_helpers/num_positional_args_method.rst", "testing/testing_helpers/seed.rst", "utils/_importlib.rst", "utils/backend.rst", "utils/backend/ast_helpers.rst", "utils/backend/ast_helpers/ImportTransformer.rst", "utils/backend/ast_helpers/IvyLoader.rst", "utils/backend/ast_helpers/IvyPathFinder.rst", "utils/backend/handler.rst", "utils/backend/handler/ContextManager.rst", "utils/backend/handler/choose_random_backend.rst", "utils/backend/handler/clear_backend_stack.rst", "utils/backend/handler/convert_from_numpy_to_target_backend.rst", "utils/backend/handler/convert_from_source_backend_to_numpy.rst", "utils/backend/handler/current_backend.rst", "utils/backend/handler/fn_name_from_version_specific_fn_name.rst", "utils/backend/handler/get_backend.rst", "utils/backend/handler/prevent_access_locally.rst", "utils/backend/handler/set_backend.rst", "utils/backend/handler/set_backend_to_specific_version.rst", "utils/backend/handler/set_jax_backend.rst", "utils/backend/handler/set_numpy_backend.rst", "utils/backend/handler/set_tensorflow_backend.rst", "utils/backend/handler/set_torch_backend.rst", "utils/backend/handler/unset_backend.rst", "utils/backend/handler/with_backend.rst", "utils/dynamic_import.rst", "utils/dynamic_import/import_module.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_dimensions", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_kernel_padding_size", "check_less", "check_one_way_broadcastable", "check_same_dtype", "check_shape", "check_shapes_broadcastable", "check_true", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_array_function", "handle_array_like_without_promotion", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "output_to_native_arrays", "outputs_to_ivy_arrays", "to_ivy_arrays_and_back", "to_native_arrays_and_back", "try_array_function_override", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "mish", "ivy.Array.mish", "ivy.Container.mish", "ivy.mish", "ivy.Container.static_mish", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "&lt;no title&gt;", "Constants", "Control flow ops", "IfElse", "WhileLoop", "if_else", "while_loop", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.Array.linspace", "ivy.Container.linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.Array.logspace", "ivy.Container.logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultComplexDtype", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_complex_dtype", "ivy.default_complex_dtype", "ivy.Container.static_default_complex_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_complex_dtype", "ivy.Container.is_complex_dtype", "ivy.is_complex_dtype", "ivy.Container.static_is_complex_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_complex_dtype", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_complex_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "Activations", "logit", "prelu", "thresholded_relu", "adjoint", "ivy.Array.adjoint", "ivy.Container.adjoint", "ivy.adjoint", "ivy.Container.static_adjoint", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "angle", "ivy.Array.angle", "ivy.Container.angle", "ivy.angle", "ivy.Container.static_angle", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "bernoulli", "ivy.Array.bernoulli", "ivy.Container.bernoulli", "ivy.bernoulli", "ivy.Container.static_bernoulli", "beta", "ivy.Array.beta", "ivy.Container.beta", "ivy.beta", "ivy.Container.static_beta", "bicubic", "binarizer", "ivy.Array.binarizer", "ivy.Container.binarizer", "ivy.binarizer", "ivy.Container.static_binarizer", "binary_cross_entropy_with_logits", "ivy.Container.binary_cross_entropy_with_logits", "ivy.binary_cross_entropy_with_logits", "ivy.Container.static_binary_cross_entropy_with_logits", "bind_custom_gradient_function", "broadcast_shapes", "ivy.Container.broadcast_shapes", "ivy.broadcast_shapes", "ivy.Container.static_broadcast_shapes", "Compilation", "Constants", "copysign", "ivy.Array.copysign", "ivy.Container.copysign", "ivy.copysign", "ivy.Container.static_copysign", "corrcoef", "ivy.Array.corrcoef", "ivy.Container.corrcoef", "ivy.corrcoef", "ivy.Container.static_corrcoef", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "Creation", "eye_like", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "tril_indices", "triu_indices", "vorbis_window", "cubic", "Data type", "is_native_dtype", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "Device", "dft", "ivy.Container.dft", "ivy.dft", "ivy.Container.static_dft", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.Container.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dropout1d", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "eig", "ivy.Array.eig", "ivy.Container.eig", "ivy.eig", "ivy.Container.static_eig", "eigvals", "ivy.Array.eigvals", "ivy.Container.eigvals", "ivy.eigvals", "ivy.Container.static_eigvals", "Elementwise", "allclose", "angle", "binarizer", "copysign", "count_nonzero", "diff", "exp2", "fix", "float_power", "fmax", "fmin", "fmod", "gcd", "gradient", "hypot", "imag", "isclose", "lcm", "logaddexp2", "nan_to_num", "nansum", "nextafter", "real", "signbit", "sinc", "trapz", "xlogy", "zeta", "embedding", "ivy.Array.embedding", "ivy.Container.embedding", "ivy.embedding", "ivy.Container.static_embedding", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "expand", "ivy.Array.expand", "ivy.Container.expand", "ivy.expand", "ivy.Container.static_expand", "eye_like", "ivy.Array.eye_like", "ivy.Container.eye_like", "ivy.eye_like", "ivy.Container.static_eye_like", "fft", "ivy.Array.fft", "ivy.Container.fft", "ivy.fft", "ivy.Container.static_fft", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmin", "ivy.Array.fmin", "ivy.Container.fmin", "ivy.fmin", "ivy.Container.static_fmin", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "ivy.Array.gamma", "ivy.gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "General", "isin", "gradient", "ivy.Array.gradient", "ivy.Container.gradient", "ivy.gradient", "ivy.Container.static_gradient", "Gradients", "bind_custom_gradient_function", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "hypot", "ivy.Array.hypot", "ivy.Container.hypot", "ivy.hypot", "ivy.Container.static_hypot", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "ifft", "ivy.Array.ifft", "ivy.Container.ifft", "ivy.ifft", "ivy.Container.static_ifft", "imag", "ivy.Array.imag", "ivy.Container.imag", "ivy.imag", "ivy.Container.static_imag", "instance_norm", "ivy.Array.instance_norm", "ivy.Container.instance_norm", "ivy.instance_norm", "ivy.Container.static_instance_norm", "interp", "interpolate", "ivy.Array.interpolate", "ivy.Container.interpolate", "ivy.interpolate", "ivy.Container.static_interpolate", "is_ivy_sparse_array", "is_native_dtype", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "l2_normalize", "ivy.Array.l2_normalize", "ivy.Container.l2_normalize", "ivy.l2_normalize", "ivy.Container.static_l2_normalize", "Layers", "avg_pool1d", "avg_pool2d", "avg_pool3d", "bicubic", "cubic", "dct", "dft", "dropout1d", "embedding", "fft", "ifft", "interp", "interpolate", "max_pool1d", "max_pool2d", "max_pool3d", "paddedRow", "padding_ceil_mode", "polynomial_calclulation", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "lexsort", "ivy.Array.lexsort", "ivy.Container.lexsort", "ivy.lexsort", "ivy.Container.static_lexsort", "Linear algebra", "adjoint", "diagflat", "eig", "eigvals", "kron", "matrix_exp", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "logit", "ivy.Array.logit", "ivy.Container.logit", "ivy.logit", "ivy.Container.static_logit", "Losses", "binary_cross_entropy_with_logits", "lp_normalize", "ivy.Array.lp_normalize", "ivy.Container.lp_normalize", "ivy.lp_normalize", "ivy.Container.static_lp_normalize", "Manipulation", "atleast_1d", "atleast_2d", "atleast_3d", "broadcast_shapes", "dsplit", "dstack", "expand", "flatten", "fliplr", "flipud", "heaviside", "hsplit", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "take_along_axis", "top_k", "vsplit", "vstack", "matrix_exp", "ivy.Array.matrix_exp", "ivy.Container.matrix_exp", "ivy.matrix_exp", "ivy.Container.static_matrix_exp", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "Meta", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nanmedian", "ivy.Array.nanmedian", "ivy.Container.nanmedian", "ivy.nanmedian", "ivy.Container.static_nanmedian", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "Nest", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "Norms", "instance_norm", "l2_normalize", "lp_normalize", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "paddedRow", "padding_ceil_mode", "poisson", "ivy.Array.poisson", "ivy.Container.poisson", "ivy.poisson", "ivy.Container.static_poisson", "polynomial_calclulation", "prelu", "ivy.Array.prelu", "ivy.Container.prelu", "ivy.prelu", "ivy.Container.static_prelu", "quantile", "ivy.Array.quantile", "ivy.Container.quantile", "ivy.quantile", "ivy.Container.static_quantile", "Random", "bernoulli", "beta", "dirichlet", "gamma", "poisson", "real", "ivy.Array.real", "ivy.Container.real", "ivy.real", "ivy.Container.static_real", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "Searching", "Set", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "Sorting", "lexsort", "msort", "Sparse array", "NativeSparseArray", "SparseArray", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "corrcoef", "median", "nanmean", "nanmedian", "quantile", "unravel_index", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "thresholded_relu", "ivy.Container.static_thresholded_relu", "ivy.Array.thresholded_relu", "ivy.Container.thresholded_relu", "ivy.thresholded_relu", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "tril_indices", "ivy.Container.static_tril_indices", "ivy.Container.tril_indices", "ivy.tril_indices", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "Utility", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "xlogy", "ivy.Container.static_xlogy", "ivy.Array.xlogy", "ivy.Container.xlogy", "ivy.xlogy", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.Container.array_equal", "ivy.array_equal", "ivy.Container.static_array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Array.conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eig", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Array.matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "tensorsolve", "ivy.Array.tensorsolve", "ivy.Container.tensorsolve", "ivy.tensorsolve", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "duplicate_array_index_chains", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_empty", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "ivy.Container.static_prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Nested array", "NestedArray", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "ModuleConverters", "MyTFModule", "MyTorchModule", "to_ivy_module", "Helpers", "ModuleHelpers", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Assertions", "assert_all_close", "assert_same_type_and_shape", "check_unsupported_device", "check_unsupported_device_and_dtype", "check_unsupported_dtype", "test_unsupported_function", "value_test", "Available frameworks", "available_frameworks", "ground_truth", "Function testing", "args_to_container", "as_cont", "as_lists", "convtrue", "create_args_kwargs", "empty_func", "flatten", "flatten_and_to_np", "flatten_fw_and_to_np", "framework_comparator", "get_frontend_ret", "get_ret_and_flattened_np_array", "gradient_incompatible_function", "gradient_test", "gradient_unsupported_dtypes", "kwargs_to_args_n_kwargs", "make_json_pickable", "test_frontend_function", "test_frontend_method", "test_function", "test_method", "var_fn", "Globals", "InterruptedTest", "TestData", "remove_all_current_framework", "setup_api_test", "setup_frontend_test", "teardown_api_test", "teardown_frontend_test", "Hypothesis helpers", "Array helpers", "array_and_broadcastable_shape", "array_bools", "array_indices_axis", "array_values", "arrays_and_axes", "arrays_for_pooling", "broadcast_shapes", "dtype_and_values", "dtype_values_axis", "list_of_size", "lists", "mutually_broadcastable_shapes", "prod", "Dtype helpers", "array_dtypes", "get_castable_dtype", "get_dtypes", "General helpers", "apply_safety_factor", "embedding_helper", "get_axis", "get_bounds", "get_mean_std", "get_shape", "matrix_is_stable", "reshape_shapes", "subsets", "x_and_filters", "Number helpers", "floats", "ints", "number", "Structs", "FrontendMethodData", "Test parameter flags", "FrontendFunctionTestFlags", "FrontendMethodTestFlags", "FunctionTestFlags", "MethodTestFlags", "build_flag", "frontend_function_flags", "frontend_method_flags", "function_flags", "method_flags", "Testing helpers", "handle_frontend_method", "handle_frontend_test", "handle_method", "handle_test", "num_positional_args", "num_positional_args_method", "seed", "&lt;no title&gt;", "Backend", "Ast helpers", "ImportTransformer", "IvyLoader", "IvyPathFinder", "Handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "convert_from_numpy_to_target_backend", "convert_from_source_backend_to_numpy", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "prevent_access_locally", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "with_backend", "Dynamic import", "import_module", "Verbosity", "cprint"], "terms": {"version": [0, 24, 25, 26, 32, 33, 36, 37, 53, 101, 137, 138, 141, 149, 154, 172, 191, 192, 875, 876, 877, 878, 879, 938, 943, 1232, 1233, 1234, 1235, 1236, 1258, 1262, 1300, 1301, 1302, 1303, 1304, 1343, 1345, 1348, 1407, 1601, 1704, 1731, 1734, 1736, 1739, 2118, 2136, 2137, 2195, 2202, 2204, 2207, 2286, 2293, 2297], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 152, 153, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 196, 197, 202, 207, 212, 217, 222, 227, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 248, 249, 250, 251, 254, 255, 260, 263, 268, 269, 274, 279, 284, 289, 294, 299, 302, 307, 312, 317, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 343, 348, 353, 354, 355, 358, 359, 362, 363, 364, 368, 369, 374, 377, 380, 385, 386, 387, 392, 396, 401, 406, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 463, 464, 465, 466, 471, 476, 481, 486, 491, 496, 501, 506, 511, 516, 521, 526, 531, 536, 541, 546, 551, 556, 561, 566, 571, 576, 581, 586, 591, 596, 601, 606, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 671, 676, 681, 686, 691, 696, 701, 706, 711, 716, 721, 726, 731, 736, 741, 746, 751, 756, 761, 766, 771, 776, 781, 787, 788, 789, 790, 791, 792, 793, 798, 803, 808, 813, 818, 823, 828, 833, 838, 843, 848, 849, 854, 858, 859, 865, 870, 875, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 898, 902, 907, 912, 917, 918, 923, 928, 933, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 972, 977, 982, 987, 992, 997, 1002, 1007, 1012, 1017, 1022, 1027, 1032, 1035, 1040, 1041, 1042, 1047, 1048, 1049, 1053, 1057, 1062, 1067, 1072, 1077, 1082, 1087, 1092, 1097, 1098, 1103, 1104, 1105, 1106, 1111, 1116, 1120, 1124, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1159, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1176, 1181, 1182, 1183, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1217, 1222, 1227, 1232, 1238, 1243, 1248, 1253, 1258, 1263, 1268, 1269, 1270, 1271, 1273, 1278, 1279, 1280, 1281, 1282, 1287, 1288, 1289, 1294, 1295, 1300, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1316, 1323, 1328, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1360, 1365, 1368, 1372, 1376, 1382, 1386, 1391, 1396, 1401, 1407, 1408, 1413, 1414, 1415, 1420, 1425, 1426, 1431, 1436, 1437, 1438, 1441, 1446, 1451, 1456, 1459, 1464, 1465, 1466, 1471, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1488, 1489, 1490, 1491, 1492, 1497, 1498, 1503, 1508, 1513, 1514, 1519, 1524, 1527, 1532, 1533, 1534, 1535, 1536, 1537, 1542, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1563, 1568, 1573, 1574, 1578, 1579, 1584, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1601, 1602, 1603, 1604, 1608, 1612, 1613, 1614, 1618, 1619, 1623, 1627, 1631, 1632, 1637, 1638, 1639, 1640, 1641, 1642, 1647, 1652, 1657, 1662, 1667, 1672, 1673, 1674, 1679, 1684, 1689, 1694, 1699, 1704, 1705, 1710, 1715, 1720, 1725, 1730, 1731, 1736, 1741, 1746, 1751, 1756, 1761, 1766, 1771, 1776, 1781, 1786, 1791, 1796, 1801, 1806, 1811, 1815, 1819, 1824, 1829, 1834, 1839, 1844, 1845, 1850, 1855, 1860, 1861, 1866, 1871, 1876, 1881, 1886, 1891, 1896, 1901, 1906, 1911, 1916, 1921, 1926, 1931, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1970, 1971, 1976, 1981, 1986, 1991, 1992, 1997, 1998, 2003, 2008, 2013, 2018, 2023, 2024, 2029, 2034, 2039, 2044, 2045, 2050, 2055, 2060, 2061, 2066, 2071, 2075, 2079, 2083, 2087, 2092, 2096, 2101, 2106, 2107, 2112, 2117, 2118, 2121, 2122, 2123, 2124, 2125, 2126, 2137, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2195, 2197, 2200, 2214, 2216, 2217, 2272, 2273, 2274, 2275, 2276, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307], "check_al": 1, "result": [1, 2, 4, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 133, 134, 136, 137, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 154, 157, 171, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 343, 346, 412, 413, 414, 415, 416, 417, 430, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1207, 1209, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1608, 1609, 1610, 1612, 1614, 1616, 1617, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1796, 1799, 1801, 1803, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1945, 1949, 1952, 1953, 1955, 1959, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2028, 2029, 2031, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2064, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2131, 2133, 2195, 2207, 2213, 2214, 2215, 2216, 2245, 2246, 2251, 2252, 2272, 2275, 2276], "messag": [1, 2, 3, 4, 6, 7, 8, 9, 13, 15, 17, 19, 20, 22, 25, 33, 137, 140, 142, 143, 148, 154, 156, 2306, 2307], "one": [1, 2, 25, 26, 31, 32, 33, 45, 46, 53, 54, 55, 60, 61, 62, 63, 66, 67, 72, 73, 74, 75, 78, 79, 87, 88, 93, 94, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 157, 159, 171, 239, 241, 242, 251, 253, 284, 285, 287, 294, 295, 296, 297, 298, 325, 338, 341, 348, 351, 430, 455, 465, 481, 485, 511, 515, 526, 530, 531, 534, 535, 656, 659, 676, 680, 681, 683, 684, 685, 686, 689, 789, 791, 793, 796, 798, 801, 808, 810, 811, 812, 813, 815, 817, 818, 820, 822, 838, 839, 840, 841, 842, 875, 876, 877, 878, 879, 892, 895, 896, 917, 923, 927, 938, 939, 943, 948, 949, 955, 959, 987, 988, 989, 990, 991, 997, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1017, 1020, 1022, 1025, 1053, 1054, 1056, 1067, 1071, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1098, 1099, 1100, 1101, 1102, 1106, 1108, 1109, 1110, 1134, 1140, 1142, 1144, 1145, 1147, 1164, 1165, 1188, 1189, 1196, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1242, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1343, 1345, 1346, 1347, 1348, 1376, 1377, 1379, 1391, 1392, 1407, 1408, 1410, 1411, 1412, 1533, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1598, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1614, 1616, 1617, 1619, 1621, 1622, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1640, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1677, 1704, 1705, 1709, 1710, 1714, 1741, 1744, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1776, 1779, 1786, 1787, 1788, 1789, 1790, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1861, 1865, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1896, 1900, 1901, 1904, 1905, 1911, 1914, 1931, 1932, 1934, 1965, 1966, 1968, 1969, 1997, 1998, 1999, 2000, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2055, 2059, 2060, 2061, 2063, 2065, 2071, 2072, 2074, 2118, 2130, 2131, 2133, 2136, 2142, 2144, 2145, 2227, 2236, 2245, 2248, 2286, 2294, 2297], "arg": [1, 2, 3, 4, 29, 35, 38, 39, 40, 41, 42, 78, 79, 87, 88, 134, 142, 148, 154, 158, 172, 183, 187, 239, 240, 430, 455, 1407, 1589, 2071, 2072, 2142, 2144, 2145, 2146, 2171, 2172, 2184, 2190, 2195, 2198, 2201, 2206, 2207, 2211, 2286, 2292], "i": [1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 170, 171, 189, 191, 193, 194, 195, 197, 199, 201, 202, 204, 205, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 226, 227, 229, 231, 233, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 346, 348, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 363, 364, 366, 369, 372, 374, 375, 377, 378, 380, 382, 383, 384, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 413, 415, 416, 417, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 443, 444, 446, 447, 450, 454, 455, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 789, 790, 791, 792, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 826, 827, 828, 831, 833, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 883, 886, 887, 890, 891, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 928, 931, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 952, 955, 958, 959, 960, 961, 962, 963, 964, 965, 966, 972, 973, 975, 982, 983, 984, 985, 986, 997, 998, 999, 1000, 1001, 1002, 1006, 1012, 1013, 1015, 1017, 1020, 1022, 1025, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1044, 1045, 1053, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1072, 1074, 1076, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1159, 1162, 1164, 1166, 1167, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1196, 1199, 1200, 1203, 1206, 1207, 1209, 1210, 1217, 1219, 1220, 1221, 1222, 1225, 1227, 1230, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1326, 1328, 1330, 1331, 1332, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1475, 1482, 1483, 1485, 1486, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1537, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1552, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1728, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1779, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1799, 1801, 1803, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2078, 2079, 2080, 2081, 2082, 2083, 2086, 2087, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2142, 2143, 2144, 2146, 2147, 2148, 2149, 2150, 2151, 2153, 2154, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2195, 2200, 2214, 2215, 2216, 2218, 2219, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278, 2286, 2292, 2293, 2294, 2302], "fals": [1, 2, 4, 6, 7, 8, 9, 13, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 138, 140, 142, 147, 148, 149, 150, 154, 157, 158, 159, 189, 191, 192, 193, 194, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 241, 243, 244, 247, 255, 257, 259, 260, 262, 263, 265, 267, 268, 269, 271, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 376, 377, 379, 380, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 417, 430, 436, 437, 438, 439, 440, 441, 446, 447, 450, 451, 455, 456, 457, 459, 462, 464, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 788, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 842, 843, 845, 847, 849, 851, 853, 854, 855, 857, 859, 862, 865, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 892, 896, 898, 899, 900, 901, 902, 904, 906, 907, 911, 912, 916, 917, 918, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 938, 939, 940, 943, 955, 958, 959, 962, 967, 969, 971, 972, 976, 977, 981, 982, 984, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1040, 1041, 1042, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1134, 1141, 1142, 1147, 1149, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1175, 1183, 1185, 1187, 1188, 1209, 1217, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1275, 1277, 1278, 1279, 1282, 1284, 1286, 1289, 1293, 1295, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1332, 1336, 1338, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1364, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1477, 1479, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1537, 1539, 1541, 1542, 1544, 1546, 1547, 1551, 1553, 1554, 1556, 1557, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1590, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1608, 1610, 1611, 1612, 1614, 1615, 1616, 1627, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1780, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1811, 1812, 1813, 1819, 1820, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1956, 1957, 1958, 1959, 1970, 1971, 1973, 1974, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2124, 2125, 2139, 2141, 2142, 2143, 2146, 2147, 2148, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180, 2184, 2187, 2188, 2189, 2195, 2215, 2216, 2227, 2229, 2230, 2231, 2232, 2233, 2235, 2236, 2237, 2241, 2242, 2244, 2245, 2248, 2251, 2252, 2255, 2256, 2257, 2272, 2274, 2286, 2296], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 148, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2121, 2122, 2123, 2124, 2125, 2129, 2130, 2131, 2132, 2133, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307], "check_all_or_any_fn": 1, "fn": [1, 3, 87, 88, 95, 96, 142, 148, 154, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 239, 248, 249, 250, 325, 374, 375, 376, 377, 378, 379, 430, 443, 444, 1407, 1413, 1464, 1465, 1589, 1945, 1952, 1953, 1954, 1956, 1957, 1958, 2121, 2123, 2184, 2187, 2188, 2189, 2190, 2195, 2206, 2207, 2208, 2209, 2210, 2286, 2295], "type": [1, 3, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 154, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1492, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2124, 2125, 2130, 2131, 2134, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2184, 2188, 2189, 2195, 2198, 2200, 2213, 2214, 2215, 2216, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2262, 2268, 2269, 2270, 2271, 2272, 2277, 2278, 2279, 2286, 2296, 2302], "all": [1, 3, 4, 24, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 60, 61, 62, 63, 66, 67, 70, 71, 80, 81, 82, 83, 87, 88, 91, 92, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 170, 171, 172, 183, 185, 186, 239, 241, 242, 294, 297, 307, 309, 311, 312, 314, 316, 430, 445, 451, 686, 688, 690, 880, 886, 887, 907, 908, 909, 910, 911, 938, 944, 945, 972, 975, 1188, 1206, 1253, 1256, 1282, 1285, 1343, 1346, 1368, 1371, 1372, 1375, 1407, 1408, 1411, 1415, 1418, 1471, 1475, 1476, 1536, 1558, 1560, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1601, 1602, 1612, 1640, 1679, 1682, 1689, 1690, 1691, 1692, 1704, 1766, 1767, 1769, 1791, 1794, 1796, 1799, 1811, 1814, 1834, 1835, 1837, 1838, 1860, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1905, 1911, 1914, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1957, 1958, 1959, 1960, 1970, 1971, 1972, 1973, 1974, 1975, 1986, 1987, 1988, 1989, 1990, 1997, 2008, 2011, 2106, 2111, 2117, 2118, 2121, 2123, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2136, 2137, 2142, 2144, 2145, 2147, 2148, 2149, 2150, 2157, 2184, 2187, 2188, 2189, 2195, 2197, 2213, 2215, 2216, 2227, 2231, 2235, 2236, 2241, 2242, 2245, 2248, 2256, 2257, 2258, 2259, 2286, 2296], "limit": [1, 3, 32, 33, 84, 87, 88, 89, 90, 137, 140, 142, 143, 148, 150, 152, 157, 171, 325, 369, 372, 380, 383, 1407, 1426, 1429, 1431, 1434, 1860, 1861, 1864, 2129, 2130, 2131, 2149, 2151, 2152, 2156, 2227, 2231, 2235, 2236, 2245, 2252, 2256, 2257, 2258, 2259], "0": [1, 3, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 140, 141, 142, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 171, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 251, 253, 260, 261, 262, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298, 302, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 350, 351, 352, 364, 366, 369, 370, 371, 372, 373, 380, 383, 385, 396, 398, 400, 401, 404, 413, 414, 417, 430, 433, 436, 442, 445, 449, 450, 451, 452, 453, 454, 455, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 521, 524, 531, 532, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 599, 601, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 619, 621, 623, 625, 626, 629, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 789, 790, 791, 792, 793, 797, 798, 799, 801, 803, 804, 806, 823, 824, 826, 828, 832, 833, 835, 837, 838, 839, 840, 841, 843, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893, 894, 895, 896, 898, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 963, 964, 965, 966, 967, 970, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1170, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1217, 1218, 1220, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1441, 1444, 1446, 1448, 1449, 1450, 1456, 1458, 1459, 1460, 1462, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1492, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1514, 1515, 1517, 1519, 1520, 1522, 1524, 1525, 1527, 1528, 1530, 1533, 1542, 1543, 1544, 1545, 1546, 1552, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1587, 1588, 1593, 1596, 1597, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1638, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1759, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1803, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1828, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2147, 2148, 2149, 2150, 2153, 2154, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2195, 2215, 2227, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2244, 2245, 2251, 2256, 2257, 2259, 2286, 2292], "must": [1, 3, 9, 22, 24, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 148, 150, 151, 152, 154, 158, 159, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 430, 455, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 791, 792, 793, 796, 823, 824, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 868, 880, 881, 883, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 917, 918, 919, 920, 922, 938, 941, 942, 944, 947, 956, 961, 963, 966, 967, 970, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1015, 1032, 1033, 1034, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1065, 1066, 1072, 1073, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1150, 1154, 1157, 1159, 1162, 1164, 1165, 1166, 1169, 1170, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1197, 1200, 1203, 1207, 1209, 1210, 1212, 1215, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1238, 1239, 1240, 1241, 1242, 1278, 1279, 1280, 1281, 1289, 1290, 1292, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1343, 1348, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1386, 1387, 1388, 1389, 1390, 1401, 1405, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2131, 2137, 2149, 2153, 2175, 2179, 2195, 2214, 2216], "exist": [1, 3, 24, 25, 29, 31, 32, 54, 55, 66, 67, 84, 87, 88, 89, 90, 114, 115, 133, 135, 140, 141, 145, 146, 147, 148, 150, 152, 154, 171, 1407, 1438, 1439, 1440, 1860, 1866, 1869, 1896, 1897, 1898, 1899, 1900, 2117, 2128, 2130, 2133, 2136, 2175, 2179], "accord": [1, 3, 29, 31, 32, 47, 48, 54, 55, 66, 67, 78, 79, 95, 96, 114, 115, 126, 127, 133, 138, 145, 148, 150, 325, 348, 349, 350, 351, 352, 369, 372, 465, 481, 484, 531, 534, 1188, 1206, 1282, 1285, 1407, 1466, 1469, 1479, 1537, 1540, 1542, 1543, 1545, 1704, 1829, 1833, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2245, 2252], "given": [1, 3, 25, 26, 29, 31, 32, 33, 35, 53, 54, 55, 64, 65, 66, 67, 70, 71, 84, 87, 88, 101, 102, 103, 104, 105, 112, 113, 114, 115, 118, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 170, 189, 190, 196, 232, 233, 239, 241, 242, 254, 274, 277, 279, 282, 325, 355, 356, 358, 359, 360, 362, 363, 412, 430, 442, 450, 452, 453, 454, 455, 461, 464, 465, 798, 799, 801, 823, 826, 828, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 846, 854, 855, 856, 857, 875, 876, 877, 878, 879, 892, 895, 907, 908, 909, 910, 911, 912, 913, 915, 923, 926, 938, 939, 943, 944, 952, 953, 955, 959, 964, 967, 970, 977, 980, 987, 988, 989, 990, 991, 1042, 1043, 1044, 1045, 1067, 1070, 1072, 1075, 1082, 1083, 1084, 1085, 1086, 1098, 1099, 1100, 1101, 1102, 1106, 1109, 1129, 1132, 1134, 1135, 1136, 1137, 1140, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1181, 1182, 1183, 1186, 1188, 1194, 1195, 1201, 1209, 1211, 1217, 1220, 1222, 1225, 1227, 1228, 1230, 1263, 1266, 1278, 1280, 1281, 1289, 1290, 1292, 1305, 1306, 1307, 1308, 1310, 1360, 1364, 1365, 1367, 1391, 1395, 1406, 1407, 1471, 1472, 1473, 1474, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1553, 1602, 1604, 1607, 1608, 1610, 1611, 1614, 1617, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1704, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1864, 1876, 1877, 1878, 1879, 1880, 1881, 1884, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1926, 1930, 1931, 1935, 1941, 1945, 1953, 1954, 1963, 1964, 1965, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1995, 1997, 2044, 2050, 2053, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2106, 2127, 2132, 2133, 2136, 2137, 2139, 2142, 2146, 2149, 2159, 2171, 2172, 2173, 2175, 2181, 2184, 2187, 2188, 2189, 2195, 2204, 2217, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "check_ani": 1, "ar": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 45, 46, 51, 52, 53, 54, 55, 62, 63, 66, 67, 70, 71, 72, 73, 84, 87, 88, 89, 90, 93, 94, 99, 100, 101, 102, 103, 110, 111, 114, 115, 118, 119, 120, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 185, 186, 239, 241, 242, 269, 271, 273, 279, 280, 281, 282, 283, 294, 296, 298, 430, 445, 449, 451, 455, 465, 546, 547, 548, 549, 550, 556, 559, 666, 669, 671, 674, 716, 719, 731, 734, 741, 742, 743, 744, 745, 766, 767, 768, 769, 770, 798, 799, 801, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 838, 839, 840, 841, 842, 843, 846, 849, 850, 851, 852, 853, 865, 866, 867, 868, 869, 875, 876, 877, 878, 879, 880, 881, 886, 887, 898, 900, 907, 908, 909, 910, 911, 912, 913, 915, 917, 938, 939, 941, 942, 943, 944, 946, 947, 955, 959, 964, 982, 985, 992, 995, 997, 1000, 1002, 1005, 1007, 1010, 1012, 1013, 1015, 1057, 1058, 1060, 1098, 1099, 1100, 1101, 1102, 1106, 1109, 1134, 1141, 1142, 1147, 1188, 1189, 1190, 1191, 1196, 1197, 1198, 1199, 1206, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1282, 1285, 1289, 1290, 1292, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1328, 1329, 1330, 1332, 1343, 1345, 1346, 1347, 1348, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1425, 1476, 1482, 1490, 1497, 1513, 1535, 1536, 1551, 1568, 1571, 1572, 1592, 1602, 1612, 1631, 1637, 1639, 1640, 1679, 1682, 1684, 1687, 1704, 1710, 1713, 1730, 1731, 1734, 1736, 1739, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1838, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1905, 1911, 1914, 1945, 1947, 1952, 1957, 1958, 1959, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2028, 2034, 2038, 2117, 2118, 2126, 2127, 2128, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2142, 2144, 2147, 2148, 2149, 2152, 2153, 2171, 2172, 2181, 2182, 2184, 2185, 2195, 2214, 2215, 2216, 2227, 2230, 2231, 2235, 2236, 2241, 2242, 2243, 2244, 2245, 2248, 2256, 2257, 2258, 2259, 2272, 2275, 2276], "check_dimens": 1, "x": [1, 5, 8, 15, 29, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 244, 246, 247, 251, 252, 253, 255, 258, 259, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 289, 292, 293, 294, 295, 296, 297, 298, 302, 305, 306, 307, 308, 311, 312, 313, 316, 317, 319, 320, 321, 323, 324, 325, 333, 334, 335, 336, 337, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 385, 392, 393, 395, 396, 397, 398, 399, 400, 401, 404, 413, 414, 415, 416, 417, 430, 431, 436, 437, 438, 439, 440, 441, 445, 449, 450, 451, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 696, 697, 698, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 803, 805, 806, 807, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 843, 847, 849, 852, 853, 854, 855, 856, 857, 859, 861, 870, 871, 873, 874, 875, 876, 877, 879, 880, 881, 886, 887, 892, 893, 894, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 917, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 944, 945, 946, 952, 954, 958, 959, 961, 962, 963, 964, 965, 966, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1052, 1053, 1054, 1056, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1159, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1192, 1194, 1195, 1196, 1201, 1202, 1203, 1204, 1206, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1257, 1258, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1278, 1279, 1280, 1281, 1282, 1285, 1295, 1296, 1298, 1299, 1300, 1302, 1304, 1311, 1312, 1313, 1314, 1315, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1336, 1339, 1340, 1342, 1343, 1344, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1481, 1483, 1484, 1486, 1487, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1549, 1550, 1552, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1608, 1610, 1611, 1612, 1613, 1618, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1698, 1699, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2017, 2018, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2159, 2170, 2195, 2197, 2215, 2217, 2227, 2230, 2237, 2238, 2241, 2243, 2245, 2252, 2286, 2292, 2302], "check_elem_in_list": [1, 148], "elem": [1, 6], "list": [1, 6, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 60, 61, 66, 67, 68, 69, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 148, 149, 150, 151, 154, 157, 158, 159, 171, 189, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 241, 242, 244, 245, 246, 269, 271, 273, 284, 285, 287, 289, 292, 294, 296, 298, 302, 304, 306, 320, 321, 323, 325, 338, 339, 340, 341, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 430, 436, 455, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 842, 843, 845, 847, 849, 851, 853, 859, 861, 862, 875, 877, 879, 898, 899, 901, 907, 908, 909, 910, 911, 918, 919, 920, 921, 922, 938, 944, 945, 946, 947, 951, 952, 957, 962, 972, 973, 975, 976, 977, 981, 982, 984, 986, 992, 995, 1002, 1006, 1012, 1013, 1015, 1016, 1035, 1036, 1038, 1039, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1171, 1172, 1174, 1175, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1200, 1210, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1243, 1246, 1247, 1273, 1275, 1277, 1295, 1297, 1299, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1324, 1326, 1327, 1328, 1330, 1332, 1333, 1335, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1414, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1476, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1533, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1576, 1577, 1579, 1580, 1582, 1584, 1585, 1587, 1589, 1596, 1597, 1599, 1601, 1602, 1614, 1616, 1631, 1632, 1633, 1635, 1637, 1639, 1642, 1643, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1811, 1814, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1866, 1867, 1869, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 2008, 2010, 2012, 2013, 2016, 2023, 2024, 2025, 2027, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2118, 2124, 2125, 2130, 2131, 2136, 2142, 2143, 2144, 2147, 2148, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2184, 2191, 2195, 2198, 2200, 2213, 2214, 2215, 2216, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2275, 2276, 2277, 2278], "invers": [1, 6, 7, 8, 51, 52, 53, 62, 63, 99, 100, 101, 110, 111, 138, 170, 465, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 898, 899, 900, 901, 1134, 1141, 1704, 1746, 1747, 1748, 1749, 1750, 1761, 1764, 1781, 1782, 1783, 1784, 1785], "check_equ": [1, 148], "x1": [1, 7, 13, 17, 18, 19, 20, 35, 38, 39, 47, 48, 51, 52, 53, 54, 55, 62, 63, 72, 73, 84, 89, 90, 95, 96, 99, 100, 101, 102, 103, 110, 111, 120, 121, 124, 125, 133, 138, 140, 142, 144, 147, 148, 239, 260, 261, 302, 305, 320, 324, 325, 338, 339, 340, 341, 342, 364, 366, 412, 423, 430, 449, 465, 481, 484, 485, 501, 504, 505, 511, 514, 515, 521, 524, 525, 526, 529, 530, 531, 534, 535, 536, 539, 540, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 604, 605, 626, 627, 629, 630, 631, 632, 633, 634, 635, 656, 659, 660, 661, 664, 665, 671, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 711, 714, 715, 726, 727, 728, 729, 730, 761, 762, 765, 781, 782, 783, 784, 785, 798, 799, 800, 801, 802, 865, 866, 867, 868, 869, 880, 881, 938, 939, 942, 947, 948, 949, 950, 951, 953, 956, 957, 960, 965, 982, 985, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1057, 1058, 1059, 1060, 1061, 1072, 1075, 1076, 1154, 1155, 1156, 1157, 1158, 1171, 1172, 1173, 1174, 1175, 1188, 1199, 1273, 1274, 1275, 1276, 1277, 1396, 1398, 1400, 1401, 1402, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1418, 1419, 1704, 1710, 1711, 1712, 1713, 1714, 1741, 1744, 1745, 1751, 1752, 1754, 1755, 1776, 1779, 1780, 1796, 1799, 1800, 1811, 1812, 1814, 1815, 1818, 1829, 1830, 1833, 1997, 2018, 2019, 2020, 2021, 2022, 2044, 2050, 2053, 2054, 2195, 2215], "x2": [1, 7, 13, 17, 18, 19, 20, 35, 38, 39, 47, 48, 51, 52, 53, 54, 55, 62, 63, 72, 73, 84, 89, 90, 95, 96, 99, 100, 101, 102, 103, 110, 111, 120, 121, 133, 138, 140, 142, 144, 147, 148, 239, 302, 305, 320, 324, 325, 338, 339, 340, 341, 342, 412, 423, 430, 449, 465, 481, 482, 483, 484, 485, 501, 502, 503, 504, 505, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 726, 727, 728, 729, 730, 761, 762, 763, 764, 765, 781, 782, 783, 784, 785, 798, 799, 800, 801, 802, 865, 866, 867, 868, 869, 938, 939, 942, 947, 948, 949, 950, 951, 953, 956, 957, 960, 965, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1057, 1058, 1059, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1154, 1155, 1156, 1157, 1158, 1171, 1172, 1173, 1174, 1175, 1188, 1199, 1273, 1274, 1275, 1276, 1277, 1323, 1324, 1396, 1398, 1400, 1401, 1402, 1403, 1407, 1408, 1409, 1410, 1411, 1412, 1704, 1710, 1711, 1712, 1713, 1714, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1753, 1754, 1755, 1776, 1777, 1778, 1779, 1780, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1829, 1830, 1831, 1832, 1833, 1997, 2018, 2019, 2020, 2021, 2022, 2195, 2215], "check_exist": 1, "check_fals": 1, "express": [1, 9, 22, 51, 52, 53, 99, 100, 101, 141, 143, 148, 154, 159, 465, 471, 474, 486, 489, 496, 499, 501, 504, 546, 547, 548, 549, 550, 556, 559, 716, 719, 741, 742, 743, 744, 745, 766, 767, 768, 769, 770, 938, 963, 1328, 1329, 1330, 1331, 1332, 2130, 2131], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 10, 45, 46, 72, 73, 93, 94, 120, 121, 138, 149, 151, 239, 268, 269, 270, 271, 272, 273, 465, 601, 604, 631, 634, 1997, 2013, 2014, 2015, 2016, 2017], "dtype": [1, 10, 35, 38, 39, 45, 46, 47, 48, 53, 60, 61, 62, 63, 70, 71, 72, 73, 78, 79, 93, 94, 95, 96, 101, 102, 103, 108, 109, 110, 111, 118, 119, 120, 121, 126, 127, 133, 135, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 154, 156, 239, 241, 242, 243, 244, 245, 246, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 451, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 890, 891, 892, 895, 912, 913, 914, 915, 916, 938, 943, 959, 982, 983, 984, 985, 986, 1032, 1033, 1034, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1104, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1140, 1248, 1250, 1253, 1254, 1255, 1256, 1257, 1263, 1264, 1265, 1266, 1267, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1343, 1346, 1348, 1382, 1383, 1384, 1385, 1407, 1459, 1461, 1464, 1465, 1471, 1474, 1568, 1569, 1579, 1580, 1582, 1583, 1640, 1652, 1654, 1655, 1679, 1680, 1681, 1682, 1683, 1704, 1756, 1757, 1758, 1759, 1760, 1834, 1835, 1836, 1837, 1838, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2011, 2044, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2087, 2088, 2089, 2090, 2091, 2096, 2097, 2098, 2099, 2100, 2106, 2107, 2110, 2112, 2115, 2118, 2124, 2125, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2181, 2182, 2184, 2187, 2188, 2189, 2195, 2213, 2214, 2215, 2216, 2217, 2227, 2228, 2230, 2231, 2235, 2236, 2243, 2244, 2245, 2246, 2249, 2250, 2256, 2257], "check_gather_input_valid": 1, "param": [1, 11, 12, 53, 84, 87, 88, 89, 90, 101, 102, 103, 159, 465, 691, 694, 849, 852, 938, 941, 1407, 1413, 1466, 1469, 1470, 1471, 1474, 1475, 1834, 1837], "indic": [1, 11, 12, 29, 45, 46, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 87, 88, 93, 94, 95, 96, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 137, 143, 144, 148, 159, 239, 244, 245, 246, 294, 295, 296, 297, 298, 380, 382, 384, 392, 393, 395, 396, 398, 400, 465, 736, 739, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 880, 886, 887, 898, 900, 918, 919, 920, 921, 922, 938, 952, 967, 968, 969, 970, 971, 977, 980, 987, 988, 989, 990, 991, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1082, 1083, 1084, 1085, 1086, 1134, 1135, 1136, 1137, 1141, 1143, 1144, 1145, 1148, 1149, 1150, 1159, 1160, 1162, 1188, 1193, 1195, 1200, 1208, 1209, 1210, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1333, 1334, 1343, 1349, 1350, 1351, 1352, 1353, 1354, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1390, 1407, 1415, 1417, 1419, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1601, 1602, 1612, 1642, 1643, 1644, 1646, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1704, 1834, 1835, 1837, 1838, 1860, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1945, 1946, 1949, 1951, 1953, 1954, 1955, 1957, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1974, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2118, 2121, 2123, 2142, 2144, 2147, 2148, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2171, 2172, 2195, 2214, 2215, 2216, 2218, 2219, 2227, 2230], "axi": [1, 11, 36, 37, 45, 46, 53, 54, 55, 62, 63, 64, 65, 66, 67, 72, 73, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 93, 94, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 126, 127, 128, 129, 136, 138, 140, 142, 144, 145, 147, 148, 150, 152, 154, 156, 159, 170, 189, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 239, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298, 430, 455, 875, 876, 877, 878, 879, 892, 893, 894, 895, 896, 898, 899, 900, 901, 907, 908, 909, 910, 911, 918, 919, 920, 921, 922, 923, 926, 938, 943, 944, 952, 959, 964, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1042, 1043, 1044, 1045, 1046, 1062, 1063, 1064, 1065, 1066, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1159, 1160, 1161, 1162, 1163, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1194, 1196, 1197, 1198, 1200, 1206, 1207, 1208, 1209, 1210, 1232, 1233, 1234, 1235, 1236, 1243, 1246, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1278, 1280, 1281, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1316, 1319, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1388, 1389, 1390, 1407, 1441, 1444, 1466, 1467, 1468, 1469, 1470, 1601, 1640, 1674, 1677, 1694, 1697, 1704, 1710, 1711, 1712, 1713, 1714, 1725, 1726, 1727, 1728, 1729, 1756, 1757, 1758, 1759, 1760, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1844, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1970, 1992, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2227, 2230, 2236, 2245, 2248], "batch_dim": [1, 11, 12, 54, 55, 102, 103, 1407, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 13, 17, 142], "check_inplace_sizes_valid": 1, "var": [1, 14, 21, 78, 79, 126, 127, 130, 131, 140, 154, 234, 235, 236, 237, 238, 1941, 1942, 1943, 2060, 2102], "data": [1, 14, 21, 23, 25, 32, 35, 38, 39, 45, 46, 48, 51, 52, 53, 54, 55, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 87, 88, 89, 90, 93, 94, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 139, 141, 144, 145, 146, 147, 149, 151, 152, 154, 156, 239, 241, 242, 244, 245, 246, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 343, 346, 348, 349, 350, 351, 352, 354, 364, 366, 368, 369, 370, 372, 374, 375, 377, 378, 380, 381, 383, 385, 386, 387, 390, 392, 394, 396, 399, 401, 404, 406, 409, 411, 418, 419, 420, 421, 423, 429, 430, 432, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 880, 881, 882, 883, 884, 885, 888, 891, 902, 905, 912, 913, 914, 915, 916, 917, 928, 931, 938, 941, 961, 963, 982, 983, 984, 985, 986, 1032, 1033, 1034, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1092, 1093, 1094, 1095, 1096, 1104, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1142, 1164, 1166, 1167, 1176, 1179, 1188, 1208, 1253, 1254, 1255, 1256, 1257, 1268, 1278, 1279, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1328, 1329, 1330, 1331, 1332, 1336, 1338, 1341, 1343, 1346, 1348, 1350, 1354, 1382, 1383, 1384, 1385, 1407, 1459, 1461, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1568, 1570, 1571, 1572, 1640, 1641, 1672, 1673, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1725, 1726, 1728, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1866, 1869, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1911, 1914, 1916, 1919, 1936, 1940, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2030, 2031, 2032, 2035, 2036, 2037, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2124, 2125, 2130, 2131, 2132, 2134, 2135, 2136, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2184, 2188, 2189, 2195, 2200, 2213, 2214, 2215, 2216, 2218, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2246, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "check_isinst": 1, "allowed_typ": [1, 15], "check_kernel_padding_s": 1, "kernel_s": [1, 16], "padding_s": [1, 16], "check_less": [1, 142], "check_one_way_broadcast": 1, "check_same_dtyp": 1, "check_shap": [1, 87, 88], "check_shapes_broadcast": 1, "check_tru": 1, "true": [1, 22, 35, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 157, 158, 159, 189, 191, 193, 194, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 241, 243, 244, 247, 251, 252, 253, 255, 257, 259, 260, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 355, 357, 359, 361, 364, 365, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 413, 415, 417, 429, 430, 436, 437, 438, 439, 440, 441, 443, 444, 447, 450, 451, 452, 456, 457, 459, 464, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 793, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 842, 843, 845, 847, 849, 851, 853, 854, 855, 856, 857, 859, 862, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 892, 896, 898, 899, 900, 901, 902, 904, 906, 907, 911, 912, 916, 917, 918, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 938, 939, 940, 943, 955, 958, 959, 962, 967, 969, 971, 972, 976, 977, 981, 982, 984, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1040, 1041, 1042, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1134, 1141, 1142, 1147, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1175, 1181, 1182, 1183, 1185, 1187, 1188, 1209, 1212, 1214, 1216, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1275, 1277, 1278, 1279, 1282, 1284, 1286, 1289, 1293, 1295, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1332, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1364, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1438, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1473, 1475, 1477, 1479, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1547, 1551, 1553, 1554, 1556, 1557, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1590, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1780, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1811, 1812, 1813, 1819, 1820, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1954, 1956, 1957, 1958, 1959, 1963, 1964, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2147, 2148, 2159, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2184, 2187, 2188, 2189, 2195, 2199, 2200, 2213, 2214, 2215, 2216, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2244, 2245, 2248, 2251, 2252, 2256, 2257, 2286, 2296], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 87, 88, 132, 133, 143, 148, 149, 150, 151, 156, 157, 1407, 1420, 1423, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2272, 2275, 2276], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 32, 37, 39, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 86, 88, 90, 92, 94, 96, 97, 98, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 134, 136, 139, 140, 141, 144, 145, 146, 147, 149, 150, 152, 153, 154, 156, 157, 159, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2122, 2123, 2125, 2127, 2129, 2130, 2133, 2135, 2136, 2137, 2140, 2141, 2143, 2144, 2145, 2146, 2148, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2172, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2182, 2183, 2184, 2187, 2188, 2189, 2241, 2244, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2305, 2307], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 32, 37, 39, 40, 41, 42, 43, 44, 46, 48, 50, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 86, 88, 90, 92, 94, 96, 98, 100, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 159, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2122, 2123, 2125, 2126, 2127, 2128, 2129, 2131, 2134, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2148, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2172, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2182, 2183, 2184, 2185, 2191, 2195, 2199, 2204, 2213, 2214, 2215, 2218, 2221, 2241, 2244, 2272, 2275, 2276, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2305, 2307], "ml": [23, 25, 26, 27, 30, 148, 153, 154, 155, 157, 158, 159, 170, 2118, 2126, 2127, 2128, 2129, 2130, 2133, 2135, 2137], "explos": [23, 25, 2118], "A": [23, 24, 25, 26, 29, 30, 31, 32, 45, 46, 47, 48, 53, 54, 55, 66, 67, 70, 71, 78, 79, 80, 81, 84, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 110, 111, 114, 115, 118, 119, 122, 123, 128, 129, 132, 136, 138, 139, 142, 144, 145, 148, 149, 150, 154, 157, 171, 239, 260, 261, 289, 290, 292, 325, 338, 339, 340, 341, 342, 430, 431, 434, 455, 465, 681, 685, 696, 699, 706, 709, 721, 724, 798, 800, 802, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 880, 881, 886, 887, 912, 913, 914, 915, 916, 938, 959, 977, 980, 982, 983, 984, 985, 1032, 1033, 1034, 1106, 1107, 1108, 1110, 1188, 1195, 1207, 1209, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1316, 1319, 1343, 1347, 1348, 1360, 1362, 1364, 1368, 1371, 1372, 1375, 1407, 1415, 1417, 1419, 1481, 1498, 1500, 1503, 1505, 1558, 1560, 1562, 1563, 1565, 1567, 1574, 1575, 1576, 1577, 1602, 1638, 1640, 1679, 1682, 1704, 1725, 1727, 1729, 1746, 1748, 1750, 1771, 1773, 1775, 1776, 1779, 1796, 1799, 1801, 1802, 1804, 1805, 1860, 1861, 1863, 1865, 1876, 1878, 1880, 1886, 1888, 1890, 1906, 1907, 1908, 1909, 1910, 1916, 1919, 1945, 1946, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1961, 1962, 1963, 1964, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2024, 2025, 2027, 2060, 2071, 2072, 2074, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2130, 2131, 2142, 2144, 2147, 2148, 2149, 2153, 2154, 2155, 2157, 2158, 2181, 2182, 2184, 2191, 2195, 2200, 2218, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2245, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2275, 2276, 2277, 2278], "huge": [23, 25, 137, 157, 2118, 2130, 2136], "number": [23, 24, 32, 33, 35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 136, 137, 138, 139, 140, 147, 150, 152, 154, 157, 233, 239, 241, 242, 260, 261, 269, 272, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 292, 294, 295, 296, 297, 298, 325, 338, 339, 340, 341, 342, 355, 356, 358, 359, 360, 362, 363, 368, 369, 372, 380, 383, 387, 390, 392, 394, 396, 399, 401, 404, 406, 409, 413, 414, 415, 416, 417, 430, 447, 448, 449, 465, 481, 484, 501, 504, 541, 544, 561, 563, 586, 589, 591, 594, 621, 622, 623, 624, 625, 681, 684, 686, 688, 690, 711, 714, 726, 729, 731, 734, 736, 739, 776, 780, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 818, 819, 820, 821, 854, 855, 856, 857, 865, 866, 868, 869, 875, 876, 877, 878, 879, 880, 886, 887, 907, 908, 909, 910, 911, 938, 939, 940, 942, 943, 944, 954, 955, 958, 959, 961, 1087, 1088, 1089, 1090, 1091, 1106, 1109, 1181, 1182, 1188, 1189, 1191, 1206, 1207, 1209, 1248, 1249, 1250, 1251, 1252, 1263, 1266, 1282, 1285, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1407, 1459, 1460, 1461, 1462, 1463, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1535, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1584, 1586, 1588, 1596, 1600, 1601, 1640, 1641, 1672, 1673, 1679, 1680, 1681, 1682, 1683, 1694, 1697, 1704, 1730, 1731, 1734, 1736, 1739, 1766, 1767, 1768, 1769, 1770, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1860, 1861, 1862, 1863, 1864, 1865, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1916, 1919, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1970, 1971, 1972, 1973, 1974, 1975, 1991, 1997, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2060, 2061, 2064, 2066, 2069, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2124, 2125, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2170, 2195, 2200, 2214, 2216, 2227, 2230, 2231, 2235, 2236, 2241, 2242, 2245, 2248, 2252, 2253, 2257, 2272, 2274, 2276, 2277, 2278], "tool": [23, 26, 33, 140, 155, 159, 170, 171, 2118, 2128, 2129, 2130, 2131, 2133, 2136, 2137], "have": [23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 171, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 369, 372, 430, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 796, 813, 816, 818, 821, 823, 824, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 880, 881, 898, 900, 902, 905, 917, 918, 921, 938, 941, 961, 963, 966, 967, 970, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1032, 1033, 1034, 1072, 1073, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1141, 1142, 1143, 1144, 1145, 1147, 1150, 1159, 1162, 1164, 1165, 1166, 1169, 1170, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1193, 1207, 1209, 1212, 1215, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1278, 1279, 1280, 1281, 1289, 1290, 1292, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1343, 1349, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1376, 1377, 1378, 1379, 1380, 1401, 1405, 1406, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1941, 1945, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2147, 2148, 2149, 2157, 2159, 2171, 2173, 2175, 2181, 2227, 2230], "explod": [23, 24, 2118, 2149, 2153], "onto": [23, 24, 1945, 1952, 1958, 2118, 2130], "scene": [23, 24, 56, 57, 132, 153, 155, 1614, 1615, 2118, 2130], "b": [23, 26, 27, 35, 38, 39, 51, 52, 53, 54, 55, 60, 61, 68, 69, 78, 79, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 140, 145, 149, 153, 154, 155, 157, 158, 159, 169, 189, 191, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 224, 226, 227, 231, 239, 251, 253, 260, 261, 268, 269, 271, 272, 273, 279, 281, 283, 294, 296, 297, 298, 302, 305, 320, 324, 325, 333, 335, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 364, 365, 366, 396, 398, 400, 401, 404, 413, 415, 417, 437, 439, 441, 456, 457, 459, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 789, 792, 793, 797, 798, 799, 800, 801, 802, 803, 805, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 843, 846, 854, 855, 856, 857, 859, 860, 862, 865, 867, 869, 875, 877, 879, 880, 881, 892, 894, 895, 896, 907, 909, 911, 912, 914, 916, 917, 918, 920, 922, 923, 925, 927, 938, 939, 953, 954, 955, 961, 963, 972, 974, 976, 982, 984, 985, 986, 987, 989, 991, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1035, 1037, 1039, 1042, 1044, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1059, 1061, 1062, 1064, 1066, 1067, 1069, 1072, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1096, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1140, 1142, 1154, 1156, 1158, 1159, 1160, 1162, 1164, 1169, 1171, 1173, 1175, 1176, 1178, 1180, 1181, 1182, 1183, 1185, 1187, 1188, 1206, 1209, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1234, 1236, 1238, 1240, 1242, 1248, 1250, 1252, 1258, 1262, 1263, 1265, 1267, 1273, 1275, 1277, 1282, 1285, 1289, 1291, 1293, 1300, 1302, 1304, 1305, 1307, 1311, 1313, 1314, 1315, 1316, 1318, 1320, 1323, 1325, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1350, 1351, 1353, 1355, 1356, 1358, 1359, 1360, 1361, 1363, 1364, 1376, 1377, 1379, 1382, 1383, 1384, 1386, 1387, 1389, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1461, 1463, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1483, 1484, 1485, 1486, 1487, 1492, 1494, 1495, 1496, 1498, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1542, 1544, 1545, 1546, 1558, 1560, 1561, 1562, 1568, 1569, 1571, 1572, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1588, 1596, 1597, 1599, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1614, 1616, 1617, 1619, 1621, 1622, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1640, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1674, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1694, 1697, 1699, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1717, 1718, 1725, 1727, 1728, 1729, 1736, 1738, 1739, 1740, 1741, 1744, 1746, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1764, 1766, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1779, 1791, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1822, 1823, 1824, 1825, 1827, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1864, 1865, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1945, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2027, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2044, 2045, 2047, 2048, 2049, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2092, 2094, 2095, 2096, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2109, 2110, 2111, 2112, 2114, 2115, 2116, 2118, 2126], "why": [23, 25, 33, 147, 156, 2118], "unifi": [23, 25, 87, 88, 132, 133, 134, 138, 142, 148, 152, 154, 171, 430, 455, 2118, 2126, 2127, 2128, 2130, 2134, 2137], "should": [23, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 78, 79, 84, 85, 86, 87, 88, 89, 90, 93, 94, 99, 100, 101, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 189, 202, 203, 204, 206, 222, 223, 224, 226, 232, 233, 239, 284, 285, 287, 294, 295, 296, 297, 298, 307, 309, 311, 312, 314, 316, 325, 343, 346, 412, 430, 432, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 704, 706, 707, 708, 710, 711, 712, 713, 714, 715, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 791, 838, 839, 840, 841, 842, 843, 845, 847, 849, 853, 858, 917, 938, 961, 963, 964, 987, 988, 989, 990, 991, 1047, 1048, 1082, 1083, 1084, 1085, 1086, 1134, 1142, 1144, 1145, 1188, 1203, 1206, 1238, 1239, 1240, 1241, 1242, 1282, 1285, 1295, 1296, 1298, 1305, 1306, 1311, 1312, 1313, 1314, 1315, 1328, 1329, 1330, 1331, 1332, 1365, 1366, 1367, 1406, 1407, 1425, 1508, 1509, 1511, 1601, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1641, 1672, 1673, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1860, 1896, 1897, 1898, 1900, 1941, 1945, 1965, 1970, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2047, 2049, 2060, 2061, 2064, 2066, 2069, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2118, 2126, 2127, 2130, 2132, 2137, 2139, 2142, 2144, 2145, 2147, 2148, 2149, 2154, 2159, 2171, 2173, 2175, 2181, 2195, 2214, 2216, 2218, 2245, 2252], "we": [23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 53, 82, 83, 101, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 170, 171, 858, 1047, 1048, 1188, 1209, 1360, 1361, 1362, 1363, 1364, 1407, 1441, 1444, 1568, 1572, 1602, 1612, 1613, 1618, 1638, 2117, 2118, 2126, 2130, 2131, 2135, 2136, 2147, 2148, 2171, 2172, 2286, 2294, 2296, 2297, 2302], "try": [23, 25, 26, 29, 31, 32, 33, 87, 88, 133, 134, 136, 137, 138, 142, 143, 147, 148, 149, 154, 156, 171, 1407, 1589, 2118, 2149, 2157, 2286, 2292], "them": [23, 24, 25, 26, 29, 31, 33, 133, 134, 135, 136, 137, 142, 146, 147, 148, 149, 150, 154, 156, 157, 158, 171, 1407, 1425, 1536, 2117, 2118, 2127, 2128, 2130, 2132, 2136, 2142, 2145, 2227, 2238], "c": [23, 25, 26, 27, 32, 53, 54, 55, 56, 57, 60, 61, 66, 67, 78, 79, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 126, 127, 132, 136, 140, 145, 152, 153, 154, 155, 157, 171, 239, 279, 281, 294, 296, 297, 298, 325, 333, 337, 369, 371, 372, 373, 380, 382, 383, 384, 465, 531, 534, 636, 638, 639, 640, 641, 643, 644, 645, 701, 704, 736, 738, 739, 793, 795, 797, 808, 810, 812, 813, 815, 817, 818, 820, 822, 859, 860, 862, 923, 927, 928, 930, 932, 933, 935, 937, 987, 989, 991, 997, 998, 999, 1000, 1001, 1067, 1071, 1082, 1084, 1086, 1092, 1093, 1095, 1188, 1196, 1278, 1279, 1391, 1392, 1407, 1415, 1416, 1417, 1418, 1419, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1454, 1483, 1485, 1487, 1498, 1500, 1503, 1505, 1584, 1587, 1588, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1642, 1643, 1647, 1648, 1650, 1652, 1655, 1657, 1659, 1660, 1661, 1662, 1665, 1667, 1669, 1670, 1671, 1704, 1736, 1739, 1740, 1746, 1749, 1860, 1876, 1880, 1896, 1897, 1898, 1899, 1900, 1916, 1919, 1945, 1949, 1953, 1954, 1955, 1957, 1963, 1964, 1997, 2013, 2016, 2060, 2066, 2068, 2069, 2070, 2071, 2072, 2074, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2117, 2118, 2126, 2130, 2134, 2135, 2137], "standard": [23, 51, 52, 53, 62, 63, 68, 69, 70, 71, 78, 79, 99, 100, 101, 116, 117, 118, 119, 126, 127, 132, 133, 134, 136, 138, 141, 144, 147, 150, 151, 171, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 369, 372, 380, 383, 413, 416, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 928, 931, 1092, 1093, 1094, 1095, 1096, 1164, 1167, 1278, 1279, 1407, 1601, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1860, 1866, 1869, 1876, 1879, 1881, 1884, 1886, 1889, 1896, 1899, 1901, 1904, 1911, 1914, 1916, 1919, 1936, 1940, 1965, 1966, 1967, 1968, 1969, 1970, 1981, 1982, 1983, 1984, 1985, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2110, 2112, 2115, 2118, 2126, 2128, 2129, 2132, 2133, 2135, 2149, 2154, 2173, 2174, 2245, 2250], "re": [23, 24, 25, 27, 31, 32, 33, 54, 55, 72, 73, 120, 121, 132, 133, 138, 147, 148, 151, 152, 156, 159, 171, 430, 455, 1407, 1425, 1441, 1442, 1444, 1704, 1811, 1814, 1860, 1901, 1904, 1997, 2008, 2009, 2010, 2011, 2012, 2018, 2019, 2020, 2021, 2022, 2118, 2130], "collabor": [23, 24, 25, 2118], "The": [23, 24, 26, 27, 28, 29, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 170, 172, 183, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 239, 241, 242, 263, 266, 269, 271, 273, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298, 302, 304, 306, 307, 309, 311, 312, 314, 316, 320, 321, 323, 325, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 348, 350, 352, 354, 355, 356, 358, 359, 360, 362, 363, 368, 374, 375, 377, 378, 380, 382, 384, 386, 392, 393, 394, 395, 396, 398, 399, 400, 406, 409, 411, 413, 415, 417, 418, 420, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 791, 798, 799, 800, 801, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 842, 843, 844, 845, 847, 849, 851, 853, 854, 855, 856, 857, 859, 861, 870, 871, 872, 874, 875, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 915, 918, 922, 923, 926, 938, 939, 944, 946, 947, 953, 955, 958, 959, 960, 961, 963, 964, 965, 966, 967, 970, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 995, 997, 1000, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1012, 1013, 1015, 1032, 1033, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1062, 1066, 1067, 1070, 1072, 1074, 1075, 1076, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1164, 1166, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1192, 1194, 1196, 1197, 1198, 1201, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1485, 1487, 1488, 1491, 1492, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1555, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1578, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1725, 1726, 1728, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2008, 2010, 2012, 2013, 2016, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2124, 2125, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2142, 2143, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2177, 2178, 2179, 2184, 2187, 2188, 2189, 2195, 2215, 2216, 2227, 2230, 2231, 2235, 2236, 2245, 2252, 2256, 2257, 2258, 2259, 2272, 2275, 2276, 2286, 2292, 2294], "consortium": [23, 25, 2118], "python": [23, 24, 25, 29, 30, 32, 33, 53, 70, 71, 101, 118, 119, 133, 134, 136, 137, 142, 143, 148, 150, 152, 154, 156, 157, 171, 239, 241, 242, 430, 450, 464, 465, 726, 729, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 912, 913, 914, 915, 916, 1032, 1033, 1034, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1309, 1310, 1407, 1601, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2117, 2118, 2127, 2130, 2131, 2132, 2136, 2137, 2286, 2302], "api": [23, 24, 32, 51, 52, 62, 63, 99, 100, 132, 134, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 171, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 369, 372, 380, 383, 411, 413, 416, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 928, 931, 1164, 1167, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1860, 1866, 1869, 1876, 1879, 1881, 1884, 1886, 1889, 1896, 1899, 1901, 1904, 1911, 1914, 1916, 1919, 1936, 1940, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2117, 2118, 2126, 2128, 2130, 2132, 2135, 2137], "open": [24, 25, 26, 27, 29, 32, 33, 70, 71, 118, 119, 138, 141, 148, 149, 152, 170, 239, 241, 242, 1970, 1976, 1977, 1978, 1979, 1980, 1986, 1989, 2118, 2128, 2129, 2130, 2132, 2133], "project": [24, 25, 26, 29, 32, 33, 134, 135, 150, 158, 170, 171, 848, 889, 1134, 1138, 1139, 1151, 1287, 2126, 2128, 2130, 2133, 2137], "ha": [24, 25, 26, 31, 33, 45, 46, 53, 62, 63, 66, 67, 74, 75, 78, 79, 87, 88, 95, 96, 101, 102, 103, 110, 111, 114, 115, 122, 123, 126, 127, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 170, 171, 239, 284, 285, 287, 392, 395, 396, 400, 430, 436, 465, 466, 469, 621, 624, 711, 714, 731, 734, 870, 871, 938, 961, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1208, 1311, 1314, 1350, 1352, 1354, 1492, 1494, 1496, 1602, 1631, 1639, 1704, 1751, 1754, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1821, 1822, 1823, 1860, 1876, 1877, 1878, 1879, 1880, 1911, 1914, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2079, 2082, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2126, 2129, 2130, 2132, 2133, 2136, 2147, 2148, 2227, 2231, 2235, 2236, 2256, 2259, 2286, 2292, 2294], "grown": 24, "consider": [24, 140, 144, 152, 2127, 2128], "recent": [24, 25, 32, 33, 150], "year": [24, 26, 133, 171, 2118, 2130], "especi": [24, 32, 152, 2130], "deep": [24, 27, 30, 31, 33, 87, 88, 133, 136, 138, 149, 153, 156, 157, 1407, 1441, 1444, 2118, 2128, 2130, 2133, 2134, 2136, 2137], "learn": [24, 25, 27, 30, 31, 32, 56, 57, 104, 105, 132, 133, 145, 153, 170, 1407, 1441, 1444, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1941, 1942, 1943, 1944, 2117, 2118, 2128, 2132, 2133, 2134, 2135, 2136, 2137, 2175, 2176, 2177, 2178, 2179, 2180], "can": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 47, 48, 53, 62, 63, 66, 67, 70, 71, 74, 75, 95, 96, 101, 110, 111, 114, 115, 118, 119, 122, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 239, 244, 245, 246, 279, 280, 282, 289, 292, 325, 348, 349, 350, 351, 352, 430, 434, 453, 454, 455, 789, 791, 843, 846, 880, 881, 898, 900, 912, 915, 982, 985, 1040, 1041, 1098, 1099, 1100, 1101, 1102, 1111, 1112, 1113, 1114, 1115, 1134, 1141, 1147, 1159, 1162, 1295, 1296, 1298, 1305, 1307, 1308, 1333, 1334, 1407, 1601, 1602, 1612, 1704, 1725, 1727, 1729, 1751, 1752, 1754, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1821, 1822, 1860, 1896, 1897, 1898, 1899, 1900, 1916, 1917, 1918, 1920, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2024, 2025, 2026, 2027, 2117, 2118, 2127, 2128, 2129, 2130, 2131, 2133, 2134, 2136, 2137, 2142, 2144, 2195, 2214, 2216, 2227, 2228, 2230, 2231, 2235, 2236, 2241, 2242, 2245, 2248, 2249, 2250, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "seen": [24, 25, 137, 140, 142, 148, 150, 154, 156, 157, 912, 915, 1305, 1308, 2136, 2286, 2302], "from": [24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 171, 239, 241, 242, 244, 245, 255, 256, 258, 263, 266, 268, 269, 270, 271, 272, 273, 284, 287, 289, 290, 292, 302, 303, 304, 305, 306, 320, 321, 322, 323, 324, 325, 348, 349, 350, 351, 352, 396, 397, 412, 413, 414, 415, 416, 417, 430, 436, 445, 449, 454, 455, 465, 556, 557, 558, 559, 560, 716, 717, 718, 719, 720, 751, 754, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 865, 866, 867, 868, 869, 880, 881, 886, 887, 889, 912, 915, 917, 918, 920, 922, 938, 942, 947, 948, 949, 952, 961, 966, 982, 983, 984, 985, 986, 1012, 1015, 1017, 1020, 1022, 1025, 1032, 1033, 1034, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1066, 1072, 1073, 1134, 1138, 1139, 1142, 1151, 1188, 1206, 1207, 1208, 1282, 1285, 1287, 1289, 1290, 1292, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1316, 1319, 1350, 1354, 1368, 1371, 1372, 1375, 1386, 1387, 1389, 1401, 1403, 1405, 1407, 1425, 1438, 1439, 1440, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1536, 1552, 1574, 1577, 1601, 1602, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1637, 1640, 1642, 1644, 1646, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1694, 1697, 1704, 1725, 1726, 1727, 1728, 1729, 1801, 1803, 1805, 1819, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1860, 1866, 1867, 1869, 1881, 1882, 1883, 1884, 1885, 1896, 1897, 1898, 1899, 1900, 1911, 1914, 1941, 1942, 1943, 1944, 1945, 1947, 1958, 1959, 1960, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 2003, 2004, 2005, 2006, 2007, 2018, 2020, 2022, 2023, 2024, 2028, 2034, 2038, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2126, 2128, 2129, 2130, 2131, 2132, 2134, 2135, 2136, 2137, 2142, 2144, 2146, 2147, 2148, 2149, 2151, 2152, 2153, 2156, 2157, 2159, 2167, 2170, 2171, 2172, 2175, 2179, 2184, 2185, 2191, 2195, 2213, 2214, 2215, 2216, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278, 2286, 2292, 2294, 2296], "rapidli": 24, "increas": [24, 62, 63, 66, 67, 110, 111, 114, 115, 138, 142, 148, 151, 152, 1188, 1206, 1282, 1285, 1704, 1824, 1825, 1826, 1827, 1828, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940, 1945, 1958, 2130, 2245, 2248, 2252], "github": [24, 28, 30, 31, 33, 133, 137, 138, 140, 141, 150], "repo": [24, 28, 29, 30, 33, 133, 137, 138, 148, 149, 150, 151], "contain": [24, 28, 29, 31, 32, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 78, 79, 80, 81, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 144, 145, 146, 147, 150, 153, 154, 155, 158, 171, 189, 191, 194, 197, 200, 202, 205, 207, 210, 212, 215, 217, 220, 222, 227, 230, 239, 241, 242, 244, 246, 251, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 289, 294, 295, 297, 299, 300, 302, 305, 307, 309, 311, 312, 314, 316, 317, 319, 320, 324, 325, 333, 336, 338, 339, 341, 343, 346, 348, 351, 355, 359, 364, 366, 369, 370, 372, 374, 377, 380, 381, 383, 387, 390, 392, 396, 401, 404, 406, 413, 416, 430, 437, 443, 444, 445, 449, 456, 465, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 763, 765, 766, 768, 770, 771, 773, 775, 776, 778, 780, 781, 783, 785, 789, 790, 791, 792, 793, 798, 799, 803, 808, 813, 818, 823, 826, 828, 831, 833, 836, 838, 843, 849, 854, 856, 858, 859, 865, 870, 871, 875, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893, 895, 898, 902, 907, 910, 912, 917, 918, 923, 928, 931, 933, 938, 944, 961, 963, 967, 972, 977, 982, 985, 987, 988, 992, 997, 998, 1000, 1002, 1007, 1012, 1017, 1022, 1027, 1035, 1040, 1041, 1042, 1047, 1048, 1049, 1051, 1053, 1055, 1057, 1062, 1067, 1072, 1073, 1077, 1082, 1083, 1087, 1092, 1098, 1106, 1107, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1129, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1154, 1159, 1164, 1167, 1171, 1176, 1177, 1179, 1181, 1182, 1183, 1188, 1196, 1206, 1207, 1209, 1212, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1238, 1243, 1248, 1253, 1258, 1259, 1261, 1263, 1264, 1273, 1274, 1282, 1285, 1289, 1295, 1298, 1300, 1311, 1312, 1314, 1316, 1319, 1323, 1328, 1329, 1331, 1343, 1347, 1350, 1355, 1359, 1360, 1364, 1368, 1371, 1372, 1375, 1376, 1382, 1385, 1386, 1391, 1396, 1398, 1401, 1403, 1407, 1408, 1411, 1413, 1414, 1415, 1420, 1426, 1429, 1431, 1434, 1441, 1444, 1446, 1449, 1451, 1454, 1456, 1458, 1459, 1466, 1469, 1471, 1474, 1482, 1483, 1486, 1492, 1493, 1495, 1498, 1501, 1503, 1506, 1508, 1514, 1519, 1524, 1525, 1526, 1527, 1537, 1538, 1542, 1545, 1551, 1552, 1558, 1559, 1561, 1563, 1568, 1572, 1574, 1577, 1579, 1583, 1584, 1588, 1592, 1596, 1601, 1602, 1604, 1607, 1608, 1611, 1614, 1617, 1619, 1622, 1623, 1627, 1630, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1674, 1677, 1679, 1682, 1684, 1687, 1689, 1694, 1697, 1699, 1702, 1704, 1705, 1706, 1708, 1710, 1711, 1713, 1715, 1718, 1720, 1723, 1725, 1726, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1741, 1744, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1759, 1761, 1764, 1766, 1767, 1769, 1771, 1772, 1774, 1776, 1779, 1781, 1782, 1784, 1786, 1787, 1789, 1791, 1792, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1815, 1819, 1821, 1823, 1824, 1826, 1829, 1833, 1834, 1838, 1839, 1843, 1844, 1845, 1846, 1848, 1850, 1851, 1853, 1855, 1856, 1858, 1860, 1861, 1862, 1864, 1866, 1867, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1887, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1953, 1954, 1955, 1959, 1963, 1964, 1965, 1966, 1969, 1970, 1971, 1974, 1976, 1981, 1986, 1992, 1995, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2008, 2011, 2013, 2014, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2031, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2045, 2048, 2050, 2055, 2058, 2060, 2061, 2064, 2066, 2067, 2069, 2071, 2074, 2075, 2076, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2088, 2090, 2092, 2093, 2095, 2096, 2100, 2101, 2103, 2105, 2106, 2107, 2108, 2110, 2112, 2113, 2115, 2117, 2118, 2130, 2131, 2136, 2147, 2148, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2170, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2191, 2195, 2197, 2200, 2213, 2215, 2216, 2227, 2231, 2262, 2265, 2272, 2276, 2286, 2296], "term": [24, 33, 136, 154, 1640, 1689, 1692, 2117, 2130, 2159, 2169], "over": [24, 26, 32, 33, 53, 62, 63, 78, 79, 80, 81, 82, 83, 95, 96, 101, 110, 111, 126, 127, 128, 129, 130, 131, 135, 140, 141, 147, 149, 154, 156, 171, 392, 395, 396, 400, 828, 830, 832, 938, 952, 959, 997, 998, 1000, 1042, 1043, 1044, 1045, 1092, 1093, 1095, 1159, 1160, 1161, 1162, 1163, 1188, 1196, 1204, 1205, 1208, 1222, 1224, 1226, 1263, 1266, 1270, 1271, 1278, 1279, 1333, 1334, 1350, 1351, 1352, 1353, 1354, 1407, 1601, 1704, 1756, 1757, 1758, 1759, 1760, 1811, 1814, 1829, 1833, 1834, 1835, 1837, 1838, 1965, 1966, 1969, 1970, 1986, 1989, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2128, 2130, 2173, 2174, 2286, 2292], "time": [24, 25, 26, 31, 32, 33, 53, 56, 57, 74, 75, 101, 104, 105, 122, 123, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 150, 151, 154, 157, 159, 171, 907, 908, 909, 910, 911, 938, 944, 1188, 1206, 1207, 1282, 1285, 1316, 1317, 1318, 1319, 1320, 1602, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1679, 1682, 1689, 1692, 1704, 1751, 1754, 1860, 1926, 1930, 1941, 1942, 1943, 1944, 1997, 1998, 2001, 2003, 2006, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2128, 2130, 2131, 2134, 2135, 2136, 2159, 2170, 2171, 2172], "These": [24, 25, 26, 28, 30, 31, 32, 33, 53, 101, 133, 136, 138, 140, 141, 143, 144, 145, 147, 148, 150, 151, 154, 155, 157, 158, 159, 171, 1188, 1203, 1238, 1239, 1240, 1241, 1242, 1704, 1730, 1731, 1734, 2117, 2130, 2134, 2136, 2137], "written": [24, 32, 133, 134, 141, 144, 147, 148, 151, 154, 156, 159, 171, 2128, 2130, 2134, 2136, 2137], "mani": [24, 25, 26, 31, 32, 33, 66, 67, 87, 88, 114, 115, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 171, 880, 886, 887, 1368, 1371, 1372, 1375, 1860, 1906, 1907, 1908, 1909, 1910, 2126, 2130, 2133, 2136, 2137, 2147, 2148], "differ": [24, 25, 26, 30, 32, 33, 35, 38, 39, 51, 52, 53, 54, 55, 84, 87, 88, 89, 90, 101, 102, 103, 126, 127, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 171, 325, 369, 372, 465, 481, 484, 761, 763, 765, 798, 801, 907, 908, 909, 910, 911, 938, 939, 944, 947, 948, 949, 955, 1002, 1005, 1007, 1010, 1012, 1015, 1017, 1020, 1022, 1025, 1106, 1109, 1188, 1197, 1198, 1207, 1300, 1301, 1302, 1303, 1304, 1316, 1317, 1318, 1319, 1320, 1343, 1348, 1407, 1466, 1467, 1468, 1469, 1470, 1640, 1679, 1682, 1684, 1687, 1704, 1791, 1794, 1860, 1866, 1869, 1916, 1919, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2101, 2104, 2118, 2127, 2128, 2129, 2130, 2133, 2136, 2137, 2171, 2172], "while": [24, 25, 31, 32, 33, 53, 60, 61, 84, 87, 88, 89, 90, 101, 108, 109, 134, 135, 137, 138, 140, 143, 144, 147, 148, 149, 150, 152, 156, 158, 159, 171, 239, 294, 297, 325, 412, 465, 666, 669, 671, 674, 870, 871, 872, 874, 938, 948, 949, 1017, 1020, 1022, 1025, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 2023, 2024, 2028, 2060, 2079, 2082, 2092, 2095, 2130, 2136, 2137, 2142, 2145, 2218, 2219], "thi": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 189, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 239, 241, 242, 244, 245, 246, 251, 252, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 369, 372, 380, 381, 382, 383, 384, 387, 390, 392, 393, 395, 396, 397, 398, 400, 401, 404, 412, 413, 414, 415, 416, 417, 430, 432, 434, 437, 438, 439, 441, 450, 455, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 791, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 843, 844, 845, 847, 849, 850, 851, 852, 853, 854, 855, 857, 859, 860, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 886, 887, 892, 893, 894, 895, 896, 898, 900, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 937, 938, 941, 942, 943, 944, 945, 947, 952, 958, 959, 962, 972, 973, 974, 975, 976, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1042, 1043, 1044, 1045, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1164, 1167, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1187, 1188, 1196, 1199, 1203, 1206, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1277, 1282, 1283, 1284, 1285, 1286, 1289, 1291, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1483, 1484, 1485, 1486, 1487, 1488, 1492, 1493, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1537, 1538, 1539, 1541, 1542, 1544, 1546, 1552, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1596, 1597, 1598, 1599, 1601, 1602, 1604, 1605, 1606, 1608, 1609, 1612, 1614, 1615, 1616, 1619, 1620, 1623, 1624, 1627, 1628, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1945, 1948, 1952, 1953, 1958, 1959, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2144, 2145, 2149, 2150, 2153, 2154, 2157, 2159, 2171, 2172, 2173, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2195, 2215, 2216, 2218, 2227, 2231, 2235, 2236, 2241, 2243, 2256, 2259], "wonder": [24, 26, 156], "thing": [24, 25, 26, 30, 31, 32, 33, 135, 143, 148, 150, 152, 156, 157, 2130], "research": [24, 170, 2130, 2137], "develop": [24, 25, 26, 27, 28, 30, 31, 32, 33, 133, 137, 151, 170, 171, 2117, 2118, 2128, 2129, 2130, 2131, 2132, 2135, 2136, 2137], "when": [24, 25, 27, 28, 30, 31, 32, 33, 45, 46, 47, 48, 53, 62, 63, 64, 65, 70, 71, 72, 73, 78, 79, 84, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 110, 111, 112, 113, 118, 119, 120, 121, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 159, 171, 239, 294, 295, 296, 297, 298, 325, 333, 334, 335, 336, 337, 392, 395, 396, 400, 465, 481, 484, 581, 584, 646, 649, 711, 714, 789, 790, 843, 846, 854, 855, 856, 857, 898, 900, 938, 964, 1098, 1099, 1100, 1101, 1102, 1134, 1141, 1147, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1258, 1259, 1260, 1261, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1343, 1347, 1348, 1365, 1366, 1367, 1407, 1508, 1511, 1552, 1563, 1566, 1640, 1641, 1704, 1766, 1767, 1768, 1769, 1770, 1791, 1794, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1945, 1946, 1947, 1956, 1957, 1958, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 1998, 2001, 2003, 2006, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2022, 2060, 2075, 2078, 2083, 2086, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2128, 2130, 2133, 2134, 2135, 2136, 2142, 2144, 2147, 2148, 2149, 2154, 2157, 2171, 2172, 2227, 2230, 2231, 2235, 2236, 2256, 2257, 2258, 2259, 2286, 2292], "alsoconsid": [24, 25, 53, 62, 63, 101, 110, 111, 134, 137, 138, 145, 151, 155, 156, 157, 465, 666, 669, 671, 674, 798, 799, 800, 801, 802, 865, 866, 867, 868, 869, 880, 886, 887, 938, 939, 942, 955, 1106, 1107, 1108, 1109, 1110, 1368, 1371, 1372, 1375, 1704, 1720, 1723, 1766, 1767, 1768, 1769, 1770, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2127, 2131, 2135, 2137, 2149, 2150, 2153, 2154, 2157, 2245, 2252], "speed": [24, 53, 101, 150, 1040, 1041, 1111, 1112, 1113, 1114, 1115, 2133], "which": [24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 170, 171, 191, 193, 195, 197, 199, 201, 202, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 223, 224, 226, 227, 229, 231, 233, 239, 241, 242, 244, 245, 246, 254, 255, 256, 258, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 338, 340, 342, 348, 349, 350, 351, 352, 354, 364, 366, 369, 372, 380, 383, 386, 396, 397, 413, 414, 415, 417, 429, 430, 437, 438, 439, 440, 445, 449, 451, 453, 454, 455, 456, 457, 459, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 729, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 789, 792, 798, 799, 800, 801, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 853, 858, 865, 866, 867, 868, 869, 875, 876, 877, 878, 879, 880, 881, 886, 887, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 915, 918, 922, 938, 939, 942, 943, 944, 947, 955, 959, 960, 964, 965, 966, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1002, 1006, 1012, 1013, 1015, 1032, 1033, 1034, 1040, 1041, 1047, 1048, 1062, 1066, 1072, 1074, 1076, 1082, 1083, 1084, 1085, 1086, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1130, 1131, 1132, 1133, 1134, 1141, 1144, 1145, 1159, 1162, 1164, 1166, 1183, 1184, 1185, 1186, 1187, 1188, 1208, 1209, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1386, 1387, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1438, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1535, 1536, 1537, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1601, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1694, 1697, 1699, 1701, 1703, 1704, 1705, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1768, 1770, 1771, 1773, 1775, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1822, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1845, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1865, 1866, 1867, 1869, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1891, 1892, 1893, 1894, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1945, 1951, 1952, 1953, 1954, 1959, 1961, 1962, 1963, 1964, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2121, 2123, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2135, 2136, 2137, 2142, 2143, 2144, 2146, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2195, 2215, 2216, 2227, 2230, 2241, 2243, 2245, 2248, 2252, 2286, 2292, 2293, 2294, 2297], "evolv": [24, 2130], "shareabl": 24, "code": [24, 25, 26, 29, 30, 31, 32, 33, 49, 50, 51, 52, 84, 87, 88, 89, 90, 97, 98, 99, 100, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 169, 171, 430, 432, 456, 457, 458, 459, 460, 561, 563, 631, 632, 633, 635, 691, 692, 693, 1407, 1568, 1572, 1602, 1631, 1637, 1639, 1640, 1674, 1677, 1704, 1761, 1764, 1766, 1769, 1771, 1774, 1860, 1916, 1919, 2117, 2118, 2126, 2128, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137], "significantli": [24, 62, 63, 110, 111, 137, 1704, 1801, 1802, 1803, 1804, 1805, 2128], "hinder": [24, 144], "librari": [24, 25, 26, 27, 31, 32, 49, 50, 97, 98, 133, 152, 159, 169, 171, 430, 456, 457, 458, 459, 460, 465, 581, 584, 646, 649, 666, 669, 671, 674, 1704, 1731, 1734, 1736, 1739, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095, 2117, 2118, 2126, 2127, 2128, 2130, 2134, 2137], "becom": [24, 26, 33, 53, 101, 136, 140, 142, 148, 171, 818, 819, 820, 821, 822, 938, 947, 1012, 1013, 1015, 1188, 1191, 1860, 1861, 1864, 2286, 2302], "outdat": 24, "matter": [24, 140, 2286, 2294], "month": [24, 32], "rigor": [24, 150], "maintain": [24, 33, 76, 77, 124, 125, 133, 137, 148, 149, 150, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2129], "against": [24, 47, 48, 53, 62, 63, 72, 73, 95, 96, 99, 100, 101, 110, 111, 120, 121, 150, 154, 171, 325, 338, 339, 340, 341, 686, 688, 690, 798, 801, 849, 850, 851, 852, 853, 875, 876, 877, 878, 879, 938, 939, 941, 943, 955, 1040, 1041, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1300, 1301, 1302, 1303, 1304, 1343, 1346, 1347, 1348, 1704, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1997, 1998, 1999, 2000, 2001, 2002, 2130], "newest": 24, "For": [24, 25, 26, 28, 29, 31, 32, 33, 45, 46, 53, 62, 63, 101, 110, 111, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 170, 171, 239, 241, 242, 284, 285, 287, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 711, 714, 726, 729, 731, 734, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 776, 780, 818, 819, 820, 821, 822, 938, 963, 1188, 1191, 1206, 1282, 1285, 1328, 1331, 1704, 1791, 1794, 1801, 1805, 1819, 1820, 1821, 1822, 1823, 1860, 1861, 1864, 1916, 1919, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2078, 2083, 2086, 2096, 2100, 2127, 2128, 2131, 2136, 2137, 2142, 2143, 2144, 2146, 2241, 2244], "softwar": [24, 25, 32, 33, 2128, 2133, 2134, 2135], "pipelin": [24, 133, 134, 149, 159, 2117, 2130, 2131, 2136], "where": [24, 25, 26, 27, 29, 32, 33, 45, 46, 51, 52, 53, 54, 55, 62, 63, 66, 67, 70, 71, 72, 73, 78, 79, 80, 81, 87, 88, 93, 94, 99, 100, 101, 110, 111, 114, 115, 118, 119, 120, 121, 126, 127, 128, 129, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 171, 239, 268, 269, 270, 272, 284, 285, 287, 294, 296, 297, 298, 465, 501, 504, 576, 579, 621, 624, 646, 649, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 711, 714, 789, 790, 791, 808, 810, 812, 813, 815, 817, 818, 820, 821, 822, 838, 839, 840, 841, 842, 843, 846, 880, 886, 887, 898, 900, 938, 948, 949, 955, 961, 962, 987, 988, 989, 990, 991, 1017, 1020, 1022, 1025, 1057, 1058, 1059, 1060, 1061, 1082, 1083, 1084, 1085, 1086, 1106, 1109, 1134, 1141, 1144, 1145, 1176, 1177, 1178, 1179, 1180, 1188, 1191, 1199, 1206, 1282, 1285, 1289, 1290, 1292, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1310, 1311, 1314, 1323, 1326, 1343, 1348, 1368, 1371, 1372, 1375, 1407, 1508, 1509, 1511, 1537, 1538, 1601, 1602, 1631, 1637, 1639, 1704, 1730, 1731, 1734, 1756, 1759, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1860, 1861, 1862, 1863, 1864, 1865, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1886, 1887, 1888, 1889, 1890, 1916, 1919, 1936, 1937, 1938, 1939, 1940, 1945, 1957, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2128, 2137, 2149, 2151, 2152, 2153, 2156], "rapid": [24, 25, 32, 2130], "prototyp": [24, 2130], "vital": [24, 159], "signific": [24, 25, 171, 2130], "bottleneck": 24, "As": [24, 33, 82, 83, 130, 131, 134, 136, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 171, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2130, 2135], "new": [24, 25, 26, 27, 29, 31, 32, 33, 35, 38, 39, 53, 54, 55, 56, 57, 66, 67, 68, 69, 87, 88, 93, 94, 101, 102, 103, 104, 105, 114, 115, 116, 117, 132, 134, 135, 136, 137, 138, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 170, 239, 254, 263, 266, 268, 269, 272, 294, 296, 297, 298, 299, 300, 302, 305, 317, 319, 320, 324, 325, 423, 465, 506, 509, 696, 699, 706, 709, 721, 724, 798, 800, 802, 865, 866, 867, 868, 869, 938, 942, 959, 1106, 1107, 1108, 1110, 1188, 1203, 1238, 1241, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1343, 1347, 1407, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1479, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1555, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1579, 1583, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1860, 1876, 1877, 1878, 1879, 1880, 1896, 1897, 1898, 1899, 1900, 1916, 1919, 1945, 1951, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 2117, 2118, 2128, 2132, 2136, 2137, 2142, 2143, 2144, 2146, 2159, 2169, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2286, 2296], "futur": [24, 26, 32, 33, 137, 138, 150, 151, 152, 156, 171, 1704, 1731, 1734, 1736, 1739, 2136], "avail": [24, 32, 33, 54, 55, 102, 103, 136, 137, 139, 141, 142, 148, 150, 171, 430, 436, 446, 447, 448, 462, 1407, 1446, 1447, 1448, 1449, 1450, 2135, 2136, 2241, 2242], "backend": [24, 30, 31, 32, 33, 40, 42, 44, 45, 46, 54, 55, 56, 57, 62, 63, 87, 88, 102, 103, 110, 111, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 159, 239, 251, 252, 253, 325, 374, 375, 377, 378, 386, 429, 430, 443, 444, 446, 448, 462, 1407, 1464, 1465, 1497, 1508, 1509, 1511, 1513, 1534, 1568, 1569, 1570, 1571, 1572, 1578, 1614, 1615, 1704, 1801, 1802, 1803, 1804, 1805, 2117, 2118, 2130, 2133, 2136, 2137, 2142, 2143, 2146, 2175, 2176, 2177, 2178, 2179, 2180, 2184, 2185, 2187, 2188, 2191, 2195, 2213, 2214, 2215, 2216, 2218, 2222, 2223, 2241, 2243, 2244, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303], "specif": [24, 31, 32, 33, 49, 50, 54, 55, 97, 98, 102, 103, 133, 134, 135, 136, 138, 139, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 170, 171, 325, 413, 416, 430, 453, 456, 457, 458, 459, 460, 465, 666, 669, 671, 674, 1407, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1534, 1704, 1731, 1734, 1736, 1739, 1811, 1814, 1860, 1916, 1919, 1941, 1942, 1943, 1944, 1970, 1971, 1974, 2044, 2050, 2053, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095, 2117, 2121, 2123, 2126, 2128, 2129, 2131, 2132, 2133, 2137, 2171, 2172, 2286, 2293, 2297], "quickli": [24, 26, 32, 33, 137, 157, 158, 2130, 2137], "obsolet": [24, 26], "user": [24, 25, 28, 29, 32, 33, 132, 134, 135, 136, 137, 138, 142, 146, 147, 148, 150, 152, 153, 154, 171, 189, 190, 196, 938, 958, 1188, 1206, 1248, 1251, 1282, 1285, 2128, 2130, 2136, 2137, 2147, 2148, 2159, 2170, 2171, 2172], "constantli": [24, 151, 152], "invent": 24, "wheel": 24, "If": [24, 27, 28, 29, 31, 32, 33, 35, 40, 43, 44, 45, 46, 47, 48, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 171, 189, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 232, 233, 239, 241, 242, 244, 246, 254, 255, 256, 258, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 346, 348, 350, 352, 413, 415, 416, 417, 430, 436, 454, 456, 457, 459, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 624, 625, 626, 628, 630, 631, 633, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 714, 715, 716, 718, 720, 721, 723, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 853, 854, 855, 856, 857, 870, 871, 872, 874, 875, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893, 894, 895, 896, 898, 900, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 938, 939, 940, 944, 947, 955, 958, 959, 961, 963, 964, 982, 983, 984, 985, 986, 997, 998, 999, 1000, 1001, 1002, 1006, 1012, 1013, 1015, 1032, 1033, 1034, 1040, 1041, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1065, 1066, 1072, 1074, 1076, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1147, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1196, 1200, 1209, 1210, 1232, 1233, 1234, 1235, 1236, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1275, 1277, 1278, 1280, 1281, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1330, 1331, 1332, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1399, 1401, 1402, 1404, 1406, 1407, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1511, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1572, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1601, 1602, 1612, 1614, 1615, 1616, 1631, 1632, 1633, 1635, 1639, 1640, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1720, 1723, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1865, 1866, 1867, 1869, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1945, 1958, 1959, 1965, 1970, 1971, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2171, 2172, 2173, 2175, 2181, 2195, 2214, 2215, 2216, 2227, 2230, 2231, 2235, 2236, 2245, 2248, 2286, 2292, 2294, 2296], "our": [24, 25, 27, 30, 31, 32, 33, 35, 82, 83, 84, 130, 131, 133, 134, 136, 137, 138, 140, 142, 143, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 171, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2118, 2135, 2136, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181, 2245, 2252], "desir": [24, 33, 47, 48, 49, 50, 53, 72, 73, 87, 88, 95, 96, 97, 98, 101, 120, 121, 135, 137, 138, 148, 154, 325, 333, 334, 335, 336, 337, 343, 344, 345, 347, 348, 349, 350, 351, 352, 430, 456, 457, 458, 459, 460, 1253, 1254, 1255, 1256, 1257, 1300, 1301, 1302, 1303, 1304, 1343, 1346, 1348, 1997, 2008, 2009, 2010, 2011, 2012, 2130, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170], "provid": [24, 32, 33, 45, 46, 53, 54, 55, 56, 57, 66, 67, 72, 73, 78, 79, 80, 81, 87, 88, 93, 94, 101, 102, 103, 114, 115, 120, 121, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 156, 158, 170, 171, 189, 190, 196, 239, 284, 285, 287, 294, 295, 296, 297, 298, 325, 355, 356, 358, 359, 360, 362, 363, 386, 413, 416, 429, 430, 436, 918, 919, 920, 922, 938, 964, 1062, 1063, 1064, 1065, 1066, 1188, 1200, 1210, 1365, 1367, 1386, 1387, 1388, 1389, 1390, 1407, 1425, 1438, 1440, 1542, 1543, 1544, 1545, 1546, 1614, 1615, 1704, 1761, 1764, 1829, 1833, 1860, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1916, 1919, 1997, 1998, 1999, 2000, 2001, 2002, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2137, 2142, 2144, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2170, 2175, 2176, 2177, 2178, 2179, 2180, 2286, 2293, 2297], "simultan": [24, 26], "modern": [24, 25, 2135], "simpl": [24, 31, 32, 33, 134, 136, 138, 139, 140, 141, 145, 147, 148, 150, 151, 152, 156, 158, 159, 171, 1407, 1456, 1458, 2117, 2129, 2130, 2131, 2132, 2245, 2252], "scalabl": [24, 154, 2135, 2136], "manner": [24, 32, 40, 43, 44, 91, 92, 139, 141, 148, 151, 157, 170, 171, 1945, 1958, 2126, 2128, 2136, 2137], "determin": [24, 35, 38, 39, 51, 52, 53, 62, 63, 66, 67, 80, 81, 84, 87, 88, 89, 90, 99, 100, 101, 102, 103, 110, 111, 124, 125, 128, 129, 136, 138, 139, 141, 145, 148, 152, 239, 260, 261, 325, 348, 351, 354, 368, 386, 387, 390, 392, 394, 396, 399, 401, 404, 406, 409, 429, 430, 446, 447, 448, 462, 465, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 591, 592, 593, 595, 606, 609, 611, 614, 616, 619, 621, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 676, 679, 691, 692, 693, 694, 695, 711, 712, 713, 714, 715, 726, 727, 729, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 890, 891, 938, 963, 1098, 1099, 1100, 1101, 1102, 1104, 1134, 1147, 1328, 1329, 1330, 1331, 1332, 1407, 1408, 1411, 1415, 1418, 1492, 1494, 1495, 1496, 1497, 1513, 1514, 1517, 1519, 1522, 1524, 1526, 1527, 1530, 1568, 1572, 1596, 1600, 1640, 1694, 1697, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1725, 1726, 1728, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1776, 1779, 1781, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1866, 1867, 1869, 1941, 1942, 1943, 1944, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2045, 2047, 2049, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2149, 2154, 2157, 2245, 2252, 2272, 2274, 2276], "exactli": [24, 26, 136, 137, 138, 139, 140, 150, 152], "common": [24, 31, 53, 87, 88, 101, 136, 138, 139, 140, 143, 145, 146, 148, 151, 152, 171, 325, 412, 865, 868, 938, 942, 947, 951, 956, 1012, 1013, 1015, 1035, 1038, 1154, 1155, 1156, 1157, 1158, 2127, 2130, 2137], "ground": [24, 148, 150, 2184, 2185, 2191, 2195, 2214, 2215, 2216], "li": [24, 53, 101, 1300, 1301, 1302, 1303, 1304, 1343, 1348], "between": [24, 53, 60, 61, 64, 65, 66, 67, 74, 75, 84, 87, 88, 89, 90, 99, 100, 101, 108, 109, 112, 113, 114, 115, 134, 135, 136, 140, 144, 145, 148, 149, 150, 152, 153, 155, 156, 157, 159, 170, 239, 241, 242, 325, 369, 372, 465, 501, 504, 711, 714, 798, 801, 854, 855, 856, 857, 938, 939, 955, 964, 1106, 1109, 1181, 1182, 1188, 1206, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1365, 1366, 1367, 1640, 1679, 1680, 1681, 1682, 1683, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1876, 1877, 1878, 1880, 1916, 1919, 1945, 1952, 1970, 1976, 1979, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2118, 2126, 2127, 2129, 2130, 2131, 2136, 2175, 2177, 2241, 2244], "find": [24, 27, 29, 30, 31, 32, 33, 87, 88, 133, 137, 150, 152, 154, 157, 1945, 1948, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2117, 2118], "essenti": [24, 25, 31, 136, 139, 140, 145, 148, 151, 2136], "order": [24, 29, 31, 32, 33, 35, 38, 39, 53, 56, 57, 60, 61, 62, 63, 66, 67, 74, 75, 76, 77, 84, 87, 88, 89, 90, 101, 108, 109, 110, 111, 114, 115, 124, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 151, 152, 157, 159, 171, 239, 284, 287, 465, 501, 504, 880, 886, 887, 928, 931, 933, 936, 938, 952, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1042, 1043, 1044, 1045, 1077, 1078, 1159, 1162, 1164, 1167, 1168, 1183, 1187, 1188, 1196, 1197, 1198, 1333, 1334, 1368, 1371, 1372, 1375, 1614, 1615, 1640, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1677, 1704, 1730, 1731, 1734, 1756, 1757, 1758, 1759, 1760, 1801, 1805, 1806, 1810, 1824, 1825, 1826, 1827, 1828, 1834, 1835, 1837, 1838, 1860, 1881, 1884, 1896, 1897, 1898, 1899, 1900, 1941, 1942, 1943, 1997, 2013, 2016, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2126, 2129, 2130, 2131, 2133, 2136, 2147, 2148, 2171, 2172, 2181, 2182, 2195, 2213, 2214, 2215, 2216], "design": [24, 25, 101, 132, 137, 138, 147, 148, 149, 152, 154, 156, 171, 880, 884, 885, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 2126, 2128, 2130, 2133, 2134, 2135], "univers": [24, 148, 2241, 2242], "abstract": [24, 136, 138, 148, 150, 152, 158, 171, 430, 432, 2128, 2130, 2132, 2133, 2137, 2149, 2153, 2175, 2179], "In": [24, 26, 28, 31, 32, 33, 49, 50, 54, 55, 66, 67, 97, 98, 114, 115, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 170, 171, 430, 450, 456, 457, 458, 459, 460, 461, 464, 465, 481, 484, 726, 729, 917, 1134, 1142, 1407, 1413, 1508, 1509, 1511, 1704, 1791, 1794, 1860, 1896, 1897, 1898, 1899, 1900, 1970, 1986, 1989, 2118, 2126, 2128, 2130, 2131, 2133, 2136, 2142, 2144], "search": [24, 30, 32, 40, 43, 44, 73, 91, 92, 121, 136, 140, 150, 151, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2013, 2016, 2018, 2022, 2272, 2274, 2276], "languag": [24, 26, 148, 152, 154, 2117, 2128, 2131, 2133, 2134, 2135, 2136], "first": [24, 25, 28, 29, 30, 31, 32, 33, 35, 38, 39, 45, 46, 51, 52, 53, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 84, 89, 90, 93, 94, 99, 100, 101, 102, 103, 110, 111, 114, 115, 118, 119, 122, 123, 126, 127, 133, 134, 136, 140, 144, 145, 146, 147, 148, 150, 152, 154, 156, 157, 159, 239, 274, 277, 279, 280, 281, 282, 283, 325, 411, 423, 430, 436, 465, 481, 482, 483, 484, 485, 501, 502, 503, 505, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 566, 567, 569, 591, 594, 596, 597, 601, 602, 604, 626, 627, 629, 631, 632, 634, 656, 657, 659, 661, 662, 664, 671, 672, 674, 676, 677, 679, 691, 692, 693, 694, 701, 702, 704, 711, 712, 714, 761, 762, 763, 764, 765, 789, 791, 798, 799, 800, 801, 802, 843, 844, 880, 886, 887, 898, 900, 918, 921, 928, 931, 938, 939, 948, 949, 950, 951, 953, 955, 956, 957, 960, 965, 966, 997, 998, 999, 1000, 1001, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1106, 1107, 1108, 1109, 1110, 1124, 1127, 1128, 1134, 1141, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1164, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1188, 1193, 1196, 1206, 1207, 1243, 1246, 1273, 1274, 1275, 1276, 1277, 1282, 1285, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1316, 1319, 1333, 1334, 1335, 1343, 1348, 1368, 1371, 1372, 1375, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1415, 1417, 1418, 1419, 1704, 1710, 1711, 1712, 1713, 1714, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1741, 1744, 1751, 1752, 1753, 1754, 1755, 1776, 1779, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1801, 1805, 1811, 1814, 1829, 1833, 1860, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1916, 1919, 1921, 1922, 1923, 1924, 1925, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1956, 1957, 1959, 1970, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2050, 2053, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2128, 2130, 2131, 2135, 2149, 2151, 2156, 2159, 2170, 2171, 2172, 2175, 2179, 2195, 2211, 2286, 2302], "see": [24, 27, 29, 31, 32, 33, 35, 38, 39, 47, 48, 51, 52, 62, 63, 72, 73, 78, 79, 80, 81, 84, 89, 90, 99, 100, 110, 111, 120, 121, 126, 127, 128, 129, 133, 134, 136, 137, 139, 140, 142, 144, 145, 148, 149, 150, 151, 152, 154, 156, 157, 170, 171, 239, 241, 242, 263, 266, 274, 277, 325, 343, 346, 396, 397, 413, 416, 465, 481, 482, 483, 484, 485, 501, 502, 503, 505, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 561, 562, 563, 564, 565, 566, 567, 568, 570, 581, 584, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 626, 627, 628, 629, 630, 631, 632, 633, 635, 646, 649, 656, 657, 658, 659, 660, 661, 662, 663, 665, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 726, 727, 728, 729, 730, 761, 762, 763, 764, 765, 781, 782, 783, 784, 785, 880, 886, 887, 1368, 1371, 1372, 1375, 1704, 1710, 1711, 1712, 1714, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1796, 1799, 1829, 1833, 1834, 1835, 1837, 1838, 1997, 2003, 2004, 2005, 2006, 2007, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2126], "clear": [24, 25, 26, 31, 33, 138, 139, 140, 148, 152, 154, 156, 430, 435, 2130], "front": [24, 148, 153, 154, 157, 2118, 2128, 2130], "runner": 24, "look": [24, 28, 29, 32, 33, 135, 136, 138, 139, 140, 142, 144, 145, 148, 149, 150, 151, 152, 154, 156, 158, 159, 2118, 2126, 2130], "littl": [24, 156, 2132], "deeper": [24, 33, 132, 150, 153, 1945, 1946, 1947, 1956, 1957, 1958], "follow": [24, 25, 29, 31, 32, 33, 53, 54, 55, 56, 57, 60, 61, 62, 63, 87, 88, 101, 102, 103, 104, 105, 108, 109, 110, 111, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 325, 380, 383, 430, 455, 465, 726, 729, 898, 900, 977, 980, 1098, 1099, 1100, 1101, 1102, 1134, 1141, 1147, 1188, 1195, 1206, 1282, 1285, 1407, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1756, 1759, 1786, 1787, 1788, 1789, 1790, 1834, 1835, 1837, 1838, 1945, 1952, 1958, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2118, 2127, 2130, 2133, 2159, 2169, 2175, 2179], "same": [24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 51, 52, 53, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 122, 123, 126, 127, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 171, 217, 218, 239, 241, 242, 255, 256, 258, 269, 270, 271, 272, 273, 279, 281, 283, 284, 285, 287, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 369, 371, 373, 380, 382, 384, 430, 431, 455, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 481, 484, 486, 487, 496, 497, 516, 517, 518, 519, 520, 526, 527, 528, 530, 541, 542, 543, 544, 545, 586, 587, 588, 589, 590, 696, 697, 698, 700, 706, 707, 708, 710, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 776, 777, 778, 779, 780, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 870, 871, 880, 881, 886, 887, 938, 947, 966, 982, 983, 984, 985, 986, 1012, 1015, 1040, 1041, 1111, 1112, 1113, 1114, 1115, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1159, 1162, 1188, 1206, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1243, 1244, 1246, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1333, 1334, 1335, 1343, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1401, 1405, 1471, 1473, 1602, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1713, 1715, 1718, 1725, 1726, 1728, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1761, 1764, 1771, 1772, 1773, 1774, 1775, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1801, 1803, 1805, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1860, 1866, 1867, 1869, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1941, 1942, 1943, 1945, 1959, 1970, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2048, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2118, 2127, 2129, 2136, 2137, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2184, 2185, 2227, 2230, 2241, 2242, 2245, 2253], "core": [24, 31, 32, 139, 150, 159, 430, 447, 2118, 2128, 2129, 2130, 2131, 2135, 2137], "principl": [24, 2128, 2130, 2133], "oper": [24, 31, 32, 45, 46, 47, 48, 53, 54, 55, 56, 57, 60, 61, 84, 87, 88, 89, 90, 93, 94, 95, 96, 101, 102, 103, 108, 109, 133, 134, 136, 138, 139, 140, 141, 142, 145, 147, 148, 150, 152, 154, 157, 158, 239, 274, 277, 279, 280, 281, 282, 283, 325, 413, 414, 415, 416, 417, 465, 481, 484, 531, 534, 726, 729, 789, 791, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 858, 938, 958, 967, 970, 987, 990, 1047, 1048, 1082, 1085, 1134, 1135, 1136, 1137, 1143, 1144, 1145, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1248, 1249, 1250, 1251, 1252, 1295, 1296, 1298, 1407, 1420, 1422, 1423, 1441, 1444, 1446, 1449, 1450, 1451, 1454, 1455, 1568, 1569, 1570, 1571, 1572, 1614, 1615, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1684, 1687, 2117, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "expos": [24, 137, 154, 158, 1407, 1436], "almost": [24, 30, 136, 149, 155, 157], "ident": [24, 26, 87, 88, 136, 145, 146, 148, 149, 151, 152, 156, 157, 171, 239, 260, 261, 430, 445, 1407, 1479, 1704, 1761, 1764, 1945, 1959, 2117, 2118], "function": [24, 29, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 143, 147, 152, 153, 155, 156, 157, 158, 169, 170, 172, 173, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 366, 368, 369, 372, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1768, 1769, 1770, 1771, 1774, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1815, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2121, 2123, 2127, 2128, 2129, 2130, 2131, 2136, 2137, 2139, 2140, 2141, 2142, 2145, 2149, 2153, 2154, 2184, 2187, 2188, 2189, 2190, 2200, 2213, 2214, 2215, 2216, 2218, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2276, 2277, 2278, 2286, 2292, 2293, 2294, 2296, 2297], "uniqu": [24, 53, 74, 75, 101, 122, 123, 133, 136, 145, 148, 149, 152, 171, 1040, 1041, 1111, 1112, 1113, 1114, 1115, 1188, 1203, 1206, 1238, 1239, 1240, 1241, 1242, 1282, 1285, 1941, 1942, 1943, 1944, 1945, 1948, 1952, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2133, 2245, 2248], "syntax": [24, 25, 138, 143, 2130], "argument": [24, 31, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 62, 63, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 132, 133, 134, 135, 136, 140, 141, 143, 145, 146, 149, 150, 151, 152, 154, 156, 157, 172, 173, 183, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 413, 416, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 886, 887, 892, 895, 898, 900, 907, 910, 917, 928, 931, 938, 944, 982, 985, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1144, 1145, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1368, 1371, 1372, 1375, 1407, 1413, 1414, 1425, 1438, 1439, 1440, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1533, 1542, 1543, 1544, 1545, 1546, 1568, 1570, 1572, 1584, 1588, 1589, 1601, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1945, 1952, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2117, 2121, 2123, 2130, 2142, 2143, 2146, 2171, 2172, 2184, 2187, 2188, 2189, 2190, 2195, 2199, 2200, 2213, 2214, 2215, 2216, 2227, 2230, 2272, 2274, 2276, 2277, 2278, 2286, 2292, 2294], "There": [24, 31, 32, 33, 133, 134, 136, 138, 140, 142, 143, 145, 148, 149, 154, 157, 171, 2131, 2132, 2136, 2137, 2245, 2252], "onli": [24, 27, 31, 32, 33, 35, 38, 39, 45, 46, 53, 62, 63, 66, 67, 70, 71, 87, 88, 93, 94, 101, 110, 111, 114, 115, 118, 119, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 169, 171, 239, 279, 280, 281, 282, 283, 325, 411, 412, 430, 451, 464, 465, 666, 669, 671, 674, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 838, 839, 840, 841, 842, 843, 846, 880, 881, 898, 900, 938, 952, 958, 961, 982, 985, 997, 998, 999, 1000, 1001, 1042, 1043, 1045, 1098, 1099, 1100, 1101, 1102, 1134, 1141, 1147, 1188, 1189, 1190, 1196, 1248, 1249, 1250, 1251, 1252, 1305, 1306, 1307, 1311, 1313, 1314, 1315, 1407, 1425, 1704, 1751, 1754, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1860, 1881, 1882, 1883, 1884, 1885, 1896, 1897, 1898, 1899, 1900, 1945, 1946, 1947, 1953, 1954, 1956, 1957, 1958, 1963, 1964, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 1998, 2001, 2003, 2006, 2044, 2050, 2053, 2060, 2079, 2082, 2092, 2095, 2118, 2129, 2130, 2131, 2136, 2137, 2142, 2144, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180, 2218, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2258, 2259], "so": [24, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 185, 186, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 244, 245, 251, 252, 255, 256, 263, 264, 269, 270, 271, 273, 279, 280, 281, 283, 284, 285, 289, 290, 294, 295, 296, 298, 302, 303, 304, 306, 307, 309, 312, 314, 320, 321, 322, 323, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 380, 381, 382, 384, 392, 393, 395, 396, 398, 400, 413, 414, 415, 417, 437, 438, 439, 441, 456, 457, 458, 459, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 789, 791, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 835, 837, 843, 844, 845, 847, 854, 855, 857, 859, 860, 862, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 879, 892, 893, 894, 896, 902, 903, 904, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 923, 924, 925, 927, 928, 930, 932, 933, 934, 935, 937, 938, 947, 965, 972, 973, 974, 976, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1133, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1187, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1273, 1274, 1275, 1277, 1282, 1283, 1284, 1286, 1289, 1291, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1343, 1347, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1463, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1483, 1484, 1485, 1487, 1492, 1493, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1537, 1538, 1539, 1541, 1542, 1544, 1546, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1596, 1597, 1598, 1599, 1604, 1605, 1606, 1608, 1609, 1614, 1615, 1616, 1619, 1620, 1623, 1624, 1627, 1628, 1632, 1633, 1634, 1635, 1640, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1699, 1700, 1701, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1720, 1721, 1722, 1725, 1726, 1727, 1729, 1736, 1737, 1738, 1740, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1802, 1803, 1804, 1824, 1825, 1834, 1835, 1837, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1945, 1946, 1957, 1966, 1967, 1968, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2045, 2046, 2047, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2059, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2075, 2076, 2077, 2079, 2080, 2081, 2083, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2112, 2113, 2114, 2116, 2118, 2130, 2131, 2132, 2134], "wai": [24, 25, 30, 31, 32, 133, 134, 135, 137, 138, 147, 148, 149, 150, 152, 156, 157, 158, 159, 171, 2132, 2136, 2137], "manipul": [24, 67, 115, 148, 151, 152, 154, 159, 170, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 2130], "tensor": [24, 45, 46, 51, 52, 53, 54, 55, 60, 61, 66, 67, 70, 71, 87, 88, 93, 94, 99, 100, 101, 102, 103, 108, 109, 114, 115, 118, 119, 134, 135, 138, 139, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 171, 239, 251, 252, 253, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298, 325, 364, 366, 412, 465, 681, 682, 683, 684, 685, 686, 687, 689, 789, 791, 823, 824, 828, 829, 849, 850, 851, 852, 853, 880, 881, 886, 887, 898, 900, 938, 941, 967, 970, 982, 985, 997, 1000, 1098, 1099, 1100, 1101, 1102, 1134, 1141, 1143, 1147, 1188, 1196, 1217, 1218, 1222, 1223, 1253, 1254, 1255, 1256, 1257, 1295, 1296, 1298, 1343, 1346, 1368, 1371, 1372, 1375, 1407, 1537, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1640, 1679, 1682, 1689, 1690, 1691, 1692, 1704, 1811, 1814, 1860, 1906, 1907, 1908, 1909, 1910, 1970, 1971, 1972, 1973, 1974, 1975, 2117, 2118, 2127, 2128, 2131, 2133, 2134, 2137, 2142, 2144, 2159, 2167, 2169, 2286, 2302], "unsurprisingli": [24, 140], "fundament": [24, 137, 148, 152, 154, 2130], "consist": [24, 78, 79, 87, 88, 133, 134, 137, 138, 142, 147, 154, 1704, 1730, 1731, 1734, 2060, 2071, 2072, 2074, 2131, 2171, 2172], "each": [24, 25, 26, 28, 31, 32, 33, 35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 72, 73, 74, 75, 78, 79, 84, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 121, 122, 123, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 170, 171, 189, 207, 210, 212, 215, 217, 220, 227, 230, 239, 284, 285, 287, 325, 338, 339, 340, 341, 342, 369, 371, 373, 380, 382, 384, 430, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 564, 566, 569, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 661, 664, 666, 668, 669, 670, 671, 674, 676, 679, 691, 694, 696, 697, 698, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 714, 716, 718, 719, 720, 721, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 789, 792, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 870, 871, 872, 874, 918, 919, 920, 921, 922, 938, 940, 947, 961, 963, 966, 1002, 1005, 1007, 1010, 1012, 1015, 1040, 1041, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1072, 1073, 1077, 1079, 1080, 1081, 1111, 1112, 1113, 1114, 1115, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1159, 1160, 1161, 1162, 1163, 1188, 1189, 1190, 1191, 1193, 1197, 1198, 1199, 1200, 1202, 1203, 1206, 1210, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1238, 1239, 1240, 1241, 1242, 1282, 1285, 1305, 1306, 1311, 1314, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1355, 1359, 1386, 1387, 1388, 1389, 1390, 1401, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1417, 1419, 1441, 1443, 1444, 1445, 1446, 1450, 1451, 1455, 1466, 1467, 1468, 1469, 1470, 1601, 1602, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1713, 1715, 1718, 1730, 1731, 1734, 1736, 1739, 1751, 1754, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1784, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1824, 1828, 1860, 1871, 1872, 1873, 1874, 1875, 1891, 1892, 1893, 1894, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1916, 1917, 1918, 1919, 1920, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1945, 1952, 1959, 1970, 1971, 1974, 1997, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2060, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2101, 2104, 2118, 2126, 2127, 2131, 2133, 2136, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2227, 2235, 2236, 2245, 2251], "veri": [24, 25, 30, 31, 32, 33, 53, 101, 136, 138, 139, 140, 142, 144, 145, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 171, 798, 801, 938, 939, 955, 958, 1106, 1109, 1248, 1249, 1250, 1251, 1252, 1704, 1791, 1794, 2118, 2126, 2127, 2128, 2130, 2131, 2132, 2135, 2136, 2137, 2245, 2252], "similar": [24, 31, 32, 136, 138, 139, 142, 146, 148, 149, 150, 151, 157, 171, 465, 726, 729, 1640, 1694, 1697, 2126, 2127, 2128, 2129, 2136, 2159, 2170], "convent": [24, 135, 144, 151, 170, 1704, 1751, 1754, 2060, 2071, 2074, 2136], "those": [24, 31, 32, 33, 62, 63, 66, 67, 87, 88, 101, 110, 111, 114, 115, 134, 136, 137, 138, 146, 148, 149, 150, 152, 239, 241, 242, 325, 412, 1350, 1351, 1353, 1407, 1601, 1704, 1786, 1787, 1788, 1789, 1790, 1801, 1805, 1860, 1861, 1862, 1863, 1864, 1865, 1945, 1948, 2127], "numpi": [24, 25, 30, 31, 32, 33, 53, 54, 55, 78, 79, 101, 102, 103, 133, 134, 135, 137, 138, 139, 142, 144, 147, 149, 150, 151, 152, 154, 156, 159, 430, 434, 803, 804, 805, 806, 807, 880, 886, 887, 890, 891, 938, 940, 1104, 1368, 1371, 1372, 1375, 1407, 1558, 1559, 1560, 1568, 1569, 1571, 1572, 1579, 1580, 1581, 1582, 1583, 2060, 2071, 2072, 2074, 2117, 2118, 2132, 2137, 2184, 2185, 2187, 2188, 2189, 2191, 2195, 2200, 2202, 2204, 2213, 2214, 2215, 2216, 2286, 2292, 2294, 2296, 2299], "introduc": [24, 136, 138, 149, 150, 157, 1860, 1901, 1904, 2023, 2024, 2028], "2006": 24, "layer": [24, 61, 68, 69, 109, 116, 117, 141, 148, 151, 152, 154, 155, 158, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1679, 1682, 1684, 1687, 1689, 1692, 1694, 1697, 1699, 1702, 1965, 1966, 1967, 1968, 1969, 2118, 2128, 2130, 2134, 2137, 2147, 2148, 2149, 2150, 2151, 2153, 2154, 2156, 2157, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2181, 2182], "therefor": [24, 28, 31, 33, 45, 46, 51, 52, 62, 63, 99, 100, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 171, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 412, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 886, 887, 892, 895, 907, 910, 917, 928, 931, 938, 944, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1368, 1371, 1372, 1375, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1568, 1572, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2127, 2130, 2136], "present": [24, 31, 33, 87, 88, 136, 138, 139, 144, 147, 154, 2127, 2128, 2137], "itself": [24, 32, 33, 53, 133, 136, 137, 142, 147, 148, 158, 170, 171, 938, 958, 1248, 1249, 1251, 1407, 1413, 1589, 1945, 1958, 2129, 2130, 2131, 2136], "cut": [24, 2136], "cloth": 24, "adher": [24, 25, 133, 138, 141, 144, 152, 154, 159, 2126, 2127, 2136], "set": [24, 27, 29, 33, 40, 43, 44, 53, 54, 55, 56, 57, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 79, 87, 88, 101, 102, 103, 108, 109, 110, 111, 120, 121, 123, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 325, 418, 419, 420, 421, 422, 430, 436, 452, 453, 454, 455, 465, 501, 504, 875, 876, 877, 878, 879, 880, 886, 887, 898, 900, 902, 905, 928, 931, 933, 936, 938, 943, 959, 962, 997, 998, 999, 1000, 1001, 1134, 1141, 1164, 1166, 1167, 1168, 1188, 1196, 1206, 1209, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1323, 1326, 1343, 1345, 1346, 1347, 1348, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1407, 1408, 1409, 1410, 1411, 1412, 1441, 1444, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1568, 1569, 1570, 1571, 1572, 1591, 1614, 1615, 1640, 1679, 1680, 1681, 1682, 1683, 1704, 1710, 1711, 1712, 1713, 1714, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1945, 1946, 1953, 1956, 1957, 1958, 1963, 1964, 1970, 1991, 1997, 1998, 1999, 2000, 2001, 2002, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2128, 2129, 2130, 2131, 2132, 2134, 2137, 2147, 2148, 2149, 2154, 2157, 2159, 2168, 2175, 2176, 2177, 2178, 2179, 2180, 2195, 2216, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2286, 2292, 2294, 2296, 2298, 2299, 2300, 2301, 2302], "semant": [24, 154, 159, 465, 726, 729, 2131], "round": [24, 25, 26, 28, 29, 31, 32, 33, 51, 52, 53, 99, 100, 101, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 465, 481, 484, 541, 542, 543, 544, 545, 586, 587, 588, 589, 590, 591, 594, 735, 751, 754, 776, 777, 778, 779, 780, 781, 785, 938, 946, 992, 993, 994, 995, 996, 2118, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137], "up": [24, 25, 26, 27, 28, 29, 31, 33, 53, 101, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 171, 898, 900, 1007, 1010, 1040, 1041, 1098, 1099, 1100, 1101, 1102, 1111, 1112, 1113, 1114, 1115, 1134, 1141, 1147, 1188, 1198, 1640, 1679, 1682, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2147, 2148], "hopefulli": [24, 25, 26, 28, 29, 31, 32, 33, 35, 84, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "paint": [24, 154], "pictur": [24, 31, 154], "how": [24, 26, 27, 29, 30, 31, 32, 33, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 170, 171, 2118, 2126, 2130, 2147, 2148, 2149, 2154, 2157, 2159, 2170, 2171, 2172], "pleas": [24, 25, 26, 28, 29, 31, 32, 33, 35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2118, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "reach": [24, 25, 26, 28, 29, 31, 32, 33, 35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1958, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "out": [24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 343, 344, 345, 346, 347, 364, 365, 367, 430, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 923, 924, 925, 926, 927, 928, 929, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1414, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1461, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1508, 1510, 1512, 1514, 1518, 1533, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1941, 1945, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2018, 2019, 2020, 2021, 2022, 2023, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2167, 2171, 2173, 2175, 2181, 2272, 2274, 2276], "discord": [24, 25, 26, 28, 29, 31, 32, 33, 35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "you": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 53, 54, 55, 84, 101, 102, 103, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 189, 232, 233, 239, 325, 430, 465, 977, 980, 1188, 1195, 1258, 1259, 1260, 1261, 1343, 1347, 1406, 1407, 1466, 1467, 1468, 1469, 1470, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2117, 2118, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "ani": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 62, 63, 80, 81, 82, 83, 84, 89, 90, 97, 98, 99, 100, 101, 102, 103, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 171, 189, 232, 233, 239, 241, 242, 244, 245, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 289, 292, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 353, 387, 390, 401, 404, 412, 430, 456, 457, 458, 459, 460, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 567, 568, 569, 570, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 702, 703, 704, 705, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 886, 887, 892, 895, 907, 910, 917, 928, 931, 938, 944, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1282, 1285, 1343, 1346, 1347, 1368, 1371, 1372, 1375, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1466, 1469, 1483, 1486, 1492, 1494, 1495, 1496, 1498, 1501, 1514, 1517, 1524, 1526, 1563, 1566, 1584, 1588, 1589, 1601, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1844, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1952, 1953, 1955, 1956, 1963, 1965, 1966, 1969, 1970, 1986, 1989, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2116, 2117, 2118, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181, 2184, 2188, 2218, 2245, 2252, 2286, 2292, 2302], "question": [24, 25, 26, 28, 29, 31, 32, 33, 35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 170, 171, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "With": [25, 26, 32, 35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 72, 73, 78, 79, 84, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 140, 146, 148, 150, 152, 154, 189, 190, 191, 194, 196, 197, 200, 202, 205, 207, 210, 212, 215, 217, 220, 222, 225, 227, 230, 239, 251, 253, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 320, 324, 325, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 354, 364, 366, 368, 369, 372, 380, 383, 401, 404, 413, 416, 418, 419, 420, 421, 430, 434, 437, 440, 465, 466, 469, 471, 474, 476, 479, 481, 484, 485, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 515, 516, 519, 526, 529, 530, 531, 534, 535, 536, 539, 541, 544, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 581, 584, 585, 586, 589, 591, 592, 593, 594, 595, 596, 599, 601, 604, 606, 609, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 624, 626, 629, 631, 632, 633, 634, 635, 636, 639, 641, 644, 646, 649, 656, 659, 661, 664, 666, 667, 669, 671, 674, 676, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 739, 741, 744, 746, 749, 751, 754, 756, 757, 759, 766, 770, 771, 775, 776, 777, 780, 781, 782, 783, 784, 785, 789, 792, 854, 856, 875, 876, 877, 878, 879, 880, 881, 892, 895, 896, 902, 905, 917, 923, 927, 928, 931, 933, 936, 938, 943, 956, 961, 963, 982, 985, 997, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1067, 1071, 1077, 1079, 1081, 1092, 1093, 1094, 1095, 1096, 1106, 1108, 1110, 1134, 1140, 1142, 1154, 1157, 1159, 1163, 1164, 1166, 1167, 1168, 1181, 1182, 1188, 1196, 1199, 1203, 1206, 1207, 1209, 1232, 1234, 1236, 1238, 1240, 1241, 1242, 1243, 1247, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1267, 1278, 1279, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1311, 1314, 1316, 1319, 1328, 1331, 1343, 1346, 1347, 1348, 1355, 1359, 1360, 1361, 1362, 1363, 1364, 1376, 1377, 1379, 1391, 1392, 1407, 1408, 1410, 1411, 1412, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1440, 1441, 1442, 1444, 1445, 1446, 1449, 1451, 1454, 1456, 1458, 1466, 1469, 1470, 1471, 1474, 1483, 1486, 1492, 1495, 1498, 1499, 1501, 1503, 1504, 1506, 1542, 1543, 1544, 1545, 1558, 1559, 1561, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1596, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1638, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1674, 1677, 1679, 1680, 1682, 1684, 1687, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1791, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1822, 1823, 1824, 1825, 1827, 1828, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1858, 1859, 1860, 1861, 1864, 1865, 1871, 1874, 1876, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1894, 1896, 1899, 1900, 1901, 1904, 1905, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1980, 1981, 1985, 1986, 1990, 1992, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2011, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2032, 2033, 2034, 2038, 2044, 2045, 2048, 2049, 2050, 2053, 2055, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2071, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2130, 2133], "central": [25, 31, 152, 2136], "goal": [25, 31, 2130, 2136], "being": [25, 26, 32, 33, 35, 38, 39, 87, 88, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 152, 154, 157, 170, 171, 239, 241, 242, 1188, 1206, 1282, 1285, 1407, 1425, 1488, 1552, 1704, 1736, 1739, 2118, 2124, 2125, 2126, 2128, 2129, 2130, 2131, 2136, 2137, 2147, 2148, 2149, 2157, 2195, 2216, 2256, 2257], "would": [25, 27, 29, 31, 32, 33, 49, 50, 53, 66, 67, 97, 98, 101, 114, 115, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 171, 189, 202, 205, 222, 225, 430, 456, 457, 458, 459, 460, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1860, 1896, 1897, 1898, 1899, 1900, 2118, 2130, 2136, 2245, 2252], "entir": [25, 26, 31, 32, 33, 78, 79, 80, 81, 87, 88, 102, 103, 126, 127, 128, 129, 133, 134, 136, 138, 140, 142, 147, 148, 149, 150, 152, 154, 157, 158, 159, 171, 430, 455, 917, 1134, 1142, 1188, 1206, 1282, 1285, 1492, 1494, 1496, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2136, 2137, 2159, 2168], "forgiven": 25, "rais": [25, 33, 53, 54, 55, 66, 67, 70, 71, 80, 81, 87, 88, 101, 102, 103, 114, 115, 118, 119, 128, 129, 133, 135, 142, 143, 147, 148, 154, 156, 325, 343, 346, 465, 576, 579, 711, 714, 843, 846, 938, 947, 1012, 1013, 1014, 1015, 1016, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1305, 1307, 1343, 1346, 1347, 1407, 1420, 1421, 1423, 1424, 1480, 1508, 1509, 1511, 1549, 1563, 1566, 1568, 1569, 1572, 1589, 1602, 1631, 1637, 1639, 1704, 1751, 1754, 1761, 1764, 1829, 1833, 1860, 1876, 1879, 1896, 1897, 1898, 1899, 1900, 1916, 1919, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 2013, 2016, 2060, 2075, 2078, 2083, 2086, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2171, 2172, 2175, 2179, 2184, 2190, 2245, 2248], "an": [25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 170, 171, 189, 191, 192, 197, 198, 202, 203, 207, 210, 212, 213, 215, 217, 218, 220, 222, 223, 227, 228, 230, 232, 233, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 285, 287, 289, 292, 299, 300, 302, 303, 305, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 351, 369, 370, 372, 380, 381, 382, 383, 384, 387, 390, 401, 404, 412, 413, 414, 415, 416, 417, 430, 431, 456, 457, 458, 459, 460, 465, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 673, 674, 676, 677, 679, 681, 682, 683, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 759, 761, 763, 765, 766, 767, 768, 770, 771, 773, 775, 776, 778, 780, 781, 783, 785, 789, 792, 793, 796, 803, 804, 805, 806, 807, 808, 809, 811, 813, 814, 816, 818, 819, 821, 823, 826, 828, 831, 833, 836, 838, 839, 840, 841, 842, 843, 846, 854, 855, 856, 857, 870, 871, 872, 874, 880, 881, 882, 884, 885, 886, 887, 888, 892, 895, 898, 900, 907, 910, 917, 918, 919, 920, 921, 922, 928, 931, 933, 936, 938, 940, 944, 946, 953, 954, 956, 958, 961, 963, 964, 982, 983, 984, 985, 992, 995, 1032, 1034, 1049, 1051, 1062, 1063, 1064, 1065, 1066, 1072, 1073, 1075, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1102, 1116, 1118, 1120, 1122, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1154, 1155, 1157, 1159, 1162, 1164, 1165, 1167, 1168, 1181, 1182, 1188, 1189, 1190, 1191, 1193, 1200, 1203, 1204, 1205, 1206, 1207, 1210, 1217, 1220, 1222, 1225, 1227, 1230, 1238, 1241, 1243, 1246, 1248, 1249, 1250, 1251, 1252, 1258, 1259, 1260, 1261, 1270, 1271, 1282, 1285, 1305, 1306, 1307, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1319, 1328, 1329, 1331, 1333, 1334, 1335, 1343, 1347, 1355, 1357, 1359, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1406, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1459, 1462, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1542, 1543, 1544, 1545, 1546, 1556, 1568, 1569, 1571, 1572, 1579, 1583, 1584, 1588, 1589, 1601, 1602, 1612, 1631, 1632, 1636, 1639, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1706, 1708, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1747, 1749, 1751, 1752, 1754, 1756, 1759, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1860, 1861, 1862, 1864, 1866, 1867, 1869, 1871, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1941, 1945, 1952, 1965, 1966, 1969, 1970, 1976, 1977, 1978, 1979, 1980, 1992, 1993, 1995, 1997, 1998, 2001, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2022, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2048, 2050, 2053, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2071, 2072, 2074, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2126, 2128, 2129, 2130, 2131, 2133, 2134, 2136, 2137, 2139, 2142, 2143, 2144, 2146, 2147, 2148, 2149, 2153, 2154, 2157, 2159, 2171, 2172, 2173, 2175, 2176, 2177, 2179, 2181, 2184, 2190, 2195, 2197, 2200, 2214, 2216, 2217, 2227, 2228, 2230, 2236, 2245, 2248, 2251, 2253, 2256, 2257, 2258, 2259, 2272, 2274, 2276, 2277, 2278], "eyebrow": 25, "want": [25, 27, 31, 32, 33, 82, 83, 130, 131, 137, 142, 146, 147, 150, 152, 157, 158, 159, 171, 977, 980, 1188, 1195, 2147, 2148, 2171, 2172, 2286, 2294], "somehow": 25, "tensorflow": [25, 26, 30, 31, 32, 33, 53, 54, 55, 101, 102, 103, 133, 137, 138, 139, 144, 147, 148, 149, 150, 151, 152, 154, 159, 171, 430, 434, 803, 804, 805, 806, 807, 880, 886, 887, 938, 940, 1368, 1371, 1372, 1375, 1568, 1569, 1570, 1571, 2117, 2118, 2128, 2131, 2133, 2134, 2136, 2137, 2142, 2144, 2184, 2185, 2191, 2272, 2275, 2276, 2286, 2294, 2300, 2302], "pytorch": [25, 26, 30, 31, 56, 57, 134, 138, 139, 142, 144, 145, 147, 148, 149, 151, 152, 154, 159, 171, 465, 731, 734, 1614, 1615, 2117, 2118, 2131, 2133, 2134, 2136, 2137, 2175, 2176, 2177, 2178, 2179, 2180], "jax": [25, 26, 30, 31, 32, 33, 53, 133, 135, 138, 139, 142, 144, 147, 148, 149, 150, 151, 152, 154, 156, 159, 171, 938, 952, 1042, 1043, 1045, 1407, 1601, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2118, 2131, 2133, 2136, 2137, 2286, 2292, 2294, 2296, 2298], "other": [25, 28, 31, 32, 33, 35, 38, 39, 47, 48, 53, 54, 55, 66, 67, 78, 79, 84, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 114, 115, 126, 127, 133, 134, 136, 137, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 169, 170, 171, 239, 241, 242, 294, 297, 325, 338, 339, 340, 412, 465, 581, 584, 646, 649, 686, 688, 690, 849, 850, 851, 852, 853, 907, 908, 909, 910, 911, 938, 941, 944, 1311, 1312, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1866, 1867, 1916, 1917, 1918, 1970, 1986, 1989, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2117, 2118, 2126, 2128, 2129, 2130, 2136, 2137], "strong": [25, 171, 2130, 2245, 2252], "industri": [25, 2130, 2132], "back": [25, 32, 33, 53, 66, 67, 101, 114, 115, 134, 138, 142, 146, 153, 171, 997, 998, 999, 1000, 1001, 1188, 1196, 1407, 1547, 1590, 1860, 1896, 1897, 1898, 1899, 1900, 2128, 2132, 2149, 2154, 2157, 2171, 2172, 2175, 2179], "momentum": [25, 53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "won": [25, 26, 32, 33, 136, 159], "t": [25, 26, 28, 29, 31, 32, 33, 35, 38, 39, 53, 60, 61, 82, 83, 101, 102, 103, 108, 109, 130, 131, 132, 134, 135, 136, 137, 138, 140, 146, 147, 150, 151, 152, 154, 156, 157, 158, 159, 171, 858, 938, 952, 1042, 1043, 1044, 1045, 1047, 1048, 1407, 1568, 1569, 1572, 1602, 1612, 1640, 1684, 1687, 1689, 1690, 1691, 1692, 1945, 1954, 2128, 2130, 2132, 2286, 2294], "ad": [25, 30, 31, 32, 33, 66, 67, 114, 115, 130, 131, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 171, 798, 801, 938, 939, 955, 1106, 1109, 1407, 1558, 1561, 1563, 1566, 1704, 1731, 1734, 1736, 1739, 1860, 1876, 1877, 1878, 1879, 1880, 2129, 2130, 2181, 2182], "just": [25, 26, 32, 33, 78, 79, 133, 135, 137, 138, 140, 141, 145, 146, 147, 148, 149, 150, 154, 156, 157, 171, 880, 886, 887, 1368, 1371, 1372, 1375, 2060, 2071, 2072, 2074, 2130, 2131, 2136, 2142, 2144, 2159, 2168, 2272, 2274], "make": [25, 26, 31, 32, 33, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 2128, 2130, 2131, 2132, 2133, 2136, 2137, 2286, 2297], "problem": [25, 33, 133, 134, 148, 156, 2126, 2132, 2136], "even": [25, 26, 32, 33, 53, 101, 133, 137, 138, 139, 141, 144, 145, 147, 148, 149, 152, 156, 157, 158, 159, 171, 465, 711, 714, 731, 734, 1188, 1206, 1282, 1283, 1284, 1285, 1286, 2136], "wors": 25, "rather": [25, 33, 54, 55, 87, 88, 102, 103, 133, 136, 138, 141, 147, 148, 149, 150, 151, 159, 171, 239, 241, 242, 430, 455, 1407, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 2126, 2129, 2130], "funni": 25, "comic": 25, "strip": 25, "": [25, 26, 27, 28, 29, 31, 32, 33, 45, 46, 53, 54, 55, 56, 57, 62, 63, 78, 79, 101, 102, 103, 104, 105, 110, 111, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 170, 171, 233, 239, 284, 285, 287, 307, 309, 311, 312, 314, 316, 325, 326, 327, 328, 329, 330, 374, 375, 377, 378, 430, 436, 443, 444, 454, 465, 726, 729, 798, 799, 800, 801, 802, 898, 900, 938, 939, 952, 955, 1002, 1004, 1006, 1007, 1009, 1011, 1042, 1043, 1044, 1045, 1106, 1107, 1108, 1109, 1110, 1134, 1141, 1152, 1188, 1206, 1273, 1275, 1277, 1282, 1285, 1288, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1310, 1343, 1348, 1396, 1397, 1399, 1407, 1464, 1465, 1568, 1569, 1570, 1572, 1602, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1704, 1720, 1723, 1766, 1767, 1768, 1769, 1770, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1834, 1835, 1837, 1838, 1945, 1958, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2117, 2118, 2126, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2195, 2212, 2241, 2244, 2286, 2292, 2294, 2296, 2302], "easi": [25, 32, 33, 134, 136, 145, 149, 150, 152, 2128, 2130, 2136, 2137], "feasibl": [25, 31, 137], "space": [25, 45, 46, 53, 54, 55, 93, 94, 99, 100, 101, 102, 103, 152, 239, 241, 242, 274, 277, 279, 280, 281, 282, 283, 938, 952, 964, 1042, 1043, 1044, 1045, 1046, 1365, 1366, 1367, 1407, 1441, 1444, 1459, 1460, 1461, 1462, 1463, 1602, 1631, 1637, 1639], "howev": [25, 31, 32, 33, 62, 63, 110, 111, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 171, 1704, 1791, 1794, 1801, 1802, 1803, 1804, 1805, 2129, 2130, 2136, 2286, 2302], "import": [25, 28, 30, 31, 32, 33, 82, 83, 93, 94, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 154, 156, 157, 159, 171, 279, 283, 430, 434, 435, 443, 444, 452, 453, 2118, 2126, 2128, 2130, 2133, 2134, 2136, 2272, 2273, 2274, 2275, 2276, 2286, 2292, 2293], "case": [25, 31, 32, 33, 40, 43, 44, 45, 46, 53, 54, 55, 66, 67, 78, 79, 84, 87, 88, 89, 90, 102, 103, 114, 115, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 171, 239, 284, 285, 287, 430, 434, 450, 461, 464, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 536, 539, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 776, 780, 912, 913, 915, 917, 938, 948, 949, 952, 963, 1017, 1020, 1022, 1025, 1042, 1043, 1045, 1134, 1142, 1305, 1308, 1328, 1331, 1407, 1508, 1509, 1511, 1542, 1543, 1544, 1545, 1546, 1704, 1791, 1794, 1860, 1896, 1897, 1898, 1899, 1900, 1945, 1949, 1955, 2060, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2092, 2095, 2096, 2100, 2101, 2103, 2105, 2129, 2133, 2142, 2144, 2159, 2170, 2171, 2172, 2175, 2179, 2227, 2231], "unlik": [25, 133, 136, 137, 140, 147, 2135, 2137], "charger": 25, "charact": [25, 143, 148], "encod": [25, 54, 55, 102, 103, 157, 1407, 1459, 1460, 1461, 1462, 1463], "instant": [25, 2118], "much": [25, 31, 32, 33, 134, 136, 138, 147, 148, 149, 151, 154, 156, 157, 798, 801, 938, 939, 955, 1106, 1109, 2128, 2130, 2136, 2137, 2149, 2154], "doe": [25, 29, 31, 33, 53, 66, 67, 87, 88, 101, 114, 115, 132, 135, 137, 138, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 171, 465, 536, 539, 880, 886, 887, 938, 958, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1343, 1346, 1347, 1368, 1371, 1372, 1375, 1407, 1508, 1511, 1704, 1730, 1860, 1906, 1907, 1908, 1909, 1910, 2117, 2126, 2130, 2131, 2137, 2184, 2187, 2188, 2189], "mandat": [25, 138, 147, 150, 151], "adopt": [25, 33, 134, 144, 152, 2129, 2130, 2135], "continu": [25, 26, 30, 31, 32, 132, 133, 143, 150, 171, 2130], "own": [25, 26, 32, 133, 137, 138, 141, 142, 148, 151, 154, 171, 2117, 2126, 2129, 2130, 2135, 2136], "call": [25, 29, 33, 53, 84, 89, 90, 95, 96, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 171, 172, 183, 392, 393, 396, 398, 430, 431, 432, 455, 1258, 1259, 1260, 1261, 1343, 1347, 1407, 1488, 1552, 1589, 1602, 1612, 1613, 1618, 1704, 1791, 1794, 1945, 1946, 1952, 1956, 1957, 2130, 2131, 2134, 2142, 2144, 2145, 2147, 2148, 2159, 2170, 2171, 2172, 2175, 2179, 2195, 2200, 2216, 2286, 2296, 2302], "signatur": [25, 51, 52, 99, 100, 138, 139, 140, 141, 144, 147, 150, 151, 152, 325, 348, 351, 465, 606, 609, 671, 672, 673, 731, 734, 1188, 1206, 1282, 1285, 1704, 1736, 1737, 1791, 1794, 1860, 1936, 1940, 2060, 2092, 2095, 2127, 2136], "replac": [25, 29, 33, 53, 54, 55, 66, 67, 70, 71, 87, 88, 101, 102, 103, 114, 115, 118, 119, 136, 138, 139, 140, 146, 148, 150, 156, 159, 171, 239, 260, 261, 880, 881, 938, 958, 982, 985, 1248, 1249, 1250, 1251, 1252, 1407, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1860, 1861, 1862, 1863, 1864, 1865, 1970, 1971, 1972, 1973, 1974, 1975, 2137, 2227, 2231], "your": [25, 26, 27, 28, 29, 30, 31, 32, 133, 137, 141, 151, 152, 157, 158, 171, 2118, 2130], "1": [25, 26, 29, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 171, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 243, 251, 253, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 320, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 364, 365, 366, 368, 369, 371, 372, 373, 380, 381, 384, 396, 397, 398, 399, 400, 401, 404, 413, 414, 417, 430, 436, 437, 438, 439, 440, 441, 445, 448, 449, 451, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 656, 658, 659, 660, 666, 667, 668, 669, 670, 671, 673, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 837, 838, 839, 840, 841, 842, 843, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1483, 1484, 1485, 1486, 1487, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1533, 1542, 1543, 1544, 1545, 1546, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1566, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2147, 2148, 2149, 2150, 2153, 2154, 2155, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2195, 2215, 2227, 2229, 2230, 2231, 2232, 2235, 2236, 2237, 2238, 2239, 2241, 2242, 2245, 2246, 2248, 2251, 2252, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2275, 2276, 2286, 2296, 2302], "10": [25, 29, 32, 45, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 70, 71, 74, 75, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 137, 138, 140, 149, 150, 154, 156, 157, 239, 269, 271, 273, 274, 277, 279, 280, 281, 282, 283, 465, 476, 477, 478, 479, 480, 511, 512, 514, 516, 517, 519, 531, 532, 533, 534, 535, 551, 552, 553, 554, 555, 581, 584, 601, 604, 631, 634, 641, 642, 643, 644, 645, 691, 694, 716, 717, 719, 746, 747, 748, 749, 750, 751, 753, 754, 755, 798, 799, 801, 818, 821, 823, 824, 826, 828, 829, 831, 833, 837, 865, 867, 868, 869, 892, 895, 896, 918, 919, 920, 921, 922, 938, 939, 942, 951, 952, 955, 956, 959, 997, 998, 999, 1000, 1001, 1012, 1014, 1016, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1134, 1135, 1136, 1140, 1148, 1149, 1154, 1155, 1156, 1157, 1158, 1188, 1191, 1193, 1196, 1200, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1232, 1233, 1234, 1235, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1316, 1318, 1320, 1343, 1345, 1347, 1348, 1386, 1387, 1389, 1407, 1425, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1454, 1459, 1460, 1461, 1462, 1463, 1466, 1469, 1471, 1473, 1474, 1475, 1479, 1488, 1498, 1500, 1501, 1502, 1503, 1506, 1507, 1542, 1543, 1544, 1545, 1546, 1552, 1558, 1560, 1561, 1562, 1593, 1602, 1619, 1620, 1621, 1622, 1640, 1642, 1644, 1645, 1646, 1647, 1650, 1657, 1660, 1679, 1680, 1682, 1704, 1715, 1716, 1718, 1725, 1728, 1746, 1749, 1751, 1753, 1755, 1756, 1759, 1761, 1764, 1776, 1779, 1801, 1805, 1806, 1810, 1811, 1814, 1860, 1881, 1884, 1906, 1909, 1911, 1913, 1915, 1916, 1919, 1921, 1922, 1924, 1931, 1932, 1934, 1935, 1945, 1952, 1954, 1957, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1997, 2013, 2016, 2023, 2024, 2026, 2028, 2044, 2050, 2053, 2060, 2061, 2064, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2078, 2083, 2086, 2087, 2089, 2091, 2096, 2100, 2101, 2104, 2105, 2135, 2175, 2177, 2227, 2230, 2232, 2235, 2236, 2237, 2238, 2245, 2251], "100": [25, 26, 45, 46, 53, 93, 94, 99, 100, 101, 102, 103, 137, 150, 157, 158, 159, 171, 239, 279, 280, 281, 282, 283, 465, 531, 534, 751, 753, 754, 755, 880, 886, 887, 917, 938, 955, 958, 1106, 1109, 1134, 1142, 1248, 1249, 1250, 1251, 1252, 1368, 1371, 1372, 1375, 1407, 1471, 1473, 1474, 1475, 1503, 1506, 1507, 1542, 1544, 1545, 1704, 1746, 1749, 1945, 1952, 2118], "despit": [25, 136, 138, 139, 149, 152, 154, 2127, 2130], "distinct": [25, 32, 136, 141, 147, 148, 153, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2118, 2130], "still": [25, 31, 33, 62, 63, 87, 88, 110, 111, 134, 138, 141, 142, 147, 148, 150, 152, 158, 171, 1704, 1801, 1802, 1803, 1804, 1805, 2118, 2127, 2130, 2136], "believ": [25, 33], "share": [25, 87, 88, 135, 136, 140, 145, 148, 149, 150, 152, 154, 325, 423, 2128, 2129, 2136, 2142, 2145, 2227, 2229, 2235, 2236, 2241, 2242], "bring": [25, 133, 150, 154, 155, 2117], "benefit": [25, 26, 32, 134, 136, 147, 152, 156, 157, 171, 2128, 2132, 2135], "unrel": [25, 33], "what": [25, 26, 28, 33, 132, 136, 137, 140, 141, 144, 146, 148, 149, 150, 153, 154, 156, 157, 158, 159, 170, 171, 2118, 2126, 2131, 2132, 2135, 2245, 2252], "again": [25, 26, 33, 134, 135, 136, 140, 142, 147, 148, 150, 151, 152, 157, 159, 171, 1704, 1791, 1794, 2135, 2136], "contrari": 25, "bumpi": 25, "road": 25, "allud": [25, 157], "most": [25, 30, 31, 32, 87, 88, 93, 94, 134, 136, 137, 138, 139, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 171, 239, 294, 296, 297, 298, 1704, 1730, 1731, 1734, 2130, 2131, 2133, 2134, 2136, 2137], "technologi": [25, 2128, 2132], "sector": [25, 51, 52, 99, 100, 465, 476, 477, 478, 479, 480, 491, 492, 493, 494, 495, 506, 507, 508, 509, 510], "full": [25, 26, 33, 35, 38, 39, 62, 63, 84, 89, 90, 108, 109, 110, 111, 138, 141, 142, 144, 148, 150, 152, 154, 171, 239, 325, 369, 372, 465, 601, 604, 631, 634, 1407, 1478, 1490, 1548, 1554, 1591, 1595, 1640, 1647, 1650, 1657, 1660, 1662, 1664, 1666, 1667, 1670, 1704, 1766, 1767, 1769, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 2128, 2130, 2136, 2195, 2213, 2241, 2244, 2272, 2273, 2274, 2275, 2276], "success": 25, "reason": [25, 31, 33, 133, 134, 136, 137, 138, 140, 145, 147, 148, 151, 152, 154, 156, 465, 726, 729, 2136], "build": [25, 27, 28, 32, 137, 138, 145, 153, 155, 158, 159, 171, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2117, 2118, 2128, 2130, 2132, 2135, 2136, 2137, 2142, 2144, 2159, 2170, 2171, 2172], "custom": [25, 53, 101, 137, 142, 149, 150, 158, 789, 792, 858, 1047, 1048, 1355, 1356, 1357, 1358, 1359, 2130, 2134, 2135, 2136], "comput": [25, 26, 32, 36, 37, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 78, 79, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 126, 127, 136, 137, 138, 145, 148, 150, 152, 154, 157, 171, 202, 203, 204, 206, 222, 223, 224, 226, 430, 455, 465, 481, 484, 511, 514, 526, 529, 536, 539, 566, 569, 571, 572, 573, 574, 575, 596, 599, 601, 604, 626, 629, 631, 634, 661, 664, 666, 669, 671, 674, 676, 679, 686, 688, 690, 701, 704, 721, 722, 723, 726, 727, 728, 729, 730, 789, 790, 793, 796, 823, 826, 828, 831, 833, 834, 836, 854, 856, 858, 880, 882, 884, 885, 892, 895, 898, 900, 928, 931, 933, 936, 938, 948, 949, 950, 952, 956, 959, 965, 966, 987, 990, 1017, 1020, 1022, 1025, 1027, 1030, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1051, 1057, 1060, 1072, 1073, 1074, 1076, 1077, 1080, 1082, 1085, 1116, 1118, 1120, 1122, 1124, 1127, 1128, 1134, 1135, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1150, 1154, 1157, 1164, 1165, 1167, 1168, 1169, 1170, 1176, 1179, 1181, 1182, 1188, 1199, 1202, 1209, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1228, 1230, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1343, 1345, 1346, 1347, 1348, 1360, 1361, 1362, 1363, 1364, 1396, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1602, 1604, 1607, 1612, 1613, 1614, 1615, 1618, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1704, 1705, 1708, 1710, 1711, 1712, 1713, 1714, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1751, 1754, 1756, 1759, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1845, 1848, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1876, 1879, 1945, 1952, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2061, 2063, 2064, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2117, 2126, 2128, 2130, 2131, 2133, 2134, 2136, 2142, 2144, 2145, 2195, 2215, 2216, 2245, 2252], "thank": [25, 157], "interoper": [25, 2127, 2128, 2130, 2133], "compon": [25, 154, 1602, 1631, 1637, 1639, 2126, 2131, 2133], "bio": [25, 32], "hardwar": [25, 32, 35, 38, 39, 152, 2124, 2125, 2126, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136], "initi": [25, 33, 60, 61, 84, 87, 88, 89, 90, 108, 109, 135, 138, 139, 149, 150, 154, 1640, 1689, 1690, 1691, 1692, 2130, 2136, 2137, 2142, 2145, 2147, 2148, 2150, 2151, 2152, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2170, 2171, 2172, 2175, 2179], "pcie": 25, "interfac": [25, 156, 159, 171, 2117, 2126, 2127, 2128, 2129, 2130, 2134, 2137], "motherboard": 25, "raid": 25, "storag": [25, 157], "virtual": [25, 28, 29, 33, 148, 2133, 2134], "bluetooth": 25, "wireless": 25, "exchang": [25, 30, 2126, 2128], "btx": 25, "form": [25, 27, 40, 41, 42, 43, 44, 45, 46, 56, 57, 62, 63, 87, 88, 110, 111, 145, 150, 152, 158, 159, 239, 244, 245, 246, 289, 292, 307, 309, 311, 312, 314, 316, 880, 883, 923, 926, 1053, 1055, 1067, 1070, 1188, 1194, 1201, 1206, 1211, 1282, 1285, 1391, 1395, 1407, 1413, 1573, 1578, 1614, 1615, 1640, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1945, 1947, 1958, 2130, 2131, 2136, 2149, 2153], "factor": [25, 56, 57, 60, 61, 62, 63, 101, 104, 105, 108, 109, 110, 111, 142, 430, 453, 454, 455, 1222, 1224, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1704, 1705, 1706, 1707, 1708, 1709, 2149, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2175, 2176, 2177, 2178, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2258, 2259], "sata": 25, "connect": [25, 32, 158, 159, 2128, 2159, 2169, 2170], "host": [25, 137, 171, 2135], "bu": [25, 110, 111, 1801, 1802, 1804], "adapt": [25, 104, 105, 1602, 1623, 1625, 1626, 2175, 2178], "devic": [25, 33, 35, 38, 39, 45, 46, 50, 53, 70, 71, 87, 88, 93, 94, 98, 101, 102, 103, 118, 119, 132, 135, 138, 142, 145, 146, 149, 150, 151, 152, 154, 159, 171, 239, 241, 242, 243, 244, 245, 246, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 880, 881, 886, 887, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 1032, 1033, 1034, 1188, 1195, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1309, 1310, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1407, 1414, 1464, 1465, 1471, 1473, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2117, 2124, 2125, 2129, 2130, 2132, 2133, 2134, 2135, 2142, 2143, 2146, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2184, 2187, 2188, 2195, 2215, 2216, 2217], "html": [25, 29, 51, 52, 99, 100, 141, 325, 348, 351, 465, 606, 609, 671, 672, 673, 731, 734, 880, 886, 887, 1368, 1371, 1372, 1375, 1704, 1736, 1737, 1791, 1794, 1860, 1936, 1940, 2060, 2092, 2095], "enabl": [25, 32, 33, 53, 84, 87, 88, 89, 90, 134, 136, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 159, 171, 898, 900, 1134, 1141, 1602, 1631, 1639, 2117, 2128, 2129, 2130, 2131, 2132, 2133, 2136, 2137], "anyon": [25, 27, 33, 137, 171, 2136], "websit": [25, 133], "tcp": 25, "ip": 25, "node": [25, 87, 88, 102, 103, 136, 148, 1568, 1569, 1571, 1945, 1956, 1957, 2131, 2149, 2150, 2153, 2154, 2157, 2282, 2283], "commun": [25, 27, 31, 32, 33, 171, 2118, 2129, 2130, 2132], "network": [25, 136, 145, 154, 158, 170, 1640, 1684, 1687, 2118, 2126, 2128, 2129, 2130, 2134, 2136, 2137, 2139, 2142, 2144, 2147, 2148, 2149, 2157, 2159, 2171, 2172], "smtp": 25, "possibl": [25, 27, 31, 32, 33, 53, 66, 67, 114, 115, 133, 136, 138, 140, 141, 147, 148, 149, 150, 152, 154, 157, 170, 171, 818, 821, 898, 900, 1134, 1141, 1188, 1191, 1407, 1533, 1640, 1679, 1682, 1860, 1896, 1897, 1898, 1899, 1900, 2060, 2075, 2078, 2083, 2086, 2128, 2130, 2136], "send": [25, 2135], "gmail": [25, 137], "outlook": 25, "pop": [25, 32], "u": [25, 27, 32, 33, 62, 63, 93, 94, 110, 111, 136, 137, 146, 147, 148, 149, 150, 151, 152, 158, 171, 279, 281, 1704, 1705, 1706, 1707, 1708, 1709, 1736, 1739, 1801, 1802, 1803, 1804, 1805, 1945, 1954], "email": [25, 137], "ieee": [25, 233, 325, 369, 372, 465, 481, 484, 581, 584, 646, 649, 726, 729, 751, 754], "754": [25, 233, 325, 369, 372, 465, 481, 484, 581, 584, 646, 649, 726, 729, 751, 754], "allow": [25, 28, 31, 33, 53, 101, 134, 137, 138, 142, 143, 146, 148, 149, 150, 154, 156, 171, 239, 274, 277, 1258, 1259, 1260, 1261, 1343, 1347, 1407, 1533, 2044, 2050, 2053, 2117, 2128, 2130, 2134, 2135, 2147, 2148, 2171, 2172, 2227, 2230, 2231, 2235, 2236, 2241, 2244, 2245, 2248, 2251, 2256, 2257], "calcul": [25, 31, 51, 52, 53, 64, 65, 78, 79, 84, 87, 88, 89, 90, 99, 100, 101, 112, 113, 126, 127, 141, 154, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 546, 549, 551, 554, 561, 564, 576, 579, 581, 584, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 711, 714, 741, 744, 746, 749, 751, 754, 761, 765, 766, 770, 771, 775, 803, 804, 805, 806, 807, 854, 855, 856, 857, 938, 940, 945, 952, 957, 963, 972, 975, 1040, 1041, 1042, 1043, 1044, 1045, 1111, 1112, 1113, 1114, 1115, 1171, 1174, 1181, 1182, 1188, 1206, 1258, 1259, 1260, 1261, 1282, 1285, 1328, 1331, 1343, 1347, 1704, 1736, 1739, 1791, 1794, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 2060, 2075, 2078, 2079, 2082, 2083, 2084, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2149, 2154, 2157, 2227, 2231, 2236, 2245, 2252], "live": [25, 26, 138, 2126, 2128], "depend": [25, 28, 31, 32, 33, 45, 46, 47, 48, 54, 55, 62, 63, 76, 77, 95, 96, 110, 111, 124, 125, 126, 127, 138, 141, 146, 147, 148, 149, 150, 152, 154, 171, 239, 251, 252, 253, 325, 333, 334, 335, 336, 337, 465, 466, 469, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 501, 504, 546, 549, 551, 554, 576, 579, 581, 584, 636, 639, 641, 644, 646, 649, 651, 654, 711, 714, 741, 744, 746, 749, 766, 770, 771, 775, 938, 963, 1328, 1331, 1407, 1568, 1570, 1572, 1704, 1730, 1731, 1734, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1796, 1799, 1801, 1805, 1997, 2018, 2022, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2101, 2104, 2128, 2130, 2131], "did": [25, 31, 159, 2136], "aris": [25, 138, 171], "until": [25, 33, 143, 151, 154, 171, 2118, 2137], "wa": [25, 33, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 137, 140, 148, 154, 156, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 907, 911, 918, 922, 938, 962, 982, 984, 986, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1326, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1589, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2060, 2061, 2063, 2065, 2066, 2068, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2129, 2130, 2132, 2286, 2302], "substanti": [25, 33, 134, 138, 150, 2130], "innov": 25, "growth": [25, 2133], "usag": [25, 138, 150, 154, 171, 430, 455, 2133], "relev": [25, 31, 32, 33, 45, 46, 93, 94, 134, 136, 137, 138, 140, 149, 150, 157, 172, 173, 239, 279, 280, 281, 282, 283, 2128, 2135, 2136, 2175, 2176, 2177, 2178, 2179, 2180], "area": [25, 51, 52, 99, 100, 147, 169, 465, 476, 477, 478, 479, 480, 491, 492, 493, 494, 495, 506, 507, 508, 509, 510, 1098, 1101, 1134, 1147, 2118, 2126], "necess": 25, "parti": [25, 171, 2129, 2130, 2136], "could": [25, 26, 31, 32, 33, 133, 137, 138, 140, 146, 147, 148, 149, 150, 154, 156, 157, 158, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2130, 2135, 2136], "easili": [25, 32, 134, 137, 148, 152, 157, 158, 159, 171, 2118, 2130, 2136, 2137], "engag": [25, 27, 33], "regard": [25, 30, 136, 148, 149, 152], "effect": [25, 31, 45, 46, 53, 56, 57, 78, 79, 101, 104, 105, 126, 127, 134, 136, 137, 141, 144, 147, 152, 171, 239, 284, 285, 287, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1602, 1604, 1607, 1627, 1628, 1629, 1630, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2227, 2231, 2235, 2236, 2256, 2259], "2015": [25, 2130], "sinc": [25, 32, 33, 53, 101, 133, 134, 136, 137, 147, 148, 171, 938, 1332, 2130, 2136, 2142, 2145], "alongsid": 25, "machin": [25, 32, 62, 63, 110, 111, 133, 145, 170, 325, 369, 372, 380, 383, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 2117, 2128, 2130, 2132, 2133, 2134, 2135, 2136], "frame": [25, 170, 2130], "less": [25, 33, 35, 38, 39, 51, 52, 53, 62, 63, 70, 71, 78, 79, 84, 89, 90, 99, 100, 101, 110, 111, 118, 119, 136, 138, 140, 142, 144, 147, 148, 150, 152, 153, 154, 465, 471, 474, 476, 479, 486, 489, 501, 504, 541, 544, 630, 636, 639, 641, 644, 646, 649, 651, 654, 711, 714, 726, 729, 736, 739, 751, 754, 892, 893, 894, 895, 896, 898, 900, 938, 962, 1134, 1140, 1141, 1323, 1326, 1704, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 1834, 1835, 1837, 1838, 1970, 1986, 1987, 1988, 1989, 1990, 2060, 2092, 2095, 2101, 2103, 2105, 2130, 2132], "matur": [25, 171, 2130], "state": [25, 32, 60, 61, 108, 109, 138, 141, 142, 144, 148, 150, 153, 154, 155, 157, 170, 325, 424, 425, 426, 427, 428, 1407, 1477, 1478, 1490, 1557, 1590, 1592, 1593, 1594, 1640, 1689, 1690, 1691, 1692, 2118, 2136, 2137, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2218], "than": [25, 28, 33, 35, 38, 39, 51, 52, 53, 54, 55, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 84, 87, 88, 89, 90, 99, 100, 101, 102, 103, 110, 111, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 133, 136, 137, 138, 140, 142, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 171, 239, 241, 242, 325, 369, 372, 430, 455, 465, 471, 474, 476, 479, 486, 489, 501, 504, 521, 524, 531, 534, 541, 544, 586, 589, 591, 594, 636, 639, 641, 644, 646, 649, 651, 654, 681, 682, 683, 684, 685, 711, 714, 726, 729, 736, 739, 751, 754, 776, 780, 793, 796, 797, 798, 801, 849, 850, 851, 852, 853, 892, 893, 894, 895, 896, 898, 900, 938, 939, 941, 955, 962, 964, 987, 988, 989, 990, 991, 1002, 1005, 1007, 1010, 1082, 1083, 1084, 1085, 1086, 1106, 1109, 1134, 1140, 1141, 1144, 1145, 1164, 1165, 1188, 1197, 1198, 1323, 1326, 1365, 1366, 1367, 1407, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1704, 1710, 1713, 1751, 1754, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 1834, 1835, 1837, 1838, 1860, 1861, 1864, 1881, 1882, 1883, 1884, 1885, 1911, 1914, 1970, 1986, 1987, 1988, 1989, 1990, 1997, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2127, 2128, 2129, 2130, 2136, 2137, 2142, 2144], "preced": [25, 158], "mention": [25, 31, 32, 33, 134, 140, 144, 145, 147, 148, 150, 152, 2130], "aros": 25, "70": [25, 102, 103, 892, 895, 1134, 1140, 1471, 1473, 1542, 1544, 1546, 1704, 1776, 1779, 2060, 2071, 2074], "80": [25, 53, 101, 142, 938, 952, 1042, 1043, 1044, 1045, 1704, 1776, 1779, 1945, 1957, 2060, 2071, 2074], "90": [25, 51, 52, 53, 99, 100, 101, 465, 536, 539, 556, 557, 559, 560, 716, 719, 720, 731, 733, 734, 735, 1188, 1207, 1316, 1317, 1318, 1319, 1320, 1704, 1776, 1779, 2060, 2071, 2074], "effort": [25, 27, 171, 2126, 2130, 2136], "stage": [25, 27, 29, 33, 132, 143, 150, 2118, 2130], "complet": [25, 31, 33, 62, 63, 87, 88, 110, 111, 133, 134, 136, 137, 140, 142, 148, 149, 150, 156, 157, 1704, 1786, 1787, 1788, 1789, 1790, 2128, 2241, 2244], "natur": [25, 62, 63, 110, 111, 134, 140, 142, 149, 170, 465, 576, 579, 636, 639, 646, 649, 731, 734, 1704, 1791, 1792, 1793, 1794, 1795], "like": [25, 29, 31, 32, 33, 45, 46, 53, 66, 67, 93, 94, 101, 114, 115, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 170, 171, 239, 279, 280, 281, 282, 283, 325, 353, 412, 803, 804, 805, 806, 807, 813, 816, 818, 821, 907, 908, 909, 910, 911, 938, 940, 944, 945, 947, 951, 954, 957, 962, 972, 973, 975, 997, 998, 999, 1000, 1001, 1012, 1013, 1015, 1035, 1036, 1037, 1038, 1039, 1087, 1088, 1089, 1090, 1091, 1159, 1161, 1162, 1163, 1171, 1172, 1173, 1174, 1175, 1188, 1190, 1191, 1196, 1243, 1245, 1246, 1247, 1323, 1324, 1325, 1326, 1327, 1333, 1334, 1335, 1704, 1730, 1860, 1896, 1897, 1898, 1899, 1900, 1970, 1986, 1989, 2118, 2130, 2135], "certainli": [25, 2136], "mission": [25, 2118, 2132], "creat": [25, 27, 28, 29, 31, 32, 33, 45, 46, 53, 70, 71, 87, 88, 93, 94, 101, 102, 103, 118, 119, 134, 137, 138, 139, 142, 146, 147, 148, 149, 150, 152, 154, 155, 158, 169, 170, 239, 241, 242, 244, 245, 246, 254, 255, 256, 258, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 317, 319, 320, 321, 322, 323, 324, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 880, 881, 886, 887, 912, 913, 914, 915, 916, 938, 958, 982, 983, 984, 985, 986, 1032, 1033, 1034, 1188, 1206, 1248, 1249, 1250, 1251, 1252, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1309, 1310, 1368, 1371, 1372, 1375, 1407, 1471, 1473, 1574, 1577, 1601, 1602, 1638, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2117, 2118, 2130, 2131, 2136, 2142, 2143, 2146, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2195, 2200, 2215, 2216, 2272, 2273, 2274, 2275, 2276], "At": [25, 31, 32, 133, 148, 150, 151, 2130], "process": [25, 26, 27, 29, 32, 33, 136, 137, 145, 148, 149, 150, 152, 154, 159, 430, 450, 464, 2128, 2129, 2130, 2133, 2134, 2136, 2137], "ourselv": [25, 2136], "lead": [25, 26, 62, 63, 84, 87, 88, 89, 90, 110, 111, 137, 140, 151, 171, 1704, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 2245, 2252], "quansight": [25, 2136], "compani": [25, 2126], "made": [25, 28, 31, 33, 53, 66, 67, 101, 133, 134, 136, 137, 142, 147, 148, 151, 154, 156, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 1124, 1127, 1164, 1169, 1188, 1189, 1190, 1916, 1917, 2130], "organ": [25, 134, 136, 145, 148, 151, 2117], "panda": 25, "scipi": [25, 2132, 2137], "conda": [25, 29, 32, 2132], "dask": [25, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "apach": [25, 2132, 2136], "mxnet": [25, 2137], "onnx": [25, 2128, 2136], "scikit": 25, "jupyt": [25, 2132], "aw": 25, "cupi": [25, 2130, 2137], "net": [25, 26, 154, 159], "sympi": 25, "rai": [25, 465, 501, 504], "modin": 25, "spyder": 25, "includ": [25, 31, 33, 45, 46, 53, 54, 55, 72, 73, 78, 79, 80, 81, 87, 88, 93, 94, 99, 100, 101, 102, 103, 110, 111, 120, 121, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 170, 171, 239, 241, 242, 244, 245, 246, 274, 277, 279, 280, 281, 282, 283, 289, 292, 793, 797, 870, 872, 874, 875, 877, 879, 880, 886, 887, 907, 909, 911, 912, 914, 916, 928, 930, 932, 933, 935, 937, 938, 956, 972, 974, 976, 992, 994, 996, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1035, 1037, 1039, 1049, 1050, 1052, 1053, 1056, 1057, 1059, 1061, 1072, 1074, 1076, 1077, 1079, 1081, 1087, 1089, 1091, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1128, 1154, 1155, 1157, 1171, 1173, 1175, 1232, 1234, 1236, 1238, 1240, 1242, 1248, 1250, 1252, 1253, 1255, 1257, 1258, 1262, 1263, 1265, 1273, 1275, 1277, 1289, 1291, 1293, 1300, 1302, 1304, 1323, 1325, 1327, 1368, 1371, 1372, 1375, 1376, 1377, 1379, 1382, 1383, 1384, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1492, 1493, 1494, 1495, 1496, 1596, 1597, 1598, 1599, 1600, 1704, 1824, 1825, 1827, 1834, 1835, 1837, 1838, 1945, 1946, 1970, 1986, 1989, 1997, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2121, 2123, 2127, 2128, 2130, 2132, 2135, 2136, 2137, 2149, 2157, 2159, 2169, 2170, 2173, 2174, 2195, 2215, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "member": [25, 31, 33, 148], "googl": [25, 137, 2118], "octoml": [25, 2136], "einop": [25, 54, 55, 102, 103, 1407, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455], "further": [25, 26, 29, 33, 133, 134, 137, 140, 142, 144, 148, 150, 153, 154, 157, 158, 2118, 2135, 2136, 2245, 2252], "sponsor": 25, "lg": 25, "electron": 25, "microsoft": [25, 2130, 2135, 2137], "d": [25, 26, 27, 32, 53, 60, 61, 62, 63, 93, 94, 101, 102, 103, 108, 109, 110, 111, 132, 136, 150, 157, 279, 281, 325, 413, 416, 818, 819, 820, 821, 822, 823, 826, 828, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 859, 860, 862, 880, 886, 887, 902, 905, 977, 980, 987, 990, 1002, 1003, 1004, 1005, 1006, 1082, 1085, 1134, 1135, 1136, 1137, 1144, 1145, 1148, 1149, 1150, 1164, 1166, 1188, 1191, 1195, 1197, 1217, 1220, 1222, 1225, 1227, 1228, 1229, 1230, 1231, 1305, 1306, 1350, 1351, 1353, 1368, 1371, 1372, 1375, 1415, 1417, 1419, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1652, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1704, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1756, 1757, 1758, 1759, 1760, 1776, 1779, 1824, 1825, 1826, 1827, 1828, 1945, 1949, 1953, 1954, 1955, 1963, 1964, 2118, 2126], "e": [25, 26, 27, 28, 29, 31, 32, 33, 35, 38, 39, 45, 46, 53, 56, 57, 62, 63, 70, 71, 76, 77, 78, 79, 101, 110, 111, 118, 119, 124, 125, 126, 127, 132, 133, 136, 142, 148, 150, 154, 157, 171, 233, 239, 251, 252, 253, 279, 280, 282, 284, 285, 287, 325, 332, 413, 416, 430, 433, 465, 466, 469, 501, 504, 521, 524, 531, 534, 541, 544, 576, 579, 586, 589, 591, 594, 606, 609, 636, 639, 646, 649, 681, 684, 686, 689, 711, 714, 726, 729, 789, 790, 823, 825, 826, 827, 828, 831, 838, 839, 840, 841, 842, 843, 846, 880, 881, 886, 887, 898, 900, 912, 913, 915, 982, 985, 1134, 1135, 1136, 1141, 1148, 1149, 1176, 1179, 1217, 1219, 1220, 1221, 1222, 1225, 1248, 1250, 1289, 1290, 1292, 1305, 1306, 1307, 1308, 1310, 1368, 1371, 1372, 1375, 1614, 1615, 1704, 1710, 1713, 1736, 1740, 1751, 1754, 1756, 1759, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 1796, 1799, 1801, 1805, 1834, 1835, 1837, 1838, 1860, 1876, 1879, 1916, 1919, 1945, 1949, 1953, 1954, 1955, 1963, 1964, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2117, 2126, 2142, 2144, 2286, 2294], "shaw": 25, "co": [25, 30, 51, 52, 54, 55, 99, 100, 138, 154, 170, 465, 550, 1407, 1459, 1460, 1462, 2118], "intel": [25, 2128, 2135], "togeth": [25, 87, 88, 134, 136, 143, 148, 151, 152, 158, 159, 171, 798, 801, 938, 939, 955, 1106, 1109, 2128, 2130, 2131, 2136, 2181, 2182], "major": [25, 138, 139, 149, 150, 171, 1997, 2013, 2016, 2127, 2130], "involv": [25, 27, 29, 47, 48, 95, 96, 132, 137, 138, 140, 152, 159, 325, 413, 414, 415, 416, 417, 465, 481, 484, 2130, 2136], "anoth": [25, 31, 32, 33, 136, 138, 142, 145, 146, 147, 148, 150, 152, 154, 156, 159, 239, 263, 266, 325, 338, 341, 348, 351, 2117, 2130, 2136], "promis": 25, "sign": [25, 32, 51, 52, 53, 62, 63, 99, 100, 101, 110, 111, 154, 159, 239, 241, 242, 465, 466, 469, 481, 484, 501, 504, 531, 534, 726, 727, 728, 729, 730, 740, 865, 866, 867, 868, 869, 938, 942, 1704, 1791, 1792, 1793, 1794, 1795, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100], "pursuit": 25, "unif": [25, 27, 156, 2126, 2136], "clearli": [25, 31, 33, 140, 149, 150, 2134], "lot": [25, 26, 137, 138, 146, 150, 171, 2129], "thought": [25, 32, 33, 144, 2128], "care": [25, 33, 148, 152, 159, 2142, 2145], "attent": [25, 33, 60, 61, 108, 109, 134, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 2159, 2170], "gone": [25, 153], "simplifi": [25, 142, 148, 154, 155, 158, 2126, 2128, 2129, 2130, 2133, 2136, 2137], "compat": [25, 35, 38, 39, 51, 52, 62, 63, 66, 67, 72, 73, 78, 79, 80, 81, 84, 89, 90, 99, 100, 110, 111, 114, 115, 120, 121, 126, 127, 128, 129, 135, 144, 148, 149, 151, 154, 171, 325, 343, 346, 465, 481, 482, 483, 484, 485, 501, 502, 503, 504, 505, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 726, 727, 728, 729, 730, 761, 762, 763, 764, 765, 781, 782, 783, 784, 785, 1704, 1710, 1711, 1712, 1714, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1796, 1799, 1811, 1814, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1896, 1897, 1898, 1899, 1900, 1997, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118], "excit": [25, 27, 132, 2118], "complianc": 25, "hope": [25, 171, 2136], "due": [25, 28, 32, 133, 137, 142, 147, 148, 465, 731, 734, 2130], "suit": [25, 32, 132, 133, 137, 150, 157, 170, 2117, 2130, 2136], "some": [25, 26, 31, 32, 33, 87, 88, 104, 105, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 170, 171, 430, 432, 465, 581, 584, 646, 649, 917, 1134, 1142, 1602, 1604, 1607, 1608, 1610, 1611, 1614, 1617, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1945, 1957, 2117, 2118, 2126, 2127, 2129, 2130, 2131, 2136, 2137, 2159, 2167], "motiv": [25, 156], "great": [25, 26, 33, 150, 154, 156, 2136], "convinc": 25, "celebr": 25, "encourag": [25, 170, 171], "foundat": [25, 2133], "point": [26, 31, 32, 33, 47, 48, 51, 52, 53, 62, 63, 70, 71, 78, 79, 95, 96, 99, 100, 101, 110, 111, 118, 119, 126, 127, 133, 134, 137, 140, 141, 144, 147, 148, 150, 151, 152, 154, 156, 157, 170, 233, 239, 241, 242, 244, 246, 254, 260, 261, 268, 299, 300, 317, 319, 325, 333, 334, 335, 336, 337, 369, 370, 372, 385, 396, 399, 413, 416, 465, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 536, 539, 541, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 564, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 711, 714, 726, 729, 731, 734, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 780, 781, 785, 838, 839, 840, 841, 843, 846, 849, 853, 880, 881, 883, 912, 913, 914, 915, 916, 917, 938, 960, 963, 964, 982, 985, 1032, 1034, 1053, 1054, 1055, 1056, 1134, 1142, 1273, 1276, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1328, 1329, 1330, 1331, 1332, 1343, 1348, 1365, 1366, 1367, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1821, 1822, 1834, 1835, 1837, 1838, 1970, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2050, 2053, 2060, 2061, 2064, 2066, 2069, 2075, 2078, 2079, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2136, 2286, 2293, 2297], "mai": [26, 30, 31, 32, 33, 35, 38, 39, 49, 50, 51, 52, 53, 74, 75, 76, 77, 84, 89, 90, 97, 98, 99, 100, 110, 111, 124, 125, 133, 136, 137, 138, 147, 148, 149, 150, 155, 156, 158, 239, 241, 242, 263, 266, 430, 456, 457, 458, 459, 460, 465, 566, 567, 568, 569, 570, 601, 604, 631, 634, 666, 669, 671, 674, 701, 702, 703, 705, 938, 958, 1248, 1249, 1251, 1407, 1438, 1440, 1704, 1791, 1794, 1834, 1835, 1837, 1838, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095, 2137, 2227, 2236], "ask": [26, 31, 32, 140, 154, 156, 171], "perfectli": [26, 2245, 2252], "happi": [26, 32, 171], "current": [26, 29, 31, 32, 33, 35, 38, 39, 54, 55, 84, 87, 88, 89, 90, 133, 135, 136, 137, 138, 139, 142, 145, 146, 148, 149, 150, 152, 154, 159, 170, 171, 325, 374, 375, 377, 378, 386, 424, 425, 426, 427, 428, 429, 430, 442, 443, 444, 445, 449, 451, 464, 1188, 1206, 1282, 1285, 1407, 1464, 1465, 1476, 1477, 1478, 1482, 1490, 1497, 1513, 1535, 1536, 1557, 1568, 1570, 1572, 1602, 1631, 1639, 1704, 1730, 1945, 1946, 1956, 1957, 2118, 2130, 2136, 2137, 2147, 2148, 2171, 2172, 2195, 2213, 2214, 2215, 2216, 2241, 2243, 2286, 2292, 2293, 2294, 2302], "us": [26, 27, 28, 30, 31, 33, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 170, 171, 191, 192, 193, 195, 233, 239, 279, 280, 281, 282, 283, 294, 295, 325, 333, 334, 335, 336, 368, 374, 375, 377, 378, 392, 395, 396, 400, 411, 412, 430, 432, 443, 444, 446, 450, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 486, 487, 526, 528, 636, 637, 638, 640, 641, 642, 643, 645, 656, 658, 660, 661, 662, 663, 665, 666, 668, 670, 671, 672, 673, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 731, 732, 751, 752, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 880, 881, 882, 883, 884, 885, 898, 900, 912, 913, 914, 915, 916, 917, 938, 952, 958, 959, 964, 967, 970, 982, 985, 997, 998, 999, 1000, 1001, 1032, 1033, 1034, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1141, 1142, 1143, 1147, 1159, 1162, 1183, 1184, 1186, 1188, 1196, 1199, 1206, 1248, 1249, 1250, 1251, 1252, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1278, 1279, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1333, 1334, 1343, 1347, 1348, 1349, 1365, 1367, 1376, 1377, 1378, 1379, 1380, 1407, 1425, 1464, 1465, 1480, 1481, 1498, 1500, 1503, 1505, 1533, 1549, 1550, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1602, 1604, 1607, 1608, 1610, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1640, 1684, 1687, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1725, 1726, 1727, 1728, 1729, 1806, 1810, 1834, 1835, 1837, 1838, 1844, 1845, 1848, 1860, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1921, 1923, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1955, 1956, 1957, 1959, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2003, 2004, 2005, 2008, 2009, 2010, 2012, 2013, 2016, 2023, 2024, 2028, 2034, 2038, 2060, 2071, 2072, 2074, 2117, 2118, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2142, 2144, 2147, 2148, 2149, 2154, 2157, 2159, 2167, 2170, 2171, 2172, 2173, 2174, 2175, 2177, 2178, 2218, 2219, 2227, 2230, 2231, 2235, 2236, 2241, 2242, 2245, 2248, 2249, 2250, 2251, 2252, 2256, 2257, 2258, 2259, 2272, 2273, 2277, 2278, 2286, 2294, 2302], "abund": 26, "better": [26, 28, 132, 148, 149, 151, 152, 153, 156, 157, 158, 2133], "ll": [26, 27, 32, 33, 140, 147, 157], "give": [26, 28, 32, 33, 60, 61, 108, 109, 132, 135, 137, 140, 141, 144, 150, 325, 412, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1860, 1896, 1899, 2130, 2134, 2147, 2148, 2149, 2154], "two": [26, 31, 32, 35, 38, 39, 45, 46, 53, 62, 63, 84, 89, 90, 101, 102, 103, 110, 111, 133, 134, 138, 140, 141, 148, 149, 150, 152, 153, 157, 159, 239, 241, 242, 260, 261, 284, 287, 307, 309, 311, 312, 314, 316, 325, 411, 423, 465, 531, 534, 731, 734, 798, 799, 801, 813, 816, 880, 886, 887, 902, 905, 928, 931, 938, 939, 948, 949, 950, 953, 955, 966, 1017, 1020, 1022, 1025, 1027, 1030, 1072, 1075, 1106, 1109, 1164, 1166, 1167, 1188, 1190, 1206, 1207, 1209, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1316, 1317, 1318, 1319, 1320, 1343, 1348, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1401, 1405, 1407, 1415, 1417, 1418, 1419, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1860, 1921, 1925, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2118, 2127, 2135, 2227, 2230, 2245, 2249, 2250], "exampl": [26, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 156, 157, 158, 159, 170, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 251, 253, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 317, 319, 320, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 854, 855, 856, 857, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2127, 2128, 2131, 2133, 2136, 2137, 2195, 2215, 2227, 2229, 2230, 2235, 2236, 2237, 2238, 2272, 2277, 2286, 2292, 2294, 2296, 2302], "streamlin": [26, 2133], "workflow": [26, 31, 33, 135, 138, 148, 157, 169, 2117, 2118, 2129, 2136, 2137], "save": [26, 28, 53, 87, 88, 101, 137, 143, 150, 171, 430, 432, 1258, 1259, 1260, 1261, 1343, 1347, 1407, 1491, 1555, 2129, 2171, 2172], "week": [26, 33, 2118], "let": [26, 28, 54, 55, 78, 79, 102, 103, 134, 136, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 1407, 1466, 1467, 1468, 1469, 1470, 2060, 2079, 2080, 2082, 2092, 2095, 2096, 2100, 2101, 2103, 2105, 2118, 2137], "sai": [26, 32, 146, 156], "deepmind": 26, "releas": [26, 31, 32, 33, 138, 148, 151, 152, 171, 2118, 2130, 2136], "awesom": 26, "paper": 26, "love": 26, "choic": [26, 32, 78, 79, 126, 127, 147, 148, 157, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2130], "perceiverio": 26, "happen": [26, 32, 33, 150, 157, 938, 964, 1365, 1367], "slew": 26, "rush": 26, "f": [26, 27, 29, 33, 53, 66, 67, 101, 114, 115, 132, 136, 137, 143, 154, 157, 789, 791, 997, 998, 999, 1000, 1001, 1134, 1152, 1188, 1196, 1288, 1295, 1296, 1298, 1407, 1497, 1513, 1860, 1896, 1897, 1898, 1899, 1900, 1945, 1949, 1953, 1954, 1955, 1963, 1964, 2126], "g": [26, 27, 31, 32, 53, 70, 71, 101, 118, 119, 132, 133, 136, 148, 150, 154, 171, 325, 332, 413, 416, 430, 433, 838, 839, 840, 841, 842, 843, 846, 912, 913, 915, 1289, 1290, 1292, 1305, 1306, 1307, 1308, 1310, 1945, 1949, 1953, 1955, 1963, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2075, 2078, 2083, 2086, 2087, 2090, 2096, 2100, 2117, 2126, 2142, 2144, 2149, 2153], "inevit": [26, 2131], "deviat": [26, 53, 68, 69, 70, 71, 78, 79, 101, 116, 117, 118, 119, 126, 127, 133, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 1965, 1966, 1967, 1968, 1969, 1970, 1981, 1982, 1983, 1984, 1985, 2060, 2092, 2093, 2094, 2095, 2149, 2154, 2173, 2174, 2245, 2250], "origin": [26, 31, 32, 33, 35, 38, 39, 53, 62, 63, 66, 67, 78, 79, 84, 87, 88, 89, 90, 101, 110, 111, 114, 115, 126, 127, 135, 137, 138, 146, 147, 148, 149, 154, 465, 501, 504, 1188, 1203, 1238, 1239, 1240, 1241, 1242, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1300, 1301, 1302, 1303, 1304, 1343, 1346, 1347, 1348, 1704, 1756, 1757, 1758, 1759, 1760, 1860, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 2060, 2066, 2067, 2068, 2069, 2070, 2130, 2131, 2195, 2215, 2216, 2245, 2252, 2286, 2293, 2297], "often": [26, 30, 133, 142, 143, 144, 145, 148, 150, 171, 2131, 2134, 2137], "erron": 26, "train": [26, 56, 57, 60, 61, 104, 105, 108, 109, 136, 139, 145, 157, 158, 159, 169, 170, 171, 917, 1134, 1142, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1679, 1680, 1681, 1682, 1683, 2117, 2118, 2128, 2129, 2134, 2136, 2137, 2142, 2144, 2145, 2149, 2154, 2157], "poor": 26, "converg": 26, "perform": [26, 45, 46, 53, 56, 57, 60, 61, 62, 63, 78, 79, 80, 81, 93, 94, 101, 102, 103, 108, 109, 110, 111, 126, 127, 128, 129, 133, 134, 135, 136, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 171, 189, 202, 205, 222, 225, 239, 274, 277, 279, 280, 281, 282, 283, 465, 781, 785, 898, 900, 907, 908, 909, 910, 911, 917, 938, 944, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1141, 1142, 1144, 1145, 1159, 1162, 1333, 1334, 1407, 1441, 1444, 1446, 1449, 1450, 1451, 1454, 1455, 1498, 1501, 1503, 1506, 1508, 1511, 1547, 1554, 1614, 1615, 1640, 1679, 1680, 1681, 1682, 1683, 1689, 1692, 1704, 1801, 1802, 1803, 1804, 1805, 1834, 1835, 1837, 1838, 1941, 1942, 1943, 1944, 1945, 1953, 1954, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2142, 2145, 2184, 2191], "issu": [26, 27, 30, 31, 133, 135, 137, 138, 140, 142, 148, 150, 151, 154, 158, 171, 2149, 2157], "etc": [26, 31, 32, 33, 45, 46, 53, 70, 71, 82, 83, 93, 94, 101, 102, 103, 118, 119, 130, 131, 133, 134, 136, 138, 140, 142, 144, 148, 149, 150, 151, 154, 156, 157, 171, 239, 251, 252, 253, 274, 277, 279, 280, 281, 282, 283, 294, 295, 297, 838, 839, 840, 841, 843, 846, 1032, 1034, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1309, 1310, 1471, 1473, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2117, 2128, 2130, 2136, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "publish": [26, 171], "manag": [26, 27, 147, 171, 1602, 1603, 2132, 2134], "get": [26, 27, 30, 31, 32, 35, 38, 39, 49, 50, 87, 88, 97, 98, 110, 111, 132, 137, 138, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 189, 325, 364, 366, 368, 369, 372, 380, 383, 430, 436, 437, 438, 439, 440, 442, 445, 450, 454, 461, 464, 1407, 1414, 1476, 1477, 1478, 1480, 1481, 1482, 1488, 1490, 1491, 1536, 1557, 1704, 1834, 1835, 1837, 1838, 1945, 1948, 2117, 2130, 2136, 2147, 2148, 2149, 2153, 2159, 2168], "work": [26, 30, 31, 32, 33, 53, 101, 132, 133, 134, 136, 137, 138, 139, 140, 142, 148, 149, 150, 151, 153, 154, 156, 158, 159, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1945, 1953, 1954, 1958, 1963, 1964, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137], "repositori": [26, 28, 29, 32, 33, 132, 133, 143], "pull": [26, 27, 28, 29, 31, 32, 133, 140, 151, 152, 171], "request": [26, 27, 31, 53, 140, 151, 152, 430, 447, 1289, 1290, 1292, 1305, 1310], "confus": [26, 138, 142, 147, 152, 2117], "do": [26, 31, 32, 33, 53, 54, 55, 87, 88, 101, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 171, 465, 726, 729, 1258, 1259, 1260, 1261, 1300, 1301, 1302, 1303, 1304, 1343, 1347, 1348, 1407, 1508, 1509, 1511, 1945, 1946, 1953, 1956, 1957, 1958, 1963, 2117, 2131, 2136, 2137], "don": [26, 31, 32, 33, 82, 83, 130, 131, 137, 138, 150, 158, 171], "expect": [26, 33, 53, 133, 138, 142, 149, 150, 171, 325, 412, 898, 900, 1134, 1141, 1407, 1414, 2118, 2147, 2148, 2149, 2154, 2157, 2171, 2172], "codebas": [26, 27, 132, 138, 147, 148, 150, 151, 153, 430, 453, 454, 2118], "total": [26, 27, 33, 53, 78, 79, 84, 87, 88, 89, 90, 101, 126, 127, 138, 139, 140, 142, 150, 152, 157, 158, 171, 430, 461, 875, 876, 877, 878, 879, 938, 943, 1997, 2013, 2016, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105], "hour": [26, 137], "spent": 26, "spin": 26, "off": [26, 32, 60, 61, 62, 63, 108, 109, 110, 111, 153, 1640, 1679, 1680, 1681, 1682, 1683, 1704, 1725, 1726, 1727, 1728, 1729, 1819, 1823, 2136, 2149, 2157], "test": [26, 30, 31, 51, 52, 53, 80, 81, 99, 100, 101, 128, 129, 132, 138, 140, 142, 143, 146, 148, 151, 171, 325, 387, 390, 401, 404, 465, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 917, 938, 961, 1040, 1041, 1111, 1112, 1113, 1114, 1115, 1134, 1142, 1311, 1312, 1313, 1314, 1315, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2184, 2185, 2190, 2191, 2200, 2213, 2214, 2215, 2216, 2218, 2219, 2241, 2244, 2273, 2274, 2275, 2276], "discuss": [26, 32, 33, 138, 139, 147, 148, 150, 152, 155, 156, 157, 171, 2118, 2126, 2131], "error": [26, 30, 32, 33, 51, 52, 53, 87, 88, 99, 100, 101, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 148, 150, 151, 156, 171, 189, 191, 194, 465, 571, 572, 573, 574, 575, 1258, 1259, 1260, 1261, 1343, 1347, 1704, 1791, 1794, 1806, 1810, 2060, 2075, 2078, 2083, 2086, 2130, 2171, 2172, 2175, 2179, 2245, 2252], "iter": [26, 40, 41, 42, 43, 44, 54, 55, 66, 67, 82, 83, 84, 87, 88, 89, 90, 102, 103, 114, 115, 130, 131, 136, 154, 157, 430, 455, 1188, 1204, 1205, 1206, 1270, 1271, 1282, 1285, 1407, 1408, 1409, 1410, 1411, 1412, 1533, 1860, 1871, 1872, 1873, 1874, 1875, 1891, 1892, 1893, 1894, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1945, 1946, 1947, 1948, 1949, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1961, 1962, 1964], "address": [26, 31, 33, 133, 134, 154, 1407, 1579, 1583, 2126, 2128, 2130, 2136], "sake": 26, "singl": [26, 31, 32, 33, 53, 70, 71, 87, 88, 99, 100, 118, 119, 133, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 171, 843, 846, 938, 955, 964, 1106, 1109, 1305, 1307, 1365, 1366, 1367, 1407, 1584, 1588, 1596, 1600, 1602, 1612, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2142, 2144, 2227, 2235, 2236], "multipl": [26, 33, 53, 62, 63, 68, 69, 78, 79, 80, 81, 87, 88, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 115, 116, 117, 126, 127, 128, 129, 134, 135, 136, 140, 142, 145, 147, 148, 149, 150, 152, 154, 171, 465, 481, 485, 511, 515, 526, 530, 531, 534, 535, 656, 659, 676, 680, 681, 684, 686, 688, 689, 690, 892, 895, 896, 918, 921, 938, 956, 1053, 1056, 1062, 1065, 1134, 1140, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1188, 1193, 1200, 1210, 1333, 1334, 1386, 1390, 1407, 1408, 1410, 1411, 1412, 1533, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1614, 1616, 1617, 1619, 1621, 1622, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1640, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1704, 1705, 1708, 1709, 1710, 1714, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1860, 1861, 1864, 1865, 1876, 1879, 1880, 1901, 1904, 1905, 1906, 1909, 1965, 1966, 1967, 1968, 1969, 1997, 1998, 2001, 2003, 2006, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2128, 2129, 2130, 2137, 2159, 2169], "line": [26, 32, 133, 134, 137, 140, 142, 143, 146, 150, 152, 155, 156, 157, 158, 169, 2118, 2133], "convert": [26, 31, 40, 41, 42, 43, 44, 45, 46, 51, 52, 91, 92, 99, 100, 134, 146, 148, 150, 154, 171, 172, 183, 185, 186, 239, 244, 245, 246, 289, 292, 325, 331, 332, 430, 433, 434, 435, 436, 450, 461, 464, 465, 556, 557, 558, 559, 560, 716, 717, 718, 719, 720, 808, 811, 813, 816, 818, 821, 1188, 1189, 1190, 1191, 1343, 1349, 1376, 1380, 1407, 1547, 1573, 1578, 1579, 1583, 1584, 1588, 1590, 1704, 1839, 1843, 1945, 1947, 1958, 1959, 2117, 2128, 2129, 2136, 2143, 2144, 2145, 2146, 2195, 2199, 2286, 2296], "directli": [26, 33, 133, 134, 136, 137, 138, 139, 141, 145, 146, 147, 148, 149, 151, 152, 154, 156, 158, 159, 170, 171, 1945, 1958, 2134, 2135, 2136, 2142, 2144], "graph": [26, 56, 57, 136, 145, 148, 152, 155, 171, 1614, 1615, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2117, 2126, 2130, 2133, 2142, 2144, 2171, 2172], "guarante": [26, 134, 171, 2023, 2024, 2028, 2034, 2038], "turn": [26, 32, 60, 61, 108, 109, 136, 140, 148, 150, 1640, 1679, 1680, 1681, 1682, 1683], "4": [26, 29, 31, 32, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 137, 140, 149, 150, 154, 156, 157, 158, 159, 189, 191, 192, 194, 197, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 220, 222, 225, 227, 229, 231, 239, 251, 253, 260, 261, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 296, 297, 298, 302, 305, 320, 324, 325, 338, 339, 340, 341, 342, 343, 345, 346, 348, 350, 351, 352, 364, 365, 366, 369, 370, 372, 380, 382, 396, 398, 399, 400, 401, 404, 413, 416, 417, 430, 437, 438, 439, 440, 441, 442, 449, 453, 456, 457, 458, 459, 465, 466, 468, 469, 470, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 511, 514, 515, 516, 518, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 541, 543, 544, 545, 546, 549, 551, 554, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 611, 613, 614, 615, 616, 618, 619, 620, 621, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 641, 642, 644, 646, 648, 649, 650, 656, 657, 658, 659, 660, 676, 679, 681, 683, 684, 685, 686, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 719, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 741, 743, 744, 745, 746, 749, 751, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 794, 795, 796, 797, 803, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 854, 856, 870, 872, 874, 875, 876, 877, 878, 879, 880, 881, 883, 886, 887, 892, 893, 894, 895, 896, 902, 905, 907, 908, 909, 910, 911, 912, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 959, 961, 963, 964, 967, 970, 972, 973, 974, 975, 976, 982, 985, 986, 987, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1053, 1055, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1111, 1112, 1113, 1114, 1115, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1143, 1144, 1145, 1148, 1149, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1330, 1331, 1332, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1395, 1407, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1471, 1474, 1479, 1492, 1495, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1561, 1562, 1568, 1570, 1574, 1577, 1589, 1601, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1632, 1633, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1769, 1771, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1844, 1855, 1858, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1911, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2048, 2050, 2053, 2055, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2106, 2107, 2108, 2110, 2112, 2113, 2115, 2118, 2130, 2136, 2137, 2149, 2157, 2175, 2176, 2177, 2178, 2180, 2195, 2215, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2239, 2241, 2242, 2256, 2257, 2259], "step": [26, 28, 29, 31, 32, 33, 53, 56, 57, 93, 94, 101, 104, 105, 134, 135, 136, 137, 138, 139, 140, 148, 150, 154, 157, 158, 159, 170, 239, 241, 242, 243, 274, 277, 1057, 1058, 1059, 1060, 1061, 1188, 1199, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1941, 1942, 1943, 1944, 2118, 2130, 2147, 2148, 2175, 2176, 2177, 2178, 2179, 2180], "take": [26, 27, 31, 32, 33, 53, 66, 67, 78, 79, 101, 114, 115, 133, 134, 136, 137, 138, 139, 140, 141, 147, 148, 149, 150, 152, 154, 156, 158, 159, 171, 239, 294, 297, 465, 536, 539, 789, 791, 828, 830, 832, 938, 961, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1188, 1196, 1208, 1222, 1224, 1226, 1295, 1296, 1298, 1311, 1314, 1350, 1354, 1704, 1751, 1754, 1771, 1774, 1860, 1896, 1897, 1898, 1899, 1900, 2061, 2062, 2118, 2127, 2128, 2136, 2142, 2145, 2149, 2154, 2227, 2230, 2272, 2277, 2278], "few": [26, 30, 31, 33, 136, 138, 139, 144, 145, 147, 150, 152, 154, 155, 156, 157, 158, 169, 2118, 2130, 2132], "second": [26, 32, 35, 38, 39, 51, 52, 53, 56, 57, 62, 63, 66, 67, 74, 75, 84, 89, 90, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 115, 122, 123, 133, 138, 140, 147, 148, 150, 156, 325, 411, 423, 465, 481, 482, 483, 484, 485, 501, 502, 503, 505, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 566, 567, 569, 591, 594, 596, 597, 601, 602, 604, 626, 627, 629, 631, 632, 634, 656, 657, 659, 661, 662, 664, 671, 672, 674, 676, 677, 679, 691, 692, 693, 694, 701, 702, 704, 711, 712, 714, 761, 762, 763, 764, 765, 798, 799, 800, 801, 802, 843, 844, 880, 886, 887, 928, 931, 938, 939, 948, 949, 950, 951, 952, 953, 955, 956, 957, 960, 965, 966, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1072, 1073, 1074, 1075, 1076, 1106, 1107, 1108, 1109, 1110, 1124, 1127, 1128, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1164, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1188, 1207, 1273, 1274, 1275, 1276, 1277, 1316, 1319, 1333, 1334, 1368, 1371, 1372, 1375, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1415, 1417, 1418, 1419, 1488, 1552, 1593, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1704, 1710, 1711, 1712, 1713, 1714, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1741, 1744, 1751, 1752, 1753, 1754, 1755, 1776, 1779, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1801, 1805, 1811, 1814, 1829, 1833, 1860, 1916, 1919, 1921, 1922, 1923, 1924, 1925, 1941, 1943, 1945, 1947, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2135, 2175, 2176, 2177], "automat": [26, 31, 32, 33, 132, 136, 137, 138, 143, 145, 150, 152, 153, 155, 158, 159, 2117, 2118, 2130, 2133, 2137], "convers": [26, 31, 41, 42, 43, 44, 51, 52, 92, 146, 153, 155, 159, 170, 171, 556, 557, 716, 717, 1407, 1547, 1554, 2117, 2118, 2129, 2136], "everyon": [26, 27, 33, 171], "regardless": [26, 27, 87, 88, 138, 156, 159], "wouldn": 26, "nice": [26, 150, 2130], "write": [26, 29, 30, 31, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 135, 137, 138, 140, 141, 145, 147, 148, 149, 151, 154, 156, 159, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 343, 346, 430, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 796, 797, 803, 804, 805, 806, 807, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 956, 957, 958, 961, 962, 963, 964, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1072, 1073, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1207, 1209, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1278, 1279, 1280, 1281, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 2003, 2005, 2007, 2008, 2009, 2011, 2018, 2019, 2020, 2021, 2022, 2023, 2039, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2064, 2066, 2069, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2137, 2218, 2219], "onc": [26, 31, 32, 33, 62, 63, 70, 71, 110, 111, 118, 119, 136, 137, 138, 139, 140, 148, 150, 152, 154, 157, 171, 430, 455, 1704, 1730, 1731, 1734, 1736, 1739, 1801, 1802, 1803, 1804, 1805, 1970, 1971, 1972, 1973, 1974, 1975], "know": [26, 33, 149, 150, 151, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2131], "among": [26, 87, 88, 137, 150, 152, 2130], "frantic": 26, "port": [26, 2195, 2211], "last": [26, 33, 35, 38, 39, 45, 46, 53, 60, 61, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 87, 88, 93, 94, 101, 108, 109, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 133, 135, 138, 140, 143, 147, 149, 150, 152, 154, 171, 239, 274, 277, 279, 280, 281, 282, 283, 294, 295, 430, 436, 907, 908, 909, 910, 911, 938, 944, 997, 998, 999, 1000, 1001, 1159, 1160, 1161, 1162, 1163, 1188, 1196, 1206, 1282, 1285, 1333, 1334, 1602, 1631, 1637, 1639, 1640, 1689, 1690, 1691, 1692, 1704, 1710, 1711, 1712, 1713, 1714, 1725, 1726, 1728, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1844, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1866, 1869, 1881, 1882, 1883, 1884, 1885, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1916, 1919, 1997, 1998, 2001, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2159, 2169, 2286, 2302], "lucid": 26, "honk": 26, "improv": [26, 33, 138, 144, 145, 152, 154, 2117, 2128, 2130, 2132, 2133], "understand": [26, 28, 29, 30, 31, 32, 33, 132, 133, 140, 141, 144, 149, 152, 153, 2126, 2136], "pattern": [26, 54, 55, 102, 103, 138, 141, 1407, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455], "hasn": 26, "changnow": [26, 29, 32, 133, 134, 135, 136, 137, 138, 143, 144, 146, 148, 149, 150, 151, 152, 156, 157, 159, 170, 171, 239, 260, 261, 302, 305, 320, 324, 2130, 2159, 2170, 2171, 2172], "spend": [26, 2130], "torchvis": 26, "probabl": [26, 53, 60, 61, 70, 71, 101, 108, 109, 118, 119, 150, 838, 839, 840, 841, 842, 917, 1134, 1142, 1258, 1259, 1260, 1261, 1305, 1306, 1343, 1347, 1640, 1679, 1680, 1681, 1682, 1683, 1970, 1971, 1972, 1973, 1974, 1975, 2149, 2157, 2159, 2167, 2245, 2252], "sonnet": 26, "about": [26, 30, 31, 32, 33, 47, 48, 95, 96, 133, 137, 138, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 171, 325, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 2131, 2132, 2135], "next": [26, 28, 31, 32, 33, 53, 101, 135, 140, 141, 146, 148, 151, 155, 156, 157, 325, 369, 372, 938, 960, 965, 1273, 1274, 1275, 1276, 1277, 1396, 1397, 1398, 1399, 1400, 2118, 2130, 2132, 2149, 2150, 2153, 2154, 2157, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180], "everyth": [26, 31, 33, 137, 140, 148, 149, 150, 151, 155, 171], "zero": [26, 35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 56, 57, 60, 61, 62, 63, 66, 67, 72, 73, 78, 79, 80, 81, 84, 89, 90, 93, 94, 95, 96, 99, 100, 101, 104, 105, 108, 109, 110, 111, 118, 119, 120, 121, 126, 127, 128, 129, 134, 136, 138, 139, 140, 144, 146, 149, 154, 157, 158, 189, 197, 200, 207, 210, 212, 215, 239, 251, 253, 254, 260, 261, 284, 285, 287, 294, 295, 296, 297, 298, 302, 305, 307, 309, 311, 312, 314, 316, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 465, 471, 474, 476, 479, 481, 484, 486, 487, 488, 489, 490, 491, 494, 496, 499, 501, 502, 504, 506, 509, 521, 524, 531, 534, 546, 547, 549, 551, 552, 553, 554, 555, 556, 559, 581, 584, 586, 589, 606, 609, 611, 612, 614, 616, 617, 619, 621, 624, 646, 649, 666, 669, 671, 674, 681, 682, 684, 686, 687, 689, 696, 697, 699, 701, 704, 706, 707, 709, 711, 712, 714, 716, 719, 726, 729, 731, 732, 734, 741, 744, 746, 747, 748, 750, 751, 754, 756, 759, 766, 770, 771, 775, 776, 780, 781, 785, 789, 792, 865, 866, 867, 868, 869, 875, 876, 877, 878, 879, 880, 881, 892, 893, 894, 895, 896, 898, 900, 907, 908, 909, 910, 911, 917, 938, 942, 943, 944, 946, 958, 959, 961, 962, 963, 965, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 1057, 1058, 1059, 1060, 1061, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1134, 1140, 1141, 1142, 1144, 1145, 1188, 1199, 1203, 1206, 1232, 1236, 1238, 1239, 1240, 1241, 1242, 1248, 1251, 1258, 1262, 1263, 1266, 1278, 1279, 1282, 1285, 1311, 1314, 1323, 1326, 1328, 1331, 1355, 1359, 1396, 1397, 1398, 1399, 1400, 1407, 1431, 1434, 1441, 1444, 1533, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1632, 1636, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1699, 1700, 1702, 1704, 1705, 1708, 1715, 1718, 1736, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1781, 1782, 1783, 1784, 1785, 1791, 1794, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1887, 1889, 1901, 1904, 1936, 1940, 1965, 1966, 1969, 1970, 1976, 1978, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2008, 2011, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2129, 2149, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2175, 2176, 2177, 2227, 2230], "need": [26, 28, 29, 31, 32, 33, 53, 54, 55, 66, 67, 101, 102, 103, 114, 115, 133, 134, 136, 137, 138, 140, 141, 142, 145, 147, 148, 149, 151, 152, 154, 156, 157, 170, 171, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1141, 1144, 1145, 1258, 1259, 1260, 1261, 1343, 1347, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1508, 1510, 1512, 1704, 1730, 1860, 1861, 1864, 1876, 1877, 1878, 1880, 1945, 1957, 2126, 2130, 2131, 2132, 2136, 2142, 2145, 2241, 2244], "said": [26, 2245, 2252], "high": [26, 31, 60, 61, 70, 71, 108, 109, 118, 119, 148, 152, 157, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1970, 1976, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 2117, 2126, 2127, 2128, 2129, 2130, 2134, 2136, 2137, 2245, 2249], "level": [26, 27, 31, 33, 102, 103, 136, 142, 145, 148, 152, 153, 154, 157, 158, 159, 171, 1415, 1417, 1419, 2117, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2134, 2135, 2136, 2137, 2147, 2148], "modul": [26, 29, 32, 82, 83, 84, 87, 88, 89, 90, 130, 131, 134, 135, 142, 143, 145, 147, 148, 150, 154, 155, 157, 159, 170, 171, 848, 889, 1134, 1138, 1139, 1151, 1287, 1407, 1534, 2118, 2130, 2131, 2133, 2139, 2140, 2141, 2142, 2143, 2145, 2146, 2147, 2148, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2173, 2174, 2181, 2182, 2195, 2216, 2282, 2284, 2286, 2287, 2292, 2294, 2297], "optim": [26, 56, 57, 104, 105, 147, 155, 157, 159, 170, 1407, 1414, 1602, 1614, 1615, 1627, 1628, 1629, 1630, 1941, 1942, 1943, 1944, 2118, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2137, 2149, 2157, 2176, 2177, 2178, 2180], "trainer": [26, 169, 171, 2118, 2137], "statu": [26, 31, 137], "quo": 26, "kera": [26, 2136, 2142, 2143, 2144], "dopamin": 26, "ignit": 26, "catalyst": 26, "lightn": 26, "fastai": 26, "haiku": [26, 159, 2130, 2142, 2143], "flax": [26, 159, 171, 2130], "trax": [26, 159], "objax": [26, 159], "idea": [26, 28, 148, 151, 155, 170, 2129], "fulli": [26, 53, 101, 134, 138, 144, 147, 152, 154, 155, 156, 157, 158, 159, 171, 1258, 1259, 1260, 1261, 1343, 1347, 2128, 2129, 2130, 2136, 2137, 2159, 2169, 2170], "offer": [26, 148, 158, 2130, 2136, 2137], "strongli": [27, 32, 2136, 2137], "welcom": [27, 32, 33], "absolut": [27, 32, 35, 38, 39, 51, 52, 53, 62, 63, 87, 88, 99, 100, 101, 110, 111, 152, 465, 466, 467, 468, 469, 470, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1704, 1756, 1759, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1791, 1792, 1793, 1794, 1795, 2184, 2185, 2191, 2195, 2213, 2214, 2215, 2216, 2227, 2231, 2235, 2236, 2245, 2246], "skill": [27, 2132], "whether": [27, 31, 32, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 66, 67, 70, 71, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 140, 144, 147, 148, 150, 151, 152, 189, 191, 192, 193, 194, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 244, 245, 246, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 325, 333, 334, 335, 336, 337, 338, 340, 342, 348, 350, 352, 355, 356, 358, 359, 360, 362, 363, 364, 366, 374, 375, 377, 378, 380, 382, 384, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 411, 413, 415, 417, 429, 430, 436, 437, 438, 439, 440, 443, 444, 446, 447, 450, 451, 455, 456, 457, 459, 462, 464, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 799, 800, 801, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 890, 891, 898, 900, 907, 911, 917, 918, 922, 938, 939, 955, 958, 982, 984, 986, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1092, 1093, 1094, 1095, 1096, 1104, 1106, 1107, 1108, 1109, 1110, 1129, 1131, 1133, 1134, 1141, 1142, 1183, 1185, 1187, 1248, 1249, 1250, 1251, 1252, 1273, 1275, 1277, 1278, 1279, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1473, 1475, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1537, 1539, 1541, 1542, 1544, 1546, 1547, 1548, 1551, 1553, 1554, 1556, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1592, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1707, 1709, 1710, 1712, 1714, 1731, 1734, 1736, 1738, 1739, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1954, 1956, 1957, 1958, 1959, 1963, 1964, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2106, 2107, 2109, 2110, 2111, 2112, 2114, 2115, 2116, 2142, 2143, 2144, 2146, 2159, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2184, 2187, 2188, 2189, 2195, 2214, 2215, 2216, 2245, 2252], "veteran": 27, "beginn": [27, 2130], "aspect": [27, 157, 2118, 2130], "guid": [27, 31, 32, 33, 143, 148, 2118, 2136, 2142, 2144], "through": [27, 30, 31, 33, 53, 101, 132, 135, 136, 137, 140, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 158, 159, 170, 465, 501, 504, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1343, 1346, 1347, 1945, 1949, 1955, 2128, 2130, 2131, 2132, 2171, 2172], "journei": [27, 2118], "inclus": [27, 53, 101, 135, 147, 152, 239, 241, 242, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1970, 1976, 1979], "big": [27, 171, 2130, 2149, 2153], "team": [27, 31, 32, 33, 148, 2132], "board": 27, "contributor": [27, 32, 33, 148, 153, 2118, 2130], "split": [27, 33, 53, 66, 67, 87, 88, 101, 114, 115, 137, 153, 154, 171, 430, 453, 454, 455, 918, 919, 920, 921, 922, 1062, 1063, 1064, 1065, 1066, 1188, 1193, 1200, 1210, 1386, 1387, 1388, 1389, 1390, 1407, 1441, 1444, 1533, 1640, 1641, 1672, 1673, 1694, 1697, 1860, 1910, 1921, 1923, 2118, 2137, 2195, 2211], "section": [27, 28, 30, 31, 33, 36, 37, 53, 101, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 197, 198, 918, 919, 920, 921, 922, 1062, 1063, 1064, 1065, 1066, 1188, 1193, 1200, 1210, 1386, 1387, 1388, 1389, 1390, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2126, 2133, 2136], "below": [27, 29, 31, 32, 45, 46, 62, 63, 110, 111, 126, 127, 132, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 239, 307, 309, 311, 312, 314, 316, 465, 621, 624, 880, 886, 887, 938, 961, 1311, 1314, 1368, 1371, 1372, 1375, 1704, 1725, 1726, 1727, 1728, 1729, 1819, 1823, 2101, 2104, 2118, 2126, 2128, 2133, 2135], "best": [27, 30, 31, 32, 33, 132, 137, 138, 143, 150, 151, 1407, 1533, 2133, 2134], "go": [27, 28, 31, 32, 33, 132, 135, 137, 138, 140, 142, 148, 149, 150, 151, 153, 157, 171, 1945, 1946, 1947, 1956, 1957, 1958, 2126, 2130, 2131, 2135, 2137], "start": [27, 28, 29, 31, 32, 33, 45, 46, 87, 88, 93, 94, 132, 137, 138, 140, 141, 144, 148, 150, 152, 153, 154, 156, 157, 158, 170, 171, 239, 241, 242, 243, 274, 277, 278, 279, 280, 281, 282, 283, 430, 432, 997, 1000, 1188, 1196, 2130, 2136, 2147, 2148, 2245, 2252], "finish": [27, 31, 32, 132, 2118], "dive": [27, 30, 31, 33, 133, 136, 138, 149, 153, 156, 157, 171, 2118, 2136], "right": [27, 32, 33, 62, 63, 84, 87, 88, 89, 90, 110, 111, 132, 133, 140, 142, 152, 157, 465, 521, 524, 531, 534, 938, 953, 1002, 1005, 1072, 1075, 1097, 1134, 1146, 1188, 1197, 1407, 1441, 1444, 1704, 1801, 1802, 1803, 1804, 1805, 1824, 1825, 1826, 1827, 1828, 2044, 2050, 2053], "environ": [27, 28, 29, 33, 170, 2130, 2132], "basic": [27, 29, 31, 140, 150], "fork": [27, 133, 137, 1407, 1534], "doc": [27, 30, 31, 140, 141, 144, 150, 154, 157, 158, 465, 731, 734, 880, 886, 887, 1368, 1371, 1372, 1375, 2118], "document": [27, 30, 33, 66, 67, 137, 138, 140, 142, 148, 149, 150, 157, 159, 1407, 1601, 1916, 1917], "local": [27, 28, 29, 32, 133, 145, 149, 150], "task": [27, 33, 148, 149, 170, 1941, 1942, 1943, 1944, 2118, 2130, 2136, 2137], "help": [27, 28, 31, 32, 134, 135, 136, 137, 138, 140, 146, 148, 150, 151, 152, 156, 157, 158, 169, 1407, 1413, 2060, 2096, 2100, 2117, 2118, 2126, 2130, 2132, 2136, 2149, 2157], "appli": [27, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 156, 157, 158, 159, 169, 171, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 244, 245, 251, 252, 255, 256, 263, 264, 269, 270, 271, 273, 279, 280, 281, 283, 284, 285, 289, 290, 294, 295, 296, 298, 302, 303, 304, 306, 307, 309, 312, 314, 320, 321, 322, 323, 325, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 380, 381, 382, 384, 392, 393, 395, 396, 398, 400, 413, 414, 415, 416, 417, 437, 438, 439, 441, 456, 457, 458, 459, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 789, 791, 792, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 835, 837, 838, 842, 843, 844, 845, 847, 849, 851, 853, 854, 855, 856, 857, 859, 860, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 879, 892, 893, 894, 895, 896, 902, 903, 904, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 923, 924, 925, 927, 928, 930, 932, 933, 934, 935, 937, 938, 942, 972, 973, 974, 976, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1133, 1134, 1140, 1147, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1185, 1187, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1273, 1274, 1275, 1277, 1278, 1279, 1282, 1283, 1284, 1286, 1289, 1291, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1343, 1347, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1463, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1483, 1484, 1485, 1487, 1492, 1493, 1494, 1496, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1537, 1538, 1539, 1541, 1542, 1544, 1546, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1596, 1597, 1598, 1599, 1602, 1604, 1605, 1606, 1608, 1609, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1720, 1721, 1722, 1725, 1726, 1727, 1729, 1736, 1737, 1738, 1740, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1802, 1803, 1804, 1819, 1820, 1822, 1824, 1825, 1834, 1835, 1837, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1945, 1952, 1955, 1958, 1959, 1965, 1966, 1967, 1968, 1969, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2045, 2046, 2047, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2075, 2076, 2077, 2079, 2080, 2081, 2083, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2112, 2113, 2114, 2116, 2117, 2118, 2131, 2139, 2140, 2141, 2173, 2174, 2245, 2246, 2256, 2257, 2258, 2259], "resourc": [27, 31, 137], "video": [27, 32, 33, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 2128], "contribut": [28, 30, 31, 32, 33, 148, 154, 2134], "toward": [28, 32, 53, 66, 67, 114, 115, 151, 154, 465, 781, 785, 938, 946, 960, 992, 993, 995, 1188, 1207, 1273, 1276, 1316, 1319, 1860, 1901, 1902, 1903, 1904, 1905, 2126, 2130], "requir": [28, 29, 31, 32, 53, 101, 134, 137, 138, 139, 140, 141, 142, 144, 146, 148, 149, 150, 151, 152, 154, 156, 171, 465, 751, 754, 938, 958, 1188, 1206, 1248, 1249, 1250, 1251, 1252, 1282, 1285, 1704, 1730, 1731, 1734, 1736, 1739, 1860, 1916, 1919, 2130, 2136, 2142, 2146, 2227, 2231, 2272, 2273, 2274, 2275, 2276], "slightli": [28, 136, 148, 154, 158], "more": [28, 30, 31, 33, 53, 62, 63, 66, 67, 74, 75, 101, 110, 111, 114, 115, 122, 123, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 170, 171, 239, 241, 242, 325, 338, 341, 465, 581, 584, 646, 649, 793, 796, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 1164, 1165, 1188, 1189, 1190, 1191, 1207, 1316, 1317, 1318, 1319, 1320, 1704, 1725, 1727, 1729, 1751, 1752, 1754, 1781, 1782, 1791, 1794, 1801, 1802, 1803, 1804, 1834, 1835, 1837, 1838, 1860, 1881, 1882, 1883, 1884, 1885, 1916, 1917, 1918, 1920, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2118, 2128, 2129, 2130, 2131, 2132, 2133, 2136, 2137, 2142, 2144, 2245, 2248, 2252], "complex": [28, 31, 53, 62, 63, 95, 96, 101, 110, 111, 138, 140, 148, 150, 152, 157, 158, 159, 171, 325, 355, 356, 392, 393, 394, 395, 418, 424, 465, 621, 624, 793, 796, 803, 804, 805, 806, 807, 898, 900, 928, 931, 933, 936, 938, 940, 954, 961, 1087, 1088, 1089, 1090, 1091, 1134, 1141, 1164, 1165, 1167, 1168, 1311, 1312, 1313, 1314, 1315, 1407, 1558, 1561, 1704, 1730, 1731, 1734, 1736, 1739, 1801, 1802, 1803, 1804, 1805, 2117, 2126, 2128, 2130, 2132, 2136, 2137, 2241, 2244], "setup": [28, 32, 33, 137], "alon": [28, 150, 430, 450, 464], "instanc": [28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 150, 157, 158, 159, 172, 183, 185, 186, 191, 192, 193, 197, 198, 199, 202, 203, 204, 207, 208, 209, 212, 213, 214, 217, 218, 219, 222, 223, 224, 227, 228, 229, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 274, 277, 279, 280, 281, 282, 284, 285, 287, 289, 290, 294, 295, 296, 299, 300, 302, 303, 304, 305, 307, 309, 311, 312, 314, 316, 317, 319, 320, 322, 323, 324, 325, 333, 334, 335, 336, 338, 339, 340, 343, 344, 345, 348, 349, 350, 351, 369, 370, 371, 380, 381, 382, 387, 390, 392, 393, 396, 397, 398, 401, 404, 413, 414, 415, 430, 431, 437, 438, 439, 452, 456, 457, 458, 459, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 576, 577, 578, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 631, 632, 633, 634, 636, 637, 638, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 686, 687, 688, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 721, 722, 723, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774, 775, 776, 778, 779, 780, 781, 783, 784, 793, 794, 795, 798, 799, 800, 803, 804, 805, 808, 809, 810, 813, 814, 815, 818, 819, 820, 823, 824, 825, 826, 828, 829, 830, 831, 833, 836, 843, 844, 845, 859, 860, 865, 866, 867, 870, 871, 872, 875, 876, 877, 880, 881, 886, 887, 892, 893, 894, 895, 902, 903, 904, 907, 908, 909, 910, 912, 913, 914, 917, 918, 919, 920, 923, 924, 925, 928, 930, 931, 933, 934, 935, 938, 944, 961, 972, 973, 974, 982, 983, 984, 985, 987, 988, 989, 992, 993, 994, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1012, 1013, 1014, 1017, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1037, 1049, 1050, 1053, 1054, 1057, 1058, 1059, 1062, 1063, 1064, 1067, 1068, 1069, 1072, 1073, 1074, 1077, 1078, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1106, 1107, 1108, 1111, 1112, 1113, 1115, 1116, 1117, 1120, 1121, 1124, 1125, 1126, 1129, 1131, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1154, 1155, 1156, 1159, 1160, 1161, 1164, 1167, 1171, 1172, 1173, 1176, 1177, 1178, 1183, 1185, 1188, 1206, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1227, 1230, 1232, 1233, 1234, 1238, 1239, 1240, 1243, 1244, 1245, 1248, 1249, 1250, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1273, 1274, 1275, 1278, 1279, 1282, 1283, 1284, 1285, 1289, 1291, 1300, 1301, 1302, 1311, 1312, 1313, 1314, 1316, 1317, 1323, 1324, 1325, 1328, 1329, 1330, 1343, 1347, 1350, 1352, 1353, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1366, 1368, 1371, 1372, 1375, 1376, 1378, 1379, 1382, 1384, 1386, 1388, 1389, 1391, 1393, 1394, 1396, 1398, 1399, 1401, 1403, 1404, 1407, 1408, 1409, 1410, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1426, 1427, 1428, 1431, 1432, 1433, 1435, 1438, 1439, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1483, 1484, 1485, 1486, 1487, 1492, 1493, 1495, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1537, 1538, 1539, 1542, 1544, 1553, 1558, 1559, 1560, 1563, 1564, 1565, 1568, 1569, 1570, 1571, 1572, 1574, 1576, 1579, 1581, 1582, 1584, 1586, 1587, 1588, 1596, 1598, 1599, 1602, 1604, 1605, 1606, 1608, 1609, 1614, 1615, 1616, 1619, 1620, 1623, 1624, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1640, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1796, 1799, 1801, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1821, 1822, 1824, 1826, 1827, 1829, 1833, 1834, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1855, 1856, 1857, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1965, 1966, 1967, 1968, 1969, 1971, 1972, 1973, 1976, 1977, 1978, 1981, 1982, 1983, 1986, 1987, 1988, 1992, 1993, 1994, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2066, 2067, 2068, 2071, 2072, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2112, 2113, 2114, 2115, 2117, 2131, 2142, 2143, 2145, 2146, 2272, 2276], "mech": 28, "vision": [28, 169, 2118, 2126, 2136], "demo": [28, 170, 2118], "util": [28, 81, 129, 139, 142, 147, 151, 430, 442, 2107, 2110, 2112, 2115, 2128, 2136, 2137, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305], "thu": [28, 31, 53, 101, 137, 142, 148, 465, 531, 534, 711, 714, 726, 729, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1704, 1730, 1731, 1734], "relat": [28, 30, 32, 33, 142, 143, 148, 150, 151, 152, 170, 430, 431, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137], "folder": [28, 29, 32, 33, 133, 137, 145, 148, 150, 151], "To": [28, 29, 32, 133, 134, 136, 138, 140, 142, 143, 145, 148, 149, 150, 151, 157, 158, 159, 1407, 1552, 2118, 2142, 2144, 2149, 2153], "grasp": [28, 148], "directori": [28, 29, 31, 32, 33, 137, 148, 150, 430, 432, 1407, 1491, 1555], "tree": [28, 29, 138, 2282, 2283], "place": [28, 30, 33, 40, 42, 44, 45, 46, 51, 52, 53, 54, 55, 62, 63, 66, 67, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 114, 115, 132, 133, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 239, 241, 242, 244, 245, 246, 254, 255, 256, 258, 260, 261, 263, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 287, 289, 290, 292, 299, 300, 302, 303, 304, 305, 306, 307, 311, 312, 316, 317, 319, 320, 321, 322, 323, 324, 325, 348, 351, 387, 390, 401, 404, 430, 456, 457, 459, 460, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 798, 799, 800, 801, 802, 823, 826, 828, 831, 833, 836, 838, 842, 843, 845, 847, 880, 881, 886, 887, 892, 895, 907, 910, 917, 928, 931, 938, 939, 944, 955, 958, 959, 960, 961, 965, 966, 982, 983, 984, 985, 986, 997, 998, 999, 1000, 1001, 1072, 1074, 1076, 1106, 1107, 1108, 1109, 1110, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1196, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1248, 1249, 1250, 1251, 1252, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1282, 1285, 1311, 1314, 1368, 1371, 1372, 1375, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1568, 1569, 1570, 1571, 1572, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2117, 2132, 2175, 2176, 2177, 2178, 2179, 2180], "dir": [28, 157], "clone": [28, 29, 33], "mutual": [28, 136, 145], "git": [28, 30, 32, 33, 133, 137, 150], "http": [28, 32, 51, 52, 99, 100, 104, 105, 133, 137, 138, 141, 325, 348, 351, 465, 606, 609, 671, 672, 673, 691, 694, 731, 734, 880, 886, 887, 928, 931, 1164, 1167, 1368, 1371, 1372, 1375, 1602, 1604, 1607, 1608, 1611, 1704, 1736, 1737, 1791, 1794, 1839, 1843, 1860, 1936, 1940, 2060, 2092, 2095, 2142, 2144], "com": [28, 32, 133, 137, 138], "unifyai": [28, 29, 32, 33], "venv": [28, 142], "python3": [28, 29, 32, 33, 142], "m": [28, 29, 32, 33, 35, 38, 39, 45, 46, 53, 62, 63, 70, 71, 99, 100, 101, 110, 111, 118, 119, 132, 137, 154, 239, 284, 287, 307, 309, 311, 312, 314, 316, 661, 663, 665, 818, 819, 820, 821, 822, 838, 839, 840, 841, 842, 843, 846, 880, 886, 887, 898, 900, 912, 913, 915, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1134, 1141, 1188, 1191, 1197, 1198, 1207, 1289, 1290, 1292, 1305, 1306, 1307, 1308, 1310, 1316, 1317, 1318, 1319, 1320, 1368, 1371, 1372, 1375, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1945, 1954, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990], "ivy_dev": [28, 29, 32, 33], "activ": [28, 29, 32, 33, 37, 53, 54, 55, 82, 83, 86, 101, 130, 131, 151, 158, 190, 191, 192, 194, 196, 197, 198, 200, 202, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 225, 227, 228, 230, 790, 791, 792, 1355, 1356, 1357, 1358, 1359, 1568, 1570, 2118, 2130, 2133, 2140, 2141, 2149, 2153, 2154], "window": [28, 29, 33, 53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 880, 882, 883, 884, 885, 888, 898, 900, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1135, 1136, 1137, 1141, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1382, 1383, 1384, 1385, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2135, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "script": [28, 29, 32, 33, 137, 140, 154, 171, 2130], "bat": [28, 29, 32, 33], "mac": [28, 29, 32, 33], "linux": [28, 29, 32, 33, 2133, 2135], "bin": [28, 29, 32, 33, 133, 136], "instal": [28, 29, 32, 33, 135, 143, 170, 2118], "packag": [28, 29, 32, 137, 142, 143, 148, 171, 2130, 2132, 2304, 2305], "edit": [28, 31, 32, 33], "mode": [28, 32, 33, 53, 62, 63, 87, 88, 101, 110, 111, 136, 140, 152, 171, 430, 455, 465, 481, 484, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1206, 1282, 1283, 1284, 1285, 1286, 1407, 1482, 1547, 1548, 1551, 1553, 1554, 1590, 1591, 1592, 1594, 1595, 1704, 1786, 1787, 1788, 1789, 1790, 2130, 2133, 2142, 2144], "cd": [28, 29, 32, 33], "pip": [28, 32, 170, 2118], "repeat": [28, 33, 54, 55, 66, 67, 102, 103, 114, 115, 134, 135, 140, 141, 143, 150, 1407, 1451, 1452, 1453, 1454, 1455, 1860, 1895, 1926, 1927, 1928, 1929, 1930], "note": [28, 31, 32, 33, 53, 62, 63, 66, 67, 101, 110, 111, 114, 115, 134, 138, 140, 141, 148, 149, 150, 151, 325, 333, 334, 335, 337, 412, 465, 646, 649, 726, 729, 731, 734, 880, 881, 886, 887, 898, 900, 938, 952, 982, 985, 997, 998, 999, 1000, 1001, 1042, 1043, 1045, 1134, 1141, 1188, 1196, 1368, 1371, 1372, 1375, 1407, 1425, 1704, 1730, 1731, 1734, 1791, 1794, 1801, 1802, 1803, 1804, 1805, 1860, 1896, 1897, 1898, 1899, 1900, 1916, 1919, 2023, 2024, 2026, 2029, 2033, 2060, 2079, 2082, 2142, 2144], "link": [28, 31, 32, 33, 137, 138, 148, 150, 2126, 2128], "reflect": [28, 33, 134, 150, 1188, 1206, 1282, 1285], "immedi": [28, 32, 152, 2118], "ivy_robot": [28, 170], "docker": [28, 30], "desktop": [28, 32], "imag": [28, 29, 32, 53, 59, 60, 61, 101, 107, 108, 109, 151, 154, 155, 157, 159, 170, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 938, 1091, 1098, 1099, 1100, 1101, 1102, 1134, 1135, 1136, 1147, 1148, 1149, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1407, 1441, 1444, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2118, 2130], "my": [28, 137, 151], "mount": [28, 33], "run": [28, 29, 31, 32, 53, 56, 57, 101, 104, 105, 132, 134, 135, 137, 140, 142, 143, 144, 148, 149, 154, 155, 156, 157, 158, 159, 170, 171, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1941, 1942, 1943, 1944, 2128, 2130, 2131, 2132, 2133, 2135, 2136, 2137, 2142, 2144, 2145, 2159, 2170, 2171, 2172, 2195, 2207, 2218, 2219], "rm": [28, 33], "v": [28, 32, 33, 60, 61, 76, 77, 93, 94, 108, 109, 124, 125, 154, 157, 158, 159, 279, 281, 928, 931, 1164, 1167, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 2044, 2050, 2051, 2052, 2053, 2054, 2118, 2147, 2148, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2179, 2181, 2182, 2195, 2216], "pwd": 28, "volum": [28, 53, 60, 61, 101, 108, 109, 833, 834, 835, 836, 837, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1137, 1141, 1144, 1145, 1150, 1227, 1228, 1229, 1230, 1231, 1640, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671], "rebuild": [28, 84, 87, 88, 89, 90], "after": [28, 29, 31, 32, 33, 53, 56, 57, 60, 61, 68, 69, 87, 88, 104, 105, 108, 109, 116, 117, 133, 137, 138, 140, 142, 144, 148, 150, 153, 325, 423, 430, 431, 432, 465, 751, 754, 898, 900, 938, 960, 1134, 1141, 1188, 1206, 1273, 1276, 1282, 1285, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1945, 1957, 1965, 1966, 1967, 1968, 1969, 2130, 2175, 2176, 2177, 2178, 2179, 2180, 2286, 2302], "everi": [28, 29, 31, 33, 45, 46, 53, 54, 55, 101, 102, 103, 133, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 158, 239, 268, 269, 270, 272, 938, 952, 1042, 1043, 1044, 1045, 1407, 1408, 1409, 1410, 1411, 1412, 2130, 2142, 2145], "id": [28, 30, 32, 134, 136, 143, 430, 436, 2171, 2172], "pycharm": 28, "configur": [28, 29, 32, 33, 87, 88, 137, 138, 146, 430, 454, 1945, 1959], "part": [28, 33, 45, 46, 53, 56, 57, 101, 133, 145, 148, 150, 151, 152, 154, 155, 159, 170, 171, 239, 307, 309, 311, 312, 314, 316, 465, 621, 624, 880, 886, 887, 938, 954, 961, 1087, 1088, 1089, 1090, 1091, 1188, 1206, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1311, 1312, 1313, 1314, 1315, 1343, 1348, 1368, 1371, 1372, 1375, 1614, 1615, 1704, 1736, 1739, 2128, 2130, 2135, 2136, 2137, 2171, 2172, 2195, 2199], "vscode": [28, 32], "found": [28, 31, 32, 33, 62, 63, 66, 67, 74, 75, 84, 87, 88, 89, 90, 110, 111, 114, 115, 122, 123, 134, 135, 136, 138, 141, 143, 146, 147, 148, 152, 430, 445, 1725, 1727, 1729, 1751, 1752, 1916, 1917, 1918, 1920, 1945, 1957, 2024, 2025, 2026, 2027, 2132, 2147, 2148], "devcontain": [28, 32], "extens": [28, 30, 32, 33, 51, 52, 62, 63, 99, 100, 141, 150, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 369, 372, 380, 383, 413, 416, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 1406, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1860, 1866, 1869, 1876, 1879, 1881, 1884, 1886, 1889, 1896, 1899, 1901, 1904, 1911, 1914, 1916, 1919, 1936, 1940, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2127, 2130, 2137], "remot": [28, 32, 133], "codespac": 28, "config": [28, 32, 87, 88, 133, 137, 157, 1945, 1959, 2131], "json": [28, 32, 87, 88, 157], "good": [28, 29, 30, 31, 32, 33, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 158], "feel": [28, 29, 31, 32, 33, 35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "free": [28, 29, 30, 31, 33, 35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 170, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "channel": [28, 29, 31, 32, 33, 35, 53, 54, 55, 60, 61, 84, 101, 102, 103, 108, 109, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 189, 232, 233, 239, 325, 430, 465, 917, 1098, 1099, 1100, 1101, 1102, 1134, 1142, 1147, 1406, 1407, 1441, 1444, 1459, 1460, 1461, 1462, 1463, 1602, 1640, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1677, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2171, 2173, 2175, 2181], "pre": [28, 31, 150, 159, 171, 2130], "commit": [28, 31, 133, 140, 150], "_": [28, 29, 32, 51, 52, 99, 100, 104, 105, 136, 141, 143, 147, 150, 157, 325, 348, 351, 465, 581, 582, 606, 609, 671, 672, 673, 731, 734, 928, 931, 1164, 1167, 1407, 1441, 1444, 1602, 1604, 1607, 1608, 1611, 1704, 1736, 1737, 1791, 1794, 1806, 1810, 1839, 1843, 1860, 1936, 1940, 1945, 1953, 2060, 2092, 2095], "builder": [29, 169, 171, 2117, 2118], "dockerfil": [29, 32], "command": [29, 32, 133, 137, 146, 2118], "maco": [29, 2135], "latest": [29, 31, 32, 33, 51, 52, 99, 100, 135, 137, 138, 141, 151, 171, 325, 348, 351, 465, 606, 609, 671, 672, 673, 731, 734, 928, 931, 1164, 1167, 1704, 1736, 1737, 1791, 1794, 1860, 1936, 1940, 2060, 2092, 2095, 2135, 2159, 2168], "ubuntu": 29, "name": [29, 31, 32, 33, 35, 38, 39, 53, 62, 63, 74, 75, 110, 111, 122, 123, 135, 136, 137, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 154, 157, 159, 189, 190, 196, 1188, 1209, 1360, 1362, 1364, 1407, 1413, 1414, 1704, 1730, 1731, 1734, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1801, 1805, 1824, 1828, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2130, 2195, 2215, 2216, 2272, 2273, 2277, 2286, 2293, 2297, 2304, 2305], "uid": 29, "bash": [29, 32, 33, 133], "root": [29, 32, 33, 51, 52, 99, 100, 148, 157, 465, 751, 752, 753, 754, 755, 848, 889, 1134, 1138, 1139, 1151, 1287, 2147, 2148], "both": [29, 33, 45, 46, 51, 52, 53, 62, 63, 93, 94, 99, 100, 101, 110, 111, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 150, 152, 154, 156, 157, 158, 159, 170, 171, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 294, 296, 298, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 411, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 838, 841, 865, 866, 867, 868, 869, 880, 881, 892, 895, 907, 910, 917, 928, 931, 938, 942, 944, 947, 955, 982, 985, 1012, 1013, 1015, 1040, 1041, 1057, 1058, 1060, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1199, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1305, 1306, 1311, 1313, 1315, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1584, 1588, 1602, 1632, 1636, 1638, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2130, 2133, 2135, 2136, 2137, 2142, 2145, 2184, 2188], "either": [29, 31, 32, 33, 51, 52, 53, 54, 55, 60, 61, 87, 88, 99, 100, 101, 102, 103, 108, 109, 135, 136, 138, 139, 140, 141, 142, 145, 147, 148, 149, 150, 152, 154, 157, 171, 239, 263, 266, 465, 481, 484, 501, 504, 611, 612, 613, 614, 615, 636, 639, 641, 644, 651, 654, 656, 659, 726, 729, 736, 739, 741, 744, 766, 770, 849, 850, 851, 852, 853, 892, 893, 894, 895, 896, 938, 941, 963, 1092, 1093, 1094, 1095, 1096, 1134, 1140, 1278, 1279, 1328, 1331, 1407, 1438, 1439, 1440, 1492, 1496, 1514, 1517, 1533, 1534, 1589, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1704, 1751, 1754, 1791, 1794, 1941, 1942, 1943, 1944, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2130, 2142, 2144, 2147, 2148, 2159, 2170, 2171, 2172, 2245, 2252, 2286, 2294, 2302], "termin": [29, 32, 33, 84, 87, 88, 89, 90, 136, 154, 157], "3": [29, 32, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 138, 140, 142, 149, 150, 154, 156, 157, 158, 159, 189, 191, 194, 195, 197, 200, 202, 203, 204, 205, 206, 207, 210, 212, 215, 217, 220, 222, 224, 225, 226, 227, 230, 233, 239, 260, 261, 269, 270, 271, 272, 273, 274, 277, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 317, 319, 320, 324, 325, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 364, 365, 366, 369, 370, 372, 396, 397, 398, 399, 400, 401, 404, 413, 415, 416, 417, 430, 434, 436, 437, 438, 439, 440, 441, 451, 453, 456, 457, 459, 460, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 509, 511, 514, 515, 516, 518, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 656, 657, 658, 659, 660, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 854, 855, 856, 857, 859, 860, 861, 862, 865, 866, 870, 872, 874, 875, 876, 877, 878, 879, 880, 881, 886, 887, 888, 892, 893, 894, 895, 896, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1359, 1360, 1362, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1415, 1418, 1425, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1469, 1471, 1472, 1474, 1483, 1484, 1485, 1486, 1487, 1492, 1493, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1542, 1543, 1544, 1545, 1546, 1556, 1558, 1559, 1560, 1561, 1562, 1574, 1577, 1584, 1585, 1586, 1588, 1589, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1717, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1803, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2110, 2112, 2113, 2115, 2118, 2137, 2195, 2215, 2227, 2231, 2235, 2236, 2237, 2238, 2256, 2257, 2258, 2259], "8": [29, 32, 35, 38, 39, 47, 48, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 89, 90, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 140, 150, 153, 157, 189, 191, 194, 217, 220, 239, 268, 269, 272, 302, 305, 320, 324, 325, 355, 356, 359, 360, 362, 363, 369, 370, 371, 372, 373, 430, 442, 461, 465, 481, 484, 485, 486, 487, 488, 490, 491, 494, 495, 511, 512, 514, 516, 519, 531, 534, 541, 544, 551, 554, 591, 592, 593, 594, 595, 596, 599, 601, 604, 626, 629, 631, 632, 633, 634, 635, 656, 659, 666, 669, 671, 673, 681, 682, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 711, 712, 713, 714, 716, 717, 719, 726, 727, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 754, 756, 759, 771, 775, 776, 780, 798, 799, 801, 808, 811, 813, 816, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 833, 834, 836, 854, 855, 856, 857, 880, 881, 892, 893, 894, 895, 896, 912, 914, 916, 918, 919, 920, 921, 922, 938, 939, 945, 947, 952, 955, 956, 959, 964, 967, 970, 972, 973, 974, 975, 976, 982, 983, 984, 985, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1012, 1013, 1014, 1015, 1016, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1082, 1083, 1084, 1085, 1086, 1092, 1094, 1096, 1106, 1109, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1134, 1135, 1136, 1137, 1140, 1143, 1144, 1145, 1148, 1149, 1154, 1155, 1156, 1157, 1158, 1164, 1169, 1181, 1182, 1183, 1184, 1188, 1189, 1190, 1193, 1196, 1200, 1201, 1209, 1211, 1217, 1218, 1220, 1222, 1223, 1225, 1232, 1234, 1243, 1244, 1245, 1246, 1247, 1253, 1255, 1257, 1263, 1264, 1266, 1278, 1280, 1289, 1291, 1293, 1300, 1302, 1304, 1316, 1318, 1320, 1333, 1335, 1350, 1351, 1353, 1360, 1364, 1365, 1366, 1367, 1386, 1387, 1389, 1391, 1393, 1395, 1407, 1425, 1431, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1459, 1461, 1463, 1466, 1469, 1483, 1484, 1485, 1486, 1487, 1498, 1500, 1501, 1503, 1504, 1505, 1506, 1514, 1515, 1517, 1519, 1520, 1522, 1527, 1528, 1530, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1571, 1572, 1602, 1604, 1606, 1607, 1613, 1618, 1627, 1630, 1638, 1640, 1642, 1644, 1645, 1646, 1662, 1664, 1665, 1666, 1667, 1670, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1704, 1715, 1717, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1739, 1740, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1776, 1779, 1791, 1792, 1794, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1823, 1824, 1825, 1826, 1827, 1828, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1876, 1880, 1881, 1884, 1916, 1919, 1921, 1922, 1924, 1931, 1932, 1934, 1935, 1945, 1947, 1954, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1995, 1996, 1997, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2028, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2048, 2055, 2056, 2057, 2058, 2059, 2060, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2079, 2081, 2082, 2087, 2089, 2091, 2096, 2100, 2101, 2103, 2104, 2118, 2159, 2170, 2227, 2231, 2235, 2236, 2256, 2257, 2259], "built": [29, 32, 33, 136, 150, 155, 239, 241, 242, 2117, 2129, 2130, 2134, 2159, 2170, 2171, 2172], "doesn": [29, 32, 135, 136, 137, 138, 140, 150, 152, 154, 171, 2128, 2286, 2294], "explicit": [29, 32, 136, 138, 147, 148, 149, 154, 171, 2130, 2147, 2148], "cmd": [29, 32], "file": [29, 31, 32, 33, 87, 88, 133, 134, 135, 136, 137, 141, 142, 143, 145, 148, 149, 150, 151, 154, 157, 1407, 1491, 1555, 2126, 2129, 2130, 2131, 2171, 2172], "abov": [29, 32, 33, 45, 46, 51, 52, 53, 62, 63, 70, 71, 85, 86, 99, 100, 101, 110, 111, 118, 119, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 189, 227, 229, 230, 231, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 309, 311, 312, 314, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 789, 792, 823, 826, 828, 831, 833, 836, 880, 881, 886, 887, 892, 895, 907, 910, 917, 928, 931, 938, 944, 961, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1311, 1314, 1355, 1356, 1357, 1358, 1359, 1368, 1371, 1372, 1375, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1823, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1970, 1976, 1977, 1978, 1979, 1980, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2130, 2135], "OR": [29, 32, 33, 53, 80, 81, 101, 128, 129, 465, 526, 529, 671, 674, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 2106, 2112, 2113, 2114, 2115, 2116], "move": [29, 33, 49, 50, 53, 97, 98, 101, 151, 430, 456, 457, 458, 459, 460, 880, 886, 887, 1188, 1203, 1238, 1239, 1240, 1241, 1242, 1368, 1371, 1372, 1375], "execut": [29, 32, 33, 136, 137, 140, 147, 150, 152, 154, 156, 159, 171, 430, 432, 1407, 1589, 2117, 2126, 2130, 2131, 2132, 2133, 2134, 2136], "insid": [29, 32, 33, 84, 89, 90, 134, 136, 138, 146, 150, 151, 1188, 1209, 1360, 1364, 2136, 2218], "make_docs_without_dock": 29, "path": [29, 32, 147, 148, 149, 1407, 1491, 2130, 2195, 2213, 2272, 2273, 2274, 2275, 2276, 2282, 2285], "rel": [29, 33, 35, 38, 39, 53, 56, 57, 62, 63, 66, 67, 76, 77, 93, 94, 101, 104, 105, 110, 111, 114, 115, 124, 125, 137, 149, 152, 269, 271, 273, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1704, 1725, 1726, 1727, 1728, 1729, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1819, 1823, 1860, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1905, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2118, 2130, 2132, 2184, 2185, 2191, 2195, 2213, 2214, 2215, 2216], "assum": [29, 45, 46, 51, 52, 53, 62, 63, 99, 100, 101, 133, 135, 137, 138, 141, 149, 150, 152, 156, 157, 171, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 892, 895, 907, 910, 917, 928, 931, 938, 944, 961, 963, 964, 982, 985, 1040, 1041, 1111, 1112, 1113, 1114, 1115, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1311, 1314, 1328, 1331, 1365, 1366, 1367, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115], "gener": [29, 31, 32, 33, 45, 46, 51, 52, 55, 60, 61, 70, 71, 82, 83, 93, 94, 99, 100, 103, 108, 109, 118, 119, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 156, 158, 159, 170, 171, 239, 241, 242, 274, 277, 279, 280, 281, 282, 283, 325, 348, 351, 465, 606, 609, 671, 672, 673, 726, 729, 731, 734, 880, 881, 883, 886, 887, 912, 915, 982, 985, 1041, 1053, 1055, 1188, 1204, 1205, 1270, 1271, 1305, 1308, 1368, 1371, 1372, 1375, 1408, 1411, 1413, 1414, 1415, 1418, 1420, 1423, 1425, 1426, 1429, 1431, 1434, 1436, 1437, 1438, 1440, 1441, 1444, 1446, 1449, 1451, 1454, 1456, 1458, 1459, 1462, 1464, 1465, 1466, 1469, 1471, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1488, 1489, 1490, 1491, 1492, 1495, 1497, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1514, 1517, 1519, 1522, 1524, 1526, 1527, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1540, 1542, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1563, 1566, 1568, 1572, 1573, 1574, 1577, 1578, 1579, 1583, 1584, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1600, 1601, 1640, 1679, 1680, 1681, 1682, 1683, 1704, 1736, 1737, 1791, 1794, 1824, 1828, 1860, 1936, 1940, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1979, 1986, 1987, 1988, 1989, 1990, 1991, 2060, 2092, 2095, 2117, 2118, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2175, 2179, 2227, 2230, 2231, 2235, 2236, 2256, 2257, 2258, 2259, 2272, 2274, 2276], "prefer": [29, 32, 136, 146, 148, 152, 2130], "browser": [29, 32], "affect": [29, 137, 148], "page": [29, 32, 33, 137, 155, 156, 159, 169, 2118], "It": [29, 31, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 343, 346, 430, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 796, 823, 824, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 880, 881, 898, 900, 902, 905, 917, 938, 941, 961, 963, 967, 970, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1032, 1033, 1034, 1072, 1073, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1141, 1142, 1143, 1144, 1145, 1147, 1150, 1164, 1165, 1166, 1169, 1170, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1207, 1212, 1215, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1278, 1279, 1280, 1281, 1289, 1290, 1292, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1355, 1356, 1357, 1358, 1359, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1796, 1799, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2008, 2009, 2011, 2018, 2019, 2020, 2021, 2022, 2023, 2039, 2043, 2044, 2045, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2128, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2142, 2144, 2149, 2151, 2152, 2154, 2156], "synchron": [29, 137], "respons": [29, 33, 137, 138], "rest": [29, 32, 137, 159, 917, 918, 921, 1134, 1142, 1188, 1193, 2132], "remove_doc": 29, "privat": [29, 148, 150, 2175, 2179], "access": [29, 31, 32, 33, 87, 88, 137, 138, 148, 2130, 2132, 2134], "fulfil": [29, 153, 2118], "purpos": [29, 33, 134, 136, 137, 140, 142, 144, 145, 146, 148, 150, 152, 153, 156, 465, 581, 584, 646, 649, 880, 886, 887, 1368, 1371, 1372, 1375, 1704, 1791, 1794, 2117, 2118, 2129, 2131, 2134, 2135, 2136], "delet": [29, 33, 137, 1602, 1637], "previous": [29, 32, 145, 150, 154, 1407, 1591, 2286, 2302], "autogenerated_sourc": 29, "2": [29, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 140, 142, 144, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 171, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 233, 239, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 296, 297, 298, 299, 300, 302, 305, 320, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 364, 365, 366, 369, 372, 396, 397, 398, 399, 400, 401, 404, 413, 414, 417, 430, 436, 437, 438, 439, 440, 441, 442, 445, 447, 449, 451, 453, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 666, 667, 668, 669, 671, 672, 673, 674, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 780, 781, 782, 783, 784, 785, 789, 790, 792, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 854, 855, 856, 857, 859, 860, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 886, 887, 892, 893, 894, 895, 896, 898, 900, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1379, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1476, 1479, 1483, 1484, 1485, 1486, 1487, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1542, 1543, 1544, 1545, 1546, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1589, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1804, 1805, 1806, 1810, 1811, 1812, 1813, 1814, 1815, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1834, 1835, 1836, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2136, 2137, 2149, 2154, 2227, 2230, 2231, 2232, 2235, 2236, 2237, 2238, 2245, 2255, 2256, 2257, 2258, 2259, 2286, 2292], "Then": [29, 31, 32, 33, 137, 146, 151, 171], "format": [29, 49, 50, 53, 78, 79, 85, 86, 87, 88, 91, 92, 97, 98, 101, 132, 138, 139, 140, 141, 142, 148, 154, 156, 157, 189, 227, 229, 230, 231, 325, 364, 366, 430, 437, 438, 439, 440, 788, 1092, 1093, 1094, 1095, 1096, 1268, 1278, 1279, 1336, 1338, 1341, 1407, 1441, 1444, 1640, 1641, 1672, 1673, 2060, 2071, 2072, 2074, 2118, 2126, 2128, 2130, 2131, 2184, 2187, 2188, 2189], "png": [29, 157], "_imag": 29, "lastli": [29, 134], "docstrstructur": [29, 33, 84, 87, 88, 89, 90, 95, 96, 134, 136, 145, 149, 150, 151, 157, 158, 369, 371, 373, 380, 382, 384, 1407, 1436, 1945, 1959, 2129, 2130, 2147, 2148], "rst": 29, "main": [29, 32, 45, 46, 53, 62, 63, 101, 110, 111, 133, 136, 143, 146, 239, 260, 261, 307, 309, 311, 312, 314, 316, 880, 881, 886, 887, 902, 905, 982, 983, 984, 985, 1164, 1166, 1368, 1371, 1372, 1375, 1704, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1819, 1820, 1821, 1822, 1823, 2128, 2130, 2131, 2136], "submodul": [29, 31, 32, 33, 35, 84, 133, 137, 139, 145, 146, 150, 153, 154, 158, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2117, 2118, 2139, 2142, 2147, 2148, 2149, 2159, 2171, 2172, 2173, 2174, 2175, 2181, 2182], "skip": [29, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 146, 150, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 907, 911, 918, 922, 982, 984, 986, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2241, 2244], "read": [29, 31, 32, 53, 66, 67, 87, 88, 101, 114, 115, 137, 150, 152, 997, 998, 999, 1000, 1001, 1188, 1196, 1860, 1896, 1897, 1898, 1899, 1900, 2118, 2130], "partial_sourc": 29, "conf": 29, "copi": [29, 32, 33, 45, 46, 47, 48, 49, 50, 53, 54, 55, 66, 67, 87, 88, 93, 94, 95, 96, 97, 98, 101, 102, 103, 114, 115, 133, 135, 137, 138, 141, 148, 149, 154, 170, 171, 239, 244, 245, 246, 247, 251, 252, 253, 263, 266, 325, 333, 334, 335, 336, 337, 430, 456, 457, 458, 459, 460, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 938, 958, 1188, 1189, 1190, 1191, 1243, 1246, 1248, 1249, 1250, 1251, 1252, 1333, 1335, 1407, 1558, 1560, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1860, 1896, 1897, 1898, 1899, 1900, 1945, 1947, 2044, 2055, 2058], "5": [29, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 140, 144, 149, 150, 156, 157, 158, 189, 191, 192, 194, 197, 200, 202, 205, 207, 210, 212, 215, 217, 219, 221, 222, 225, 227, 228, 229, 230, 231, 239, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 317, 319, 320, 324, 325, 338, 339, 340, 341, 342, 343, 345, 346, 348, 350, 351, 352, 364, 366, 369, 371, 372, 373, 396, 398, 400, 401, 404, 413, 416, 417, 430, 437, 438, 439, 440, 441, 449, 453, 456, 457, 458, 459, 465, 466, 468, 469, 470, 476, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 518, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 551, 554, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 646, 648, 649, 650, 656, 657, 658, 659, 660, 666, 668, 669, 671, 673, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 743, 744, 745, 751, 753, 755, 756, 757, 759, 761, 763, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 789, 792, 803, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 833, 834, 836, 854, 855, 856, 857, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 892, 893, 894, 895, 896, 912, 914, 916, 917, 918, 919, 920, 921, 922, 923, 925, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 945, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 959, 961, 963, 966, 967, 970, 972, 973, 974, 975, 976, 982, 985, 986, 987, 990, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1082, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1181, 1182, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1196, 1199, 1200, 1201, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1230, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1248, 1250, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1275, 1277, 1278, 1279, 1282, 1285, 1289, 1291, 1293, 1300, 1301, 1302, 1303, 1304, 1311, 1314, 1315, 1316, 1317, 1319, 1323, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1401, 1402, 1403, 1404, 1405, 1407, 1425, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1471, 1474, 1479, 1492, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1571, 1572, 1574, 1577, 1589, 1601, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1638, 1640, 1641, 1642, 1644, 1645, 1646, 1652, 1654, 1655, 1656, 1662, 1664, 1665, 1666, 1667, 1670, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1712, 1713, 1714, 1715, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1759, 1761, 1764, 1771, 1774, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1794, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1844, 1855, 1858, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 2003, 2005, 2006, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2106, 2107, 2110, 2112, 2115, 2159, 2170, 2227, 2229, 2230, 2231, 2232, 2235, 2236, 2237, 2238, 2245, 2251, 2256, 2257, 2259], "create_rst_fil": 29, "filter": [29, 53, 60, 61, 101, 108, 109, 833, 834, 835, 836, 837, 880, 884, 885, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1137, 1150, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "recurs": [29, 32, 40, 41, 42, 43, 44, 87, 88, 91, 92, 133, 136, 145, 158, 171, 325, 374, 375, 377, 378, 430, 443, 444, 1407, 1464, 1465, 1945, 1946, 1947, 1956, 1957, 1958], "repres": [29, 45, 46, 51, 52, 53, 60, 61, 62, 63, 99, 100, 101, 108, 109, 110, 111, 134, 152, 156, 239, 284, 285, 287, 294, 297, 325, 368, 465, 476, 477, 478, 479, 480, 481, 484, 491, 492, 493, 494, 495, 506, 507, 508, 509, 510, 551, 552, 553, 554, 555, 746, 747, 748, 749, 750, 771, 772, 773, 774, 775, 838, 839, 840, 841, 842, 870, 871, 872, 874, 938, 952, 1042, 1043, 1044, 1045, 1124, 1127, 1164, 1169, 1188, 1206, 1282, 1285, 1305, 1306, 1602, 1631, 1639, 1640, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1704, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 2127, 2128, 2131, 2149, 2150, 2153, 2154, 2157, 2245, 2250, 2253], "its": [29, 31, 32, 33, 40, 43, 44, 47, 48, 53, 66, 67, 87, 88, 95, 96, 102, 103, 114, 115, 134, 137, 138, 141, 146, 148, 149, 150, 151, 152, 159, 171, 325, 338, 339, 340, 341, 342, 355, 356, 358, 359, 360, 362, 363, 430, 455, 789, 791, 938, 964, 1295, 1296, 1298, 1365, 1367, 1407, 1420, 1422, 1459, 1461, 1463, 1578, 1704, 1751, 1754, 1860, 1876, 1877, 1878, 1879, 1880, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1921, 1922, 1923, 1924, 1925, 1945, 1952, 2117, 2129, 2130, 2136, 2147, 2148, 2195, 2197, 2207], "overal": [29, 136, 138, 139, 141, 159, 1640, 1679, 1682, 2126, 2128, 2129, 2130], "markup": 29, "6": [29, 35, 36, 37, 38, 39, 45, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 84, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 137, 140, 150, 152, 154, 156, 157, 158, 189, 191, 192, 194, 197, 200, 217, 220, 222, 225, 239, 268, 269, 270, 271, 272, 273, 284, 287, 302, 305, 320, 324, 325, 338, 341, 343, 346, 364, 366, 369, 371, 372, 373, 430, 464, 465, 466, 467, 468, 469, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 511, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 554, 556, 557, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 576, 578, 581, 583, 585, 586, 589, 591, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 611, 612, 614, 616, 617, 619, 621, 624, 626, 628, 629, 630, 631, 632, 634, 646, 648, 649, 656, 658, 659, 660, 666, 669, 676, 679, 681, 682, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 705, 706, 707, 709, 716, 719, 726, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 751, 754, 756, 757, 759, 761, 762, 763, 764, 765, 766, 770, 771, 775, 781, 782, 784, 785, 789, 792, 793, 797, 808, 809, 811, 813, 814, 816, 818, 819, 821, 854, 855, 856, 857, 875, 876, 877, 878, 879, 880, 881, 892, 894, 895, 896, 912, 914, 916, 918, 919, 920, 921, 922, 928, 931, 933, 936, 938, 943, 945, 951, 952, 953, 954, 957, 961, 964, 967, 970, 972, 973, 974, 975, 976, 982, 985, 986, 987, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1004, 1006, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1072, 1073, 1075, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1134, 1140, 1143, 1144, 1145, 1148, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1181, 1182, 1183, 1184, 1188, 1189, 1190, 1191, 1193, 1196, 1200, 1201, 1206, 1207, 1210, 1211, 1217, 1218, 1219, 1220, 1221, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1267, 1278, 1280, 1282, 1285, 1289, 1291, 1293, 1300, 1301, 1302, 1303, 1304, 1311, 1312, 1314, 1316, 1317, 1319, 1333, 1334, 1335, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1355, 1359, 1365, 1366, 1367, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1395, 1407, 1426, 1428, 1429, 1431, 1434, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1466, 1468, 1469, 1470, 1471, 1474, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1561, 1562, 1568, 1572, 1574, 1577, 1589, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1621, 1622, 1627, 1630, 1638, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1710, 1712, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1738, 1739, 1740, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1776, 1779, 1791, 1792, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1869, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1884, 1886, 1887, 1889, 1891, 1894, 1901, 1904, 1906, 1907, 1909, 1911, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1938, 1940, 1945, 1947, 1957, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2035, 2037, 2038, 2044, 2045, 2046, 2048, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2149, 2152, 2156, 2227, 2235], "extract": [29, 53, 101, 148, 151, 172, 173, 1188, 1208, 1350, 1351, 1352, 1353, 1354, 2126, 2130, 2131, 2136], "class": [29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 138, 139, 140, 141, 144, 149, 150, 152, 154, 155, 157, 158, 159, 169, 170, 171, 239, 240, 269, 270, 302, 305, 320, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 342, 369, 370, 380, 381, 383, 418, 420, 421, 430, 431, 432, 561, 562, 566, 567, 591, 592, 593, 595, 701, 702, 703, 726, 727, 728, 730, 787, 788, 828, 830, 832, 854, 855, 856, 857, 928, 930, 932, 938, 961, 1092, 1094, 1096, 1181, 1182, 1222, 1224, 1226, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1311, 1314, 1336, 1337, 1338, 1343, 1346, 1347, 1407, 1408, 1410, 1414, 1441, 1443, 1445, 1466, 1470, 1508, 1511, 1533, 1568, 1569, 1572, 1596, 1597, 1602, 1603, 1640, 1689, 1691, 1699, 1702, 1704, 1756, 1759, 1845, 1849, 1850, 1854, 1855, 1859, 1945, 1947, 1958, 1976, 1980, 1981, 1985, 1986, 1990, 1997, 2013, 2016, 2023, 2034, 2038, 2045, 2049, 2087, 2088, 2092, 2093, 2117, 2118, 2124, 2125, 2128, 2130, 2131, 2137, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2195, 2214, 2216, 2218, 2219, 2220, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2272, 2273, 2282, 2283, 2284, 2285, 2286, 2287, 2296, 2302], "get_functions_and_class": 29, "doctr": 29, "7": [29, 33, 35, 36, 37, 38, 39, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 140, 145, 147, 150, 189, 197, 200, 202, 203, 207, 210, 212, 215, 217, 220, 239, 274, 277, 294, 297, 325, 369, 370, 371, 372, 373, 380, 383, 430, 437, 441, 442, 465, 466, 469, 481, 482, 483, 484, 485, 491, 493, 511, 512, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 534, 536, 537, 539, 541, 544, 551, 553, 554, 555, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 578, 579, 580, 586, 589, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 656, 658, 659, 660, 666, 668, 670, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 701, 702, 706, 707, 709, 716, 718, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 751, 753, 754, 755, 766, 770, 771, 775, 776, 780, 781, 783, 785, 789, 792, 798, 799, 801, 808, 811, 813, 816, 818, 821, 823, 825, 827, 828, 831, 833, 834, 836, 854, 855, 856, 857, 875, 876, 877, 878, 879, 880, 881, 883, 885, 892, 894, 895, 896, 907, 908, 909, 910, 911, 912, 914, 916, 918, 919, 920, 921, 922, 938, 939, 943, 944, 945, 952, 953, 955, 961, 967, 970, 972, 973, 974, 975, 976, 982, 985, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1053, 1055, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1072, 1073, 1075, 1082, 1085, 1092, 1094, 1096, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1120, 1122, 1134, 1136, 1137, 1140, 1143, 1144, 1145, 1148, 1164, 1170, 1181, 1182, 1188, 1189, 1190, 1191, 1193, 1196, 1200, 1201, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1242, 1243, 1245, 1247, 1258, 1262, 1263, 1265, 1267, 1282, 1285, 1289, 1291, 1293, 1300, 1301, 1302, 1303, 1304, 1311, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1343, 1345, 1348, 1349, 1350, 1351, 1353, 1355, 1359, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1395, 1407, 1426, 1429, 1431, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1562, 1568, 1572, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1630, 1638, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1657, 1660, 1667, 1670, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1701, 1702, 1703, 1704, 1710, 1712, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1739, 1740, 1751, 1754, 1756, 1760, 1761, 1764, 1776, 1779, 1791, 1792, 1794, 1801, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1822, 1823, 1824, 1825, 1827, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1876, 1877, 1878, 1879, 1880, 1881, 1884, 1906, 1908, 1910, 1916, 1919, 1921, 1922, 1923, 1924, 1925, 1931, 1932, 1934, 1935, 1945, 1947, 1954, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1995, 1996, 1997, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2028, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2049, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2079, 2081, 2082, 2087, 2089, 2091, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2227, 2235], "readm": [29, 171], "module_nam": 29, "copy_readme_to_rst": 29, "tabl": [29, 138, 148, 2130, 2227, 2235, 2241, 2242], "content": [29, 31, 53, 87, 88, 101, 147, 154, 157, 1258, 1259, 1260, 1261, 1343, 1347], "toc": 29, "append": [29, 53, 62, 63, 87, 88, 101, 137, 142, 150, 154, 157, 465, 521, 524, 907, 908, 909, 910, 911, 938, 944, 1704, 1725, 1726, 1728, 1751, 1754, 1860, 1876, 1879], "append_toctree_to_rst": 29, "9": [29, 35, 38, 39, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 84, 85, 86, 89, 90, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 122, 123, 124, 125, 126, 127, 136, 140, 142, 150, 157, 158, 189, 191, 193, 194, 325, 355, 356, 359, 360, 362, 363, 369, 371, 372, 373, 380, 381, 382, 465, 471, 472, 481, 482, 483, 484, 485, 486, 487, 490, 491, 494, 506, 507, 508, 510, 511, 512, 514, 516, 517, 519, 531, 534, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 591, 593, 594, 595, 606, 609, 621, 625, 631, 632, 633, 635, 636, 638, 639, 640, 641, 643, 644, 645, 666, 667, 669, 671, 673, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 701, 702, 703, 705, 711, 714, 715, 716, 718, 719, 720, 731, 733, 734, 735, 736, 739, 751, 753, 755, 756, 757, 758, 759, 760, 761, 763, 765, 781, 782, 783, 784, 785, 789, 790, 808, 810, 813, 815, 818, 820, 821, 823, 824, 825, 826, 827, 828, 829, 831, 892, 895, 896, 912, 914, 916, 918, 919, 920, 921, 922, 938, 946, 952, 967, 970, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1082, 1083, 1084, 1085, 1086, 1124, 1126, 1128, 1134, 1135, 1136, 1140, 1143, 1144, 1145, 1148, 1149, 1159, 1160, 1161, 1162, 1163, 1176, 1177, 1178, 1179, 1180, 1188, 1191, 1193, 1196, 1200, 1209, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1243, 1244, 1245, 1246, 1247, 1263, 1265, 1267, 1289, 1291, 1293, 1311, 1315, 1316, 1318, 1320, 1333, 1334, 1335, 1360, 1362, 1364, 1386, 1387, 1389, 1407, 1431, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1454, 1459, 1461, 1463, 1466, 1469, 1498, 1499, 1501, 1503, 1504, 1505, 1506, 1514, 1515, 1517, 1519, 1520, 1522, 1527, 1528, 1530, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1562, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1652, 1653, 1655, 1667, 1670, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1704, 1710, 1713, 1714, 1715, 1718, 1725, 1728, 1736, 1739, 1751, 1754, 1756, 1759, 1761, 1764, 1776, 1779, 1791, 1792, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1860, 1861, 1862, 1864, 1881, 1884, 1901, 1904, 1906, 1908, 1910, 1916, 1919, 1921, 1922, 1924, 1931, 1932, 1934, 1935, 1945, 1947, 1952, 1954, 1957, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 2018, 2022, 2023, 2024, 2026, 2028, 2034, 2035, 2037, 2038, 2044, 2045, 2046, 2055, 2057, 2058, 2059, 2060, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2079, 2081, 2087, 2088, 2090, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2126, 2175, 2176, 2177, 2227, 2237, 2238], "index": [29, 45, 46, 53, 54, 55, 66, 67, 72, 73, 74, 75, 76, 77, 87, 88, 93, 94, 101, 102, 103, 114, 115, 120, 121, 122, 123, 124, 125, 136, 137, 145, 149, 150, 156, 233, 239, 260, 261, 284, 285, 286, 287, 288, 430, 452, 880, 881, 898, 900, 982, 983, 984, 985, 997, 998, 999, 1000, 1001, 1134, 1141, 1188, 1196, 1204, 1205, 1208, 1270, 1271, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1349, 1350, 1354, 1376, 1380, 1407, 1413, 1471, 1472, 1473, 1474, 1475, 1479, 1537, 1539, 1541, 1542, 1544, 1546, 1602, 1637, 1860, 1896, 1897, 1898, 1899, 1900, 1916, 1919, 1945, 1948, 1949, 1950, 1953, 1954, 1955, 1961, 1963, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2016, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2121, 2123, 2130, 2195, 2200, 2241, 2244], "create_index_rst": 29, "14": [29, 47, 48, 51, 52, 53, 60, 61, 70, 71, 78, 79, 95, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 136, 140, 150, 325, 333, 335, 336, 337, 369, 370, 372, 380, 381, 465, 471, 473, 474, 475, 491, 494, 501, 502, 503, 504, 505, 536, 537, 556, 557, 559, 560, 656, 659, 671, 673, 691, 693, 716, 719, 736, 740, 746, 748, 750, 781, 785, 823, 824, 825, 826, 827, 828, 831, 892, 895, 918, 919, 920, 921, 922, 992, 994, 996, 997, 998, 999, 1000, 1001, 1062, 1063, 1064, 1065, 1066, 1134, 1135, 1136, 1140, 1150, 1188, 1193, 1196, 1200, 1227, 1228, 1230, 1386, 1387, 1389, 1407, 1558, 1560, 1561, 1602, 1604, 1607, 1640, 1642, 1645, 1647, 1650, 1657, 1659, 1660, 1661, 1667, 1669, 1670, 1671, 1679, 1680, 1682, 1699, 1702, 1704, 1725, 1728, 1776, 1779, 1819, 1820, 1822, 1823, 1860, 1931, 1932, 1934, 1935, 1976, 1977, 1980, 1981, 1982, 1983, 1986, 1987, 1988, 2023, 2024, 2028, 2060, 2066, 2067, 2069, 2071, 2072, 2074], "\u03c0": [29, 233, 465, 471, 474, 486, 489, 496, 499, 501, 504], "updat": [29, 31, 32, 33, 40, 42, 44, 54, 55, 56, 57, 87, 88, 102, 103, 104, 105, 132, 133, 134, 136, 137, 138, 140, 144, 146, 148, 149, 150, 152, 154, 156, 157, 159, 171, 1407, 1508, 1509, 1510, 1511, 1512, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1679, 1682, 1689, 1692, 1941, 1942, 1943, 1945, 1953, 1954, 1958, 1963, 1964, 2142, 2143, 2146, 2175, 2176, 2177, 2178, 2179, 2180, 2272, 2274, 2286, 2297], "namespac": [29, 31, 138, 146, 148, 149, 151, 154, 159, 2195, 2213], "remov": [29, 31, 62, 63, 87, 88, 110, 111, 135, 137, 138, 141, 145, 150, 152, 159, 1602, 1637, 1704, 1725, 1726, 1728, 1751, 1754, 1819, 1820, 1821, 1822, 1823, 1860, 1911, 1914, 1941, 1942, 1943, 1945, 1960, 2130], "here": [30, 31, 32, 33, 133, 136, 137, 140, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 170, 171, 465, 731, 734, 2130, 2131, 2142, 2144], "resours": 30, "climb": 30, "steep": 30, "curv": 30, "respect": [30, 31, 33, 45, 46, 51, 52, 53, 56, 57, 62, 63, 99, 100, 101, 104, 105, 110, 111, 134, 136, 137, 138, 140, 144, 148, 150, 151, 239, 284, 285, 287, 465, 466, 469, 481, 484, 501, 504, 511, 514, 521, 524, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 591, 594, 596, 599, 601, 604, 626, 629, 631, 634, 656, 659, 661, 664, 671, 674, 676, 679, 691, 694, 701, 704, 726, 727, 728, 729, 730, 761, 765, 789, 790, 858, 938, 952, 1042, 1043, 1044, 1045, 1047, 1048, 1176, 1177, 1178, 1179, 1180, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1638, 1640, 1641, 1672, 1673, 1704, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1941, 1942, 1943, 1944, 2126, 2136, 2149, 2152, 2195, 2215, 2216, 2227, 2235], "behaviour": [30, 31, 33, 132, 133, 134, 136, 138, 141, 142, 144, 147, 148, 150, 151, 156, 938, 958, 1248, 1251], "frontend": [30, 33, 40, 43, 132, 137, 138, 142, 150, 151, 152, 153, 155, 1407, 1548, 2117, 2130, 2195, 2205, 2213, 2214, 2218, 2223, 2241, 2244, 2272, 2273, 2274], "refer": [30, 31, 32, 33, 53, 66, 67, 78, 79, 80, 81, 101, 104, 105, 114, 115, 126, 127, 128, 129, 133, 134, 137, 138, 144, 145, 148, 149, 150, 171, 239, 260, 261, 465, 581, 584, 646, 649, 880, 881, 886, 887, 902, 905, 938, 962, 982, 983, 984, 985, 997, 998, 999, 1000, 1001, 1164, 1166, 1188, 1196, 1323, 1326, 1368, 1371, 1372, 1375, 1602, 1604, 1607, 1608, 1610, 1611, 1704, 1720, 1723, 1829, 1833, 1860, 1896, 1897, 1898, 1899, 1900, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2130, 2159, 2169], "realpython": 30, "pyn": 30, "kind": [30, 53, 148, 150, 152, 154, 171, 325, 369, 372, 380, 383, 385, 465, 711, 714, 1077, 1078, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2227, 2230, 2232, 2235, 2241, 2242, 2244], "stack": [30, 35, 38, 39, 62, 63, 66, 67, 87, 88, 101, 110, 111, 114, 115, 133, 154, 239, 307, 311, 312, 316, 923, 925, 926, 927, 1067, 1070, 1188, 1194, 1201, 1211, 1391, 1392, 1394, 1395, 1407, 1490, 1548, 1554, 1595, 1704, 1715, 1718, 1725, 1728, 1730, 1731, 1734, 1736, 1739, 1746, 1749, 1751, 1754, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1801, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1860, 1920, 1945, 1946, 1956, 1957, 2118, 2126, 2128, 2135, 2136, 2159, 2168], "overflow": [30, 138, 465, 481, 484, 1704, 1791, 1794, 2060, 2096, 2100], "platform": [30, 32, 2128, 2132, 2134], "sort": [30, 53, 77, 84, 87, 88, 89, 90, 101, 125, 137, 151, 938, 964, 1159, 1160, 1161, 1162, 1163, 1243, 1244, 1245, 1246, 1247, 1258, 1259, 1260, 1261, 1334, 1335, 1343, 1347, 1365, 1367, 1704, 1730, 1731, 1734, 1801, 1805, 1806, 1810, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2059, 2245, 2248], "inform": [30, 31, 32, 33, 47, 48, 56, 57, 95, 96, 104, 105, 133, 136, 137, 142, 150, 325, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 1407, 1413, 1602, 1632, 1633, 1634, 1635, 1636, 2133], "pilot": 30, "bit": [30, 31, 32, 136, 137, 138, 140, 145, 154, 156, 325, 368, 369, 372, 380, 383, 465, 516, 519, 521, 524, 531, 534, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2136], "thei": [30, 31, 33, 53, 62, 63, 70, 71, 87, 88, 110, 111, 118, 119, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 150, 151, 152, 154, 156, 157, 158, 159, 171, 325, 411, 938, 947, 964, 1012, 1013, 1015, 1365, 1367, 1704, 1824, 1825, 1826, 1827, 1828, 1941, 1942, 1943, 1970, 1971, 1972, 1973, 1974, 1975, 2118, 2127, 2130, 2132, 2133, 2136, 2137, 2181, 2182, 2184, 2185], "done": [30, 31, 32, 33, 133, 137, 140, 143, 148, 150, 157, 1704, 1736, 1739, 2130], "faster": [30, 62, 63, 110, 111, 1704, 1801, 1802, 1803, 1804, 1805, 2117, 2132, 2135], "head": [30, 32, 148, 1640, 1694, 1697, 2118, 2159, 2170], "stuck": [30, 31], "spell": 30, "check": [30, 31, 32, 33, 40, 41, 42, 43, 44, 47, 48, 54, 55, 87, 88, 95, 96, 102, 103, 133, 136, 137, 140, 142, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 325, 353, 354, 374, 375, 377, 378, 386, 392, 394, 395, 396, 397, 399, 400, 406, 409, 429, 430, 443, 444, 450, 464, 1407, 1420, 1422, 1423, 1424, 1456, 1458, 1464, 1465, 1482, 1492, 1493, 1494, 1495, 1496, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1551, 1568, 1570, 1572, 1592, 1596, 1597, 1598, 1599, 1600, 1704, 1731, 1734, 1736, 1739, 1945, 1946, 1947, 1956, 1957, 1958, 2118, 2142, 2144, 2147, 2148, 2184, 2187, 2188, 2189], "though": [30, 31, 33, 138, 141, 145, 147, 148, 152, 157, 171], "sound": [30, 137, 153], "odd": [30, 53, 101, 133, 465, 711, 714, 838, 839, 840, 841, 842, 1188, 1206, 1282, 1285, 1305, 1306], "peopl": [30, 32, 33, 132, 2130, 2132], "action": [30, 137, 140, 150], "integr": [30, 32, 47, 48, 53, 95, 96, 99, 100, 132, 325, 333, 334, 335, 336, 337, 938, 964, 1365, 1366, 1367, 2128, 2130, 2132, 2133, 2134], "keep": [30, 31, 32, 33, 66, 67, 87, 88, 114, 115, 133, 136, 137, 142, 148, 150, 151, 152, 157, 159, 1860, 1931, 1932, 1933, 1934, 1935], "explain": [31, 32, 33, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 2118, 2126, 2133, 2136], "frequent": [31, 33, 2130], "wherebi": [31, 1945, 1958, 2127], "outlin": [31, 32, 33, 132, 136, 138, 141, 145, 147, 148, 150], "broad": [31, 2132], "individu": [31, 33, 133, 138, 145, 147, 148, 2130, 2133, 2136, 2137], "sub": [31, 33, 53, 62, 63, 66, 67, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 110, 111, 114, 115, 132, 136, 142, 148, 149, 150, 156, 157, 158, 686, 688, 690, 918, 921, 1062, 1065, 1188, 1193, 1200, 1210, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1343, 1346, 1347, 1386, 1390, 1446, 1450, 1451, 1455, 1471, 1475, 1704, 1725, 1726, 1727, 1728, 1729, 1860, 1906, 1907, 1908, 1909, 1910, 1941, 1942, 1943, 1944, 2118, 2126, 2147, 2148], "distribut": [31, 53, 64, 65, 70, 71, 101, 112, 113, 118, 119, 137, 139, 171, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 856, 857, 912, 913, 914, 915, 916, 917, 1032, 1033, 1034, 1134, 1142, 1181, 1182, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1309, 1310, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2130, 2133, 2149, 2154, 2157, 2159, 2167, 2171, 2172], "across": [31, 72, 73, 87, 88, 102, 103, 120, 121, 133, 136, 138, 140, 142, 144, 145, 148, 150, 152, 430, 453, 454, 1407, 1415, 1418, 1492, 1494, 1496, 1640, 1679, 1682, 1945, 1952, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2128, 2130, 2135], "todo": [31, 138, 148, 150], "detail": [31, 33, 62, 63, 66, 67, 74, 75, 110, 111, 114, 115, 122, 123, 133, 135, 136, 137, 144, 145, 146, 148, 149, 150, 151, 154, 156, 157, 158, 239, 263, 266, 1725, 1727, 1729, 1751, 1752, 1781, 1782, 1801, 1802, 1803, 1804, 1916, 1917, 1918, 1920, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2132, 2136, 2142, 2144], "befor": [31, 32, 33, 53, 60, 61, 62, 63, 66, 67, 87, 88, 101, 108, 109, 110, 111, 133, 134, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 157, 171, 430, 432, 455, 987, 988, 989, 990, 991, 1002, 1005, 1007, 1010, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1188, 1197, 1198, 1206, 1282, 1285, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1751, 1752, 1754, 1834, 1835, 1837, 1838, 1860, 1866, 1867, 1869, 1941, 1942, 1943, 1945, 1958, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2130, 2147, 2148, 2286, 2302], "select": [31, 32, 33, 53, 78, 79, 101, 126, 127, 137, 147, 150, 154, 156, 159, 171, 1188, 1208, 1350, 1351, 1352, 1353, 1354, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2130, 2133, 2134], "alloc": [31, 33, 45, 46, 47, 48, 95, 96, 171, 239, 307, 309, 311, 312, 314, 316, 325, 333, 334, 335, 336, 337], "describ": [31, 33, 78, 79, 101, 137, 150, 154, 159, 1159, 1162, 1289, 1291, 1292, 1293, 1305, 1310, 1333, 1334, 2060, 2071, 2072, 2074, 2087, 2090, 2096, 2100, 2130], "explan": [31, 33, 136, 141, 144, 148, 156], "instead": [31, 32, 33, 51, 52, 99, 100, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 171, 430, 434, 465, 726, 727, 728, 729, 730, 2128, 2130, 2136, 2137, 2142, 2145], "focu": [31, 2128, 2129, 2132, 2137], "been": [31, 33, 54, 55, 70, 71, 102, 103, 118, 119, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 154, 156, 170, 171, 430, 436, 465, 731, 734, 1407, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1970, 1971, 1972, 1973, 1974, 1975, 2117, 2130, 2137, 2286, 2294], "alwai": [31, 33, 47, 48, 66, 67, 95, 96, 114, 115, 134, 135, 136, 138, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 171, 325, 333, 334, 335, 336, 337, 465, 481, 484, 938, 947, 1012, 1015, 1407, 1508, 1511, 1860, 1896, 1897, 1898, 1899, 1900, 2142, 2144, 2245, 2252], "NOT": [31, 465, 666, 669], "pypi": [31, 32, 171], "implement": [31, 47, 48, 49, 50, 53, 74, 75, 76, 77, 95, 96, 97, 98, 101, 124, 125, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 170, 171, 325, 333, 334, 335, 336, 337, 413, 416, 430, 456, 457, 458, 459, 460, 465, 466, 469, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 501, 504, 546, 549, 551, 554, 576, 579, 581, 584, 636, 639, 641, 644, 646, 649, 651, 654, 711, 714, 726, 729, 741, 744, 746, 749, 766, 770, 771, 775, 938, 963, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1328, 1331, 1343, 1346, 1347, 1704, 1730, 1731, 1734, 1736, 1739, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095, 2117, 2118, 2127, 2128, 2129, 2130, 2133, 2136, 2137, 2286, 2302], "instruct": [31, 32, 133, 142, 149, 150, 2128, 2131, 2134, 2136], "static": [31, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 145, 146, 148, 171, 191, 195, 197, 201, 202, 206, 207, 211, 212, 216, 217, 221, 222, 226, 227, 231, 239, 251, 253, 269, 273, 279, 283, 294, 298, 302, 306, 320, 321, 338, 342, 343, 347, 348, 352, 369, 373, 380, 384, 392, 395, 396, 400, 413, 417, 437, 441, 466, 470, 471, 475, 476, 480, 481, 485, 486, 490, 491, 495, 496, 500, 501, 505, 506, 510, 511, 515, 516, 520, 521, 525, 526, 530, 531, 535, 536, 540, 541, 545, 546, 550, 551, 555, 556, 560, 561, 565, 566, 570, 571, 575, 576, 580, 581, 585, 586, 590, 591, 595, 596, 600, 601, 605, 606, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 641, 645, 646, 650, 651, 655, 656, 660, 661, 665, 666, 670, 671, 675, 676, 680, 681, 685, 686, 690, 691, 695, 696, 700, 701, 705, 706, 710, 711, 715, 716, 720, 721, 725, 726, 730, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 756, 760, 761, 762, 766, 767, 771, 772, 776, 777, 781, 782, 793, 797, 798, 802, 803, 807, 808, 812, 813, 817, 818, 822, 823, 827, 828, 832, 833, 835, 837, 843, 847, 854, 857, 859, 862, 865, 869, 870, 874, 875, 879, 892, 896, 907, 911, 912, 916, 918, 922, 923, 927, 928, 932, 933, 937, 972, 976, 982, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1049, 1052, 1053, 1056, 1057, 1061, 1062, 1066, 1067, 1071, 1072, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1092, 1096, 1106, 1110, 1116, 1119, 1120, 1123, 1124, 1128, 1129, 1133, 1154, 1158, 1159, 1163, 1171, 1175, 1176, 1180, 1183, 1187, 1217, 1221, 1222, 1226, 1227, 1229, 1231, 1232, 1236, 1238, 1242, 1243, 1247, 1248, 1252, 1253, 1257, 1258, 1262, 1263, 1267, 1273, 1277, 1282, 1286, 1289, 1293, 1300, 1304, 1311, 1315, 1316, 1318, 1320, 1323, 1327, 1328, 1332, 1350, 1351, 1355, 1356, 1360, 1361, 1376, 1377, 1382, 1383, 1386, 1387, 1391, 1392, 1396, 1397, 1401, 1402, 1408, 1412, 1420, 1424, 1426, 1430, 1441, 1445, 1459, 1463, 1466, 1470, 1498, 1502, 1503, 1507, 1514, 1518, 1519, 1523, 1527, 1531, 1537, 1541, 1542, 1546, 1558, 1562, 1563, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1584, 1585, 1596, 1597, 1632, 1633, 1642, 1646, 1647, 1651, 1652, 1656, 1657, 1661, 1662, 1666, 1667, 1671, 1674, 1678, 1679, 1683, 1684, 1688, 1699, 1703, 1705, 1709, 1710, 1714, 1725, 1729, 1736, 1740, 1746, 1750, 1751, 1755, 1756, 1760, 1766, 1770, 1786, 1790, 1791, 1795, 1801, 1802, 1819, 1820, 1824, 1825, 1834, 1835, 1845, 1849, 1850, 1854, 1855, 1859, 1861, 1865, 1866, 1870, 1871, 1875, 1876, 1880, 1881, 1885, 1886, 1890, 1891, 1895, 1896, 1900, 1901, 1905, 1906, 1910, 1911, 1915, 1916, 1920, 1921, 1922, 1926, 1927, 1931, 1932, 1936, 1937, 1971, 1975, 1976, 1980, 1981, 1985, 1986, 1990, 1992, 1996, 1998, 2002, 2003, 2007, 2008, 2012, 2013, 2017, 2018, 2019, 2024, 2025, 2029, 2030, 2034, 2035, 2045, 2049, 2050, 2054, 2055, 2059, 2061, 2065, 2066, 2070, 2087, 2091, 2101, 2102, 2107, 2111, 2112, 2116, 2129, 2130, 2131, 2142, 2143], "method": [31, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 140, 141, 143, 144, 145, 146, 150, 151, 154, 155, 158, 159, 171, 172, 173, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 239, 244, 245, 251, 252, 253, 255, 256, 263, 264, 266, 269, 270, 271, 273, 279, 280, 281, 283, 284, 285, 289, 290, 294, 295, 296, 298, 302, 303, 304, 305, 306, 307, 309, 312, 314, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 369, 370, 371, 373, 380, 381, 382, 384, 392, 393, 395, 396, 397, 398, 400, 413, 414, 415, 417, 437, 438, 439, 441, 456, 457, 458, 459, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 835, 837, 838, 842, 843, 844, 845, 847, 849, 851, 853, 854, 855, 857, 859, 860, 862, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 879, 892, 893, 894, 896, 902, 903, 904, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 923, 924, 925, 927, 928, 930, 932, 933, 934, 935, 937, 938, 961, 972, 973, 974, 976, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1133, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1187, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1273, 1274, 1275, 1277, 1282, 1283, 1284, 1286, 1289, 1291, 1293, 1300, 1301, 1302, 1303, 1304, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1343, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1436, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1463, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1483, 1484, 1485, 1487, 1492, 1493, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1596, 1597, 1598, 1599, 1602, 1604, 1605, 1606, 1608, 1609, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1632, 1633, 1634, 1635, 1637, 1639, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1720, 1721, 1722, 1725, 1726, 1727, 1729, 1736, 1737, 1738, 1740, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1766, 1767, 1768, 1770, 1771, 1773, 1775, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1802, 1803, 1804, 1806, 1810, 1819, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1834, 1835, 1837, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1945, 1957, 1958, 1959, 1966, 1967, 1968, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2045, 2046, 2047, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2083, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2131, 2137, 2142, 2144, 2147, 2149, 2154, 2159, 2170, 2171, 2172, 2195, 2214, 2216, 2272, 2273, 2274, 2275, 2276, 2278], "arrai": [31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 171, 172, 183, 185, 186, 189, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 239, 241, 242, 244, 246, 251, 253, 254, 255, 258, 260, 261, 263, 266, 268, 269, 271, 272, 273, 274, 277, 279, 281, 282, 283, 284, 286, 287, 288, 289, 292, 294, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 311, 312, 316, 317, 319, 320, 321, 323, 324, 325, 333, 335, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 369, 371, 372, 373, 380, 382, 383, 384, 385, 387, 390, 392, 394, 396, 398, 399, 400, 401, 404, 406, 409, 411, 412, 413, 415, 416, 417, 423, 430, 436, 437, 439, 440, 441, 445, 449, 451, 455, 456, 457, 459, 460, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 785, 789, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 845, 846, 847, 848, 849, 852, 854, 855, 856, 857, 865, 867, 868, 869, 870, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 894, 895, 896, 898, 899, 900, 901, 902, 904, 905, 907, 909, 910, 911, 912, 914, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 974, 975, 976, 977, 980, 981, 982, 984, 985, 986, 987, 989, 990, 991, 992, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1098, 1100, 1101, 1102, 1106, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1154, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1217, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1270, 1271, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1287, 1289, 1291, 1292, 1293, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1323, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1405, 1407, 1408, 1410, 1411, 1412, 1415, 1417, 1418, 1419, 1420, 1423, 1424, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1438, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1479, 1483, 1485, 1486, 1487, 1492, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1527, 1529, 1530, 1531, 1533, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1553, 1554, 1556, 1558, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1574, 1575, 1577, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1594, 1596, 1597, 1599, 1600, 1601, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1632, 1633, 1635, 1636, 1638, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1691, 1692, 1694, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1717, 1718, 1720, 1722, 1723, 1725, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1738, 1739, 1740, 1741, 1744, 1746, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1764, 1766, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1779, 1781, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1804, 1805, 1806, 1810, 1811, 1814, 1815, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1869, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1958, 1959, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1992, 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2092, 2094, 2095, 2096, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2109, 2110, 2111, 2112, 2114, 2115, 2116, 2117, 2118, 2121, 2123, 2125, 2128, 2129, 2130, 2132, 2136, 2137, 2149, 2150, 2153, 2154, 2157, 2159, 2167, 2170, 2181, 2182, 2184, 2185, 2191, 2195, 2200, 2202, 2204, 2214, 2215, 2216, 2217, 2228, 2230, 2235, 2236, 2245, 2248, 2251, 2253, 2272, 2274, 2276, 2286, 2292, 2296], "revers": [31, 35, 38, 39, 53, 54, 55, 62, 63, 78, 79, 84, 89, 90, 101, 110, 111, 126, 127, 136, 137, 138, 140, 141, 148, 152, 159, 171, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1188, 1197, 1198, 1407, 1438, 1439, 1440, 1704, 1824, 1825, 1826, 1827, 1828, 1860, 1881, 1884, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070], "familiar": [31, 32, 142], "yourself": [31, 33, 148, 150, 152, 170], "hypothesi": [31, 33, 133, 137, 146, 2227, 2230, 2245, 2248, 2249, 2250, 2272, 2277, 2278], "pass": [31, 33, 53, 82, 83, 84, 87, 88, 89, 90, 101, 130, 131, 133, 134, 135, 136, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 171, 172, 173, 183, 325, 354, 412, 430, 431, 434, 455, 465, 501, 504, 838, 839, 840, 841, 842, 938, 958, 997, 1000, 1188, 1196, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1305, 1306, 1343, 1346, 1347, 1407, 1508, 1511, 1941, 1942, 1943, 2128, 2142, 2143, 2145, 2146, 2171, 2172, 2175, 2179, 2181, 2182, 2184, 2185, 2191, 2195, 2214, 2216, 2272, 2274, 2276, 2286, 2292], "fail": [31, 32, 33, 133, 137, 138, 140, 143, 148, 149, 2184, 2185, 2191], "els": [31, 33, 54, 55, 70, 71, 101, 118, 119, 133, 135, 138, 142, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 171, 325, 355, 356, 358, 359, 360, 362, 363, 843, 846, 880, 881, 938, 961, 982, 985, 1305, 1307, 1311, 1313, 1314, 1315, 1407, 1420, 1423, 1438, 1439, 1440, 1456, 1457, 1458, 1945, 1956, 1959, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2131, 2184, 2185, 2191], "cover": [31, 133, 134, 140, 141, 145, 146, 150, 152, 153], "lambda": [31, 142, 149, 154, 157, 189, 190, 196, 1407, 1438, 1440, 1602, 1613, 1618, 1638, 1640, 1694, 1697, 1945, 1953, 1954], "direct": [31, 53, 101, 134, 148, 152, 158, 159, 170, 907, 908, 909, 910, 911, 938, 944, 960, 965, 1002, 1005, 1007, 1010, 1188, 1197, 1198, 1207, 1273, 1274, 1276, 1316, 1319, 1396, 1398, 1400, 2044, 2055, 2058, 2126, 2130, 2131, 2134], "bind": [31, 136, 858, 1047, 1048, 2129, 2130], "defin": [31, 32, 45, 46, 53, 54, 55, 62, 63, 93, 94, 101, 102, 103, 110, 111, 134, 137, 138, 141, 144, 148, 149, 150, 151, 156, 158, 171, 239, 294, 295, 296, 297, 298, 465, 726, 729, 789, 790, 880, 882, 884, 885, 886, 887, 938, 958, 1049, 1051, 1116, 1118, 1120, 1122, 1176, 1177, 1178, 1179, 1180, 1188, 1206, 1207, 1248, 1251, 1282, 1285, 1316, 1317, 1318, 1319, 1320, 1368, 1371, 1372, 1375, 1407, 1498, 1499, 1501, 1502, 1503, 1504, 1506, 1507, 1704, 1710, 1711, 1712, 1713, 1714, 1731, 1734, 1736, 1739, 1796, 1799, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095, 2117, 2127, 2128, 2129, 2130, 2131, 2134, 2136, 2137, 2142, 2145], "def": [31, 32, 53, 101, 133, 134, 136, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 803, 804, 805, 806, 807, 938, 940, 1407, 1425, 1945, 1952, 2118], "special": [31, 35, 38, 39, 78, 79, 84, 89, 90, 110, 111, 133, 134, 137, 140, 141, 142, 144, 147, 149, 151, 152, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 536, 539, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 776, 780, 938, 963, 1328, 1331, 1781, 1785, 2060, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2092, 2095, 2096, 2100, 2101, 2103, 2105, 2130, 2131, 2132, 2149, 2157, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "sure": [31, 32, 33, 133, 137, 148, 149, 150, 152], "aforement": 31, "correct": [31, 33, 78, 79, 126, 127, 132, 136, 137, 138, 139, 143, 144, 145, 149, 150, 325, 423, 1860, 1861, 1864, 2060, 2092, 2093, 2094, 2095, 2101, 2102, 2103, 2104, 2105, 2118, 2195, 2213, 2214, 2215, 2216], "categori": [31, 133, 134, 136, 138, 148, 151, 153, 2118], "parent": [31, 137, 156, 1602, 1631, 1639, 2147, 2148], "arraywithelementwis": [31, 35, 38, 39, 51, 134, 156], "containerwithmanipul": [31, 84, 89, 90, 114], "hint": [31, 45, 46, 51, 52, 62, 63, 99, 100, 134, 141, 144, 145, 147, 148, 151, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 892, 895, 907, 910, 917, 928, 931, 938, 944, 961, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1311, 1314, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115], "add": [31, 32, 33, 35, 38, 39, 51, 52, 68, 69, 82, 83, 84, 87, 88, 89, 90, 99, 100, 116, 117, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 147, 148, 150, 151, 152, 154, 156, 171, 465, 485, 1407, 1533, 1589, 1602, 1631, 1639, 1965, 1966, 1967, 1968, 1969, 2118, 2126, 2128, 2130, 2173, 2174, 2195, 2215, 2272, 2277], "thorough": [31, 141, 144, 150], "ensur": [31, 32, 33, 54, 55, 134, 138, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 1407, 1508, 1509, 1511, 2130, 2184, 2185], "produc": [31, 53, 60, 61, 101, 108, 109, 138, 149, 150, 151, 789, 791, 880, 883, 1053, 1054, 1055, 1056, 1295, 1296, 1298, 1640, 1699, 1700, 1701, 1702, 1703, 2131, 2133], "comment": [31, 32, 33, 133, 138, 143, 148], "add_reformatting_checklist_": 31, "category_nam": [31, 138, 139, 141, 144, 145], "pr": [31, 33, 133, 148, 149, 150], "belong": [31, 87, 88, 133, 158], "shown": [31, 33, 82, 83, 87, 88, 130, 131, 133, 137, 138, 140, 142, 143, 144, 148, 149, 150, 151, 154, 156, 171, 465, 621, 624, 938, 961, 1311, 1314, 1407, 1490], "trigger": [31, 2171, 2172], "autom": [31, 137, 150, 2117, 2118, 2132], "bot": 31, "proper": [31, 148], "markdown": 31, "text": [31, 33, 140, 141], "might": [31, 32, 33, 54, 55, 137, 138, 140, 142, 143, 146, 147, 148, 150, 151, 152, 154, 156, 157, 325, 412, 1407, 1438, 1439, 1440, 2117], "moment": [31, 56, 57, 104, 105, 135, 171, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2175, 2176, 2177], "patient": [31, 32], "modifi": [31, 32, 33, 53, 87, 88, 101, 133, 135, 138, 139, 141, 143, 145, 149, 150, 151, 154, 1077, 1078, 1079, 1080, 1081, 1188, 1202, 1206, 1258, 1259, 1260, 1261, 1282, 1285, 1343, 1347], "item": [31, 40, 44, 54, 55, 82, 83, 87, 88, 101, 102, 103, 136, 138, 154, 156, 157, 159, 325, 358, 430, 436, 907, 909, 911, 992, 994, 996, 1035, 1037, 1039, 1171, 1173, 1175, 1248, 1250, 1252, 1323, 1325, 1327, 1407, 1436, 1466, 1467, 1468, 1469, 1470, 1489, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1602, 1637, 1945, 1951, 1952, 1953, 1954, 1958, 1963, 1964, 2118, 2171, 2172], "symbol": [31, 32, 2130, 2131], "emoji": 31, "within": [31, 33, 40, 43, 44, 53, 101, 134, 137, 148, 149, 150, 158, 171, 239, 241, 242, 798, 799, 801, 808, 810, 812, 813, 815, 817, 818, 820, 822, 938, 939, 955, 1106, 1109, 1970, 1986, 1989, 2126, 2127, 2131, 2142, 2145], "legend": 31, "mark": [31, 33, 133, 150, 154, 2184, 2185, 2191], "review": [31, 33, 137, 140, 148, 151], "checkbox": [31, 32], "proce": [31, 32], "elabor": 31, "struggl": 31, "assigne": 31, "author": [31, 33, 2118, 2128, 2132], "later": [31, 87, 88, 150, 1407, 1425, 2130], "status": 31, "manual": [31, 32, 33, 148, 150, 158, 1945, 1946, 1956, 1957], "refrain": 31, "transpil": [31, 142, 148, 153, 154, 155, 2117, 2118, 2130, 2136, 2137], "locat": [31, 33, 135, 139, 148, 149, 150, 151, 239, 294, 297, 1970, 1971, 1974, 2044, 2050, 2053, 2128], "subsect": [31, 33, 133, 137], "verifi": [31, 138, 139, 148, 150, 151], "miss": [31, 32, 134, 136, 137, 140, 143, 150, 2175, 2179], "simpler": [31, 33, 148, 2131, 2137], "titl": [31, 33, 148, 2118], "label": [31, 33, 64, 65, 101, 112, 113, 133, 137, 148, 153, 154, 155, 159, 854, 855, 856, 857, 1181, 1182, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 2130], "suggest": [31, 32, 33, 138, 148, 150, 151], "simpli": [31, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 152, 154, 158, 159, 171, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 244, 245, 251, 252, 255, 256, 263, 264, 269, 270, 271, 273, 279, 280, 281, 283, 284, 285, 289, 290, 294, 295, 296, 298, 302, 303, 304, 306, 307, 309, 312, 314, 320, 321, 322, 323, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 380, 381, 382, 384, 392, 393, 395, 396, 397, 398, 400, 413, 414, 415, 417, 437, 438, 439, 441, 456, 457, 458, 459, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 835, 837, 843, 844, 845, 847, 854, 855, 857, 859, 860, 862, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 879, 892, 893, 894, 896, 902, 903, 904, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 923, 924, 925, 927, 928, 930, 932, 933, 934, 935, 937, 972, 973, 974, 976, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1133, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1187, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1273, 1274, 1275, 1277, 1282, 1283, 1284, 1286, 1289, 1291, 1293, 1300, 1301, 1302, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1343, 1347, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1463, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1483, 1484, 1485, 1487, 1492, 1493, 1498, 1499, 1500, 1502, 1503, 1507, 1508, 1509, 1510, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1537, 1538, 1539, 1541, 1542, 1544, 1546, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1596, 1597, 1598, 1599, 1604, 1605, 1606, 1608, 1609, 1614, 1615, 1616, 1619, 1620, 1623, 1624, 1627, 1628, 1632, 1633, 1634, 1635, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1699, 1700, 1701, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1720, 1721, 1722, 1725, 1726, 1727, 1729, 1736, 1737, 1738, 1740, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1802, 1803, 1804, 1824, 1825, 1834, 1835, 1837, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1966, 1967, 1968, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2045, 2046, 2047, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2059, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2075, 2076, 2077, 2079, 2080, 2081, 2083, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2112, 2113, 2114, 2116, 2117, 2131, 2136], "leav": [31, 40, 43, 44, 84, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 126, 127, 136, 138, 140, 141, 144, 145, 147, 148, 150, 157, 158, 369, 371, 373, 380, 382, 384, 561, 563, 997, 999, 1001, 1092, 1094, 1096, 1129, 1131, 1133, 1176, 1178, 1180, 1183, 1185, 1187, 1420, 1422, 1459, 1461, 1463, 1574, 1575, 1667, 1669, 1671, 1699, 1701, 1703, 1725, 1727, 1729, 1801, 1802, 1804, 1860, 1871, 1873, 1875, 1891, 1893, 1916, 1918, 1919, 1920, 1926, 1927, 1929, 1931, 1932, 1934, 1945, 1946, 1947, 1956, 1957, 1958, 1959, 2061, 2063, 2065, 2066, 2068, 2070, 2195, 2197], "assess": [31, 152], "appropri": [31, 33, 72, 73, 82, 83, 120, 121, 130, 131, 146, 150, 465, 481, 484, 798, 801, 938, 939, 955, 1106, 1109, 1997, 1998, 1999, 2000, 2001, 2002], "wait": [31, 33, 84, 87, 88, 89, 90, 137, 148, 1407, 1552], "option": [31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 159, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 356, 358, 359, 360, 362, 363, 380, 382, 384, 386, 392, 395, 396, 400, 413, 415, 417, 429, 430, 436, 451, 453, 454, 455, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 922, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1206, 1207, 1208, 1209, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1461, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1529, 1531, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1589, 1596, 1597, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1796, 1799, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1956, 1957, 1958, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2136, 2142, 2143, 2149, 2150, 2153, 2175, 2176, 2177, 2179, 2181, 2182, 2195, 2213, 2214, 2215, 2216, 2241, 2243, 2272, 2277, 2286, 2294], "composit": [31, 132, 134, 135, 136, 138, 147, 149, 150, 152, 154, 158, 159, 171, 938, 964, 1124, 1127, 1164, 1169, 1365, 1367, 2117, 2131], "temporari": [31, 138, 1407, 1491, 1555], "merg": [31, 33, 133, 137, 148, 2130], "close": [31, 32, 33, 62, 63, 141, 148, 152, 465, 581, 584, 646, 649, 731, 734, 1704, 1801, 1803, 1805, 1860, 1876, 1879, 2130], "normal": [31, 53, 68, 69, 70, 71, 101, 116, 117, 118, 119, 148, 152, 157, 892, 893, 894, 895, 896, 898, 900, 928, 931, 938, 963, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1141, 1144, 1145, 1164, 1167, 1183, 1184, 1185, 1186, 1187, 1278, 1279, 1280, 1281, 1328, 1331, 1860, 1866, 1869, 1916, 1919, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1981, 1982, 1983, 1984, 1985, 2128, 2149, 2154, 2173, 2174], "altern": [31, 32, 53, 101, 147, 148, 157, 798, 799, 800, 801, 802, 938, 939, 955, 959, 960, 965, 966, 1072, 1074, 1076, 1106, 1107, 1108, 1109, 1110, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 2133], "composition": [31, 147], "choos": [31, 32, 33, 49, 50, 72, 73, 97, 98, 150, 155, 159, 430, 456, 457, 458, 459, 460, 465, 666, 669, 671, 674, 1997, 2018, 2020, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095, 2137], "decid": [31, 32, 87, 88, 138, 152, 1945, 1946, 1947, 1956, 1957, 1958], "addit": [31, 32, 33, 49, 50, 53, 54, 55, 68, 69, 97, 98, 101, 102, 103, 116, 117, 136, 138, 140, 141, 148, 150, 151, 152, 156, 157, 159, 430, 456, 457, 458, 459, 460, 465, 481, 484, 731, 734, 870, 871, 872, 874, 1407, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1601, 1965, 1966, 1967, 1968, 1969, 2130, 2131, 2132, 2136, 2159, 2169], "potenti": [31, 32, 33, 137, 138, 148, 153, 465, 581, 584, 646, 649, 2133], "pend": 31, "show": [31, 32, 33, 137, 140, 147, 148, 150, 170, 171, 1407, 1490, 1548, 1554, 1595, 2118, 2130, 2147, 2148], "helpfulli": [31, 152, 2128], "prevent": [31, 33, 56, 57, 104, 105, 137, 138, 142, 143, 147, 148, 151, 152, 1407, 1425, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1679, 1682, 2060, 2096, 2100, 2149, 2153, 2175, 2176, 2177], "problemat": [31, 32], "unimpl": 31, "final": [31, 33, 45, 46, 54, 55, 102, 103, 133, 134, 137, 138, 140, 141, 143, 145, 147, 148, 152, 153, 157, 239, 274, 277, 279, 280, 282, 1407, 1459, 1460, 1461, 1462, 1463, 2126, 2136, 2159, 2170], "issue_link": 31, "chosen": [31, 137, 148, 239, 241, 242, 465, 501, 504, 1997, 2018, 2022], "correctli": [31, 32, 33, 53, 62, 63, 72, 73, 101, 110, 111, 120, 121, 134, 136, 138, 140, 142, 143, 144, 147, 149, 150, 152, 158, 171, 875, 876, 877, 878, 879, 938, 943, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1300, 1301, 1302, 1303, 1304, 1343, 1346, 1347, 1348, 1704, 1756, 1757, 1758, 1759, 1760, 1997, 1998, 1999, 2000, 2001, 2002], "alias": [31, 148, 149, 2195, 2213, 2272, 2274], "detect": [31, 32, 51, 52, 87, 88, 99, 100, 135, 136, 137, 143, 150, 157, 158, 465, 611, 612, 613, 614, 615, 1945, 1946, 1957], "alias_nam": 31, "function_nam": [31, 35, 38, 39], "notic": [31, 134, 137, 152], "alia": [31, 148, 233], "alreadi": [31, 32, 33, 53, 87, 88, 101, 135, 136, 138, 144, 148, 152, 171, 465, 541, 544, 586, 589, 731, 734, 776, 780, 813, 816, 818, 821, 1188, 1190, 1191, 1206, 1258, 1259, 1260, 1261, 1282, 1285, 1343, 1347, 1704, 1741, 1744, 1776, 1779, 2118, 2130, 2132, 2137], "push": [31, 33, 133, 143, 149, 150, 2136], "liner": 31, "default": [31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 138, 139, 140, 141, 142, 144, 145, 146, 148, 150, 152, 154, 158, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 350, 352, 355, 356, 358, 359, 360, 362, 363, 364, 366, 374, 375, 377, 378, 380, 382, 384, 385, 392, 393, 395, 396, 398, 400, 411, 413, 415, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 436, 437, 438, 439, 440, 443, 444, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 922, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1206, 1207, 1208, 1209, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1552, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1574, 1575, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1954, 1956, 1957, 1958, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2130, 2142, 2143, 2146, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2195, 2213, 2214, 2215, 2216, 2227, 2231, 2235, 2236, 2241, 2243, 2256, 2257, 2258, 2259, 2272, 2275, 2276, 2277, 2286, 2294], "meanwhil": [31, 137], "reselect": 31, "too": [31, 32, 33, 133, 138, 142, 143, 171, 465, 481, 484, 2149, 2153], "placement": 31, "categoris": [31, 133, 148], "faithfulli": 31, "descript": [31, 45, 46, 51, 52, 62, 63, 99, 100, 110, 111, 141, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 892, 895, 907, 910, 917, 928, 931, 938, 944, 961, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1311, 1314, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115], "inner": [31, 62, 63, 93, 94, 110, 111, 147, 239, 294, 296, 297, 298, 1704, 1730, 1731, 1734, 1751, 1754, 1941, 1942, 1943, 1944], "fall": [31, 33, 138, 153, 2118, 2171, 2172, 2175, 2179], "under": [31, 32, 33, 132, 133, 136, 140, 141, 145, 148, 149, 150, 152, 153, 154, 157, 159, 171, 2130, 2133, 2137], "linalg": [31, 147, 149, 1704, 1736, 1737, 1791, 1794, 2118], "match": [31, 47, 48, 53, 87, 88, 95, 96, 101, 134, 136, 140, 149, 325, 333, 334, 335, 336, 337, 465, 726, 729, 865, 868, 907, 908, 909, 910, 911, 938, 942, 944, 1188, 1208, 1350, 1354, 1407, 1533, 2131, 2136, 2184, 2185, 2191], "creation_routin": [31, 149], "fft": [31, 53, 101, 898, 900, 991, 1134, 1141, 2130], "indexing_routin": 31, "logic": [31, 80, 81, 128, 129, 134, 137, 138, 139, 142, 146, 148, 150, 152, 156, 430, 447, 465, 661, 664, 666, 669, 671, 674, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118], "ma": 31, "manipulation_routin": 31, "mathematical_funct": [31, 148], "matrix": [31, 35, 38, 39, 45, 46, 54, 55, 60, 61, 62, 63, 102, 103, 108, 109, 110, 111, 138, 148, 239, 284, 285, 287, 307, 311, 312, 316, 848, 880, 881, 886, 887, 982, 985, 1134, 1138, 1164, 1170, 1212, 1215, 1368, 1371, 1372, 1375, 1407, 1408, 1409, 1410, 1411, 1412, 1426, 1427, 1428, 1429, 1430, 1640, 1684, 1685, 1686, 1687, 1688, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1728, 1730, 1731, 1734, 1736, 1739, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1839, 1843, 2128, 2130, 2149, 2150, 2153, 2154, 2157, 2159, 2169, 2245, 2252], "ndarrai": [31, 45, 46, 53, 54, 55, 101, 134, 138, 139, 144, 147, 148, 149, 151, 152, 154, 156, 159, 239, 244, 245, 246, 289, 292, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1343, 1346, 1347, 1407, 1579, 1581, 1583, 2117, 2286, 2296], "random": [31, 53, 60, 61, 71, 87, 88, 101, 108, 109, 119, 139, 149, 150, 151, 159, 170, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 912, 913, 914, 915, 916, 1032, 1033, 1034, 1289, 1290, 1291, 1292, 1293, 1306, 1307, 1308, 1309, 1310, 1640, 1679, 1680, 1681, 1682, 1683, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2118, 2130, 2227, 2236, 2238, 2245, 2253], "sorting_searching_count": 31, "statist": [31, 53, 79, 101, 127, 130, 131, 138, 150, 151, 1092, 1093, 1094, 1095, 1096, 1188, 1206, 1278, 1279, 1282, 1285, 1344, 1345, 1346, 1347, 1348, 1349, 2061, 2064, 2066, 2069, 2071, 2074, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2130], "ufunc": [31, 148], "hierarchi": [31, 87, 88, 157, 2126, 2136], "__init__": [31, 35, 38, 39, 84, 87, 88, 89, 90, 134, 135, 138, 142, 148, 151, 154, 156, 157, 158, 159, 239, 240, 325, 326, 327, 328, 329, 330, 430, 431, 432, 788, 848, 889, 1134, 1138, 1139, 1151, 1287, 1336, 1338, 1602, 1603, 2118, 2124, 2125, 2139, 2140, 2141, 2142, 2144, 2145, 2149, 2150, 2151, 2152, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2218, 2219, 2220, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2282, 2283, 2284, 2286, 2287, 2292, 2294], "py": [31, 32, 33, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 156, 158, 159, 848, 889, 1134, 1138, 1139, 1151, 1287, 2286, 2292, 2294], "decomposit": [31, 62, 63, 110, 111, 1704, 1705, 1708, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 2137], "matrix_and_vector_product": 31, "matrix_eigenvalu": 31, "norms_and_other_numb": 31, "solving_equations_and_inverting_matric": 31, "product": [31, 51, 52, 60, 61, 62, 63, 78, 79, 99, 100, 101, 108, 109, 110, 111, 126, 127, 154, 465, 691, 692, 693, 694, 1124, 1127, 1128, 1164, 1169, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1710, 1711, 1712, 1713, 1714, 1741, 1744, 1751, 1754, 1776, 1779, 1829, 1833, 2060, 2061, 2062, 2063, 2064, 2066, 2069, 2071, 2074, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2130, 2132, 2159, 2170], "seem": [31, 32, 152, 158, 159, 171, 2130], "np": [31, 45, 46, 53, 99, 100, 101, 102, 103, 134, 138, 139, 142, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 239, 251, 252, 253, 465, 621, 623, 624, 793, 794, 795, 796, 797, 890, 891, 938, 954, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104, 1134, 1144, 1145, 1164, 1165, 1407, 1558, 1561, 1562, 1945, 1952, 2117, 2118, 2195, 2215, 2286, 2292], "func": [31, 87, 88, 133, 134, 140, 142, 147, 173, 187, 430, 455, 858, 1047, 1048, 1407, 1425, 1601, 1602, 1612, 1613, 1618, 1638, 1945, 1959, 2195, 2207], "gleam": 31, "yet": [31, 32, 171], "uncom": 31, "test_numpy_inn": 31, "mirror": [31, 1188, 1206, 1282, 1285, 2130], "correspond": [31, 33, 47, 48, 51, 52, 53, 54, 55, 60, 61, 66, 67, 78, 79, 84, 87, 88, 89, 90, 95, 96, 99, 100, 101, 108, 109, 114, 115, 126, 127, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 148, 150, 152, 154, 189, 190, 196, 325, 338, 339, 340, 341, 342, 369, 371, 373, 380, 382, 384, 465, 501, 502, 503, 504, 505, 711, 712, 714, 793, 797, 898, 900, 928, 930, 931, 932, 933, 935, 937, 938, 946, 947, 964, 992, 993, 995, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1124, 1128, 1134, 1141, 1164, 1167, 1188, 1197, 1198, 1365, 1366, 1367, 1407, 1558, 1559, 1601, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1704, 1710, 1713, 1730, 1731, 1734, 1756, 1759, 1791, 1794, 1796, 1799, 1860, 1901, 1902, 1903, 1904, 1905, 1970, 1971, 1974, 1997, 1998, 2001, 2003, 2006, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2130, 2195, 2200, 2214, 2216, 2227, 2235], "ivy_test": [31, 32, 33, 133, 137, 149, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279], "test_ivi": [31, 32, 33, 137, 149, 150, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279], "test_frontend": [31, 137, 149], "unsur": [31, 150], "put": [31, 150, 171, 2136], "explor": [31, 32, 33, 138, 152, 155, 159, 170, 2130, 2133], "outer": [31, 62, 63, 110, 111, 1704, 1941, 1942, 1943, 1944], "confirm": 31, "ve": [31, 32, 33, 70, 71, 118, 119, 150, 152, 153, 156, 1970, 1971, 1972, 1973, 1974, 1975, 2117, 2118], "empti": [31, 32, 35, 38, 39, 54, 55, 84, 87, 88, 89, 90, 102, 103, 134, 138, 139, 239, 241, 242, 1188, 1206, 1282, 1285, 1407, 1426, 1429, 1542, 1543, 1544, 1545, 1546, 1602, 1631, 1637, 1639, 1945, 1960, 2060, 2096, 2100, 2106, 2107, 2110, 2112, 2115], "along": [31, 36, 37, 45, 46, 53, 54, 55, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 93, 94, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 140, 147, 151, 152, 154, 202, 203, 204, 206, 222, 223, 224, 226, 239, 274, 277, 279, 280, 281, 282, 283, 430, 455, 875, 876, 877, 878, 879, 892, 895, 907, 908, 909, 910, 911, 918, 919, 921, 923, 926, 938, 943, 944, 959, 964, 987, 988, 989, 990, 991, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1095, 1129, 1130, 1131, 1132, 1133, 1134, 1140, 1144, 1145, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1194, 1197, 1198, 1206, 1209, 1232, 1233, 1234, 1235, 1236, 1243, 1246, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1278, 1279, 1280, 1281, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1333, 1335, 1343, 1345, 1346, 1347, 1348, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1407, 1441, 1444, 1466, 1467, 1468, 1469, 1470, 1704, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1866, 1867, 1869, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1916, 1917, 1918, 1919, 1920, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1941, 1942, 1943, 1944, 1970, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2195, 2207], "backend_nam": [31, 135, 138, 139, 141, 144, 145, 146], "relevant_submodul": 31, "sometim": [31, 32, 33, 133, 138, 148, 150, 151, 152], "behav": [31, 133, 142, 147, 148, 149, 156, 1704, 1730, 2131], "helper": [31, 138, 142, 157, 325, 353, 2117, 2148, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2242, 2243, 2244, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2273, 2274, 2275, 2276, 2277, 2278, 2279], "recreat": [31, 133], "defer": [31, 134, 136, 138, 139, 145, 146, 147, 148, 150, 2136], "clearer": [31, 142, 149, 157], "mind": [31, 134, 136, 150], "posit": [31, 33, 40, 41, 42, 51, 52, 53, 54, 55, 62, 63, 66, 67, 99, 100, 101, 102, 103, 110, 111, 114, 115, 133, 136, 146, 148, 150, 151, 157, 170, 233, 239, 260, 261, 325, 369, 372, 465, 466, 469, 606, 609, 611, 612, 613, 614, 615, 710, 721, 724, 726, 729, 798, 801, 854, 855, 856, 857, 865, 866, 867, 868, 869, 880, 881, 886, 887, 902, 905, 938, 939, 942, 955, 958, 982, 983, 984, 985, 1106, 1109, 1164, 1166, 1181, 1182, 1188, 1203, 1238, 1239, 1240, 1241, 1242, 1248, 1249, 1250, 1251, 1252, 1368, 1371, 1372, 1375, 1407, 1425, 1459, 1460, 1461, 1462, 1463, 1601, 1704, 1705, 1706, 1707, 1708, 1709, 1720, 1723, 1819, 1820, 1821, 1822, 1860, 1876, 1877, 1878, 1879, 1880, 1901, 1902, 1903, 1904, 1905, 1970, 1991, 1997, 2013, 2016, 2106, 2107, 2110, 2112, 2115, 2132, 2142, 2143, 2146, 2195, 2214, 2216, 2227, 2230, 2272, 2274, 2276, 2277, 2278], "keyword": [31, 40, 41, 42, 45, 46, 84, 87, 88, 89, 90, 134, 136, 138, 139, 146, 147, 148, 149, 150, 151, 157, 172, 183, 239, 284, 285, 287, 938, 958, 1188, 1206, 1248, 1251, 1282, 1285, 1407, 1414, 1425, 1533, 1589, 1945, 1952, 2060, 2096, 2100, 2171, 2172, 2184, 2188, 2189, 2190, 2195, 2200, 2213, 2214, 2215, 2216], "paramet": [31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 141, 142, 144, 146, 148, 149, 150, 151, 154, 156, 157, 170, 172, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 928, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1483, 1484, 1485, 1486, 1487, 1489, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2121, 2123, 2131, 2142, 2143, 2146, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2184, 2185, 2187, 2188, 2189, 2190, 2191, 2195, 2200, 2213, 2214, 2215, 2216, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2244, 2245, 2246, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2286, 2292, 2293, 2294, 2297], "strategi": [31, 146, 149, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2272, 2273, 2274, 2275, 2276, 2277, 2278], "draw": [31, 70, 71, 118, 119, 133, 149, 150, 838, 841, 912, 915, 1289, 1292, 1305, 1306, 1308, 1310, 1970, 1971, 1972, 1973, 1974, 1975, 1981, 1984, 1986, 1989, 2149, 2151, 2152, 2156, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "realli": [32, 136, 171, 2135, 2136], "button": [32, 33], "top": [32, 33, 53, 66, 67, 101, 138, 148, 150, 157, 158, 1188, 1209, 1360, 1361, 1362, 1363, 1364, 1407, 1441, 1444, 1866, 1867, 2130, 2134, 2147, 2148], "account": [32, 53, 66, 67, 101, 114, 115, 137, 141, 148, 997, 998, 999, 1000, 1001, 1188, 1196, 1860, 1896, 1897, 1898, 1899, 1900, 2149, 2154], "your_usernam": 32, "gh": 32, "your_fold": 32, "upstream": [32, 33, 133, 858, 1047, 1048], "sync": [32, 133], "cours": [32, 33, 133, 134, 140, 148, 151, 152, 157, 171, 2135, 2136], "whatev": [32, 136, 171], "elig": 32, "student": 32, "licenc": 32, "remind": 32, "licens": [32, 2133], "expir": 32, "abl": [32, 33, 87, 88, 133, 138, 145, 147, 148, 152, 154, 159, 2133, 2136], "profession": 32, "trial": 32, "jetbrain": 32, "valid": [32, 53, 60, 61, 80, 81, 101, 108, 109, 128, 129, 135, 138, 140, 149, 150, 325, 354, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1407, 1519, 1522, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1860, 1876, 1879, 1916, 1919, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2131, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2227, 2230, 2235, 2236, 2241, 2242, 2244], "bui": [32, 2136], "paid": 32, "pace": 32, "align": [32, 33, 53, 87, 88, 101, 148, 154, 156, 902, 903, 904, 905, 906, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1164, 1166, 2117, 2136], "stabl": [32, 54, 55, 76, 77, 102, 103, 124, 125, 135, 138, 148, 154, 171, 465, 731, 734, 880, 886, 887, 1159, 1162, 1333, 1334, 1368, 1371, 1372, 1375, 1407, 1480, 1481, 1549, 1550, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2056, 2057, 2058, 2059, 2245, 2252], "mayb": [32, 40, 43, 44, 137, 154, 156], "person": [32, 33], "experi": [32, 150, 155, 157, 171], "avoid": [32, 33, 53, 101, 135, 136, 137, 138, 143, 146, 148, 150, 151, 465, 581, 584, 646, 649, 818, 821, 1092, 1093, 1094, 1095, 1096, 1188, 1191, 1278, 1279, 1407, 1425, 2130, 2245, 2252, 2256, 2257], "abil": [32, 152, 155, 171, 2130], "certain": [32, 33, 87, 88, 133, 138, 142, 150, 152, 171, 239, 241, 242, 274, 277, 279, 282, 2134], "perhap": [32, 156, 157, 158, 171, 2136], "track": [32, 33, 53, 101, 133, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 1602, 1603, 1945, 1958, 2130, 2147, 2148, 2171, 2172], "click": [32, 33, 137, 141, 155, 2118], "icon": [32, 33], "side": [32, 33, 76, 77, 124, 125, 938, 953, 1072, 1075, 2044, 2050, 2051, 2052, 2053, 2054], "left": [32, 33, 53, 62, 63, 72, 73, 76, 77, 101, 110, 111, 120, 121, 124, 125, 133, 137, 138, 140, 465, 521, 524, 875, 876, 877, 878, 879, 938, 943, 959, 1002, 1005, 1097, 1134, 1146, 1188, 1197, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1343, 1345, 1346, 1347, 1348, 1407, 1441, 1444, 1704, 1730, 1731, 1734, 1756, 1757, 1758, 1759, 1760, 1801, 1802, 1803, 1804, 1805, 1824, 1825, 1826, 1827, 1828, 1997, 1998, 1999, 2000, 2001, 2002, 2044, 2050, 2051, 2052, 2053, 2054], "panel": 32, "drop": [32, 171, 2149, 2157], "down": [32, 53, 101, 142, 150, 1007, 1010, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1198, 2117, 2130, 2136, 2147, 2148], "builtin": [32, 156, 158], "virtualenv": 32, "o": [32, 132, 137, 154, 1407, 1533], "tick": [32, 33, 137], "test_array_api": [32, 33, 133, 150], "r": [32, 33, 53, 62, 63, 87, 88, 101, 110, 111, 132, 149, 858, 938, 952, 1042, 1043, 1044, 1045, 1047, 1048, 1602, 1612, 1704, 1786, 1787, 1788, 1789, 1790, 1860, 1931, 1935], "txt": [32, 133, 151], "visual": [32, 148, 171, 2130, 2132, 2135], "mitig": [32, 2136], "conflict": [32, 33, 137, 148, 157], "particular": [32, 33, 133, 135, 137, 138, 140, 146, 147, 148, 150, 151, 152, 465, 466, 469, 666, 669, 2126, 2130, 2136, 2241, 2244], "system": [32, 33, 135, 137, 138, 171, 1704, 1796, 1799, 2128, 2130, 2133, 2135, 2137], "jaxlib": [32, 134, 138, 139, 144, 151, 154, 156, 2286, 2296], "wsl": 32, "powershel": 32, "admin": 32, "visit": [32, 33, 137], "deploy": [32, 2129, 2132, 2133, 2136, 2137], "press": [32, 33, 157, 2118], "ok": 32, "debug": [32, 33, 136, 137, 150, 152, 157, 2130], "dialog": 32, "invalid": [32, 80, 81, 128, 129, 138, 143, 1704, 1829, 1833, 1860, 1876, 1879, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2227, 2231], "caus": [32, 33, 133, 135, 136, 137, 138, 140, 147, 149, 150, 171], "earlier": [32, 33], "necessari": [32, 33, 53, 66, 67, 101, 114, 115, 134, 135, 136, 140, 146, 147, 148, 150, 152, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 1188, 1189, 1190, 1860, 1896, 1897, 1898, 1899, 1900], "virtualis": 32, "On": [32, 138, 148, 150, 155, 159], "dropdown": 32, "menu": 32, "server": [32, 33, 2130], "tag": [32, 33], "suitabl": [32, 33, 101, 136, 151, 880, 884, 885, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 2044, 2050, 2053, 2130, 2245, 2252], "navig": [32, 33, 132], "tab": [32, 137, 157, 2118], "m1": 32, "optional_m1_1": 32, "optional_m1_2": 32, "sudo": 32, "apt": 32, "ca": 32, "certif": 32, "curl": 32, "gnupg": 32, "lsb": 32, "mkdir": [32, 137], "p": [32, 33, 53, 54, 55, 101, 102, 103, 110, 111, 132, 239, 284, 287, 938, 945, 972, 975, 1134, 1152, 1153, 1183, 1184, 1185, 1186, 1187, 1278, 1281, 1288, 1294, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1704, 1756, 1759, 1834, 1835, 1837, 1838, 1945, 1954, 2159, 2167], "keyr": 32, "fssl": 32, "download": [32, 150], "gpg": 32, "dearmor": 32, "echo": [32, 137], "deb": 32, "arch": 32, "dpkg": 32, "print": [32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 149, 150, 154, 156, 157, 158, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 251, 253, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 282, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 317, 319, 320, 324, 325, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 384, 386, 392, 393, 395, 396, 398, 399, 400, 401, 404, 413, 414, 415, 416, 417, 429, 430, 431, 433, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 792, 798, 799, 800, 801, 802, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 854, 855, 856, 857, 859, 860, 861, 862, 880, 881, 886, 887, 892, 895, 917, 938, 939, 961, 963, 967, 970, 982, 983, 984, 985, 986, 1067, 1068, 1069, 1070, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1142, 1143, 1148, 1149, 1150, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1187, 1188, 1192, 1201, 1204, 1205, 1206, 1208, 1209, 1211, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1248, 1250, 1270, 1271, 1282, 1285, 1300, 1302, 1304, 1311, 1314, 1315, 1316, 1318, 1320, 1328, 1329, 1330, 1331, 1332, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1391, 1392, 1393, 1395, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1481, 1483, 1484, 1486, 1488, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1533, 1536, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1593, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1974, 1976, 1979, 1992, 1993, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2147, 2148, 2286, 2292, 2294, 2296, 2302], "architectur": [32, 159, 171, 2128, 2129, 2130, 2133, 2134, 2135], "lsb_releas": 32, "tee": 32, "dev": [32, 49, 50, 87, 88, 97, 98, 139, 145, 156, 158, 239, 299, 300, 430, 441, 445, 451], "null": 32, "ce": 32, "cli": 32, "containerd": 32, "io": [32, 137], "compos": [32, 136, 148, 150, 171, 2130, 2137, 2147, 2148], "plugin": 32, "systemctl": 32, "permiss": [32, 137], "post": [32, 68, 69, 116, 117, 159, 1965, 1966, 1967, 1968, 1969], "coupl": [32, 134, 156, 158, 2130], "unit": [32, 53, 85, 86, 101, 133, 138, 148, 149, 150, 171, 189, 191, 193, 194, 195, 197, 199, 200, 201, 202, 204, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 789, 792, 928, 931, 1129, 1130, 1164, 1167, 1355, 1356, 1358, 1359, 2131, 2134], "test_ab": [32, 150], "context": [32, 33, 60, 61, 108, 109, 140, 430, 431, 1407, 1534, 1602, 1603, 1640, 1694, 1695, 1696, 1697, 1698, 2159, 2170], "editor": 32, "green": [32, 33, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 2306, 2307], "appear": [32, 33, 133, 148, 152, 1002, 1005, 1007, 1010, 1188, 1197, 1198, 1407, 1601], "pytest": [32, 33, 133, 137, 150], "keyboard": 32, "shortcut": [32, 1188, 1206, 1282, 1285], "displai": [32, 136, 142, 150, 157], "screenshot": 32, "henc": [32, 136, 137, 150, 1860, 1876, 1879, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2286, 2302], "ctrl": [32, 33], "shift": [32, 33, 66, 67, 84, 89, 90, 93, 94, 114, 115, 140, 144, 269, 271, 273, 465, 521, 524, 531, 534, 880, 886, 887, 1368, 1371, 1372, 1375, 1860, 1901, 1902, 1903, 1904, 1905], "bottom": [32, 137, 1407, 1441, 1444, 2136], "screen": [32, 87, 88, 157], "elsewher": [32, 53, 101, 239, 260, 261, 880, 881, 982, 983, 984, 985, 986, 1997, 2018, 2022], "test_elementwis": 32, "progress": [32, 33, 159, 1704, 1824, 1828], "bar": 32, "shell": [32, 33], "run_tests_cli": [32, 133], "run_ivy_core_test": 32, "run_ivy_nn_test": 32, "run_ivy_stateful_test": 32, "run_test": [32, 137], "sh": [32, 33, 133, 137], "test_depend": 32, "test_ivy_cor": 32, "test_ivy_nn": 32, "test_ivy_st": 32, "test_": [32, 149], "test_funct": [32, 33, 137, 149, 150, 2195], "test_cor": [32, 33, 149], "wish": [32, 148], "ivy_cor": 32, "ivy_nn": 32, "ivy_st": 32, "torch": [32, 33, 45, 46, 62, 63, 110, 111, 133, 134, 135, 137, 138, 139, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 171, 239, 251, 252, 253, 325, 377, 378, 430, 434, 435, 452, 453, 465, 731, 734, 1407, 1568, 1572, 1704, 1801, 1802, 1803, 1804, 1805, 2117, 2118, 2136, 2142, 2143, 2195, 2215, 2286, 2294, 2301, 2302], "dure": [32, 49, 50, 56, 57, 78, 79, 87, 88, 97, 98, 104, 105, 126, 127, 136, 138, 139, 142, 145, 146, 147, 148, 149, 150, 152, 171, 430, 456, 457, 458, 459, 460, 917, 1134, 1142, 1407, 1589, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1679, 1682, 1704, 1751, 1754, 1941, 1942, 1943, 1944, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2130, 2131, 2136, 2147, 2148, 2171, 2172, 2175, 2176, 2177, 2179], "simplest": [32, 140, 150, 152], "valu": [32, 33, 35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 156, 171, 189, 227, 229, 230, 231, 239, 241, 242, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298, 325, 333, 334, 335, 336, 337, 385, 396, 397, 412, 430, 454, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 484, 486, 487, 488, 489, 490, 496, 497, 498, 499, 500, 501, 502, 503, 505, 541, 544, 561, 562, 563, 565, 566, 569, 571, 574, 576, 578, 580, 581, 583, 585, 586, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 699, 701, 704, 706, 709, 711, 712, 713, 714, 715, 721, 724, 726, 727, 728, 730, 731, 734, 751, 752, 753, 755, 756, 757, 758, 760, 761, 763, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 788, 789, 791, 792, 798, 801, 838, 839, 840, 841, 842, 843, 845, 846, 847, 849, 850, 851, 852, 853, 875, 876, 877, 878, 879, 880, 881, 886, 887, 898, 900, 902, 905, 907, 908, 909, 910, 911, 938, 939, 941, 943, 944, 946, 952, 955, 958, 960, 961, 963, 964, 965, 966, 982, 983, 984, 985, 992, 995, 1032, 1034, 1040, 1041, 1042, 1043, 1044, 1045, 1057, 1058, 1059, 1060, 1061, 1098, 1099, 1100, 1101, 1102, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1134, 1141, 1147, 1164, 1166, 1188, 1199, 1204, 1206, 1208, 1209, 1222, 1224, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1268, 1270, 1273, 1274, 1275, 1276, 1277, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1328, 1331, 1336, 1338, 1341, 1343, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1405, 1407, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1459, 1460, 1462, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1479, 1488, 1489, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1512, 1513, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1568, 1569, 1570, 1571, 1572, 1584, 1585, 1587, 1593, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1619, 1620, 1621, 1622, 1631, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1720, 1723, 1756, 1759, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1834, 1835, 1837, 1838, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1948, 1950, 1951, 1952, 1953, 1954, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2064, 2066, 2069, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2124, 2125, 2130, 2131, 2147, 2148, 2149, 2150, 2151, 2152, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2184, 2185, 2186, 2191, 2195, 2213, 2214, 2215, 2216, 2227, 2230, 2231, 2235, 2236, 2241, 2243, 2245, 2246, 2251, 2256, 2257, 2258, 2259, 2262, 2267], "return": [32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2121, 2123, 2124, 2125, 2131, 2142, 2143, 2144, 2146, 2147, 2148, 2149, 2150, 2153, 2159, 2168, 2169, 2171, 2172, 2175, 2179, 2184, 2185, 2187, 2188, 2189, 2191, 2195, 2197, 2200, 2202, 2204, 2207, 2213, 2214, 2215, 2216, 2217, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2262, 2268, 2269, 2270, 2271, 2272, 2277, 2278, 2279, 2286, 2292, 2293, 2294, 2302], "becaus": [32, 33, 53, 134, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 158, 159, 171, 898, 900, 1134, 1141, 2130, 2133, 2136], "header": [32, 33], "summari": [32, 33, 87, 88, 150, 325, 385, 1407, 1436, 1489], "recommend": [32, 33, 135, 465, 666, 669, 671, 674, 726, 729, 2060, 2079, 2082, 2092, 2095], "advanc": [32, 2129], "q": [32, 33, 53, 60, 61, 62, 63, 101, 108, 109, 110, 111, 132, 149, 171, 938, 966, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1401, 1402, 1403, 1404, 1405, 1640, 1699, 1700, 1701, 1702, 1703, 1704, 1730, 1731, 1734, 1786, 1787, 1788, 1789, 1790, 1945, 1954], "fix": [32, 33, 53, 101, 133, 138, 150, 151, 938, 996], "arrow": 32, "funcion": 32, "target": [32, 132, 149, 151, 153, 157, 158, 159, 430, 435, 2118, 2126, 2128, 2129, 2130, 2133, 2135, 2136, 2282, 2285], "test_stat": 32, "test_submodule_nam": 32, "test_function_nam": 32, "debugg": 32, "studio": 32, "easiest": 32, "effici": [32, 33, 136, 143, 145, 146, 147, 150, 154, 157, 171, 2130, 2132, 2133], "afterward": [32, 157, 2142, 2145], "background": [32, 2130, 2132], "restart": 32, "corner": [32, 33, 53, 101, 148, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "overlap": [32, 137, 151, 152, 2131], "test_file_path": 32, "test_fn_nam": 32, "long": [32, 33, 137, 138, 140, 142, 154, 1640, 1689, 1692, 2130], "larg": [32, 33, 53, 101, 137, 157, 465, 481, 484, 938, 958, 1248, 1249, 1250, 1251, 1252, 1704, 1791, 1794, 2130], "gb": [32, 430, 461, 464], "engin": [32, 2130, 2132, 2133], "comma": 32, "end": [32, 33, 135, 137, 147, 151, 152, 153, 170, 171, 239, 241, 242, 465, 501, 504, 997, 1000, 1188, 1196, 1206, 1282, 1285, 2118, 2128, 2133, 2147, 2148], "entri": [32, 53, 66, 67, 87, 88, 101, 114, 115, 122, 123, 137, 150, 239, 274, 277, 838, 839, 840, 841, 842, 1002, 1005, 1007, 1010, 1188, 1197, 1198, 1305, 1306, 1860, 1906, 1907, 1908, 1909, 1910, 1945, 1959, 2024, 2027, 2130], "postcreatecommand": 32, "post_create_command": 32, "poststartcommand": 32, "global": [32, 54, 55, 68, 69, 84, 87, 88, 89, 90, 102, 103, 116, 117, 134, 135, 137, 138, 139, 142, 145, 148, 154, 325, 355, 356, 358, 359, 360, 362, 363, 430, 453, 454, 455, 1407, 1480, 1481, 1488, 1549, 1550, 1552, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1593, 1602, 1631, 1637, 1639, 1965, 1966, 1967, 1968, 1969, 2130, 2173, 2174, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2272, 2273, 2274, 2275, 2276, 2286, 2292, 2294, 2296, 2298, 2299, 2300, 2301, 2302], "safe": [32, 148], "containerworkspacefold": 32, "roughli": [32, 95, 96, 133, 392, 395, 396, 400, 2133], "reopen": 32, "test_fle_path": 32, "enter": [32, 33, 134, 138, 139, 144, 146, 430, 431, 1602, 1631, 1637, 1639], "forward": [32, 53, 101, 135, 141, 150, 151, 152, 159, 170, 171, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1141, 1144, 1145, 2130, 2131, 2142, 2143, 2145, 2149, 2154, 2157, 2171, 2172, 2175, 2179], "slash": 32, "regular": [32, 33, 148, 2130], "headach": 32, "arm": [32, 33], "featur": [32, 33, 134, 144, 148, 151, 152, 157, 171, 917, 1134, 1142, 2118, 2130, 2131, 2132, 2136, 2149, 2151, 2152, 2154, 2156, 2157], "vm": [32, 137], "azur": 32, "cloud": [32, 137, 170, 2132], "mean": [32, 33, 53, 54, 55, 60, 61, 66, 67, 70, 71, 78, 79, 87, 88, 101, 102, 103, 108, 109, 114, 115, 118, 119, 126, 127, 130, 131, 132, 133, 135, 136, 138, 139, 140, 145, 147, 148, 150, 151, 152, 154, 156, 157, 158, 159, 170, 171, 430, 455, 843, 846, 875, 876, 877, 878, 879, 902, 905, 938, 943, 997, 998, 999, 1000, 1001, 1092, 1093, 1094, 1095, 1096, 1164, 1166, 1188, 1196, 1206, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1278, 1279, 1282, 1285, 1305, 1307, 1343, 1346, 1347, 1407, 1446, 1447, 1448, 1449, 1450, 1602, 1613, 1618, 1638, 1640, 1647, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1704, 1720, 1723, 1860, 1896, 1897, 1898, 1899, 1900, 1941, 1942, 1943, 1944, 1945, 1952, 1970, 1976, 1979, 1981, 1982, 1983, 1984, 1985, 2060, 2117, 2118, 2127, 2130, 2149, 2154, 2227, 2231, 2235, 2236, 2245, 2250, 2256, 2257, 2258, 2259], "longer": [32, 138, 146, 147, 150, 2130], "worri": 32, "agnost": [32, 134, 144, 154, 156, 159, 171, 2118, 2136, 2137], "usual": [32, 133, 148, 150, 152], "favourit": 32, "theme": 32, "unsupport": [32, 143, 148, 325, 377, 378, 430, 444, 1407, 1464, 1465, 2184, 2190, 2218], "old": [32, 87, 88, 135, 147], "slow": 32, "ipad": 32, "cool": [32, 151], "sever": [32, 33, 151, 171, 2128, 2134], "exact": [32, 33, 85, 86, 87, 88, 133, 140, 154, 191, 193, 195, 2023, 2024, 2028, 2034, 2038, 2245, 2252], "quota": 32, "requisit": 32, "pane": [32, 33, 137], "readi": 32, "begin": [32, 133, 149, 1188, 1206, 1282, 1285, 1945, 1946, 1957, 2147, 2148], "master": [32, 33, 133, 137, 151, 2130], "view": [32, 33, 53, 101, 142, 239, 263, 266, 818, 819, 820, 821, 822, 1188, 1191, 1203, 1207, 1238, 1239, 1241, 1316, 1317, 1318, 1319, 1320, 2130], "box": 32, "upto": [32, 33], "15": [32, 51, 52, 53, 54, 55, 70, 71, 78, 79, 84, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 108, 109, 114, 115, 118, 119, 126, 127, 140, 239, 269, 271, 272, 273, 325, 369, 371, 372, 373, 465, 481, 482, 484, 485, 511, 514, 531, 534, 561, 564, 596, 597, 626, 627, 656, 657, 659, 691, 693, 694, 695, 726, 727, 729, 731, 732, 734, 736, 737, 823, 824, 825, 826, 827, 828, 831, 892, 895, 918, 919, 920, 921, 922, 938, 952, 956, 997, 998, 999, 1000, 1001, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1134, 1135, 1136, 1140, 1150, 1154, 1155, 1156, 1157, 1158, 1188, 1193, 1196, 1200, 1227, 1228, 1230, 1386, 1387, 1389, 1407, 1431, 1434, 1441, 1444, 1446, 1448, 1449, 1459, 1460, 1461, 1462, 1463, 1488, 1498, 1501, 1502, 1503, 1506, 1507, 1552, 1558, 1560, 1561, 1562, 1593, 1640, 1642, 1645, 1684, 1686, 1687, 1688, 1704, 1725, 1728, 1736, 1739, 1746, 1749, 1776, 1779, 1806, 1810, 1811, 1814, 1860, 1901, 1904, 1931, 1932, 1934, 1935, 1970, 1976, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1997, 2013, 2016, 2023, 2024, 2028, 2060, 2061, 2064, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2133, 2195, 2215], "minut": [32, 137], "subsequ": [32, 134, 137, 138, 140, 144, 145, 147, 150, 152, 158, 2131, 2286, 2296], "launch": 32, "12": [32, 35, 38, 39, 47, 48, 51, 52, 53, 54, 55, 60, 61, 70, 71, 78, 79, 84, 89, 90, 95, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 126, 127, 135, 136, 138, 140, 151, 380, 381, 382, 384, 465, 481, 482, 484, 485, 486, 487, 488, 490, 511, 512, 531, 534, 536, 538, 539, 540, 551, 553, 554, 555, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 631, 633, 635, 691, 692, 693, 694, 695, 701, 702, 703, 705, 731, 734, 746, 748, 750, 776, 777, 779, 780, 781, 782, 784, 823, 825, 827, 828, 829, 830, 831, 832, 833, 835, 837, 880, 884, 885, 892, 894, 896, 918, 919, 920, 921, 922, 938, 952, 987, 989, 991, 997, 998, 999, 1000, 1001, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1136, 1149, 1188, 1193, 1196, 1200, 1217, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1231, 1289, 1291, 1293, 1386, 1387, 1389, 1407, 1431, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1481, 1503, 1507, 1542, 1543, 1545, 1550, 1558, 1560, 1561, 1640, 1642, 1644, 1646, 1662, 1664, 1666, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1704, 1725, 1728, 1756, 1758, 1759, 1760, 1776, 1779, 1811, 1814, 1819, 1823, 1860, 1881, 1884, 1901, 1904, 1911, 1913, 1915, 1921, 1922, 1924, 1931, 1932, 1934, 1935, 1965, 1966, 1968, 1969, 1970, 1976, 1979, 1981, 1982, 1984, 1986, 1987, 1988, 1997, 2018, 2022, 2023, 2024, 2028, 2060, 2061, 2064, 2066, 2067, 2068, 2071, 2072, 2074, 2087, 2090, 2096, 2100, 2227, 2235], "output": [32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 158, 159, 171, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 343, 346, 412, 430, 455, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 865, 866, 867, 868, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1207, 1208, 1209, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1459, 1461, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1590, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1796, 1799, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1945, 1959, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2131, 2142, 2144, 2149, 2152, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2167, 2168, 2169, 2170, 2184, 2189], "That": [32, 33, 134, 150, 156, 157, 158, 465, 726, 729, 2131], "approach": [32, 33, 134, 136, 138, 145, 146, 148, 150, 152, 156, 157, 171, 2127, 2134, 2136], "colour": 32, "applic": [32, 60, 61, 108, 109, 138, 139, 146, 158, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1945, 1952, 1953, 1954, 1958, 1959, 2127, 2128, 2130, 2132, 2134, 2136], "chanc": 32, "troubleshoot": 32, "ever": 32, "64": [32, 51, 52, 53, 60, 61, 84, 89, 90, 99, 100, 101, 102, 103, 108, 109, 110, 111, 118, 119, 126, 127, 157, 158, 325, 368, 465, 531, 532, 533, 534, 535, 711, 712, 714, 751, 753, 755, 756, 759, 892, 893, 894, 895, 896, 938, 945, 947, 972, 973, 974, 975, 976, 1012, 1013, 1015, 1134, 1140, 1407, 1441, 1444, 1446, 1449, 1450, 1602, 1619, 1622, 1640, 1647, 1650, 1657, 1660, 1667, 1670, 1674, 1675, 1676, 1677, 1678, 1704, 1761, 1764, 1776, 1779, 1806, 1810, 1824, 1825, 1827, 1981, 1983, 2060, 2071, 2074, 2087, 2089, 2091, 2118, 2135, 2159, 2170], "usr": 32, "flask": 32, "toolbar": [32, 33], "_array_modul": [32, 133], "array_api_test": [32, 33, 133], "refresh": 32, "conftest": 32, "nutshel": [32, 144], "hook": [32, 2142, 2145], "lint": 32, "accept": [32, 33, 40, 45, 46, 51, 52, 62, 63, 91, 99, 100, 134, 136, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 156, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 858, 880, 881, 886, 887, 892, 895, 907, 910, 917, 928, 931, 938, 944, 961, 982, 985, 1047, 1048, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1311, 1314, 1368, 1371, 1372, 1375, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1568, 1572, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2117, 2118, 2128], "attempt": [32, 143, 171], "succe": 32, "properli": [32, 132, 142, 148, 150], "quick": [33, 132, 149, 158], "tendenc": 33, "land": 33, "isn": [33, 102, 103, 146, 157, 171, 1407, 1568, 1569, 1572, 2132, 2286, 2294], "world": [33, 2132], "come": [33, 134, 137, 148, 151, 152, 158, 169, 2117, 2118, 2130], "fly": [33, 2130], "hard": [33, 156, 2130], "receiv": [33, 138, 139, 150, 1407, 1414, 1533, 2159, 2169], "internship": 33, "bug": [33, 148, 150, 151], "serv": [33, 134, 136, 144, 145, 148, 150, 152, 153, 2117, 2118, 2128], "suspect": 33, "observ": [33, 53, 101, 142, 154, 870, 871, 872, 874, 2132], "act": [33, 140, 171, 2137], "placehold": [33, 134, 143, 144, 1945, 1953, 1958, 1963, 2117], "ii": [33, 78, 79, 126, 127, 2060, 2071, 2072, 2073, 2074], "iii": 33, "three": [33, 53, 136, 137, 140, 148, 150, 152, 153, 154, 239, 284, 287, 818, 819, 821, 1188, 1191, 2118, 2131, 2136], "reformat": [33, 143], "issue_numb": 33, "No": [33, 137, 2130], "anyth": [33, 53, 101, 150, 151, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1343, 1346, 1347, 2130, 2131], "kept": [33, 84, 87, 88, 89, 90, 147, 151, 1941, 1942, 1943], "clean": [33, 151, 152, 154, 155, 157], "soon": [33, 137, 138, 169, 171, 2118], "partial": [33, 53, 87, 88, 101, 938, 952, 1042, 1043, 1044, 1045, 1258, 1259, 1260, 1261, 1343, 1347, 1602, 1618, 2171, 2172], "solut": [33, 136, 138, 149, 150, 152, 1704, 1796, 1799, 2128, 2132], "associ": [33, 62, 63, 110, 111, 138, 145, 146, 148, 149, 150, 171, 465, 481, 484, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1839, 1843, 2195, 2213, 2286, 2294], "otherwis": [33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 60, 61, 62, 63, 66, 67, 72, 73, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 138, 139, 140, 150, 154, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 241, 242, 251, 252, 253, 269, 271, 273, 274, 277, 279, 280, 281, 282, 283, 294, 296, 298, 302, 304, 306, 320, 321, 323, 325, 333, 334, 335, 336, 337, 338, 340, 342, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 363, 387, 390, 401, 404, 412, 413, 415, 417, 430, 436, 456, 457, 459, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 789, 790, 798, 799, 800, 801, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 851, 853, 870, 871, 872, 874, 875, 876, 877, 878, 879, 907, 908, 909, 910, 911, 918, 922, 938, 939, 943, 944, 982, 984, 986, 1002, 1006, 1040, 1041, 1062, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1131, 1133, 1176, 1177, 1178, 1179, 1180, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1589, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1640, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1715, 1718, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1822, 1829, 1833, 1834, 1835, 1837, 1838, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1945, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2012, 2018, 2020, 2022, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2044, 2045, 2047, 2049, 2050, 2053, 2060, 2061, 2063, 2065, 2066, 2068, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2171, 2172, 2184, 2187, 2188, 2189, 2227, 2230, 2241, 2244, 2286, 2302], "respond": 33, "shape": [33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 430, 451, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 791, 792, 793, 796, 818, 819, 820, 821, 822, 823, 824, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 865, 868, 870, 871, 880, 881, 884, 885, 886, 887, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 928, 930, 931, 932, 933, 936, 938, 941, 942, 944, 947, 961, 963, 966, 967, 970, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1012, 1013, 1015, 1032, 1033, 1034, 1040, 1041, 1072, 1073, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1141, 1142, 1143, 1144, 1145, 1147, 1150, 1159, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1192, 1195, 1203, 1205, 1206, 1207, 1208, 1209, 1212, 1215, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1258, 1262, 1271, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1401, 1405, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1459, 1461, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1484, 1485, 1486, 1487, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1553, 1573, 1578, 1594, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2026, 2030, 2031, 2032, 2035, 2036, 2037, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2064, 2066, 2069, 2071, 2072, 2074, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118, 2124, 2125, 2149, 2150, 2153, 2154, 2157, 2159, 2161, 2162, 2163, 2164, 2165, 2166, 2173, 2174, 2195, 2214, 2216, 2227, 2228, 2231, 2234, 2235, 2236, 2245, 2248, 2251, 2253], "dai": 33, "warn": 33, "without": [33, 87, 88, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 148, 150, 151, 152, 156, 157, 158, 170, 171, 1407, 1488, 1552, 1589, 1860, 1896, 1899, 1945, 1947, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2127, 2130, 2131, 2132, 2136, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "likewis": [33, 136, 138, 141, 144, 145, 148, 152, 157, 2136], "freed": 33, "flag": [33, 87, 88, 138, 146, 147, 148, 149, 150, 430, 436, 2195, 2215, 2216, 2272, 2273, 2274, 2275, 2276], "remain": [33, 66, 67, 72, 73, 114, 115, 120, 121, 137, 140, 142, 151, 152, 171, 465, 481, 484, 726, 729, 917, 1134, 1142, 1860, 1896, 1897, 1898, 1899, 1900, 1945, 1952, 1997, 2013, 2014, 2015, 2016, 2017], "prioriti": [33, 87, 88, 147, 2286, 2292], "short": [33, 138, 148, 151, 154, 158, 1640, 1689, 1692], "basi": [33, 133, 157], "situat": [33, 137, 159], "upon": [33, 140, 147, 150, 152, 171, 2129, 2130], "period": [33, 101, 151, 880, 882, 883, 884, 885, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1097, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1146], "unabl": [33, 152], "obvious": [33, 137], "never": [33, 66, 67, 114, 115, 138, 148, 150, 152, 1860, 1896, 1897, 1898, 1899, 1900], "qualiti": 33, "hypothet": 33, "frustrat": 33, "delai": 33, "busi": 33, "fine": [33, 138, 140, 148, 156, 159, 2136], "inact": 33, "me": 33, "unfairli": 33, "definit": [33, 53, 62, 63, 99, 100, 110, 111, 134, 138, 145, 156, 938, 964, 1365, 1366, 1367, 1704, 1705, 1706, 1707, 1708, 1709], "investig": 33, "maximum": [33, 51, 52, 53, 54, 55, 56, 57, 66, 67, 72, 73, 78, 79, 84, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 114, 115, 120, 121, 126, 127, 140, 147, 157, 430, 455, 465, 685, 938, 948, 967, 970, 1017, 1018, 1019, 1020, 1021, 1134, 1143, 1188, 1206, 1282, 1285, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1459, 1460, 1461, 1462, 1463, 1602, 1619, 1620, 1621, 1622, 1704, 1756, 1759, 1860, 1861, 1862, 1863, 1864, 1865, 1945, 1958, 1997, 1998, 1999, 2000, 2001, 2002, 2060, 2075, 2076, 2077, 2078, 2083, 2086, 2118, 2137, 2227, 2230, 2231, 2235, 2236, 2245, 2246, 2248, 2251, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "incomplet": 33, "per": [33, 53, 60, 61, 101, 108, 109, 137, 148, 157, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1642, 1643, 1644, 1646, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "self": [33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 142, 148, 149, 154, 156, 157, 158, 159, 191, 192, 193, 197, 198, 199, 202, 203, 204, 207, 208, 209, 212, 213, 214, 217, 218, 219, 222, 224, 227, 228, 229, 244, 245, 251, 252, 255, 256, 257, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 295, 296, 302, 303, 304, 306, 307, 309, 310, 312, 314, 315, 320, 321, 322, 323, 333, 334, 335, 338, 339, 340, 343, 344, 345, 348, 349, 350, 364, 365, 369, 370, 371, 373, 380, 381, 382, 387, 388, 389, 392, 393, 396, 397, 398, 401, 402, 403, 406, 407, 408, 413, 414, 415, 417, 430, 431, 437, 438, 439, 456, 458, 459, 466, 467, 468, 471, 472, 473, 476, 477, 478, 481, 482, 483, 486, 487, 488, 491, 492, 493, 496, 497, 498, 501, 502, 503, 506, 507, 508, 511, 512, 513, 516, 517, 518, 521, 522, 523, 526, 527, 528, 531, 532, 533, 536, 537, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 557, 558, 561, 562, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 583, 586, 587, 588, 591, 592, 593, 596, 597, 598, 601, 602, 603, 606, 607, 608, 611, 612, 613, 616, 617, 618, 621, 622, 623, 626, 627, 628, 631, 632, 633, 636, 637, 638, 641, 642, 643, 646, 647, 648, 651, 652, 653, 656, 657, 658, 661, 662, 663, 666, 667, 668, 671, 672, 673, 676, 677, 678, 681, 682, 683, 686, 687, 688, 691, 692, 693, 696, 697, 698, 701, 702, 703, 706, 707, 708, 711, 712, 713, 716, 717, 718, 721, 722, 723, 726, 727, 728, 731, 732, 733, 736, 737, 738, 741, 742, 743, 746, 747, 748, 751, 752, 753, 756, 757, 758, 761, 763, 764, 766, 768, 769, 771, 773, 774, 776, 778, 779, 781, 783, 784, 793, 794, 795, 798, 799, 800, 803, 804, 805, 808, 809, 810, 813, 814, 815, 818, 819, 820, 823, 824, 825, 828, 829, 830, 833, 834, 835, 838, 839, 840, 843, 844, 845, 849, 850, 851, 853, 854, 855, 859, 860, 865, 866, 867, 870, 871, 872, 875, 876, 877, 892, 893, 894, 898, 899, 902, 903, 904, 907, 908, 909, 912, 913, 914, 918, 919, 920, 923, 924, 925, 928, 929, 930, 933, 934, 935, 967, 968, 969, 972, 973, 974, 977, 978, 979, 982, 983, 984, 986, 987, 988, 989, 992, 993, 994, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1012, 1013, 1014, 1017, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1037, 1042, 1043, 1044, 1049, 1050, 1053, 1054, 1057, 1058, 1059, 1062, 1063, 1064, 1067, 1068, 1069, 1072, 1073, 1074, 1077, 1078, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1092, 1093, 1094, 1096, 1098, 1099, 1100, 1106, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1126, 1129, 1130, 1131, 1154, 1155, 1156, 1159, 1160, 1161, 1171, 1172, 1173, 1176, 1177, 1178, 1183, 1184, 1185, 1212, 1213, 1214, 1217, 1218, 1219, 1222, 1223, 1224, 1227, 1228, 1229, 1232, 1233, 1234, 1238, 1239, 1240, 1243, 1244, 1245, 1248, 1249, 1250, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1273, 1274, 1275, 1282, 1283, 1284, 1289, 1290, 1291, 1295, 1296, 1297, 1300, 1301, 1302, 1311, 1312, 1313, 1316, 1317, 1318, 1323, 1324, 1325, 1328, 1329, 1330, 1343, 1347, 1350, 1352, 1353, 1355, 1357, 1358, 1360, 1362, 1363, 1365, 1366, 1368, 1370, 1372, 1374, 1376, 1378, 1379, 1382, 1384, 1386, 1388, 1389, 1391, 1393, 1394, 1396, 1398, 1399, 1401, 1403, 1404, 1408, 1409, 1410, 1415, 1416, 1417, 1420, 1421, 1422, 1426, 1427, 1428, 1431, 1432, 1433, 1438, 1439, 1441, 1442, 1443, 1446, 1447, 1448, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1483, 1484, 1485, 1492, 1493, 1494, 1496, 1498, 1499, 1500, 1503, 1504, 1505, 1508, 1509, 1510, 1514, 1515, 1516, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1537, 1538, 1539, 1542, 1543, 1544, 1558, 1559, 1560, 1563, 1564, 1565, 1568, 1570, 1571, 1574, 1576, 1579, 1580, 1581, 1582, 1584, 1586, 1587, 1596, 1598, 1599, 1604, 1605, 1606, 1608, 1609, 1610, 1614, 1615, 1616, 1619, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1632, 1634, 1635, 1642, 1643, 1644, 1647, 1648, 1649, 1652, 1653, 1654, 1657, 1658, 1659, 1662, 1663, 1664, 1667, 1668, 1669, 1674, 1675, 1676, 1679, 1680, 1681, 1684, 1685, 1686, 1689, 1690, 1691, 1694, 1695, 1696, 1699, 1700, 1701, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1720, 1721, 1722, 1725, 1726, 1727, 1731, 1732, 1733, 1736, 1737, 1738, 1741, 1742, 1743, 1746, 1747, 1748, 1751, 1752, 1753, 1756, 1757, 1758, 1761, 1762, 1763, 1766, 1767, 1768, 1771, 1772, 1773, 1776, 1777, 1778, 1781, 1782, 1783, 1786, 1787, 1788, 1791, 1792, 1793, 1796, 1797, 1798, 1801, 1803, 1804, 1806, 1808, 1809, 1811, 1813, 1815, 1816, 1817, 1819, 1821, 1822, 1824, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1842, 1845, 1846, 1847, 1850, 1851, 1852, 1855, 1856, 1857, 1861, 1862, 1863, 1866, 1867, 1868, 1871, 1872, 1873, 1876, 1877, 1878, 1881, 1882, 1883, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1901, 1902, 1903, 1906, 1907, 1908, 1911, 1912, 1913, 1916, 1917, 1918, 1921, 1923, 1924, 1926, 1928, 1929, 1931, 1933, 1934, 1936, 1938, 1939, 1966, 1967, 1968, 1971, 1972, 1973, 1976, 1977, 1978, 1981, 1982, 1983, 1986, 1987, 1988, 1992, 1993, 1994, 1998, 1999, 2000, 2003, 2004, 2005, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2018, 2020, 2021, 2024, 2026, 2027, 2029, 2031, 2032, 2034, 2036, 2037, 2039, 2041, 2042, 2045, 2046, 2047, 2050, 2051, 2052, 2055, 2056, 2057, 2061, 2062, 2063, 2066, 2067, 2068, 2071, 2072, 2073, 2075, 2076, 2077, 2079, 2080, 2081, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2096, 2098, 2099, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2112, 2113, 2114, 2116, 2118, 2124, 2125, 2142, 2143, 2175, 2179], "assign": [33, 135, 138, 143, 147, 156], "sequenc": [33, 45, 46, 53, 60, 61, 66, 67, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 138, 139, 140, 142, 150, 151, 154, 159, 170, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 260, 261, 269, 271, 273, 279, 280, 282, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 816, 817, 818, 820, 821, 822, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 907, 911, 912, 913, 914, 915, 916, 918, 922, 923, 926, 938, 964, 982, 984, 986, 987, 988, 989, 990, 991, 1002, 1006, 1062, 1066, 1067, 1070, 1072, 1074, 1076, 1082, 1083, 1084, 1085, 1086, 1098, 1099, 1100, 1101, 1102, 1106, 1108, 1110, 1129, 1131, 1133, 1134, 1144, 1145, 1147, 1183, 1185, 1187, 1188, 1190, 1191, 1194, 1201, 1203, 1211, 1238, 1239, 1240, 1241, 1242, 1273, 1275, 1277, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1343, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1365, 1367, 1386, 1387, 1391, 1395, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1533, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1601, 1614, 1616, 1632, 1633, 1635, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1834, 1835, 1837, 1838, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1866, 1869, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1953, 1963, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2060, 2061, 2063, 2065, 2066, 2068, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2133, 2159, 2168, 2173, 2174, 2181, 2182], "regist": [33, 2142, 2145], "wherea": [33, 134, 136, 138, 139, 140, 144, 145, 150, 151, 159, 2127], "primarili": [33, 136, 465, 726, 729, 2130], "invit": 33, "roadmap": [33, 137, 2118], "mainli": [33, 132, 150, 155, 157, 2117, 2130], "extend": [33, 135, 141, 144, 148, 151, 171, 1188, 1206, 1282, 1285, 2127, 2130, 2136], "ideal": [33, 137, 147, 157], "Such": [33, 150, 1704, 1824, 1828], "easier": [33, 133, 134, 138, 148, 149, 151, 2117, 2130, 2132], "interv": [33, 70, 71, 80, 81, 118, 119, 128, 129, 239, 241, 242, 274, 277, 279, 282, 1704, 1829, 1833, 1860, 1861, 1864, 1876, 1879, 1916, 1919, 1970, 1976, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "forth": 33, "rare": [33, 139, 171, 2135], "scenario": [33, 142], "someon": [33, 142, 171], "someth": [33, 151, 157, 158, 171, 2136], "unfortun": 33, "redund": [33, 138, 142, 148, 152], "specifi": [33, 45, 46, 47, 48, 53, 54, 55, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 85, 86, 87, 88, 95, 96, 101, 102, 103, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 126, 127, 128, 129, 132, 138, 139, 144, 145, 147, 148, 149, 150, 152, 154, 157, 158, 197, 199, 201, 239, 241, 242, 254, 268, 274, 277, 299, 300, 307, 309, 311, 312, 314, 316, 317, 319, 325, 333, 334, 335, 336, 337, 343, 346, 430, 431, 445, 449, 451, 454, 455, 456, 460, 465, 726, 729, 798, 800, 802, 843, 846, 854, 855, 856, 857, 880, 881, 898, 900, 938, 959, 982, 985, 997, 998, 1000, 1106, 1107, 1108, 1110, 1134, 1141, 1181, 1182, 1188, 1196, 1207, 1232, 1235, 1253, 1256, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1316, 1319, 1343, 1345, 1346, 1348, 1407, 1413, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1479, 1492, 1494, 1495, 1496, 1601, 1640, 1694, 1697, 1704, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1739, 1756, 1757, 1758, 1759, 1760, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1864, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1905, 1911, 1914, 1916, 1917, 1919, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1951, 1953, 1954, 1961, 1962, 1963, 1964, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2074, 2087, 2090, 2096, 2100, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2136, 2147, 2148, 2256, 2258, 2286, 2294], "behind": [33, 56, 57, 132, 144, 150, 153, 155, 1614, 1615], "well": [33, 102, 103, 137, 138, 142, 147, 148, 149, 150, 158, 159, 170, 1407, 1492, 1494, 1495, 1496, 1704, 1796, 1799, 2129, 2130, 2131, 2135, 2245, 2252], "practic": [33, 137, 148, 2133], "separ": [33, 134, 136, 137, 150, 154, 156, 157, 2131, 2135], "branch": [33, 133, 137, 171, 465, 501, 504, 2130], "role": [33, 148, 155, 2131, 2133, 2137], "date": [33, 151], "base": [33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 137, 138, 142, 144, 146, 149, 150, 151, 154, 170, 239, 240, 279, 280, 281, 282, 283, 325, 326, 327, 328, 329, 330, 412, 430, 431, 432, 465, 576, 579, 636, 639, 641, 642, 643, 644, 645, 646, 649, 651, 652, 653, 654, 655, 711, 712, 714, 787, 788, 849, 850, 851, 852, 853, 875, 877, 879, 880, 886, 887, 938, 941, 947, 972, 974, 976, 1012, 1013, 1014, 1015, 1016, 1336, 1337, 1338, 1368, 1371, 1372, 1375, 1407, 1480, 1549, 1563, 1564, 1565, 1566, 1567, 1602, 1603, 1860, 1876, 1879, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2071, 2074, 2124, 2125, 2130, 2135, 2137, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2218, 2219, 2220, 2241, 2243, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2282, 2283, 2284, 2285, 2286, 2287], "complic": [33, 149, 154], "merge_with_upstream": 33, "name_of_your_branch": 33, "resolv": [33, 138, 154, 1860, 1876, 1879, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100], "abort": 33, "tediou": [33, 140], "resolut": [33, 47, 48, 95, 96, 325, 369, 370, 371, 372, 373], "stash": 33, "reinstat": 33, "fetch": [33, 133, 137], "uncommit": 33, "unstag": 33, "untrack": 33, "comprehens": [33, 133], "atlassian": 33, "tutori": [33, 148], "wrote": 33, "piec": [33, 134, 145, 146, 154, 2126, 2128], "blame": 33, "revis": 33, "log": [33, 45, 46, 51, 52, 53, 62, 63, 93, 94, 99, 100, 101, 110, 111, 136, 137, 140, 145, 147, 148, 150, 152, 154, 157, 239, 279, 280, 281, 282, 283, 465, 640, 646, 649, 656, 659, 789, 790, 838, 839, 840, 841, 842, 938, 965, 1176, 1179, 1305, 1306, 1396, 1400, 1791, 1792, 1793, 1795, 2118, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "eg": 33, "16": [33, 35, 38, 39, 51, 52, 53, 54, 55, 60, 61, 62, 63, 70, 71, 78, 79, 84, 89, 90, 95, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 140, 157, 325, 380, 382, 383, 465, 531, 532, 533, 534, 535, 646, 649, 731, 732, 766, 767, 769, 770, 823, 824, 825, 826, 827, 828, 829, 892, 893, 894, 895, 896, 928, 931, 938, 947, 952, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1012, 1013, 1015, 1042, 1043, 1044, 1045, 1082, 1085, 1134, 1135, 1140, 1144, 1145, 1148, 1149, 1164, 1167, 1188, 1196, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1407, 1446, 1448, 1459, 1460, 1461, 1462, 1463, 1558, 1560, 1602, 1638, 1640, 1674, 1677, 1684, 1685, 1686, 1687, 1688, 1704, 1705, 1706, 1708, 1725, 1728, 1736, 1739, 1740, 1776, 1779, 1806, 1810, 1860, 1931, 1932, 1934, 1935, 1945, 1954, 1970, 1976, 1977, 1979, 1980, 1981, 1983, 1986, 1988, 1990, 1997, 2018, 2022, 2060, 2066, 2067, 2069, 2071, 2074, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "past": [33, 133, 149, 150, 2130], "l": [33, 62, 63, 99, 100, 110, 111, 132, 661, 663, 665, 1704, 1705, 1706, 1707, 1708, 1709, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1751, 1754, 1819, 1820, 1821, 1822, 1823], "filepath": [33, 87, 88, 133], "grep": 33, "retriev": [33, 148, 1407, 1413, 2286, 2294], "commit_id": 33, "handi": 33, "histori": 33, "toggl": 33, "vertic": [33, 53, 101, 1188, 1210, 1211, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1407, 1441, 1444], "highlight": [33, 137, 140, 148], "previou": [33, 56, 57, 104, 105, 133, 137, 144, 148, 150, 152, 159, 171, 325, 424, 425, 426, 427, 428, 858, 1047, 1048, 1407, 1590, 1592, 1593, 1594, 1602, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2133, 2149, 2150, 2153, 2154, 2157], "whenev": [33, 137, 138, 142, 146, 147, 150, 157], "think": [33, 137, 140, 2131], "gain": [33, 133, 153, 158, 2130, 2149, 2157], "quit": [33, 134, 140, 141, 145, 146, 150, 152, 2130, 2136], "newli": [33, 47, 48, 95, 96, 137, 147, 150, 325, 333, 334, 335, 336, 337, 1407, 1425], "cannot": [33, 53, 133, 135, 138, 148, 154, 159, 808, 809, 813, 814, 818, 819, 2136], "least": [33, 53, 62, 63, 101, 134, 137, 138, 140, 145, 150, 808, 811, 813, 816, 818, 821, 938, 956, 987, 990, 1002, 1003, 1004, 1005, 1006, 1082, 1085, 1134, 1144, 1145, 1154, 1155, 1156, 1157, 1158, 1188, 1189, 1190, 1191, 1197, 1704, 1751, 1752, 1754], "approv": 33, "hash": [33, 157], "cancel": 33, "speedup": 33, "unavail": 33, "tickbox": 33, "lower": [33, 45, 46, 51, 52, 53, 62, 63, 70, 71, 99, 100, 101, 110, 111, 118, 119, 140, 148, 150, 152, 154, 171, 239, 260, 261, 307, 309, 311, 465, 681, 682, 683, 684, 685, 880, 881, 886, 982, 983, 984, 985, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1368, 1371, 1704, 1705, 1706, 1707, 1708, 1709, 1736, 1739, 1970, 1986, 1987, 1988, 1989, 1990, 2117, 2126, 2127, 2128, 2130, 2131, 2136, 2137, 2147, 2148, 2149, 2154, 2245, 2252], "span": [33, 152, 2128, 2136], "intent": [33, 147], "discourag": 33, "philosophi": 33, "increment": [33, 54, 55, 102, 103, 151, 1407, 1503, 1504, 1505, 1506, 1507, 2130], "valuabl": 33, "infrequ": 33, "earli": [33, 2118, 2130], "wast": [33, 137], "spot": [33, 140, 145], "mistak": [33, 143], "propos": [33, 148, 152, 2130], "mountain": 33, "around": [33, 84, 87, 88, 89, 90, 134, 144, 145, 148, 151, 156, 171, 1188, 1206, 1282, 1285, 2117, 2128, 2130, 2137], "advoc": [33, 171], "style": [33, 1188, 1206, 1282, 1285, 1997, 2013, 2016, 2130], "were": [33, 87, 88, 95, 96, 138, 142, 143, 150, 151, 152, 154, 380, 382, 384, 392, 393, 395, 396, 398, 400, 2130, 2131, 2136], "actual": [33, 132, 137, 145, 147, 148, 149, 150, 152, 153, 158, 171, 2131, 2136], "aim": [33, 133, 148, 150, 153, 2128, 2130, 2133], "session": [33, 2130], "block": [33, 134, 136, 142, 143, 145, 150, 153, 155, 159, 171, 430, 431, 1124, 1127, 1164, 1169, 1602, 1631, 1639, 2117, 2118, 2135, 2137], "smaller": [33, 53, 66, 67, 114, 115, 154, 789, 791, 798, 801, 938, 939, 955, 1106, 1109, 1295, 1296, 1298, 1407, 1441, 1444, 1860, 1861, 1864, 1901, 1902, 1903, 1904, 1905, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100], "beauti": 33, "particularli": [33, 157, 171, 2128], "concern": [33, 132, 136, 140, 147, 152, 153, 2136], "difficult": [33, 133, 138, 150, 171, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "undo": 33, "stress": 33, "frequenc": [33, 54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "advantag": [33, 147, 148, 2130], "nifti": 33, "reassur": 33, "isol": [33, 2131, 2136], "fact": [33, 133, 137, 148, 150, 154, 157], "local_path_to_ivi": 33, "overwrit": [33, 87, 88, 147, 148, 154, 430, 455], "subfold": [33, 149, 150, 151], "wide": [33, 150, 2128, 2130], "via": [33, 133, 136, 138, 139, 142, 147, 151, 152, 154, 156, 157, 170, 1945, 1956, 1957, 2130], "dep": 33, "fresh": 33, "arsen": 33, "declar": 33, "exec": 33, "rf": 33, "cp": 33, "ivy_contain": 33, "test_imag": 33, "test_random_crop": 33, "test_creation_funct": 33, "test_arang": 33, "variou": [33, 133, 138, 141, 142, 144, 146, 148, 149, 150, 170, 2117, 2126, 2128, 2129, 2130, 2133, 2136], "cpu": [33, 45, 46, 49, 50, 53, 70, 71, 93, 94, 97, 98, 101, 102, 103, 118, 119, 139, 148, 150, 171, 239, 260, 261, 268, 274, 277, 279, 280, 281, 282, 283, 294, 295, 297, 299, 300, 302, 305, 320, 324, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 447, 450, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 838, 839, 840, 841, 843, 846, 1032, 1034, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1309, 1310, 1471, 1473, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2128, 2130, 2133, 2135, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2195, 2213, 2215, 2216], "gpu": [33, 139, 156, 239, 274, 277, 430, 431, 436, 442, 443, 446, 448, 450, 452, 453, 454, 461, 463, 464, 2128, 2130, 2133, 2134, 2135], "combin": [33, 84, 87, 88, 89, 90, 134, 136, 138, 140, 142, 145, 150, 152, 159, 1407, 1464, 1465, 1704, 1710, 1713, 1751, 1754, 2130], "num": [33, 45, 46, 93, 94, 144, 154, 239, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 2227, 2232], "integ": [33, 35, 38, 39, 47, 48, 51, 52, 53, 60, 61, 66, 67, 70, 71, 78, 79, 80, 81, 84, 87, 88, 89, 90, 99, 100, 101, 108, 109, 110, 111, 114, 115, 118, 119, 126, 127, 128, 129, 136, 138, 146, 149, 150, 154, 156, 239, 241, 242, 268, 325, 380, 381, 383, 385, 401, 404, 412, 413, 416, 421, 465, 466, 469, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 586, 589, 591, 594, 676, 679, 711, 714, 726, 729, 731, 734, 776, 780, 781, 785, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 875, 876, 877, 878, 879, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 938, 943, 946, 947, 956, 987, 988, 989, 990, 991, 992, 993, 995, 1012, 1015, 1032, 1033, 1034, 1062, 1063, 1064, 1065, 1066, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1154, 1157, 1159, 1160, 1162, 1188, 1193, 1200, 1206, 1210, 1258, 1259, 1260, 1261, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1333, 1334, 1343, 1347, 1348, 1386, 1387, 1388, 1389, 1390, 1407, 1479, 1601, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1704, 1720, 1723, 1761, 1764, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1906, 1907, 1908, 1909, 1910, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2044, 2050, 2053, 2060, 2061, 2064, 2066, 2069, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2227, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2244, 2245, 2249, 2250, 2251, 2253, 2256, 2258, 2259, 2272, 2277, 2278], "greater": [33, 35, 38, 39, 51, 52, 53, 70, 71, 84, 89, 90, 99, 100, 101, 118, 119, 149, 465, 471, 474, 486, 489, 501, 504, 521, 524, 531, 534, 586, 589, 591, 594, 600, 711, 714, 726, 729, 736, 739, 776, 780, 793, 797, 849, 850, 851, 852, 853, 898, 900, 938, 941, 964, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1141, 1144, 1145, 1365, 1366, 1367, 1704, 1710, 1713, 1761, 1764, 1860, 1911, 1914, 1970, 1986, 1987, 1988, 1989, 1990, 2245, 2252], "prompt": [33, 2118, 2147, 2148], "whole": [33, 53, 1129, 1130, 1132, 1183, 1184, 1186, 1278, 1280, 1281], "multipli": [33, 51, 52, 60, 61, 78, 79, 99, 100, 108, 109, 134, 135, 136, 140, 465, 481, 482, 483, 484, 485, 695, 761, 762, 763, 764, 765, 1640, 1679, 1680, 1681, 1682, 1683, 2060, 2061, 2062, 2064], "cursor": 33, "alt": 33, "j": [33, 45, 46, 53, 62, 63, 78, 79, 93, 94, 99, 100, 101, 110, 111, 132, 239, 294, 295, 296, 297, 298, 661, 663, 665, 793, 794, 795, 796, 797, 803, 804, 806, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 954, 987, 989, 991, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1164, 1165, 1167, 1168, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1407, 1415, 1418, 1704, 1819, 1820, 1821, 1822, 1823, 2060, 2071, 2072, 2074, 2126], "blog": 33, "breakpoint": 33, "gutter": 33, "caret": 33, "f8": 33, "f9": 33, "Into": 33, "f7": 33, "smart": 33, "interest": 33, "consol": [33, 150, 156, 1407, 1536], "store": [33, 47, 48, 54, 55, 62, 63, 66, 67, 87, 88, 95, 96, 102, 103, 110, 111, 114, 115, 134, 135, 136, 141, 148, 154, 156, 157, 158, 239, 260, 261, 302, 305, 320, 324, 343, 344, 345, 347, 1407, 1459, 1460, 1461, 1462, 1463, 1704, 1819, 1820, 1821, 1822, 1823, 1860, 1906, 1907, 1908, 1909, 1910, 2117, 2171, 2172, 2195, 2215, 2218], "variabl": [33, 35, 38, 39, 53, 54, 55, 56, 57, 68, 69, 87, 88, 101, 102, 103, 104, 105, 116, 117, 135, 138, 141, 143, 144, 147, 150, 151, 154, 157, 158, 159, 171, 870, 871, 872, 874, 912, 915, 1305, 1308, 1407, 1420, 1423, 1508, 1509, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1568, 1571, 1572, 1602, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1694, 1697, 1704, 1796, 1799, 1941, 1942, 1943, 1944, 1965, 1966, 1967, 1968, 1969, 2131, 2142, 2143, 2146, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2195, 2200, 2214, 2216, 2217, 2272, 2274, 2276], "fragment": [33, 2126, 2128, 2132], "except": [33, 53, 54, 55, 66, 67, 70, 71, 80, 81, 87, 88, 101, 102, 103, 110, 111, 118, 119, 128, 129, 132, 133, 134, 137, 138, 141, 143, 144, 147, 148, 152, 156, 171, 325, 343, 346, 843, 846, 907, 908, 909, 910, 911, 938, 944, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1305, 1307, 1343, 1346, 1347, 1407, 1420, 1421, 1423, 1424, 1438, 1439, 1440, 1508, 1509, 1511, 1548, 1568, 1569, 1572, 1589, 1704, 1781, 1783, 1784, 1785, 1860, 1866, 1867, 1869, 1876, 1879, 1916, 1919, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 2013, 2016, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2171, 2172, 2184, 2190, 2218], "pychram": 33, "depth": [33, 45, 46, 53, 60, 61, 93, 94, 101, 108, 109, 137, 157, 158, 159, 170, 239, 294, 295, 296, 297, 298, 923, 926, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1194, 1407, 1441, 1444, 1489, 1640, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1945, 1958, 2147, 2148, 2171, 2172], "dummi": 33, "wherein": [33, 146, 150], "evalu": [33, 51, 52, 87, 88, 99, 100, 101, 136, 138, 152, 465, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 666, 668, 670, 696, 697, 698, 700, 706, 707, 708, 710, 736, 737, 738, 739, 740, 756, 759, 1077, 1079, 1080, 1081, 1188, 1202, 1602, 1638, 1945, 1956, 1957, 2106, 2107, 2110, 2112, 2115, 2130], "failur": [33, 137, 149, 150], "dynamic_backend": [35, 38, 39, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 2171, 2172], "none": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 239, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 403, 405, 406, 408, 410, 413, 415, 417, 427, 429, 430, 435, 436, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1485, 1487, 1489, 1492, 1494, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1513, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1956, 1957, 1958, 1959, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2124, 2125, 2142, 2143, 2144, 2146, 2147, 2148, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2184, 2185, 2186, 2191, 2195, 2200, 2209, 2213, 2214, 2215, 2216, 2217, 2218, 2220, 2227, 2231, 2235, 2236, 2238, 2241, 2243, 2244, 2245, 2246, 2248, 2251, 2256, 2257, 2258, 2259, 2272, 2273, 2274, 2275, 2276, 2277, 2282, 2285, 2286, 2288, 2294, 2302, 2304, 2305], "arraywithactiv": [35, 36, 38, 39, 156], "arraywithcr": [35, 38, 39, 45, 156], "arraywithdatatyp": [35, 38, 39, 47, 156], "arraywithdevic": [35, 38, 39, 49, 156], "arraywithgener": [35, 38, 39, 54, 156], "arraywithgradi": [35, 38, 39, 56, 156], "arraywithimag": [35, 38, 39, 58, 156], "arraywithlay": [35, 38, 39, 60, 156], "arraywithlinearalgebra": [35, 38, 39, 62, 156], "arraywithloss": [35, 38, 39, 64, 156], "arraywithmanipul": [35, 38, 39, 66, 156], "arraywithnorm": [35, 38, 39, 68, 156], "arraywithrandom": [35, 38, 39, 70, 156], "arraywithsearch": [35, 38, 39, 72, 156], "arraywithset": [35, 38, 39, 74, 156], "arraywithsort": [35, 38, 39, 76, 156], "arraywithstatist": [35, 38, 39, 78, 156], "arraywithutil": [35, 38, 39, 80, 156], "arraywithactivationsexperiment": [35, 38, 39, 53], "arraywithconversionsexperiment": [35, 38, 39, 53], "arraywithcreationexperiment": [35, 38, 39, 53], "arraywithdata_typeexperiment": [35, 38, 39, 53], "arraywithdeviceexperiment": [35, 38, 39, 53], "arraywithelementwiseexperiment": [35, 38, 39, 53], "arraywithgeneralexperiment": [35, 38, 39, 53], "arraywithgradientsexperiment": [35, 38, 39, 53], "arraywithimageexperiment": [35, 38, 39, 53], "arraywithlayersexperiment": [35, 38, 39, 53], "arraywithlinearalgebraexperiment": [35, 38, 39, 53], "arraywithlossesexperiment": [35, 38, 39, 53], "arraywithmanipulationexperiment": [35, 38, 39, 53], "arraywithnormsexperiment": [35, 38, 39, 53], "arraywithrandomexperiment": [35, 38, 39, 53], "arraywithsearchingexperiment": [35, 38, 39, 53], "arraywithsetexperiment": [35, 38, 39, 53], "arraywithsortingexperiment": [35, 38, 39, 53], "arraywithstatisticalexperiment": [35, 38, 39, 53], "arraywithutilityexperiment": [35, 38, 39, 53], "properti": [35, 38, 39, 87, 88, 133, 136, 140, 145, 149, 150, 156, 157, 158, 788, 1336, 1338, 2124, 2125, 2136, 2171, 2172, 2175, 2176, 2177, 2178, 2180], "transpos": [35, 38, 39, 53, 60, 61, 62, 63, 87, 88, 101, 108, 109, 110, 111, 147, 156, 159, 793, 796, 797, 870, 871, 872, 874, 1164, 1165, 1640, 1641, 1647, 1648, 1649, 1650, 1651, 1657, 1658, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1704, 1751, 1752, 1754, 1771, 1772, 1773, 1774, 1775, 1781, 1783, 1784, 1785, 2118, 2159, 2161, 2163, 2165, 2245, 2255], "ret": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 141, 142, 147, 148, 149, 151, 154, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 411, 413, 414, 415, 416, 417, 429, 430, 431, 433, 434, 436, 437, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 928, 930, 932, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1295, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2121, 2123, 2142, 2143, 2146, 2147, 2148, 2171, 2172, 2175, 2179, 2195, 2202, 2203, 2204, 2213, 2214, 2215, 2216, 2227, 2229, 2230, 2235, 2236, 2237, 2238, 2241, 2243, 2244, 2256, 2257, 2258, 2259, 2286, 2292, 2294, 2302], "dimension": [35, 38, 39, 45, 46, 53, 62, 63, 66, 67, 72, 73, 78, 79, 80, 81, 87, 88, 99, 100, 101, 110, 111, 114, 115, 126, 127, 128, 129, 154, 239, 241, 242, 260, 261, 284, 285, 287, 808, 811, 813, 816, 818, 821, 880, 886, 887, 902, 905, 938, 964, 987, 988, 989, 990, 991, 997, 1000, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1164, 1166, 1188, 1189, 1190, 1191, 1196, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1704, 1710, 1713, 1715, 1718, 1741, 1744, 1751, 1754, 1766, 1767, 1768, 1769, 1770, 1776, 1779, 1781, 1784, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1906, 1907, 1908, 1909, 1910, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2013, 2016, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2127, 2130, 2137], "whose": [35, 38, 39, 45, 46, 51, 52, 53, 54, 55, 62, 63, 66, 67, 74, 75, 78, 79, 93, 94, 99, 100, 101, 102, 103, 110, 111, 114, 115, 122, 123, 126, 127, 141, 150, 239, 269, 271, 273, 307, 309, 311, 312, 314, 316, 465, 476, 477, 478, 479, 480, 491, 492, 493, 494, 495, 506, 507, 508, 509, 510, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 711, 712, 714, 716, 719, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 1188, 1203, 1238, 1239, 1240, 1241, 1242, 1328, 1329, 1330, 1332, 1407, 1425, 1568, 1570, 1571, 1572, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1860, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1905, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2060, 2066, 2068, 2070, 2071, 2072, 2074, 2245, 2252], "dimens": [35, 38, 39, 45, 46, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 87, 88, 89, 90, 93, 94, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 140, 142, 148, 149, 150, 152, 154, 157, 189, 202, 205, 222, 225, 239, 294, 295, 296, 297, 298, 307, 309, 311, 312, 314, 316, 793, 796, 797, 808, 811, 813, 816, 818, 819, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 875, 876, 877, 878, 879, 898, 900, 907, 908, 909, 910, 911, 912, 915, 938, 943, 944, 952, 959, 987, 988, 989, 990, 991, 997, 998, 1000, 1042, 1043, 1044, 1045, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1095, 1134, 1135, 1136, 1137, 1141, 1144, 1145, 1148, 1149, 1150, 1159, 1162, 1164, 1165, 1188, 1189, 1190, 1191, 1196, 1207, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1278, 1279, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1316, 1317, 1318, 1319, 1320, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1407, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1471, 1475, 1483, 1484, 1485, 1486, 1487, 1601, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1689, 1692, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1866, 1867, 1869, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1919, 1931, 1932, 1933, 1934, 1935, 1941, 1942, 1943, 1944, 1970, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2060, 2071, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2124, 2125, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2169, 2170, 2227, 2230, 2236], "ax": [35, 36, 37, 38, 39, 53, 62, 63, 66, 67, 72, 73, 78, 79, 80, 81, 85, 86, 101, 110, 111, 114, 115, 120, 121, 126, 127, 128, 129, 138, 140, 150, 151, 154, 156, 202, 203, 204, 206, 222, 223, 224, 226, 430, 455, 875, 876, 877, 878, 879, 907, 908, 909, 910, 911, 938, 943, 944, 959, 1188, 1203, 1206, 1207, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1316, 1317, 1318, 1319, 1320, 1343, 1345, 1346, 1347, 1348, 1407, 1441, 1444, 1601, 1704, 1756, 1757, 1758, 1759, 1760, 1796, 1799, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1834, 1835, 1837, 1838, 1860, 1871, 1872, 1873, 1874, 1875, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1921, 1922, 1923, 1924, 1925, 1936, 1937, 1938, 1939, 1940, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2124, 2125, 2227, 2236, 2245, 2248], "permut": [35, 38, 39, 66, 67, 114, 115, 1860, 1886, 1887, 1888, 1889, 1890, 1921, 1922, 1923, 1924, 1925], "__abs__": [35, 38, 39, 84, 89, 90], "variantab": [35, 38, 39, 51, 52, 84, 89, 90, 99, 100, 134, 138, 146, 148, 150, 465, 470, 711, 714, 798, 801, 938, 939, 955, 1106, 1109, 1704, 1756, 1759, 1806, 1810, 1834, 1835, 1837, 1838, 1945, 1954, 1957, 2118, 2195, 2215], "wrap": [35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 154, 156, 159, 171, 172, 173, 185, 186, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 244, 245, 251, 252, 255, 256, 263, 264, 269, 270, 271, 273, 279, 280, 281, 283, 284, 285, 289, 290, 294, 295, 296, 298, 302, 303, 304, 306, 307, 309, 312, 314, 320, 321, 322, 323, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 380, 381, 382, 384, 392, 393, 395, 396, 398, 400, 413, 414, 415, 417, 437, 438, 439, 441, 456, 457, 458, 459, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 835, 837, 843, 844, 845, 847, 854, 855, 857, 859, 860, 862, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 879, 892, 893, 894, 896, 902, 903, 904, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 923, 924, 925, 927, 928, 930, 932, 933, 934, 935, 937, 972, 973, 974, 976, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1096, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1131, 1133, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1187, 1188, 1206, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1273, 1274, 1275, 1277, 1282, 1283, 1284, 1285, 1286, 1289, 1291, 1293, 1300, 1301, 1302, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1343, 1347, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1463, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1483, 1484, 1485, 1487, 1490, 1492, 1493, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1537, 1538, 1539, 1541, 1542, 1544, 1546, 1554, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1595, 1596, 1597, 1598, 1599, 1604, 1605, 1606, 1608, 1609, 1614, 1615, 1616, 1619, 1620, 1623, 1624, 1627, 1628, 1632, 1633, 1634, 1635, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1699, 1700, 1701, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1720, 1721, 1722, 1725, 1726, 1727, 1729, 1736, 1737, 1738, 1740, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1802, 1803, 1804, 1824, 1825, 1834, 1835, 1837, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1966, 1967, 1968, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2045, 2046, 2047, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2059, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2075, 2076, 2077, 2079, 2080, 2081, 2083, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2112, 2113, 2114, 2116, 2117, 2124, 2125, 2126, 2130, 2131, 2136, 2137, 2195, 2217], "miniminput": [35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 171, 172, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 430, 434, 436, 437, 440, 455, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 888, 890, 891, 892, 893, 894, 895, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 914, 916, 917, 918, 919, 920, 921, 922, 923, 927, 928, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 975, 976, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1482, 1483, 1484, 1486, 1492, 1493, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1551, 1556, 1558, 1559, 1560, 1561, 1563, 1564, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1592, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1958, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2131, 2134, 2142, 2144, 2149, 2151, 2152, 2153, 2154, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2184, 2185, 2188, 2189, 2195, 2200, 2213, 2214, 2215, 2216, 2241, 2243, 2272, 2274, 2276], "numer": [35, 38, 39, 45, 46, 47, 48, 51, 52, 54, 55, 62, 63, 70, 71, 72, 73, 78, 79, 84, 89, 90, 95, 96, 99, 100, 101, 102, 103, 110, 111, 118, 119, 120, 121, 124, 125, 138, 146, 148, 149, 150, 151, 152, 154, 158, 239, 284, 285, 287, 325, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 481, 482, 483, 484, 485, 541, 542, 543, 544, 545, 561, 564, 581, 582, 584, 586, 587, 588, 589, 590, 591, 594, 606, 609, 611, 614, 616, 619, 626, 629, 666, 669, 671, 674, 691, 693, 694, 696, 697, 698, 700, 701, 704, 706, 707, 708, 710, 711, 714, 726, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 756, 759, 761, 762, 764, 765, 776, 780, 781, 785, 843, 845, 846, 847, 1305, 1307, 1407, 1480, 1481, 1549, 1550, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1704, 1710, 1711, 1712, 1713, 1714, 1741, 1744, 1751, 1752, 1754, 1776, 1779, 1791, 1794, 1801, 1803, 1805, 1811, 1814, 1819, 1823, 1829, 1833, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2045, 2047, 2049, 2060, 2075, 2076, 2078, 2087, 2090, 2096, 2100, 2127, 2130, 2136, 2149, 2157, 2227, 2235, 2236, 2241, 2244, 2245, 2246, 2252], "element": [35, 36, 37, 38, 39, 45, 46, 51, 52, 53, 54, 55, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 141, 149, 150, 152, 154, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 241, 242, 251, 253, 268, 269, 270, 271, 272, 273, 307, 309, 311, 312, 314, 316, 369, 371, 373, 380, 382, 384, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 798, 801, 803, 806, 808, 810, 812, 813, 815, 817, 818, 820, 822, 849, 850, 851, 852, 853, 870, 871, 872, 874, 880, 886, 887, 928, 931, 938, 939, 940, 941, 945, 946, 947, 948, 949, 950, 951, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 972, 973, 974, 975, 976, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1057, 1058, 1059, 1060, 1061, 1072, 1073, 1074, 1076, 1077, 1079, 1080, 1081, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1124, 1128, 1154, 1155, 1156, 1157, 1158, 1164, 1167, 1171, 1172, 1173, 1174, 1175, 1188, 1196, 1197, 1198, 1199, 1202, 1209, 1232, 1233, 1234, 1235, 1236, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1275, 1276, 1277, 1311, 1313, 1314, 1315, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1343, 1345, 1346, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1368, 1371, 1372, 1375, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1407, 1415, 1418, 1426, 1428, 1429, 1430, 1431, 1434, 1466, 1467, 1468, 1469, 1470, 1558, 1559, 1560, 1562, 1563, 1565, 1567, 1568, 1570, 1571, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1602, 1631, 1639, 1640, 1679, 1680, 1681, 1682, 1683, 1704, 1710, 1711, 1712, 1713, 1714, 1720, 1723, 1730, 1731, 1734, 1751, 1754, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1801, 1805, 1860, 1861, 1862, 1863, 1864, 1865, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1945, 1946, 1949, 1955, 1970, 1971, 1972, 1973, 1974, 1975, 1997, 2008, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2050, 2053, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2074, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2110, 2112, 2115, 2124, 2125, 2134, 2159, 2167, 2184, 2185, 2195, 2198, 2227, 2231, 2235, 2236, 2237, 2238, 2245, 2253, 2254], "__add__": [35, 38, 39, 84, 89, 90, 134, 136, 140, 141, 144, 148, 149, 156], "broadcast": [35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 136, 138, 140, 141, 150, 151, 154, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 430, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 791, 792, 793, 796, 823, 824, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 865, 868, 875, 876, 877, 878, 879, 880, 881, 898, 900, 902, 905, 917, 938, 941, 942, 943, 947, 961, 963, 967, 970, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1012, 1013, 1015, 1032, 1033, 1034, 1072, 1073, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1141, 1142, 1143, 1144, 1145, 1147, 1150, 1164, 1165, 1166, 1169, 1170, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1192, 1195, 1207, 1209, 1212, 1215, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1278, 1279, 1280, 1281, 1289, 1290, 1292, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1332, 1343, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1508, 1510, 1512, 1514, 1518, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2018, 2019, 2020, 2021, 2022, 2023, 2039, 2043, 2045, 2047, 2049, 2060, 2061, 2064, 2066, 2069, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2227, 2228], "wise": [35, 36, 37, 38, 39, 51, 52, 53, 62, 63, 84, 85, 86, 89, 90, 99, 100, 101, 110, 111, 152, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 465, 466, 469, 471, 474, 481, 482, 483, 484, 485, 486, 489, 496, 499, 501, 504, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 556, 557, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 686, 689, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 716, 717, 721, 722, 723, 725, 726, 727, 728, 729, 730, 761, 762, 763, 764, 765, 781, 782, 783, 784, 785, 798, 801, 803, 806, 849, 850, 851, 852, 853, 917, 923, 926, 938, 939, 940, 941, 945, 946, 948, 949, 950, 951, 955, 956, 957, 960, 962, 965, 972, 973, 974, 975, 976, 992, 993, 994, 995, 996, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1057, 1058, 1059, 1060, 1061, 1067, 1070, 1072, 1074, 1076, 1077, 1080, 1106, 1109, 1124, 1128, 1134, 1142, 1154, 1155, 1156, 1157, 1158, 1171, 1172, 1173, 1174, 1175, 1188, 1194, 1199, 1201, 1202, 1211, 1273, 1275, 1276, 1277, 1323, 1324, 1325, 1326, 1327, 1355, 1356, 1357, 1358, 1391, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1710, 1711, 1712, 1714, 1860, 1861, 1864, 2175, 2178], "sum": [35, 38, 39, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 78, 79, 84, 87, 88, 89, 90, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 126, 127, 136, 138, 145, 147, 148, 154, 430, 455, 465, 481, 482, 483, 484, 485, 656, 659, 761, 762, 764, 938, 959, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1343, 1346, 1347, 1407, 1446, 1447, 1448, 1449, 1450, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1640, 1679, 1682, 1699, 1700, 1701, 1702, 1703, 1704, 1756, 1759, 1801, 1803, 1805, 1819, 1820, 1821, 1822, 1823, 1834, 1835, 1837, 1838, 1844, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 2060, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2074, 2149, 2154, 2157], "promot": [35, 38, 39, 47, 48, 51, 52, 53, 62, 63, 84, 89, 90, 95, 96, 99, 100, 101, 110, 111, 124, 125, 133, 141, 142, 145, 325, 333, 334, 335, 336, 337, 348, 349, 350, 351, 352, 411, 412, 413, 416, 423, 465, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 521, 522, 523, 524, 525, 526, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 591, 592, 593, 595, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 676, 679, 691, 692, 693, 694, 695, 711, 712, 713, 714, 715, 726, 727, 729, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 938, 947, 963, 1012, 1015, 1328, 1329, 1330, 1331, 1332, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1776, 1779, 1781, 1783, 1784, 1785, 1791, 1794, 1796, 1799, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1866, 1869, 1916, 1919, 2045, 2047, 2049, 2060, 2079, 2082, 2092, 2095, 2227, 2235, 2241, 2242], "y": [35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 140, 148, 149, 150, 151, 152, 154, 156, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 251, 253, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 302, 305, 320, 324, 325, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 364, 365, 366, 369, 371, 372, 373, 380, 382, 383, 384, 413, 415, 416, 430, 433, 437, 438, 439, 440, 441, 445, 449, 450, 451, 454, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 616, 618, 621, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 656, 657, 658, 659, 660, 661, 662, 664, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 792, 793, 797, 798, 799, 800, 801, 802, 854, 855, 856, 857, 870, 871, 872, 873, 874, 880, 881, 892, 895, 917, 923, 924, 925, 926, 938, 939, 963, 964, 965, 982, 983, 984, 985, 986, 1040, 1041, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1124, 1126, 1128, 1129, 1131, 1133, 1134, 1140, 1142, 1159, 1161, 1163, 1181, 1182, 1183, 1185, 1187, 1188, 1194, 1201, 1206, 1208, 1209, 1211, 1243, 1245, 1247, 1253, 1255, 1257, 1282, 1285, 1300, 1302, 1304, 1328, 1329, 1330, 1331, 1332, 1343, 1344, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1451, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1488, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1549, 1550, 1552, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1593, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1632, 1633, 1634, 1635, 1636, 1640, 1647, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1804, 1806, 1810, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1945, 1949, 1952, 1953, 1955, 1963, 1965, 1966, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2013, 2016, 2018, 2022, 2023, 2024, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "z": [35, 38, 39, 45, 46, 51, 52, 53, 54, 55, 62, 63, 64, 65, 70, 71, 74, 75, 78, 79, 84, 89, 90, 93, 94, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 118, 119, 126, 127, 135, 136, 140, 154, 156, 239, 274, 277, 279, 281, 283, 294, 295, 296, 297, 298, 430, 445, 465, 481, 482, 483, 484, 485, 501, 502, 503, 504, 505, 511, 512, 514, 515, 526, 527, 528, 529, 530, 536, 538, 539, 540, 561, 563, 596, 598, 599, 600, 601, 602, 603, 604, 605, 611, 613, 614, 615, 616, 619, 620, 621, 624, 625, 626, 628, 629, 630, 631, 634, 656, 657, 658, 659, 660, 661, 662, 663, 665, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 761, 762, 763, 764, 765, 789, 790, 803, 804, 805, 806, 807, 854, 855, 856, 857, 859, 860, 862, 870, 872, 874, 938, 940, 961, 1067, 1069, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1311, 1314, 1315, 1407, 1415, 1416, 1418, 1459, 1460, 1461, 1462, 1463, 1466, 1469, 1471, 1472, 1473, 1474, 1498, 1501, 1502, 1503, 1506, 1507, 1542, 1544, 1545, 1546, 1556, 1558, 1559, 1560, 1561, 1562, 1589, 1601, 1704, 1710, 1711, 1712, 1713, 1714, 1751, 1752, 1754, 1781, 1782, 1801, 1802, 1804, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1864, 1916, 1920, 1945, 1949, 1953, 1955, 1963, 1970, 1976, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1997, 1998, 2001, 2023, 2024, 2026, 2028, 2060, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2083, 2085, 2086, 2087, 2088, 2090, 2092, 2093, 2095, 2149, 2153], "__eq__": [35, 38, 39, 84, 89, 90], "equal": [35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 62, 63, 66, 67, 70, 71, 76, 77, 78, 79, 84, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 110, 111, 114, 115, 118, 119, 124, 125, 136, 138, 140, 142, 149, 150, 239, 260, 261, 268, 269, 270, 272, 325, 333, 334, 335, 336, 337, 465, 521, 524, 531, 534, 570, 606, 609, 611, 614, 711, 714, 731, 734, 798, 799, 800, 801, 802, 854, 855, 856, 857, 898, 900, 918, 919, 920, 921, 922, 938, 939, 955, 1062, 1063, 1064, 1065, 1066, 1106, 1107, 1108, 1109, 1110, 1129, 1132, 1134, 1141, 1181, 1182, 1183, 1186, 1188, 1193, 1200, 1210, 1278, 1280, 1281, 1386, 1387, 1388, 1389, 1390, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1601, 1704, 1725, 1726, 1728, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 1791, 1794, 1860, 1861, 1864, 1871, 1872, 1873, 1874, 1875, 1906, 1907, 1908, 1909, 1910, 1936, 1937, 1938, 1939, 1940, 1970, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2079, 2080, 2082, 2092, 2095, 2096, 2100, 2101, 2103, 2105, 2149, 2157, 2272, 2275, 2276], "bool": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 140, 142, 147, 148, 150, 151, 154, 159, 189, 191, 192, 193, 194, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 244, 245, 246, 251, 252, 253, 268, 269, 271, 273, 274, 277, 279, 280, 281, 282, 283, 284, 287, 294, 296, 298, 302, 304, 306, 320, 321, 323, 325, 333, 334, 335, 336, 337, 338, 340, 342, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 363, 364, 366, 374, 375, 377, 378, 380, 382, 384, 385, 386, 387, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 409, 411, 413, 415, 417, 419, 425, 429, 430, 436, 437, 438, 439, 440, 446, 447, 450, 451, 455, 456, 457, 459, 462, 464, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 525, 526, 528, 529, 530, 531, 533, 535, 536, 538, 539, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 817, 818, 819, 820, 821, 822, 838, 842, 843, 845, 847, 849, 851, 853, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 898, 899, 900, 901, 907, 911, 917, 918, 922, 938, 939, 940, 943, 955, 958, 959, 960, 965, 966, 977, 981, 982, 984, 986, 1002, 1006, 1040, 1041, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1062, 1066, 1072, 1074, 1076, 1092, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1129, 1131, 1133, 1134, 1141, 1142, 1147, 1183, 1185, 1187, 1188, 1189, 1191, 1209, 1232, 1233, 1234, 1235, 1236, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1295, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1364, 1386, 1387, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1438, 1439, 1440, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1477, 1482, 1483, 1484, 1485, 1486, 1487, 1490, 1492, 1493, 1495, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1539, 1541, 1542, 1544, 1546, 1556, 1557, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1579, 1580, 1582, 1583, 1584, 1585, 1587, 1596, 1597, 1598, 1599, 1600, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1768, 1770, 1771, 1774, 1786, 1788, 1790, 1791, 1793, 1795, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1822, 1824, 1825, 1826, 1827, 1828, 1834, 1835, 1837, 1838, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1952, 1953, 1954, 1956, 1957, 1958, 1963, 1964, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2142, 2145, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2195, 2213, 2214, 2215, 2216, 2227, 2230, 2235, 2241, 2244, 2245, 2252], "__ge__": [35, 38, 39, 84, 89, 90], "greater_equ": [35, 38, 39, 51, 52, 84, 89, 90, 99, 100, 465, 605, 656, 658, 660], "bitwise_xor": [35, 38, 39, 51, 52, 99, 100, 465, 540], "mix": [35, 38, 39, 47, 48, 51, 52, 84, 89, 90, 95, 96, 99, 100, 102, 103, 112, 113, 118, 119, 132, 140, 147, 150, 152, 154, 325, 338, 339, 340, 341, 342, 413, 416, 465, 511, 514, 526, 529, 531, 534, 536, 539, 561, 562, 564, 566, 567, 568, 569, 591, 592, 593, 594, 595, 596, 599, 601, 604, 626, 629, 631, 632, 633, 676, 679, 691, 692, 693, 694, 701, 702, 703, 704, 726, 727, 728, 729, 730, 854, 856, 1181, 1182, 1407, 1456, 1458, 1466, 1469, 1470, 1471, 1474, 1574, 1577, 1584, 1588, 1640, 1642, 1645, 1652, 1655, 1667, 1670, 1674, 1677, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1811, 1814, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1858, 1859, 1860, 1861, 1864, 1965, 1966, 1969, 1976, 1980, 1981, 1985, 1986, 1990, 1997, 2018, 2022, 2060, 2071, 2074, 2079, 2082, 2092, 2095, 2117, 2130, 2134, 2136], "__gt__": [35, 38, 39, 84, 89, 90, 152], "__le__": [35, 38, 39, 84, 89, 90], "less_equ": [35, 38, 39, 51, 52, 84, 89, 90, 99, 100, 142, 465, 635], "__lt__": [35, 38, 39, 84, 89, 90], "__ne__": [35, 38, 39, 84, 89, 90], "not_equ": [35, 38, 39, 51, 52, 84, 89, 90, 99, 100, 465, 705], "__pow__": [35, 38, 39, 84, 89, 90, 156], "power": [35, 38, 39, 53, 54, 55, 62, 63, 84, 89, 90, 101, 102, 103, 110, 111, 156, 157, 158, 465, 531, 534, 576, 579, 711, 714, 880, 888, 938, 945, 947, 972, 973, 974, 975, 976, 1012, 1013, 1014, 1015, 1016, 1382, 1385, 1407, 1480, 1549, 1563, 1564, 1565, 1566, 1567, 1704, 1761, 1764, 1824, 1825, 1826, 1827, 1828, 1945, 1952, 2130, 2132, 2136, 2149, 2157], "pow": [35, 38, 39, 51, 52, 84, 89, 90, 99, 100, 133, 465, 715], "float": [35, 36, 37, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 78, 79, 85, 86, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 126, 127, 133, 136, 138, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 158, 189, 197, 198, 200, 227, 228, 229, 230, 231, 233, 239, 241, 242, 244, 246, 254, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 299, 300, 317, 319, 325, 333, 334, 335, 336, 337, 353, 355, 356, 359, 360, 369, 370, 372, 385, 392, 395, 396, 397, 398, 399, 400, 412, 413, 416, 420, 426, 430, 442, 450, 453, 454, 461, 464, 465, 466, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 536, 539, 541, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 564, 566, 567, 569, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 591, 594, 596, 599, 601, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 624, 626, 629, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 691, 694, 696, 699, 701, 702, 704, 706, 709, 711, 714, 721, 724, 726, 729, 731, 734, 736, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 780, 781, 785, 789, 790, 791, 792, 798, 799, 800, 801, 802, 838, 839, 840, 841, 842, 843, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 880, 881, 882, 883, 884, 885, 912, 913, 914, 915, 916, 917, 938, 939, 941, 945, 946, 947, 955, 957, 958, 960, 961, 962, 963, 964, 966, 972, 973, 975, 976, 982, 985, 992, 993, 995, 1012, 1013, 1015, 1016, 1032, 1034, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1092, 1094, 1095, 1096, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1134, 1142, 1153, 1171, 1172, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1248, 1249, 1250, 1251, 1252, 1273, 1276, 1278, 1279, 1281, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1343, 1348, 1355, 1356, 1357, 1358, 1359, 1365, 1366, 1367, 1401, 1405, 1407, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1459, 1460, 1461, 1462, 1463, 1480, 1481, 1488, 1492, 1494, 1495, 1496, 1549, 1550, 1552, 1558, 1561, 1563, 1564, 1565, 1566, 1567, 1596, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1679, 1680, 1681, 1682, 1683, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1819, 1820, 1821, 1822, 1834, 1835, 1837, 1838, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1941, 1942, 1943, 1944, 1945, 1952, 1965, 1966, 1967, 1968, 1969, 1970, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2061, 2064, 2066, 2069, 2075, 2078, 2079, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2149, 2150, 2153, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2195, 2213, 2227, 2231, 2232, 2235, 2236, 2238, 2241, 2244, 2245, 2246, 2256, 2259], "69678056": [35, 38, 39], "59876156": [35, 38, 39], "37": [35, 36, 37, 38, 39, 51, 52, 53, 85, 86, 99, 100, 101, 202, 203, 204, 206, 465, 491, 494, 495, 531, 534, 731, 732, 746, 748, 750, 766, 770, 833, 837, 1343, 1349, 1376, 1377, 1378, 1379, 1380, 1640, 1684, 1687, 1704, 1761, 1764, 1945, 1954, 1970, 1981, 1984], "82660675": [35, 38, 39], "__radd__": [35, 38, 39, 84, 89, 90, 140, 141, 148], "__rrshift__": [35, 38, 39, 84, 89, 90], "bitwise_right_shift": [35, 38, 39, 51, 52, 99, 100, 465, 535], "32": [35, 38, 39, 51, 52, 53, 70, 71, 84, 89, 90, 99, 100, 101, 118, 119, 137, 157, 189, 197, 200, 325, 368, 465, 476, 477, 478, 479, 480, 531, 534, 536, 537, 731, 732, 736, 737, 828, 831, 833, 834, 836, 892, 893, 894, 895, 896, 938, 945, 961, 972, 973, 974, 975, 976, 1134, 1136, 1137, 1140, 1154, 1156, 1158, 1311, 1314, 1407, 1441, 1444, 1503, 1506, 1640, 1647, 1650, 1657, 1660, 1662, 1665, 1667, 1670, 1674, 1677, 1684, 1687, 1704, 1751, 1754, 1776, 1779, 1970, 1976, 1978, 1980, 1981, 1982, 1983, 1985, 1986, 1988, 1989, 1990, 1997, 2018, 2022, 2060, 2071, 2074, 2135, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "__rshift__": [35, 38, 39, 84, 89, 90], "__rsub__": [35, 38, 39, 84, 89, 90], "subtract": [35, 38, 39, 51, 52, 84, 89, 90, 99, 100, 134, 136, 140, 465, 762, 1188, 1206, 1282, 1285], "__sub__": [35, 38, 39, 84, 89, 90, 134, 136, 140, 144, 156], "__truediv__": [35, 38, 39, 84, 89, 90, 134, 136, 140], "divid": [35, 38, 39, 51, 52, 54, 55, 66, 67, 84, 87, 88, 89, 90, 99, 100, 114, 115, 134, 136, 140, 150, 465, 565, 591, 594, 1407, 1558, 1559, 1561, 1860, 1906, 1907, 1908, 1909, 1910], "25": [35, 38, 39, 51, 52, 54, 55, 62, 63, 64, 65, 70, 71, 78, 79, 84, 85, 86, 89, 90, 99, 100, 101, 102, 103, 108, 109, 110, 111, 116, 117, 118, 119, 126, 127, 136, 227, 229, 231, 239, 274, 277, 465, 481, 483, 531, 534, 561, 563, 564, 565, 571, 573, 575, 691, 693, 695, 711, 712, 714, 721, 723, 725, 731, 732, 746, 749, 751, 753, 755, 756, 757, 759, 776, 777, 779, 780, 803, 805, 807, 880, 883, 1053, 1055, 1087, 1089, 1091, 1154, 1156, 1158, 1300, 1302, 1304, 1407, 1498, 1501, 1502, 1503, 1506, 1507, 1542, 1543, 1558, 1559, 1561, 1562, 1642, 1644, 1646, 1704, 1705, 1706, 1708, 1725, 1728, 1746, 1748, 1749, 1750, 1824, 1825, 1826, 1827, 1828, 1844, 1850, 1851, 1853, 1945, 1947, 1965, 1966, 1968, 1969, 1976, 1977, 1981, 1982, 1983, 1985, 1986, 1988, 2060, 2066, 2067, 2071, 2074, 2079, 2080, 2101, 2104], "40000001": [35, 38, 39, 84, 85, 86, 89, 90, 189, 197, 200, 212, 214, 215, 216, 2023, 2029, 2033], "__xor__": [35, 38, 39, 84, 89, 90], "boolean": [35, 38, 39, 45, 46, 47, 48, 51, 52, 53, 54, 55, 66, 67, 72, 73, 78, 79, 84, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 114, 115, 120, 121, 126, 127, 136, 148, 150, 152, 239, 244, 245, 246, 251, 252, 253, 268, 325, 333, 334, 335, 336, 337, 380, 382, 384, 386, 392, 393, 395, 396, 397, 398, 400, 429, 430, 446, 462, 465, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 890, 891, 938, 955, 1040, 1041, 1104, 1106, 1109, 1111, 1112, 1113, 1114, 1115, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1479, 1492, 1493, 1495, 1497, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1547, 1551, 1553, 1554, 1596, 1597, 1598, 1599, 1600, 1602, 1631, 1639, 1860, 1896, 1897, 1898, 1899, 1900, 1941, 1942, 1943, 1945, 1956, 2008, 2009, 2010, 2012, 2018, 2019, 2021, 2060, 2075, 2077, 2083, 2084, 2085, 2086, 2142, 2144, 2195, 2200, 2227, 2229, 2237, 2245, 2248, 2272, 2273, 2274, 2275, 2276], "67": [35, 38, 39, 51, 52, 54, 55, 99, 100, 102, 103, 118, 119, 465, 536, 539, 551, 553, 554, 555, 731, 732, 736, 737, 746, 748, 750, 776, 778, 780, 1407, 1441, 1444, 1446, 1449, 1450, 1558, 1559, 1602, 1613, 1618, 1638, 1986, 1988], "21": [35, 38, 39, 51, 52, 53, 54, 55, 70, 71, 93, 94, 99, 100, 101, 102, 103, 118, 119, 126, 127, 239, 279, 281, 282, 325, 380, 383, 465, 481, 483, 491, 493, 501, 503, 504, 505, 531, 534, 536, 539, 691, 692, 694, 823, 824, 826, 833, 835, 892, 895, 938, 956, 1134, 1135, 1140, 1148, 1154, 1155, 1157, 1158, 1217, 1218, 1220, 1227, 1229, 1231, 1263, 1265, 1267, 1407, 1446, 1449, 1450, 1542, 1543, 1704, 1725, 1728, 1776, 1779, 1844, 1855, 1858, 1945, 1952, 1976, 1978, 1981, 1982, 1983, 2060, 2061, 2064, 2066, 2068, 2070, 2071, 2074], "13": [35, 36, 37, 38, 39, 51, 52, 53, 60, 61, 70, 71, 78, 79, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 126, 127, 136, 140, 189, 227, 228, 230, 325, 380, 383, 430, 442, 465, 481, 483, 536, 539, 551, 554, 591, 592, 594, 711, 714, 751, 754, 833, 837, 892, 895, 896, 918, 919, 920, 921, 922, 938, 952, 997, 998, 999, 1000, 1001, 1042, 1043, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1134, 1140, 1154, 1156, 1158, 1188, 1193, 1196, 1200, 1263, 1265, 1267, 1289, 1291, 1293, 1386, 1387, 1389, 1407, 1426, 1429, 1430, 1431, 1434, 1435, 1441, 1444, 1446, 1449, 1450, 1503, 1506, 1550, 1558, 1561, 1602, 1604, 1606, 1607, 1640, 1642, 1643, 1644, 1646, 1647, 1648, 1679, 1682, 1684, 1686, 1687, 1688, 1699, 1702, 1704, 1725, 1728, 1776, 1779, 1806, 1810, 1860, 1931, 1932, 1934, 1935, 1976, 1977, 1980, 1981, 1982, 1983, 1985, 1986, 1988, 1997, 2018, 2022, 2023, 2024, 2028, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2074], "79": [35, 38, 39, 54, 55, 102, 103, 118, 119, 465, 536, 539, 561, 564, 892, 895, 1134, 1140, 1407, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1986, 1988], "24": [35, 38, 39, 51, 52, 53, 62, 63, 78, 79, 101, 102, 103, 108, 109, 110, 111, 118, 119, 157, 465, 536, 537, 539, 631, 632, 691, 694, 731, 732, 736, 737, 751, 754, 823, 824, 825, 826, 827, 854, 856, 892, 893, 894, 895, 896, 938, 952, 1042, 1043, 1044, 1045, 1134, 1135, 1140, 1148, 1154, 1156, 1181, 1182, 1217, 1218, 1219, 1220, 1221, 1407, 1441, 1444, 1446, 1449, 1450, 1642, 1644, 1646, 1704, 1725, 1728, 1756, 1757, 1758, 1760, 1776, 1779, 1945, 1947, 1976, 1978, 1981, 1983, 1986, 1988, 2060, 2061, 2062, 2064, 2071, 2072, 2074, 2195, 2215], "arang": [35, 38, 39, 53, 62, 63, 78, 79, 84, 89, 90, 101, 110, 111, 138, 239, 274, 277, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 923, 927, 987, 988, 989, 990, 991, 1007, 1009, 1011, 1082, 1083, 1084, 1085, 1086, 1134, 1135, 1136, 1137, 1144, 1145, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1391, 1392, 1407, 1533, 1601, 1704, 1756, 1757, 1758, 1759, 1760, 2060, 2071, 2072, 2074, 2118, 2137], "kwarg": [35, 38, 39, 40, 41, 42, 53, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 142, 148, 154, 158, 172, 183, 187, 239, 240, 1188, 1206, 1282, 1283, 1284, 1285, 1286, 1407, 1533, 1589, 2142, 2144, 2145, 2146, 2171, 2172, 2184, 2190, 2195, 2201, 2206, 2207, 2211, 2286, 2292], "invok": [35, 38, 39, 53, 898, 900, 1134, 1141], "arg_info": [35, 38, 39, 84, 89, 90, 1407], "arg_nam": [35, 38, 39, 84, 89, 90, 1407], "args_to_ivi": [35, 38, 39, 40], "args_to_n": [35, 38, 39, 40, 147], "as_ivy_dev": [35, 38, 39, 84, 89, 90, 156, 430], "as_ivy_dtyp": [35, 38, 39, 84, 89, 90, 148, 325], "as_native_dev": [35, 38, 39, 84, 89, 90, 430, 450], "as_native_dtyp": [35, 38, 39, 84, 89, 90, 325], "asarray_handle_nest": [35, 38, 39, 84, 89, 90, 239], "asarray_infer_devic": [35, 38, 39, 84, 89, 90, 239], "asarray_to_native_arrays_and_back": [35, 38, 39, 84, 89, 90, 239], "cache_fn": [35, 38, 39, 84, 89, 90, 145, 1407], "check_float": [35, 38, 39, 84, 89, 90, 325], "clear_mem_on_dev": [35, 38, 39, 84, 89, 90, 430], "closest_valid_dtyp": [35, 38, 39, 84, 89, 90, 325], "container_typ": [35, 38, 39, 84, 89, 90, 892, 895, 1134, 1140, 1407], "conv": [35, 38, 39, 84, 89, 90, 152, 1640], "conv_general_dil": [35, 38, 39, 84, 89, 90, 148, 1640], "conv_general_transpos": [35, 38, 39, 84, 89, 90, 1640], "current_backend": [35, 38, 39, 84, 89, 90, 142, 145, 151, 154, 2286], "current_backend_str": [35, 38, 39, 84, 89, 90, 142, 154, 156, 1407], "nativearrai": [35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 172, 183, 185, 186, 189, 191, 194, 195, 197, 200, 201, 202, 205, 206, 207, 210, 211, 212, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 230, 231, 239, 244, 246, 251, 252, 253, 255, 258, 269, 272, 274, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 297, 302, 305, 306, 307, 311, 312, 316, 320, 321, 324, 325, 333, 336, 338, 339, 340, 341, 342, 343, 346, 348, 351, 355, 356, 358, 359, 360, 362, 363, 364, 366, 369, 372, 380, 383, 387, 390, 392, 394, 396, 399, 401, 404, 406, 409, 412, 413, 414, 416, 423, 430, 436, 437, 440, 455, 456, 457, 460, 465, 466, 469, 470, 471, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 489, 491, 494, 496, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 549, 551, 554, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 579, 580, 581, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 614, 615, 616, 619, 620, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 644, 645, 646, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 739, 740, 741, 744, 746, 749, 751, 754, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 770, 771, 775, 776, 777, 780, 781, 782, 783, 784, 785, 789, 791, 792, 793, 796, 798, 802, 803, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 826, 827, 828, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 852, 854, 855, 856, 857, 865, 866, 868, 869, 875, 878, 879, 880, 881, 882, 885, 888, 892, 895, 898, 900, 901, 902, 905, 907, 908, 909, 910, 911, 912, 915, 917, 918, 921, 922, 928, 931, 932, 933, 936, 937, 938, 940, 941, 942, 943, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 970, 972, 976, 977, 980, 981, 982, 985, 986, 987, 990, 992, 995, 996, 997, 1000, 1001, 1002, 1005, 1006, 1007, 1010, 1011, 1012, 1016, 1017, 1020, 1021, 1022, 1025, 1026, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1045, 1049, 1050, 1051, 1052, 1057, 1060, 1061, 1062, 1065, 1066, 1072, 1075, 1076, 1077, 1080, 1081, 1082, 1085, 1087, 1090, 1091, 1092, 1094, 1095, 1096, 1098, 1101, 1102, 1106, 1109, 1110, 1111, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1154, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1174, 1175, 1181, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1217, 1220, 1221, 1222, 1225, 1226, 1227, 1230, 1231, 1238, 1241, 1242, 1243, 1246, 1247, 1248, 1251, 1252, 1263, 1266, 1267, 1273, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1289, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1319, 1320, 1323, 1326, 1327, 1328, 1331, 1333, 1334, 1335, 1350, 1351, 1353, 1354, 1355, 1356, 1359, 1360, 1361, 1362, 1364, 1382, 1383, 1384, 1385, 1386, 1387, 1390, 1396, 1397, 1400, 1401, 1402, 1405, 1407, 1408, 1409, 1411, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1426, 1429, 1430, 1431, 1434, 1435, 1441, 1444, 1446, 1449, 1451, 1454, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1483, 1486, 1487, 1492, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1519, 1522, 1527, 1530, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1572, 1574, 1575, 1577, 1579, 1580, 1583, 1584, 1585, 1588, 1590, 1596, 1597, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1729, 1730, 1731, 1734, 1736, 1739, 1740, 1741, 1744, 1746, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1764, 1766, 1769, 1770, 1771, 1774, 1775, 1776, 1779, 1781, 1784, 1785, 1786, 1789, 1790, 1791, 1794, 1795, 1796, 1799, 1801, 1802, 1805, 1806, 1810, 1811, 1814, 1819, 1820, 1823, 1824, 1825, 1828, 1829, 1833, 1834, 1835, 1838, 1839, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1900, 1901, 1904, 1905, 1906, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1925, 1926, 1930, 1931, 1932, 1935, 1936, 1940, 1945, 1947, 1948, 1949, 1953, 1954, 1955, 1958, 1963, 1964, 1965, 1966, 1969, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2006, 2007, 2008, 2011, 2013, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2028, 2029, 2033, 2034, 2035, 2038, 2039, 2043, 2044, 2045, 2048, 2049, 2050, 2053, 2055, 2058, 2060, 2061, 2064, 2065, 2066, 2069, 2070, 2071, 2074, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2111, 2112, 2115, 2116, 2117, 2124, 2125], "nativ": [35, 38, 39, 40, 42, 43, 44, 45, 46, 49, 50, 54, 55, 91, 92, 97, 98, 102, 103, 138, 142, 146, 147, 148, 149, 150, 154, 156, 157, 172, 183, 239, 289, 290, 292, 325, 331, 332, 354, 355, 356, 358, 359, 360, 362, 363, 412, 430, 434, 435, 436, 437, 438, 439, 440, 450, 461, 464, 788, 890, 891, 1104, 1336, 1338, 1407, 1508, 1509, 1511, 1514, 1517, 1527, 1528, 1529, 1530, 1531, 1536, 1578, 2117, 2124, 2125, 2128, 2137, 2142, 2143, 2146, 2195, 2200, 2214, 2216, 2272, 2274, 2276, 2286, 2296], "default_complex_dtyp": [35, 38, 39, 84, 89, 90, 325, 418], "default_devic": [35, 38, 39, 84, 89, 90, 139, 142, 430, 449, 452, 453, 463], "default_dtyp": [35, 38, 39, 84, 89, 90, 138, 145, 325], "default_float_dtyp": [35, 38, 39, 84, 89, 90, 138, 325, 420], "default_int_dtyp": [35, 38, 39, 84, 89, 90, 138, 325, 421, 427], "default_uint_dtyp": [35, 38, 39, 84, 89, 90, 325, 422, 428], "deseri": [35, 38, 39, 84, 89, 90, 189], "dev_util": [35, 38, 39, 84, 89, 90, 139, 430], "resid": [35, 38, 39, 148, 154, 158, 1860, 1876, 1879, 2124, 2125], "dtype_bit": [35, 38, 39, 84, 89, 90, 325], "execute_with_gradi": [35, 38, 39, 84, 89, 90, 157, 158, 159, 171, 1602, 2118], "ey": [35, 38, 39, 53, 84, 89, 90, 101, 108, 109, 152, 159, 239, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 1640, 1652, 1654, 1655, 1656, 1674, 1677], "function_supported_devic": [35, 38, 39, 84, 89, 90, 430], "function_supported_devices_and_dtyp": [35, 38, 39, 84, 89, 90, 1407], "function_supported_dtyp": [35, 38, 39, 84, 89, 90, 138, 325], "function_unsupported_devic": [35, 38, 39, 84, 89, 90, 430], "function_unsupported_devices_and_dtyp": [35, 38, 39, 84, 89, 90, 1407], "function_unsupported_dtyp": [35, 38, 39, 84, 89, 90, 138, 325], "get_all_arrays_in_memori": [35, 38, 39, 84, 89, 90, 1407, 1536], "get_all_ivy_arrays_on_dev": [35, 38, 39, 84, 89, 90, 139, 430], "get_array_mod": [35, 38, 39, 84, 89, 90, 1407, 1547, 1590], "get_exception_trace_mod": [35, 38, 39, 84, 89, 90, 1407, 1482, 1548, 1591], "get_item": [35, 38, 39, 84, 89, 90, 1407], "get_min_bas": [35, 38, 39, 84, 89, 90, 1407, 1549], "get_min_denomin": [35, 38, 39, 84, 89, 90, 1407, 1550], "get_nestable_mod": [35, 38, 39, 84, 89, 90, 1407, 1551, 1592], "get_queue_timeout": [35, 38, 39, 84, 89, 90, 1407, 1552, 1593], "get_referrers_recurs": [35, 38, 39, 84, 89, 90, 1407], "get_show_func_wrapper_trace_mod": [35, 38, 39, 84, 89, 90, 1407, 1554, 1595], "get_tmp_dir": [35, 38, 39, 84, 89, 90, 1407, 1555], "gpu_is_avail": [35, 38, 39, 84, 89, 90, 430], "grad": [35, 38, 39, 84, 89, 90, 157, 158, 159, 1602, 1604, 1607, 2118, 2175, 2179], "handle_array_funct": [35, 38, 39, 84, 89, 90, 172], "handle_array_like_without_promot": [35, 38, 39, 84, 89, 90, 172], "handle_except": [35, 38, 39, 84, 89, 90], "handle_nest": [35, 38, 39, 84, 89, 90, 136, 145, 146, 154, 172], "handle_out_argu": [35, 38, 39, 84, 89, 90, 138, 139, 144, 146, 147, 154, 172], "infer_default_dtyp": [35, 38, 39, 84, 89, 90, 325], "infer_devic": [35, 38, 39, 84, 89, 90, 138, 139, 144, 146, 172], "infer_dtyp": [35, 38, 39, 84, 89, 90, 138, 139, 144, 146, 172], "inplace_arrays_support": [35, 38, 39, 84, 89, 90, 1407], "inplace_variables_support": [35, 38, 39, 84, 89, 90, 1407], "inputs_to_ivy_arrai": [35, 38, 39, 84, 89, 90, 146, 172], "inputs_to_native_arrai": [35, 38, 39, 84, 89, 90, 134, 146, 172], "integer_arrays_to_float": [35, 38, 39, 84, 89, 90, 172], "invalid_dtyp": [35, 38, 39, 84, 89, 90, 138, 325], "is_complex_dtyp": [35, 38, 39, 95, 96, 325, 395], "isscalar": [35, 38, 39, 84, 89, 90, 1407], "jac": [35, 38, 39, 84, 89, 90, 1602], "mt": [35, 38, 39, 156], "matric": [35, 38, 39, 45, 46, 62, 63, 110, 111, 170, 239, 284, 287, 307, 309, 311, 312, 314, 316, 1640, 1684, 1687, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1824, 1827, 2130, 2245, 2252], "n": [35, 38, 39, 45, 46, 53, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 78, 79, 80, 81, 99, 100, 101, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 126, 127, 128, 129, 132, 150, 239, 284, 285, 287, 307, 309, 311, 312, 314, 316, 818, 819, 820, 821, 822, 838, 839, 840, 841, 842, 843, 846, 880, 886, 887, 892, 893, 894, 895, 896, 898, 900, 907, 908, 909, 910, 911, 912, 913, 915, 918, 919, 920, 921, 922, 928, 931, 933, 936, 938, 944, 964, 987, 988, 989, 990, 991, 1062, 1063, 1064, 1065, 1066, 1082, 1083, 1084, 1085, 1086, 1134, 1140, 1141, 1144, 1145, 1159, 1160, 1162, 1164, 1167, 1168, 1188, 1191, 1193, 1200, 1210, 1289, 1290, 1292, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1316, 1318, 1320, 1333, 1334, 1343, 1348, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1386, 1387, 1388, 1389, 1390, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1694, 1697, 1704, 1725, 1726, 1727, 1728, 1729, 1741, 1744, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1886, 1887, 1888, 1889, 1890, 1916, 1919, 1936, 1937, 1938, 1939, 1940, 1945, 1954, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 2013, 2014, 2015, 2016, 2017, 2060, 2079, 2080, 2082, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "match_kwarg": [35, 38, 39, 84, 89, 90, 1407], "multiprocess": [35, 38, 39, 84, 87, 88, 89, 90, 157, 171, 1407], "ndim": [35, 38, 39, 53, 62, 63, 72, 73, 110, 111, 120, 121, 136, 142, 808, 809, 813, 814, 818, 819, 821, 1188, 1191, 1407, 1601, 1704, 1786, 1787, 1788, 1789, 1790, 1801, 1805, 1997, 2013, 2014, 2015, 2016, 2017, 2124, 2125], "int": [35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 136, 138, 139, 140, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 159, 189, 202, 203, 205, 222, 223, 225, 227, 228, 229, 230, 231, 239, 244, 246, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298, 307, 309, 311, 312, 314, 316, 325, 343, 344, 345, 346, 347, 362, 368, 369, 372, 380, 383, 401, 404, 427, 430, 447, 448, 449, 455, 456, 457, 458, 459, 460, 465, 481, 482, 483, 484, 485, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 761, 762, 763, 764, 765, 789, 790, 792, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 859, 861, 862, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893, 894, 895, 896, 898, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 938, 943, 944, 946, 951, 952, 958, 959, 962, 964, 967, 970, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1042, 1043, 1044, 1045, 1049, 1051, 1052, 1053, 1055, 1056, 1062, 1063, 1064, 1065, 1066, 1082, 1083, 1084, 1085, 1086, 1098, 1099, 1100, 1101, 1102, 1116, 1118, 1119, 1120, 1122, 1123, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1159, 1160, 1161, 1162, 1163, 1176, 1178, 1179, 1180, 1183, 1185, 1186, 1187, 1188, 1192, 1193, 1196, 1200, 1203, 1206, 1207, 1208, 1209, 1210, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1278, 1280, 1281, 1282, 1285, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1326, 1327, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1407, 1413, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1483, 1484, 1486, 1537, 1538, 1539, 1540, 1541, 1558, 1561, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1694, 1697, 1704, 1710, 1711, 1712, 1713, 1714, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1811, 1814, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1844, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1952, 1953, 1955, 1957, 1958, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2016, 2017, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2124, 2125, 2149, 2150, 2153, 2227, 2229, 2236, 2241, 2242, 2245, 2248, 2256], "normalize_axis_tupl": [35, 38, 39, 84, 89, 90], "num_arrays_in_memori": [35, 38, 39, 84, 89, 90, 1407], "num_cpu_cor": [35, 38, 39, 84, 89, 90, 139, 430], "num_gpu": [35, 38, 39, 84, 89, 90, 139, 150, 430], "num_ivy_arrays_on_dev": [35, 38, 39, 84, 89, 90, 430], "ones": [35, 38, 39, 45, 46, 53, 56, 57, 60, 61, 70, 71, 84, 87, 88, 89, 90, 93, 94, 101, 108, 109, 118, 119, 134, 137, 140, 144, 150, 156, 157, 239, 260, 261, 269, 270, 272, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 320, 324, 430, 443, 444, 465, 541, 544, 880, 881, 982, 983, 984, 985, 986, 1602, 1604, 1605, 1607, 1640, 1662, 1663, 1664, 1665, 1666, 1976, 1977, 1978, 1981, 1982, 1983, 1986, 1987, 1988, 2118, 2130], "outputs_to_ivy_arrai": [35, 38, 39, 84, 89, 90, 134, 138, 139, 144, 146, 172], "percent_used_mem_on_dev": [35, 38, 39, 84, 89, 90, 430], "print_all_arrays_in_memori": [35, 38, 39, 84, 89, 90, 1407], "print_all_ivy_arrays_on_dev": [35, 38, 39, 84, 89, 90, 430], "promote_typ": [35, 38, 39, 84, 89, 90, 138, 325], "promote_types_of_input": [35, 38, 39, 84, 89, 90, 138, 147, 325], "seed": [35, 38, 39, 53, 60, 61, 70, 71, 74, 75, 84, 87, 88, 89, 90, 101, 108, 109, 118, 119, 149, 150, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 912, 913, 914, 915, 916, 1032, 1033, 1034, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1309, 1310, 1640, 1679, 1680, 1681, 1682, 1683, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2023, 2024, 2026, 2028, 2118, 2272], "set_array_mod": [35, 38, 39, 84, 89, 90, 1407, 1477, 1590], "set_default_complex_dtyp": [35, 38, 39, 84, 89, 90, 325, 355, 356, 424], "set_default_devic": [35, 38, 39, 84, 89, 90, 139, 430, 463], "set_default_dtyp": [35, 38, 39, 84, 89, 90, 138, 145, 325, 425], "set_default_float_dtyp": [35, 38, 39, 84, 89, 90, 138, 325, 359, 360, 385, 418, 426], "set_default_int_dtyp": [35, 38, 39, 84, 89, 90, 138, 325, 362, 385, 427], "set_default_uint_dtyp": [35, 38, 39, 84, 89, 90, 325, 363, 385, 428], "set_exception_trace_mod": [35, 38, 39, 84, 89, 90, 142, 1407, 1478, 1591], "set_min_bas": [35, 38, 39, 84, 89, 90, 1407], "set_min_denomin": [35, 38, 39, 84, 89, 90, 1407], "set_nestable_mod": [35, 38, 39, 84, 89, 90, 1407, 1482, 1592], "set_queue_timeout": [35, 38, 39, 84, 89, 90, 1407, 1488, 1593], "set_shape_array_mod": [35, 38, 39, 84, 89, 90, 1407, 1557, 1594], "set_show_func_wrapper_trace_mod": [35, 38, 39, 84, 89, 90, 142, 1407, 1490, 1595], "set_split_factor": [35, 38, 39, 84, 89, 90, 142, 430], "set_tmp_dir": [35, 38, 39, 84, 89, 90, 1407], "set_with_grad": [35, 38, 39, 84, 89, 90, 1602, 1637, 1639], "shape_array_mod": [35, 38, 39, 84, 89, 90, 1407, 1553, 1594], "size": [35, 38, 39, 53, 54, 55, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 84, 87, 88, 89, 90, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 149, 150, 157, 239, 274, 277, 430, 453, 454, 455, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 848, 875, 876, 877, 878, 879, 880, 883, 888, 889, 912, 913, 914, 915, 916, 918, 921, 938, 943, 959, 1053, 1054, 1055, 1056, 1098, 1099, 1100, 1101, 1102, 1134, 1135, 1136, 1138, 1139, 1147, 1148, 1149, 1159, 1162, 1188, 1193, 1209, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1333, 1334, 1343, 1345, 1346, 1347, 1348, 1360, 1361, 1362, 1363, 1364, 1382, 1385, 1407, 1537, 1538, 1539, 1540, 1541, 1640, 1699, 1700, 1701, 1702, 1703, 1704, 1725, 1726, 1728, 1741, 1744, 1756, 1757, 1758, 1759, 1760, 1776, 1779, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1829, 1833, 1860, 1876, 1877, 1878, 1879, 1880, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1970, 1971, 1972, 1973, 1974, 1975, 1997, 1998, 1999, 2000, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2106, 2107, 2110, 2112, 2115, 2159, 2160, 2161, 2227, 2229, 2230, 2235, 2236, 2237, 2238, 2245, 2251, 2256, 2257, 2258], "split_factor": [35, 38, 39, 84, 89, 90, 142, 430, 453], "split_func_cal": [35, 38, 39, 84, 89, 90, 430], "to_ivi": [35, 38, 39, 40, 91, 92, 1945, 1959], "to_ivy_shap": [35, 38, 39, 84, 89, 90, 1407], "to_n": [35, 38, 39, 40, 91, 92, 154], "to_native_arrays_and_back": [35, 38, 39, 84, 89, 90, 144, 146, 154, 172], "to_native_shap": [35, 38, 39, 84, 89, 90, 1407], "total_mem_on_dev": [35, 38, 39, 84, 89, 90, 139, 430], "tpu_is_avail": [35, 38, 39, 84, 89, 90, 430], "try_else_non": [35, 38, 39, 84, 89, 90, 1407], "type_promote_arrai": [35, 38, 39, 84, 89, 90, 138, 325], "unset_array_mod": [35, 38, 39, 84, 89, 90, 1407], "unset_default_complex_dtyp": [35, 38, 39, 84, 89, 90, 325], "unset_default_devic": [35, 38, 39, 84, 89, 90, 430], "unset_default_dtyp": [35, 38, 39, 84, 89, 90, 325, 419], "unset_default_float_dtyp": [35, 38, 39, 84, 89, 90, 325], "unset_default_int_dtyp": [35, 38, 39, 84, 89, 90, 325], "unset_default_uint_dtyp": [35, 38, 39, 84, 89, 90, 325], "unset_exception_trace_mod": [35, 38, 39, 84, 89, 90, 1407], "unset_nestable_mod": [35, 38, 39, 84, 89, 90, 1407], "unset_queue_timeout": [35, 38, 39, 84, 89, 90, 1407], "unset_shape_array_mod": [35, 38, 39, 84, 89, 90, 1407, 1590, 1593], "unset_show_func_wrapper_trace_mod": [35, 38, 39, 84, 89, 90, 1407], "unset_with_grad": [35, 38, 39, 84, 89, 90, 1602], "used_mem_on_dev": [35, 38, 39, 84, 89, 90, 430], "valid_dtyp": [35, 38, 39, 84, 89, 90, 325], "value_and_grad": [35, 38, 39, 84, 89, 90, 1602], "vmap": [35, 38, 39, 84, 89, 90, 171, 1407, 2130], "with_grad": [35, 38, 39, 84, 89, 90, 1602, 1603, 1631, 1637, 2171, 2172], "overview": [35, 84, 137, 150, 153, 170, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "forum": [35, 84, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 189, 232, 233, 239, 325, 430, 465, 1406, 1407, 1602, 1640, 1704, 1844, 1860, 1941, 1945, 1965, 1970, 1997, 2044, 2060, 2106, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2142, 2149, 2159, 2171, 2173, 2175, 2181], "abc": [36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 156, 430, 432, 1407, 1456, 1458, 1945, 1964, 2124, 2125, 2147, 2148, 2149, 2153, 2175, 2179], "gelu": [36, 37, 85, 86, 189, 195, 2139], "approxim": [36, 37, 53, 62, 63, 85, 86, 99, 100, 101, 110, 111, 141, 148, 189, 191, 192, 193, 194, 195, 465, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 501, 504, 546, 549, 551, 554, 576, 579, 581, 584, 636, 639, 641, 644, 646, 649, 651, 654, 711, 714, 741, 744, 746, 749, 766, 770, 771, 775, 938, 952, 963, 964, 1042, 1043, 1044, 1045, 1328, 1331, 1365, 1366, 1367, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785, 2139, 2141], "138": [36, 37, 189, 191, 192, 194], "165": [36, 37, 189, 191, 192, 194, 1640, 1684, 1687], "leaky_relu": [36, 37, 85, 86, 189, 201, 2118], "alpha": [36, 37, 51, 52, 53, 85, 86, 99, 100, 101, 148, 149, 189, 197, 198, 199, 200, 201, 465, 481, 482, 483, 484, 485, 761, 762, 763, 764, 765, 843, 844, 845, 846, 847, 880, 882, 912, 913, 914, 915, 916, 1032, 1033, 1034, 1049, 1050, 1051, 1052, 1305, 1307, 1308, 1309], "slope": [36, 37, 53, 85, 86, 101, 189, 197, 198, 199, 200, 201, 789, 791, 1295, 1296, 1297, 1298, 1299], "neg": [36, 37, 51, 52, 53, 62, 63, 66, 67, 70, 71, 80, 81, 85, 86, 99, 100, 101, 110, 111, 114, 115, 118, 119, 128, 129, 136, 145, 147, 189, 197, 198, 199, 200, 201, 239, 241, 242, 260, 261, 465, 606, 609, 611, 612, 613, 614, 615, 700, 711, 714, 726, 729, 880, 881, 886, 887, 902, 905, 938, 958, 982, 983, 984, 985, 1164, 1166, 1248, 1249, 1250, 1251, 1252, 1368, 1371, 1372, 1375, 1704, 1720, 1723, 1801, 1805, 1819, 1820, 1821, 1822, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1866, 1867, 1869, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1905, 1970, 1981, 1982, 1983, 1984, 1985, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2227, 2236, 2245, 2248], "leaki": [36, 37, 85, 86, 189, 197, 198, 199, 200, 201], "relu": [36, 37, 53, 82, 83, 85, 86, 149, 157, 158, 189, 197, 198, 199, 200, 201, 216, 789, 791, 1295, 1298, 1355, 1357, 2118], "39": [36, 37, 51, 52, 53, 70, 71, 85, 86, 99, 100, 101, 104, 105, 118, 119, 189, 197, 198, 199, 200, 201, 465, 491, 494, 576, 579, 636, 637, 639, 646, 647, 649, 650, 656, 659, 828, 831, 892, 893, 894, 895, 896, 1134, 1136, 1140, 1150, 1227, 1228, 1230, 1602, 1604, 1606, 1607, 1704, 1776, 1779, 1981, 1982, 1983, 1985, 2060, 2071, 2074], "85": [36, 37, 70, 71, 84, 85, 86, 89, 90, 99, 100, 104, 105, 108, 109, 118, 119, 189, 197, 198, 199, 200, 201, 465, 486, 488, 531, 534, 536, 538, 539, 540, 716, 718, 719, 720, 1407, 1558, 1561, 1602, 1614, 1616, 1617, 1640, 1684, 1686, 1687, 1688, 1970, 1976, 1977, 1981, 1982, 1983, 1986, 1987, 1989], "17": [36, 37, 53, 84, 85, 86, 89, 90, 99, 100, 101, 102, 103, 104, 105, 108, 109, 118, 119, 136, 140, 189, 197, 198, 199, 200, 201, 202, 204, 206, 239, 279, 282, 465, 481, 483, 561, 564, 656, 659, 691, 693, 695, 823, 824, 825, 826, 827, 828, 829, 892, 895, 896, 987, 988, 989, 990, 991, 997, 998, 1000, 1082, 1083, 1084, 1085, 1086, 1134, 1135, 1140, 1144, 1145, 1148, 1149, 1188, 1196, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1407, 1446, 1448, 1503, 1506, 1507, 1602, 1604, 1606, 1607, 1640, 1642, 1644, 1646, 1679, 1682, 1684, 1686, 1687, 1688, 1704, 1725, 1728, 1806, 1810, 1945, 1954, 1970, 1976, 1978, 1980, 1981, 1983, 1986, 1988, 1990, 1992, 1995], "log_softmax": [36, 37, 85, 86, 189, 206], "98": [36, 37, 56, 57, 70, 71, 85, 86, 99, 100, 104, 105, 118, 119, 189, 202, 203, 204, 205, 206, 465, 536, 539, 551, 553, 555, 746, 748, 750, 1602, 1614, 1615, 1616, 1617, 1704, 1776, 1779, 1945, 1947, 1976, 1977, 1986, 1988, 1997, 2018, 2022, 2060, 2071, 2074], "35": [36, 37, 60, 61, 85, 86, 99, 100, 101, 108, 109, 110, 111, 118, 119, 202, 203, 204, 206, 465, 501, 503, 504, 505, 751, 753, 755, 833, 837, 892, 895, 1134, 1140, 1640, 1684, 1685, 1686, 1687, 1688, 1699, 1701, 1702, 1703, 1704, 1710, 1712, 1713, 1714, 1981, 1983, 1985, 1986, 1990, 1997, 2018, 2022, 2060, 2071, 2074], "0719": [36, 37, 85, 86, 202, 203, 204, 206], "62": [36, 37, 85, 86, 101, 116, 117, 118, 119, 202, 203, 204, 206, 465, 746, 749, 1154, 1156, 1158, 1965, 1966, 1968, 1969, 1970, 1976, 1978, 1986, 1989], "221": [36, 37, 202, 203], "82": [36, 37, 51, 52, 104, 105, 118, 119, 142, 202, 203, 491, 492, 1602, 1604, 1606, 1607, 1981, 1983, 1986, 1988], "mish": [36, 37, 85, 86, 189, 211], "30340147": [36, 37, 189, 207, 208, 210], "86509842": [36, 37, 85, 86, 189, 207, 208, 209, 210, 211], "sigmoid": [36, 37, 53, 85, 86, 101, 154, 157, 158, 189, 190, 196, 221, 838, 839, 840, 841, 842, 1305, 1306, 2118], "269": [36, 37, 189, 217, 218, 220], "731": [36, 37, 189, 217, 218, 220], "881": [36, 37, 51, 52, 99, 100, 189, 217, 218, 220, 465, 491, 492, 493, 494, 556, 558, 559, 716, 718], "softmax": [36, 37, 60, 61, 82, 83, 85, 86, 108, 109, 189, 226, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 2118], "unionsoftplu": [36, 37, 85, 86, 152, 189, 231, 2118], "beta": [36, 37, 53, 68, 69, 85, 86, 101, 116, 117, 152, 189, 227, 228, 229, 230, 231, 847, 880, 882, 884, 885, 912, 915, 1032, 1033, 1034, 1049, 1050, 1051, 1052, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1305, 1308, 1309, 1965, 1966, 1967, 1968, 1969], "threshold": [36, 37, 51, 52, 53, 85, 86, 99, 100, 101, 152, 189, 227, 228, 229, 230, 231, 465, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 789, 792, 849, 850, 851, 852, 853, 938, 941, 1355, 1356, 1357, 1358, 1359], "3461": [36, 37, 85, 86, 189, 227, 228, 229, 230, 231], "6491": [36, 37, 85, 86, 189, 227, 228, 229, 230, 231], "535": [36, 37, 85, 86, 189, 227, 228, 229, 230], "42": [36, 37, 70, 71, 85, 86, 104, 105, 116, 117, 118, 119, 154, 159, 189, 227, 228, 229, 230, 465, 531, 534, 892, 895, 1134, 1140, 1602, 1604, 1607, 1614, 1616, 1617, 1704, 1756, 1759, 1776, 1779, 1965, 1966, 1968, 1969, 1970, 1971, 1974, 1976, 1979, 1981, 1982, 1983, 1984, 1986, 1989, 1991, 2060, 2061, 2064, 2071, 2074], "22": [36, 37, 51, 52, 53, 54, 55, 70, 71, 78, 79, 85, 86, 101, 102, 103, 108, 109, 118, 119, 136, 189, 202, 204, 206, 227, 228, 230, 465, 536, 537, 539, 823, 824, 826, 828, 829, 833, 835, 892, 895, 896, 1134, 1135, 1140, 1148, 1149, 1150, 1217, 1218, 1220, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1343, 1349, 1376, 1377, 1378, 1379, 1380, 1446, 1448, 1542, 1543, 1596, 1597, 1599, 1640, 1679, 1682, 1684, 1686, 1687, 1688, 1704, 1725, 1728, 1746, 1749, 1776, 1779, 1945, 1954, 1964, 1976, 1978, 1981, 1982, 1983, 1986, 1988, 1997, 2018, 2022, 2060, 2066, 2067, 2071, 2072, 2074], "09": [36, 37, 51, 52, 104, 105, 118, 119, 189, 227, 228, 230, 465, 711, 712, 714, 756, 759, 1602, 1604, 1606, 1607, 1640, 1699, 1702, 1981, 1983], "31": [36, 37, 51, 52, 53, 99, 100, 101, 102, 103, 108, 109, 118, 119, 157, 189, 202, 205, 227, 228, 230, 239, 279, 282, 465, 531, 534, 656, 657, 659, 691, 693, 695, 833, 834, 836, 892, 895, 896, 1134, 1137, 1140, 1311, 1315, 1407, 1426, 1429, 1503, 1507, 1684, 1686, 1688, 1704, 1806, 1810, 1981, 1983, 1986, 1988], "55": [36, 37, 118, 119, 133, 227, 228, 465, 531, 534, 776, 780, 1407, 1498, 1501, 1704, 1746, 1749, 1776, 1779, 1806, 1810, 1970, 1981, 1983, 1984, 1986, 1988, 2060, 2071, 2074], "collect": [40, 87, 88, 91, 137, 142, 149, 150, 170, 189, 430, 1407, 1602, 1640, 1844, 1945, 1959, 1965, 1970, 2128, 2130, 2133, 2139, 2159, 2173, 2175], "include_deriv": [40, 41, 42, 43, 44, 91, 92, 1945, 1947, 1958], "nest": [40, 41, 42, 43, 44, 84, 87, 88, 89, 90, 91, 92, 134, 136, 145, 151, 157, 158, 171, 1407, 1574, 1577, 1601, 1602, 1612, 1631, 1637, 1639, 1941, 1942, 1943, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 2117, 2125, 2130, 2147, 2148, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180], "unchang": [40, 41, 42, 43, 44, 53, 997, 1000, 1188, 1196, 1311, 1312, 1640, 1679, 1682], "dict": [40, 41, 42, 43, 44, 54, 55, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 143, 157, 158, 189, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 430, 436, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 898, 899, 901, 907, 911, 918, 922, 977, 981, 982, 984, 986, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1183, 1185, 1187, 1188, 1206, 1273, 1275, 1277, 1282, 1285, 1295, 1297, 1299, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1461, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1533, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1947, 1949, 1952, 1953, 1954, 1955, 1957, 1958, 1959, 1963, 1964, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2117, 2142, 2143, 2144, 2195, 2214, 2216, 2218, 2220, 2286, 2297, 2302], "deriv": [40, 41, 42, 43, 44, 45, 46, 53, 56, 57, 91, 92, 93, 94, 101, 104, 105, 138, 139, 156, 158, 239, 255, 256, 258, 269, 270, 272, 302, 303, 304, 305, 306, 320, 321, 322, 323, 324, 880, 881, 884, 982, 983, 984, 985, 986, 1116, 1117, 1118, 1119, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1945, 1947, 1958, 2171, 2172, 2175, 2179, 2181], "tupl": [40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 60, 61, 62, 63, 66, 67, 72, 73, 74, 75, 78, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 138, 142, 143, 144, 149, 150, 154, 157, 158, 171, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 244, 245, 246, 269, 271, 273, 289, 292, 294, 296, 298, 302, 304, 306, 320, 321, 323, 325, 338, 340, 342, 343, 344, 345, 346, 347, 348, 350, 352, 374, 375, 377, 378, 380, 382, 384, 392, 393, 395, 396, 398, 400, 412, 413, 415, 417, 423, 430, 436, 443, 444, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 842, 843, 845, 847, 849, 851, 853, 858, 859, 861, 862, 875, 876, 877, 878, 879, 880, 886, 887, 898, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 928, 929, 930, 931, 932, 938, 943, 944, 945, 946, 947, 951, 952, 957, 959, 962, 972, 973, 975, 976, 982, 984, 986, 987, 988, 989, 990, 991, 992, 995, 1002, 1006, 1012, 1013, 1015, 1016, 1035, 1036, 1038, 1039, 1042, 1043, 1044, 1045, 1047, 1048, 1062, 1063, 1064, 1065, 1066, 1072, 1074, 1076, 1082, 1083, 1084, 1085, 1086, 1106, 1108, 1110, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1141, 1144, 1145, 1148, 1149, 1150, 1164, 1167, 1171, 1172, 1174, 1175, 1183, 1185, 1187, 1188, 1192, 1193, 1200, 1205, 1206, 1207, 1209, 1210, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1243, 1246, 1247, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1271, 1273, 1275, 1277, 1282, 1285, 1289, 1291, 1293, 1305, 1308, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1326, 1327, 1328, 1330, 1332, 1333, 1335, 1343, 1345, 1346, 1347, 1349, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1362, 1363, 1364, 1368, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1460, 1461, 1462, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1479, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1601, 1602, 1604, 1607, 1608, 1611, 1614, 1616, 1619, 1622, 1632, 1633, 1635, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1699, 1701, 1703, 1704, 1705, 1707, 1709, 1710, 1712, 1714, 1730, 1731, 1732, 1734, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1805, 1811, 1814, 1815, 1816, 1819, 1820, 1822, 1834, 1835, 1837, 1838, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1961, 1962, 1963, 1964, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 2008, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2045, 2047, 2049, 2060, 2061, 2063, 2065, 2066, 2068, 2070, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2142, 2144, 2149, 2150, 2153, 2154, 2157, 2227, 2235, 2236, 2241, 2243, 2245, 2248, 2251, 2253], "str": [40, 41, 42, 45, 46, 53, 54, 55, 60, 61, 62, 63, 66, 67, 78, 79, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 138, 139, 142, 143, 148, 151, 154, 159, 189, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 239, 269, 271, 273, 284, 285, 287, 294, 296, 298, 302, 304, 306, 320, 321, 323, 325, 331, 338, 340, 342, 348, 350, 352, 354, 355, 356, 358, 359, 360, 368, 369, 372, 380, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 406, 409, 413, 415, 417, 418, 419, 420, 421, 422, 429, 430, 431, 432, 433, 455, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 898, 899, 900, 901, 907, 911, 917, 918, 922, 977, 981, 982, 984, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1082, 1083, 1084, 1085, 1086, 1092, 1094, 1095, 1096, 1106, 1108, 1110, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1144, 1145, 1148, 1149, 1150, 1183, 1185, 1187, 1188, 1196, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1273, 1275, 1277, 1278, 1279, 1295, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1343, 1348, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1437, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1478, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1555, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1632, 1633, 1635, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1704, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1739, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1860, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1963, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2060, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2072, 2074, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2195, 2213, 2214, 2215, 2216, 2218, 2220, 2241, 2243, 2260, 2261, 2272, 2273, 2274, 2275, 2276, 2277, 2286, 2294], "kei": [40, 41, 42, 53, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 143, 148, 149, 150, 157, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 907, 911, 918, 922, 982, 984, 986, 1002, 1006, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1159, 1160, 1161, 1162, 1163, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1333, 1334, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1436, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1640, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1945, 1949, 1955, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2130, 2133, 2137, 2142, 2143, 2146, 2147, 2148, 2159, 2170, 2175, 2179, 2227, 2229, 2241, 2242, 2244, 2262, 2267], "word": [40, 41, 42, 136, 148, 239, 241, 242, 1970, 1986, 1989, 2117, 2142, 2143, 2146], "cont_inplac": [40, 42, 44], "leaf": [40, 43, 87, 88, 126, 127, 136, 145, 157, 1945, 1956, 1957, 1959, 2066, 2068, 2070], "travers": [40, 43, 44, 91, 92, 136, 138, 154, 1945, 1958], "lowest": [40, 43, 44, 70, 71, 91, 92, 118, 119, 145, 171, 1945, 1958, 1970, 1976, 1977, 1978, 1979, 1980, 2117, 2127, 2131, 2135], "asarrai": [45, 46, 53, 54, 55, 84, 89, 90, 101, 102, 103, 146, 147, 148, 149, 239, 1159, 1160, 1161, 1163, 1243, 1244, 1245, 1246, 1247, 1333, 1335, 1407, 1441, 1444, 1483, 1485, 1486, 1487, 1498, 1499, 1503, 1504, 1558, 1559, 1560, 1561, 1562, 1640, 1642, 1645, 2023, 2029, 2033], "nativedtyp": [45, 46, 47, 48, 53, 60, 61, 70, 71, 72, 73, 78, 79, 93, 94, 101, 110, 111, 118, 119, 120, 121, 126, 127, 138, 139, 144, 151, 154, 239, 241, 242, 244, 245, 246, 254, 255, 256, 258, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 317, 319, 320, 321, 322, 323, 324, 325, 332, 333, 336, 354, 355, 356, 358, 359, 360, 362, 363, 364, 366, 368, 385, 386, 411, 419, 429, 838, 839, 840, 841, 842, 843, 844, 846, 875, 876, 877, 878, 879, 880, 881, 883, 884, 888, 890, 891, 912, 913, 914, 915, 916, 938, 943, 959, 982, 983, 984, 985, 986, 1032, 1033, 1034, 1053, 1054, 1055, 1056, 1104, 1116, 1118, 1253, 1254, 1255, 1256, 1257, 1263, 1264, 1265, 1266, 1267, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1309, 1310, 1343, 1346, 1382, 1385, 1640, 1679, 1680, 1682, 1704, 1834, 1835, 1837, 1838, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2087, 2088, 2089, 2090, 2091, 2096, 2100, 2149, 2150, 2153], "datatyp": [45, 46, 87, 88, 151, 239, 244, 245, 269, 270, 272, 289, 290, 292, 325, 354, 411, 419, 2184, 2190], "infer": [45, 46, 53, 54, 55, 60, 61, 66, 67, 93, 94, 101, 102, 103, 108, 109, 114, 115, 132, 135, 138, 139, 146, 150, 154, 159, 239, 241, 242, 244, 245, 255, 256, 258, 268, 269, 270, 271, 272, 273, 289, 290, 292, 302, 303, 304, 305, 306, 320, 321, 322, 323, 324, 325, 355, 356, 358, 359, 360, 362, 363, 912, 915, 982, 983, 984, 986, 1305, 1308, 1407, 1483, 1484, 1485, 1486, 1487, 1556, 1640, 1679, 1680, 1681, 1682, 1683, 1860, 1896, 1897, 1898, 1899, 1900, 2128, 2129, 2132, 2134, 2142, 2144, 2286, 2292, 2293], "nativedevic": [45, 46, 49, 50, 53, 70, 71, 93, 94, 97, 98, 101, 118, 119, 138, 139, 142, 144, 151, 239, 241, 242, 244, 245, 246, 254, 255, 256, 258, 260, 261, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 289, 290, 292, 294, 295, 297, 299, 300, 302, 303, 304, 305, 306, 317, 319, 320, 321, 322, 323, 324, 430, 431, 434, 435, 436, 437, 438, 440, 442, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 838, 839, 840, 841, 842, 843, 844, 846, 880, 881, 886, 887, 977, 978, 979, 981, 982, 983, 984, 985, 986, 1032, 1033, 1034, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1309, 1310, 1368, 1371, 1372, 1375, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2149, 2150, 2153, 2175, 2176, 2177, 2179, 2181, 2182], "interpret": [45, 46, 137, 239, 244, 245, 246, 289, 290, 292, 2131], "copy_arrai": [45, 46, 84, 89, 90, 239], "to_ivy_arrai": [45, 46, 239, 251, 252, 253], "object": [45, 46, 49, 50, 70, 71, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 118, 119, 134, 136, 137, 146, 148, 149, 150, 156, 159, 189, 190, 196, 239, 251, 252, 253, 263, 266, 299, 300, 325, 326, 327, 328, 329, 330, 353, 369, 371, 372, 373, 380, 382, 384, 412, 430, 431, 456, 457, 458, 459, 460, 686, 688, 690, 787, 788, 843, 845, 847, 890, 891, 1104, 1336, 1337, 1338, 1471, 1475, 1602, 1603, 1945, 1949, 1951, 1953, 1954, 1955, 1961, 1962, 1963, 1964, 1970, 1992, 1993, 1994, 1995, 1996, 2124, 2125, 2130, 2136, 2142, 2143, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2171, 2172, 2195, 2215, 2218, 2220, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2286, 2287, 2296], "empty_lik": [45, 46, 93, 94, 152, 239], "deafult": [45, 46, 72, 73, 120, 121, 239, 255, 256, 258, 1997, 1998, 1999, 2000, 2001, 2002], "uniniti": [45, 46, 239, 254, 255, 256, 258], "from_dlpack": [45, 46, 93, 94, 239], "full_lik": [45, 46, 93, 94, 151, 239, 273], "scalar": [45, 46, 51, 52, 53, 54, 55, 85, 86, 93, 94, 99, 100, 101, 102, 103, 110, 111, 138, 148, 171, 197, 199, 201, 239, 269, 270, 271, 272, 273, 294, 295, 296, 297, 298, 465, 481, 482, 483, 484, 485, 761, 762, 763, 764, 765, 808, 809, 811, 813, 814, 816, 818, 819, 821, 865, 866, 867, 868, 869, 907, 908, 909, 910, 911, 938, 942, 944, 945, 947, 952, 955, 962, 972, 973, 975, 1012, 1013, 1015, 1042, 1043, 1044, 1045, 1057, 1058, 1060, 1106, 1109, 1188, 1189, 1190, 1191, 1199, 1323, 1326, 1407, 1584, 1585, 1586, 1587, 1588, 1596, 1600, 1704, 1834, 1835, 1837, 1838, 2130, 2142, 2144], "fill": [45, 46, 53, 70, 71, 72, 73, 87, 88, 93, 94, 101, 118, 119, 120, 121, 149, 239, 254, 268, 269, 270, 271, 272, 273, 279, 281, 283, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 317, 319, 320, 321, 322, 323, 324, 843, 846, 880, 881, 938, 958, 982, 983, 984, 985, 986, 1032, 1034, 1248, 1249, 1250, 1251, 1252, 1305, 1307, 1309, 1970, 1976, 1977, 1978, 1979, 1980, 1997, 2013, 2014, 2015, 2016, 2017, 2149, 2150, 2155, 2157, 2158], "000123": [45, 46, 239, 269, 270, 272], "linspac": [45, 46, 93, 94, 144, 152, 154, 239, 241, 242, 2118, 2137], "stop": [45, 46, 56, 57, 93, 94, 104, 105, 144, 152, 154, 171, 239, 241, 242, 243, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 430, 432, 455, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1941, 1942, 1943, 1944, 1945, 1957, 2130, 2175, 2176, 2177, 2178, 2179, 2180], "endpoint": [45, 46, 93, 94, 144, 239, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 2149, 2157], "logspac": [45, 46, 93, 94, 154, 239, 283], "rang": [45, 46, 93, 94, 138, 142, 150, 154, 157, 158, 159, 239, 241, 242, 274, 277, 279, 280, 281, 282, 283, 1407, 1441, 1444, 1601, 1602, 1637, 2023, 2024, 2028, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2118, 2130, 2136, 2149, 2157, 2227, 2231, 2235, 2236, 2238, 2245, 2252, 2256, 2257, 2258, 2259], "sampl": [45, 46, 53, 70, 71, 78, 79, 93, 94, 99, 100, 101, 118, 119, 126, 127, 146, 149, 150, 239, 274, 277, 279, 280, 281, 282, 283, 838, 839, 840, 841, 842, 843, 844, 846, 912, 913, 914, 915, 916, 917, 938, 964, 1032, 1033, 1034, 1098, 1099, 1100, 1101, 1102, 1134, 1142, 1147, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1309, 1310, 1365, 1366, 1367, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2159, 2167], "on_valu": [45, 46, 93, 94, 239, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298], "off_valu": [45, 46, 93, 94, 239, 279, 280, 281, 282, 283, 294, 295, 296, 297, 298], "float32": [45, 46, 47, 48, 60, 61, 93, 94, 95, 96, 102, 103, 108, 109, 126, 127, 138, 140, 149, 150, 239, 279, 280, 281, 282, 283, 294, 295, 296, 298, 302, 305, 320, 324, 325, 331, 332, 348, 349, 350, 352, 359, 360, 364, 366, 368, 369, 370, 372, 374, 375, 385, 392, 393, 395, 396, 398, 399, 400, 401, 404, 413, 416, 417, 420, 426, 880, 888, 892, 895, 938, 947, 1012, 1015, 1134, 1140, 1382, 1385, 1407, 1579, 1580, 1583, 1640, 1652, 1654, 1655, 1662, 1663, 1665, 1674, 1675, 1676, 1678, 2066, 2070, 2195, 2215, 2227, 2235], "cuda": [45, 46, 53, 70, 71, 93, 94, 101, 102, 103, 118, 119, 154, 171, 239, 274, 277, 279, 280, 281, 282, 283, 294, 295, 297, 430, 433, 434, 435, 452, 453, 838, 839, 840, 841, 843, 846, 1032, 1034, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1309, 1310, 1471, 1473, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2117, 2135, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182], "evenli": [45, 46, 53, 60, 61, 66, 67, 87, 88, 93, 94, 99, 100, 108, 109, 114, 115, 239, 241, 242, 274, 277, 279, 280, 281, 282, 283, 938, 964, 1365, 1366, 1367, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1860, 1906, 1907, 1908, 1909, 1910], "simplic": [45, 46, 51, 52, 62, 63, 99, 100, 141, 152, 158, 170, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 892, 895, 907, 910, 917, 928, 931, 938, 944, 961, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1311, 1314, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105], "nestabl": [45, 46, 51, 52, 62, 63, 99, 100, 132, 140, 141, 147, 150, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 280, 282, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 387, 390, 401, 404, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 823, 826, 828, 831, 833, 836, 880, 881, 886, 887, 892, 895, 907, 910, 917, 928, 931, 938, 944, 982, 985, 1134, 1135, 1136, 1137, 1140, 1142, 1148, 1149, 1150, 1164, 1167, 1188, 1206, 1217, 1220, 1222, 1225, 1227, 1230, 1282, 1285, 1368, 1371, 1372, 1375, 1407, 1466, 1469, 1483, 1486, 1492, 1495, 1498, 1501, 1568, 1572, 1584, 1588, 1602, 1632, 1636, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1674, 1677, 1679, 1682, 1684, 1687, 1694, 1697, 1699, 1702, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1839, 1843, 1860, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1930, 1931, 1935, 1936, 1940, 1965, 1966, 1969, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2117], "01": [45, 46, 53, 54, 55, 56, 57, 101, 102, 103, 104, 105, 110, 111, 118, 119, 135, 159, 239, 279, 280, 282, 465, 656, 659, 731, 734, 736, 739, 854, 856, 880, 885, 892, 895, 928, 931, 1082, 1085, 1106, 1107, 1108, 1110, 1120, 1122, 1134, 1140, 1145, 1164, 1167, 1181, 1182, 1407, 1459, 1460, 1461, 1462, 1463, 1558, 1561, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1704, 1736, 1739, 1740, 1806, 1810, 1970, 1981, 1984, 1986, 1988, 2227, 2235], "02": [45, 46, 56, 57, 68, 69, 70, 71, 99, 100, 104, 105, 118, 119, 149, 239, 279, 280, 282, 465, 486, 488, 491, 493, 656, 659, 892, 895, 1082, 1085, 1134, 1140, 1145, 1407, 1558, 1561, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1965, 1966, 1967, 1969, 1970, 1981, 1982, 1983, 1986, 1989], "03": [45, 46, 51, 52, 56, 57, 99, 100, 104, 105, 118, 119, 239, 279, 280, 282, 465, 551, 552, 553, 555, 646, 649, 1407, 1558, 1561, 1602, 1608, 1609, 1610, 1611, 1619, 1621, 1622, 1640, 1699, 1702, 1704, 1746, 1749, 1981, 1983, 1986, 1990], "04": [45, 46, 56, 57, 85, 86, 95, 96, 104, 105, 150, 189, 197, 199, 200, 201, 202, 205, 239, 279, 280, 282, 325, 369, 371, 372, 373, 465, 581, 584, 1407, 1549, 1602, 1604, 1606, 1607, 1608, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1699, 1702, 2227, 2235], "05": [45, 46, 51, 52, 53, 56, 57, 68, 69, 99, 100, 101, 104, 105, 116, 117, 149, 150, 239, 279, 280, 282, 465, 656, 657, 658, 659, 660, 798, 799, 800, 801, 802, 880, 885, 938, 939, 955, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1108, 1109, 1110, 1120, 1122, 1278, 1279, 1407, 1480, 1498, 1501, 1549, 1602, 1604, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1704, 1756, 1759, 1965, 1966, 1967, 1968, 1969, 2173, 2174, 2184, 2185, 2227, 2235], "464": [45, 46, 51, 52, 118, 119, 239, 279, 280, 282, 465, 496, 497, 501, 504, 1981, 1985], "15888336": [45, 46, 239, 279, 280, 282], "1000": [45, 46, 93, 94, 157, 239, 279, 280, 281, 282, 283], "2154": [45, 46, 239, 279, 280, 282], "43469003": [45, 46, 239, 279, 280, 282], "10000": [45, 46, 93, 94, 239, 279, 280, 281, 282, 283], "meshgrid": [45, 46, 93, 94, 239], "spars": [45, 46, 64, 65, 93, 94, 112, 113, 239, 284, 285, 286, 287, 288, 1844, 1855, 1856, 1857, 1858, 1859], "xy": [45, 46, 93, 94, 239, 284, 285, 286, 287, 288], "arbitrari": [45, 46, 47, 48, 53, 87, 88, 95, 96, 136, 144, 145, 147, 148, 150, 158, 171, 239, 284, 285, 287, 325, 338, 339, 340, 341, 342, 413, 414, 415, 416, 417, 808, 809, 813, 814, 818, 819, 1602, 1612, 2131, 2136], "grid": [45, 46, 140, 150, 170, 239, 284, 285, 287], "coordin": [45, 46, 51, 52, 72, 73, 99, 100, 101, 120, 121, 239, 284, 285, 287, 465, 501, 502, 503, 504, 505, 880, 886, 887, 1042, 1044, 1188, 1204, 1205, 1270, 1271, 1343, 1349, 1368, 1371, 1372, 1375, 1376, 1380, 1997, 2013, 2014, 2015, 2016, 2017], "cartesian": [45, 46, 239, 284, 285, 287], "ij": [45, 46, 78, 79, 239, 284, 285, 287, 2060, 2071, 2072, 2074], "vector": [45, 46, 53, 54, 55, 60, 61, 62, 63, 102, 103, 108, 109, 110, 111, 170, 239, 284, 285, 287, 898, 900, 912, 913, 915, 1134, 1141, 1188, 1206, 1282, 1285, 1305, 1308, 1407, 1431, 1432, 1433, 1434, 1435, 1441, 1444, 1508, 1510, 1512, 1601, 1640, 1684, 1685, 1686, 1687, 1688, 1704, 1710, 1711, 1712, 1713, 1714, 1730, 1731, 1734, 1741, 1744, 1751, 1754, 1776, 1779, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1824, 1828, 1829, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1843, 2130, 2159, 2169], "ignor": [45, 46, 87, 88, 137, 140, 150, 171, 239, 284, 285, 287, 917, 1134, 1142, 1945, 1957, 1958, 2136, 2142, 2145, 2175, 2179], "rank": [45, 46, 53, 62, 63, 66, 67, 80, 81, 101, 110, 111, 114, 115, 128, 129, 142, 239, 284, 285, 287, 880, 881, 982, 985, 1188, 1206, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1704, 1710, 1713, 1720, 1723, 1766, 1767, 1768, 1769, 1770, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1819, 1820, 1821, 1822, 1823, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1916, 1919, 1931, 1935, 1936, 1937, 1938, 1939, 1940, 1997, 2013, 2016, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "length": [45, 46, 53, 66, 67, 84, 87, 88, 89, 90, 101, 114, 115, 143, 150, 157, 239, 241, 242, 284, 285, 287, 854, 855, 856, 857, 880, 882, 884, 885, 888, 898, 900, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 928, 931, 938, 944, 987, 988, 989, 990, 991, 1049, 1051, 1082, 1083, 1084, 1085, 1086, 1116, 1118, 1120, 1122, 1134, 1141, 1144, 1145, 1159, 1162, 1164, 1167, 1181, 1182, 1188, 1206, 1282, 1285, 1305, 1308, 1333, 1334, 1350, 1351, 1353, 1382, 1385, 1407, 1601, 1704, 1801, 1805, 1806, 1810, 1860, 1896, 1897, 1898, 1899, 1900, 2147, 2148, 2227, 2237], "ni": [45, 46, 239, 284, 285, 287], "len": [45, 46, 53, 62, 63, 101, 110, 111, 136, 137, 147, 148, 150, 156, 159, 239, 284, 285, 287, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1704, 1824, 1825, 1826, 1827, 1828], "xi": [45, 46, 239, 284, 285, 287], "native_arrai": [45, 46, 47, 48, 51, 52, 54, 55, 93, 94, 97, 98, 99, 100, 102, 103, 124, 125, 146, 149, 150, 189, 191, 194, 202, 205, 239, 269, 272, 284, 287, 294, 296, 297, 298, 302, 305, 320, 324, 325, 333, 336, 338, 339, 341, 343, 346, 348, 351, 364, 366, 380, 383, 401, 404, 430, 437, 439, 440, 441, 449, 456, 457, 459, 465, 511, 512, 531, 534, 536, 539, 556, 558, 559, 560, 561, 562, 564, 566, 567, 569, 591, 592, 594, 596, 599, 601, 604, 626, 629, 631, 632, 666, 668, 669, 691, 692, 694, 701, 702, 704, 716, 718, 719, 720, 726, 727, 728, 729, 730, 751, 753, 755, 854, 856, 1181, 1182, 1188, 1206, 1207, 1209, 1282, 1285, 1316, 1319, 1360, 1364, 1407, 1408, 1410, 1412, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1579, 1580, 1582, 1640, 1642, 1645, 1647, 1650, 1674, 1677, 1694, 1697, 1699, 1702, 1704, 1715, 1718, 1736, 1739, 1761, 1764, 1766, 1769, 1806, 1810, 1811, 1814, 1819, 1823, 1844, 1845, 1848, 1855, 1858, 1860, 1861, 1864, 1896, 1899, 1970, 1971, 1974, 1997, 2013, 2016, 2045, 2049, 2055, 2057, 2060, 2083, 2086, 2096, 2100, 2106, 2107, 2110, 2195, 2215, 2262, 2263, 2264, 2265, 2266, 2268, 2269, 2270, 2271, 2286, 2296, 2302], "one_hot": [45, 46, 93, 94, 159, 239, 298, 2118], "scatter": [45, 46, 54, 55, 93, 94, 102, 103, 152, 239, 294, 295, 296, 297, 298, 1407, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 2137], "hot": [45, 46, 93, 94, 239, 294, 295, 296, 297, 298], "unless": [45, 46, 53, 62, 63, 93, 94, 101, 135, 139, 147, 171, 239, 294, 295, 296, 297, 298, 798, 800, 802, 938, 959, 1106, 1107, 1108, 1110, 1263, 1264, 1265, 1266, 1267, 1704, 1766, 1767, 1769], "overrid": [45, 46, 93, 94, 134, 239, 294, 295, 296, 297, 298], "ones_lik": [45, 46, 93, 94, 135, 159, 239, 306, 2118], "tril": [45, 46, 93, 94, 239], "k": [45, 46, 53, 60, 61, 62, 63, 70, 71, 93, 94, 99, 100, 101, 108, 109, 110, 111, 118, 119, 132, 133, 148, 149, 154, 239, 260, 261, 262, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 661, 663, 665, 838, 839, 840, 841, 842, 843, 846, 880, 881, 886, 887, 902, 903, 904, 905, 912, 913, 914, 915, 916, 982, 983, 984, 985, 986, 1159, 1162, 1164, 1166, 1188, 1207, 1209, 1289, 1290, 1292, 1305, 1306, 1307, 1308, 1310, 1316, 1317, 1318, 1319, 1320, 1333, 1334, 1360, 1361, 1362, 1363, 1364, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1407, 1415, 1418, 1640, 1699, 1700, 1701, 1702, 1703, 1704, 1720, 1721, 1722, 1723, 1724, 1751, 1754, 1756, 1758, 1759, 1760, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823, 1945, 1954, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1997, 2013, 2016, 2126, 2130], "innermost": [45, 46, 62, 63, 110, 111, 239, 307, 309, 311, 312, 314, 316, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1819, 1820, 1821, 1822, 1823], "mxn": [45, 46, 62, 63, 110, 111, 239, 307, 309, 311, 312, 314, 316, 1704, 1725, 1726, 1727, 1728, 1729, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1806, 1810, 1819, 1820, 1821, 1822, 1823], "diagon": [45, 46, 53, 62, 63, 101, 110, 111, 239, 260, 261, 307, 309, 311, 312, 314, 316, 880, 881, 886, 887, 902, 905, 982, 983, 984, 985, 986, 1164, 1166, 1368, 1371, 1372, 1375, 1704, 1720, 1723, 1729, 1819, 1820, 1821, 1822, 1823], "triangular": [45, 46, 62, 63, 110, 111, 239, 307, 309, 311, 312, 314, 316, 880, 886, 887, 1368, 1371, 1372, 1375, 1704, 1705, 1706, 1707, 1708, 1709, 1736, 1739, 1786, 1787, 1788, 1789, 1790], "triu": [45, 46, 93, 94, 239], "upper": [45, 46, 53, 62, 63, 70, 71, 101, 110, 111, 118, 119, 147, 150, 239, 260, 261, 312, 314, 316, 880, 881, 887, 982, 983, 984, 985, 1372, 1375, 1704, 1705, 1706, 1707, 1708, 1709, 1736, 1739, 1786, 1787, 1788, 1789, 1790, 1970, 1986, 1987, 1988, 1989, 1990, 2147, 2148], "zeros_lik": [45, 46, 93, 94, 110, 111, 148, 152, 239, 321, 325, 333, 336, 465, 671, 674, 1602, 1604, 1607, 1608, 1611, 1614, 1617, 1619, 1622, 1627, 1630, 1640, 1647, 1650, 1657, 1660, 1674, 1677, 1781, 1783, 1860, 1861, 1864, 2118], "creation": [46, 84, 87, 88, 89, 90, 94, 138, 139, 142, 144, 146, 148, 149, 150, 151, 154, 240, 241, 242, 244, 246, 248, 249, 250, 251, 253, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 279, 282, 283, 284, 287, 289, 292, 294, 297, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 881, 882, 883, 884, 885, 886, 887, 888, 2130, 2132, 2136], "data_typ": [47, 48, 95, 96, 138, 150, 151, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 366, 368, 369, 372, 374, 375, 377, 378, 380, 383, 385, 386, 387, 390, 392, 394, 396, 399, 401, 404, 406, 409, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 890, 891], "astyp": [47, 48, 60, 61, 95, 96, 108, 109, 138, 147, 148, 152, 325, 1640, 1652, 1655, 1662, 1663, 1665, 1674, 1675, 1676, 1678], "irrespect": [47, 48, 62, 63, 95, 96, 110, 111, 136, 147, 156, 325, 333, 334, 335, 336, 337, 1704, 1801, 1802, 1803, 1804, 1805, 2137], "rule": [47, 48, 53, 62, 63, 95, 96, 99, 100, 110, 111, 133, 134, 136, 137, 138, 140, 143, 144, 145, 150, 152, 325, 333, 334, 335, 336, 337, 348, 349, 350, 351, 352, 411, 412, 413, 416, 465, 506, 509, 561, 564, 691, 694, 726, 729, 781, 785, 938, 964, 977, 980, 1188, 1195, 1365, 1366, 1367, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1713, 1741, 1744, 1761, 1764, 1776, 1779, 1796, 1799, 1860, 1866, 1869, 2131, 2245, 2252], "cast": [47, 48, 53, 95, 96, 101, 110, 111, 138, 145, 149, 154, 325, 333, 334, 335, 336, 337, 348, 349, 350, 351, 352, 413, 414, 415, 417, 938, 958, 1248, 1249, 1250, 1251, 1252, 1704, 1834, 1835, 1837, 1838, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2118, 2241, 2243], "nan": [47, 48, 51, 52, 53, 54, 55, 78, 79, 95, 96, 99, 100, 101, 102, 103, 133, 138, 141, 151, 233, 325, 333, 334, 335, 336, 337, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 487, 488, 489, 490, 491, 494, 496, 499, 501, 502, 504, 541, 544, 546, 549, 551, 554, 556, 558, 559, 560, 576, 579, 581, 584, 586, 589, 606, 607, 608, 609, 610, 616, 617, 618, 619, 620, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 656, 659, 666, 669, 711, 714, 716, 718, 719, 720, 726, 729, 731, 734, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 776, 780, 789, 790, 798, 799, 800, 801, 802, 870, 871, 938, 939, 948, 949, 950, 955, 958, 959, 963, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1106, 1107, 1108, 1109, 1110, 1176, 1177, 1178, 1179, 1180, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1328, 1331, 1343, 1346, 1347, 1407, 1492, 1493, 1494, 1495, 1496, 1596, 1597, 1598, 1599, 1600, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2092, 2095, 2096, 2100, 2101, 2103, 2105, 2106, 2107, 2110, 2112, 2115, 2227, 2231, 2235, 2236, 2256, 2257], "infin": [47, 48, 51, 52, 53, 54, 55, 95, 96, 99, 100, 101, 110, 111, 133, 141, 233, 325, 333, 334, 335, 336, 337, 465, 466, 469, 476, 479, 481, 484, 491, 494, 496, 499, 501, 502, 504, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 591, 594, 606, 609, 611, 612, 613, 614, 615, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 711, 714, 726, 729, 731, 734, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 776, 780, 938, 958, 963, 1248, 1249, 1250, 1251, 1252, 1328, 1331, 1407, 1492, 1493, 1495, 1704, 1791, 1794, 1834, 1835, 1837, 1838, 2060, 2075, 2078, 2083, 2086, 2106, 2107, 2110, 2112, 2115], "non": [47, 48, 53, 62, 63, 70, 71, 72, 73, 78, 79, 80, 81, 95, 96, 101, 110, 111, 118, 119, 120, 121, 126, 127, 128, 129, 134, 136, 138, 140, 146, 154, 325, 333, 334, 335, 336, 337, 386, 412, 465, 666, 669, 671, 674, 813, 816, 818, 821, 875, 876, 877, 878, 879, 938, 943, 948, 949, 958, 1017, 1020, 1022, 1025, 1188, 1190, 1191, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1343, 1346, 1704, 1715, 1718, 1756, 1759, 1766, 1767, 1768, 1769, 1770, 1801, 1805, 1811, 1814, 1829, 1833, 1834, 1835, 1837, 1838, 1945, 1959, 1970, 1981, 1982, 1983, 1984, 1985, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2008, 2011, 2013, 2014, 2015, 2016, 2017, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2130, 2149, 2154, 2171, 2172, 2175, 2179], "float64": [47, 48, 70, 71, 78, 79, 95, 96, 101, 118, 119, 126, 127, 138, 149, 150, 239, 268, 325, 333, 334, 336, 348, 349, 351, 359, 360, 369, 371, 372, 373, 374, 375, 385, 386, 401, 404, 413, 414, 415, 416, 417, 419, 420, 426, 429, 890, 891, 938, 947, 1012, 1015, 1104, 1248, 1250, 1970, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2066, 2067, 2068, 2195, 2215, 2227, 2230, 2236], "broadcast_arrai": [47, 48, 95, 96, 325, 342], "x3": [47, 48, 54, 55, 239, 302, 305, 320, 324, 325, 338, 339, 341, 1407, 1408, 1409, 1411], "broadcast_to": [47, 48, 95, 96, 138, 325, 347], "can_cast": [47, 48, 95, 96, 138, 145, 148, 325, 352], "occur": [47, 48, 53, 74, 75, 95, 96, 101, 122, 123, 133, 137, 142, 325, 348, 349, 350, 351, 352, 938, 958, 1248, 1249, 1250, 1251, 1252, 1997, 1998, 2001, 2003, 2006, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2038, 2039, 2043], "as_n": [47, 48, 49, 50, 95, 96, 97, 98, 138, 325, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 385, 430, 436, 437, 438, 439, 440, 441, 452], "int32": [47, 48, 70, 71, 72, 73, 78, 79, 95, 96, 102, 103, 118, 119, 120, 121, 138, 148, 150, 154, 239, 260, 261, 302, 305, 320, 324, 325, 333, 335, 336, 337, 348, 350, 351, 352, 354, 362, 364, 365, 366, 374, 375, 380, 382, 383, 384, 385, 396, 398, 400, 401, 404, 413, 414, 415, 416, 417, 421, 425, 427, 430, 451, 890, 891, 1104, 1407, 1471, 1474, 1579, 1580, 1582, 1583, 1970, 1976, 1977, 1978, 1980, 1981, 1984, 1986, 1989, 1997, 2003, 2004, 2005, 2006, 2007, 2060, 2061, 2062, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2227, 2235], "finfo": [47, 48, 95, 96, 150, 325, 373], "1e": [47, 48, 53, 56, 57, 62, 63, 64, 65, 68, 69, 95, 96, 101, 104, 105, 110, 111, 112, 113, 116, 117, 136, 145, 147, 149, 158, 159, 325, 369, 370, 371, 372, 373, 798, 799, 800, 801, 802, 854, 855, 856, 857, 938, 939, 955, 1092, 1093, 1094, 1095, 1096, 1106, 1107, 1108, 1109, 1110, 1181, 1182, 1278, 1279, 1407, 1480, 1481, 1549, 1550, 1558, 1561, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1627, 1630, 1704, 1781, 1785, 1801, 1803, 1805, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1965, 1966, 1967, 1968, 1969, 2118, 2173, 2174, 2175, 2176, 2177, 2178, 2180, 2184, 2185, 2191, 2195, 2209, 2213, 2214, 2215, 2216], "06": [47, 48, 70, 71, 99, 100, 104, 105, 150, 157, 189, 191, 194, 325, 369, 370, 372, 476, 478, 480, 551, 553, 555, 892, 895, 1134, 1140, 1602, 1619, 1621, 1622, 1986, 1987, 2184, 2191, 2195, 2209, 2213, 2214, 2215, 2216], "min": [47, 48, 54, 55, 62, 63, 78, 79, 95, 96, 102, 103, 110, 111, 126, 127, 325, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 465, 686, 689, 880, 886, 887, 1368, 1371, 1372, 1375, 1407, 1446, 1447, 1448, 1449, 1450, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1558, 1561, 1704, 1756, 1759, 1786, 1787, 1788, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1834, 1835, 1837, 1838, 2060], "4028235e": [47, 48, 325, 369, 370, 372], "38": [47, 48, 53, 99, 100, 101, 118, 119, 140, 325, 369, 370, 372, 465, 766, 767, 769, 770, 828, 831, 938, 960, 1134, 1136, 1150, 1227, 1228, 1230, 1273, 1274, 1275, 1276, 1277, 1704, 1761, 1764, 1986, 1990, 2227, 2236], "max": [47, 48, 53, 54, 55, 62, 63, 78, 79, 95, 96, 101, 102, 103, 110, 111, 126, 127, 137, 148, 150, 325, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 465, 681, 684, 823, 824, 828, 829, 830, 832, 833, 834, 1134, 1148, 1149, 1150, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1508, 1510, 1512, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1704, 1756, 1759, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 2060, 2175, 2177, 2227, 2238], "iinfo": [47, 48, 95, 96, 143, 325, 384], "119": [47, 48, 380, 381], "122": [47, 48, 380, 381, 465, 551, 554], "int8": [47, 48, 70, 71, 95, 96, 118, 119, 138, 150, 325, 362, 374, 375, 380, 381, 382, 383, 385, 396, 397, 1976, 1977, 1978, 2227, 2230, 2235, 2236], "128": [47, 48, 53, 60, 61, 84, 89, 90, 95, 96, 101, 108, 109, 325, 380, 381, 382, 383, 892, 895, 938, 945, 972, 973, 974, 975, 976, 1134, 1140, 1407, 1441, 1444, 1479, 1640, 1647, 1650, 1657, 1660, 1674, 1675, 1676, 1678, 1704, 1776, 1779], "127": [47, 48, 53, 95, 96, 101, 325, 380, 381, 382, 383, 938, 963, 1328, 1329, 1330, 1331, 1332], "54": [47, 48, 51, 52, 60, 61, 99, 100, 101, 108, 109, 118, 119, 140, 380, 381, 465, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 576, 578, 580, 751, 753, 755, 776, 778, 780, 880, 882, 892, 895, 896, 1049, 1050, 1051, 1052, 1134, 1140, 1154, 1156, 1158, 1640, 1684, 1685, 1686, 1687, 1688, 1699, 1701, 1702, 1703, 1704, 1761, 1764, 1776, 1779, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 2060, 2071, 2074], "1220": [47, 48, 380, 381], "int16": [47, 48, 70, 71, 95, 96, 118, 119, 138, 148, 150, 154, 325, 348, 351, 362, 374, 375, 380, 381, 382, 384, 401, 404, 427, 1976, 1977, 1978, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2227, 2235, 2236], "32768": [47, 48, 95, 96, 380, 381, 382, 384], "32767": [47, 48, 95, 96, 380, 381, 382, 384], "is_bool_dtyp": [47, 48, 95, 96, 325], "is_float_dtyp": [47, 48, 95, 96, 151, 325, 400], "is_int_dtyp": [47, 48, 95, 96, 149, 151, 325], "is_uint_dtyp": [47, 48, 95, 96, 149, 151, 325], "result_typ": [47, 48, 95, 96, 138, 325, 417], "arrays_and_dtyp": [47, 48, 95, 96, 325, 413, 414, 415, 416, 417], "handl": [49, 50, 56, 57, 84, 87, 88, 89, 90, 97, 98, 132, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 152, 158, 430, 433, 434, 435, 436, 437, 438, 439, 440, 445, 449, 450, 461, 464, 1614, 1615, 2127, 2137, 2175, 2176, 2177, 2178, 2179, 2180], "to_devic": [49, 50, 97, 98, 430, 436, 457], "stream": [49, 50, 97, 98, 430, 456, 457, 458, 459, 460, 2134], "__dlpack__": [49, 50, 97, 98, 239, 263, 266, 430, 456, 457, 458, 459, 460], "caveat": [49, 50, 97, 98, 430, 456, 457, 458, 459, 460], "portabl": [49, 50, 97, 98, 430, 456, 457, 458, 459, 460, 2118, 2128], "aco": [51, 52, 99, 100, 465, 475, 2118], "real": [51, 52, 53, 78, 79, 99, 100, 101, 126, 127, 136, 465, 471, 472, 473, 475, 476, 477, 486, 487, 488, 490, 496, 497, 498, 500, 501, 502, 503, 505, 561, 562, 563, 565, 576, 578, 580, 581, 583, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 676, 677, 691, 692, 695, 711, 712, 713, 715, 726, 727, 728, 730, 751, 752, 753, 755, 756, 757, 758, 760, 761, 763, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 849, 853, 898, 900, 938, 1134, 1141, 1315, 1704, 1730, 1791, 1794, 2060, 2075, 2077, 2083, 2084, 2085, 2086, 2092, 2095, 2132], "cosin": [51, 52, 99, 100, 465, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 880, 883, 892, 895, 1053, 1055, 1134, 1140], "57": [51, 52, 99, 100, 430, 442, 465, 471, 472, 473, 474, 475, 476, 479, 486, 487, 488, 489, 490, 491, 494, 501, 502, 504, 551, 554, 556, 557, 559, 560, 716, 717, 719], "69": [51, 52, 104, 105, 118, 119, 150, 157, 465, 471, 472, 646, 649, 892, 895, 1134, 1140, 1602, 1614, 1616, 1617, 1704, 1756, 1759, 1761, 1764, 1981, 1983, 1986, 1990], "acosh": [51, 52, 99, 100, 325, 374, 375, 377, 378, 465, 2118], "hyperbol": [51, 52, 99, 100, 465, 476, 477, 478, 479, 480, 491, 492, 493, 494, 495, 506, 507, 508, 509, 510, 551, 552, 553, 554, 555, 746, 747, 748, 749, 750, 771, 772, 773, 774, 775], "99": [51, 52, 56, 57, 95, 96, 99, 100, 118, 119, 239, 268, 380, 384, 465, 476, 477, 478, 479, 480, 546, 547, 1407, 1558, 1561, 1602, 1614, 1615, 1617, 1981, 1983, 2060, 2071, 2074], "asin": [51, 52, 99, 100, 465, 490, 2118], "sine": [51, 52, 99, 100, 465, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750], "927": [51, 52, 99, 100, 486, 487, 488, 490], "asinh": [51, 52, 99, 100, 465, 495, 2118], "atan": [51, 52, 99, 100, 465, 500, 2118], "tangent": [51, 52, 99, 100, 141, 465, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775], "785": [51, 52, 99, 100, 465, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "atan2": [51, 52, 99, 100, 465, 505, 2118], "quotient": [51, 52, 99, 100, 465, 501, 502, 503, 504, 505], "245": [51, 52, 108, 109, 501, 502, 1640, 1679, 1682, 1684, 1686, 1687, 1688], "68": [51, 52, 118, 119, 189, 202, 205, 239, 268, 465, 501, 502, 504, 892, 895, 1134, 1140, 1965, 1966, 1969, 1981, 1983, 1986, 1988], "588": [51, 52, 465, 501, 502, 504], "inf": [51, 52, 53, 54, 55, 62, 63, 99, 100, 101, 102, 103, 110, 111, 138, 233, 465, 501, 502, 504, 581, 584, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 619, 621, 623, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 789, 790, 938, 958, 1176, 1177, 1178, 1179, 1180, 1248, 1249, 1250, 1251, 1252, 1407, 1492, 1494, 1495, 1496, 1596, 1597, 1598, 1599, 1600, 1704, 1756, 1757, 1758, 1759, 1760, 1834, 1835, 1837, 1838, 2227, 2230, 2231, 2235, 2236, 2256, 2257], "36": [51, 52, 53, 60, 61, 78, 79, 101, 102, 103, 110, 111, 465, 501, 502, 504, 731, 732, 736, 737, 833, 837, 892, 895, 938, 952, 1042, 1043, 1044, 1045, 1134, 1140, 1407, 1441, 1444, 1446, 1449, 1450, 1684, 1685, 1704, 1761, 1764, 1776, 1779, 1806, 1810, 1824, 1825, 1827, 1945, 1957, 2060, 2071, 2072, 2074], "75": [51, 52, 53, 99, 100, 101, 102, 103, 108, 109, 118, 119, 239, 274, 277, 465, 491, 494, 495, 501, 502, 503, 504, 505, 561, 564, 880, 883, 892, 895, 938, 952, 1042, 1043, 1044, 1045, 1053, 1055, 1087, 1089, 1091, 1134, 1140, 1183, 1186, 1278, 1281, 1300, 1302, 1304, 1407, 1451, 1453, 1455, 1498, 1501, 1502, 1503, 1507, 1558, 1560, 1642, 1644, 1646, 1704, 1746, 1749, 1776, 1779, 1945, 1954, 1970, 1981, 1985, 1986, 1989], "52": [51, 52, 99, 100, 102, 103, 104, 105, 118, 119, 465, 501, 502, 504, 551, 553, 555, 561, 563, 564, 565, 1407, 1441, 1444, 1446, 1449, 1450, 1503, 1506, 1602, 1604, 1606, 1607, 1640, 1684, 1687, 1704, 1776, 1779, 1986, 1988, 2060, 2071, 2074], "719": [51, 52, 465, 501, 502, 504], "197": [51, 52, 465, 501, 502, 504], "atanh": [51, 52, 99, 100, 465, 510, 2118], "549": [51, 52, 99, 100, 108, 109, 465, 506, 507, 508, 509, 510, 1640, 1684, 1686, 1687, 1688], "47": [51, 52, 53, 70, 71, 99, 100, 101, 102, 103, 104, 105, 118, 119, 465, 506, 507, 508, 510, 751, 754, 828, 829, 833, 835, 1134, 1149, 1150, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1407, 1441, 1444, 1446, 1449, 1450, 1602, 1614, 1616, 1617, 1640, 1684, 1687, 1970, 1981, 1983, 1986, 1987, 1989], "bitwise_and": [51, 52, 99, 100, 142, 465, 515], "11": [51, 52, 53, 54, 55, 60, 61, 62, 63, 70, 71, 78, 79, 84, 89, 90, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 118, 119, 126, 127, 136, 137, 138, 140, 151, 465, 481, 483, 485, 496, 499, 511, 512, 514, 581, 583, 726, 727, 729, 731, 734, 761, 762, 764, 823, 824, 826, 828, 829, 831, 833, 837, 892, 896, 918, 919, 920, 921, 922, 933, 936, 997, 998, 999, 1000, 1001, 1062, 1063, 1064, 1065, 1066, 1077, 1079, 1081, 1134, 1135, 1136, 1148, 1149, 1164, 1168, 1188, 1193, 1196, 1200, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1386, 1387, 1389, 1407, 1425, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1466, 1469, 1503, 1506, 1542, 1543, 1545, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1704, 1725, 1728, 1736, 1739, 1740, 1746, 1749, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1760, 1776, 1779, 1801, 1805, 1806, 1810, 1844, 1855, 1858, 1860, 1881, 1884, 1906, 1908, 1910, 1911, 1913, 1915, 1921, 1922, 1924, 1931, 1932, 1934, 1935, 1945, 1952, 1954, 1964, 1970, 1976, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1997, 2018, 2022, 2023, 2024, 2028, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2068, 2069, 2070, 2071, 2072, 2074, 2101, 2104], "bitwise_invert": [51, 52, 99, 100, 465, 520], "bitiwse_invert": [51, 52, 516, 517], "bitwise_left_shift": [51, 52, 99, 100, 465, 525], "bitwise_or": [51, 52, 99, 100, 465, 530], "89": [51, 52, 70, 71, 84, 89, 90, 95, 96, 99, 100, 101, 118, 119, 325, 380, 382, 383, 465, 536, 537, 538, 539, 540, 892, 895, 896, 1134, 1140, 1704, 1811, 1814, 1981, 1983, 1986, 1987, 2060, 2096, 2100], "51": [51, 52, 53, 99, 100, 101, 102, 103, 118, 119, 465, 536, 537, 691, 693, 746, 747, 749, 892, 893, 894, 895, 896, 1134, 1140, 1503, 1507, 1981, 1985, 1986, 1988, 2227, 2236], "18": [51, 52, 53, 70, 71, 99, 100, 101, 108, 109, 118, 119, 126, 127, 136, 140, 142, 189, 202, 205, 465, 481, 485, 536, 537, 561, 564, 726, 727, 746, 747, 748, 749, 750, 892, 895, 938, 952, 987, 990, 997, 998, 1000, 1042, 1043, 1044, 1045, 1082, 1083, 1084, 1085, 1086, 1134, 1140, 1144, 1145, 1148, 1188, 1196, 1217, 1218, 1219, 1220, 1221, 1662, 1664, 1666, 1704, 1725, 1728, 1751, 1754, 1776, 1779, 1970, 1976, 1977, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 2060, 2066, 2068, 2069, 2071, 2074, 2087, 2089, 2091], "19": [51, 52, 53, 70, 71, 99, 100, 101, 110, 111, 118, 119, 140, 465, 491, 493, 495, 536, 537, 581, 585, 646, 648, 691, 693, 695, 766, 767, 768, 769, 770, 833, 834, 836, 892, 895, 896, 997, 998, 1000, 1082, 1085, 1134, 1137, 1140, 1145, 1148, 1188, 1196, 1217, 1218, 1219, 1220, 1221, 1704, 1725, 1728, 1756, 1758, 1760, 1819, 1820, 1822, 1823, 1945, 1957, 1970, 1976, 1978, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 2044, 2055, 2058], "26": [51, 52, 68, 69, 70, 71, 101, 102, 103, 104, 105, 118, 119, 465, 536, 537, 561, 564, 746, 749, 892, 895, 896, 1134, 1140, 1407, 1498, 1501, 1502, 1602, 1604, 1606, 1607, 1640, 1674, 1677, 1704, 1725, 1728, 1776, 1779, 1811, 1814, 1945, 1947, 1965, 1966, 1967, 1969, 1976, 1978, 1981, 1982, 2060, 2071, 2074], "27": [51, 52, 53, 62, 63, 70, 71, 99, 100, 101, 108, 109, 110, 111, 118, 119, 126, 127, 465, 531, 534, 536, 537, 551, 554, 711, 712, 713, 714, 746, 749, 751, 753, 755, 892, 895, 938, 947, 1012, 1013, 1015, 1134, 1140, 1263, 1267, 1407, 1503, 1506, 1640, 1699, 1701, 1702, 1703, 1704, 1751, 1754, 1776, 1779, 1824, 1825, 1826, 1827, 1828, 1945, 1947, 1954, 1976, 1980, 1981, 1982, 2060, 2071, 2074, 2087, 2089, 2091, 2227, 2235], "23": [51, 52, 53, 60, 61, 70, 71, 93, 94, 99, 100, 101, 102, 103, 118, 119, 150, 154, 239, 269, 271, 272, 273, 465, 536, 537, 539, 551, 552, 553, 555, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 726, 729, 731, 732, 736, 739, 746, 747, 748, 749, 750, 776, 780, 823, 824, 826, 828, 829, 833, 835, 865, 868, 869, 892, 895, 896, 938, 942, 961, 1134, 1135, 1140, 1148, 1149, 1150, 1217, 1218, 1220, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1311, 1313, 1314, 1503, 1507, 1640, 1667, 1670, 1699, 1700, 1702, 1704, 1725, 1728, 1756, 1759, 1806, 1810, 1945, 1947, 1954, 1976, 1977, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1997, 2018, 2022], "20": [51, 52, 53, 60, 61, 70, 71, 78, 79, 99, 100, 101, 102, 103, 108, 109, 118, 119, 126, 127, 137, 142, 152, 156, 465, 536, 537, 556, 559, 576, 577, 578, 579, 716, 718, 719, 731, 733, 734, 735, 751, 754, 823, 824, 826, 833, 834, 835, 836, 938, 952, 955, 1042, 1043, 1044, 1045, 1106, 1109, 1134, 1135, 1137, 1148, 1217, 1218, 1220, 1227, 1229, 1231, 1407, 1441, 1444, 1471, 1473, 1474, 1475, 1479, 1542, 1544, 1545, 1546, 1558, 1561, 1562, 1642, 1643, 1647, 1648, 1689, 1690, 1691, 1704, 1725, 1728, 1746, 1749, 1756, 1759, 1776, 1779, 1811, 1814, 1970, 1976, 1977, 1978, 1979, 1997, 2013, 2016, 2018, 2022, 2060, 2061, 2063, 2065, 2066, 2067, 2068, 2071, 2074, 2087, 2090, 2096, 2100], "74": [51, 52, 118, 119, 465, 536, 537, 656, 659, 892, 895, 1134, 1140, 1704, 1761, 1764, 1986, 1990], "41": [51, 52, 53, 99, 100, 101, 102, 103, 110, 111, 189, 202, 205, 465, 496, 498, 499, 500, 536, 537, 691, 693, 751, 752, 754, 828, 829, 1134, 1149, 1222, 1223, 1225, 1343, 1349, 1376, 1377, 1378, 1379, 1380, 1407, 1426, 1429, 1430, 1431, 1434, 1435, 1704, 1705, 1707, 1708, 1709, 2060, 2096, 2100], "59": [51, 52, 536, 537], "ceil": [51, 52, 99, 100, 147, 239, 241, 242, 465, 545, 2118], "radian": [51, 52, 53, 99, 100, 101, 141, 465, 471, 474, 486, 489, 496, 499, 501, 504, 546, 547, 548, 549, 550, 556, 557, 558, 559, 560, 716, 717, 718, 719, 720, 741, 742, 743, 744, 745, 766, 767, 768, 769, 770, 803, 804, 805, 806, 807, 938, 940, 963, 1328, 1329, 1330, 1331, 1332], "416": [51, 52, 465, 546, 547, 549], "540": [51, 52, 546, 547], "990": [51, 52, 546, 547], "cosh": [51, 52, 99, 100, 465, 476, 480, 555, 2118], "angl": [51, 52, 53, 99, 100, 101, 170, 465, 501, 504, 551, 552, 553, 554, 555, 746, 747, 748, 749, 750, 771, 772, 773, 774, 775, 807, 938, 953, 1072, 1075], "76": [51, 52, 78, 79, 95, 96, 99, 100, 118, 119, 325, 380, 382, 383, 465, 476, 478, 480, 551, 552, 553, 554, 555, 746, 748, 750, 771, 772, 1704, 1811, 1814, 1945, 1954, 1981, 1983, 2060, 2071, 2072, 2074], "81": [51, 52, 95, 96, 99, 100, 110, 111, 118, 119, 150, 325, 380, 382, 383, 465, 551, 552, 646, 649, 650, 756, 757, 759, 1704, 1761, 1764, 1824, 1825, 1827, 1945, 1954, 1970, 1986, 1988, 1989, 2060, 2071, 2074], "deg2rad": [51, 52, 99, 100, 465, 560], "degre": [51, 52, 53, 78, 79, 99, 100, 101, 126, 127, 465, 556, 557, 558, 559, 560, 716, 717, 718, 719, 720, 803, 804, 805, 806, 807, 938, 940, 1188, 1207, 1316, 1317, 1318, 1319, 1320, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2129], "180": [51, 52, 99, 100, 465, 556, 557, 559, 560, 716, 719, 720], "270": [51, 52, 99, 100, 465, 556, 557, 559, 560, 716, 719, 720], "360": [51, 52, 99, 100, 137, 465, 556, 557, 559, 560, 716, 719, 720], "71": [51, 52, 99, 100, 465, 556, 557, 559, 560, 716, 719], "28": [51, 52, 60, 61, 68, 69, 99, 100, 101, 102, 103, 108, 109, 118, 119, 126, 127, 465, 556, 557, 559, 560, 646, 648, 716, 719, 892, 895, 896, 1134, 1140, 1407, 1498, 1501, 1502, 1602, 1604, 1607, 1640, 1647, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1674, 1677, 1684, 1687, 1704, 1776, 1779, 1965, 1966, 1967, 1969, 1976, 1978, 1981, 1983, 1986, 1988, 2060, 2071, 2074, 2087, 2089, 2091], "dividend": [51, 52, 99, 100, 465, 561, 562, 563, 564, 565, 591, 592, 593, 595, 726, 727, 729, 781, 782, 783, 784, 785], "divisor": [51, 52, 53, 56, 57, 78, 79, 99, 100, 101, 104, 105, 126, 127, 465, 561, 562, 563, 564, 565, 591, 592, 593, 595, 596, 598, 600, 726, 727, 729, 781, 782, 783, 784, 785, 918, 919, 920, 922, 938, 951, 1035, 1038, 1062, 1063, 1064, 1065, 1066, 1188, 1200, 1210, 1386, 1387, 1388, 1389, 1390, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2175, 2176, 2177], "375": [51, 52, 566, 567, 701, 702], "erf": [51, 52, 99, 100, 465, 575], "exponenti": [51, 52, 99, 100, 465, 571, 572, 573, 574, 575, 576, 577, 579, 656, 659, 711, 712, 714, 1164, 1170, 1212, 1215], "gauss": [51, 52, 99, 100, 465, 571, 572, 573, 574, 575], "328": [51, 52, 465, 571, 572, 574, 766, 770], "677": [51, 52, 465, 571, 572, 574], "842": [51, 52, 465, 571, 572, 574, 766, 770], "exp": [51, 52, 53, 99, 100, 101, 148, 465, 580, 581, 584, 656, 659, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1704, 1791, 1794, 2118], "71828198": [51, 52, 99, 100, 576, 577, 578, 580], "38905573": [51, 52, 99, 100, 576, 577, 578, 580], "08553696": [51, 52, 99, 100, 576, 577, 578, 581, 585], "expm1": [51, 52, 99, 100, 138, 465, 585], "244": [51, 52, 581, 582, 892, 895, 1134, 1140], "918": [51, 52, 581, 582], "48": [51, 52, 53, 99, 100, 101, 102, 103, 104, 105, 118, 119, 189, 197, 200, 465, 476, 478, 479, 480, 581, 582, 751, 754, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 892, 893, 894, 895, 896, 1134, 1136, 1137, 1140, 1149, 1150, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1407, 1498, 1501, 1502, 1602, 1604, 1606, 1607, 1614, 1616, 1617, 1704, 1776, 1779, 1945, 1947, 1981, 1983, 1986, 1990, 2060, 2071, 2074], "147": [51, 52, 465, 581, 582, 584], "floor": [51, 52, 53, 99, 100, 147, 465, 531, 534, 590, 898, 900, 1134, 1141, 2118], "floor_divid": [51, 52, 99, 100, 465, 595, 2272, 2277], "isfinit": [51, 52, 99, 100, 148, 465, 610], "out_i": [51, 52, 99, 100, 101, 465, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 938, 961, 1311, 1313, 1314, 1315], "self_i": [51, 52, 99, 100, 101, 606, 607, 608, 611, 612, 613, 616, 617, 618, 621, 622, 623, 1311, 1313], "finit": [51, 52, 53, 99, 100, 101, 465, 481, 484, 501, 504, 606, 607, 608, 609, 610, 711, 714, 726, 729, 938, 958, 1248, 1249, 1250, 1251, 1252], "isinf": [51, 52, 99, 100, 465, 615], "detect_posit": [51, 52, 99, 100, 465, 611, 612, 613, 614, 615], "detect_neg": [51, 52, 99, 100, 465, 611, 612, 613, 614, 615], "isnan": [51, 52, 99, 100, 465, 620], "isreal": [51, 52, 99, 100, 465, 625], "1j": [51, 52, 53, 99, 100, 101, 621, 622, 623, 803, 804, 806, 938, 940, 1311, 1313, 1407, 1558, 1561], "5j": [51, 52, 99, 100, 101, 465, 621, 622, 624, 625, 938, 961, 1311, 1314, 1315], "6j": [51, 52, 53, 101, 465, 621, 622, 624, 938, 954, 1087, 1088, 1089, 1090, 1091, 1311, 1312], "61": [51, 52, 53, 99, 100, 101, 104, 105, 112, 113, 118, 119, 465, 491, 493, 636, 637, 639, 646, 649, 650, 756, 757, 759, 892, 893, 894, 895, 896, 1134, 1140, 1602, 1604, 1606, 1607, 1640, 1674, 1677, 1844, 1845, 1847, 1848, 1849, 1855, 1857, 1859, 1986, 1988], "log10": [51, 52, 99, 100, 465, 645], "logarithm": [51, 52, 99, 100, 465, 576, 579, 636, 639, 641, 642, 643, 644, 645, 646, 649, 651, 652, 653, 654, 655, 656, 659, 1704, 1791, 1794], "602": [51, 52, 465, 641, 642, 644], "699": [51, 52, 465, 641, 642, 644], "log1p": [51, 52, 99, 100, 465, 650], "693": [51, 52, 99, 100, 189, 222, 225, 465, 491, 494, 646, 647, 649, 650, 1844, 1855, 1858], "001": [51, 52, 53, 68, 69, 95, 96, 101, 104, 105, 157, 158, 189, 217, 220, 325, 369, 371, 372, 373, 646, 647, 938, 961, 1106, 1107, 1108, 1110, 1311, 1314, 1602, 1608, 1610, 1611, 1965, 1966, 1967, 1969], "0953": [51, 52, 99, 100, 465, 636, 638, 639, 640, 646, 647], "log2": [51, 52, 99, 100, 465, 655, 938, 957, 1171, 1174], "logaddexp": [51, 52, 99, 100, 465], "logical_and": [51, 52, 99, 100, 148, 152, 465, 665, 2118, 2137], "logical_not": [51, 52, 99, 100, 138, 465, 670, 2118], "logical_or": [51, 52, 99, 100, 465, 675, 2118, 2137], "conform": [51, 52, 62, 63, 99, 100, 141, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 369, 372, 380, 383, 413, 416, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 928, 931, 1164, 1167, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1838, 1860, 1866, 1869, 1876, 1879, 1881, 1884, 1886, 1889, 1896, 1899, 1901, 1904, 1911, 1914, 1916, 1919, 1936, 1940, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115], "org": [51, 52, 99, 100, 104, 105, 141, 325, 348, 351, 465, 606, 609, 671, 672, 673, 731, 734, 880, 886, 887, 928, 931, 1164, 1167, 1368, 1371, 1372, 1375, 1602, 1604, 1607, 1608, 1611, 1704, 1736, 1737, 1791, 1794, 1839, 1843, 1860, 1936, 1940, 2060, 2092, 2095, 2142, 2144], "api_specif": [51, 52, 99, 100, 141, 325, 348, 351, 465, 606, 609, 671, 672, 673, 731, 734, 1860, 1936, 1940, 2060, 2092, 2095], "elementwise_funct": [51, 52, 99, 100, 141, 465, 606, 609, 671, 672, 673, 731, 734], "noqa": [51, 52, 62, 63, 99, 100, 149, 239, 241, 242, 244, 246, 254, 255, 258, 260, 261, 263, 266, 268, 269, 272, 274, 277, 284, 287, 299, 300, 302, 305, 307, 311, 312, 316, 317, 319, 320, 324, 325, 348, 351, 369, 372, 380, 383, 413, 416, 465, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 616, 619, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 672, 673, 674, 676, 679, 696, 699, 701, 704, 706, 709, 711, 714, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 1407, 1601, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1737, 1739, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1829, 1833, 1834, 1835, 1837, 1838, 1860, 1866, 1869, 1876, 1879, 1881, 1884, 1886, 1889, 1896, 1899, 1901, 1904, 1911, 1914, 1916, 1919, 1936, 1940, 1997, 1998, 2001, 2003, 2006, 2013, 2016, 2018, 2022, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2048, 2055, 2058, 2060, 2075, 2078, 2083, 2086, 2087, 2090, 2092, 2095, 2096, 2100, 2101, 2105, 2106, 2107, 2110, 2112, 2115, 2286, 2292, 2294], "logical_xor": [51, 52, 99, 100, 465, 680], "use_wher": [51, 52, 99, 100, 465, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690], "formula": [51, 52, 99, 100, 465, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690], "clip": [51, 52, 66, 67, 99, 100, 102, 103, 114, 115, 136, 145, 147, 157, 159, 465, 681, 682, 683, 684, 685, 686, 687, 689, 1407, 1426, 1428, 1429, 1430, 1431, 1434, 1860, 1865, 2118], "minimum": [51, 52, 53, 54, 55, 66, 67, 72, 73, 78, 79, 99, 100, 101, 102, 103, 114, 115, 120, 121, 126, 127, 465, 466, 469, 690, 938, 947, 949, 1012, 1015, 1022, 1023, 1024, 1025, 1026, 1188, 1206, 1282, 1285, 1407, 1480, 1481, 1549, 1550, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1860, 1861, 1862, 1863, 1864, 1865, 1997, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2078, 2083, 2084, 2085, 2086, 2118, 2127, 2133, 2137, 2227, 2230, 2231, 2235, 2236, 2238, 2245, 2246, 2248, 2251, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "exce": [51, 52, 53, 101, 465, 686, 687, 689, 1188, 1209, 1360, 1361, 1362, 1363, 1364], "30": [51, 52, 53, 84, 89, 90, 101, 102, 103, 118, 119, 126, 127, 137, 465, 691, 692, 694, 892, 895, 938, 952, 1042, 1043, 1044, 1045, 1134, 1140, 1273, 1275, 1277, 1376, 1377, 1379, 1407, 1441, 1444, 1451, 1453, 1455, 1471, 1473, 1474, 1475, 1498, 1501, 1502, 1503, 1506, 1507, 1542, 1544, 1545, 1546, 1552, 1558, 1561, 1562, 1704, 1746, 1749, 1776, 1779, 1945, 1955, 1976, 1978, 1981, 1983, 1985, 2060, 2066, 2068, 2071, 2074, 2087, 2090, 2149, 2156, 2245, 2252], "56": [51, 52, 53, 60, 61, 70, 71, 99, 100, 101, 108, 109, 140, 239, 279, 282, 465, 691, 692, 694, 751, 754, 766, 767, 768, 769, 770, 776, 780, 892, 893, 894, 895, 896, 1134, 1140, 1602, 1604, 1607, 1640, 1647, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1684, 1685, 1704, 1776, 1779, 1806, 1810, 1981, 1982, 2060, 2071, 2074], "expon": [51, 52, 53, 54, 55, 101, 102, 103, 465, 711, 712, 714, 938, 947, 1012, 1013, 1014, 1015, 1016, 1407, 1563, 1564, 1565, 1566, 1567, 1704, 1761, 1764], "rad2deg": [51, 52, 99, 100, 465, 720], "286": [51, 52, 101, 716, 717, 892, 896], "458": [51, 52, 716, 717], "573": [51, 52, 465, 716, 717, 719], "reciproc": [51, 52, 99, 100, 465, 725], "333": [51, 52, 99, 100, 465, 561, 563, 564, 565, 721, 722, 1407, 1431, 1434, 1640, 1674, 1677], "remaind": [51, 52, 53, 66, 67, 87, 88, 99, 100, 101, 114, 115, 133, 147, 465, 730, 938, 950, 1027, 1028, 1029, 1030, 1031, 1860, 1906, 1907, 1908, 1909, 1910], "modulu": [51, 52, 99, 100, 147, 465, 726, 727, 728, 729, 730], "x2_i": [51, 52, 99, 100, 133, 465, 481, 484, 501, 504, 511, 514, 521, 524, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 591, 594, 596, 599, 601, 604, 626, 629, 631, 634, 656, 659, 661, 664, 671, 674, 676, 679, 691, 694, 701, 704, 711, 714, 726, 727, 728, 729, 730, 761, 765], "94": [51, 52, 56, 57, 70, 71, 99, 100, 104, 105, 118, 119, 430, 450, 491, 495, 731, 732, 736, 737, 892, 895, 1134, 1140, 1602, 1614, 1615, 1616, 1617, 1986, 1987, 1988], "256": [51, 52, 731, 732, 736, 737, 1640, 1647, 1650, 1657, 1660, 1667, 1670, 2227, 2230], "0001": [51, 52, 731, 732, 736, 737, 2175, 2176, 2177, 2178, 2180, 2227, 2231, 2235, 2236, 2256, 2257, 2259], "45": [51, 52, 53, 78, 79, 84, 89, 90, 99, 100, 101, 104, 105, 118, 119, 465, 501, 503, 504, 505, 561, 563, 564, 565, 731, 732, 736, 737, 803, 804, 806, 833, 835, 892, 895, 938, 940, 960, 1134, 1140, 1227, 1229, 1231, 1273, 1274, 1275, 1276, 1277, 1602, 1604, 1607, 1619, 1621, 1622, 1704, 1776, 1779, 1860, 1906, 1909, 1981, 1983, 1986, 1988, 2060, 2071, 2072, 2074, 2227, 2236], "678": [51, 52, 731, 732, 736, 737], "33": [51, 52, 70, 71, 78, 79, 99, 100, 102, 103, 104, 105, 108, 109, 465, 491, 493, 496, 499, 531, 534, 731, 732, 828, 831, 1134, 1136, 1407, 1431, 1433, 1558, 1561, 1602, 1614, 1616, 1617, 1640, 1679, 1682, 1684, 1686, 1687, 1688, 1704, 1776, 1779, 1945, 1964, 1976, 1977, 2060, 2071, 2074, 2101, 2103, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "sin": [51, 52, 54, 55, 99, 100, 134, 154, 465, 745, 1407, 1459, 1460, 1462, 2118], "841": [51, 52, 85, 86, 99, 100, 189, 191, 193, 194, 465, 741, 742, 743, 744, 745], "909": [51, 52, 99, 100, 102, 103, 465, 741, 742, 743, 744, 745, 1558, 1562], "141": [51, 52, 99, 100, 325, 333, 336, 465, 741, 742, 743, 744, 745], "sinh": [51, 52, 99, 100, 465, 750, 2118], "63": [51, 52, 85, 86, 99, 100, 110, 111, 227, 229, 231, 465, 716, 719, 746, 747, 748, 749, 750, 751, 754, 892, 895, 1134, 1140, 1704, 1705, 1707, 1708, 1709, 1776, 1779, 1945, 1947, 2060, 2071, 2074], "232": [51, 52, 99, 100, 465, 746, 747, 748, 749, 750], "sqrt": [51, 52, 53, 99, 100, 101, 465, 755, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1141, 1144, 1145, 1834, 1835, 1837, 2149, 2152, 2154, 2156], "squar": [51, 52, 62, 63, 99, 100, 110, 111, 465, 751, 752, 753, 754, 755, 760, 1164, 1170, 1212, 1215, 1602, 1613, 1618, 1638, 1704, 1705, 1706, 1707, 1708, 1709, 1715, 1718, 1720, 1723, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1761, 1764, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1824, 1825, 1826, 1827, 1828, 1945, 1952], "73": [51, 52, 110, 111, 150, 751, 752, 1704, 1705, 1707, 1708, 1709, 1970, 1981, 1984], "44": [51, 52, 53, 70, 71, 99, 100, 101, 118, 119, 465, 491, 494, 691, 693, 731, 734, 751, 754, 756, 757, 759, 833, 834, 835, 836, 865, 868, 892, 894, 896, 938, 942, 1134, 1137, 1227, 1229, 1231, 1407, 1425, 1640, 1679, 1682, 1704, 1776, 1779, 1945, 1954, 1976, 1978, 1980, 1981, 1982, 1983, 1997, 2018, 2022, 2060, 2071, 2074], "tan": [51, 52, 99, 100, 136, 141, 144, 145, 147, 148, 154, 465, 767, 1407, 1414, 2118], "tanh": [51, 52, 99, 100, 154, 465, 772, 2118], "762": [51, 52, 99, 100, 465, 771, 773, 774, 775], "964": [51, 52, 99, 100, 465, 771, 773, 774, 775], "trunc": [51, 52, 99, 100, 465, 777], "025": [51, 52, 465, 776, 778, 780], "trunc_divid": [51, 52, 99, 100, 465, 782], "elementwis": [52, 53, 68, 69, 100, 116, 117, 145, 151, 154, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 765, 766, 770, 771, 775, 776, 780, 781, 785, 789, 790, 791, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 1176, 1177, 1179, 1295, 1296, 1298, 1401, 1405, 1704, 1824, 1828, 1965, 1966, 1967, 1968, 1969], "logit": [53, 64, 65, 101, 112, 113, 789, 838, 839, 840, 841, 842, 854, 855, 856, 857, 1180, 1181, 1182, 1305, 1306, 1844, 1855, 1856, 1857, 1858, 1859], "ep": [53, 62, 63, 101, 110, 111, 325, 369, 372, 789, 790, 1092, 1093, 1094, 1095, 1096, 1176, 1177, 1178, 1179, 1180, 1278, 1279, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1784], "outpu": [53, 101, 789, 790, 1176, 1177, 1178, 1179, 1180], "clamp": [53, 101, 159, 789, 790, 1176, 1177, 1178, 1179, 1180], "19722438": [53, 101, 789, 790, 1176, 1177, 1178, 1179, 1180], "38629448": [53, 101, 789, 790, 1176, 1177, 1178, 1179, 1180], "38629436": [53, 101, 789, 790, 1176, 1177, 1178, 1179, 1180], "prelu": [53, 101, 789], "unidirect": [53, 789, 791, 1295, 1296, 1298], "thresholded_relu": [53, 101, 789, 1356], "linear": [53, 54, 55, 60, 61, 85, 86, 101, 102, 103, 108, 109, 136, 141, 148, 150, 152, 154, 157, 158, 159, 189, 191, 194, 196, 197, 200, 207, 209, 210, 211, 212, 214, 215, 216, 227, 229, 230, 231, 789, 792, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1206, 1282, 1285, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1355, 1356, 1357, 1358, 1359, 1407, 1459, 1460, 1461, 1462, 1463, 1533, 1640, 1688, 1796, 1799, 1945, 1953, 2118, 2128, 2129, 2130, 2133, 2149, 2154, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2258, 2259], "eye_lik": [53, 101, 880, 986], "allclos": [53, 101, 802, 938], "rtol": [53, 62, 63, 101, 110, 111, 149, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 2184, 2185, 2191, 2195, 2213, 2214, 2215, 2216], "atol": [53, 62, 63, 101, 110, 111, 149, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1704, 1766, 1767, 1768, 1769, 1770, 2184, 2185, 2191, 2195, 2213, 2214, 2215, 2216], "08": [53, 78, 79, 101, 118, 119, 465, 491, 494, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1640, 1699, 1702, 1981, 1983, 1986, 1988, 2101, 2103, 2184, 2185, 2227, 2235, 2236], "equal_nan": [53, 101, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110], "toler": [53, 62, 63, 101, 110, 111, 133, 149, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 2130, 2184, 2185, 2191, 2195, 2213, 2214, 2215, 2216], "compar": [53, 54, 55, 76, 77, 87, 88, 101, 102, 103, 124, 125, 135, 140, 142, 143, 149, 150, 157, 798, 799, 800, 801, 802, 938, 939, 955, 1106, 1107, 1108, 1109, 1110, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058, 2126, 2128, 2130, 2136, 2137, 2195, 2213, 2214, 2215, 2216], "1e10": [53, 798, 799, 801, 938, 939, 955, 1106, 1109], "00001e10": [53, 798, 799, 801, 938, 939, 955, 1106, 1109], "00001e": [53, 798, 799, 801, 938, 939], "005": [53, 798, 799, 801, 938, 939, 955, 1106, 1109], "deg": [53, 101, 803, 804, 805, 806, 807, 938, 940], "set_backend": [53, 101, 133, 135, 138, 145, 146, 154, 156, 159, 325, 377, 378, 430, 434, 435, 452, 453, 803, 804, 805, 806, 807, 890, 891, 938, 940, 1104, 2118, 2286, 2292, 2294, 2298, 2299, 2300, 2301, 2302], "2j": [53, 101, 803, 804, 806, 938, 940, 954, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1134, 1144, 1145, 1311, 1312], "3j": [53, 99, 100, 101, 465, 621, 623, 624, 625, 803, 804, 806, 938, 940, 961, 1311, 1312, 1313, 1314, 1315], "35619449": [53, 803, 804, 806, 938, 940], "78539816": [53, 803, 804, 806, 938, 940], "135": [53, 803, 804, 806, 938, 940, 1407, 1426, 1429], "binar": [53, 101, 853, 938], "map": [53, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 138, 144, 145, 148, 150, 151, 157, 170, 171, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 850, 851, 852, 853, 875, 877, 879, 907, 911, 917, 918, 922, 938, 941, 982, 984, 986, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1134, 1142, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1407, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1601, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1953, 1954, 1958, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2117, 2131, 2159, 2170], "outcom": [53, 101, 849, 850, 851, 852, 853, 938, 941, 952, 1042, 1043, 1044, 1045], "comparison": [53, 101, 142, 849, 850, 851, 852, 853, 938, 941, 1704, 1806, 1810], "copysign": [53, 101, 869, 938], "unsign": [53, 101, 138, 154, 865, 866, 867, 868, 869, 938, 942, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2241, 2244], "count_nonzero": [53, 101, 879, 938], "keepdim": [53, 62, 63, 66, 67, 72, 73, 78, 79, 80, 81, 87, 88, 101, 110, 111, 114, 115, 120, 121, 126, 127, 128, 129, 142, 148, 154, 875, 876, 877, 878, 879, 938, 943, 959, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1343, 1345, 1346, 1347, 1348, 1704, 1756, 1757, 1758, 1759, 1760, 1834, 1835, 1836, 1837, 1838, 1860, 1931, 1932, 1933, 1934, 1935, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "count": [53, 66, 67, 74, 75, 80, 81, 101, 114, 115, 122, 123, 128, 129, 136, 140, 157, 430, 449, 875, 876, 877, 878, 879, 938, 943, 1704, 1829, 1833, 1860, 1866, 1867, 1869, 1881, 1882, 1883, 1884, 1885, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "flatten": [53, 54, 55, 66, 67, 72, 73, 74, 75, 101, 102, 103, 110, 111, 114, 115, 120, 121, 122, 123, 152, 875, 876, 877, 878, 879, 902, 905, 938, 943, 959, 1001, 1164, 1166, 1188, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1343, 1345, 1346, 1347, 1348, 1407, 1441, 1444, 1459, 1460, 1461, 1462, 1463, 1704, 1741, 1744, 1776, 1779, 1834, 1835, 1837, 1838, 1860, 1866, 1867, 1869, 1891, 1892, 1893, 1894, 1901, 1902, 1903, 1904, 1905, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2147, 2148, 2184, 2191, 2195, 2204, 2207, 2215, 2216], "diff": [53, 87, 88, 101, 140, 147, 911, 938], "prepend": [53, 101, 907, 908, 909, 910, 911, 938, 944, 1704, 1751, 1754, 1860, 1876, 1879], "differenc": [53, 101, 907, 908, 909, 910, 911, 938, 944], "taken": [53, 62, 63, 101, 110, 111, 137, 143, 148, 151, 159, 907, 908, 909, 910, 911, 938, 944, 1704, 1725, 1726, 1727, 1728, 1729, 2131], "prior": [53, 101, 151, 907, 908, 909, 910, 911, 912, 915, 938, 944, 1305, 1308], "expand": [53, 54, 55, 66, 67, 101, 102, 103, 136, 907, 908, 909, 910, 911, 938, 944, 1188, 1407, 1459, 1460, 1461, 1462, 1463, 1860, 1876, 1877, 1879], "th": [53, 101, 902, 905, 907, 908, 909, 910, 911, 938, 944, 1164, 1166, 1300, 1303, 1343, 1348], "discret": [53, 101, 892, 895, 898, 900, 907, 908, 909, 910, 911, 938, 944, 987, 990, 1082, 1085, 1134, 1140, 1141, 1144, 1145, 1844, 1850, 1853], "exp2": [53, 101, 938, 976], "nearest": [53, 101, 465, 481, 484, 731, 734, 938, 946, 992, 993, 995, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1300, 1301, 1302, 1303, 1304, 1343, 1348], "float_pow": [53, 101, 938, 1016], "125": [53, 62, 63, 110, 111, 465, 531, 534, 938, 947, 1012, 1013, 1015, 1704, 1824, 1825, 1826, 1827, 1828], "fmax": [53, 101, 938, 1021], "fmin": [53, 101, 938, 1026], "fmod": [53, 101, 938, 1031], "divis": [53, 54, 55, 56, 57, 101, 102, 103, 104, 105, 145, 465, 531, 534, 561, 564, 591, 594, 726, 729, 781, 785, 918, 921, 938, 950, 1027, 1028, 1029, 1030, 1031, 1092, 1093, 1094, 1095, 1096, 1188, 1193, 1278, 1279, 1407, 1481, 1550, 1558, 1559, 1560, 1561, 1562, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1640, 1641, 1672, 1673, 2175, 2176, 2177], "gcd": [53, 101, 938, 1039], "gradient": [53, 57, 101, 105, 151, 157, 158, 170, 171, 430, 455, 858, 938, 1048, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1941, 1942, 1943, 1944, 2118, 2130, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180, 2195, 2215, 2216, 2272, 2276], "edge_ord": [53, 101, 938, 952, 1042, 1043, 1044, 1045, 1046], "w": [53, 54, 55, 56, 57, 60, 61, 87, 88, 99, 100, 101, 102, 103, 104, 105, 108, 109, 154, 157, 158, 661, 663, 665, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 858, 870, 872, 874, 898, 900, 928, 931, 933, 936, 938, 952, 1042, 1043, 1044, 1045, 1047, 1048, 1134, 1135, 1136, 1137, 1141, 1148, 1149, 1150, 1152, 1164, 1167, 1168, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1288, 1407, 1441, 1442, 1443, 1444, 1445, 1451, 1453, 1454, 1455, 1558, 1561, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1684, 1685, 1686, 1687, 1688, 1945, 1952], "scale": [53, 60, 61, 68, 69, 101, 104, 105, 108, 109, 116, 117, 430, 453, 454, 917, 938, 952, 1042, 1043, 1044, 1045, 1092, 1093, 1094, 1095, 1096, 1124, 1127, 1134, 1142, 1164, 1169, 1278, 1279, 1602, 1623, 1625, 1626, 1640, 1679, 1680, 1681, 1682, 1683, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1965, 1966, 1967, 1968, 1969, 2130, 2132, 2149, 2157, 2159, 2167, 2170, 2175, 2178, 2227, 2235, 2245, 2246, 2256, 2257, 2258, 2259], "frist": [53, 101, 938, 952, 1042, 1043, 1044, 1045], "estim": [53, 101, 938, 952, 1042, 1043, 1044, 1045], "boundari": [53, 70, 71, 101, 118, 119, 938, 952, 1042, 1043, 1044, 1045, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1970, 1986, 1987, 1988, 1989, 1990, 2130], "diment": [53, 938, 952, 1042, 1043, 1045], "40": [53, 54, 55, 84, 89, 90, 101, 102, 103, 118, 119, 126, 127, 137, 465, 531, 534, 551, 554, 751, 754, 828, 829, 892, 893, 894, 895, 896, 938, 952, 1042, 1043, 1044, 1045, 1134, 1140, 1149, 1154, 1156, 1158, 1222, 1223, 1225, 1407, 1441, 1444, 1451, 1453, 1455, 1471, 1473, 1474, 1475, 1542, 1543, 1544, 1545, 1546, 1558, 1561, 1562, 1601, 1704, 1746, 1749, 1776, 1779, 1945, 1955, 1981, 1983, 2060, 2071, 2074, 2087, 2089, 2091], "72": [53, 70, 71, 101, 104, 105, 465, 576, 579, 581, 584, 892, 895, 938, 952, 1042, 1043, 1044, 1045, 1134, 1140, 1602, 1614, 1616, 1617, 1704, 1776, 1779, 1981, 1982, 2060, 2071, 2074], "33333333": [53, 101, 465, 721, 724, 938, 952, 1042, 1043, 1044, 1045], "hypot": [53, 101, 938, 1076], "hypotenus": [53, 938, 953, 1072, 1073, 1075], "4031": [53, 938, 953, 1072, 1073, 1075], "8102": [53, 938, 953, 1072, 1073, 1075], "val": [53, 54, 55, 87, 88, 101, 102, 103, 147, 156, 938, 954, 1087, 1088, 1089, 1090, 1091, 1407, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1549, 1550], "imaginari": [53, 101, 140, 938, 954, 1087, 1088, 1089, 1090, 1091], "4j": [53, 101, 938, 954, 1087, 1088, 1089, 1090, 1091], "isclos": [53, 101, 133, 938, 1110], "hold": [53, 54, 55, 62, 63, 78, 79, 101, 110, 111, 126, 127, 157, 798, 800, 802, 918, 920, 922, 938, 959, 1106, 1107, 1108, 1110, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1343, 1347, 1386, 1387, 1389, 1407, 1537, 1538, 1540, 1542, 1545, 1704, 1756, 1757, 1758, 1759, 1760, 2060, 2066, 2067, 2068, 2069, 2070, 2131, 2218], "lcm": [53, 101, 938, 1158], "60": [53, 78, 79, 101, 102, 103, 118, 119, 126, 127, 137, 803, 805, 807, 938, 956, 1154, 1155, 1156, 1157, 1158, 1407, 1471, 1473, 1503, 1506, 1507, 1542, 1544, 1546, 1558, 1561, 1601, 1704, 1776, 1779, 1945, 1949, 1976, 1978, 2060, 2061, 2064, 2071, 2074, 2087, 2088, 2089, 2090, 2091], "logaddexp2": [53, 101, 938, 1175], "169925": [53, 101, 938, 957, 1171, 1172, 1173, 1174, 1175], "nan_to_num": [53, 101, 938, 1252], "posinf": [53, 101, 938, 958, 1248, 1249, 1250, 1251, 1252], "neginf": [53, 101, 938, 958, 1248, 1249, 1250, 1251, 1252], "small": [53, 62, 63, 68, 69, 101, 110, 111, 116, 117, 137, 140, 145, 149, 152, 154, 158, 171, 798, 801, 938, 939, 955, 958, 1092, 1093, 1094, 1095, 1096, 1106, 1109, 1248, 1249, 1250, 1251, 1252, 1278, 1279, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1791, 1794, 1965, 1966, 1967, 1968, 1969, 2131, 2149, 2153, 2173, 2174], "5e": [53, 56, 57, 101, 938, 958, 1248, 1249, 1250, 1251, 1252, 1273, 1275, 1277, 1602, 1619, 1620, 1622], "nansum": [53, 101, 938, 1267], "accumul": [53, 101, 938, 959, 1263, 1264, 1265, 1266, 1267], "By": [53, 66, 67, 78, 79, 80, 81, 101, 114, 115, 126, 127, 128, 129, 138, 140, 142, 145, 147, 148, 154, 158, 159, 880, 881, 888, 898, 900, 938, 959, 982, 985, 1042, 1044, 1134, 1141, 1159, 1160, 1161, 1162, 1163, 1263, 1264, 1265, 1266, 1267, 1333, 1334, 1382, 1385, 1704, 1829, 1833, 1860, 1891, 1892, 1893, 1894, 2060, 2061, 2064, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "reduc": [53, 54, 55, 62, 63, 72, 73, 78, 79, 80, 81, 87, 88, 101, 102, 103, 110, 111, 120, 121, 126, 127, 128, 129, 137, 142, 148, 152, 154, 156, 430, 455, 938, 959, 1232, 1233, 1234, 1235, 1236, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1300, 1301, 1302, 1303, 1304, 1343, 1345, 1346, 1347, 1348, 1407, 1446, 1447, 1448, 1449, 1450, 1704, 1786, 1787, 1788, 1789, 1790, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2128, 2132, 2133, 2134], "nextaft": [53, 101, 938, 1277], "represent": [53, 54, 55, 84, 87, 88, 89, 90, 101, 102, 103, 170, 233, 325, 331, 332, 369, 372, 380, 383, 430, 433, 434, 465, 466, 469, 481, 484, 511, 514, 526, 529, 536, 539, 676, 679, 938, 960, 965, 1273, 1274, 1275, 1276, 1277, 1396, 1397, 1398, 1399, 1400, 1407, 1413, 1574, 1575, 1576, 1577, 2128, 2129, 2131, 2135, 2136, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2259], "0e": [53, 56, 57, 101, 104, 105, 938, 960, 1273, 1274, 1275, 1276, 1277, 1602, 1619, 1620, 1621, 1622], "50": [53, 78, 79, 99, 100, 101, 102, 103, 156, 465, 556, 558, 559, 560, 716, 718, 719, 720, 938, 960, 1124, 1126, 1128, 1273, 1274, 1275, 1276, 1277, 1407, 1451, 1453, 1455, 1471, 1473, 1474, 1475, 1498, 1501, 1502, 1503, 1506, 1507, 1542, 1544, 1545, 1546, 1558, 1561, 1562, 1704, 1746, 1749, 1776, 1779, 1945, 1947, 1949, 1997, 2013, 2016, 2060, 2071, 2072, 2074, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "4013e": [53, 101, 938, 960, 1273, 1274, 1275, 1276, 1277], "4028e": [53, 101, 938, 960, 1273, 1274, 1275, 1276, 1277], "hand": [53, 133, 138, 145, 150, 171, 1311, 1312], "signbit": [53, 101, 938, 1327], "637": [53, 101, 938, 963, 1328, 1329, 1330, 1331], "212": [53, 60, 61, 101, 938, 963, 1328, 1329, 1330, 1331, 1332, 1684, 1685], "0909": [53, 101, 938, 963, 1328, 1329, 1330, 1331], "trapz": [53, 99, 100, 938], "dx": [53, 99, 100, 938, 964, 1365, 1366, 1367], "apart": [53, 99, 100, 938, 964, 1365, 1366, 1367], "trapezoid": [53, 99, 100, 938, 964, 1365, 1366, 1367], "xlogi": [53, 101, 938, 1397], "0986": [53, 101, 938, 965, 1396, 1397, 1398, 1399, 1400], "3863": [53, 101, 938, 965, 1396, 1397, 1398, 1399, 1400], "0000": [53, 101, 880, 882, 885, 938, 965, 1049, 1051, 1053, 1054, 1056, 1057, 1058, 1060, 1120, 1122, 1164, 1170, 1188, 1199, 1212, 1213, 1214, 1215, 1396, 1397, 1398, 1399, 1400], "zeta": [53, 101, 938, 1402], "0369": [53, 101, 938, 966, 1401, 1402, 1403, 1404, 1405], "2021": [53, 101, 938, 966, 1401, 1402, 1403, 1404, 1405, 2118], "isin": [53, 101, 1040, 1115], "test_el": [53, 101, 1040, 1041, 1111, 1112, 1113, 1114, 1115], "assume_uniqu": [53, 101, 1040, 1041, 1111, 1112, 1113, 1114, 1115], "invert": [53, 101, 465, 516, 519, 1040, 1041, 1111, 1112, 1113, 1114, 1115, 1704, 1761, 1764], "avg_pool1d": [53, 101, 827, 1134], "kernel": [53, 60, 61, 101, 108, 109, 152, 154, 171, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1640, 1689, 1690, 1691, 1692, 1693, 2130, 2133, 2134], "stride": [53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2130, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "pad": [53, 60, 61, 66, 67, 101, 108, 109, 114, 115, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 892, 893, 894, 895, 896, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1098, 1099, 1100, 1101, 1102, 1134, 1135, 1136, 1137, 1140, 1141, 1144, 1145, 1147, 1148, 1149, 1150, 1188, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1286, 1407, 1459, 1462, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "data_format": [53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 917, 1092, 1093, 1094, 1095, 1096, 1134, 1135, 1136, 1137, 1142, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1278, 1279, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "nwc": [53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 917, 1134, 1135, 1142, 1148, 1217, 1218, 1219, 1220, 1221, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1672, 1673, 2159, 2160, 2161], "batch_siz": [53, 60, 61, 70, 71, 101, 108, 109, 118, 119, 157, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1970, 1971, 1972, 1973, 1974, 1975], "d_in": [53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1135, 1136, 1137, 1141, 1144, 1145, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678], "slide": [53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "algorithm": [53, 60, 61, 85, 86, 101, 108, 109, 138, 148, 152, 171, 191, 193, 195, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1098, 1099, 1100, 1101, 1102, 1134, 1135, 1136, 1137, 1147, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1642, 1643, 1644, 1646, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1674, 1675, 1676, 1678, 1704, 1791, 1794, 2130, 2132, 2134, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "ncw": [53, 60, 61, 101, 108, 109, 823, 824, 825, 826, 827, 917, 1134, 1135, 1142, 1148, 1217, 1218, 1219, 1220, 1221, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1672, 1673, 2159, 2160, 2161], "pool": [53, 101, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1135, 1136, 1137, 1148, 1149, 1150, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231], "reshap": [53, 60, 61, 62, 63, 66, 67, 87, 88, 101, 108, 109, 110, 111, 114, 115, 147, 148, 150, 152, 154, 156, 159, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 917, 997, 998, 999, 1000, 1001, 1092, 1093, 1094, 1095, 1096, 1134, 1135, 1136, 1137, 1142, 1148, 1149, 1150, 1188, 1196, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1278, 1279, 1407, 1601, 1640, 1652, 1654, 1655, 1656, 1662, 1665, 1674, 1677, 1704, 1756, 1757, 1758, 1759, 1760, 1860, 1900, 2118, 2124, 2125], "avg_pool2d": [53, 101, 832, 1134], "nhwc": [53, 60, 61, 101, 108, 109, 828, 829, 830, 831, 832, 1092, 1093, 1094, 1095, 1096, 1134, 1136, 1149, 1222, 1223, 1224, 1225, 1226, 1278, 1279, 1640, 1641, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2159, 2162, 2163, 2166], "h": [53, 54, 55, 60, 61, 101, 102, 103, 108, 109, 132, 136, 137, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1134, 1136, 1137, 1149, 1150, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1407, 1441, 1442, 1443, 1444, 1445, 1451, 1453, 1454, 1455, 1640, 1641, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1945, 1949, 1953, 1955, 1963, 2126], "nchw": [53, 60, 61, 101, 108, 109, 828, 829, 830, 831, 832, 1092, 1093, 1094, 1095, 1096, 1134, 1136, 1149, 1222, 1223, 1224, 1225, 1226, 1278, 1279, 1640, 1641, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2159, 2162, 2163, 2166], "max_pool2d": [53, 101, 828, 829, 1134, 1226], "46": [53, 70, 71, 101, 108, 109, 118, 119, 239, 279, 282, 465, 646, 649, 736, 739, 828, 829, 833, 835, 880, 882, 1049, 1050, 1051, 1052, 1134, 1149, 1150, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1684, 1686, 1688, 1945, 1947, 1976, 1977, 1981, 1983], "avg_pool3d": [53, 101, 837, 1134], "ndhwc": [53, 60, 61, 101, 108, 109, 833, 834, 835, 836, 837, 1134, 1137, 1150, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 2159, 2164, 2165], "convolut": [53, 60, 61, 101, 108, 109, 833, 834, 835, 836, 837, 1134, 1137, 1150, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2128, 2130, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "ncdhw": [53, 60, 61, 101, 108, 109, 833, 834, 835, 836, 837, 1134, 1137, 1150, 1227, 1228, 1229, 1230, 1231, 1640, 1641, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 2159, 2164, 2165], "43": [53, 84, 89, 90, 118, 119, 465, 531, 534, 833, 834, 836, 1134, 1137, 1970, 1981, 1983, 1984, 1986, 1988, 1989, 1997, 2018, 2022], "dct": [53, 101, 157, 896, 1134], "norm": [53, 54, 55, 62, 63, 69, 101, 102, 103, 110, 111, 117, 151, 892, 893, 894, 895, 896, 898, 899, 900, 901, 967, 970, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1129, 1130, 1132, 1134, 1140, 1141, 1143, 1144, 1145, 1183, 1184, 1186, 1187, 1279, 1280, 1281, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1508, 1510, 1512, 1704, 1756, 1757, 1758, 1759, 1760, 1834, 1835, 1837, 1838, 1966, 1967, 1968, 1969, 2118, 2174, 2175, 2177], "signal": [53, 101, 892, 893, 894, 895, 896, 898, 900, 1134, 1140, 1141, 2129, 2130], "liter": [53, 62, 63, 101, 110, 111, 143, 892, 893, 894, 895, 896, 1098, 1099, 1100, 1101, 1102, 1134, 1140, 1147, 1188, 1206, 1282, 1285, 1704, 1756, 1757, 1758, 1759, 1760, 1834, 1835, 1837, 1838], "lenght": [53, 101, 892, 893, 894, 895, 896, 1049, 1050, 1052, 1116, 1117, 1119, 1120, 1121, 1123, 1134, 1140, 1382, 1383, 1384], "transform": [53, 60, 61, 101, 108, 109, 150, 159, 170, 892, 893, 894, 895, 896, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1134, 1140, 1141, 1144, 1145, 1278, 1279, 1640, 1684, 1685, 1686, 1687, 1688, 2117, 2128, 2130, 2131, 2132, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "truncat": [53, 101, 142, 157, 892, 893, 894, 895, 896, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1140, 1144, 1145, 1407, 1548, 2147, 2148], "larger": [53, 66, 67, 78, 79, 101, 114, 115, 126, 127, 150, 325, 369, 372, 892, 893, 894, 895, 896, 1134, 1140, 1860, 1861, 1864, 1901, 1902, 1903, 1904, 1905, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2137], "ortho": [53, 101, 892, 893, 894, 895, 896, 898, 900, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1140, 1141, 1144, 1145], "102": [53, 101, 118, 119, 892, 893, 894, 895, 896, 1134, 1140, 1976, 1978], "406": [53, 101, 892, 893, 894, 895, 896, 1134, 1140, 1407, 1426, 1429], "dft": [53, 101, 1134], "onesid": [53, 101, 898, 899, 900, 901, 1134, 1141], "dft_length": [53, 101, 898, 899, 900, 901, 1134, 1141], "backward": [53, 80, 81, 101, 128, 129, 171, 465, 726, 729, 898, 899, 900, 901, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1141, 1144, 1145, 1704, 1829, 1833, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "fourier": [53, 898, 900, 987, 990, 1082, 1085, 1134, 1141, 1144, 1145, 1407, 1459, 1462], "batch": [53, 54, 55, 87, 88, 101, 102, 103, 110, 111, 136, 145, 157, 430, 453, 454, 898, 900, 1098, 1099, 1100, 1101, 1102, 1134, 1141, 1147, 1407, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1601, 1640, 1684, 1687, 1704, 1834, 1835, 1837, 1838, 1941, 1942, 1943, 1944, 1965, 1966, 1969, 2128, 2173, 2174], "n_fft": [53, 898, 900, 1134, 1141], "satisfi": [53, 140, 898, 900, 1134, 1141], "conjug": [53, 62, 63, 101, 110, 111, 793, 796, 797, 898, 900, 912, 915, 1134, 1141, 1164, 1165, 1305, 1308, 1704, 1751, 1754, 1771, 1772, 1773, 1774, 1775], "symmetri": [53, 898, 900, 1134, 1141], "fast": [53, 898, 900, 1134, 1141, 2130], "rfft": [53, 898, 900, 1134, 1141], "batch_idx": [53, 898, 900, 1134, 1141], "signal_dim1": [53, 898, 900, 1134, 1141], "signal_dim2": [53, 898, 900, 1134, 1141], "signal_dimn": [53, 898, 900, 1134, 1141], "signal_dim": [53, 898, 900, 1134, 1141], "embed": [53, 101, 1134, 2130], "max_norm": [53, 54, 55, 101, 102, 103, 967, 968, 969, 970, 971, 1134, 1143, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435], "dim": [53, 87, 88, 93, 94, 101, 138, 142, 148, 149, 152, 239, 294, 296, 297, 298, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1188, 1196, 1640, 1641, 1672, 1673, 2159, 2170, 2245, 2255], "ifft": [53, 101, 987, 988, 1086, 1134], "pi": [53, 101, 233, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145], "44509285e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "14423775e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "17j": [53, 101, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145], "00000000e": [53, 101, 102, 103, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145, 1459, 1461, 1463], "00": [53, 54, 55, 101, 102, 103, 110, 111, 150, 465, 581, 584, 892, 895, 928, 931, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1140, 1144, 1145, 1164, 1167, 1407, 1459, 1460, 1461, 1462, 1463, 1704, 1736, 1739, 1740, 2227, 2235, 2236], "11483250e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "16j": [53, 101, 987, 988, 989, 990, 991, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145], "33486982e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "22464680e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "95799250e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "66951701e": [53, 101, 987, 988, 989, 990, 991, 1134, 1144], "30636606e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "43029718e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "18j": [53, 101, 987, 990, 1082, 1083, 1084, 1085, 1086, 1134, 1144, 1145], "53080850e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "58689626e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "24474906e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "91858728e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "01435406e": [53, 101, 1082, 1083, 1084, 1085, 1086, 1134, 1145], "interpol": [53, 101, 1102, 1134, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 2130], "align_corn": [53, 101, 848, 889, 1098, 1099, 1100, 1101, 1102, 1134, 1138, 1139, 1147], "antialia": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "height": [53, 54, 55, 60, 61, 101, 102, 103, 108, 109, 157, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1407, 1441, 1442, 1443, 1444, 1445, 1640, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1677, 2147, 2148], "width": [53, 54, 55, 60, 61, 101, 102, 103, 108, 109, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1206, 1282, 1285, 1407, 1441, 1442, 1443, 1444, 1445, 1640, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1677], "bilinear": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "trilinear": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "pixel": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "preserv": [53, 56, 57, 84, 87, 88, 89, 90, 101, 104, 105, 150, 159, 171, 808, 811, 813, 816, 818, 821, 1002, 1005, 1007, 1010, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1189, 1190, 1191, 1197, 1198, 1258, 1259, 1260, 1261, 1343, 1347, 1602, 1632, 1633, 1634, 1635, 1636, 1860, 1881, 1884, 2227, 2231], "edg": [53, 66, 67, 101, 114, 115, 133, 150, 1098, 1099, 1100, 1101, 1102, 1134, 1147, 1188, 1206, 1282, 1285, 1860, 1861, 1864, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940, 2118, 2130, 2132, 2136, 2256, 2257], "bicub": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "antialias": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "downsampl": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "resiz": [53, 101, 1098, 1099, 1100, 1101, 1102, 1134, 1147], "max_pool1d": [53, 101, 1134, 1221], "dilat": [53, 60, 61, 101, 108, 109, 1134, 1149, 1222, 1223, 1224, 1225, 1226, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166], "ceil_mod": [53, 101, 1134, 1149, 1222, 1223, 1224, 1225, 1226], "max_pool3d": [53, 101, 833, 835, 1134, 1231], "adjoint": [53, 62, 63, 101, 110, 111, 797, 1164, 1704, 1746, 1747, 1748, 1749, 1750, 1796, 1797, 1798, 1800, 1801, 1805], "diagflat": [53, 101, 1124, 1125, 1164, 1212, 1214], "offset": [53, 62, 63, 101, 110, 111, 902, 903, 904, 905, 906, 1164, 1166, 1704, 1725, 1726, 1727, 1728, 1729, 1819, 1820, 1821, 1822, 1823], "padding_valu": [53, 101, 902, 903, 904, 905, 906, 1164, 1166], "right_left": [53, 101, 902, 903, 904, 905, 906, 1164, 1166], "num_row": [53, 101, 902, 903, 904, 905, 906, 1164, 1166], "num_col": [53, 101, 902, 903, 904, 905, 906, 1164, 1166], "eig": [53, 62, 63, 101, 932, 1164, 1704, 1731, 1734, 1736, 1739], "37228132": [53, 101, 928, 931, 933, 934, 935, 936, 937, 1164, 1167, 1168], "82456484": [53, 928, 931, 1164, 1167], "41597356": [53, 928, 931, 1164, 1167], "56576746": [53, 928, 931, 1164, 1167], "90937671": [53, 928, 931, 1164, 1167], "eigval": [53, 101, 937, 1164], "kron": [53, 101, 1128, 1164, 1212, 1213, 2137], "matrix_exp": [53, 101, 1164], "7183": [53, 101, 1164, 1170, 1212, 1213, 1214, 1215], "3891": [53, 101, 1164, 1170, 1212, 1213, 1214, 1215], "atleast_1d": [53, 101, 812, 1188], "ari": [53, 101, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 918, 919, 920, 921, 922, 1062, 1063, 1064, 1065, 1066, 1188, 1189, 1190, 1191, 1193, 1200, 1210, 1386, 1387, 1388, 1389, 1390], "a1": [53, 102, 103, 239, 260, 261, 808, 809, 813, 814, 818, 819, 1415, 1417, 1419], "a2": [53, 808, 809, 813, 814, 818, 819], "atleast_2d": [53, 101, 817, 1188], "atleast_3d": [53, 101, 822, 1188], "dsplit": [53, 101, 922, 1188], "indices_or_sect": [53, 101, 918, 919, 920, 921, 922, 1062, 1063, 1064, 1065, 1066, 1188, 1193, 1200, 1210, 1386, 1387, 1388, 1389, 1390], "3rd": [53, 101, 918, 919, 920, 921, 922, 1188, 1193], "dstack": [53, 101, 927, 1188], "nativeshap": [53, 60, 61, 66, 67, 70, 71, 101, 114, 115, 118, 119, 239, 254, 268, 299, 300, 317, 319, 838, 839, 840, 841, 842, 843, 845, 846, 847, 912, 913, 914, 915, 916, 977, 978, 979, 980, 981, 1188, 1195, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1310, 1407, 1542, 1545, 1556, 1573, 1578, 1640, 1641, 1647, 1648, 1650, 1657, 1658, 1660, 1667, 1668, 1670, 1673, 1860, 1896, 1897, 1898, 1899, 1900, 1970, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990], "start_dim": [53, 101, 997, 998, 999, 1000, 1001, 1188, 1196], "end_dim": [53, 101, 997, 998, 999, 1000, 1001, 1188, 1196], "fastest": [53, 66, 67, 101, 114, 115, 997, 998, 999, 1000, 1001, 1188, 1196, 1860, 1896, 1897, 1898, 1899, 1900], "slowest": [53, 66, 67, 101, 114, 115, 997, 998, 999, 1000, 1001, 1188, 1196, 1860, 1896, 1897, 1898, 1899, 1900], "fortran": [53, 66, 67, 101, 114, 115, 997, 998, 999, 1000, 1001, 1188, 1196, 1860, 1896, 1897, 1898, 1899, 1900, 2130, 2134], "memori": [53, 66, 67, 101, 114, 115, 137, 138, 139, 147, 148, 152, 154, 169, 171, 239, 284, 287, 430, 435, 450, 455, 461, 464, 997, 998, 999, 1000, 1001, 1188, 1196, 1258, 1259, 1260, 1261, 1343, 1347, 1640, 1689, 1692, 1860, 1896, 1897, 1898, 1899, 1900, 2118, 2130, 2132, 2133, 2134], "layout": [53, 66, 67, 101, 114, 115, 135, 148, 152, 997, 998, 999, 1000, 1001, 1188, 1196, 1860, 1896, 1897, 1898, 1899, 1900], "underli": [53, 66, 67, 101, 114, 115, 136, 152, 465, 511, 514, 526, 529, 536, 539, 676, 679, 997, 998, 999, 1000, 1001, 1188, 1196, 1704, 1791, 1794, 1860, 1896, 1897, 1898, 1899, 1900, 2130, 2142, 2144], "fliplr": [53, 101, 1006, 1188], "flip": [53, 66, 67, 101, 114, 115, 156, 157, 159, 465, 516, 519, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1188, 1197, 1198, 1860, 1885, 2118], "diag": [53, 62, 63, 101, 110, 111, 154, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1188, 1197, 1198, 1704], "flipud": [53, 101, 1011, 1188], "heavisid": [53, 101, 1061, 1188], "5000": [53, 1057, 1058, 1060, 1188, 1199, 1704, 1746, 1749], "hsplit": [53, 101, 859, 862, 1066, 1188], "horizont": [53, 101, 1062, 1063, 1064, 1065, 1066, 1188, 1200, 1407, 1441, 1444], "hstack": [53, 101, 1071, 1188], "vstack": [53, 101, 1067, 1068, 1188, 1392], "i0": [53, 101, 1081, 1188], "bessel": [53, 78, 79, 101, 126, 127, 880, 884, 1077, 1078, 1079, 1080, 1081, 1116, 1117, 1118, 1119, 1188, 1202, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105], "26606588": [53, 101, 1077, 1078, 1079, 1080, 1081, 1188, 1202], "2795853": [53, 101, 1077, 1078, 1079, 1080, 1081, 1188, 1202], "88079259": [53, 101, 1077, 1078, 1079, 1080, 1081, 1188, 1202], "moveaxi": [53, 101, 1188, 1242], "destin": [53, 101, 1188, 1203, 1238, 1239, 1240, 1241, 1242], "unstack": [53, 66, 67, 87, 88, 114, 115, 136, 154, 157, 1238, 1239, 1860, 1932, 2118, 2137], "reorder": [53, 66, 67, 101, 114, 115, 1188, 1203, 1238, 1239, 1240, 1241, 1242, 1407, 1441, 1444, 1860, 1881, 1882, 1883, 1884, 1885], "pad_width": [53, 66, 67, 101, 114, 115, 1188, 1206, 1282, 1283, 1284, 1285, 1286, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940], "constant": [53, 66, 67, 68, 69, 101, 114, 115, 116, 117, 145, 149, 151, 158, 159, 171, 1092, 1093, 1094, 1095, 1096, 1188, 1206, 1278, 1279, 1282, 1283, 1284, 1285, 1286, 1860, 1871, 1872, 1873, 1874, 1875, 1945, 1952, 1965, 1966, 1967, 1968, 1969, 2149, 2155, 2158, 2171, 2172, 2173, 2174], "stat_length": [53, 101, 1188, 1206, 1282, 1283, 1284, 1285, 1286], "constant_valu": [53, 101, 1188, 1206, 1282, 1283, 1284, 1285, 1286], "end_valu": [53, 101, 1188, 1206, 1282, 1283, 1284, 1285, 1286], "reflect_typ": [53, 101, 1188, 1206, 1282, 1283, 1284, 1285, 1286], "rot90": [53, 101, 1188, 1320], "rotat": [53, 101, 170, 1188, 1207, 1316, 1317, 1318, 1319, 1320], "plane": [53, 101, 1188, 1207, 1316, 1317, 1318, 1319, 1320], "take_along_axi": [53, 101, 1188, 1351], "arr": [53, 54, 55, 95, 96, 101, 138, 139, 325, 396, 398, 399, 400, 1134, 1151, 1153, 1188, 1208, 1287, 1294, 1350, 1351, 1352, 1353, 1354, 1542, 1543], "top_k": [53, 101, 1188, 1361], "largest": [53, 87, 88, 101, 170, 325, 369, 372, 380, 383, 1188, 1209, 1360, 1361, 1362, 1363, 1364, 1704, 1756, 1759, 1801, 1805], "retun": [53, 101, 1188, 1209, 1360, 1361, 1362, 1363, 1364], "smallest": [53, 87, 88, 101, 325, 369, 372, 380, 383, 465, 541, 544, 1188, 1209, 1360, 1361, 1362, 1363, 1364, 1704, 1756, 1759, 2227, 2231, 2235, 2236, 2245, 2246], "vsplit": [53, 101, 1188, 1387], "instance_norm": [53, 101, 1096, 1278], "bia": [53, 60, 61, 101, 108, 109, 116, 117, 154, 158, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 1407, 1533, 1640, 1641, 1672, 1673, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1965, 1966, 1968, 1969, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2169], "running_mean": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "running_stddev": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "affin": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 2173, 2174], "track_running_stat": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "4d": [53, 1092, 1093, 1095, 1278, 1279], "stddev": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "82836342": [53, 1092, 1093, 1095, 1278, 1279], "58581817": [53, 1092, 1093, 1095, 1278, 1279], "29290909": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "41418171": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "14645454": [53, 1092, 1093, 1095, 1278, 1279], "20709085": [53, 1092, 1093, 1095, 1278, 1279], "30000001": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279, 1407, 1441, 1444, 2023, 2029, 2033], "52426404": [53, 101, 1092, 1093, 1094, 1095, 1096, 1278, 1279], "l2_normal": [53, 101, 1133, 1183, 1185, 1278], "l2": [53, 110, 111, 136, 1129, 1130, 1132, 1183, 1186, 1278, 1280, 1281, 1704, 1834, 1835, 1837, 1838], "4472": [53, 1129, 1130, 1132, 1183, 1184, 1278, 1280], "8944": [53, 1129, 1130, 1132, 1183, 1184, 1278, 1280], "lp_normal": [53, 101, 1187, 1278], "lp": [53, 1183, 1184, 1186, 1278, 1281], "bernoulli": [53, 101, 842, 917, 1134, 1142, 1305], "event": [53, 101, 150, 838, 839, 840, 841, 842, 1305, 1306], "parameter": [53, 70, 71, 101, 118, 119, 838, 839, 840, 841, 842, 843, 844, 1032, 1033, 1289, 1290, 1305, 1306, 1970, 1971, 1972, 1973, 1975, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990], "independ": [53, 70, 71, 101, 118, 119, 133, 138, 140, 146, 154, 159, 838, 839, 840, 841, 842, 1305, 1306, 1704, 1710, 1713, 1796, 1799, 1970, 1971, 1972, 1973, 1974, 1975, 2128], "prob": [53, 60, 61, 101, 108, 109, 118, 119, 838, 839, 840, 841, 842, 917, 1134, 1142, 1305, 1306, 1640, 1679, 1680, 1681, 1682, 1683, 1970, 1971, 1974, 1975, 2159, 2167], "drawn": [53, 70, 71, 101, 118, 119, 150, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 912, 913, 914, 915, 916, 1032, 1033, 1289, 1290, 1291, 1292, 1293, 1305, 1306, 1307, 1308, 1310, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2149, 2157, 2227, 2235, 2236, 2237, 2241, 2242, 2243, 2245, 2248, 2251, 2254], "dirichlet": [53, 101, 916, 1305], "shuffl": [53, 70, 71, 87, 88, 101, 118, 119, 912, 913, 914, 1970, 1996, 2118], "10598304": [53, 912, 913, 915, 1305, 1308], "21537054": [53, 912, 913, 915, 1305, 1308], "67864642": [53, 912, 913, 915, 1305, 1308], "48006698": [53, 912, 913, 915, 1305, 1308], "07472073": [53, 912, 913, 915, 1305, 1308], "44521229": [53, 912, 913, 915, 1305, 1308], "55479872": [53, 912, 913, 915, 1305, 1308], "05426367": [53, 912, 913, 915, 1305, 1308], "39093761": [53, 912, 913, 915, 1305, 1308], "19531053": [53, 912, 913, 915, 1305, 1308], "51675832": [53, 912, 913, 915, 1305, 1308], "28793114": [53, 912, 913, 915, 1305, 1308], "12315625": [53, 912, 913, 915, 1305, 1308], "29823365": [53, 912, 913, 915, 1305, 1308], "5786101": [53, 912, 913, 915, 1305, 1308], "15564976": [53, 912, 913, 915, 1305, 1308], "50542368": [53, 912, 913, 915, 1305, 1308], "33892656": [53, 912, 913, 915, 1305, 1308], "1325352": [53, 912, 913, 915, 1305, 1308], "44439589": [53, 912, 913, 915, 1305, 1308], "42306891": [53, 912, 913, 915, 1305, 1308], "gamma": [53, 68, 69, 116, 117, 1305, 1965, 1966, 1967, 1968, 1969], "poisson": [53, 101, 1293, 1305], "rate": [53, 56, 57, 101, 104, 105, 137, 1289, 1290, 1291, 1292, 1293, 1305, 1310, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1941, 1942, 1943, 1944, 2159, 2170, 2175, 2176, 2177, 2178, 2179, 2180], "paramt": [53, 1289, 1290, 1945, 1953, 1963], "lam": [53, 101, 1289, 1290, 1291, 1292, 1293, 1305, 1310], "lexsort": [53, 101, 1163, 1333], "indirectli": [53, 101, 1159, 1160, 1161, 1162, 1163, 1333, 1334], "column": [53, 62, 63, 101, 110, 111, 239, 260, 261, 870, 871, 872, 874, 880, 886, 887, 928, 931, 1002, 1005, 1007, 1010, 1067, 1070, 1159, 1160, 1162, 1164, 1167, 1188, 1197, 1198, 1201, 1333, 1334, 1368, 1371, 1372, 1375, 1704, 1730, 1731, 1734, 1756, 1759, 1786, 1787, 1788, 1789, 1790, 1796, 1799, 1801, 1805, 1824, 1825, 1826, 1827, 1828, 2149, 2150, 2153, 2154, 2157], "msort": [53, 101, 1247, 1333], "corrcoef": [53, 101, 874, 1343], "rowvar": [53, 101, 870, 871, 872, 873, 874, 1343, 1344], "row": [53, 101, 239, 260, 261, 870, 871, 872, 874, 880, 886, 887, 889, 1007, 1010, 1134, 1139, 1159, 1162, 1188, 1198, 1211, 1333, 1334, 1368, 1371, 1372, 1375, 1391, 1395, 1704, 1756, 1759, 1796, 1799, 1801, 1805, 1824, 1828, 1970, 1971, 1974, 1997, 2013, 2016, 2149, 2150, 2153, 2154, 2157], "relationship": [53, 101, 870, 871, 872, 874, 2149, 2154], "median": [53, 101, 148, 1188, 1206, 1236, 1258, 1259, 1260, 1261, 1262, 1282, 1285, 1343, 1347], "nanmean": [53, 101, 1257, 1343], "6666666666666665": [53, 101, 1253, 1254, 1255, 1256, 1257, 1343, 1346], "nanmedian": [53, 101, 1343], "overwrite_input": [53, 101, 1258, 1259, 1260, 1261, 1343, 1347], "treat": [53, 87, 88, 101, 150, 155, 159, 938, 959, 1258, 1259, 1260, 1261, 1263, 1266, 1343, 1347, 2195, 2214, 2216], "undefin": [53, 101, 143, 1188, 1206, 1258, 1259, 1260, 1261, 1282, 1285, 1343, 1347], "quantil": [53, 101, 1304, 1343], "higher": [53, 56, 57, 101, 153, 154, 159, 171, 808, 811, 813, 816, 818, 821, 1188, 1189, 1190, 1191, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1614, 1615, 2127, 2130, 2131, 2134, 2136, 2137, 2149, 2154], "midpoint": [53, 101, 1300, 1301, 1302, 1303, 1304, 1343, 1348], "fraction": [53, 101, 1300, 1301, 1302, 1303, 1304, 1343, 1348, 1640, 1679, 1682], "surround": [53, 101, 152, 1300, 1301, 1302, 1303, 1304, 1343, 1348], "whichev": [53, 101, 1300, 1301, 1302, 1303, 1304, 1343, 1348], "unravel_index": [53, 101, 1343, 1377], "unravel": [53, 101, 1343, 1349, 1376, 1377, 1378, 1379, 1380], "all_equ": [54, 55, 102, 103, 1407, 1412], "equality_matrix": [54, 55, 102, 103, 1407, 1408, 1409, 1410, 1411, 1412], "array_equ": [54, 55, 102, 103, 1407, 1419], "assert_supports_inplac": [54, 55, 102, 103, 1407, 1424], "clip_matrix_norm": [54, 55, 102, 103, 1407, 1430], "downscal": [54, 55, 102, 103, 1407, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1508, 1510, 1512], "894": [54, 55, 102, 103, 1407, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1965, 1966, 1969], "clip_vector_norm": [54, 55, 102, 103, 1407, 1435], "default_v": [54, 55, 1407, 1438, 1439, 1440], "catch_except": [54, 55, 1407, 1438, 1439, 1440], "rev": [54, 55, 1407, 1438, 1439, 1440], "with_cal": [54, 55, 1407, 1438, 1439, 1440], "catch": [54, 55, 150, 1407, 1438, 1439, 1440], "callabl": [54, 55, 102, 103, 136, 142, 148, 154, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 196, 239, 248, 249, 250, 325, 374, 375, 377, 378, 430, 443, 444, 455, 1188, 1206, 1282, 1285, 1407, 1413, 1425, 1438, 1439, 1440, 1446, 1447, 1448, 1449, 1450, 1464, 1465, 1533, 1589, 1601, 1640, 1694, 1697, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1956, 1957, 1958, 1959, 2175, 2179, 2184, 2190, 2218, 2220, 2272, 2278], "einops_rearrang": [54, 55, 102, 103, 1407, 1445], "axes_length": [54, 55, 102, 103, 1407, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455], "arrang": [54, 55, 1407, 1441, 1442, 1444], "rearrang": [54, 55, 102, 103, 1407, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1455], "einops_reduc": [54, 55, 102, 103, 1407], "reduct": [54, 55, 64, 65, 80, 81, 87, 88, 101, 102, 103, 112, 113, 128, 129, 138, 142, 150, 156, 854, 855, 856, 857, 1181, 1182, 1407, 1446, 1447, 1448, 1449, 1450, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2118], "One": [54, 55, 66, 67, 70, 71, 102, 103, 114, 115, 118, 119, 134, 136, 138, 140, 149, 150, 154, 156, 157, 808, 811, 813, 816, 818, 821, 1188, 1189, 1190, 1191, 1206, 1282, 1285, 1407, 1446, 1447, 1448, 1449, 1450, 1860, 1896, 1897, 1898, 1899, 1900, 1970, 1976, 1977, 1978, 1979, 1980], "prod": [54, 55, 78, 79, 102, 103, 126, 127, 138, 140, 154, 1407, 1446, 1447, 1448, 1449, 1450, 2060, 2091, 2227], "einops_repeat": [54, 55, 102, 103, 1407], "fourier_encod": [54, 55, 102, 103, 1407, 1463], "max_freq": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "num_band": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "concat": [54, 55, 66, 67, 87, 88, 114, 115, 149, 152, 154, 430, 455, 1407, 1459, 1460, 1462, 1860, 1870, 1936, 1940, 2118], "band": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "linearli": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463, 1704, 1796, 1799], "oppos": [54, 55, 102, 103, 138, 1407, 1459, 1460, 1461, 1462, 1463], "geometr": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463, 1704, 1824, 1828], "concaten": [54, 55, 66, 67, 149, 152, 154, 157, 1407, 1441, 1444, 1459, 1460, 1462, 1860, 1866, 1867, 1869, 2118], "seper": [54, 55, 140, 149, 150, 1407, 1459, 1460, 1462], "0000000e": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "2246468e": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "4492936e": [54, 55, 1407, 1459, 1460, 1462], "6739404e": [54, 55, 102, 103, 1407, 1459, 1460, 1461, 1462, 1463], "gather": [54, 55, 102, 103, 1407, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 2137], "gather_nd": [54, 55, 102, 103, 1407, 2118], "get_num_dim": [54, 55, 102, 103, 1407, 1487, 2118], "as_arrai": [54, 55, 102, 103, 1407, 1483, 1484, 1485, 1486, 1487, 1556], "has_nan": [54, 55, 102, 103, 1407], "include_inf": [54, 55, 102, 103, 1407, 1492, 1493, 1494, 1495, 1496, 1596, 1597, 1598, 1599, 1600], "inplace_decr": [54, 55, 102, 103, 1407, 1502], "decrement": [54, 55, 102, 103, 1407, 1498, 1499, 1500, 1501, 1502], "inplace_incr": [54, 55, 102, 103, 1407, 1507], "inplace_upd": [54, 55, 102, 103, 147, 1407, 1512, 2142, 2143, 2146], "ensure_in_backend": [54, 55, 147, 1407, 1508, 1509, 1511], "inplac": [54, 55, 56, 57, 87, 88, 102, 103, 132, 134, 140, 144, 146, 148, 152, 156, 158, 1407, 1414, 1420, 1422, 1423, 1424, 1497, 1508, 1509, 1510, 1511, 1512, 1513, 1614, 1615, 1945, 1953, 1954, 1958, 1963, 1964, 2142, 2143, 2146, 2175, 2176, 2177, 2178, 2179, 2180, 2262, 2263, 2268, 2272, 2274], "is_arrai": [54, 55, 102, 103, 148, 1407, 1518], "exclus": [54, 55, 78, 79, 87, 88, 102, 103, 126, 127, 136, 138, 145, 151, 159, 239, 241, 242, 1407, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1970, 1976, 1979, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2134, 2136], "trace": [54, 55, 62, 63, 87, 88, 102, 103, 110, 111, 133, 138, 154, 171, 1407, 1490, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1548, 1554, 1591, 1595, 1704, 1820, 2117, 2131, 2136], "is_ivy_arrai": [54, 55, 102, 103, 147, 156, 1407, 1523], "is_ivy_contain": [54, 55, 84, 89, 90, 1407], "is_native_arrai": [54, 55, 102, 103, 156, 890, 891, 1104, 1407, 1519, 1521, 1531], "scatter_flat": [54, 55, 102, 103, 1407, 1541], "occupi": [54, 55, 325, 369, 372, 380, 383, 1407, 1537, 1538, 1540, 1542, 1545], "scatter_nd": [54, 55, 102, 103, 152, 156, 1407, 1546, 2118], "stable_divid": [54, 55, 102, 103, 145, 1407, 1562], "denomin": [54, 55, 68, 69, 102, 103, 116, 117, 145, 171, 1407, 1481, 1550, 1558, 1559, 1560, 1561, 1562, 1965, 1966, 1967, 1968, 1969, 2127, 2173, 2174], "min_denomin": [54, 55, 102, 103, 1407, 1558, 1559, 1560, 1561, 1562], "_min_denomin": [54, 55, 102, 103, 1407, 1558, 1559, 1560, 1561, 1562], "stable_pow": [54, 55, 102, 103, 1407, 1567], "min_bas": [54, 55, 102, 103, 1407, 1563, 1564, 1565, 1566, 1567], "_min_bas": [54, 55, 68, 69, 102, 103, 116, 117, 1407, 1563, 1564, 1565, 1566, 1567, 1965, 1966, 1967, 1968, 1969, 2173, 2174], "supports_inplace_upd": [54, 55, 102, 103, 1407], "supports_inplac": [54, 55, 102, 103, 1568, 1569, 1570], "to_list": [54, 55, 102, 103, 1407, 1575, 2118], "to_numpi": [54, 55, 102, 103, 149, 157, 1407, 1580, 2118], "to_scalar": [54, 55, 102, 103, 1407, 1585], "value_is_nan": [54, 55, 102, 103, 1407, 1597], "92": [54, 55, 118, 119, 1596, 1598, 1602, 1627, 1630, 1704, 1715, 1718, 1981, 1983, 1986, 1988], "adam_step": [56, 57, 104, 105, 1602], "mw": [56, 57, 104, 105, 158, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611], "vw": [56, 57, 104, 105, 158, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611], "beta1": [56, 57, 104, 105, 158, 1407, 1414, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2175, 2176, 2177], "beta2": [56, 57, 104, 105, 158, 1407, 1414, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2175, 2176, 2177], "999": [56, 57, 99, 100, 104, 105, 158, 465, 771, 772, 774, 775, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1627, 1630, 2175, 2176, 2177], "epsilon": [56, 57, 62, 63, 64, 65, 68, 69, 101, 104, 105, 110, 111, 112, 113, 116, 117, 136, 145, 147, 158, 854, 855, 856, 857, 1181, 1182, 1407, 1414, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1965, 1966, 1967, 1968, 1969, 2173, 2174, 2175, 2176, 2177], "07": [56, 57, 64, 65, 99, 100, 101, 104, 105, 112, 113, 118, 119, 158, 465, 501, 503, 504, 505, 636, 638, 639, 640, 656, 659, 736, 739, 854, 855, 856, 857, 1181, 1182, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1638, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1981, 1983, 2175, 2176, 2177], "cost": [56, 57, 104, 105, 152, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1941, 1942, 1943, 1944, 2128], "weight": [56, 57, 60, 61, 101, 104, 105, 108, 109, 136, 145, 154, 158, 159, 854, 855, 856, 857, 880, 883, 967, 970, 971, 1053, 1055, 1134, 1143, 1181, 1182, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1699, 1700, 1701, 1702, 1703, 2129, 2149, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2171, 2172, 2175, 2177, 2178], "dc": [56, 57, 104, 105, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "dw": [56, 57, 104, 105, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "averag": [56, 57, 104, 105, 828, 831, 1134, 1136, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1941, 1942, 1943, 2149, 2154, 2157], "forget": [56, 57, 104, 105, 138, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2175, 2176, 2177], "adam": [56, 57, 104, 105, 157, 158, 159, 1407, 1414, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 2118, 2130, 2175, 2177], "delta": [56, 57, 104, 105, 1602, 1604, 1605, 1606, 1607], "dcdw": [56, 57, 104, 105, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626], "adam_step_delta": [56, 57, 104, 105, 1602, 1604, 1605, 1606, 1607], "2020105": [56, 57, 1602, 1604, 1605, 1607], "22187898": [56, 57, 1602, 1604, 1605, 1607], "24144873": [56, 57, 1602, 1604, 1605, 1607], "10000002": [56, 57, 126, 127, 1602, 1604, 1605, 1607, 2079, 2081], "20000005": [56, 57, 1602, 1604, 1605, 1607], "00300002": [56, 57, 1602, 1604, 1605, 1607], "00800002": [56, 57, 1602, 1604, 1605, 1607], "adam_upd": [56, 57, 104, 105, 158, 1602], "lr": [56, 57, 104, 105, 157, 158, 1407, 1414, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 2175, 2176, 2177, 2178, 2179, 2180], "mw_tm1": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622], "vw_tm1": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622], "stop_gradi": [56, 57, 104, 105, 158, 430, 455, 1407, 1414, 1602, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1941, 1942, 1943, 1944, 2118, 2175, 2176, 2177, 2178, 2179, 2180], "ws_new": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "updated_weight": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611], "92558753": [56, 57, 1608, 1609], "92558873": [56, 57, 1602, 1608, 1609, 1611], "92558718": [56, 57, 1602, 1608, 1609, 1611], "00000063e": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611], "00000016e": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611], "00000086e": [56, 57, 104, 105, 1602, 1608, 1609, 1610, 1611], "gradient_descent_upd": [56, 57, 104, 105, 1602, 1941, 1942, 1943, 1944, 2118], "descent": [56, 57, 104, 105, 158, 1602, 1614, 1615, 1616, 1617, 2130, 2175, 2180], "new_weight": [56, 57, 104, 105, 157, 1602, 1614, 1615, 1617, 1619, 1620, 1621, 1622], "95": [56, 57, 70, 71, 85, 86, 104, 105, 118, 119, 189, 191, 193, 194, 892, 895, 1134, 1140, 1602, 1604, 1607, 1614, 1615, 1616, 1617, 1627, 1630, 1970, 1981, 1982, 1983, 1984, 1986, 1988], "97": [56, 57, 99, 100, 104, 105, 118, 119, 465, 491, 494, 495, 1602, 1614, 1615, 1616, 1617, 1981, 1983], "96": [56, 57, 99, 100, 101, 102, 103, 118, 119, 465, 546, 548, 549, 550, 766, 770, 771, 772, 892, 895, 896, 1134, 1140, 1154, 1156, 1158, 1407, 1441, 1444, 1446, 1449, 1450, 1602, 1614, 1615, 1617, 1704, 1776, 1779, 1986, 1988, 2060, 2071, 2074], "lamb_upd": [56, 57, 104, 105, 1602], "max_trust_ratio": [56, 57, 104, 105, 1602, 1619, 1620, 1621, 1622, 2175, 2177], "decay_lambda": [56, 57, 104, 105, 1602, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 2175, 2177, 2178], "trust": [56, 57, 104, 105, 1602, 1619, 1620, 1621, 1622, 2175, 2177], "ratio": [56, 57, 104, 105, 1602, 1619, 1620, 1621, 1622, 2175, 2177], "decai": [56, 57, 104, 105, 1602, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 2175, 2177, 2178], "lamb": [56, 57, 104, 105, 158, 1602, 1619, 1620, 1621, 1622, 2175], "784": [56, 57, 1602, 1619, 1620, 1622], "78": [56, 57, 465, 536, 539, 736, 739, 1602, 1619, 1620, 1622, 1704, 1776, 1779, 1970, 1981, 1984, 2060, 2071, 2074], "lars_upd": [56, 57, 104, 105, 1602], "lar": [56, 57, 104, 105, 158, 1602, 1623, 1624, 1625, 1626, 2175], "optimizer_upd": [56, 57, 104, 105, 1602], "effective_grad": [56, 57, 104, 105, 1602, 1627, 1628, 1629, 1630], "3e": [56, 57, 104, 105, 1602, 1627, 1628, 1629, 1630], "preserve_typ": [56, 57, 104, 105, 1602, 1632, 1633, 1634, 1635, 1636], "conv1d": [60, 61, 108, 109, 1640, 1646, 2159], "fw": [60, 61, 108, 109, 150, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 2195, 2204, 2215], "d_out": [60, 61, 108, 109, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673], "wio": [60, 61, 1640, 1642, 1643, 1645, 1647, 1648], "conv1d_transpos": [60, 61, 108, 109, 1640, 1651], "output_shap": [60, 61, 108, 109, 1640, 1641, 1647, 1648, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1673, 2159, 2161, 2163, 2165], "string": [60, 61, 87, 88, 108, 109, 135, 137, 138, 139, 142, 143, 148, 154, 157, 189, 190, 196, 325, 331, 332, 364, 366, 386, 429, 430, 431, 433, 434, 435, 436, 442, 450, 456, 460, 461, 464, 1188, 1206, 1282, 1285, 1407, 1437, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1704, 1736, 1739, 2147, 2148, 2195, 2213, 2214, 2216, 2241, 2244], "low": [60, 61, 70, 71, 108, 109, 118, 119, 136, 148, 152, 154, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1970, 1976, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 2126, 2128, 2130, 2131, 2132, 2134, 2136, 2245, 2249], "pair": [60, 61, 108, 109, 137, 465, 501, 504, 938, 966, 1188, 1204, 1270, 1401, 1405, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677, 1699, 1700, 1701, 1702, 1703, 1704, 1710, 1713], "spatial": [60, 61, 108, 109, 170, 1640, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1673, 1674, 1677], "conv2d": [60, 61, 108, 109, 1640, 1656, 1657, 1659, 1661, 2118, 2159], "fh": [60, 61, 108, 109, 1640, 1641, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678], "hwio": [60, 61, 1640, 1652, 1653, 1655], "conv2d_transpos": [60, 61, 108, 109, 1640, 1661], "random_norm": [60, 61, 62, 63, 70, 71, 108, 109, 110, 111, 118, 119, 1407, 1441, 1444, 1640, 1647, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1689, 1690, 1691, 1704, 1801, 1802, 1803, 1804, 1805, 1970, 1985], "std": [60, 61, 70, 71, 78, 79, 108, 109, 118, 119, 126, 127, 140, 843, 846, 1305, 1307, 1640, 1647, 1649, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1970, 1976, 1979, 1981, 1982, 1983, 1984, 1985, 2060], "conv3d": [60, 61, 108, 109, 1640, 1666, 2159], "fd": [60, 61, 108, 109, 1640, 1641, 1662, 1663, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673], "conv3d_transpos": [60, 61, 108, 109, 1640, 1671], "depthwise_conv2d": [60, 61, 108, 109, 1640, 1678, 2118], "randint": [60, 61, 70, 71, 74, 75, 108, 109, 118, 119, 138, 1674, 1675, 1676, 1678, 1689, 1690, 1970, 1980, 2023, 2024, 2026, 2028, 2118], "255": [60, 61, 101, 108, 109, 465, 531, 534, 892, 896, 1674, 1675, 1676, 1678], "dropout": [60, 61, 108, 109, 157, 917, 1134, 1142, 1640, 1683, 2159, 2170], "noise_shap": [60, 61, 108, 109, 1640, 1679, 1680, 1681, 1682, 1683], "droput": [60, 61, 1679, 1680], "reproduc": [60, 61, 108, 109, 133, 1640, 1679, 1680, 1681, 1682, 1683, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "binari": [60, 61, 64, 65, 101, 108, 109, 112, 113, 465, 511, 514, 526, 529, 536, 539, 676, 679, 854, 855, 856, 857, 1181, 1182, 1640, 1679, 1680, 1681, 1682, 1683, 1844, 1845, 1846, 1847, 1848, 1849], "mask": [60, 61, 108, 109, 152, 1407, 1479, 1640, 1679, 1680, 1681, 1682, 1683, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 2142, 2144], "42857146": [60, 61, 1640, 1679, 1680, 1682], "85714293": [60, 61, 1640, 1679, 1680, 1682], "28571415": [60, 61, 108, 109, 1640, 1679, 1680, 1681, 1682, 1683], "71428585": [60, 61, 108, 109, 1640, 1679, 1680, 1681, 1682, 1683], "14285755": [60, 61, 108, 109, 1640, 1679, 1680, 1681, 1682, 1683], "5714283": [60, 61, 1640, 1679, 1680, 1682], "4285717": [60, 61, 108, 109, 1640, 1679, 1680, 1681, 1682, 1683], "8571434": [60, 61, 108, 109, 1640, 1679, 1680, 1681, 1682, 1683], "2857151": [60, 61, 1640, 1679, 1680, 1682], "dropout1d": [60, 61, 108, 109, 1134], "droput1d": [60, 61], "outer_batch_shap": [60, 61, 108, 109, 1640, 1684, 1685, 1686, 1687, 1688], "inner_batch_shap": [60, 61, 108, 109, 1640, 1684, 1685, 1686, 1687, 1688], "in_featur": [60, 61, 108, 109, 1640, 1684, 1685, 1686, 1687, 1688], "out_featur": [60, 61, 108, 109, 1640, 1684, 1685, 1686, 1687, 1688], "84": [60, 61, 78, 79, 99, 100, 116, 117, 118, 119, 325, 380, 383, 430, 442, 646, 648, 1684, 1685, 1704, 1776, 1779, 1965, 1966, 1968, 1969, 1981, 1983, 1986, 1988, 2060, 2071, 2072, 2074], "133": [60, 61, 1407, 1431, 1434, 1684, 1685], "134": [60, 61, 1684, 1685, 1704, 1761, 1764], "lstm_updat": [60, 61, 108, 109, 154, 1640], "init_h": [60, 61, 108, 109, 154, 1640, 1689, 1690, 1691, 1692, 1693], "init_c": [60, 61, 108, 109, 154, 1640, 1689, 1690, 1691, 1692, 1693], "recurrent_kernel": [60, 61, 108, 109, 154, 1640, 1689, 1690, 1691, 1692, 1693], "recurrent_bia": [60, 61, 108, 109, 154, 1640, 1689, 1690, 1691, 1692, 1693], "cell": [60, 61, 108, 109, 137, 154, 1640, 1689, 1690, 1691, 1692, 2159, 2168], "batch_shap": [60, 61, 70, 71, 93, 94, 108, 109, 118, 119, 152, 154, 156, 239, 260, 261, 294, 296, 297, 298, 1640, 1689, 1690, 1691, 1692, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1839, 1843, 1970, 1971, 1972, 1973, 1974, 1975, 2159, 2168], "hidden": [60, 61, 108, 109, 142, 154, 158, 1640, 1689, 1690, 1691, 1692, 2159, 2168], "recurr": [60, 61, 108, 109, 154, 1640, 1689, 1690, 1691, 1692, 2130, 2134], "timestep": [60, 61, 108, 109, 154, 1640, 1689, 1690, 1691, 1692, 2159, 2168], "h_i": [60, 61, 108, 109, 1689, 1690, 1691], "c_i": [60, 61, 108, 109, 1689, 1690, 1691], "rc": [60, 61, 108, 109, 1689, 1690, 1691], "multi_head_attent": [60, 61, 108, 109, 147, 1640], "num_head": [60, 61, 108, 109, 1640, 1694, 1695, 1696, 1697, 1698, 2159, 2170], "to_q_fn": [60, 61, 108, 109, 1640, 1694, 1695, 1696, 1697, 1698], "to_kv_fn": [60, 61, 108, 109, 1640, 1694, 1695, 1696, 1697, 1698], "to_out_fn": [60, 61, 108, 109, 147, 1640, 1694, 1695, 1696, 1697, 1698], "to_q_v": [60, 61, 108, 109, 1640, 1694, 1695, 1696, 1697, 1698], "to_kv_v": [60, 61, 108, 109, 1640, 1694, 1695, 1696, 1697, 1698], "to_out_v": [60, 61, 108, 109, 1640, 1694, 1695, 1696, 1697, 1698], "scaled_dot_product_attent": [60, 61, 108, 109, 1640, 1703], "queri": [60, 61, 87, 88, 108, 109, 136, 138, 156, 430, 442, 454, 1407, 1479, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 2130, 2159, 2170], "num_queri": [60, 61, 108, 109, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703], "feat_dim": [60, 61, 108, 109, 1640, 1699, 1700, 1701, 1702, 1703], "num_kei": [60, 61, 108, 109, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703], "dot": [60, 61, 108, 109, 137, 1640, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1829, 1833, 2159, 2170], "score": [60, 61, 108, 109, 1640, 1699, 1700, 1701, 1702, 1703], "linear_algebra": [62, 63, 110, 111, 151, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1704, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1731, 1734, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1805, 1806, 1810, 1811, 1814, 1815, 1818, 1819, 1823, 1824, 1828, 1829, 1833, 1834, 1838, 1839, 1843], "choleski": [62, 63, 110, 111, 147, 1704, 1709], "symmetr": [62, 63, 101, 110, 111, 136, 880, 882, 883, 884, 885, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1188, 1206, 1282, 1285, 1704, 1705, 1706, 1707, 1708, 1709, 1730, 1731, 1734, 1736, 1739, 1839, 1843], "625": [62, 63, 1704, 1705, 1706, 1708], "cross": [62, 63, 64, 65, 101, 110, 111, 112, 113, 137, 854, 855, 856, 857, 1181, 1182, 1704, 1714, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 2118], "vif": [62, 63, 110, 111, 1704, 1710, 1711, 1712, 1713, 1714], "det": [62, 63, 110, 111, 137, 1704, 1791, 1794], "axis1": [62, 63, 66, 67, 110, 111, 114, 115, 1704, 1725, 1726, 1727, 1728, 1729, 1819, 1820, 1821, 1822, 1823, 1860, 1921, 1922, 1923, 1924, 1925], "axis2": [62, 63, 110, 111, 1704, 1725, 1726, 1727, 1728, 1729, 1819, 1820, 1821, 1822, 1823], "eigh": [62, 63, 110, 111, 1704, 1730], "uplo": [62, 63, 110, 111, 1704, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740], "eigvalsh": [62, 63, 110, 111, 1704, 1740], "eigenvalu": [62, 63, 101, 110, 111, 928, 931, 933, 935, 936, 937, 1164, 1167, 1168, 1704, 1730, 1731, 1734, 1736, 1737, 1738, 1739, 1740], "inv": [62, 63, 110, 111, 1704, 1750, 2118], "matmul": [62, 63, 110, 111, 135, 150, 151, 154, 1407, 1601, 1704, 1755, 1801, 1803, 1805, 2118], "transpose_a": [62, 63, 110, 111, 1704, 1751, 1752, 1753, 1754, 1755], "transpose_b": [62, 63, 110, 111, 1704, 1751, 1752, 1753, 1754, 1755], "adjoint_a": [62, 63, 110, 111, 1704, 1751, 1752, 1753, 1754, 1755], "adjoint_b": [62, 63, 110, 111, 1704, 1751, 1752, 1753, 1754, 1755], "matrix_norm": [62, 63, 110, 111, 1704, 1760], "ord": [62, 63, 110, 111, 1704, 1756, 1757, 1758, 1759, 1760, 1834, 1835, 1836, 1837, 1838], "fro": [62, 63, 110, 111, 1704, 1756, 1757, 1758, 1759, 1760], "nuc": [62, 63, 110, 111, 1704, 1756, 1757, 1758, 1759, 1760], "matrix_pow": [62, 63, 110, 111, 1704], "matrix_rank": [62, 63, 110, 111, 1704, 1770], "singular": [62, 63, 110, 111, 138, 1704, 1756, 1759, 1766, 1767, 1768, 1769, 1770, 1781, 1782, 1783, 1784, 1785, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 2245, 2252], "largest_singular_valu": [62, 63, 110, 111, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1783, 1784, 1785], "equival": [62, 63, 110, 111, 147, 148, 152, 157, 159, 239, 241, 242, 465, 531, 534, 666, 669, 671, 674, 726, 729, 1704, 1766, 1767, 1768, 1769, 1770, 1781, 1784, 1796, 1799, 1834, 1835, 1837, 1838, 2286, 2298, 2299, 2300, 2301], "defici": [62, 63, 1704, 1766, 1767, 1769], "matrix_transpos": [62, 63, 110, 111, 156, 1704], "pinv": [62, 63, 110, 111, 1704, 1785, 2118], "pseudo": [62, 63, 110, 111, 1704, 1781, 1782, 1783, 1784, 1785], "0426": [62, 63, 110, 111, 1781, 1782, 1785], "0964": [62, 63, 110, 111, 1781, 1782, 1785], "0605": [62, 63, 110, 111, 1781, 1782, 1785], "1368": [62, 63, 110, 111, 1781, 1782, 1785], "qr": [62, 63, 110, 111, 149, 1704, 1790], "orthonorm": [62, 63, 110, 111, 1704, 1786, 1787, 1788, 1789, 1790, 1801, 1805], "namedtupl": [62, 63, 74, 75, 110, 111, 122, 123, 1704, 1730, 1731, 1734, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038], "field": [62, 63, 74, 75, 110, 111, 122, 123, 137, 170, 1704, 1730, 1731, 1734, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1801, 1805, 2023, 2024, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2128, 2136], "slogdet": [62, 63, 110, 111, 1704, 1795], "logabsdet": [62, 63, 110, 111, 1704, 1791, 1792, 1793, 1794, 1795], "6931472": [62, 63, 110, 111, 1704, 1791, 1792, 1793, 1794, 1795], "098611": [62, 63, 1704, 1791, 1792, 1794], "solv": [62, 63, 110, 111, 133, 148, 155, 170, 1704, 2132], "svd": [62, 63, 110, 111, 1704, 1802, 1806, 1810, 2118], "compute_uv": [62, 63, 110, 111, 1704, 1801, 1802, 1803, 1804, 1805], "full_matric": [62, 63, 110, 111, 1704, 1801, 1802, 1803, 1804, 1805], "svf": [62, 63, 1801, 1803], "vh": [62, 63, 110, 111, 1704, 1801, 1802, 1803, 1804, 1805], "hermitian": [62, 63, 110, 111, 1704, 1730, 1731, 1734, 1736, 1739, 1801, 1802, 1803, 1804, 1805], "reconstruct": [62, 63, 74, 75, 122, 123, 149, 1704, 1801, 1803, 1805, 2023, 2024, 2028, 2034, 2035, 2036, 2037, 2038], "reconstructed_x": [62, 63, 1704, 1801, 1803, 1805], "svdval": [62, 63, 110, 111, 1704], "tensordot": [62, 63, 110, 111, 138, 1704], "tensorsolv": [62, 63, 110, 111, 1704], "vander": [62, 63, 110, 111, 1704, 1825], "vandermond": [62, 63, 110, 111, 1704, 1824, 1825, 1826, 1827, 1828], "vecdot": [62, 63, 110, 111, 1704], "vector_norm": [62, 63, 110, 111, 1704, 1835, 2118], "vector_to_skew_symmetric_matrix": [62, 63, 110, 111, 1704, 2118], "binary_cross_entropi": [64, 65, 112, 113, 137, 1844, 1849], "pred": [64, 65, 101, 112, 113, 136, 145, 147, 854, 855, 856, 857, 1181, 1182, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859], "predict": [64, 65, 101, 112, 113, 854, 855, 856, 857, 1181, 1182, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859], "amount": [64, 65, 101, 112, 113, 137, 139, 149, 430, 461, 854, 855, 856, 857, 1181, 1182, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859], "smooth": [64, 65, 101, 112, 113, 854, 855, 856, 857, 1181, 1182, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859], "entropi": [64, 65, 101, 112, 113, 854, 855, 856, 857, 1181, 1182, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859], "357": [64, 65, 112, 113, 1844, 1845, 1846, 1847, 1848, 1849, 1855, 1856, 1858, 1859], "223": [64, 65, 112, 113, 1844, 1845, 1846, 1847, 1848, 1849, 1855, 1856, 1857, 1859], "cross_entropi": [64, 65, 112, 113, 136, 145, 147, 1844, 1854, 1855, 1858], "3862944": [64, 65, 1844, 1850, 1851, 1853], "sparse_cross_entropi": [64, 65, 112, 113, 1844, 1859], "loss": [65, 101, 113, 137, 138, 145, 148, 151, 157, 158, 159, 854, 855, 856, 857, 1182, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 2118, 2130, 2137], "x_min": [66, 67, 114, 115, 159, 1860, 1861, 1862, 1863, 1864, 1865], "x_max": [66, 67, 114, 115, 159, 1860, 1861, 1862, 1863, 1864, 1865], "join": [66, 67, 87, 88, 114, 115, 142, 1860, 1866, 1867, 1869, 1916, 1917, 1918, 1919, 1920, 2118], "constant_pad": [66, 67, 114, 115, 1860, 1875], "before_1": [66, 67, 114, 115, 1188, 1206, 1282, 1285, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940], "after_1": [66, 67, 114, 115, 1188, 1206, 1282, 1285, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940], "before_n": [66, 67, 114, 115, 1188, 1206, 1282, 1285, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940], "after_n": [66, 67, 114, 115, 1188, 1206, 1282, 1285, 1860, 1871, 1872, 1873, 1874, 1875, 1936, 1937, 1938, 1939, 1940], "expand_dim": [66, 67, 114, 115, 148, 154, 157, 1640, 1674, 1677, 1860, 1880, 2118], "permute_dim": [66, 67, 114, 115, 1860, 1890], "repetit": [66, 67, 114, 115, 142, 1860, 1891, 1892, 1893, 1894, 1926, 1927, 1928, 1929, 1930], "fit": [66, 67, 114, 115, 148, 154, 1860, 1891, 1892, 1893, 1894, 2126, 2127, 2130], "flat": [66, 67, 87, 88, 114, 115, 1343, 1349, 1376, 1380, 1407, 1537, 1540, 1860, 1891, 1892, 1893, 1894, 2147, 2148], "allowzero": [66, 67, 114, 115, 1860, 1896, 1897, 1898, 1899, 1900], "valueerror": [66, 67, 102, 103, 114, 115, 142, 1407, 1568, 1569, 1572, 1860, 1896, 1897, 1898, 1899, 1900, 1911, 1914], "reus": [66, 67, 114, 115, 142, 150, 1860, 1896, 1897, 1898, 1899, 1900, 2135], "buffer": [66, 67, 114, 115, 171, 1860, 1896, 1897, 1898, 1899, 1900], "roll": [66, 67, 114, 115, 136, 144, 1860, 1905], "restor": [66, 67, 114, 115, 1860, 1901, 1902, 1903, 1904, 1905], "num_or_size_split": [66, 67, 87, 88, 114, 115, 154, 1640, 1694, 1697, 1860, 1906, 1907, 1908, 1909, 1910], "with_remaind": [66, 67, 87, 88, 114, 115, 1860, 1906, 1907, 1908, 1909, 1910], "squeez": [66, 67, 114, 115, 1860, 1915, 2118, 2130], "swapax": [66, 67, 114, 115, 1860, 1922], "axis0": [66, 67, 114, 115, 1860, 1921, 1922, 1923, 1924, 1925], "swap_ax": [66, 67, 1921, 1923], "swap": [66, 67, 114, 115, 1860, 1921, 1922, 1923, 1924, 1925, 2286, 2302], "tile": [66, 67, 102, 103, 114, 115, 1451, 1453, 1455, 1860, 1927, 2118], "unpack": [66, 67, 114, 115, 143, 149, 150, 1860, 1931, 1932, 1933, 1934, 1935], "zero_pad": [66, 67, 114, 115, 1860, 1937, 2118], "layer_norm": [68, 69, 116, 117, 1965], "normalized_idx": [68, 69, 116, 117, 1965, 1966, 1967, 1968, 1969], "new_std": [68, 69, 116, 117, 1965, 1966, 1967, 1968, 1969, 2173, 2174], "learnabl": [68, 69, 116, 117, 159, 1965, 1966, 1967, 1968, 1969, 2173, 2174], "0976": [68, 69, 1965, 1966, 1967, 1969], "3452": [68, 69, 1965, 1966, 1967, 1969], "2740": [68, 69, 1965, 1966, 1967, 1969], "1047": [68, 69, 1965, 1966, 1967, 1969], "5886": [68, 69, 1965, 1966, 1967, 1969], "2732": [68, 69, 1965, 1966, 1967, 1969], "7696": [68, 69, 1965, 1966, 1967, 1969, 2227, 2235], "7024": [68, 69, 1965, 1966, 1967, 1969], "2518": [68, 69, 1965, 1966, 1967, 1969], "826": [68, 69, 1965, 1966, 1967, 1969], "178": [68, 69, 1965, 1966, 1967, 1969], "981": [68, 69, 1965, 1966, 1967, 1969], "831": [68, 69, 1965, 1966, 1967, 1969], "421": [68, 69, 1965, 1966, 1967, 1969], "multinomi": [70, 71, 118, 119, 912, 915, 1305, 1308, 1970, 1975], "population_s": [70, 71, 118, 119, 1970, 1971, 1972, 1973, 1974, 1975], "num_sampl": [70, 71, 118, 119, 1970, 1971, 1972, 1973, 1974, 1975], "unnorm": [70, 71, 118, 119, 150, 1970, 1971, 1972, 1973, 1974, 1975], "popul": [70, 71, 78, 79, 87, 88, 118, 119, 126, 127, 138, 139, 150, 154, 880, 881, 982, 985, 1970, 1971, 1972, 1973, 1974, 1975, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2136], "uniform": [70, 71, 118, 119, 158, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 2137, 2149, 2151, 2152, 2156], "highest": [70, 71, 118, 119, 1970, 1976, 1977, 1978, 1979, 1980], "half": [70, 71, 118, 119, 152, 239, 241, 242, 1970, 1976, 1977, 1978, 1979, 1980, 1986, 1989], "int64": [70, 71, 72, 73, 76, 77, 95, 96, 118, 119, 120, 121, 124, 125, 126, 127, 138, 148, 150, 154, 239, 299, 300, 325, 348, 350, 351, 352, 362, 368, 374, 375, 380, 383, 392, 393, 394, 395, 396, 398, 400, 406, 409, 421, 1159, 1162, 1333, 1334, 1976, 1977, 1978, 1997, 1998, 1999, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2044, 2050, 2051, 2052, 2053, 2054, 2060, 2061, 2064, 2066, 2068, 2069, 2087, 2090, 2096, 2100, 2227, 2230, 2235], "235": [70, 71, 1981, 1982], "float16": [70, 71, 95, 96, 118, 119, 138, 150, 325, 354, 359, 360, 369, 371, 372, 373, 377, 378, 938, 947, 1012, 1015, 1981, 1982, 1983, 1986, 1987, 1988, 2227, 2230, 2235], "49": [70, 71, 110, 111, 465, 751, 754, 892, 895, 1134, 1140, 1824, 1825, 1827, 1981, 1982, 2060, 2071, 2074], "807": [70, 71, 1981, 1982], "random_uniform": [70, 71, 118, 119, 139, 150, 154, 158, 1970, 1990, 2118], "86": [70, 71, 118, 119, 1602, 1604, 1607, 1981, 1983, 1986, 1987, 1988], "53": [70, 71, 99, 100, 430, 461, 581, 583, 585, 1602, 1613, 1618, 1638, 1965, 1966, 1969, 1986, 1987], "argmax": [72, 73, 120, 121, 148, 1997, 2002, 2118], "select_last_index": [72, 73, 120, 121, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007], "insert": [72, 73, 120, 121, 137, 1860, 1876, 1879, 1945, 1951, 1997, 1998, 1999, 2000, 2001, 2002, 2044, 2050, 2053], "occurr": [72, 73, 1997, 1998, 1999, 2001, 2003, 2004, 2006, 2023, 2024, 2028], "argmin": [72, 73, 120, 121, 1997, 2007, 2118], "output_dtyp": [72, 73, 120, 121, 1997, 2003, 2004, 2005, 2006, 2007], "singleton": [72, 73, 78, 79, 80, 81, 110, 111, 120, 121, 126, 127, 128, 129, 154, 1704, 1834, 1835, 1837, 1838, 1860, 1876, 1879, 1911, 1914, 1997, 2003, 2004, 2005, 2006, 2007, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "accordingli": [72, 73, 78, 79, 80, 81, 110, 111, 120, 121, 126, 127, 128, 129, 143, 148, 154, 239, 284, 287, 465, 581, 584, 646, 649, 1704, 1834, 1835, 1837, 1838, 1997, 2003, 2004, 2005, 2006, 2007, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116], "argwher": [72, 73, 120, 121, 143, 1997, 2012], "nonzero": [72, 73, 120, 121, 465, 481, 484, 1997, 2017], "as_tupl": [72, 73, 120, 121, 1997, 2013, 2014, 2015, 2016, 2017], "fewer": [72, 73, 120, 121, 1997, 2013, 2014, 2015, 2016, 2017], "yield": [72, 73, 137, 143, 1188, 1204, 1205, 1206, 1270, 1271, 1282, 1285, 1997, 2018, 2020, 2022], "condit": [72, 73, 120, 121, 133, 138, 140, 142, 147, 170, 1945, 1956, 1957, 1997, 2018, 2019, 2020, 2021, 2022, 2245, 2252], "unique_al": [74, 75, 122, 123, 2023, 2025], "inverse_indic": [74, 75, 122, 123, 2023, 2024, 2025, 2026, 2027, 2028, 2034, 2035, 2036, 2037, 2038], "vari": [74, 75, 136, 140, 148, 150, 156, 1407, 1441, 1444, 2023, 2024, 2026, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "unique_count": [74, 75, 122, 123, 2023, 2030], "unique_invers": [74, 75, 122, 123, 2023, 2035], "unique_valu": [74, 75, 122, 123, 2023], "argsort": [76, 77, 124, 125, 148, 2044, 2049, 2050, 2053], "descend": [76, 77, 124, 125, 1704, 1801, 1805, 1806, 1810, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2056, 2057, 2058, 2059], "ascend": [76, 77, 124, 125, 1159, 1162, 1333, 1334, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053], "stabil": [76, 77, 124, 125, 138, 152, 1407, 1558, 1561, 1563, 1566, 2044, 2045, 2046, 2047, 2048, 2049, 2055, 2058], "searchsort": [76, 77, 124, 125, 2044, 2054], "sorter": [76, 77, 124, 125, 2044, 2050, 2051, 2052, 2053, 2054], "ret_dtyp": [76, 77, 124, 125, 2044, 2050, 2051, 2052, 2053, 2054], "cumprod": [78, 79, 126, 127, 148, 159, 2060, 2065], "cumul": [78, 79, 126, 127, 170, 2060, 2061, 2062, 2063, 2064, 2066, 2067, 2068, 2069, 2070], "exclud": [78, 79, 126, 127, 140, 154, 239, 241, 242, 880, 886, 887, 1368, 1371, 1372, 1375, 1970, 1986, 1989, 2061, 2062, 2063, 2065, 2227, 2231, 2235, 2236, 2256, 2257, 2286, 2288], "120": [78, 79, 84, 89, 90, 126, 127, 1704, 1776, 1779, 2061, 2062, 2063, 2065], "cumsum": [78, 79, 126, 127, 138, 2060, 2070, 2118], "einsum": [78, 79, 126, 127, 2060], "equat": [78, 79, 101, 126, 127, 880, 882, 1049, 1050, 1051, 1052, 1704, 1796, 1799, 2060, 2071, 2072, 2073, 2074, 2130], "contract": [78, 79, 1704, 1811, 1814, 2060, 2071, 2072, 2074], "operand": [78, 79, 134, 136, 141, 148, 465, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 536, 539, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 711, 714, 726, 729, 731, 734, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 776, 780, 938, 963, 1328, 1331, 2060, 2071, 2072, 2074, 2075, 2078, 2083, 2086, 2096, 2100], "seq": [78, 79, 2060, 2071, 2072, 2074, 2227, 2240], "jk": [78, 79, 2060, 2071, 2072, 2074], "ik": [78, 79, 2060, 2071, 2072, 2074], "66": [78, 79, 102, 103, 104, 105, 465, 536, 539, 1407, 1441, 1444, 1446, 1449, 1450, 1602, 1614, 1616, 1617, 1704, 1776, 1779, 2060, 2071, 2072, 2074], "104": [78, 79, 1704, 1776, 1779, 2060, 2071, 2072, 2074], "126": [78, 79, 189, 191, 194, 465, 716, 719, 1704, 1761, 1764, 2060, 2071, 2072, 2074], "510": [78, 79, 2060, 2071, 2072, 2074], "arithmet": [78, 79, 126, 127, 148, 465, 531, 534, 2060, 2079, 2080, 2081, 2082], "x_i": [78, 79, 99, 100, 101, 141, 465, 466, 469, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 516, 519, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 606, 609, 610, 611, 614, 615, 616, 619, 620, 621, 624, 625, 636, 639, 641, 644, 646, 649, 651, 654, 666, 669, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 766, 770, 771, 775, 776, 780, 938, 961, 963, 1311, 1314, 1315, 1328, 1331, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2060, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2092, 2095, 2096, 2100, 2101, 2103, 2105, 2149, 2153], "propag": [78, 79, 465, 531, 534, 2060, 2075, 2078, 2079, 2080, 2082, 2083, 2086, 2092, 2095, 2096, 2100, 2101, 2103, 2105], "04999995": [78, 79, 2079, 2080], "0999999": [78, 79, 2079, 2080], "freedom": [78, 79, 126, 127, 135, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105], "adjust": [78, 79, 126, 127, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2286, 2302], "constitut": [78, 79, 126, 127, 145, 154, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105, 2131], "commonli": [78, 79, 126, 127, 142, 145, 2060, 2092, 2093, 2094, 2095, 2101, 2103, 2104, 2105], "8164966": [78, 79, 2060, 2092, 2093, 2095], "varianc": [78, 79, 126, 127, 2060, 2101, 2102, 2103, 2104, 2105, 2149, 2157], "unbias": [78, 79, 126, 127, 2060, 2101, 2103, 2104, 2105], "6666665": [78, 79, 157, 2101, 2103], "667": [78, 79, 102, 103, 465, 561, 564, 1407, 1431, 1433, 1558, 1560, 1561, 2101, 2103], "AND": [80, 81, 128, 129, 465, 511, 514, 661, 664, 2106, 2107, 2108, 2109, 2110, 2111], "add_ivy_array_instance_method": 82, "cl": [82, 83, 130, 131], "to_ignor": [82, 83, 130, 131, 1945, 1957, 1958], "loop": [82, 83, 130, 131, 135, 143, 171, 1941, 1942, 1943, 1944], "_wrap_funct": [82, 83, 130, 131, 145, 146], "toi": [82, 83, 130, 131], "arrayexampl": [82, 83], "hasattr": [82, 83, 130, 131], "dict_in": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "queue": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 157, 1407, 1488, 1552, 1593], "queue_load_s": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "container_combine_method": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "list_join": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "queue_timeout": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "print_limit": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "key_length_limit": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "print_ind": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "print_line_spac": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "ivyh": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "default_key_color": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "keyword_color_dict": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "rebuild_child_contain": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "types_to_iteratively_nest": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "alphabetical_kei": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "containerwithactiv": [84, 85, 89, 90], "containerwithconvers": [84, 89, 90, 91], "containerwithcr": [84, 89, 90, 93], "containerwithdatatyp": [84, 89, 90, 95], "containerwithdevic": [84, 89, 90, 97], "containerwithelementwis": [84, 89, 90, 99, 136], "containerwithgener": [84, 89, 90, 102], "containerwithgradi": [84, 89, 90, 104], "containerwithimag": [84, 89, 90, 106], "containerwithlay": [84, 89, 90, 108], "containerwithlinearalgebra": [84, 89, 90, 110], "containerwithloss": [84, 89, 90, 112], "containerwithnorm": [84, 89, 90, 116], "containerwithrandom": [84, 89, 90, 118], "containerwithsearch": [84, 89, 90, 120], "containerwithset": [84, 89, 90, 122], "containerwithsort": [84, 89, 90, 124], "containerwithstatist": [84, 89, 90, 126], "containerwithutil": [84, 89, 90, 128], "containerwithactivationexperiment": [84, 89, 90, 101], "containerwithconversionexperiment": [84, 89, 90, 101], "containerwithcreationexperiment": [84, 89, 90, 101], "containerwithdata_typeexperiment": [84, 89, 90, 101], "containerwithdeviceexperiment": [84, 89, 90, 101], "containerwithelementwiseexperiment": [84, 89, 90, 101], "containerwithgeneralexperiment": [84, 89, 90, 101], "containerwithgradientsexperiment": [84, 89, 90, 101], "containerwithimageexperiment": [84, 89, 90, 101], "containerwithlayersexperiment": [84, 89, 90, 101], "containerwithlinearalgebraexperiment": [84, 89, 90, 101], "containerwithlossesexperiment": [84, 89, 90, 101], "containerwithmanipulationexperiment": [84, 89, 90, 101], "containerwithnormsexperiment": [84, 89, 90, 101], "containerwithrandomexperiment": [84, 89, 90, 101], "containerwithsearchingexperiment": [84, 89, 90, 101], "containerwithsetexperiment": [84, 89, 90, 101], "containerwithsortingexperiment": [84, 89, 90, 101], "containerwithstatisticalexperiment": [84, 89, 90, 101], "containerwithutilityexperiment": [84, 89, 90, 101], "eq": [84, 89, 90], "ge": [84, 89, 90], "gt": [84, 89, 90, 149, 154], "dictionari": [84, 87, 88, 89, 90, 134, 137, 138, 148, 157, 171, 189, 190, 196, 430, 454, 1602, 1612, 2195, 2200], "asynchron": [84, 87, 88, 89, 90, 2130], "arriv": [84, 87, 88, 89, 90, 152, 1407, 1552], "cont_list_join": [84, 87, 88, 89, 90], "timeout": [84, 87, 88, 89, 90, 1407, 1488, 1552, 1593], "whitespac": [84, 87, 88, 89, 90], "indent": [84, 87, 88, 89, 90, 157], "extra": [84, 87, 88, 89, 90, 134, 138, 140, 146, 148, 149, 152, 154, 1407, 1601, 2127, 2132], "newlin": [84, 87, 88, 89, 90, 141], "color": [84, 87, 88, 89, 90, 2306, 2307], "termcolor": [84, 87, 88, 89, 90], "constructor": [84, 87, 88, 89, 90, 138, 139, 156, 1407, 1414, 2142, 2143, 2181, 2182, 2195, 2214, 2216], "alphabet": [84, 87, 88, 89, 90], "le": [84, 89, 90], "lt": [84, 89, 90], "ne": [84, 89, 90], "75979435": [84, 89, 90], "52153397": [84, 89, 90], "13532257": [84, 89, 90], "rshift": [84, 89, 90], "143": [84, 89, 90, 99, 100, 140, 465, 766, 767, 769, 770], "truediv": [84, 89, 90], "66666669": [84, 89, 90], "60000002": [84, 89, 90, 126, 127, 2079, 2081], "key_chain": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 241, 243, 244, 247, 255, 257, 259, 260, 262, 263, 265, 267, 269, 271, 273, 274, 276, 278, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 355, 357, 359, 361, 364, 365, 367, 369, 371, 373, 374, 376, 377, 379, 380, 382, 384, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 403, 405, 406, 408, 410, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 793, 795, 797, 798, 800, 802, 803, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 842, 843, 845, 847, 849, 851, 853, 854, 855, 857, 859, 862, 865, 869, 870, 874, 875, 877, 879, 892, 896, 898, 899, 901, 902, 904, 906, 907, 911, 912, 916, 918, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 967, 969, 971, 972, 976, 977, 981, 982, 984, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1042, 1046, 1049, 1050, 1052, 1053, 1056, 1057, 1061, 1062, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1098, 1100, 1102, 1106, 1108, 1110, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1175, 1183, 1185, 1187, 1212, 1214, 1216, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1236, 1238, 1242, 1243, 1245, 1247, 1248, 1252, 1253, 1257, 1258, 1262, 1263, 1267, 1273, 1275, 1277, 1282, 1284, 1286, 1289, 1293, 1295, 1297, 1299, 1300, 1302, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1327, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1492, 1494, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1804, 1806, 1807, 1809, 1811, 1812, 1813, 1819, 1820, 1822, 1824, 1825, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1934, 1936, 1937, 1939, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2045, 2047, 2049, 2050, 2052, 2054, 2055, 2057, 2059, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2073, 2075, 2077, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116], "to_appli": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 241, 243, 244, 247, 255, 257, 259, 260, 262, 263, 265, 267, 269, 271, 273, 274, 276, 278, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 355, 357, 359, 361, 364, 365, 367, 369, 371, 373, 374, 376, 377, 379, 380, 382, 384, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 403, 405, 406, 408, 410, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 793, 795, 797, 798, 800, 802, 803, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 842, 843, 845, 847, 849, 851, 853, 854, 855, 857, 859, 862, 865, 869, 870, 874, 875, 877, 879, 892, 896, 898, 899, 901, 902, 904, 906, 907, 911, 912, 916, 918, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 967, 969, 971, 972, 976, 977, 981, 982, 984, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1042, 1046, 1049, 1050, 1052, 1053, 1056, 1057, 1061, 1062, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1098, 1100, 1102, 1106, 1108, 1110, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1175, 1183, 1185, 1187, 1212, 1214, 1216, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1236, 1238, 1242, 1243, 1245, 1247, 1248, 1252, 1253, 1257, 1258, 1262, 1263, 1267, 1273, 1275, 1277, 1282, 1284, 1286, 1289, 1293, 1295, 1297, 1299, 1300, 1302, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1327, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1492, 1494, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1804, 1806, 1807, 1809, 1811, 1812, 1813, 1819, 1820, 1822, 1824, 1825, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2045, 2047, 2049, 2050, 2052, 2054, 2055, 2057, 2059, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2073, 2075, 2077, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116], "prune_unappli": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 241, 243, 244, 247, 255, 257, 259, 260, 262, 263, 265, 267, 269, 271, 273, 274, 276, 278, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 355, 357, 359, 361, 364, 365, 367, 369, 371, 373, 374, 376, 377, 379, 380, 382, 384, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 403, 405, 406, 408, 410, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 803, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 842, 843, 845, 847, 849, 851, 853, 854, 855, 857, 859, 862, 865, 869, 870, 874, 875, 877, 879, 892, 896, 898, 899, 901, 902, 904, 906, 907, 911, 912, 916, 918, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 967, 969, 971, 972, 976, 977, 981, 982, 984, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1042, 1046, 1049, 1050, 1052, 1053, 1056, 1057, 1061, 1062, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1098, 1100, 1102, 1106, 1108, 1110, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1175, 1183, 1185, 1187, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1236, 1238, 1242, 1243, 1245, 1247, 1248, 1252, 1253, 1257, 1258, 1262, 1263, 1267, 1273, 1275, 1277, 1282, 1284, 1286, 1289, 1293, 1295, 1297, 1299, 1300, 1302, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1327, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1492, 1494, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1804, 1806, 1807, 1809, 1811, 1812, 1813, 1819, 1820, 1822, 1824, 1825, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2045, 2047, 2049, 2050, 2052, 2054, 2055, 2057, 2059, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2073, 2075, 2077, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116], "map_sequ": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 241, 243, 244, 247, 255, 257, 259, 260, 262, 263, 265, 267, 269, 271, 273, 274, 276, 278, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 355, 357, 359, 361, 364, 365, 367, 369, 371, 373, 374, 376, 377, 379, 380, 382, 384, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 403, 405, 406, 408, 410, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 803, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 842, 843, 845, 847, 849, 851, 853, 854, 855, 857, 859, 862, 865, 869, 870, 874, 875, 877, 879, 892, 896, 898, 899, 901, 902, 904, 906, 907, 911, 912, 916, 918, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 967, 969, 971, 972, 976, 977, 981, 982, 984, 986, 987, 991, 992, 996, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1035, 1039, 1042, 1046, 1049, 1050, 1052, 1053, 1056, 1057, 1061, 1062, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1098, 1100, 1102, 1106, 1108, 1110, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1175, 1183, 1185, 1187, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1236, 1238, 1242, 1243, 1245, 1247, 1248, 1252, 1253, 1257, 1258, 1262, 1263, 1267, 1273, 1275, 1277, 1282, 1284, 1286, 1289, 1293, 1295, 1297, 1299, 1300, 1302, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1327, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1492, 1494, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1804, 1806, 1807, 1809, 1811, 1812, 1813, 1819, 1820, 1822, 1824, 1825, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1934, 1936, 1937, 1939, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2045, 2047, 2049, 2050, 2052, 2054, 2055, 2057, 2059, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2073, 2075, 2077, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116], "static_adam_step": [84, 89, 90], "static_adam_upd": [84, 89, 90], "static_arg_info": [84, 89, 90], "static_arg_nam": [84, 89, 90], "static_arrai": [84, 89, 90], "static_as_ivy_dev": [84, 89, 90], "static_as_ivy_dtyp": [84, 89, 90], "static_as_native_dev": [84, 89, 90], "static_as_native_dtyp": [84, 89, 90], "static_asarray_handle_nest": [84, 89, 90], "static_asarray_infer_devic": [84, 89, 90], "static_asarray_to_native_arrays_and_back": [84, 89, 90], "static_cache_fn": [84, 89, 90], "static_check_float": [84, 89, 90], "static_clear_mem_on_dev": [84, 89, 90], "static_closest_valid_dtyp": [84, 89, 90], "static_container_typ": [84, 89, 90], "static_conv": [84, 89, 90], "static_conv_general_dil": [84, 89, 90], "static_conv_general_transpos": [84, 89, 90], "static_copy_arrai": [84, 89, 90, 239, 251, 253], "static_current_backend": [84, 89, 90], "static_current_backend_str": [84, 89, 90], "static_default": [84, 89, 90], "static_default_devic": [84, 89, 90], "static_default_dtyp": [84, 89, 90], "static_default_int_dtyp": [84, 89, 90], "static_default_uint_dtyp": [84, 89, 90], "static_deseri": [84, 89, 90], "static_dev_util": [84, 89, 90], "static_dtype_bit": [84, 89, 90], "static_einsum": [84, 89, 90], "static_empti": [84, 89, 90], "static_execute_with_gradi": [84, 89, 90], "static_exist": [84, 89, 90], "static_ful": [84, 89, 90], "static_function_supported_devic": [84, 89, 90], "static_function_supported_devices_and_dtyp": [84, 89, 90], "static_function_unsupported_devic": [84, 89, 90], "static_function_unsupported_devices_and_dtyp": [84, 89, 90], "static_get": [84, 89, 90], "static_get_all_arrays_in_memori": [84, 89, 90], "static_get_all_ivy_arrays_on_dev": [84, 89, 90], "static_get_array_mod": [84, 89, 90], "static_get_exception_trace_mod": [84, 89, 90], "static_get_item": [84, 89, 90], "static_get_min_bas": [84, 89, 90], "static_get_min_denomin": [84, 89, 90], "static_get_nestable_mod": [84, 89, 90], "static_get_queue_timeout": [84, 89, 90], "static_get_referrers_recurs": [84, 89, 90], "static_get_show_func_wrapper_trace_mod": [84, 89, 90], "static_get_tmp_dir": [84, 89, 90], "static_gpu_is_avail": [84, 89, 90], "static_grad": [84, 89, 90], "static_gradient_descent_upd": [84, 89, 90], "static_handle_array_funct": [84, 89, 90], "static_handle_array_like_without_promot": [84, 89, 90], "static_handle_except": [84, 89, 90], "static_handle_nest": [84, 89, 90], "static_handle_out_argu": [84, 89, 90], "static_infer_default_dtyp": [84, 89, 90], "static_infer_devic": [84, 89, 90], "static_infer_dtyp": [84, 89, 90], "static_inplace_arrays_support": [84, 89, 90], "static_inplace_variables_support": [84, 89, 90], "static_inputs_to_ivy_arrai": [84, 89, 90], "static_inputs_to_native_arrai": [84, 89, 90], "static_integer_arrays_to_float": [84, 89, 90], "static_invalid_dtyp": [84, 89, 90], "static_is_ivy_contain": [84, 89, 90], "static_isscalar": [84, 89, 90], "static_jac": [84, 89, 90], "static_lamb_upd": [84, 89, 90], "static_lars_upd": [84, 89, 90], "static_layer_norm": [84, 89, 90], "static_match_kwarg": [84, 89, 90], "static_max": [84, 89, 90], "static_mean": [84, 89, 90], "static_min": [84, 89, 90], "static_multiprocess": [84, 89, 90], "static_normalize_axis_tupl": [84, 89, 90], "static_num_arrays_in_memori": [84, 89, 90], "static_num_cpu_cor": [84, 89, 90], "static_num_gpu": [84, 89, 90], "static_num_ivy_arrays_on_dev": [84, 89, 90], "static_optimizer_upd": [84, 89, 90], "static_outputs_to_ivy_arrai": [84, 89, 90], "static_percent_used_mem_on_dev": [84, 89, 90], "static_print_all_arrays_in_memori": [84, 89, 90], "static_print_all_ivy_arrays_on_dev": [84, 89, 90], "static_promote_typ": [84, 89, 90], "static_promote_types_of_input": [84, 89, 90], "static_se": [84, 89, 90], "static_set_array_mod": [84, 89, 90], "static_set_default_complex_dtyp": [84, 89, 90], "static_set_default_devic": [84, 89, 90], "static_set_default_dtyp": [84, 89, 90], "static_set_default_float_dtyp": [84, 89, 90], "static_set_default_int_dtyp": [84, 89, 90], "static_set_default_uint_dtyp": [84, 89, 90], "static_set_exception_trace_mod": [84, 89, 90], "static_set_min_bas": [84, 89, 90], "static_set_min_denomin": [84, 89, 90], "static_set_nestable_mod": [84, 89, 90], "static_set_queue_timeout": [84, 89, 90], "static_set_shape_array_mod": [84, 89, 90], "static_set_show_func_wrapper_trace_mod": [84, 89, 90], "static_set_split_factor": [84, 89, 90], "static_set_tmp_dir": [84, 89, 90], "static_set_with_grad": [84, 89, 90], "static_shap": [84, 89, 90], "static_shape_array_mod": [84, 89, 90], "static_split_factor": [84, 89, 90], "static_split_func_cal": [84, 89, 90], "static_std": [84, 89, 90], "static_tensorsolv": [84, 89, 90], "static_to_ivy_shap": [84, 89, 90], "static_to_native_arrays_and_back": [84, 89, 90], "static_to_native_shap": [84, 89, 90], "static_total_mem_on_dev": [84, 89, 90], "static_tpu_is_avail": [84, 89, 90], "static_try_else_non": [84, 89, 90], "static_type_promote_arrai": [84, 89, 90], "static_unset_array_mod": [84, 89, 90], "static_unset_default_complex_dtyp": [84, 89, 90], "static_unset_default_devic": [84, 89, 90], "static_unset_default_dtyp": [84, 89, 90], "static_unset_default_float_dtyp": [84, 89, 90], "static_unset_default_int_dtyp": [84, 89, 90], "static_unset_default_uint_dtyp": [84, 89, 90], "static_unset_exception_trace_mod": [84, 89, 90], "static_unset_nestable_mod": [84, 89, 90], "static_unset_queue_timeout": [84, 89, 90], "static_unset_shape_array_mod": [84, 89, 90], "static_unset_show_func_wrapper_trace_mod": [84, 89, 90], "static_unset_with_grad": [84, 89, 90], "static_used_mem_on_dev": [84, 89, 90], "static_valid_dtyp": [84, 89, 90], "static_value_and_grad": [84, 89, 90], "static_vmap": [84, 89, 90], "static_with_grad": [84, 89, 90], "static_wrap": [84, 89, 90], "containerbas": [85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 1111, 1115], "formul": [85, 86, 191, 193, 195], "chain": [85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 148, 158, 159, 171, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 907, 911, 918, 922, 982, 984, 986, 1002, 1006, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1945, 1948, 1959, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2130, 2147, 2148, 2181, 2182], "prune": [85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 269, 271, 273, 294, 296, 298, 302, 304, 306, 320, 321, 323, 338, 340, 342, 348, 350, 352, 380, 382, 384, 392, 393, 395, 396, 398, 400, 413, 415, 417, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 798, 800, 802, 808, 810, 812, 813, 815, 817, 818, 820, 822, 838, 842, 843, 845, 847, 849, 851, 853, 875, 877, 879, 907, 911, 918, 922, 982, 984, 986, 1002, 1006, 1062, 1066, 1072, 1074, 1076, 1106, 1108, 1110, 1129, 1131, 1133, 1183, 1185, 1187, 1273, 1275, 1277, 1311, 1313, 1315, 1316, 1318, 1320, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1386, 1387, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1614, 1616, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1679, 1681, 1683, 1684, 1686, 1688, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1736, 1738, 1740, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1766, 1768, 1770, 1786, 1788, 1790, 1791, 1793, 1795, 1819, 1820, 1822, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1876, 1880, 1881, 1883, 1885, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1931, 1932, 1934, 1936, 1937, 1939, 1945, 1959, 1960, 1961, 1962, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 2008, 2010, 2012, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2045, 2047, 2049, 2061, 2063, 2065, 2066, 2068, 2070, 2079, 2081, 2087, 2089, 2091, 2092, 2094, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116, 2218], "166": [85, 86, 189, 191, 193, 194], "159": [85, 86, 189, 191, 193, 194, 1640, 1684, 1687], "38999999": [85, 86, 197, 199, 201], "371": [85, 86, 202, 204, 206], "rectifi": [85, 86, 101, 189, 197, 200, 207, 209, 210, 211, 212, 214, 215, 216, 789, 792, 1355, 1356, 1358, 1359], "30883577": [85, 86, 189, 207, 209, 210, 211], "28903052": [85, 86, 189, 207, 209, 210, 211], "10714479": [85, 86, 189, 207, 209, 210, 211], "2689414": [85, 86, 217, 219, 221, 222, 224, 226], "7310586": [85, 86, 217, 219, 221, 222, 224, 226], "88079703": [85, 86, 217, 219, 221], "62245935": [85, 86, 217, 219, 221], "4750208": [85, 86, 217, 219, 221], "72844321": [85, 86, 222, 224, 226], "19852395": [85, 86, 222, 224, 226], "07303288": [85, 86, 222, 224, 226], "revert": [85, 86, 189, 227, 229, 230, 231], "948": [85, 86, 227, 229, 231], "static_gelu": [85, 86, 191], "185": [85, 86, 191, 195], "046": [85, 86, 191, 195], "static_leaky_relu": [85, 86, 197], "static_log_softmax": [85, 86, 202], "static_mish": [85, 86, 207], "static_relu": [85, 86, 212], "static_sigmoid": [85, 86, 217], "static_softmax": [85, 86, 222], "static_softplu": [85, 86, 227], "53499615": [85, 86, 227, 231], "42036411": [85, 86, 227, 231], "31326175": [85, 86, 227, 231], "69314718": [85, 86, 227, 231], "__getitem__": [87, 88, 136], "slice": [87, 88, 102, 103, 880, 886, 887, 1188, 1208, 1350, 1354, 1368, 1371, 1372, 1375, 1407, 1466, 1469, 1471, 1474, 1475, 1479, 1945, 1955, 2130], "__setitem__": [87, 88, 134, 136, 156], "cont_all_fals": [87, 88], "assert_is_bool": [87, 88], "cont_all_key_chain": [87, 88], "include_empti": [87, 88], "cont_all_tru": [87, 88, 136, 157], "cont_as_bool": [87, 88], "cont_assert_contains_sub_contain": [87, 88], "sub_cont": [87, 88], "cont_assert_contains_sub_structur": [87, 88], "cont_assert_ident": [87, 88], "check_typ": [87, 88], "same_arrai": [87, 88, 157], "arrays_equ": [87, 88], "cont_assert_identical_structur": [87, 88], "cont_at_key_chain": [87, 88], "ignore_key_error": [87, 88], "ignore_non": [87, 88], "cont_at_kei": [87, 88], "substr": [87, 88], "cont_combin": [87, 88], "duplic": [87, 88, 135, 141, 143, 146, 149, 158, 1945, 1948, 2136], "container_rightmost": [87, 88], "cont_common_key_chain": [87, 88, 136], "cont_config": [87, 88], "cont_contains_sub_contain": [87, 88], "cont_contains_sub_structur": [87, 88], "cont_copi": [87, 88, 157], "cont_create_if_abs": [87, 88], "noth": [87, 88, 152, 2136], "cont_cutoff_at_depth": [87, 88], "depth_cutoff": [87, 88], "cont_cutoff_at_height": [87, 88], "height_cutoff": [87, 88], "cont_deep_copi": [87, 88, 157], "intern": [87, 88, 134, 136, 139, 141, 147, 149, 150, 1945, 1946, 1956, 1957, 2124, 2125, 2142, 2145, 2149, 2150, 2153, 2154, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2181, 2182], "cont_dev": [87, 88], "cont_dev_str": [87, 88], "cont_diff": [87, 88, 136, 157], "diff_kei": [87, 88], "detect_key_diff": [87, 88], "detect_value_diff": [87, 88], "detect_shape_diff": [87, 88], "container0": [87, 88], "cont_duplicate_array_keychain": [87, 88], "cont_find_sub_contain": [87, 88], "sub_cont_to_find": [87, 88], "exsit": [87, 88], "cont_find_sub_structur": [87, 88], "sub_struc_to_find": [87, 88], "cont_flatten_key_chain": [87, 88, 157], "__": [87, 88, 140, 157], "above_height": [87, 88, 157], "below_depth": [87, 88, 157], "cont_format_key_chain": [87, 88], "format_fn": [87, 88], "cont_from_disk_as_hdf5": [87, 88, 157], "h5_obj_or_filepath": [87, 88], "slice_obj": [87, 88], "load": [87, 88, 150, 171, 2129, 2136], "disk": [87, 88, 157, 2129], "h5py": [87, 88], "hdf5": [87, 88, 157, 2171, 2172], "h5": [87, 88], "cont_from_disk_as_json": [87, 88, 157], "json_filepath": [87, 88], "cont_from_disk_as_pickl": [87, 88, 157], "pickle_filepath": [87, 88], "pickl": [87, 88, 136, 157], "cont_from_flat_list": [87, 88], "flat_list": [87, 88], "cont_handle_inplac": [87, 88], "prime": [87, 88], "overwritten": [87, 88, 134, 135], "cont_has_kei": [87, 88], "query_kei": [87, 88], "somewher": [87, 88, 137], "cont_has_key_chain": [87, 88], "cont_ident": [87, 88, 157], "cont_identical_array_shap": [87, 88], "cont_identical_config": [87, 88], "cont_identical_structur": [87, 88], "cont_if_exist": [87, 88], "cont_inplace_upd": [87, 88], "cont_ivi": [87, 88], "cont_key_chains_contain": [87, 88], "sub_str": [87, 88], "cont_list_stack": [87, 88, 157], "cont_map": [87, 88, 136, 157], "cont_map_sub_cont": [87, 88], "include_self": [87, 88], "possibi": [87, 88], "cont_max_depth": [87, 88], "cont_multi_map": [87, 88, 136], "map_nest": [87, 88], "assert_ident": [87, 88], "leftmost": [87, 88, 1945, 1959], "cont_multi_map_in_funct": [87, 88, 136], "cont_num_arrai": [87, 88], "cont_overwrite_at_key_chain": [87, 88], "target_dict": [87, 88], "return_dict": [87, 88], "cont_prune_empti": [87, 88], "keep_non": [87, 88], "cont_prune_key_chain": [87, 88], "key1": [87, 88, 158], "key2": [87, 88], "key3": [87, 88], "cont_prune_key_from_key_chain": [87, 88], "cont_prune_kei": [87, 88], "cont_prune_keys_from_key_chain": [87, 88], "cont_reduc": [87, 88], "cont_remove_key_length_limit": [87, 88], "cont_remove_print_limit": [87, 88], "cont_reshape_lik": [87, 88], "leading_shap": [87, 88], "return_cont": [87, 88], "cont_restructur": [87, 88], "keep_orig": [87, 88], "cont_restructure_key_chain": [87, 88], "keychain_map": [87, 88], "cont_set_at_key_chain": [87, 88], "cont_set_at_kei": [87, 88], "cont_shap": [87, 88, 1640, 1662, 1665], "attribut": [87, 88, 136, 138, 141, 146, 147, 148, 155, 156, 157, 158, 325, 369, 372, 374, 375, 377, 378, 380, 383, 430, 443, 444, 451, 880, 881, 982, 985, 1407, 1464, 1465, 2218, 2219], "cont_show": [87, 88], "cont_show_sub_contain": [87, 88], "sub_cont_or_keychain": [87, 88], "cont_size_ordered_arrai": [87, 88], "keychain": [87, 88, 101, 808, 810, 812, 813, 815, 817, 818, 820, 822, 1062, 1066, 1350, 1351, 1353], "cont_slice_kei": [87, 88], "key_slic": [87, 88], "all_depth": [87, 88], "cont_slice_via_kei": [87, 88], "slice_kei": [87, 88], "cont_sort_by_kei": [87, 88], "cont_structural_diff": [87, 88], "cont_to_dict": [87, 88], "cont_to_disk_as_hdf5": [87, 88, 157], "starting_index": [87, 88], "max_batch_s": [87, 88], "cont_to_disk_as_json": [87, 88, 157], "cont_to_disk_as_pickl": [87, 88, 157], "cont_to_flat_list": [87, 88], "cont_to_iter": [87, 88, 136], "leaf_keys_onli": [87, 88], "cont_to_iterator_kei": [87, 88], "cont_to_iterator_valu": [87, 88], "cont_to_json": [87, 88], "cont_to_nested_list": [87, 88], "cont_to_raw": [87, 88], "raw": [87, 88, 141, 2131], "cont_trim_kei": [87, 88], "max_length": [87, 88], "trim": [87, 88], "cont_try_kc": [87, 88], "tri": [87, 88, 2218, 2219], "cont_unifi": [87, 88], "concatten": [87, 88, 430, 455], "cont_unstack_cont": [87, 88], "dim_siz": [87, 88], "cont_update_config": [87, 88], "cont_with_default_key_color": [87, 88], "cont_with_entries_as_list": [87, 88], "cont_with_ivy_backend": [87, 88], "ivy_backend": [87, 88], "cont_with_key_length_limit": [87, 88, 157], "cont_with_print_ind": [87, 88, 157], "cont_with_print_limit": [87, 88, 157], "cont_with_print_line_spac": [87, 88], "h5_file_s": [87, 88], "shuffle_h5_fil": [87, 88], "seed_valu": [87, 88, 1970, 1991], "dataset": [87, 88, 157, 169, 2118], "split_cont": [87, 88], "constitu": [87, 88, 159], "static_to_ivi": [91, 92], "static_to_n": [91, 92], "2324": [93, 94, 239, 269, 271, 272, 273], "234": [93, 94, 99, 100, 239, 269, 271, 272, 273, 465, 571, 573, 575, 776, 777, 779, 780, 1640, 1684, 1687, 2227, 2236], "123": [93, 94, 95, 96, 150, 239, 269, 271, 272, 273, 380, 382, 1407, 1456, 1458], "15443469": [93, 94, 279, 281, 283], "64158883": [93, 94, 279, 281, 283], "5443469": [93, 94, 239, 279, 281, 282], "static_arang": [93, 94, 241], "static_asarrai": [93, 94, 244], "static_empty_lik": [93, 94, 255], "static_ey": [93, 94, 260], "n_row": [93, 94, 101, 239, 260, 261, 262, 880, 886, 887, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375], "n_col": [93, 94, 101, 239, 260, 261, 262, 880, 886, 887, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375], "static_from_dlpack": [93, 94, 263], "static_full_lik": [93, 94, 269], "static_linspac": [93, 94, 274], "static_logspac": [93, 94, 279], "static_meshgrid": [93, 94, 284], "static_native_arrai": [93, 94, 289], "static_one_hot": [93, 94, 294], "static_on": [93, 94, 299], "static_ones_lik": [93, 94, 302], "static_tril": [93, 94, 307], "static_triu": [93, 94, 312], "static_zero": [93, 94, 317], "static_zeros_lik": [93, 94, 320], "718": [95, 96, 99, 100, 325, 333, 335, 336, 337, 671, 673], "618": [95, 96, 99, 100, 325, 333, 335, 336, 337, 671, 673], "broadcats": [95, 96, 338, 340], "inquir": [95, 96, 369, 371, 373, 380, 382, 384], "55040e": [95, 96, 325, 369, 371, 372, 373], "7976931348623157e": [95, 96, 325, 369, 371, 372, 373], "308": [95, 96, 150, 325, 369, 371, 372, 373, 2227, 2230, 2236], "1800": [95, 96, 325, 380, 382, 383, 384], "2147483648": [95, 96, 325, 380, 382, 383, 384], "2147483647": [95, 96, 325, 380, 382, 383, 384], "complex64": [95, 96, 325, 355, 356, 392, 393, 394, 395, 418, 424], "static_astyp": [95, 96, 333], "static_broadcast_arrai": [95, 96, 338], "And": [95, 96, 150, 338, 342], "static_broadcast_to": [95, 96, 343], "static_can_cast": [95, 96, 348], "from_": [95, 96, 325, 348, 351, 352], "static_default_complex_dtyp": [95, 96, 355], "complex_dtyp": [95, 96, 325, 326, 355, 356, 357, 418], "static_default_float_dtyp": [95, 96, 359], "float_dtyp": [95, 96, 325, 328, 359, 360, 361, 420], "static_dtyp": [95, 96, 364], "static_finfo": [95, 96, 369], "static_function_supported_dtyp": [95, 96, 374], "static_function_unsupported_dtyp": [95, 96, 377], "static_iinfo": [95, 96, 380], "1084": [95, 96, 380, 384], "40000": [95, 96, 380, 384], "static_is_bool_dtyp": [95, 96, 387], "dtype_in": [95, 96, 325, 331, 332, 368, 386, 387, 390, 391, 392, 394, 395, 396, 399, 400, 401, 404, 405, 406, 409, 410, 429, 890, 891, 1104], "static_is_complex_dtyp": [95, 96, 392], "static_is_float_dtyp": [95, 96, 396], "static_is_int_dtyp": [95, 96, 401], "static_is_uint_dtyp": [95, 96, 406], "static_result_typ": [95, 96, 413], "contaion": [97, 98, 437, 439], "static_dev": [97, 98, 437], "static_to_devic": [97, 98, 456], "524": [99, 100, 465, 486, 488, 489, 490], "644": [99, 100, 158, 465, 486, 488, 489], "305": [99, 100, 101, 108, 109, 465, 486, 488, 489, 854, 855, 856, 857, 1181, 1182, 1684, 1686, 1688], "915": [99, 100, 465, 501, 503, 504, 505], "29": [99, 100, 102, 103, 104, 105, 118, 119, 465, 501, 503, 504, 505, 1407, 1441, 1444, 1446, 1449, 1450, 1602, 1619, 1621, 1622, 1976, 1978, 1981, 1983, 1986, 1988, 1990], "983": [99, 100, 465, 501, 503, 504, 505], "978": [99, 100, 189, 217, 220, 465, 501, 503, 504, 505], "696": [99, 100, 118, 119, 465, 501, 503, 504, 505, 1981, 1983], "993": [99, 100, 465, 501, 503, 504, 505], "203": [99, 100, 116, 117, 506, 508, 510, 1965, 1966, 1968, 1969], "34": [99, 100, 101, 102, 103, 118, 119, 325, 380, 383, 465, 536, 539, 551, 553, 555, 656, 659, 746, 748, 750, 833, 837, 1407, 1425, 1441, 1444, 1446, 1449, 1450, 1704, 1761, 1764, 1970, 1976, 1980, 1981, 1983, 1986, 1989], "351": [99, 100, 465, 556, 558, 559, 716, 718], "00613": [99, 100, 556, 558], "0154": [99, 100, 556, 558], "0262": [99, 100, 465, 556, 558, 559, 560, 716, 719], "873": [99, 100, 465, 556, 558, 559, 560, 716, 719], "thefunct": [99, 100, 571, 573, 581, 585, 586, 590], "27632612": [99, 100, 571, 573, 575], "934008": [99, 100, 571, 573, 575], "99999928": [99, 100, 571, 573, 575], "91903949": [99, 100, 571, 573, 575], "59814835": [99, 100, 576, 578, 580], "148": [99, 100, 576, 578, 580], "4131622": [99, 100, 576, 578, 580], "403": [99, 100, 576, 578], "428772": [99, 100, 576, 578], "649": [99, 100, 581, 583], "220": [99, 100, 581, 583], "959": [99, 100, 465, 581, 583, 741, 743, 744, 745], "865": [99, 100, 581, 583], "metho": [99, 100, 601, 603, 651, 653], "999999999999": [99, 100, 465, 606, 608, 609, 610], "7j": [99, 100, 101, 465, 621, 623, 624, 938, 961, 1311, 1313, 1314], "0j": [99, 100, 101, 465, 621, 623, 624, 625, 938, 961, 1311, 1313, 1314, 1315], "898": [99, 100, 465, 641, 643, 644, 645], "0414": [99, 100, 465, 641, 643, 644, 645], "956": [99, 100, 646, 648], "nuner": [99, 100, 691, 693], "65": [99, 100, 104, 105, 118, 119, 465, 531, 534, 691, 693, 892, 895, 1134, 1140, 1407, 1498, 1501, 1602, 1604, 1606, 1607, 1704, 1776, 1779, 1981, 1983, 1986, 1988, 2060, 2071, 2074], "2860": [99, 100, 716, 718, 720], "413": [99, 100, 142, 716, 718], "recirpoc": [99, 100, 721, 723, 725], "300": [99, 100, 102, 103, 150, 465, 731, 733, 734, 735, 917, 1134, 1142, 1407, 1471, 1473, 1474, 1475, 1542, 1545, 1704, 1746, 1749], "527": [99, 100, 465, 731, 733, 734, 735], "301": [99, 100, 465, 731, 733, 734, 735], "757": [99, 100, 465, 741, 743, 744, 745], "279": [99, 100, 465, 741, 743, 744, 745, 892, 895, 1134, 1140, 1407, 1426, 1429], "835": [99, 100, 746, 748, 750], "347": [99, 100, 142, 746, 748, 750], "721": [99, 100, 746, 748, 750], "93": [99, 100, 102, 103, 118, 119, 430, 442, 751, 753, 755, 1407, 1441, 1444, 1446, 1449, 1450, 1981, 1983, 1986, 1988], "static_ab": [99, 100, 466], "static_aco": [99, 100, 471], "static_acosh": [99, 100, 476], "static_add": [99, 100, 136, 140, 141, 481], "static_asin": [99, 100, 486], "412": [99, 100, 108, 109, 465, 486, 489, 490, 1684, 1688], "201": [99, 100, 101, 465, 486, 489, 490, 892, 894, 896], "static_asinh": [99, 100, 491], "static_atan": [99, 100, 496], "static_atan2": [99, 100, 501], "static_atanh": [99, 100, 506], "static_bitwise_and": [99, 100, 511], "static_bitwise_invert": [99, 100, 516], "static_bitwise_left_shift": [99, 100, 521], "static_bitwise_or": [99, 100, 526], "static_bitwise_right_shift": [99, 100, 531], "static_bitwise_xor": [99, 100, 536], "static_ceil": [99, 100, 541], "static_co": [99, 100, 546], "static_cosh": [99, 100, 551], "static_deg2rad": [99, 100, 556], "static_divid": [99, 100, 561, 781, 782], "static_equ": [99, 100, 566], "static_erf": [99, 100, 571], "static_exp": [99, 100, 576], "static_expm1": [99, 100, 581], "areal": [99, 100, 581, 585], "71828175": [99, 100, 581, 585], "38905621": [99, 100, 581, 585], "59815216": [99, 100, 581, 585], "static_floor": [99, 100, 586], "static_floor_divid": [99, 100, 591], "static_great": [99, 100, 596], "static_greater_equ": [99, 100, 601], "static_isfinit": [99, 100, 606], "static_isinf": [99, 100, 611], "static_isnan": [99, 100, 616], "static_isr": [99, 100, 621], "23j": [99, 100, 101, 621, 625, 1311, 1315], "9j": [99, 100, 101, 621, 625, 1311, 1315], "static_less": [99, 100, 626], "static_less_equ": [99, 100, 631], "static_log": [99, 100, 636], "static_log10": [99, 100, 641], "static_log1p": [99, 100, 646], "static_log2": [99, 100, 651], "static_logaddexp": [99, 100, 656], "static_logical_and": [99, 100, 661], "static_logical_not": [99, 100, 666], "static_logical_or": [99, 100, 671], "static_logical_xor": [99, 100, 676], "static_maximum": [99, 100, 681], "static_minimum": [99, 100, 686], "static_multipli": [99, 100, 691], "static_neg": [99, 100, 696], "static_not_equ": [99, 100, 701], "static_posit": [99, 100, 706], "static_pow": [99, 100, 711], "static_rad2deg": [99, 100, 716], "5160": [99, 100, 716, 720], "10300": [99, 100, 465, 716, 719, 720], "15500": [99, 100, 716, 720], "20600": [99, 100, 716, 720], "static_reciproc": [99, 100, 721], "static_remaind": [99, 100, 726], "static_round": [99, 100, 731], "thevfunct": [99, 100, 731, 735], "static_sign": [99, 100, 736], "static_sin": [99, 100, 741], "static_sinh": [99, 100, 746], "static_sqrt": [99, 100, 751], "static_squar": [99, 100, 756], "static_subtract": [99, 100, 761], "static_tan": [99, 100, 136, 140, 766], "static_tanh": [99, 100, 771], "995": [99, 100, 465, 771, 772, 774, 775], "9999": [99, 100, 771, 772], "static_trapz": [99, 100], "static_trunc": [99, 100, 776], "static_trunc_divid": [99, 100, 781], "contan": [101, 1176, 1178, 1180], "19722462": [101, 1176, 1178, 1180], "84729779": [101, 1176, 1178, 1180], "static_logit": [101, 1176], "static_prelu": [101, 1295], "static_thresholded_relu": [101, 1355], "hamming_window": [101, 880, 1052], "coeffici": [101, 880, 882, 1049, 1050, 1051, 1052, 1704, 1796, 1799], "ham": [101, 880, 882, 1049, 1050, 1051, 1052], "8000": [101, 880, 882, 1049, 1050, 1051, 1052], "2000": [101, 880, 882, 1049, 1050, 1051, 1052], "4180": [101, 1049, 1050, 1052], "8180": [101, 1049, 1050, 1052], "hann_window": [101, 880, 1056], "hann": [101, 880, 883, 1053, 1054, 1055, 1056], "7500": [101, 1053, 1054, 1056], "3455": [101, 1053, 1054, 1056], "9045": [101, 1053, 1054, 1056], "kaiser_bessel_derived_window": [101, 880, 1119], "spectral": [101, 880, 884, 885, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123], "analysi": [101, 880, 884, 885, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 2130, 2131], "kaiser": [101, 880, 884, 885, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123], "70710677": [101, 880, 884, 1116, 1117, 1118, 1119, 1129, 1131, 1133, 1183, 1185], "18493208": [101, 880, 884, 1116, 1117, 1118, 1119], "9827513": [101, 880, 884, 1116, 1117, 1118, 1119], "kaiser_window": [101, 880, 1123], "static_kaiser_window": [101, 1120, 1121], "2049": [101, 1120, 1121, 1123], "8712": [101, 1120, 1121, 1123], "0367": [101, 880, 885, 1120, 1121, 1122, 1123], "7753": [101, 1120, 1121, 1123], "static_eye_lik": [101, 982], "static_hamming_window": [101, 1049], "static_hann_window": [101, 1053], "window_length": [101, 880, 882, 884, 885, 888, 1049, 1051, 1053, 1056, 1116, 1118, 1120, 1122, 1123, 1382, 1385], "static_hann": [101, 1053, 1056], "static_kaiser_bessel_derived_window": [101, 1116], "static_tril_indic": [101, 1368], "static_triu_indic": [101, 1372], "static_vorbis_window": [101, 1382], "vorbis_window": [101, 880, 1383], "vorbi": [101, 880, 888, 1382, 1383, 1384, 1385], "38268343": [101, 1382, 1383, 1384], "92387953": [101, 1382, 1383, 1384], "14943586": [101, 880, 888, 1382, 1383, 1384, 1385], "51644717": [101, 1382, 1383, 1384], "85631905": [101, 1382, 1383, 1384], "98877142": [101, 1382, 1383, 1384], "tril_indic": [101, 880], "triu_indic": [101, 880], "0003": [101, 798, 800, 802, 1704, 1746, 1749, 2227, 2231, 2235, 2236, 2256, 2257, 2259], "0006": [101, 798, 800, 802, 1401, 1402, 1404], "75j": [101, 803, 805, 807, 1087, 1089, 1091], "01317055": [101, 803, 805, 807], "05634501": [101, 803, 805, 807], "115": [101, 465, 556, 559, 716, 719, 803, 805, 807, 892, 895, 1134, 1140], "3461759": [101, 803, 805, 807], "524111": [101, 803, 805, 807], "coord": [101, 1042, 1044], "6055": [101, 1072, 1074, 1076], "1080": [101, 1154, 1156, 1158], "1550": [101, 1154, 1156, 1158], "130": [101, 1154, 1156, 1158], "08746284": [101, 1171, 1173, 1175], "32192809": [101, 1171, 1173, 1175], "000": [101, 1248, 1250, 2227, 2236], "took": [101, 1311, 1313], "335": [101, 1311, 1313], "345j": [101, 1311, 1313], "0707": [101, 938, 963, 1328, 1330, 1331], "0579": [101, 938, 963, 1328, 1330, 1331], "static_allclos": [101, 798], "static_angl": [101, 803], "static_binar": [101, 849], "static_copysign": [101, 865], "static_count_nonzero": [101, 875], "static_diff": [101, 907], "static_exp2": [101, 972], "static_fix": [101, 992], "static_float_pow": [101, 1012], "static_fmax": [101, 1017], "static_fmin": [101, 1022], "static_fmod": [101, 1027], "static_gcd": [101, 1035], "static_gradi": [101, 1042], "static_hypot": [101, 1072], "static_imag": [101, 1087], "static_isclos": [101, 1106], "static_lcm": [101, 1154], "static_logaddexp2": [101, 1171], "static_nan_to_num": [101, 1248], "static_nansum": [101, 1263], "static_nextaft": [101, 1273], "static_r": [101, 1311], "static_signbit": [101, 1323], "static_sinc": [101, 1328], "636": [101, 1328, 1332], "090": [101, 1328, 1332], "070": [101, 1328, 1332], "057": [101, 1328, 1332], "static_xlogi": [101, 1396], "static_zeta": [101, 1401], "0244": [101, 1401, 1402, 1404], "static_isin": [101, 1111], "673": [101, 892, 894, 896], "0507": [101, 892, 894, 896], "static_avg_pool1d": [101, 823], "static_avg_pool2d": [101, 828], "static_avg_pool3d": [101, 833], "static_dct": [101, 892], "132": [101, 892, 896], "182": [101, 892, 896], "242": [101, 892, 896], "253": [101, 465, 746, 749, 892, 896], "515": [101, 892, 896, 1970, 1981, 1984], "467": [101, 892, 896], "static_dft": [101, 898], "static_embed": [101, 967], "static_fft": [101, 987], "static_ifft": [101, 1082], "static_interpol": [101, 1098], "static_max_pool1d": [101, 1217], "static_max_pool2d": [101, 1222], "max_pool2dd": [101, 1222, 1226], "static_max_pool3d": [101, 1227], "eigenvealu": [101, 928, 930, 932], "eigenvector": [101, 928, 930, 931, 932, 1164, 1167, 1704, 1730, 1731, 1734], "xx": [101, 928, 930, 932, 933, 935, 937], "37228107": [101, 928, 930, 932], "3722816": [101, 928, 930, 932], "8245648": [101, 928, 930, 932], "41597357": [101, 928, 930, 932], "56576747": [101, 928, 930, 932], "9093767": [101, 928, 930, 932], "450": [101, 1124, 1126, 1128], "static_adjoint": [101, 793], "static_diagflat": [101, 902], "static_eig": [101, 928], "static_eigv": [101, 933], "static_kron": [101, 1124], "kroneck": [101, 1124, 1127, 1128, 1164, 1169], "static_matrix_exp": [101, 1212], "binary_cross_entropy_with_logit": [101, 137, 857, 1181], "pos_weight": [101, 854, 855, 856, 857, 1181, 1182], "027": [101, 854, 855, 856, 857, 1181, 1182], "263": [101, 854, 855, 856, 857, 1181, 1182, 1407, 1431, 1434], "953": [101, 854, 855, 856, 857, 1181, 1182], "static_binary_cross_entropy_with_logit": [101, 854], "atleast": [101, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 822, 1188, 1189, 1190], "1d": [101, 808, 810, 811, 812, 892, 895, 917, 1134, 1140, 1142, 1188, 1189, 1208, 1350, 1354, 2159, 2160, 2161], "ary1": [101, 808, 810, 811, 813, 815, 816, 818, 820, 821, 1188, 1189, 1190, 1191], "ary2": [101, 808, 810, 811, 813, 815, 816, 818, 820, 821, 1188, 1189, 1190, 1191], "2d": [101, 148, 813, 815, 816, 817, 880, 881, 917, 982, 985, 1134, 1142, 1188, 1190, 2159, 2162, 2163, 2166], "3d": [101, 170, 818, 820, 822, 917, 1134, 1142, 2159, 2164, 2165], "broadcast_shap": [101, 862, 1188, 2227], "30192195": [101, 1077, 1079, 1081], "static_atleast_1d": [101, 808], "static_atleast_2d": [101, 813], "static_atleast_3d": [101, 818], "static_broadcast_shap": [101, 859], "static_dsplit": [101, 918], "static_dstack": [101, 923], "static_expand": [101, 977], "static_flatten": [101, 997], "static_fliplr": [101, 1002], "static_flipud": [101, 1007], "static_heavisid": [101, 1057], "static_hsplit": [101, 1062], "static_hstack": [101, 1067], "static_i0": [101, 1077], "static_moveaxi": [101, 1232, 1236, 1238, 1253, 1257], "static_pad": [101, 1282], "static_rot90": [101, 1316], "static_take_along_axi": [101, 1350], "static_top_k": [101, 1360], "static_vsplit": [101, 1386], "static_vstack": [101, 1391], "static_instance_norm": [101, 1092, 1094], "68283635": [101, 1092, 1094, 1096], "25858182": [101, 1092, 1094, 1096], "14645457": [101, 1092, 1094, 1096], "20709086": [101, 1092, 1094, 1096], "59998751": [101, 1092, 1094, 1096], "10000312": [101, 1092, 1094, 1096], "20000625": [101, 1092, 1094, 1096], "19997501": [101, 1092, 1094, 1096], "25000787": [101, 1092, 1094, 1096], "49996877": [101, 1092, 1094, 1096], "35001087": [101, 1092, 1094, 1096], "09995651": [101, 1092, 1094, 1096], "30002821": [101, 1092, 1094, 1096], "79988766": [101, 1092, 1094, 1096], "17999999": [101, 1092, 1094, 1096], "46000001": [101, 1092, 1094, 1096], "45999998": [101, 1092, 1094, 1096], "static_l2_norm": [101, 1129, 1131], "16903085": [101, 1129, 1131, 1133, 1183, 1185], "50709254": [101, 1129, 1131, 1133, 1183, 1185], "84515423": [101, 1129, 1131, 1133, 1183, 1185], "44183609": [101, 1129, 1131, 1133, 1183, 1185], "56807494": [101, 1129, 1131, 1133, 1183, 1185], "69431382": [101, 1129, 1131, 1133, 1183, 1185], "89442718": [101, 1129, 1131, 1133, 1183, 1185], "44721359": [101, 1129, 1131, 1133, 1183, 1185], "static_lp_norm": [101, 1183, 1185], "12500000": [101, 1183, 1187], "37500000": [101, 1183, 1187], "62500000": [101, 1183, 1187], "27500000": [101, 1183, 1187], "35000000": [101, 1183, 1187], "42500000": [101, 1183, 1187], "0000000": [101, 1183, 1187], "5000000": [101, 1183, 1187], "2500000": [101, 1183, 1187], "43643127": [101, 912, 914, 916], "32325703": [101, 912, 914, 916], "24031169": [101, 912, 914, 916], "34251311": [101, 912, 914, 916], "31692529": [101, 912, 914, 916], "3405616": [101, 912, 914, 916], "5319725": [101, 912, 914, 916], "22458365": [101, 912, 914, 916], "24344385": [101, 912, 914, 916], "26588406": [101, 912, 914, 916], "61075421": [101, 912, 914, 916], "12336174": [101, 912, 914, 916], "51142915": [101, 912, 914, 916], "25041268": [101, 912, 914, 916], "23815817": [101, 912, 914, 916], "64042903": [101, 912, 914, 916], "25763214": [101, 912, 914, 916], "10193883": [101, 912, 914, 916], "31624692": [101, 912, 914, 916], "46567987": [101, 912, 914, 916], "21807321": [101, 912, 914, 916], "37677699": [101, 912, 914, 916], "39914594": [101, 912, 914, 916], "22407707": [101, 912, 914, 916], "static_bernoulli": [101, 838], "static_beta": [101, 843], "static_dirichlet": [101, 912], "static_poisson": [101, 1289], "static_lexsort": [101, 1159, 1243, 1247], "static_msort": [101, 1243], "static_corrcoef": [101, 870], "static_median": [101, 1232], "static_nanmean": [101, 1253], "static_nanmedian": [101, 1258], "static_quantil": [101, 1300], "static_unravel_index": [101, 1376], "a0": [102, 103, 1415, 1417, 1419], "833": [102, 103, 1431, 1433], "classivi": [102, 103, 114, 115, 1459, 1461, 1463, 1860, 1906, 1909, 1926, 1929, 2023, 2029, 2033], "89858720e": [102, 103, 1459, 1461, 1463], "79717439e": [102, 103, 1459, 1461, 1463], "200": [102, 103, 157, 465, 531, 534, 917, 1134, 1142, 1407, 1471, 1473, 1474, 1475, 1542, 1544, 1545], "400": [102, 103, 137, 917, 1134, 1142, 1407, 1471, 1473, 1474, 1475, 1542, 1545, 1704, 1746, 1749], "500": [102, 103, 917, 1134, 1142, 1407, 1471, 1473, 1474, 1475], "600": [102, 103, 137, 917, 1134, 1142, 1471, 1473], "700": [102, 103, 1471, 1473], "static_all_equ": [102, 103, 1408], "static_array_equ": [102, 103, 1415], "x0": [102, 103, 140, 1407, 1415, 1418, 1419], "static_assert_supports_inplac": [102, 103, 1420], "static_clip_matrix_norm": [102, 103, 1426], "849": [102, 103, 1407, 1426, 1429, 1430, 1431, 1434, 1435], "static_clip_vector_norm": [102, 103, 1431], "static_einops_rearrang": [102, 103, 1441], "static_einops_reduc": [102, 103, 1446], "static_einops_repeat": [102, 103, 1451], "static_fourier_encod": [102, 103, 1459], "static_gath": [102, 103, 1466], "static_gather_nd": [102, 103, 1471], "static_get_num_dim": [102, 103, 1483], "static_has_nan": [102, 103, 1492], "leafwis": [102, 103, 1492, 1496], "static_inplace_decr": [102, 103, 1498], "static_inplace_incr": [102, 103, 1503], "static_inplace_upd": [102, 103, 1508], "static_is_arrai": [102, 103, 1514], "static_is_ivy_arrai": [102, 103, 1519], "static_is_native_arrai": [102, 103, 1527], "static_scatter_flat": [102, 103, 1537], "ref": [102, 103, 110, 111, 141, 465, 626, 629, 691, 694, 701, 704, 726, 729, 761, 765, 1537, 1541, 1542, 1546, 1766, 1770, 1860, 1916, 1919], "static_scatter_nd": [102, 103, 1542], "static_stable_divid": [102, 103, 1558], "22222222": [102, 103, 1558, 1562], "11111111": [102, 103, 1558, 1562], "857": [102, 103, 1407, 1558, 1561, 1562], "444": [102, 103, 1558, 1562], "static_stable_pow": [102, 103, 1563], "static_supports_inplace_upd": [102, 103, 1568], "static_to_list": [102, 103, 1574], "static_to_numpi": [102, 103, 1579], "static_to_scalar": [102, 103, 1584], "static_value_is_nan": [102, 103, 1596], "452": [102, 103, 1596, 1597], "425": [102, 103, 1596, 1599], "87": [104, 105, 465, 531, 534, 646, 649, 1602, 1604, 1606, 1607], "976": [104, 105, 465, 771, 775, 1602, 1604, 1606, 1607], "49e": [104, 105, 1602, 1604, 1606, 1607], "74e": [104, 105, 1602, 1604, 1606, 1607], "95e": [104, 105, 1602, 1604, 1606, 1607], "024": [104, 105, 854, 856, 1181, 1182, 1602, 1604, 1606, 1607], "096": [104, 105, 465, 556, 559, 1602, 1604, 1606, 1607], "216": [104, 105, 110, 111, 1602, 1604, 1606, 1607, 1824, 1825, 1827], "384": [104, 105, 1602, 1604, 1606, 1607], "626": [104, 105, 1602, 1604, 1606, 1607], "en": [104, 105, 137, 1602, 1604, 1607, 1608, 1611, 1704, 1839, 1843], "wikipedia": [104, 105, 1602, 1604, 1607, 1608, 1611, 1704, 1839, 1843], "wiki": [104, 105, 1602, 1604, 1607, 1608, 1611, 1704, 1839, 1843], "stochastic_gradient_desc": [104, 105, 1602, 1604, 1607, 1608, 1611], "01099": [104, 105, 1608, 1610], "01003": [104, 105, 1602, 1608, 1610, 1611], "01015": [104, 105, 1602, 1608, 1610, 1611], "99936122": [104, 105, 1602, 1608, 1610, 1611], "99936116": [104, 105, 1602, 1608, 1610, 1611], "99936128": [104, 105, 1602, 1608, 1610, 1611], "99936104": [104, 105, 1602, 1608, 1610, 1611], "w_new": [104, 105, 1602, 1614, 1616, 1617], "88": [104, 105, 118, 119, 189, 197, 200, 465, 536, 539, 1602, 1614, 1616, 1617, 1704, 1776, 1779, 1806, 1810, 1970, 1986, 1988, 1989, 2060, 2071, 2074], "708": [104, 105, 1602, 1619, 1621, 1622], "445": [104, 105, 1602, 1619, 1621, 1622], "6e": [104, 105, 1602, 1619, 1621, 1622], "00036": [104, 105, 1602, 1619, 1621, 1622], "00016": [104, 105, 1602, 1619, 1621, 1622], "00049": [104, 105, 1602, 1619, 1621, 1622], "layerwis": [104, 105, 1602, 1623, 1625, 1626], "static_stop_gradi": [104, 105, 1632], "112": [108, 109, 1647, 1649, 1651, 1704, 1776, 1779, 2060, 2071, 2074], "fdfh": [108, 109, 1662, 1664, 1666], "inp": [108, 109, 1640, 1674, 1676, 1677, 1678], "278": [108, 109, 1640, 1679, 1682, 1684, 1686, 1687, 1688], "105": [108, 109, 1640, 1679, 1682, 1684, 1686, 1687, 1688, 1704, 1776, 1779, 1844, 1845, 1848], "352": [108, 109, 1640, 1684, 1686, 1687, 1688], "195": [108, 109, 1684, 1686, 1688], "static_conv1d": [108, 109, 1642], "static_conv1d_transpos": [108, 109, 1647], "static_conv2d": [108, 109, 1652], "static_conv2d_transpos": [108, 109, 1657], "static_conv3d": [108, 109, 1662], "static_conv3d_transpos": [108, 109, 1667], "static_depthwise_conv2d": [108, 109, 1674], "static_dropout": [108, 109, 1679], "static_dropout1d": [108, 109], "static_linear": [108, 109, 1684], "static_lstm_upd": [108, 109, 1689], "static_multi_head_attent": [108, 109, 1694], "static_scaled_dot_product_attent": [108, 109, 1699], "577": [110, 111, 1704, 1705, 1707, 1708, 1709], "707": [110, 111, 1704, 1705, 1707, 1708, 1709], "99999988": [110, 111, 1781, 1783], "0986123": [110, 111, 1704, 1791, 1793, 1794, 1795], "static_choleski": [110, 111, 1705], "static_rol": [110, 111, 114, 115, 136, 140, 1705, 1709, 1901], "static_cross": [110, 111, 1710], "static_det": [110, 111, 1715], "static_diag": [110, 111, 1720], "static_diagon": [110, 111, 1725], "static_eigh": [110, 111, 1731], "static_eigvalsh": [110, 111, 1736], "51572949": [110, 111, 1704, 1736, 1739, 1740], "17091519": [110, 111, 1704, 1736, 1739, 1740], "3448143": [110, 111, 1704, 1736, 1739, 1740], "88178420e": [110, 111, 1704, 1736, 1739, 1740], "35898387e": [110, 111, 1704, 1736, 1739, 1740], "46410179e": [110, 111, 1704, 1736, 1739, 1740], "static_inn": [110, 111, 1741], "static_inv": [110, 111, 1704, 1746, 1749], "static_matmul": [110, 111, 1751], "matul": [110, 111, 1751, 1755], "static_matrix_norm": [110, 111, 1756], "deimens": [110, 111, 1756, 1760], "static_matrix_pow": [110, 111, 1761], "static_matrix_rank": [110, 111, 1766], "static_matrix_transpos": [110, 111, 1771], "static_out": [110, 111, 1776], "static_pinv": [110, 111, 1781], "static_qr": [110, 111, 1786], "static_slogdet": [110, 111, 1791], "static_solv": [110, 111, 1796], "static_svd": [110, 111, 1801], "au": [110, 111, 1801, 1802, 1804], "aS": [110, 111, 1801, 1802, 1804], "avh": [110, 111, 1801, 1802, 1804], "bvh": [110, 111, 1801, 1802, 1804], "static_svdv": [110, 111, 1806], "static_tensordot": [110, 111, 1811], "static_trac": [110, 111, 1819], "static_vand": [110, 111, 1824], "343": [110, 111, 465, 731, 734, 1824, 1825, 1827], "512": [110, 111, 1640, 1647, 1650, 1824, 1825, 1827], "729": [110, 111, 158, 1824, 1825, 1827], "static_vecdot": [110, 111, 1829], "static_vector_norm": [110, 111, 1834], "mathemat": [110, 111, 138, 148, 152, 233, 465, 481, 484, 501, 504, 581, 584, 646, 649, 1704, 1756, 1759, 1834, 1835, 1837, 1838, 2130, 2136], "l1": [110, 111, 136, 157, 1704, 1834, 1835, 1837, 1838], "manhattan": [110, 111, 1704, 1834, 1835, 1837, 1838], "euclidean": [110, 111, 1704, 1834, 1835, 1837, 1838], "precis": [110, 111, 137, 138, 148, 152, 325, 369, 372, 465, 751, 754, 938, 947, 1012, 1015, 1704, 1791, 1794, 1834, 1835, 1837, 1838, 2134], "static_vector_to_skew_symmetric_matrix": [110, 111, 1839], "511": [112, 113, 1844, 1845, 1847, 1848, 1849, 1855, 1857, 1859], "5108256": [112, 113, 1850, 1852], "609438": [112, 113, 1704, 1791, 1794, 1850, 1852], "static_binary_cross_entropi": [112, 113, 1845], "static_cross_entropi": [112, 113, 1850], "20397282": [112, 113, 1850, 1854], "83258148": [112, 113, 1850, 1854], "60943794": [112, 113, 1850, 1854], "static_sparse_cross_entropi": [112, 113, 1855], "repreat": [114, 115, 1891, 1893], "static_clip": [114, 115, 1861], "static_concat": [114, 115, 1866], "static_constant_pad": [114, 115, 1871], "static_expand_dim": [114, 115, 1876], "container_axi": [114, 115, 1860, 1876, 1879, 1880], "static_flip": [114, 115, 1881], "static_permute_dim": [114, 115, 1886], "static_repeat": [114, 115, 1891], "static_reshap": [114, 115, 1896], "positivclip": [114, 115, 1901, 1905], "static_split": [114, 115, 1906], "static_squeez": [114, 115, 1911], "static_stack": [114, 115, 1916], "leavv": [114, 115, 1916, 1920], "static_swapax": [114, 115, 1921], "static_til": [114, 115, 1926], "static_unstack": [114, 115, 1931], "static_zero_pad": [114, 115, 1936], "342": [116, 117, 1965, 1966, 1968, 1969], "0427": [116, 117, 1965, 1966, 1968, 1969], "299": [116, 117, 1965, 1966, 1968, 1969], "241": [116, 117, 1966, 1968], "431": [118, 119, 1981, 1983], "83": [118, 119, 465, 751, 754, 892, 895, 1134, 1140, 1640, 1684, 1687, 1981, 1983], "274": [118, 119, 1981, 1983], "91": [118, 119, 465, 536, 539, 1640, 1684, 1687, 1704, 1776, 1779, 1970, 1981, 1983, 1984, 2060, 2071, 2074], "static_multinomi": [118, 119, 1971], "static_randint": [118, 119, 1976], "static_random_norm": [118, 119, 1981], "651": [118, 119, 1981, 1985], "static_random_uniform": [118, 119, 1986], "481": [118, 119, 1986, 1990], "0999": [118, 119, 1986, 1990], "static_shuffl": [118, 119, 1992], "static_argmax": [120, 121, 1998], "static_argmin": [120, 121, 2003], "static_argwher": [120, 121, 2008], "static_nonzero": [120, 121, 2013], "static_wher": [120, 121, 2018], "static_unique_al": [122, 123, 2024, 2027], "static_unique_count": [122, 123, 2029], "static_unique_invers": [122, 123, 2034], "static_unique_valu": [122, 123, 2039], "static_argsort": [124, 125, 2045], "static_searchsort": [124, 125, 2050], "static_sort": [124, 125, 2055], "cotain": [126, 127, 2083, 2085], "11000001": [126, 127, 2087, 2089, 2091], "23100001": [126, 127, 2087, 2089, 2091], "30800003": [126, 127, 2060, 2087, 2089, 2090, 2091], "static_cumprod": [126, 127, 2061], "static_cumsum": [126, 127, 2066], "static_prod": [126, 127, 2087], "static_sum": [126, 127, 2096], "static_var": [126, 127, 2101], "12666667": [126, 127, 2060, 2101, 2102, 2105], "11555555": [126, 127, 2060, 2101, 2102, 2105], "respectv": [126, 127, 2092, 2094], "81649649": [126, 127, 2092, 2094], "94280904": [126, 127, 2092, 2094], "509902": [126, 127, 2060, 2092, 2094, 2095], "2472192": [126, 127, 2092, 2094], "44948983": [126, 127, 2092, 2094], "41421354": [126, 127, 2092, 2094], "contian": [126, 127, 2101, 2104], "6666667": [126, 127, 2101, 2104], "static_al": [128, 129, 2107], "static_ani": [128, 129, 2112], "add_ivy_container_instance_method": 130, "containerexampl": [130, 131], "who": [132, 142, 153, 171, 2130, 2132], "hood": [132, 136, 140, 145, 148, 150, 152, 153, 154, 157, 159, 2137], "weed": [132, 153], "tour": 132, "primari": [132, 135, 138, 147, 148, 150, 152, 171, 880, 886, 887, 1159, 1162, 1333, 1334, 1368, 1371, 1372, 1375, 2117], "superset": [132, 148, 171], "goe": [132, 152], "dynam": [132, 138, 139, 147, 148, 154, 2130, 2134, 2286, 2296], "runtim": [132, 150, 152, 430, 431, 2130], "borrow": 132, "conjunct": 133, "establish": [133, 2132], "2020": [133, 2130], "group": [133, 136, 145, 148, 149, 1640, 1641, 1672, 1673, 1945, 1948, 2126, 2129, 2135], "intend": [133, 144, 2060, 2096, 2100, 2128, 2130, 2134, 2135, 2149, 2157, 2218], "popular": [133, 2130], "sens": [133, 140, 148, 156], "unconnect": 133, "decis": [133, 136, 138, 148, 152, 154, 156, 2130], "initialis": [133, 148, 150, 430, 431], "checkout": [133, 150], "everytim": [133, 138], "init": [133, 159, 2149, 2155, 2158], "thoroughli": 133, "ci": [133, 138, 143, 149, 150, 171], "test_linalg": [133, 149], "test_set_funct": 133, "test_signatur": 133, "excess": [133, 135, 140], "explicitli": [133, 134, 135, 136, 138, 141, 142, 145, 146, 147, 149, 150, 154, 171, 1704, 1731, 1734, 1736, 1739, 2130, 2159, 2168, 2170, 2171, 2172, 2195, 2216], "array_modul": 133, "vv": 133, "test_manipulation_funct": 133, "test_concat": [133, 150], "typic": [133, 145, 798, 801, 938, 939, 955, 1106, 1109, 2044, 2050, 2053, 2129, 2137], "nb": 133, "liber": 133, "bodi": [133, 150], "decor": [133, 134, 136, 138, 139, 145, 146, 147, 148, 149, 1407, 1425, 2227, 2230, 2245, 2248, 2249, 2250, 2272, 2277, 2278], "fortun": 133, "falsifi": [133, 150], "______________________": 133, "test_remaind": 133, "_______________________": 133, "test_operators_and_elementwise_funct": 133, "1264": 133, "st": [133, 149, 150, 2227, 2237, 2238], "1277": 133, "binary_param_assert_against_refimpl": 133, "ctx": 133, "mod": 133, "620": 133, "binary_assert_against_refimpl": 133, "324": 133, "scalar_o": 133, "assertionerror": [133, 142, 149, 150, 2245, 2248], "17304064": 133, "binaryparamcontext": 133, "temporarili": [133, 151, 2171, 2172], "reproduce_failur": [133, 150], "axic42baaowcnp": 133, "rumwmabaear0": 133, "parametr": [133, 150, 789, 791, 1295, 1298, 2130], "make_binary_param": 133, "dh": 133, "numeric_dtyp": 133, "left_strat": 133, "left_sym": 133, "right_strat": 133, "right_sym": 133, "right_is_scalar": 133, "xp": [133, 1097, 1134, 1146], "binary_param_assert_dtyp": 133, "binary_param_assert_shap": 133, "led": [133, 2132], "unexpectedli": 133, "discrep": [133, 149], "varieti": [133, 137, 138, 139, 150, 2126, 2128, 2132, 2133, 2136, 2137], "known": [133, 137, 138, 148, 150, 2149, 2152, 2154], "test_asarray_arrai": 133, "test_floor_divid": 133, "health": 133, "test_iop": 133, "__imod__": 133, "x1_i": [133, 465, 481, 484, 501, 504, 511, 514, 521, 524, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 591, 594, 596, 599, 601, 604, 626, 629, 631, 634, 656, 659, 661, 664, 671, 674, 676, 679, 691, 694, 701, 704, 711, 714, 726, 729, 761, 765], "isequ": 133, "test_matrix_norm": 133, "alter": 133, "tweak": 133, "array_api_methods_to_test": 133, "identifi": [133, 137, 150, 152, 189, 190, 196], "202": [133, 465, 551, 554], "test_trac": 133, "latter": [133, 135, 138, 141, 148, 2142, 2145], "scheme": [133, 158, 2130], "test_special_cas": 133, "__ipow__": 133, "is_integ": 133, "revisit": [133, 144], "tf": [134, 138, 139, 144, 147, 148, 150, 151, 152, 154, 159, 171, 2117, 2118, 2130, 2142, 2143, 2144], "xla_extens": [134, 138, 139, 144, 151, 154, 156, 2286, 2296], "devicearrai": [134, 148, 154, 156, 2286, 2296], "wrapper": [134, 136, 138, 142, 146, 147, 148, 156, 2117, 2126, 2130, 2272, 2273, 2274, 2275, 2276], "_data": [134, 148, 156], "meta": [134, 151, 1942, 1943, 1944, 2130], "organiz": [134, 136, 148], "inherit": [134, 136, 142, 156, 171, 2117], "bear": [134, 136, 138, 148], "necessarili": [134, 136, 928, 931, 933, 936, 1164, 1167, 1168], "although": [134, 136, 148, 152, 1704, 1791, 1794, 2128, 2130, 2142, 2145], "underpin": [134, 136, 154], "programmat": [134, 136, 2131], "backup": [134, 136], "accident": [134, 136, 148], "readabl": [134, 136, 142, 144, 150, 151, 156, 157], "absent": [134, 136], "perk": [134, 136], "auto": [134, 136, 157], "__mul__": [134, 136, 140, 144, 152, 156], "throw": [134, 138, 142, 156, 2130], "imposs": 134, "firstli": [134, 138, 140, 141, 142, 145, 146, 147, 152, 157, 2126, 2136], "anywai": [134, 146, 148], "secondli": [134, 138], "permit": [134, 144, 148, 150, 152], "dictat": [134, 140, 144, 147, 2195, 2214, 2215, 2216], "standalon": [134, 150, 2117, 2126, 2131, 2136, 2137], "__ivy_array_function__": 134, "inspir": [134, 170], "__torch_function__": 134, "myarrai": 134, "ivybackendexcept": [134, 142], "plai": [134, 148, 150, 159, 2130, 2133], "handled_funct": 134, "notimpl": [134, 143], "four": [134, 138, 140, 144, 145, 150, 152, 157], "overridden": [134, 2142, 2144, 2145, 2175, 2179], "suppli": [134, 938, 962, 1188, 1206, 1282, 1285, 1323, 1326], "enough": [134, 137, 150, 156, 157, 158], "successfulli": [134, 143, 2171, 2172], "ivy_funct": 134, "my_ab": 134, "my_arrai": 134, "ivy_arrai": [134, 148, 1945, 1959], "Of": [134, 148, 157, 2135, 2136], "thrown": [134, 139, 142, 171, 1407, 1508, 1511], "subset": [134, 137, 141, 144, 148, 150, 154, 2130, 2245], "implicit_backend": [135, 154], "__dict__": [135, 154], "ivy_original_dict": [135, 154], "unmodifi": [135, 138, 430, 434], "get_backend": [135, 145, 2286], "opt": [135, 138, 147, 150, 151, 152], "unset_backend": [135, 2286], "unset": [135, 154, 2286, 2302], "fallback": 135, "backend_handl": [135, 154, 2118], "requires_grad": 135, "memory_format": 135, "preserve_format": 135, "weren": 135, "break": [135, 138, 143, 144, 151, 171, 2118], "Not": [135, 149, 157, 158, 171, 233, 928, 931, 933, 936, 938, 959, 1164, 1167, 1168, 1263, 1266], "vast": [135, 138, 2130], "minor": [135, 152, 171], "fn_name_v_1p12_and_abov": 135, "similarli": [135, 138, 148, 152, 156, 239, 284, 287, 880, 886, 887, 1368, 1371, 1372, 1375, 2136], "fn_name_v_1p01_to_1p1": 135, "fn_name": [135, 149, 150, 2195, 2215, 2218, 2220, 2272, 2277], "five": [136, 157], "recap": [136, 140, 158], "arbitrarili": [136, 146, 157, 2256, 2257, 2258], "multi_map": 136, "__repr__": 136, "control": [136, 138, 147, 148, 149, 152, 156, 157, 170, 880, 886, 887, 917, 1134, 1142, 1368, 1371, 1372, 1375, 1704, 1720, 1723, 2117, 2130, 2136, 2147, 2148], "__getattr__": 136, "__setattr__": 136, "__contains__": 136, "__getstate__": 136, "__setstate__": 136, "unpickl": 136, "num_dim": [136, 159], "__len__": 136, "restrict": [136, 137, 148, 154, 2127], "enforc": [136, 156], "extern": [136, 144, 148, 150, 151], "flexibl": [136, 144, 151, 2130], "c1": 136, "lefthand": 136, "righthand": 136, "addition": [136, 147, 148, 2136], "counterpart": [136, 146], "behavior": [136, 137, 138, 148, 149, 150, 152, 154, 171, 465, 711, 714, 726, 729, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043, 2127], "presenc": [136, 147, 2184, 2187, 2188, 2189], "absenc": [136, 144, 2130], "implicitli": [136, 150, 154], "themselv": [136, 138, 139, 141, 145, 148, 158, 1945, 1946, 2127, 2136], "log_pr": [136, 145, 147], "intuit": [136, 150, 157, 158, 2126], "chronolog": 136, "concurr": [136, 137, 145, 2130], "had": [136, 137, 147, 154, 2130, 2131], "consum": [136, 137, 144, 149, 150, 2195, 2214, 2215, 2216], "sequenti": [136, 158], "But": [136, 137, 141, 146, 147, 159, 2245, 2252], "flow": [136, 170, 2130, 2131], "compil": [136, 148, 151, 152, 153, 155, 171, 232, 2117, 2118, 2126, 2129, 2130, 2131, 2134, 2137, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180], "implic": 136, "whatsoev": [136, 145, 2117, 2136], "implicit": [136, 141, 148, 150, 154, 2130], "eager": [136, 171, 2130], "children": 136, "shallowest": 136, "deepest": 136, "regularli": 137, "feedback": 137, "rollback": 137, "incorpor": [137, 157, 2130], "fold": 137, "techniqu": 137, "triplet": 137, "notat": [137, 465, 501, 504, 2060, 2071, 2074], "test_torch": [137, 149], "test_tensor": [137, 149], "test_torch_instance_arctan_": 137, "7284": 137, "daili": 137, "neither": [137, 148, 152, 465, 481, 484, 1602, 1631, 1639], "nor": [137, 148, 465, 481, 484, 1602, 1631, 1639, 2134], "job": 137, "shoot": 137, "654": [137, 465, 546, 549], "impact": [137, 150, 158, 2132], "_reduce_loss": 137, "test_nn": 137, "test_loss": 137, "test_binary_cross_entropy_with_logit": 137, "test_cross_entropi": 137, "test_binary_cross_entropi": 137, "test_sparse_cross_entropi": 137, "test_loss_funct": 137, "test_torch_binary_cross_entropi": 137, "test_torch_cross_entropi": 137, "torch_binary_cross_entropi": 137, "torch_cross_entropi": 137, "underneath": [137, 2128], "achiev": [137, 138, 143, 146, 150, 157, 159, 2117], "magic": 137, "statement": [137, 143, 147, 150, 152, 171], "readthedoc": 137, "prepar": 137, "pedagog": 137, "f1": 137, "fm": 137, "encapsul": [137, 325, 380, 383], "yeah": 137, "procedur": [137, 140], "cyclic": 137, "intellig": [137, 150, 152, 2132], "tests_fil": 137, "file_nam": [137, 150, 151], "del": 137, "intersect": [137, 150, 170, 2241, 2244], "tests_lin": 137, "elif": [137, 142, 147, 148, 149], "correspondingli": 137, "tests_to_run": 137, "determine_tests_lin": 137, "mongodb": 137, "databas": [137, 150], "mechan": [137, 169, 171, 2118], "secret": 137, "db": 137, "ssh": 137, "deploi": [137, 2117, 2128, 2129, 2130, 2132, 2136], "ssh_deploy_kei": 137, "public": [137, 156, 1407, 1436, 2133], "suffic": [137, 146, 150], "massiv": 137, "constraint": [137, 138], "ex": [137, 2227, 2229, 2230, 2231, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "mb": 137, "yml": 137, "felicit": 137, "clone_map": 137, "home": [137, 848, 889, 1134, 1138, 1139, 1151, 1287], "deploy_kei": 137, "user_email": 137, "rashul": 137, "chutani": 137, "user_nam": 137, "target_branch": 137, "github_serv": 137, "deploy_key_fil": 137, "chmod": 137, "ssh_known_hosts_fil": 137, "known_host": 137, "keyscan": 137, "export": [137, 2129, 2136], "git_ssh_command": 137, "userknownhostsfil": 137, "methodologi": 137, "master1": 137, "repeatedli": [137, 150, 1945, 1955], "restructur": 137, "index_map": 137, "test_map": 137, "routin": [137, 148, 152, 171, 2130], "aggreg": [137, 2023, 2024, 2028], "incorrect": 137, "snowbal": 137, "irrelev": [137, 138, 140], "recalibr": 137, "workflow_dispatch": 137, "schedul": [137, 171, 2130, 2137], "cron": 137, "saturdai": 137, "night": 137, "pm": 137, "fun": [137, 1407, 1601, 1945, 1957], "gut": 137, "lesser": [137, 142], "lol": 137, "cater": 137, "master2": 137, "master32": 137, "runner2": 137, "corrupt": 137, "forc": 137, "discard": 137, "stai": 137, "decoupl": [137, 158], "150": 137, "cycl": [137, 150], "rashulchutani": 137, "yellow": 137, "queu": 137, "redirect": 137, "book": 137, "ran": 137, "badg": 137, "clickabl": 137, "uint8": [138, 150, 325, 348, 351, 363, 374, 375, 406, 409, 413, 416, 422, 428, 2227, 2230, 2235], "uint16": [138, 148, 150, 154, 325, 354, 363, 377, 378, 380, 383, 406, 409, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2227, 2235, 2236], "uint32": [138, 150, 154, 325, 363, 377, 378, 380, 383, 385, 428, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2227, 2235, 2236], "uint64": [138, 150, 154, 325, 363, 377, 378, 385, 386, 413, 416, 419, 422, 2060, 2061, 2064, 2066, 2069, 2087, 2090, 2096, 2100, 2227, 2230, 2235], "bfloat16": [138, 148, 150, 151, 325, 374, 375, 2227, 2236], "all_dtyp": 138, "all_numeric_dtyp": 138, "all_int_dtyp": 138, "all_float_dtyp": 138, "replic": [138, 140, 148, 152], "thirdli": 138, "native_float32": 138, "importantli": [138, 156, 159, 170], "conveni": [138, 139, 144, 149, 155, 157, 158, 2117, 2136], "arguabl": [138, 139, 148], "jaxarrai": [138, 139, 144, 147, 151, 154], "jnp": [138, 139, 142, 144, 147, 151, 154, 159, 2118], "_handle_0_dim_output": [138, 147], "experiment": [138, 148, 151, 154, 787, 788, 789, 790, 791, 792, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 849, 852, 854, 856, 858, 859, 861, 865, 868, 870, 873, 875, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 898, 900, 902, 905, 907, 910, 912, 915, 917, 918, 921, 923, 926, 928, 931, 933, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 975, 977, 980, 982, 985, 987, 990, 992, 995, 997, 1000, 1002, 1005, 1007, 1010, 1012, 1015, 1017, 1020, 1022, 1025, 1027, 1030, 1032, 1034, 1035, 1038, 1040, 1041, 1042, 1045, 1047, 1048, 1049, 1051, 1053, 1055, 1057, 1060, 1062, 1065, 1067, 1070, 1072, 1075, 1077, 1080, 1082, 1085, 1087, 1090, 1092, 1095, 1097, 1098, 1101, 1103, 1104, 1105, 1106, 1109, 1111, 1114, 1116, 1118, 1120, 1122, 1124, 1127, 1129, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1176, 1179, 1181, 1182, 1183, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1238, 1241, 1243, 1246, 1248, 1251, 1253, 1256, 1258, 1261, 1263, 1266, 1268, 1269, 1270, 1271, 1273, 1276, 1278, 1279, 1280, 1281, 1282, 1285, 1287, 1288, 1289, 1292, 1294, 1295, 1298, 1300, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1314, 1316, 1319, 1323, 1326, 1328, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1354, 1355, 1359, 1360, 1364, 1365, 1367, 1368, 1371, 1372, 1375, 1376, 1380, 1382, 1385, 1386, 1390, 1391, 1395, 1396, 1400, 1401, 1405, 2130], "subtli": [138, 147], "promote_types_frontend_nam": 138, "promote_types_of_frontend_name_input": 138, "frontend_nam": 138, "demonstr": [138, 140, 142, 156], "accuraci": 138, "upcast": 138, "instabl": [138, 2245, 2252], "underflow": [138, 1704, 1791, 1794], "nearli": [138, 144, 146, 2130], "downcast": 138, "footprint": 138, "concret": 138, "compound": 138, "settabl": [138, 139], "deleg": [138, 2137], "shape_to_tupl": 138, "with_supported_dtyp": [138, 172], "with_unsupported_dtyp": [138, 172], "unment": 138, "backend_vers": 138, "_cast_for_unary_op": 138, "target_typ": 138, "discov": 138, "unsupported_dtyp": 138, "former": [138, 141, 148, 2142, 2145], "uint": [138, 149, 325, 363, 406, 409, 422, 428], "lack": [138, 142, 147, 2130, 2137], "patch": [138, 2130], "subtl": [138, 151, 2136], "offici": [138, 154], "inconsist": [138, 142], "unexpect": [138, 325, 412], "84530": 138, "unwarr": 138, "risk": [138, 2136], "needlessli": 138, "bloat": 138, "undergo": [138, 171], "supported_dtyp": [138, 148], "unsupported_devic": 138, "supported_devic": 138, "slight": [138, 150, 158], "downsid": 138, "coverag": [138, 150, 2147, 2148], "inflat": 138, "idx": [139, 156, 1407, 1413], "tpu": [139, 430, 431, 434, 453, 462, 2130, 2133], "aliv": [139, 430, 445, 449, 451, 1407, 1476, 1535, 1536], "outsid": [139, 143, 145, 156, 1860, 1861, 1864, 1916, 1919, 2135], "dual": 139, "categor": [139, 145, 148], "far": [139, 140, 155, 1945, 1946, 1957, 2135, 2136], "eight": [140, 153], "func_nam": [140, 141, 145, 148], "static_func_nam": 140, "op_nam": 140, "__r": 140, "combinatori": 140, "variat": [140, 148, 150], "unus": [140, 143, 147], "okai": [140, 152, 154], "showcas": [140, 170], "meant": [140, 2142, 2144], "spec": [140, 141], "my_func": [140, 151], "some_flag": 140, "another_flag": 140, "jointli": 140, "5574077": 140, "1850398": 140, "5463025": 140, "8422884": 140, "91601413": 140, "9647598": 140, "3738229": 140, "1597457": 140, "0963247": 140, "9955841": 140, "3278579": 140, "multi": [140, 153, 171, 1640, 1694, 1697, 1704, 1710, 1713, 2118, 2126, 2128, 2130, 2134, 2159, 2170], "pars": [140, 171], "asid": [140, 170], "increasingli": 140, "14254655": 140, "1578213": 140, "380515": 140, "trivial": 140, "exlud": 140, "failing_fn_nam": 140, "onlin": [140, 141], "minutest": 140, "suffici": [140, 148, 150], "segment": 140, "fault": [140, 2130], "contrast": [141, 144, 148, 2136], "instanti": 141, "templat": [141, 150, 2118], "array_api": 141, "preview": 141, "render": 141, "incorrectli": 141, "domain": [141, 465, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 501, 504, 546, 549, 551, 554, 576, 579, 581, 584, 636, 639, 641, 644, 651, 654, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 938, 963, 1328, 1331, 2128, 2130], "codomain": [141, 465, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 501, 504, 546, 549, 551, 554, 576, 579, 581, 584, 636, 639, 641, 644, 651, 654, 741, 744, 746, 749, 751, 754, 766, 770, 771, 775, 938, 963, 1328, 1331], "needless": [141, 149], "info": [141, 2118], "renam": [141, 148], "judgment": 141, "beyond": [141, 148, 1860, 1901, 1904, 2136], "pure": [141, 144, 148, 152, 156, 159, 171, 2130, 2136, 2137], "operator_nam": 141, "succinct": 141, "contstructor": 141, "_forward": [141, 154, 157, 158, 2118], "trainabl": [141, 155, 157, 158, 2142, 2143, 2146, 2171, 2172, 2181], "docst": 141, "ivyexcept": [142, 148, 1602, 1631, 1639], "super": [142, 154, 157, 158, 159], "_default": 142, "_delimit": 142, "indexerror": [142, 1602, 1637, 1860, 1876, 1879], "ivyerror": 142, "julia": [142, 2133, 2136], "118": [142, 1704, 1761, 1764], "new_fn": [142, 148], "124": [142, 1640, 1684, 1687], "new_arg": 142, "new_kwarg": 142, "186": 142, "lib": 142, "site": [142, 2131], "_src": 142, "219": 142, "_reduce_al": 142, "_ensure_optional_ax": 142, "213": [142, 150], "_reduct": 142, "lax": [142, 148, 149, 152, 159, 171], "preproc": 142, "_cast_to_bool": 142, "pos_dim": 142, "_reduction_dim": 142, "113": 142, "canon_axi": 142, "_canonicalize_axis_allow_nam": 142, "genexpr": 142, "106": 142, "maybe_named_axi": 142, "_canonicalize_axi": 142, "stdin": 142, "295": 142, "262": 142, "ivy_arg": 142, "ivy_kwarg": 142, "354": 142, "truth_value_test": 142, "121": 142, "__name__": [142, 1407, 1589], "bound": [142, 150, 154, 2136, 2227, 2238], "switch": [142, 2137], "visibl": 142, "unwieldi": 142, "awar": 142, "recov": [142, 148], "squash": 142, "hid": 142, "cleaner": [142, 157], "caught": 142, "functool": [142, 148, 156], "attributeerror": [142, 156], "_print_traceback_histori": 142, "error_stack": 142, "axiserror": 142, "got": [142, 2118], "polici": [142, 150, 170], "moreov": 142, "met": 142, "flake8": 143, "handler": [143, 153, 155, 159, 2117, 2118, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303], "annot": [143, 144], "star": 143, "byte": [143, 2135, 2136], "notimplementederror": 143, "unsuccess": 143, "exceed": 143, "black": 143, "disobei": 143, "inde": [143, 144, 152, 171, 2128], "adress": 144, "dedic": [144, 156, 158, 2142, 2143, 2146], "usabl": [144, 151], "sole": [144, 151, 2129, 2130, 2131], "strictli": [144, 147], "rational": 144, "__div__": [144, 152], "dicat": 144, "pep": 144, "484": 144, "brittl": 144, "freeli": 144, "technic": [144, 147, 171, 2130, 2132], "original_typ": 144, "cumbersom": 144, "omit": [144, 147, 148, 465, 731, 734, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "venn": 145, "diagram": [145, 2136], "light": [145, 148, 171, 2117, 2131, 2136], "array_arg": [145, 2195, 2196], "cach": [145, 150, 430, 435, 1407, 1425], "deal": [145, 148, 171], "modif": [145, 2130], "briefli": [145, 150, 157], "get_all_arrays_on_dev": 145, "nested_map": [145, 1945], "index_nest": [145, 1945], "heavili": [146, 148, 171], "facilit": 146, "integer_array_to_float": 146, "handle_cmd_line_arg": 146, "as_vari": [146, 149, 150, 2195, 2215, 2262, 2263, 2264, 2265, 2266, 2268, 2269, 2270, 2271], "with_out": [146, 149, 150, 2195, 2215, 2262, 2263, 2265, 2268, 2270], "instance_method": [146, 150, 2195, 2215, 2262, 2265, 2270], "test_gradi": [146, 2195, 2216, 2262, 2265, 2270, 2272, 2275, 2276], "topic": [146, 156, 2130], "program": [147, 2127, 2128, 2130, 2133, 2134, 2137], "ration": [147, 152], "speak": 147, "x_nativ": 147, "val_n": 147, "_is_vari": 147, "unspecifi": [147, 465, 711, 714, 726, 729, 1704, 1730, 1731, 1734, 1860, 1916, 1919], "predominantli": [147, 151, 170], "support_native_out": [147, 154], "math": [147, 148, 149, 159, 2118, 2128], "_wrap_fn": 147, "dim0": 147, "dim1": 147, "res_floor": 147, "mul": [147, 156], "extent": [147, 148], "maxim": [147, 152, 154, 2127, 2128, 2132, 2133, 2134], "third": [147, 171, 923, 926, 1188, 1194, 1704, 1801, 1805, 2023, 2024, 2028, 2129, 2130, 2136], "leverag": [147, 2128, 2130], "capabl": [147, 150, 152], "input_arrai": 147, "tf_frontend": 148, "fn_tree": [148, 149, 150, 2195, 2213, 2218, 2220, 2272, 2274, 2276], "wrong": [148, 152], "carefulli": [148, 2128, 2133, 2149, 2153], "torch_frontend": [148, 149], "numpy_frontend": 148, "jax_frontend": 148, "to_ivy_arrays_and_back": [148, 149, 172], "fidel": 148, "acceler": [148, 2118, 2128, 2132, 2133, 2134, 2135], "algebra": [148, 2128, 2129, 2130, 2133, 2137], "xla": [148, 171, 2117, 2130], "decompos": 148, "dynamic": 148, "mimic": 148, "arithmetic_oper": 148, "handle_numpy_out": 148, "handle_numpy_dtyp": 148, "handle_numpy_cast": 148, "from_zero_dim_arrays_to_scalar": 148, "_add": 148, "same_kind": 148, "subok": [148, 149, 152], "promote_types_of_numpy_input": 148, "underscor": 148, "obtain": 148, "unhandl": 148, "subclass": [148, 152, 2142, 2144, 2145], "trigonometric_funct": 148, "_tan": 148, "check_tensorflow_cast": 148, "raw_op": [148, 149], "tackl": 148, "map_raw_ops_alia": 148, "unnecessari": [148, 152], "output_typ": 148, "kwargs_to_upd": 148, "implemnt": 148, "pointwise_op": 148, "preferred_element_typ": 148, "finer": 148, "margin": 148, "meet": 148, "criteria": 148, "reduce_logsumexp": 148, "input_tensor": 148, "logsumexp": 148, "trick": 148, "max_input_tensor": 148, "omiss": 148, "sensibl": 148, "deem": 148, "reserv": 148, "resum": 148, "possibli": [148, 150, 171, 1407, 1574, 1577], "straight": [148, 150, 156, 2118], "ahead": [148, 2130], "heavi": [148, 149, 152, 2131, 2245, 2252], "logicaland": 148, "truth": [148, 150, 465, 566, 569, 596, 599, 601, 604, 626, 629, 631, 634, 701, 704, 2184, 2185, 2191, 2195, 2214, 2215, 2216], "np_frontend": 148, "_ivy_arrai": 148, "radd": 148, "_init_data": 148, "isinst": [148, 150, 151, 158, 159], "_process_str_data": 148, "_dtype": [148, 149, 156], "_shape": [148, 156], "govern": 148, "promote_types_of_": 148, "_input": 148, "promote_types_of_torch_input": [148, 149], "saniti": 148, "func_wrapp": [148, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "handle_numpy_casting_speci": 148, "equiv": 148, "unsaf": 148, "array_type_test": 148, "_isfinit": 148, "organis": 148, "watch": 148, "youtub": 148, "seri": [148, 150, 2130, 2132], "jump": 149, "knowledg": 149, "handle_frontend_test": [149, 150, 2272], "handle_frontend_method": [149, 150, 2272], "test_frontend_funct": [149, 2195], "lift": [149, 2131], "get_dtyp": [149, 150, 2227, 2230, 2232, 2235, 2236, 2241, 2242], "dtype_and_valu": [149, 150, 2227], "get_shap": [149, 150, 2245], "np_frontend_help": 149, "nn": [149, 152, 159, 239, 284, 287, 2118, 2131, 2142, 2143, 2145], "test_jax": 149, "test_jax_lax_oper": 149, "dtype_and_x": [149, 150], "available_dtyp": [149, 150, 2227, 2232, 2235, 2236, 2241, 2242, 2243], "test_with_out": [149, 2272, 2274, 2276], "test_jax_lax_tan": 149, "on_devic": [149, 2195, 2213, 2215], "test_flag": [149, 150, 2195, 2213, 2215], "input_dtyp": [149, 150, 2184, 2188, 2189, 2195, 2200, 2209, 2213, 2215], "num_positional_arg": [149, 150, 2195, 2211, 2215, 2262, 2263, 2264, 2265, 2266, 2268, 2269, 2270, 2271, 2272], "test_numpi": 149, "test_mathematical_funct": 149, "test_np_trigonometric_funct": 149, "dtypes_values_cast": 149, "dtypes_values_casting_dtyp": 149, "arr_func": 149, "get_dtypes_kind": 149, "number_positional_arg": [149, 2272, 2274, 2276], "get_num_positional_args_ufunc": 149, "test_numpy_tan": 149, "handle_where_and_array_bool": 149, "test_tensorflow": 149, "test_math": 149, "test_tensorflow_tan": 149, "test_pointwise_op": 149, "test_torch_tan": 149, "as_variable_flag": [149, 2195, 2200, 2209, 2215, 2272, 2274, 2276], "native_array_flag": [149, 2195, 2200, 2209, 2215, 2272, 2274, 2276], "_fill_valu": 149, "min_valu": [149, 150, 2227, 2229, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2245, 2246, 2256, 2257, 2258, 2259], "max_valu": [149, 150, 2227, 2229, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2245, 2246, 2256, 2257, 2258, 2259], "allow_non": [149, 150, 2227, 2232, 2245, 2248, 2251], "min_num_dim": [149, 150, 2227, 2230, 2232, 2235, 2236, 2245, 2251], "max_num_dim": [149, 150, 2227, 2230, 2232, 2235, 2236, 2245, 2251], "min_dim_s": [149, 150, 2227, 2230, 2232, 2235, 2236, 2245, 2251], "max_dim_s": [149, 2227, 2230, 2232, 2235, 2236, 2245, 2251], "test_jax_lax_ful": 149, "test_from_shape_or_valu": 149, "_input_fill_and_dtyp": 149, "dtype_and_input": 149, "dtype_to_cast": 149, "input_fill_dtyp": 149, "test_numpy_ful": 149, "test_tf_funct": 149, "test_tensorflow_fil": 149, "test_creation_op": 149, "test_torch_ful": 149, "test_valu": [149, 150, 2195, 2213, 2214, 2215, 2216], "add_nois": 149, "inter": [149, 2118], "all_clos": 149, "_get_dtype_and_matrix": 149, "test_torch_qr": 149, "frontend_ret": 149, "frontend_q": 149, "frontend_r": 149, "assert_all_clos": [149, 2184], "ret_np": [149, 2184, 2185, 2195, 2213], "ret_from_gt_np": [149, 2184, 2185], "ground_truth_backend": [149, 2184, 2185, 2191, 2195, 2209, 2215, 2216, 2218, 2222, 2272, 2275, 2276], "walkthrough": 149, "comparison_op": 149, "test_comparison_op": 149, "num_arrai": [149, 150, 2227, 2235, 2236, 2241, 2242], "allow_inf": [149, 150, 2227, 2230, 2231, 2235, 2236, 2256, 2257], "shared_dtyp": [149, 2227, 2235, 2236, 2241, 2242], "test_torch_great": 149, "all_alias": [149, 2195, 2213], "class_tre": [149, 2272, 2273], "init_tre": [149, 2272, 2273], "method_nam": [149, 2195, 2216, 2260, 2261, 2272, 2273], "test_frontend_method": [149, 2195], "test_ndarrai": 149, "test_numpy_instance_add__": 149, "frontend_method_data": [149, 2195, 2214], "init_flag": [149, 150, 2195, 2214, 2216], "method_flag": [149, 150, 2195, 2214, 2216, 2262], "init_input_dtyp": [149, 2195, 2214, 2216], "init_all_as_kwargs_np": [149, 2195, 2214, 2216], "method_input_dtyp": [149, 2195, 2214, 2216], "method_all_as_kwargs_np": [149, 2195, 2214, 2216], "test_tensorflow_instance_add": 149, "eagertensor": [149, 2286, 2302], "method_tre": [149, 150, 2272, 2275], "1e04": 149, "allow_infin": 149, "test_torch_instance_add": 149, "atol_": [149, 2195, 2209, 2214, 2215, 2216], "_arrays_idx_n_dtyp": 149, "test_manipul": [149, 150], "surprisingli": 149, "cat": [149, 152, 154, 159], "closest_relevant_group": 149, "strive": [149, 150, 152, 171, 2132], "exhaust": [150, 2127, 2136], "fixtur": 150, "hit": [150, 154], "eleg": [150, 2130], "unexplor": 150, "upload": 150, "artifact": 150, "impli": [150, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "bespok": 150, "_array_or_typ": 150, "test_default_int_dtyp": 150, "clariti": [150, 152, 2130], "print_hypothesis_exampl": 150, "searchstrategi": [150, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2235, 2236, 2238, 2241, 2242, 2243, 2244, 2245, 2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2262, 2268, 2269, 2270, 2271, 2272, 2277, 2278, 2279], "custom_strategi": 150, "sampled_from": [150, 2227, 2237, 2238], "randomis": 150, "simplist": 150, "intricaci": 150, "glanc": 150, "stratigi": 150, "one_of": 150, "datum": 150, "pipe": 150, "overload": 150, "shorthand": 150, "suppos": [150, 239, 260, 261, 1407, 1441, 1444], "scaler": [150, 2227, 2231, 2235, 2236, 2256, 2257, 2258, 2259], "array_or_scal": 150, "len_of_arrai": 150, "test_add": 150, "keywoard": 150, "gradient_test": [150, 2195], "test_gpu_is_avail": 150, "requri": 150, "handle_test": [150, 2272], "summara": 150, "pretest": 150, "slighlti": 150, "handle_method": [150, 2272], "pytet": 150, "snippet": 150, "thankfulli": 150, "captur": [150, 159, 2131], "mostli": 150, "seamlessli": 150, "encount": 150, "criterion": 150, "array_valu": [150, 2227], "valid_ax": 150, "craft": 150, "hoc": 150, "44758124e": [150, 2227, 2230, 2236], "11228": 150, "456": 150, "268": 150, "wherev": 150, "dtype_values_axi": [150, 2227], "9622": 150, "28136": 150, "6375": 150, "12720": 150, "21354": 150, "900e": 150, "955e": [150, 2227, 2235], "exclude_min": [150, 2227, 2231, 2235, 2236, 2256, 2257], "large_abs_safety_factor": [150, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2259], "safety_factor_scal": [150, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2258, 2259], "57384": 150, "25687": 150, "248": 150, "array_dtyp": [150, 2227, 2230, 2241], "min_siz": [150, 2227, 2238, 2245, 2248, 2272, 2273, 2274, 2275, 2276], "max_siz": [150, 2227, 2238, 2245, 2248, 2272, 2273, 2274, 2275, 2276], "array_bool": [150, 2227], "na": 150, "test_devic": 150, "array_shap": 150, "common_shap": 150, "test_lay": 150, "size_bound": [150, 2227, 2238], "reshape_shap": [150, 2245], "stand": 150, "fashion": [150, 2245, 2248], "some_sequ": 150, "allow_nan": [150, 2227, 2231, 2235, 2236, 2256, 2257], "allow_subnorm": [150, 2227, 2231, 2256, 2257], "get_bound": [150, 2245], "arrays_valu": 150, "36418": 150, "21716926": 150, "none_or_list_of_float": 150, "get_prob": 150, "get_mean_std": [150, 2245], "103515625e": 150, "099609375": 150, "probabilist": 150, "get_axi": [150, 2245], "number_positional_argu": 150, "unreproduc": 150, "report": 150, "ivy_np": [150, 2286, 2294], "valid_float_dtyp": 150, "test_demo": 150, "failing_test": 150, "traceback": 150, "shrink": 150, "prescrib": 150, "closest": [150, 152, 325, 354, 465, 541, 544, 586, 589, 591, 594, 731, 734, 776, 780], "scratch": 150, "therebi": 150, "test_gelu": 150, "test_fil": 150, "brief": 150, "phase": [150, 171, 2130], "notabl": [150, 2130], "verbos": [150, 154, 2118, 2307], "newer": 150, "max_exampl": 150, "deadlin": 150, "weird": 150, "systemat": 150, "safeguard": 150, "inabl": 150, "test_result_typ": 150, "9090909090909091": 150, "judgement": 151, "some_namespac": 151, "some_backend": 151, "another_backend": 151, "refactor": 151, "ongo": 151, "op": [151, 154, 171, 2142, 2144, 2286, 2302], "cooler": 151, "something_cool": 151, "_assert_fill_value_and_dtype_are_compat": 151, "_to_devic": 151, "shouldn": 151, "focus": [151, 170, 2128, 2129, 2130, 2136, 2137], "older": 151, "grow": [151, 2118, 2130], "unbound": 151, "battl": 151, "face": [152, 154, 2130, 2136], "answer": [152, 156, 171], "contradict": 152, "entail": 152, "sacrif": 152, "dimems": 152, "jacfwd": 152, "jacrev": 152, "banner": 152, "ravel": 152, "pointwis": 152, "fuse": 152, "tensorrt": 152, "highli": [152, 2130], "expens": 152, "incredibli": [152, 157, 171, 2133], "six": 152, "price": 152, "pai": 152, "intrus": 152, "x_beta": 152, "equip": 152, "deliber": [152, 465, 731, 734], "priorit": 152, "simplif": 152, "allevi": 152, "ineffici": [152, 171, 2130], "fledg": [154, 155], "syntact": [154, 159], "construct": [154, 158, 159, 1860, 1926, 1930, 2128, 2130, 2137, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2170, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182], "power_seq": 154, "backend_stack": 154, "cprint": [154, 2306], "_determine_backend_from_arg": 154, "importlib": [154, 2280], "import_modul": [154, 2304], "_backend_dict": 154, "illustr": [154, 170], "un": [154, 325, 386], "unrol": [154, 157, 1640, 1689, 1692], "lstm": [154, 1640, 1689, 1692, 2130, 2159], "x_shape": 154, "input_channel": [154, 158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2168, 2169], "x_flat": 154, "wi": 154, "wi_x": 154, "wii_x": 154, "wif_x": 154, "wig_x": 154, "wio_x": 154, "wh": 154, "ht": 154, "ct": 154, "hts_list": 154, "wii_xt": 154, "wif_xt": 154, "wig_xt": 154, "wio_xt": 154, "zip": 154, "htm1": 154, "ctm1": 154, "wh_htm1": 154, "whi_htm1": 154, "whf_htm1": 154, "whg_htm1": 154, "who_htm1": 154, "ft": 154, "ot": 154, "reliabl": 154, "sacrific": 154, "hear": 154, "virtu": [154, 2127], "pure_ivi": 154, "compile_graph": [154, 159], "pure_torch": 154, "backbon": [154, 157], "_layer": 154, "unclean": 154, "wx": 154, "temp": 154, "ivy_func": 154, "emphas": 154, "torchscript": [154, 2117, 2137], "example_input": 154, "static_argnum": 154, "static_argnam": 154, "jit": [154, 171, 2130], "primit": [155, 171, 2128, 2130], "upcom": 155, "hierarch": [155, 157, 158, 2130], "_init": 156, "_size": 156, "_devic": 156, "_dev_str": 156, "_pre_repr": 156, "_post_repr": 156, "framework_str": 156, "noinspect": 156, "pypep8nam": 156, "typeerror": 156, "immut": 156, "claim": 156, "truli": 156, "_native_wrapp": 156, "genuin": 156, "some_method": 156, "rewritten": 156, "strang": 156, "compartment": 156, "newshap": 156, "new_shap": 156, "tidi": 156, "shorter": 156, "crystal": 156, "ton": 157, "ado": [157, 158], "soup": 157, "walk": [157, 158], "cnt": 157, "combo": 157, "3333335": 157, "Or": [157, 2286, 2296], "delimit": 157, "autocomplet": 157, "midwai": 157, "agent": 157, "total_spe": 157, "total_height": 157, "total_width": 157, "ag": 157, "tot": 157, "total_": 157, "total_h": 157, "cnt0": 157, "cnt1": 157, "diff_0": 157, "diff_1": 157, "config0": 157, "config1": 157, "decod": 157, "l0": 157, "decoder__l0": 157, "decoder__l1": 157, "encoder__l0": 157, "encoder__l1": 157, "l0__b": 157, "l0__w": 157, "l1__b": 157, "l1__w": 157, "printabl": 157, "obviou": [157, 2130], "foresight": 157, "untidili": 157, "update_ag": 157, "normalize_img": 157, "img": 157, "img_max": 157, "reduce_max": [157, 2118], "img_min": 157, "reduce_min": [157, 2118], "img_rang": 157, "agent_posit": 157, "agent_veloc": 157, "agent_cam_front_rgb": 157, "agent_cam_front_depth": 157, "agent_cam_rear_rgb": 157, "agent_cam_rear_depth": 157, "agent_cam_lidar": 157, "camera": 157, "front_rgb": 157, "front_depth": 157, "rear_rgb": 157, "rear_depth": 157, "lidar": 157, "rgb": 157, "rear": 157, "veloc": 157, "cam": 157, "cam_max": 157, "cam_min": 157, "cam_rang": 157, "perman": 157, "thread": [157, 2130], "pretti": [157, 2136], "straightforward": 157, "dataload": [157, 169, 2118], "_cnt": 157, "img_": 157, "_dataset_s": 157, "_batch_siz": 157, "_count": [157, 158], "__next__": 157, "filenam": [157, 2282, 2284], "img_fnam": 157, "fname": 157, "loaded_img": 157, "cv2": 157, "imread": 157, "from_numpi": 157, "loader": [157, 171, 2282, 2284], "batch_slic": 157, "model": [157, 158, 2117, 2118, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2137, 2142, 2144], "mymodel": [157, 2118], "linear0": [157, 158, 2118], "linear1": [157, 158, 2118], "x_in": [157, 158, 159, 2118], "loss_fn": [157, 158, 159, 2118], "reduce_mean": [157, 158, 159, 2118], "0145": 157, "grad_fn": [157, 1602, 1613, 1638], "addbackward0": 157, "_create_vari": 158, "output_channel": [158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2168, 2169], "with_bia": [158, 2159, 2169], "_input_channel": 158, "_output_channel": 158, "_w_shape": 158, "_b_shape": 158, "_with_bia": 158, "396": 158, "764": 158, "872": 158, "211": 158, "439": 158, "nightmar": 158, "overcom": 158, "fc": 158, "v0": 158, "v1": 158, "key0": 158, "linear3": 158, "v2": 158, "counter": [158, 2195, 2199], "fed": [158, 430, 455], "weight_initi": [158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169], "glorotuniform": [158, 2149, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169], "bias_initi": [158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2169], "_w_init": 158, "_b_init": 158, "create_vari": [158, 2149, 2150, 2153, 2154, 2157], "var_shap": [158, 2149, 2150, 2153, 2154, 2157], "fan_out": [158, 2149, 2150, 2152, 2153, 2154, 2157], "fan_in": [158, 2149, 2150, 2151, 2152, 2153, 2154, 2156, 2157], "fan_mod": [158, 2149, 2154, 2157], "fan_sum": [158, 2149, 2154, 2157], "misnom": 158, "saw": 158, "vanilla": [158, 1941, 1943, 2130], "compile_on_next_step": [158, 1407, 1414, 2171, 2172, 2175, 2176, 2177, 2178, 2179, 2180], "_beta1": 158, "_beta2": 158, "_epsilon": 158, "_mw": 158, "_vw": 158, "_first_pass": 158, "_should_compil": 158, "_step": [158, 2175, 2179], "new_v": 158, "_lr": 158, "_inplac": 158, "_stop_gradi": 158, "set_stat": [158, 2175, 2176, 2177, 2178, 2179, 2180], "clip_by_valu": 159, "sparse_funct": 159, "num_class": 159, "new_axi": 159, "_linear": 159, "jax_graph": 159, "to_backend": 159, "to_ivy_modul": [159, 2142], "thinli": 159, "whilst": [159, 808, 811, 813, 816, 818, 821, 1188, 1189, 1190, 1191, 2117, 2130], "to_haiku_modul": [159, 2142, 2143], "hk": [159, 2142, 2143], "loss_fn_t": 159, "without_apply_rng": 159, "rng": 159, "prngkei": 159, "update_rul": 159, "tree_multimap": 159, "robot": [169, 2118], "perfect": 170, "differenti": [170, 2130], "orient": 170, "pose": 170, "euler": [170, 233], "quaternion": 170, "ivy_mech": 170, "target_facing_rotation_matrix": 170, "polar_to_cartesian_coord": 170, "ordin": [170, 1704, 1796, 1799], "warp": 170, "optic": 170, "voxel": 170, "ivy_vis": 170, "coords_to_voxel_grid": 170, "render_pixel_coord": 170, "neural": [170, 1640, 2118, 2126, 2128, 2129, 2130, 2134, 2136, 2137, 2139, 2159], "radianc": 170, "nerf": 170, "trajectori": 170, "motion": 170, "plan": [170, 2118], "mobil": [170, 2130], "sample_spline_path": 170, "rigidmobil": 170, "sample_bodi": 170, "drone": 170, "sample_link": 170, "openai": 170, "swimmer": 170, "reward": 170, "supervis": 170, "reinforc": 170, "door": [170, 171], "cartpol": 170, "mountain_car": 170, "pendulum": 170, "reacher": 170, "learnt": 170, "ture": 170, "ntm": 170, "egospher": 170, "esm": 170, "ivy_memori": 170, "egocentr": 170, "room": 170, "doubt": 171, "grate": 171, "probe": 171, "remark": 171, "surpris": 171, "lock": 171, "gold": 171, "dex": 171, "ye": 171, "scan": 171, "tricki": [171, 2117], "predictor": 171, "tight": 171, "driver": 171, "dispatch": [171, 2130, 2133], "Will": [171, 2147, 2148, 2286, 2296], "ast": 171, "cond": [171, 234, 235, 237], "jacobian": [171, 1602, 1618, 2130], "checkpoint": 171, "autodiff": 171, "shine": 171, "merci": 171, "autograd": 171, "cluster": [171, 2130], "compet": [171, 2130], "paradigm": [171, 2130], "parallelis": 171, "spmd": 171, "mixtur": 171, "expert": 171, "sophist": 171, "depart": 171, "hundr": 171, "thousand": 171, "deepli": [171, 1945, 1947, 2130], "broadli": [171, 2136], "supplementari": 171, "reusabl": [171, 2128, 2130], "fanci": [171, 2130], "fusion": [171, 2134], "lose": 171, "pmap": 171, "overhead": [171, 2133], "eventu": 171, "supplement": 171, "backdoor": 171, "callback": 171, "record": [171, 2131], "metric": 171, "somewhat": [171, 2130], "outsourc": 171, "array_funct": [172, 173], "handle_nan": 172, "output_to_native_arrai": 172, "try_array_function_overrid": 172, "overloaded_arg": [172, 187], "with_supported_device_and_dtyp": 172, "version_dict": 172, "with_supported_devic": 172, "with_unsupported_device_and_dtyp": 172, "with_unsupported_devic": 172, "custom_object": [189, 190, 196], "nonetyp": [189, 190, 196], "xxxxxxxxxxxxxx": [189, 190, 196], "custom_fn": [189, 190, 196], "gaussian": [189, 191, 194], "24000001": [189, 197, 200], "703": [189, 202, 205], "683": [189, 202, 205], "408": [189, 202, 205], "313": [189, 202, 205], "437": [189, 202, 205], "40337825": [189, 207, 210], "56114835": [189, 207, 210], "20788449": [189, 207, 210], "214": [189, 217, 220], "891": [189, 217, 220], "846": [189, 217, 220], "985": [189, 217, 220], "0768": [189, 222, 225, 465, 556, 559], "231": [189, 222, 225], "array_method": [191, 192, 197, 198, 202, 203, 207, 208, 212, 213, 217, 218, 222, 223, 227, 228, 244, 245, 251, 252, 255, 256, 263, 264, 269, 270, 274, 275, 279, 280, 284, 285, 289, 290, 294, 295, 302, 303, 307, 309, 312, 314, 320, 322, 333, 334, 338, 339, 343, 344, 348, 349, 369, 370, 380, 381, 387, 388, 396, 397, 401, 402, 406, 407, 413, 414, 437, 438, 456, 458, 466, 467, 471, 472, 476, 477, 481, 482, 486, 487, 491, 492, 496, 497, 501, 502, 506, 507, 511, 512, 516, 517, 521, 522, 526, 527, 531, 532, 536, 537, 541, 542, 546, 547, 551, 552, 556, 557, 561, 562, 566, 567, 571, 572, 576, 577, 581, 582, 586, 587, 591, 592, 596, 597, 601, 602, 606, 607, 611, 612, 616, 617, 621, 622, 626, 627, 631, 632, 636, 637, 641, 642, 646, 647, 651, 652, 656, 657, 661, 662, 666, 667, 671, 672, 676, 677, 681, 682, 686, 687, 691, 692, 696, 697, 701, 702, 706, 707, 711, 712, 716, 717, 721, 722, 726, 727, 731, 732, 736, 737, 741, 742, 746, 747, 751, 752, 756, 757, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 793, 794, 798, 799, 803, 804, 808, 809, 813, 814, 818, 819, 823, 824, 828, 829, 833, 834, 838, 839, 843, 844, 849, 850, 865, 866, 870, 871, 875, 876, 892, 893, 902, 903, 907, 908, 912, 913, 918, 919, 923, 924, 928, 929, 933, 934, 967, 968, 972, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 998, 1002, 1003, 1007, 1008, 1012, 1013, 1017, 1018, 1022, 1023, 1027, 1028, 1032, 1033, 1035, 1036, 1042, 1043, 1057, 1058, 1062, 1063, 1067, 1068, 1072, 1073, 1077, 1078, 1082, 1083, 1087, 1088, 1092, 1093, 1098, 1099, 1106, 1107, 1111, 1112, 1124, 1125, 1129, 1130, 1154, 1155, 1159, 1160, 1171, 1172, 1176, 1177, 1183, 1184, 1212, 1213, 1217, 1218, 1222, 1223, 1227, 1228, 1232, 1233, 1238, 1239, 1243, 1244, 1248, 1249, 1253, 1254, 1258, 1259, 1263, 1264, 1273, 1274, 1282, 1283, 1289, 1290, 1295, 1296, 1300, 1301, 1311, 1312, 1316, 1317, 1323, 1324, 1328, 1329, 1350, 1352, 1355, 1357, 1360, 1362, 1365, 1366, 1376, 1378, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1408, 1409, 1415, 1416, 1420, 1421, 1426, 1427, 1431, 1432, 1438, 1439, 1441, 1442, 1446, 1447, 1451, 1452, 1456, 1457, 1459, 1460, 1466, 1467, 1471, 1472, 1483, 1484, 1492, 1493, 1498, 1499, 1503, 1504, 1508, 1509, 1514, 1515, 1519, 1520, 1524, 1525, 1527, 1528, 1537, 1538, 1542, 1543, 1558, 1559, 1563, 1564, 1568, 1570, 1574, 1576, 1579, 1581, 1584, 1586, 1596, 1598, 1604, 1605, 1608, 1609, 1614, 1615, 1619, 1620, 1623, 1624, 1627, 1628, 1632, 1634, 1642, 1643, 1647, 1648, 1652, 1653, 1657, 1658, 1662, 1663, 1667, 1668, 1674, 1675, 1679, 1680, 1684, 1685, 1689, 1690, 1694, 1695, 1699, 1700, 1705, 1706, 1710, 1711, 1715, 1716, 1720, 1721, 1725, 1726, 1731, 1732, 1736, 1737, 1741, 1742, 1746, 1747, 1751, 1752, 1756, 1757, 1761, 1762, 1766, 1767, 1771, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1792, 1796, 1797, 1801, 1803, 1806, 1808, 1815, 1816, 1819, 1821, 1824, 1826, 1829, 1831, 1834, 1836, 1839, 1841, 1845, 1846, 1850, 1851, 1855, 1856, 1861, 1862, 1866, 1867, 1871, 1872, 1876, 1877, 1881, 1882, 1886, 1887, 1891, 1892, 1896, 1897, 1901, 1902, 1906, 1907, 1911, 1912, 1916, 1917, 1921, 1923, 1926, 1928, 1931, 1933, 1936, 1938, 1966, 1967, 1971, 1972, 1976, 1977, 1981, 1982, 1986, 1987, 1992, 1993, 1998, 1999, 2003, 2004, 2008, 2009, 2013, 2014, 2018, 2020, 2024, 2026, 2029, 2031, 2034, 2036, 2039, 2041, 2045, 2046, 2050, 2051, 2055, 2056, 2061, 2062, 2066, 2067, 2071, 2072, 2075, 2076, 2079, 2080, 2083, 2084, 2087, 2088, 2092, 2093, 2096, 2098, 2101, 2103, 2107, 2108, 2112, 2113], "container_method": [191, 193, 195, 197, 199, 201, 202, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 226, 227, 229, 231, 241, 243, 244, 247, 255, 257, 259, 260, 262, 263, 265, 267, 269, 271, 273, 274, 276, 278, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 299, 301, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 320, 321, 323, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 355, 357, 359, 361, 364, 365, 367, 369, 371, 373, 374, 376, 377, 379, 380, 382, 384, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 403, 405, 406, 408, 410, 413, 415, 417, 437, 439, 441, 456, 457, 459, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 503, 505, 506, 508, 510, 511, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 673, 675, 676, 678, 680, 681, 683, 685, 686, 688, 690, 691, 693, 695, 696, 698, 700, 701, 703, 705, 706, 708, 710, 711, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 730, 731, 733, 735, 736, 738, 740, 741, 743, 745, 746, 748, 750, 751, 753, 755, 756, 758, 760, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 781, 782, 784, 793, 795, 797, 798, 800, 802, 803, 805, 807, 808, 810, 812, 813, 815, 817, 818, 820, 822, 823, 825, 827, 828, 830, 832, 833, 835, 837, 838, 840, 842, 843, 845, 847, 849, 851, 853, 854, 855, 857, 859, 860, 862, 865, 867, 869, 870, 872, 874, 875, 877, 879, 892, 894, 896, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 967, 969, 971, 972, 974, 976, 977, 979, 981, 982, 984, 986, 987, 989, 991, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1035, 1037, 1039, 1042, 1044, 1046, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1059, 1061, 1062, 1064, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1098, 1100, 1102, 1106, 1108, 1110, 1111, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1128, 1129, 1131, 1133, 1154, 1156, 1158, 1159, 1161, 1163, 1171, 1173, 1175, 1176, 1178, 1180, 1183, 1185, 1187, 1212, 1214, 1216, 1217, 1219, 1221, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1234, 1236, 1238, 1240, 1242, 1243, 1245, 1247, 1248, 1250, 1252, 1253, 1255, 1257, 1258, 1260, 1262, 1263, 1265, 1267, 1273, 1275, 1277, 1282, 1284, 1286, 1289, 1291, 1293, 1295, 1297, 1299, 1300, 1302, 1304, 1311, 1313, 1315, 1316, 1318, 1320, 1323, 1325, 1327, 1328, 1330, 1332, 1350, 1351, 1353, 1355, 1356, 1358, 1360, 1361, 1363, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1379, 1382, 1383, 1384, 1386, 1387, 1389, 1391, 1392, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1408, 1410, 1412, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1430, 1431, 1433, 1435, 1441, 1443, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1459, 1461, 1463, 1466, 1468, 1470, 1471, 1473, 1475, 1483, 1485, 1487, 1492, 1494, 1496, 1498, 1500, 1502, 1503, 1505, 1507, 1508, 1510, 1512, 1514, 1516, 1518, 1519, 1521, 1523, 1527, 1529, 1531, 1537, 1539, 1541, 1542, 1544, 1546, 1558, 1560, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1574, 1575, 1579, 1580, 1582, 1584, 1585, 1587, 1596, 1597, 1599, 1604, 1606, 1608, 1610, 1614, 1616, 1619, 1621, 1623, 1625, 1627, 1629, 1632, 1633, 1635, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1674, 1676, 1678, 1679, 1681, 1683, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1705, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1785, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1804, 1806, 1807, 1809, 1811, 1812, 1813, 1815, 1817, 1819, 1820, 1822, 1824, 1825, 1827, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1845, 1847, 1849, 1850, 1852, 1854, 1855, 1857, 1859, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1931, 1932, 1934, 1936, 1937, 1939, 1966, 1968, 1971, 1973, 1975, 1976, 1978, 1980, 1981, 1983, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1998, 2000, 2002, 2003, 2005, 2007, 2008, 2010, 2012, 2013, 2015, 2017, 2018, 2019, 2021, 2024, 2025, 2027, 2029, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2045, 2047, 2049, 2050, 2052, 2054, 2055, 2057, 2059, 2061, 2063, 2065, 2066, 2068, 2070, 2071, 2073, 2075, 2077, 2079, 2081, 2083, 2085, 2087, 2089, 2091, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2104, 2107, 2109, 2111, 2112, 2114, 2116], "718281828459045": 233, "newaxi": 233, "141592653589793": 233, "control_flow_op": [234, 235, 236, 237, 238], "ifels": 234, "body_fn": [234, 235, 236, 237, 238], "orelse_fn": [234, 235, 237], "whileloop": 234, "test_fn": [234, 236, 238, 2218, 2220], "if_els": 234, "while_loop": 234, "nestedsequ": [239, 244, 246], "protocol": [239, 240], "_t_co": [239, 240], "ml_framework": [239, 241, 242], "distanc": [239, 241, 242], "adjac": [239, 241, 242], "obj": [239, 244, 246], "typevar": [239, 244, 246], "supportsbufferprotocol": [239, 244, 246], "intdtyp": [239, 260, 261, 302, 305, 320, 324, 325, 362, 392, 394, 406, 409, 421, 427], "numrow": [239, 260, 261], "numcolumn": [239, 260, 261], "interchang": [239, 263, 266, 1860, 1921, 1925], "33333337": [239, 274, 277], "66666663": [239, 274, 277], "41588834": [239, 279, 282], "7827941": [239, 279, 282], "6227766": [239, 279, 282], "23413252": [239, 279, 282], "conserv": [239, 284, 287], "n1": [239, 284, 287], "n2": [239, 284, 287], "n3": [239, 284, 287], "xv": [239, 284, 287], "yv": [239, 284, 287], "d_type": [239, 299, 300], "__new__": [239, 299, 300], "y1": [239, 302, 305, 320, 324, 880, 881, 982, 985], "y2": [239, 302, 305, 320, 324], "y3": [239, 302, 305, 320, 324], "defaultcomplexdtyp": 325, "defaultdtyp": 325, "defaultfloatdtyp": 325, "defaultintdtyp": 325, "int_dtyp": [325, 329, 362, 421], "defaultuintdtyp": 325, "uint_dtyp": [325, 330, 363, 422], "incompat": [325, 343, 346], "data_type_funct": [325, 348, 351], "xtype": [325, 354], "ytype": [325, 354], "native_uint16": [325, 354], "complexdtyp": [325, 355, 356, 392, 394, 418], "complex128": [325, 355, 356, 392, 394, 418, 424, 2227, 2236], "4294": [325, 355, 356, 359, 360], "967346": [325, 355, 356, 359, 360], "floatdtyp": [325, 359, 360, 420], "4294967346": [325, 362, 363], "uintdtyp": [325, 363, 406, 409, 422, 428], "native_bool": [325, 368], "followng": [325, 369, 372], "smallest_norm": [325, 369, 372], "314": [325, 380, 383, 938, 961, 1311, 1314], "9223372036854775808": [325, 380, 383], "9223372036854775807": [325, 380, 383], "65535": [325, 380, 383], "4294967295": [325, 380, 383], "native_uint8": [325, 386], "type1": [325, 411], "type2": [325, 411], "array_api_promot": [325, 411, 412, 2227, 2235, 2241, 2242], "default_dtype_stack": [325, 419, 425], "native_uint64": [325, 419], "ret1": [325, 423], "ret2": [325, 423], "reset": [325, 424, 425, 426, 427, 428, 430, 463, 1407, 1590, 1591, 1592, 1593, 1594, 1595], "default_complex_dtype_stack": [325, 424], "default_float_dtype_stack": [325, 426], "native_float16": [325, 429], "defaultdevic": 430, "__enter__": [430, 431], "_dev": [430, 431], "__exit__": [430, 431], "exc_typ": [430, 431], "exc_val": [430, 431], "exc_tb": [430, 431], "exit": [430, 431], "profil": 430, "save_dir": [430, 432], "139740789224448": [430, 445], "physic": [430, 447], "process_specif": [430, 450, 464], "percentag": [430, 450], "ram": [430, 450, 461, 464], "036902561555": [430, 450], "7024003467681645": [430, 450], "7095597456708771": [430, 450], "attr_onli": [430, 451], "chunk": [430, 453, 454, 455], "max_chunk_s": [430, 455], "chunk_siz": [430, 455], "input_ax": [430, 455], "output_ax": [430, 455], "feed": [430, 455, 2130, 2131], "fist": [430, 455], "66700032": [430, 461], "589934592": [430, 461], "219563008": [430, 464], "902400346": [430, 464], "525205504": [430, 464], "magnitud": [465, 466, 469, 481, 484, 1704, 1801, 1805, 1806, 1810], "princip": [465, 471, 474, 486, 489, 496, 499, 938, 963, 1328, 1331], "2019": [465, 481, 484, 581, 584, 646, 649, 2130, 2133], "commut": [465, 481, 484], "809": [465, 491, 494], "199": [465, 491, 494], "569": [465, 491, 494], "733": [465, 491, 494], "denot": [465, 501, 504, 1602, 1631, 1639, 2171, 2172], "quadrant": [465, 501, 504], "3\u03c0": [465, 501, 504], "bitwis": [465, 511, 514, 526, 529, 536, 539, 676, 679], "170": [465, 531, 534], "243": [465, 531, 534], "225": [465, 531, 534], "xor": [465, 536, 539, 676, 679], "77": [465, 536, 539, 1704, 1776, 1779, 2060, 2071, 2074], "368": [465, 551, 554], "670": [465, 551, 554], "548": [465, 551, 554], "1490": [465, 551, 554], "0192": [465, 556, 559], "0384": [465, 556, 559], "0576": [465, 556, 559], "698": [465, 561, 564], "accur": [465, 581, 584, 646, 649, 1704, 1791, 1794], "fdlibm": [465, 581, 584, 646, 649], "compliant": [465, 581, 584, 646, 649, 666, 669, 671, 674, 2060, 2075, 2078, 2079, 2082, 2083, 2086, 2092, 2095], "632": [465, 581, 584], "20e": [465, 581, 584], "72e": [465, 581, 584], "greatest": [465, 586, 589, 591, 594, 938, 951, 1035, 1038], "742": [465, 646, 649], "versu": [465, 711, 714], "52095687": [465, 711, 714], "92457771": [465, 711, 714], "49372482": [465, 711, 714], "22738838": [465, 711, 714], "156": [465, 711, 714, 2227, 2236], "5877228": [465, 711, 714], "189": [465, 716, 719], "252": [465, 716, 719], "315": [465, 716, 719], "378": [465, 716, 719], "1150": [465, 716, 719], "2890": [465, 716, 719], "172": [465, 716, 719], "229": [465, 716, 719], "487": [465, 716, 719, 1640, 1684, 1687], "344": [465, 716, 719], "decim": [465, 731, 734], "imprecis": [465, 731, 734], "5654": [465, 731, 734], "034": [465, 731, 734], "433": [465, 731, 734, 1602, 1613, 1618, 1638], "932": [465, 741, 744], "746": [465, 741, 744], "443": [465, 741, 744], "657": [465, 741, 744, 1407, 1431, 1434], "indistinguish": [465, 751, 754], "infinit": [465, 751, 754], "32455532": [465, 751, 754], "89897949": [465, 751, 754], "169": [465, 751, 754], "546": [465, 766, 770, 1640, 1684, 1687], "916": [465, 766, 770, 1844, 1845, 1848], "996": [465, 766, 770], "462": [465, 771, 775], "604": [465, 771, 775], "984": [465, 771, 775], "997": [465, 771, 775], "0375": [465, 776, 780], "032": [465, 776, 780], "coo_indic": [788, 1268, 1336, 1338, 1341], "crow_indic": [788, 1268, 1336, 1338, 1341], "col_indic": [788, 1268, 1336, 1338, 1341], "ccol_indic": [788, 1268, 1336, 1338, 1341], "row_indic": [788, 1268, 1336, 1338, 1341], "dense_shap": [788, 1268, 1336, 1338, 1341], "to_dense_arrai": [788, 1336, 1338], "yj": [803, 806, 938, 940, 954, 1087, 1090], "ary3": [818, 821, 1188, 1191], "avg": [823, 826, 833, 836, 1134, 1135, 1137], "dimensio": [828, 831, 1134, 1136], "distrubut": [838, 841, 1305, 1306], "paramter": [838, 841, 1305, 1306], "463": [854, 856, 1181, 1182], "022": [854, 856, 1181, 1182], "059": [854, 856, 1181, 1182], "601": [854, 856, 1181, 1182], "015": [854, 856, 1181, 1182], "868": [854, 856, 1181, 1182], "908": [854, 856, 1181, 1182], "672": [854, 856, 1181, 1182], "002": [854, 856, 1181, 1182], "029": [854, 856, 1181, 1182], "144": [854, 856, 1181, 1182], "822": [854, 856, 1181, 1182], "custom_grad_func": [858, 1047, 1048], "everywher": [880, 881, 982, 985], "t1": [880, 881, 982, 985], "0800": [880, 882, 1049, 1051], "3979": [880, 882, 1049, 1051], "9121": [880, 882, 1049, 1051], "5400": [880, 882, 1049, 1051], "han": [880, 883, 1053, 1055], "taper": [880, 883, 1053, 1055], "00713103": [880, 884, 1116, 1118], "99997455": [880, 884, 1116, 1118], "kaiser_derived_window": [880, 884, 1116, 1118], "00726415": [880, 884, 1116, 1118], "9999736": [880, 884, 1116, 1118], "2773e": [880, 885, 1120, 1122], "0172e": [880, 885, 1120, 1122], "9294e": [880, 885, 1120, 1122], "4149": [880, 885, 1120, 1122], "9138": [880, 885, 1120, 1122], "5529": [880, 885, 1120, 1122], "col": [880, 886, 887, 1368, 1371, 1372, 1375], "retain": [880, 886, 887, 1368, 1371, 1372, 1375, 1602, 1612, 2117], "downward": [880, 886, 887, 1368, 1371, 1372, 1375], "upward": [880, 886, 887, 1368, 1371, 1372, 1375], "2xn": [880, 886, 887, 1368, 1371, 1372, 1375], "subarrai": [880, 886, 887, 1368, 1371, 1372, 1375], "complementari": [880, 888, 1382, 1385, 2128, 2136], "38268346": [880, 888, 1382, 1385], "38268352": [880, 888, 1382, 1385], "8563191": [880, 888, 1382, 1385], "14943568": [880, 888, 1382, 1385], "is_native_dtyp": 890, "tranform": [892, 895, 1134, 1140], "22e": [892, 895, 1134, 1140], "24e": [892, 895, 1134, 1140], "91e": [892, 895, 1134, 1140], "10e": [892, 895, 1134, 1140], "16e": [892, 895, 1134, 1140], "81e": [892, 895, 1134, 1140], "280": [892, 895, 1134, 1140], "container_n": [892, 895, 1134, 1140], "container_norm": [892, 895, 1134, 1140], "superdiagon": [902, 905, 1164, 1166, 1704, 1720, 1723], "subdiagon": [902, 905, 1164, 1166, 1704, 1720, 1723], "multivari": [912, 915, 1305, 1308], "bayesian": [912, 915, 1305, 1308], "randomli": [917, 1134, 1142, 1640, 1679, 1682, 2159, 2167, 2227, 2229, 2230, 2231, 2235, 2236, 2237, 2238, 2241, 2242, 2243, 2244, 2245, 2248, 2249, 2250, 2251, 2253, 2254, 2256, 2257, 2258, 2259, 2272, 2277, 2278], "ed": [917, 1134, 1142], "eigenvali": [928, 931, 1164, 1167], "72281323e": [928, 931, 1164, 1167], "37228132e": [928, 931, 1164, 1167], "88578059e": [928, 931, 1164, 1167], "10000000e": [928, 931, 1164, 1167], "76822128": [928, 931, 1164, 1167], "70710678": [928, 931, 1164, 1167], "6401844": [928, 931, 1164, 1167], "position": [938, 947, 1012, 1015], "inexact": [938, 947, 1012, 1015], "triangl": [938, 953, 1072, 1075], "999999e": [938, 955, 1106, 1109], "355j": [938, 961, 1311, 1314], "55j": [938, 961, 1311, 1314], "217234": [938, 963, 1328, 1331], "hurwitz": [938, 966, 1401, 1405], "emb": [967, 970, 1134, 1143], "frac": [987, 990, 1082, 1085, 1134, 1144, 1145], "02733949e": [987, 990, 1134, 1144], "00j": [987, 990, 1134, 1144], "49660576e": [987, 990, 1134, 1144], "68178638e": [987, 990, 1134, 1144], "01j": [987, 990, 1082, 1085, 1134, 1144, 1145], "98912367e": [987, 990, 1134, 1144], "21802426e": [987, 990, 1082, 1085, 1134, 1144, 1145], "04549134e": [987, 990, 1082, 1085, 1134, 1144, 1145], "82842712e": [987, 990, 1082, 1085, 1134, 1144, 1145], "86902654e": [987, 990, 1082, 1085, 1134, 1144, 1145], "25501143e": [987, 990, 1082, 1085, 1134, 1144, 1145], "32978028e": [987, 990, 1082, 1085, 1134, 1144, 1145], "52068201e": [987, 990, 1082, 1085, 1134, 1144, 1145], "71158374e": [987, 990, 1082, 1085, 1134, 1144, 1145], "bind_custom_gradient_funct": 1047, "horizot": [1067, 1070, 1188, 1201], "15318303e": [1082, 1085, 1134, 1145], "15148591e": [1082, 1085, 1134, 1145], "19j": [1082, 1085, 1134, 1145], "25000000e": [1082, 1085, 1134, 1145], "35378602e": [1082, 1085, 1134, 1145], "02j": [1082, 1085, 1134, 1145], "65404249e": [1082, 1085, 1134, 1145], "17611649e": [1082, 1085, 1134, 1145], "24320230e": [1082, 1085, 1134, 1145], "79344813e": [1082, 1085, 1134, 1145], "22374531e": [1082, 1085, 1134, 1145], "45929364e": [1082, 1085, 1134, 1145], "14208718e": [1082, 1085, 1134, 1145], "07177031e": [1082, 1085, 1134, 1145], "fp": [1097, 1134, 1146], "nearest_exact": [1098, 1101, 1134, 1147], "cubic": 1134, "interp": 1134, "paddedrow": 1134, "padding_ceil_mod": 1134, "polynomial_calclul": 1134, "indirect": [1159, 1162, 1333, 1334], "secondari": [1159, 1162, 1333, 1334], "3333": [1183, 1186, 1278, 1281], "6666": [1183, 1186, 1278, 1281], "ndenumer": 1188, "multidimension": [1188, 1204, 1205, 1270, 1271, 2130], "ndindex": 1188, "linear_ramp": [1188, 1206, 1282, 1285], "ramp": [1188, 1206, 1282, 1285], "padding_func": [1188, 1206, 1282, 1285], "iaxis_pad_width": [1188, 1206, 1282, 1285], "iaxi": [1188, 1206, 1282, 1285], "unalt": [1188, 1206, 1282, 1285], "sparse_arrai": [1336, 1337, 1338, 1339, 1340, 1341, 1342], "nativesparsearrai": 1336, "sparsearrai": 1336, "is_ivy_sparse_arrai": 1336, "is_native_sparse_arrai": 1336, "native_sparse_arrai": 1336, "native_sparse_array_to_indices_values_and_shap": 1336, "inspect": [1407, 1413, 2122, 2123], "recalcul": [1407, 1425], "my_sum": [1407, 1425], "val1": [1407, 1425], "val2": [1407, 1425], "cached_sum": [1407, 1425], "line_eq": [1407, 1425], "slp": [1407, 1425], "itc": [1407, 1425], "cached_line_eq": [1407, 1425], "0353": [1407, 1426, 1429], "424": [1407, 1426, 1429], "58": [1407, 1426, 1429], "176": [1407, 1426, 1429], "339": [1407, 1426, 1429], "271": [1407, 1426, 1429], "168": [1407, 1426, 1429], "391": [1407, 1426, 1429], "417": [1407, 1431, 1434], "583": [1407, 1431, 1434], "0667": [1407, 1431, 1434], "267": [1407, 1431, 1434], "131": [1407, 1431, 1434], "394": [1407, 1431, 1434, 1970, 1992, 1995], "526": [1407, 1431, 1434], "788": [1407, 1431, 1434], "default_str": [1407, 1438, 1440], "46999979": [1407, 1441, 1444], "66000009": [1407, 1441, 1444], "93000001": [1407, 1441, 1444], "29000092": [1407, 1441, 1444], "33999991": [1407, 1441, 1444], "6400001": [1407, 1441, 1444], "96000004": [1407, 1441, 1444], "36000013": [1407, 1441, 1444], "51999998": [1407, 1441, 1444], "67000008": [1407, 1441, 1444], "960": [1407, 1441, 1444], "1280": [1407, 1441, 1444], "3600": [1407, 1441, 1444], "h1": [1407, 1441, 1444], "w1": [1407, 1441, 1444], "405": [1407, 1446, 1449], "array_mod": [1407, 1477], "exception_trace_mod": [1407, 1478], "max_depth": [1407, 1489, 1945, 1958], "seen_set": [1407, 1489], "local_set": [1407, 1489], "allow_dupl": [1407, 1533], "forkserv": [1407, 1534], "spawn": [1407, 1534], "garbag": [1407, 1536], "collector": [1407, 1536], "rtype": [1407, 1547, 1548, 1551, 1553, 1554], "exept": [1407, 1548], "tmp_dr": [1407, 1555], "tmp": [1407, 1555], "my_tmp": [1407, 1555], "49999999999975": [1407, 1558, 1561], "5015015015010504": [1407, 1558, 1561], "000444502911705e": [1407, 1558, 1561], "9999999999995j": [1407, 1558, 1561], "100000023841858": [1407, 1574, 1577], "200000047683716": [1407, 1574, 1577], "299999952316284": [1407, 1574, 1577], "400000095367432": [1407, 1574, 1577], "599999904632568": [1407, 1574, 1577], "dictionai": [1407, 1589], "hemant": [1407, 1589], "451": [1407, 1596, 1600], "in_ax": [1407, 1601], "out_ax": [1407, 1601], "thereof": [1407, 1601], "summaris": [1407, 1601], "gradienttrack": 1602, "0125": [1602, 1604, 1607], "171": [1602, 1604, 1607, 2227, 2236], "90000075": [1602, 1608, 1611], "90000164": [1602, 1608, 1611], "9000032": [1602, 1608, 1611], "50000012e": [1602, 1608, 1611], "92558754": [1602, 1608, 1611], "92558694": [1602, 1608, 1611], "92558682": [1602, 1608, 1611], "92558861": [1602, 1608, 1611], "60000025e": [1602, 1608, 1611], "01024": [1602, 1608, 1611], "retain_grad": [1602, 1612], "xs_grad_idx": [1602, 1612, 2195, 2209, 2215, 2216], "ret_grad_idx": [1602, 1612, 2195, 2209, 2215, 2216], "func_ret": [1602, 1612], "933": [1602, 1613, 1618, 1638], "jac_fn": [1602, 1618], "639": [1602, 1619, 1622], "361": [1602, 1619, 1622], "with_grads_stack": [1602, 1631, 1637, 1639], "value_grad": [1602, 1638], "423332": [1602, 1638], "channel_last": [1640, 1641, 1672, 1673], "feature_group_count": [1640, 1641, 1672, 1673], "x_dilat": [1640, 1641, 1672], "channel_first": [1640, 1641, 1672, 1673], "258": [1640, 1647, 1650, 1657, 1660, 1667, 1670], "dhwio": [1640, 1662, 1665], "depthwis": [1640, 1674, 1677, 2159, 2166, 2245, 2255], "hwi": [1640, 1674, 1677], "overfit": [1640, 1679, 1682], "1428566": [1640, 1679, 1682], "19999981": [1640, 1679, 1682], "39999962": [1640, 1679, 1682], "4000001": [1640, 1679, 1682], "5999999": [1640, 1679, 1682], "49000001": [1640, 1679, 1682], "55599999": [1640, 1679, 1682], "21000004": [1640, 1679, 1682], "incom": [1640, 1684, 1687], "666": [1640, 1684, 1687, 1704, 1756, 1759], "4269": [1640, 1684, 1687], "911": [1640, 1684, 1687], "157": [1640, 1684, 1687], "753": [1640, 1684, 1687], "101": [1640, 1684, 1687, 1704, 1746, 1749, 1945, 1952], "545": [1640, 1684, 1687, 1970, 1986, 1989], "547": [1640, 1684, 1687], "852": [1640, 1684, 1687], "963": [1640, 1684, 1687], "108": [1640, 1684, 1687, 2060, 2071, 2074], "196": [1640, 1684, 1687], "306": [1640, 1684, 1687], "query_dim": [1640, 1694, 1697, 2159, 2170], "measur": [1640, 1694, 1697, 2159, 2170], "cont_feat_dim": [1640, 1694, 1697], "numhead": [1640, 1694, 1697], "head_dim": [1640, 1694, 1697, 2159, 2170], "out_feat_dim": [1640, 1694, 1697], "5678761": [1640, 1694, 1697], "65441847": [1640, 1694, 1697], "18969631": [1640, 1694, 1697], "40131447": [1640, 1694, 1697], "19991851": [1640, 1694, 1697], "40000153": [1640, 1694, 1697], "68589532": [1640, 1694, 1697], "40129396": [1640, 1694, 1697], "40000817": [1640, 1694, 1697], "31219625": [1640, 1694, 1697], "25698996": [1640, 1694, 1697], "31022024": [1640, 1694, 1697], "16286421": [1640, 1694, 1697], "30296469": [1640, 1694, 1697], "16460133": [1640, 1694, 1697], "59497029": [1640, 1694, 1697], "40046397": [1640, 1694, 1697], "14009905": [1640, 1694, 1697], "81691194": [1640, 1694, 1697], "10732293": [1640, 1694, 1697], "40012637": [1640, 1694, 1697], "73519301": [1640, 1694, 1697], "40021262": [1640, 1694, 1697], "7615059": [1640, 1694, 1697], "40326414": [1640, 1694, 1697], "30141067": [1640, 1694, 1697], "19610119": [1640, 1694, 1697], "32028484": [1640, 1694, 1697], "1708746": [1640, 1694, 1697], "34100914": [1640, 1694, 1697], "14920235": [1640, 1694, 1697], "40000009": [1640, 1694, 1697], "73333335": [1640, 1694, 1697], "axisa": [1704, 1710, 1713], "axisb": [1704, 1710, 1713], "axisc": [1704, 1710, 1713], "293": [1704, 1715, 1718], "46997": [1704, 1715, 1718], "eigendecomposit": [1704, 1730, 1731, 1734], "qlq\u1d40": [1704, 1730, 1731, 1734], "orthogon": [1704, 1730, 1731, 1734], "45033181e": [1704, 1736, 1739], "02829754e": [1704, 1736, 1739], "54220343e": [1704, 1736, 1739], "12647155e": [1704, 1736, 1739], "38447177e": [1704, 1736, 1739], "56155300e": [1704, 1736, 1739], "26794919": [1704, 1736, 1739], "7320509": [1704, 1736, 1739], "array_lik": [1704, 1741, 1744, 1776, 1779], "0012": [1704, 1746, 1749], "00342": [1704, 1746, 1749], "000565": [1704, 1746, 1749], "0104": [1704, 1746, 1749], "000981": [1704, 1746, 1749], "00282": [1704, 1746, 1749], "000766": [1704, 1746, 1749], "0322": [1704, 1746, 1749], "00237": [1704, 1746, 1749], "000151": [1704, 1746, 1749], "00101": [1704, 1746, 1749], "00019": [1704, 1746, 1749], "0214": [1704, 1746, 1749], "00171": [1704, 1746, 1749], "0107": [1704, 1746, 1749], "0167": [1704, 1746, 1749], "0472": [1704, 1746, 1749], "0536": [1704, 1746, 1749], "0177": [1704, 1746, 1749], "000429": [1704, 1746, 1749], "00762": [1704, 1746, 1749], "frobeniu": [1704, 1756, 1759], "nuclear": [1704, 1756, 1759], "induc": [1704, 1756, 1759], "47722558": [1704, 1756, 1759], "776": [1704, 1756, 1759], "6000004": [1704, 1756, 1759], "moor": [1704, 1781, 1784], "penros": [1704, 1781, 1784], "logsabsdet": [1704, 1791, 1794], "subject": [1704, 1791, 1794], "usvh": [1704, 1801, 1805], "et": [1704, 1801, 1805], "cetera": [1704, 1801, 1805], "ss": [1704, 1806, 1810], "615": [1704, 1806, 1810], "866": [1704, 1806, 1810], "864": [1704, 1806, 1810], "0x": [1704, 1824, 1828], "alexandr": [1704, 1824, 1828], "theophil": [1704, 1824, 1828], "skew": [1704, 1839, 1843], "symmetric_matrix": [1704, 1839, 1843], "cross_product": [1704, 1839, 1843], "35667497": [1844, 1850, 1853], "793291": [1844, 1855, 1858], "512926": [1844, 1855, 1858], "squeezabl": [1860, 1911, 1914], "famili": [1860, 1916, 1919], "intxx": [1860, 1916, 1919], "floatxx": [1860, 1916, 1919], "rep": [1860, 1926, 1930], "manipulation_funct": [1860, 1936, 1940], "fomaml_step": 1941, "inner_cost_fn": [1941, 1942, 1943], "outer_cost_fn": [1941, 1942, 1943], "inner_grad_step": [1941, 1942, 1943, 1944], "inner_learning_r": [1941, 1942, 1943, 1944], "inner_optimization_step": [1941, 1942, 1943, 1944], "inner_batch_fn": [1941, 1942, 1943], "outer_batch_fn": [1941, 1942, 1943], "average_across_step": [1941, 1942, 1943], "inner_v": [1941, 1942, 1943], "keep_inner_v": [1941, 1942, 1943], "outer_v": [1941, 1942, 1943], "keep_outer_v": [1941, 1942, 1943], "return_inner_v": [1941, 1942, 1943, 1944], "num_task": [1941, 1942, 1943, 1944], "maml": [1941, 1942, 1943], "recev": [1941, 1942, 1943], "0x7f62bd534a60": [1941, 1942, 1943, 1944], "maml_step": 1941, "rece": [1941, 1943], "reptile_step": 1941, "cost_fn": [1941, 1944], "reptil": [1941, 1944], "receivng": [1941, 1944], "all_nested_indic": 1945, "include_nest": [1945, 1946], "_index": [1945, 1946, 1957], "_base": [1945, 1946, 1956, 1957], "extra_nest_typ": [1945, 1946, 1947, 1956, 1957, 1958], "copy_nest": 1945, "to_mut": [1945, 1947, 1958], "mutabl": [1945, 1947, 1953, 1954, 1958, 1963, 1964], "copied_nest": [1945, 1947], "1337": [1945, 1947], "duplicate_array_index_chain": 1945, "insert_into_nest_at_index": 1945, "insert_into_nest_at_indic": 1945, "special_squar": [1945, 1952], "6666666666666667": [1945, 1952], "special_pow": [1945, 1952], "linear_model": [1945, 1952], "map_nest_at_index": 1945, "shallow": [1945, 1953, 1954, 1958, 1963, 1964], "_result": [1945, 1953, 1963], "hh": [1945, 1953], "map_nest_at_indic": 1945, "ub": [1945, 1954], "tb": [1945, 1954], "multi_index_nest": 1945, "nested_ani": 1945, "check_nest": [1945, 1956, 1957], "conditon": [1945, 1956, 1957], "nested_argwher": 1945, "stop_after_n_found": [1945, 1957], "nested_indic": [1945, 1957], "_depth": [1945, 1958], "_tuple_check_fn": [1945, 1958], "_list_check_fn": [1945, 1958], "_dict_check_fn": [1945, 1958], "nested_multi_map": 1945, "index_chain": [1945, 1959], "nest0": [1945, 1959], "unappli": [1945, 1959], "prune_empti": 1945, "prune_nest_at_index": 1945, "prune_nest_at_indic": 1945, "set_nest_at_index": 1945, "set_nest_at_indic": 1945, "111": [1945, 1964], "xyz": [1945, 1964], "pqr": [1945, 1964], "mini": [1965, 1966, 1969, 2173, 2174], "217": [1965, 1966, 1969], "uniformli": [1970, 1976, 1979, 1986, 1989], "22346112": [1970, 1981, 1984], "0922": [1970, 1981, 1984], "49671414": [1970, 1981, 1984], "1382643": [1970, 1981, 1984], "64768857": [1970, 1981, 1984], "5230298": [1970, 1981, 1984], "23415337": [1970, 1981, 1984], "23413695": [1970, 1981, 1984], "9213753": [1970, 1981, 1984], "12818667": [1970, 1981, 1984], "799": [1970, 1981, 1984], "469": [1970, 1981, 1984], "287": [1970, 1981, 1984], "0366": [1970, 1981, 1984], "26431865": [1970, 1986, 1989], "475": [1970, 1986, 1989], "878": [1970, 1986, 1989], "861": [1970, 1986, 1989], "929": [1970, 1986, 1989], "789": [1970, 1986, 1989], "519": [1970, 1986, 1989], "0435": [1970, 1986, 1989], "381": [1970, 1986, 1989], "4608004": [1970, 1986, 1989], "8458502": [1970, 1986, 1989], "67270088": [1970, 1986, 1989], "31128597": [1970, 1986, 1989], "x_j": [2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "fourth": [2023, 2024, 2028], "1141": [2023, 2024, 2028], "8101": [2023, 2024, 2028], "9298": [2023, 2024, 2028], "8460": [2023, 2024, 2028], "2119": [2023, 2024, 2028], "3519": [2023, 2024, 2028], "6252": [2023, 2024, 2028], "4033": [2023, 2024, 2028], "7443": [2023, 2024, 2028], "2577": [2023, 2024, 2028], "3707": [2023, 2024, 2028], "0545": [2023, 2024, 2028], "3238": [2023, 2024, 2028], "5944": [2023, 2024, 2028], "0775": [2023, 2024, 2028], "4327": [2023, 2024, 2028], "62519997": [2023, 2024, 2028], "40329999": [2023, 2024, 2028], "59439999": [2023, 2024, 2028], "74430001": [2023, 2024, 2028], "81010002": [2023, 2024, 2028], "84600002": [2023, 2024, 2028], "92979997": [2023, 2024, 2028], "39999998": [2023, 2029, 2033], "29999995": [2023, 2029, 2033], "einstein": [2060, 2071, 2074], "summat": [2060, 2071, 2074], "117": [2060, 2071, 2074], "sentinel": [2060, 2075, 2078, 2083, 2086], "90000004": [2060, 2079, 2082], "statistical_funct": [2060, 2092, 2095], "07472222": [2060, 2101, 2105], "00666667": [2060, 2101, 2105], "08966666": [2060, 2101, 2105], "simplicit": [2106, 2107, 2110, 2112, 2115], "nail": 2117, "funtion": 2117, "asset": 2117, "functiona": 2117, "scientist": 2117, "correl": 2117, "analyz": 2117, "ai": [2118, 2128, 2132], "colab": 2118, "interact": [2118, 2129, 2130, 2135], "sharp": 2118, "favorit": 2118, "jax_concat": 2118, "tf_concat": 2118, "np_concat": 2118, "torch_concat": 2118, "get_devic": 2118, "reduce_prod": 2118, "reduce_sum": 2118, "gradient_imag": 2118, "indices_wher": 2118, "bilinear_resampl": 2118, "stack_imag": 2118, "neural_net": 2118, "floormod": 2118, "articl": 2118, "lenton2021ivi": 2118, "lenton": 2118, "daniel": 2118, "pardo": 2118, "fabio": 2118, "falck": 2118, "fabian": 2118, "jame": 2118, "stephen": 2118, "clark": 2118, "ronald": 2118, "journal": 2118, "arxiv": 2118, "preprint": 2118, "2102": 2118, "02886": 2118, "add_array_spec": 2121, "fn_array_spec": 2121, "nested_arrai": [2124, 2125], "nestedarrai": 2124, "classmethod": [2124, 2125], "from_row_length": [2124, 2125], "row_length": [2124, 2125], "from_row_split": [2124, 2125], "row_split": [2124, 2125], "unbind": [2124, 2125], "conceptu": [2126, 2131], "broken": [2126, 2130], "tracer": 2126, "infrastructur": [2126, 2132, 2133], "vendor": [2126, 2132], "complimentari": [2126, 2136], "acycl": [2126, 2131], "insert_numb": 2127, "insert_t": 2127, "scaffold": [2128, 2136], "heart": 2128, "toolchain": [2128, 2133], "intermedi": [2128, 2129, 2130, 2131, 2136], "ir": [2128, 2131, 2136], "assembli": [2128, 2135, 2136], "idl": 2128, "middl": 2128, "emit": 2128, "gnu": [2128, 2133], "gcc": [2128, 2135], "broader": 2128, "heterogen": 2128, "aid": 2128, "coprocessor": 2128, "programm": [2128, 2135], "gate": 2128, "onednn": 2128, "awai": [2128, 2130], "sit": [2128, 2131, 2136], "tandem": 2128, "possess": 2128, "khrono": [2129, 2135], "appl": 2129, "coremltool": 2129, "albeit": 2129, "promin": 2130, "abbrevi": 2130, "laboratori": 2130, "proprietari": [2130, 2134, 2135], "mathwork": 2130, "commerci": 2130, "1984": 2130, "plot": 2130, "toolbox": 2130, "mupad": 2130, "simulink": 2130, "graphic": [2130, 2134, 2135], "simul": 2130, "million": [2130, 2133], "worldwid": 2130, "scienc": [2130, 2132], "econom": 2130, "2001": 2130, "scientif": 2130, "od": 2130, "solver": 2130, "cython": 2130, "friendli": 2130, "2002": 2130, "lua": 2130, "luajit": 2130, "idiap": 2130, "epfl": 2130, "2005": 2130, "numarrai": 2130, "cpython": 2130, "partli": 2130, "2007": 2130, "classif": 2130, "regress": [2130, 2137], "forest": 2130, "boost": 2130, "dbscan": 2130, "inbuilt": 2130, "esqu": 2130, "aesara": 2130, "2008": 2130, "datafram": 2130, "critic": [2130, 2136], "2012": 2130, "Its": 2130, "polymorph": 2130, "parallel": [2130, 2134, 2135], "mpi": 2130, "openmp": 2130, "glue": 2130, "jaot": 2130, "nasa": 2130, "cern": 2130, "climat": 2130, "allianc": 2130, "influenti": 2130, "2014": 2130, "analyt": [2130, 2132, 2136], "scala": 2130, "ship": 2130, "forgiv": 2130, "decemb": 2130, "announc": 2130, "transit": 2130, "mainten": 2130, "v7": 2130, "meaning": 2130, "2016": 2130, "imper": 2130, "amazon": 2130, "traction": 2130, "cognit": [2130, 2137], "toolkit": [2130, 2131, 2137], "grade": 2130, "realiz": 2130, "dnn": 2130, "cnn": 2130, "rnn": 2130, "stochast": [2130, 2175, 2180], "sgd": [2130, 2175], "backpropag": 2130, "succumb": 2130, "came": 2130, "monitor": 2130, "practition": [2130, 2134, 2135, 2136], "hobbyist": 2130, "tremend": 2130, "ecosystem": 2130, "gear": 2130, "batteri": 2130, "zygot": 2130, "jl": 2130, "workload": 2130, "daggerflux": 2130, "frontier": 2130, "hessian": 2130, "2018": 2130, "lightweight": [2130, 2137], "shortcom": 2130, "eas": 2130, "barrier": 2130, "inexperienc": 2130, "underdevelop": 2130, "fanat": 2130, "ounc": 2130, "infanc": 2130, "emerg": 2130, "nich": 2130, "introduct": 2130, "lite": 2130, "enterpris": 2130, "reinvent": [2130, 2132], "inertia": 2130, "haven": 2130, "creator": [2130, 2132], "paszk": 2130, "hi": 2130, "safeti": [2130, 2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2258, 2259], "bulk": 2130, "haskel": 2130, "dataflow": 2131, "distil": 2131, "essenc": [2131, 2136], "enclos": 2131, "scope": [2131, 2135], "trace_modul": 2131, "scriptfunct": 2131, "scriptmodul": [2131, 2142, 2145], "fake": 2131, "proxi": 2131, "graphmodul": 2131, "travi": 2132, "oliph": 2132, "leader": 2132, "cornerston": 2132, "numba": 2132, "numfocu": 2132, "pydata": 2132, "confer": 2132, "consult": 2132, "servic": 2132, "expertis": 2132, "devop": 2132, "mlop": 2132, "dashboard": 2132, "startup": 2132, "mlir": [2132, 2133, 2136], "Their": 2132, "held": 2132, "privileg": 2132, "presum": 2132, "llvm": [2132, 2135], "founder": 2132, "tvm": [2132, 2136], "sustain": 2132, "empow": 2132, "har": 2132, "burden": 2132, "benchmark": 2132, "convention": 2133, "precompil": 2133, "executor": 2133, "exploit": 2133, "fsf": 2133, "gpl": 2133, "biggest": [2133, 2136], "nvidia": [2134, 2135], "conduct": 2134, "throughput": 2134, "autotun": 2134, "consumpt": 2134, "gpgpu": 2134, "talk": 2135, "classic": 2135, "sycl": 2135, "dpc": 2135, "processor": 2135, "x86": 2135, "oneapi": 2135, "ia": 2135, "aka": 2135, "xeon": 2135, "gen9": 2135, "xe": 2135, "card": 2135, "arria": 2135, "gx": 2135, "fpga": 2135, "tune": [2135, 2136], "lofti": 2136, "ambit": 2136, "realm": 2136, "bedrock": 2136, "flux": 2136, "bite": 2136, "chew": 2136, "eagerpi": 2136, "tensorli": 2136, "thinc": 2136, "neuropod": 2136, "exhibit": 2136, "emploi": 2136, "fx": 2136, "retrain": 2136, "wider": 2136, "closer": 2136, "greatli": 2136, "challeng": 2136, "modular": 2136, "anywher": 2136, "theano": 2137, "plaidml": 2137, "partial_svd": 2137, "tucker_mode_dot": 2137, "excel": 2137, "subsystem": 2137, "geglu": 2139, "moduleconvert": [2142, 2171, 2172], "from_haiku_modul": [2142, 2143], "native_modul": [2142, 2143, 2146], "constructor_arg": [2142, 2143], "constructor_kwarg": [2142, 2143], "instance_arg": [2142, 2143], "instance_kwarg": [2142, 2143], "from_keras_modul": [2142, 2143], "from_torch_modul": [2142, 2143], "ivy_modul": [2142, 2143, 2144, 2145], "to_keras_modul": [2142, 2143], "to_torch_modul": [2142, 2143], "mytfmodul": 2142, "reappli": [2142, 2144], "__call__": [2142, 2144, 2159, 2170, 2171, 2172, 2195, 2216], "reli": [2142, 2144], "www": [2142, 2144], "masking_and_pad": [2142, 2144], "mytorchmodul": 2142, "recip": [2142, 2145], "silent": [2142, 2145], "native_module_class": [2142, 2146], "modulehelp": [2147, 2171, 2172], "check_submod_ret": [2147, 2148], "expected_submod_ret": [2147, 2148, 2171, 2172], "get_mod_kei": [2147, 2148], "top_mod": [2147, 2148], "mod_depth": [2147, 2148], "mod_height": [2147, 2148], "mod_with_top_mod_key_chain": [2147, 2148], "flatten_key_chain": [2147, 2148], "iimedi": [2147, 2148], "show_mod_in_top_mod": [2147, 2148], "upper_depth": [2147, 2148], "lower_depth": [2147, 2148], "show_structur": [2147, 2148], "this_repr": [2147, 2148], "show_v_in_top_v": [2147, 2148], "perspect": [2147, 2148], "top_v": [2147, 2148], "sub_mod": [2147, 2148], "show_v": [2147, 2148], "comopos": [2147, 2148], "enumer": [2147, 2148], "track_submod_call_ord": [2147, 2148, 2171, 2172], "track_submod_ret": [2147, 2148, 2171, 2172], "v_with_top_v_key_chain": [2147, 2148], "rectangular": [2149, 2150, 2153, 2154, 2157], "firstlayersiren": 2149, "siren": [2149, 2151], "distribt": [2149, 2151, 2152, 2156], "glorot": [2149, 2152], "xavier": [2149, 2152], "neuron": [2149, 2153, 2154, 2157], "w_1x_1": [2149, 2153], "w_2x_2": [2149, 2153], "w_nx_n": [2149, 2153], "w_i": [2149, 2153], "vanish": [2149, 2153], "pick": [2149, 2153], "kaimingnorm": 2149, "kaim": [2149, 2154], "he": [2149, 2154], "distibut": [2149, 2154], "center": [2149, 2154], "negative_slop": [2149, 2154], "fan": [2149, 2154, 2157], "propog": [2149, 2154, 2157], "proport": [2149, 2154], "Ones": 2149, "w0": [2149, 2156], "wlim": [2149, 2157], "predefin": [2149, 2157], "initialz": [2149, 2157], "fan_avg": [2149, 2157], "filter_s": [2159, 2160, 2161], "conv1dtranspos": 2159, "filter_shap": [2159, 2162, 2163, 2164, 2165, 2166], "conv2dtranspos": 2159, "conv3dtranspos": 2159, "depthwiseconv2d": 2159, "num_channel": [2159, 2166], "bernoul": [2159, 2167], "num_lay": [2159, 2168], "return_sequ": [2159, 2168], "return_st": [2159, 2168], "get_initial_st": [2159, 2168], "dens": [2159, 2169], "multiheadattent": 2159, "dropout_r": [2159, 2170], "context_dim": [2159, 2170], "with_to_q_fn": [2159, 2170], "with_to_kv_fn": [2159, 2170], "with_to_out_fn": [2159, 2170], "build_mod": [2159, 2170, 2171, 2172], "on_init": [2159, 2170, 2171, 2172], "store_var": [2171, 2172], "arg_stateful_idx": [2171, 2172], "kwarg_stateful_idx": [2171, 2172], "fallback_to_non_compil": [2171, 2172, 2175, 2179], "with_partial_v": [2171, 2172], "submod_depth": [2171, 2172], "submods_to_track": [2171, 2172], "varibl": [2171, 2172], "from_cal": [2171, 2172], "built_": [2171, 2172], "save_weight": [2171, 2172], "weights_path": [2171, 2172], "layernorm": 2173, "normalized_shap": [2173, 2174], "elementwise_affin": [2173, 2174], "trail": [2173, 2174], "init_on_first_step": [2175, 2179], "ignore_miss": [2175, 2179], "sub_modul": [2181, 2182], "nativevari": [2181, 2182], "ret_from_np": [2184, 2185], "assert_same_type_and_shap": 2184, "this_key_chain": [2184, 2186], "check_unsupported_devic": 2184, "input_devic": [2184, 2187], "all_as_kwargs_np": [2184, 2187, 2188, 2189, 2195, 2209, 2213, 2215], "check_unsupported_device_and_dtyp": 2184, "check_unsupported_dtyp": 2184, "test_unsupported_funct": 2184, "value_test": 2184, "ret_np_flat": [2184, 2191], "ret_np_from_gt_flat": [2184, 2191], "ret_from_np_flat": [2184, 2191], "available_framework": [2192, 2194], "ground_truth": 2192, "function_test": [2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217], "args_to_contain": 2195, "as_cont": 2195, "as_list": 2195, "convtru": 2195, "nativeclass": [2195, 2199], "create_args_kwarg": 2195, "args_np": [2195, 2200, 2209], "arg_np_val": [2195, 2200], "args_idx": [2195, 2200], "kwargs_np": [2195, 2200, 2209], "kwarg_np_val": [2195, 2200], "kwargs_idx": [2195, 2200], "container_flag": [2195, 2200, 2209, 2215, 2262, 2266, 2270, 2271, 2272, 2276], "empty_func": 2195, "flatten_and_to_np": 2195, "flatten_fw_and_to_np": 2195, "framework_compar": 2195, "get_frontend_ret": 2195, "get_ret_and_flattened_np_arrai": 2195, "gradient_incompatible_funct": 2195, "rtol_": [2195, 2209, 2214, 2215, 2216], "gradient_unsupported_dtyp": 2195, "kwargs_to_args_n_kwarg": 2195, "make_json_pick": 2195, "init_as_variable_flag": [2195, 2214, 2216, 2272, 2273, 2275], "init_num_positional_arg": [2195, 2214, 2216, 2272, 2273, 2275], "init_native_array_flag": [2195, 2214, 2216], "with_v": [2195, 2214, 2216], "ret_gt": [2195, 2214, 2215, 2216], "return_flat_np_arrai": [2195, 2215, 2216], "functiontestflag": [2195, 2215, 2262], "test_method": 2195, "class_nam": [2195, 2216], "init_with_v": [2195, 2216], "method_with_v": [2195, 2216], "device_": [2195, 2216], "method_as_variable_flag": [2195, 2216, 2272, 2273, 2275], "method_num_positional_arg": [2195, 2216, 2272, 2273, 2275], "method_native_array_flag": [2195, 2216], "method_container_flag": [2195, 2216, 2272, 2275], "tthe": [2195, 2216], "var_fn": 2195, "holder": 2218, "interruptedtest": 2218, "test_interrup": [2218, 2219], "baseexcept": [2218, 2219], "testdata": 2218, "supported_device_dtyp": [2218, 2220], "remove_all_current_framework": 2218, "setup_api_test": 2218, "test_data": [2218, 2222, 2223], "setup_frontend_test": 2218, "teardown_api_test": 2218, "teardown_frontend_test": 2218, "hypothesis_help": [2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259], "array_help": [2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240], "array_and_broadcastable_shap": 2227, "array_indices_axi": 2227, "indices_dtyp": [2227, 2230], "disable_random_axi": [2227, 2230], "axis_zero": [2227, 2230], "first_dimension_onli": [2227, 2230], "indices_same_dim": [2227, 2230], "65536": [2227, 2230], "abs_smallest_v": [2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257], "exclude_max": [2227, 2231, 2235, 2236, 2238, 2256, 2257], "small_abs_safety_factor": [2227, 2231, 2235, 2236, 2245, 2246, 2256, 2257, 2259], "subnorm": [2227, 2231, 2256, 2257], "0002": [2227, 2231, 2235, 2236, 2256, 2257, 2259], "arrays_and_ax": 2227, "return_dtyp": [2227, 2232], "force_int_axi": [2227, 2232, 2236], "arrays_for_pool": 2227, "min_dim": [2227, 2233, 2239], "max_dim": [2227, 2233, 2239], "min_sid": [2227, 2233, 2239], "max_sid": [2227, 2233, 2239], "allow_explicit_pad": [2227, 2233], "return_dil": [2227, 2233], "ret_shap": [2227, 2235, 2236], "array_api_dtyp": [2227, 2235, 2241, 2242], "37915": [2227, 2235], "6322": [2227, 2235], "26765": [2227, 2235], "12413": [2227, 2235], "26986": [2227, 2235], "34665": [2227, 2235], "000e": [2227, 2235], "711e": [2227, 2235], "100e": [2227, 2235], "40817": [2227, 2235], "56193": [2227, 2235], "29200": [2227, 2235], "5851": [2227, 2235], "9746": [2227, 2235], "9604645e": [2227, 2235], "192": [2227, 2235], "103": [2227, 2235], "41795": [2227, 2235], "1170789994": [2227, 2235], "44251": [2227, 2235], "44209": [2227, 2235], "433075925": [2227, 2235], "24791": [2227, 2235], "24691": [2227, 2235], "24892": [2227, 2235], "16711": [2227, 2235], "972": [2227, 2235], "15357": [2227, 2235], "72057594037927936": [2227, 2235], "min_axi": [2227, 2236], "max_axi": [2227, 2236], "valid_axi": [2227, 2236], "allow_neg_ax": [2227, 2236], "min_axes_s": [2227, 2236], "max_axes_s": [2227, 2236], "force_tuple_axi": [2227, 2236], "29788": [2227, 2236], "62222885e": [2227, 2236], "68281172e": [2227, 2236], "257j": [2227, 2236], "40129846e": [2227, 2236], "90000000e": [2227, 2236], "63426649e": [2227, 2236], "50000000e": [2227, 2236], "91931887e": [2227, 2236], "29488e": [2227, 2236], "14361019e": [2227, 2236], "96046448e": [2227, 2236], "12445": [2227, 2236], "list_of_s": 2227, "00001": [2227, 2238], "999999999999999": [2227, 2238], "9394938006792373": [2227, 2238], "mutually_broadcastable_shap": 2227, "num_shap": [2227, 2239], "base_shap": [2227, 2239], "dtype_help": [2241, 2242, 2243, 2244], "get_castable_dtyp": 2241, "castabl": [2241, 2243], "prune_funct": [2241, 2244], "signed_integ": [2241, 2244], "real_and_complex": [2241, 2244], "float_and_complex": [2241, 2244], "incas": [2241, 2244], "general_help": [2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255], "apply_safety_factor": 2245, "embedding_help": 2245, "allow_neg": [2245, 2248], "force_tupl": [2245, 2248], "force_int": [2245, 2248], "matrix_is_st": 2245, "cond_limit": [2245, 2252], "computation": [2245, 2252], "condition_index": [2245, 2252], "ill": [2245, 2252], "prone": [2245, 2252], "thumb": [2245, 2252], "gradual": [2245, 2252], "decreas": [2245, 2252], "multicollinear": [2245, 2252], "tell": [2245, 2252], "x_and_filt": 2245, "number_help": [2256, 2257, 2258, 2259], "safety_factor": [2256, 2258], "frontendmethoddata": 2260, "ivy_init_modul": [2260, 2261], "framework_init_modul": [2260, 2261], "init_nam": [2260, 2261], "struct": 2261, "test_parameter_flag": [2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271], "frontendfunctiontestflag": 2262, "frontendmethodtestflag": 2262, "methodtestflag": 2262, "build_flag": 2262, "frontend_function_flag": 2262, "frontend_method_flag": 2262, "function_flag": 2262, "testing_help": [2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279], "init_native_arrai": [2272, 2273, 2275], "method_native_arrai": [2272, 2273, 2275], "_given_kwarg": [2272, 2273, 2274, 2275, 2276], "test_inplac": [2272, 2274], "init_container_flag": [2272, 2275], "test_instance_method": [2272, 2276], "num_positional_args_method": 2272, "ast_help": [2282, 2283, 2284, 2285], "importtransform": 2282, "nodetransform": [2282, 2283], "impersonate_import": [2282, 2283], "visit_import": [2282, 2283], "visit_importfrom": [2282, 2283], "ivyload": 2282, "exec_modul": [2282, 2284], "ivypathfind": 2282, "metapathfind": [2282, 2285], "find_spec": [2282, 2285], "fullnam": [2282, 2285], "contextmanag": 2286, "choose_random_backend": 2286, "clear_backend_stack": 2286, "convert_from_numpy_to_target_backend": 2286, "variable_id": [2286, 2290, 2291], "numpy_obj": [2286, 2290, 2291], "convert_from_source_backend_to_numpi": 2286, "global_backend": [2286, 2292], "fn_name_from_version_specific_fn_nam": 2286, "ivy_jax": [2286, 2294], "prevent_access_loc": 2286, "set_backend_to_specific_vers": 2286, "set_jax_backend": 2286, "set_numpy_backend": 2286, "set_tensorflow_backend": 2286, "set_torch_backend": 2286, "with_backend": 2286, "dynamic_import": [2304, 2305]}, "objects": {"ivy": [[0, 0, 0, "-", "_version"], [1, 0, 0, "-", "assertions"], [172, 0, 0, "-", "func_wrapper"], [2121, 0, 0, "-", "inspection"], [2138, 0, 0, "-", "stateful"], [2306, 0, 0, "-", "verbosity"]], "ivy.array": [[36, 0, 0, "-", "activations"], [38, 0, 0, "-", "array"], [40, 0, 0, "-", "conversions"], [45, 0, 0, "-", "creation"], [47, 0, 0, "-", "data_type"], [49, 0, 0, "-", "device"], [51, 0, 0, "-", "elementwise"], [54, 0, 0, "-", "general"], [56, 0, 0, "-", "gradients"], [58, 0, 0, "-", "image"], [60, 0, 0, "-", "layers"], [62, 0, 0, "-", "linear_algebra"], [64, 0, 0, "-", "losses"], [66, 0, 0, "-", "manipulation"], [68, 0, 0, "-", "norms"], [70, 0, 0, "-", "random"], [72, 0, 0, "-", "searching"], [74, 0, 0, "-", "set"], [76, 0, 0, "-", "sorting"], [78, 0, 0, "-", "statistical"], [80, 0, 0, "-", "utility"], [82, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[37, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[37, 2, 1, "", "gelu"], [37, 2, 1, "", "leaky_relu"], [37, 2, 1, "", "log_softmax"], [37, 2, 1, "", "mish"], [37, 2, 1, "", "relu"], [37, 2, 1, "", "sigmoid"], [37, 2, 1, "", "softmax"], [37, 2, 1, "", "softplus"]], "ivy.array.array": [[39, 1, 1, "", "Array"]], "ivy.array.array.Array": [[39, 3, 1, "", "T"], [39, 2, 1, "", "__abs__"], [39, 2, 1, "", "__add__"], [39, 2, 1, "", "__eq__"], [39, 2, 1, "", "__ge__"], [39, 2, 1, "", "__gt__"], [39, 2, 1, "", "__init__"], [39, 2, 1, "", "__le__"], [39, 2, 1, "", "__lt__"], [39, 2, 1, "", "__ne__"], [39, 2, 1, "", "__pow__"], [39, 2, 1, "", "__radd__"], [39, 2, 1, "", "__rrshift__"], [39, 2, 1, "", "__rshift__"], [39, 2, 1, "", "__rsub__"], [39, 2, 1, "", "__sub__"], [39, 2, 1, "", "__truediv__"], [39, 2, 1, "", "__xor__"], [39, 2, 1, "", "arange"], [39, 2, 1, "", "arg_info"], [39, 2, 1, "", "arg_names"], [39, 2, 1, "", "args_to_ivy"], [39, 2, 1, "", "args_to_native"], [39, 2, 1, "", "array"], [39, 2, 1, "", "as_ivy_dev"], [39, 2, 1, "", "as_ivy_dtype"], [39, 2, 1, "", "as_native_dev"], [39, 2, 1, "", "as_native_dtype"], [39, 2, 1, "", "asarray_handle_nestable"], [39, 2, 1, "", "asarray_infer_device"], [39, 2, 1, "", "asarray_to_native_arrays_and_back"], [39, 2, 1, "", "cache_fn"], [39, 2, 1, "", "check_float"], [39, 2, 1, "", "clear_mem_on_dev"], [39, 2, 1, "", "closest_valid_dtype"], [39, 2, 1, "", "container_types"], [39, 2, 1, "", "conv"], [39, 2, 1, "", "conv_general_dilated"], [39, 2, 1, "", "conv_general_transpose"], [39, 2, 1, "", "current_backend"], [39, 2, 1, "", "current_backend_str"], [39, 3, 1, "", "data"], [39, 2, 1, "", "default_complex_dtype"], [39, 2, 1, "", "default_device"], [39, 2, 1, "", "default_dtype"], [39, 2, 1, "", "default_float_dtype"], [39, 2, 1, "", "default_int_dtype"], [39, 2, 1, "", "default_uint_dtype"], [39, 2, 1, "", "deserialize"], [39, 2, 1, "", "dev_util"], [39, 3, 1, "", "device"], [39, 3, 1, "", "dtype"], [39, 2, 1, "", "dtype_bits"], [39, 3, 1, "", "dynamic_backend"], [39, 2, 1, "", "empty"], [39, 2, 1, "", "execute_with_gradients"], [39, 2, 1, "", "eye"], [39, 2, 1, "", "full"], [39, 2, 1, "", "function_supported_devices"], [39, 2, 1, "", "function_supported_devices_and_dtypes"], [39, 2, 1, "", "function_supported_dtypes"], [39, 2, 1, "", "function_unsupported_devices"], [39, 2, 1, "", "function_unsupported_devices_and_dtypes"], [39, 2, 1, "", "function_unsupported_dtypes"], [39, 2, 1, "", "get"], [39, 2, 1, "", "get_all_arrays_in_memory"], [39, 2, 1, "", "get_all_ivy_arrays_on_dev"], [39, 2, 1, "", "get_array_mode"], [39, 2, 1, "", "get_exception_trace_mode"], [39, 2, 1, "", "get_item"], [39, 2, 1, "", "get_min_base"], [39, 2, 1, "", "get_min_denominator"], [39, 2, 1, "", "get_nestable_mode"], [39, 2, 1, "", "get_queue_timeout"], [39, 2, 1, "", "get_referrers_recursive"], [39, 2, 1, "", "get_show_func_wrapper_trace_mode"], [39, 2, 1, "", "get_tmp_dir"], [39, 2, 1, "", "gpu_is_available"], [39, 2, 1, "", "grad"], [39, 2, 1, "", "handle_array_function"], [39, 2, 1, "", "handle_array_like_without_promotion"], [39, 2, 1, "", "handle_exceptions"], [39, 2, 1, "", "handle_nestable"], [39, 2, 1, "", "handle_out_argument"], [39, 2, 1, "", "infer_default_dtype"], [39, 2, 1, "", "infer_device"], [39, 2, 1, "", "infer_dtype"], [39, 2, 1, "", "inplace_arrays_supported"], [39, 2, 1, "", "inplace_variables_supported"], [39, 2, 1, "", "inputs_to_ivy_arrays"], [39, 2, 1, "", "inputs_to_native_arrays"], [39, 2, 1, "", "integer_arrays_to_float"], [39, 2, 1, "", "invalid_dtype"], [39, 2, 1, "", "is_complex_dtype"], [39, 2, 1, "", "isscalar"], [39, 2, 1, "", "jac"], [39, 3, 1, "", "mT"], [39, 2, 1, "", "match_kwargs"], [39, 2, 1, "", "multiprocessing"], [39, 3, 1, "", "ndim"], [39, 2, 1, "", "normalize_axis_tuple"], [39, 2, 1, "", "num_arrays_in_memory"], [39, 2, 1, "", "num_cpu_cores"], [39, 2, 1, "", "num_gpus"], [39, 2, 1, "", "num_ivy_arrays_on_dev"], [39, 2, 1, "", "ones"], [39, 2, 1, "", "outputs_to_ivy_arrays"], [39, 2, 1, "", "percent_used_mem_on_dev"], [39, 2, 1, "", "print_all_arrays_in_memory"], [39, 2, 1, "", "print_all_ivy_arrays_on_dev"], [39, 2, 1, "", "promote_types"], [39, 2, 1, "", "promote_types_of_inputs"], [39, 2, 1, "", "seed"], [39, 2, 1, "", "set_array_mode"], [39, 2, 1, "", "set_default_complex_dtype"], [39, 2, 1, "", "set_default_device"], [39, 2, 1, "", "set_default_dtype"], [39, 2, 1, "", "set_default_float_dtype"], [39, 2, 1, "", "set_default_int_dtype"], [39, 2, 1, "", "set_default_uint_dtype"], [39, 2, 1, "", "set_exception_trace_mode"], [39, 2, 1, "", "set_min_base"], [39, 2, 1, "", "set_min_denominator"], [39, 2, 1, "", "set_nestable_mode"], [39, 2, 1, "", "set_queue_timeout"], [39, 2, 1, "", "set_shape_array_mode"], [39, 2, 1, "", "set_show_func_wrapper_trace_mode"], [39, 2, 1, "", "set_split_factor"], [39, 2, 1, "", "set_tmp_dir"], [39, 2, 1, "", "set_with_grads"], [39, 3, 1, "", "shape"], [39, 2, 1, "", "shape_array_mode"], [39, 3, 1, "", "size"], [39, 2, 1, "", "split_factor"], [39, 2, 1, "", "split_func_call"], [39, 2, 1, "", "to_ivy"], [39, 2, 1, "", "to_ivy_shape"], [39, 2, 1, "", "to_native"], [39, 2, 1, "", "to_native_arrays_and_back"], [39, 2, 1, "", "to_native_shape"], [39, 2, 1, "", "total_mem_on_dev"], [39, 2, 1, "", "tpu_is_available"], [39, 2, 1, "", "try_else_none"], [39, 2, 1, "", "type_promote_arrays"], [39, 2, 1, "", "unset_array_mode"], [39, 2, 1, "", "unset_default_complex_dtype"], [39, 2, 1, "", "unset_default_device"], [39, 2, 1, "", "unset_default_dtype"], [39, 2, 1, "", "unset_default_float_dtype"], [39, 2, 1, "", "unset_default_int_dtype"], [39, 2, 1, "", "unset_default_uint_dtype"], [39, 2, 1, "", "unset_exception_trace_mode"], [39, 2, 1, "", "unset_nestable_mode"], [39, 2, 1, "", "unset_queue_timeout"], [39, 2, 1, "", "unset_shape_array_mode"], [39, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [39, 2, 1, "", "unset_with_grads"], [39, 2, 1, "", "used_mem_on_dev"], [39, 2, 1, "", "valid_dtype"], [39, 2, 1, "", "value_and_grad"], [39, 2, 1, "", "vmap"], [39, 2, 1, "", "with_grads"], [39, 2, 1, "", "wraps"], [39, 2, 1, "", "zeros"]], "ivy.array.array_methods": [[467, 4, 1, "", "abs"], [472, 4, 1, "", "acos"], [477, 4, 1, "", "acosh"], [1605, 4, 1, "", "adam_step"], [1609, 4, 1, "", "adam_update"], [482, 4, 1, "", "add"], [794, 4, 1, "", "adjoint"], [2108, 4, 1, "", "all"], [1409, 4, 1, "", "all_equal"], [799, 4, 1, "", "allclose"], [804, 4, 1, "", "angle"], [2113, 4, 1, "", "any"], [1999, 4, 1, "", "argmax"], [2004, 4, 1, "", "argmin"], [2046, 4, 1, "", "argsort"], [2009, 4, 1, "", "argwhere"], [1416, 4, 1, "", "array_equal"], [245, 4, 1, "", "asarray"], [487, 4, 1, "", "asin"], [492, 4, 1, "", "asinh"], [1421, 4, 1, "", "assert_supports_inplace"], [334, 4, 1, "", "astype"], [497, 4, 1, "", "atan"], [502, 4, 1, "", "atan2"], [507, 4, 1, "", "atanh"], [809, 4, 1, "", "atleast_1d"], [814, 4, 1, "", "atleast_2d"], [819, 4, 1, "", "atleast_3d"], [824, 4, 1, "", "avg_pool1d"], [829, 4, 1, "", "avg_pool2d"], [834, 4, 1, "", "avg_pool3d"], [839, 4, 1, "", "bernoulli"], [844, 4, 1, "", "beta"], [850, 4, 1, "", "binarizer"], [1846, 4, 1, "", "binary_cross_entropy"], [512, 4, 1, "", "bitwise_and"], [517, 4, 1, "", "bitwise_invert"], [522, 4, 1, "", "bitwise_left_shift"], [527, 4, 1, "", "bitwise_or"], [532, 4, 1, "", "bitwise_right_shift"], [537, 4, 1, "", "bitwise_xor"], [339, 4, 1, "", "broadcast_arrays"], [344, 4, 1, "", "broadcast_to"], [349, 4, 1, "", "can_cast"], [542, 4, 1, "", "ceil"], [1706, 4, 1, "", "cholesky"], [1862, 4, 1, "", "clip"], [1427, 4, 1, "", "clip_matrix_norm"], [1432, 4, 1, "", "clip_vector_norm"], [1867, 4, 1, "", "concat"], [1872, 4, 1, "", "constant_pad"], [1643, 4, 1, "", "conv1d"], [1648, 4, 1, "", "conv1d_transpose"], [1653, 4, 1, "", "conv2d"], [1658, 4, 1, "", "conv2d_transpose"], [1663, 4, 1, "", "conv3d"], [1668, 4, 1, "", "conv3d_transpose"], [252, 4, 1, "", "copy_array"], [866, 4, 1, "", "copysign"], [871, 4, 1, "", "corrcoef"], [547, 4, 1, "", "cos"], [552, 4, 1, "", "cosh"], [876, 4, 1, "", "count_nonzero"], [1711, 4, 1, "", "cross"], [1851, 4, 1, "", "cross_entropy"], [2062, 4, 1, "", "cumprod"], [2067, 4, 1, "", "cumsum"], [893, 4, 1, "", "dct"], [1439, 4, 1, "", "default"], [557, 4, 1, "", "deg2rad"], [1675, 4, 1, "", "depthwise_conv2d"], [1716, 4, 1, "", "det"], [438, 4, 1, "", "dev"], [1721, 4, 1, "", "diag"], [903, 4, 1, "", "diagflat"], [1726, 4, 1, "", "diagonal"], [908, 4, 1, "", "diff"], [913, 4, 1, "", "dirichlet"], [562, 4, 1, "", "divide"], [1680, 4, 1, "", "dropout"], [919, 4, 1, "", "dsplit"], [924, 4, 1, "", "dstack"], [929, 4, 1, "", "eig"], [1732, 4, 1, "", "eigh"], [934, 4, 1, "", "eigvals"], [1737, 4, 1, "", "eigvalsh"], [1442, 4, 1, "", "einops_rearrange"], [1447, 4, 1, "", "einops_reduce"], [1452, 4, 1, "", "einops_repeat"], [2072, 4, 1, "", "einsum"], [968, 4, 1, "", "embedding"], [256, 4, 1, "", "empty_like"], [567, 4, 1, "", "equal"], [572, 4, 1, "", "erf"], [1457, 4, 1, "", "exists"], [577, 4, 1, "", "exp"], [973, 4, 1, "", "exp2"], [978, 4, 1, "", "expand"], [1877, 4, 1, "", "expand_dims"], [582, 4, 1, "", "expm1"], [983, 4, 1, "", "eye_like"], [988, 4, 1, "", "fft"], [370, 4, 1, "", "finfo"], [993, 4, 1, "", "fix"], [998, 4, 1, "", "flatten"], [1882, 4, 1, "", "flip"], [1003, 4, 1, "", "fliplr"], [1008, 4, 1, "", "flipud"], [1013, 4, 1, "", "float_power"], [587, 4, 1, "", "floor"], [592, 4, 1, "", "floor_divide"], [1018, 4, 1, "", "fmax"], [1023, 4, 1, "", "fmin"], [1028, 4, 1, "", "fmod"], [1460, 4, 1, "", "fourier_encode"], [264, 4, 1, "", "from_dlpack"], [270, 4, 1, "", "full_like"], [1033, 4, 1, "", "gamma"], [1467, 4, 1, "", "gather"], [1472, 4, 1, "", "gather_nd"], [1036, 4, 1, "", "gcd"], [192, 4, 1, "", "gelu"], [1484, 4, 1, "", "get_num_dims"], [1043, 4, 1, "", "gradient"], [1615, 4, 1, "", "gradient_descent_update"], [597, 4, 1, "", "greater"], [602, 4, 1, "", "greater_equal"], [1493, 4, 1, "", "has_nans"], [1058, 4, 1, "", "heaviside"], [1063, 4, 1, "", "hsplit"], [1068, 4, 1, "", "hstack"], [1073, 4, 1, "", "hypot"], [1078, 4, 1, "", "i0"], [1083, 4, 1, "", "ifft"], [381, 4, 1, "", "iinfo"], [1088, 4, 1, "", "imag"], [1742, 4, 1, "", "inner"], [1499, 4, 1, "", "inplace_decrement"], [1504, 4, 1, "", "inplace_increment"], [1509, 4, 1, "", "inplace_update"], [1093, 4, 1, "", "instance_norm"], [1099, 4, 1, "", "interpolate"], [1747, 4, 1, "", "inv"], [1515, 4, 1, "", "is_array"], [388, 4, 1, "", "is_bool_dtype"], [397, 4, 1, "", "is_float_dtype"], [402, 4, 1, "", "is_int_dtype"], [1520, 4, 1, "", "is_ivy_array"], [1525, 4, 1, "", "is_ivy_container"], [1528, 4, 1, "", "is_native_array"], [407, 4, 1, "", "is_uint_dtype"], [1107, 4, 1, "", "isclose"], [607, 4, 1, "", "isfinite"], [1112, 4, 1, "", "isin"], [612, 4, 1, "", "isinf"], [617, 4, 1, "", "isnan"], [622, 4, 1, "", "isreal"], [1125, 4, 1, "", "kron"], [1130, 4, 1, "", "l2_normalize"], [1620, 4, 1, "", "lamb_update"], [1624, 4, 1, "", "lars_update"], [1967, 4, 1, "", "layer_norm"], [1155, 4, 1, "", "lcm"], [198, 4, 1, "", "leaky_relu"], [627, 4, 1, "", "less"], [632, 4, 1, "", "less_equal"], [1160, 4, 1, "", "lexsort"], [1685, 4, 1, "", "linear"], [275, 4, 1, "", "linspace"], [637, 4, 1, "", "log"], [642, 4, 1, "", "log10"], [647, 4, 1, "", "log1p"], [652, 4, 1, "", "log2"], [203, 4, 1, "", "log_softmax"], [657, 4, 1, "", "logaddexp"], [1172, 4, 1, "", "logaddexp2"], [662, 4, 1, "", "logical_and"], [667, 4, 1, "", "logical_not"], [672, 4, 1, "", "logical_or"], [677, 4, 1, "", "logical_xor"], [1177, 4, 1, "", "logit"], [280, 4, 1, "", "logspace"], [1184, 4, 1, "", "lp_normalize"], [1690, 4, 1, "", "lstm_update"], [1752, 4, 1, "", "matmul"], [1213, 4, 1, "", "matrix_exp"], [1757, 4, 1, "", "matrix_norm"], [1762, 4, 1, "", "matrix_power"], [1767, 4, 1, "", "matrix_rank"], [1772, 4, 1, "", "matrix_transpose"], [2076, 4, 1, "", "max"], [1218, 4, 1, "", "max_pool1d"], [1223, 4, 1, "", "max_pool2d"], [1228, 4, 1, "", "max_pool3d"], [682, 4, 1, "", "maximum"], [2080, 4, 1, "", "mean"], [1233, 4, 1, "", "median"], [285, 4, 1, "", "meshgrid"], [2084, 4, 1, "", "min"], [687, 4, 1, "", "minimum"], [208, 4, 1, "", "mish"], [1239, 4, 1, "", "moveaxis"], [1244, 4, 1, "", "msort"], [1695, 4, 1, "", "multi_head_attention"], [1972, 4, 1, "", "multinomial"], [692, 4, 1, "", "multiply"], [1249, 4, 1, "", "nan_to_num"], [1254, 4, 1, "", "nanmean"], [1259, 4, 1, "", "nanmedian"], [1264, 4, 1, "", "nansum"], [290, 4, 1, "", "native_array"], [697, 4, 1, "", "negative"], [1274, 4, 1, "", "nextafter"], [2014, 4, 1, "", "nonzero"], [702, 4, 1, "", "not_equal"], [295, 4, 1, "", "one_hot"], [303, 4, 1, "", "ones_like"], [1628, 4, 1, "", "optimizer_update"], [1777, 4, 1, "", "outer"], [1283, 4, 1, "", "pad"], [1887, 4, 1, "", "permute_dims"], [1782, 4, 1, "", "pinv"], [1290, 4, 1, "", "poisson"], [707, 4, 1, "", "positive"], [712, 4, 1, "", "pow"], [1296, 4, 1, "", "prelu"], [2088, 4, 1, "", "prod"], [1787, 4, 1, "", "qr"], [1301, 4, 1, "", "quantile"], [717, 4, 1, "", "rad2deg"], [1977, 4, 1, "", "randint"], [1982, 4, 1, "", "random_normal"], [1987, 4, 1, "", "random_uniform"], [1312, 4, 1, "", "real"], [722, 4, 1, "", "reciprocal"], [213, 4, 1, "", "relu"], [727, 4, 1, "", "remainder"], [1892, 4, 1, "", "repeat"], [1897, 4, 1, "", "reshape"], [414, 4, 1, "", "result_type"], [1902, 4, 1, "", "roll"], [1317, 4, 1, "", "rot90"], [732, 4, 1, "", "round"], [1700, 4, 1, "", "scaled_dot_product_attention"], [1538, 4, 1, "", "scatter_flat"], [1543, 4, 1, "", "scatter_nd"], [2051, 4, 1, "", "searchsorted"], [1993, 4, 1, "", "shuffle"], [218, 4, 1, "", "sigmoid"], [737, 4, 1, "", "sign"], [1324, 4, 1, "", "signbit"], [742, 4, 1, "", "sin"], [1329, 4, 1, "", "sinc"], [747, 4, 1, "", "sinh"], [1792, 4, 1, "", "slogdet"], [223, 4, 1, "", "softmax"], [228, 4, 1, "", "softplus"], [1797, 4, 1, "", "solve"], [2056, 4, 1, "", "sort"], [1856, 4, 1, "", "sparse_cross_entropy"], [1907, 4, 1, "", "split"], [752, 4, 1, "", "sqrt"], [757, 4, 1, "", "square"], [1912, 4, 1, "", "squeeze"], [1559, 4, 1, "", "stable_divide"], [1564, 4, 1, "", "stable_pow"], [1917, 4, 1, "", "stack"], [2093, 4, 1, "", "std"], [1634, 4, 1, "", "stop_gradient"], [763, 4, 1, "", "subtract"], [2098, 4, 1, "", "sum"], [1570, 4, 1, "", "supports_inplace_updates"], [1803, 4, 1, "", "svd"], [1808, 4, 1, "", "svdvals"], [1923, 4, 1, "", "swapaxes"], [1352, 4, 1, "", "take_along_axis"], [768, 4, 1, "", "tan"], [773, 4, 1, "", "tanh"], [1816, 4, 1, "", "tensorsolve"], [1357, 4, 1, "", "thresholded_relu"], [1928, 4, 1, "", "tile"], [458, 4, 1, "", "to_device"], [1576, 4, 1, "", "to_list"], [1581, 4, 1, "", "to_numpy"], [1586, 4, 1, "", "to_scalar"], [1362, 4, 1, "", "top_k"], [1821, 4, 1, "", "trace"], [1366, 4, 1, "", "trapz"], [309, 4, 1, "", "tril"], [314, 4, 1, "", "triu"], [778, 4, 1, "", "trunc"], [783, 4, 1, "", "trunc_divide"], [2026, 4, 1, "", "unique_all"], [2031, 4, 1, "", "unique_counts"], [2036, 4, 1, "", "unique_inverse"], [2041, 4, 1, "", "unique_values"], [1378, 4, 1, "", "unravel_index"], [1933, 4, 1, "", "unstack"], [1598, 4, 1, "", "value_is_nan"], [1826, 4, 1, "", "vander"], [2103, 4, 1, "", "var"], [1831, 4, 1, "", "vecdot"], [1836, 4, 1, "", "vector_norm"], [1841, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1388, 4, 1, "", "vsplit"], [1393, 4, 1, "", "vstack"], [2020, 4, 1, "", "where"], [1398, 4, 1, "", "xlogy"], [1938, 4, 1, "", "zero_pad"], [322, 4, 1, "", "zeros_like"], [1403, 4, 1, "", "zeta"]], "ivy.array.conversions": [[41, 4, 1, "", "args_to_ivy"], [42, 4, 1, "", "args_to_native"], [43, 4, 1, "", "to_ivy"], [44, 4, 1, "", "to_native"]], "ivy.array.creation": [[46, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[46, 2, 1, "", "asarray"], [46, 2, 1, "", "copy_array"], [46, 2, 1, "", "empty_like"], [46, 2, 1, "", "from_dlpack"], [46, 2, 1, "", "full_like"], [46, 2, 1, "", "linspace"], [46, 2, 1, "", "logspace"], [46, 2, 1, "", "meshgrid"], [46, 2, 1, "", "native_array"], [46, 2, 1, "", "one_hot"], [46, 2, 1, "", "ones_like"], [46, 2, 1, "", "tril"], [46, 2, 1, "", "triu"], [46, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[48, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[48, 2, 1, "", "astype"], [48, 2, 1, "", "broadcast_arrays"], [48, 2, 1, "", "broadcast_to"], [48, 2, 1, "", "can_cast"], [48, 2, 1, "", "dtype"], [48, 2, 1, "", "finfo"], [48, 2, 1, "", "iinfo"], [48, 2, 1, "", "is_bool_dtype"], [48, 2, 1, "", "is_float_dtype"], [48, 2, 1, "", "is_int_dtype"], [48, 2, 1, "", "is_uint_dtype"], [48, 2, 1, "", "result_type"]], "ivy.array.device": [[50, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[50, 2, 1, "", "dev"], [50, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[52, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[52, 2, 1, "", "abs"], [52, 2, 1, "", "acos"], [52, 2, 1, "", "acosh"], [52, 2, 1, "", "add"], [52, 2, 1, "", "asin"], [52, 2, 1, "", "asinh"], [52, 2, 1, "", "atan"], [52, 2, 1, "", "atan2"], [52, 2, 1, "", "atanh"], [52, 2, 1, "", "bitwise_and"], [52, 2, 1, "", "bitwise_invert"], [52, 2, 1, "", "bitwise_left_shift"], [52, 2, 1, "", "bitwise_or"], [52, 2, 1, "", "bitwise_right_shift"], [52, 2, 1, "", "bitwise_xor"], [52, 2, 1, "", "ceil"], [52, 2, 1, "", "cos"], [52, 2, 1, "", "cosh"], [52, 2, 1, "", "deg2rad"], [52, 2, 1, "", "divide"], [52, 2, 1, "", "equal"], [52, 2, 1, "", "erf"], [52, 2, 1, "", "exp"], [52, 2, 1, "", "expm1"], [52, 2, 1, "", "floor"], [52, 2, 1, "", "floor_divide"], [52, 2, 1, "", "greater"], [52, 2, 1, "", "greater_equal"], [52, 2, 1, "", "isfinite"], [52, 2, 1, "", "isinf"], [52, 2, 1, "", "isnan"], [52, 2, 1, "", "isreal"], [52, 2, 1, "", "less"], [52, 2, 1, "", "less_equal"], [52, 2, 1, "", "log"], [52, 2, 1, "", "log10"], [52, 2, 1, "", "log1p"], [52, 2, 1, "", "log2"], [52, 2, 1, "", "logaddexp"], [52, 2, 1, "", "logical_and"], [52, 2, 1, "", "logical_not"], [52, 2, 1, "", "logical_or"], [52, 2, 1, "", "logical_xor"], [52, 2, 1, "", "maximum"], [52, 2, 1, "", "minimum"], [52, 2, 1, "", "multiply"], [52, 2, 1, "", "negative"], [52, 2, 1, "", "not_equal"], [52, 2, 1, "", "positive"], [52, 2, 1, "", "pow"], [52, 2, 1, "", "rad2deg"], [52, 2, 1, "", "reciprocal"], [52, 2, 1, "", "remainder"], [52, 2, 1, "", "round"], [52, 2, 1, "", "sign"], [52, 2, 1, "", "sin"], [52, 2, 1, "", "sinh"], [52, 2, 1, "", "sqrt"], [52, 2, 1, "", "square"], [52, 2, 1, "", "subtract"], [52, 2, 1, "", "tan"], [52, 2, 1, "", "tanh"], [52, 2, 1, "", "trunc"], [52, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[53, 1, 1, "", "ArrayWithActivationsExperimental"], [53, 1, 1, "", "ArrayWithConversionsExperimental"], [53, 1, 1, "", "ArrayWithCreationExperimental"], [53, 1, 1, "", "ArrayWithData_typeExperimental"], [53, 1, 1, "", "ArrayWithDeviceExperimental"], [53, 1, 1, "", "ArrayWithElementWiseExperimental"], [53, 1, 1, "", "ArrayWithGeneralExperimental"], [53, 1, 1, "", "ArrayWithGradientsExperimental"], [53, 1, 1, "", "ArrayWithImageExperimental"], [53, 1, 1, "", "ArrayWithLayersExperimental"], [53, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [53, 1, 1, "", "ArrayWithLossesExperimental"], [53, 1, 1, "", "ArrayWithManipulationExperimental"], [53, 1, 1, "", "ArrayWithNormsExperimental"], [53, 1, 1, "", "ArrayWithRandomExperimental"], [53, 1, 1, "", "ArrayWithSearchingExperimental"], [53, 1, 1, "", "ArrayWithSetExperimental"], [53, 1, 1, "", "ArrayWithSortingExperimental"], [53, 1, 1, "", "ArrayWithStatisticalExperimental"], [53, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithActivationsExperimental": [[53, 2, 1, "", "logit"], [53, 2, 1, "", "prelu"], [53, 2, 1, "", "thresholded_relu"]], "ivy.array.experimental.ArrayWithCreationExperimental": [[53, 2, 1, "", "eye_like"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[53, 2, 1, "", "allclose"], [53, 2, 1, "", "angle"], [53, 2, 1, "", "binarizer"], [53, 2, 1, "", "copysign"], [53, 2, 1, "", "count_nonzero"], [53, 2, 1, "", "diff"], [53, 2, 1, "", "exp2"], [53, 2, 1, "", "fix"], [53, 2, 1, "", "float_power"], [53, 2, 1, "", "fmax"], [53, 2, 1, "", "fmin"], [53, 2, 1, "", "fmod"], [53, 2, 1, "", "gcd"], [53, 2, 1, "", "gradient"], [53, 2, 1, "", "hypot"], [53, 2, 1, "", "imag"], [53, 2, 1, "", "isclose"], [53, 2, 1, "", "lcm"], [53, 2, 1, "", "logaddexp2"], [53, 2, 1, "", "nan_to_num"], [53, 2, 1, "", "nansum"], [53, 2, 1, "", "nextafter"], [53, 2, 1, "", "real"], [53, 2, 1, "", "signbit"], [53, 2, 1, "", "sinc"], [53, 2, 1, "", "trapz"], [53, 2, 1, "", "xlogy"], [53, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[53, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[53, 2, 1, "", "avg_pool1d"], [53, 2, 1, "", "avg_pool2d"], [53, 2, 1, "", "avg_pool3d"], [53, 2, 1, "", "dct"], [53, 2, 1, "", "dft"], [53, 2, 1, "", "embedding"], [53, 2, 1, "", "fft"], [53, 2, 1, "", "ifft"], [53, 2, 1, "", "interpolate"], [53, 2, 1, "", "max_pool1d"], [53, 2, 1, "", "max_pool2d"], [53, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[53, 2, 1, "", "adjoint"], [53, 2, 1, "", "diagflat"], [53, 2, 1, "", "eig"], [53, 2, 1, "", "eigvals"], [53, 2, 1, "", "kron"], [53, 2, 1, "", "matrix_exp"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[53, 2, 1, "", "atleast_1d"], [53, 2, 1, "", "atleast_2d"], [53, 2, 1, "", "atleast_3d"], [53, 2, 1, "", "dsplit"], [53, 2, 1, "", "dstack"], [53, 2, 1, "", "expand"], [53, 2, 1, "", "flatten"], [53, 2, 1, "", "fliplr"], [53, 2, 1, "", "flipud"], [53, 2, 1, "", "heaviside"], [53, 2, 1, "", "hsplit"], [53, 2, 1, "", "hstack"], [53, 2, 1, "", "i0"], [53, 2, 1, "", "moveaxis"], [53, 2, 1, "", "pad"], [53, 2, 1, "", "rot90"], [53, 2, 1, "", "take_along_axis"], [53, 2, 1, "", "top_k"], [53, 2, 1, "", "vsplit"], [53, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithNormsExperimental": [[53, 2, 1, "", "instance_norm"], [53, 2, 1, "", "l2_normalize"], [53, 2, 1, "", "lp_normalize"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[53, 2, 1, "", "bernoulli"], [53, 2, 1, "", "beta"], [53, 2, 1, "", "dirichlet"], [53, 2, 1, "", "gamma"], [53, 2, 1, "", "poisson"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[53, 2, 1, "", "lexsort"], [53, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[53, 2, 1, "", "corrcoef"], [53, 2, 1, "", "median"], [53, 2, 1, "", "nanmean"], [53, 2, 1, "", "nanmedian"], [53, 2, 1, "", "quantile"], [53, 2, 1, "", "unravel_index"]], "ivy.array.general": [[55, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[55, 2, 1, "", "all_equal"], [55, 2, 1, "", "array_equal"], [55, 2, 1, "", "assert_supports_inplace"], [55, 2, 1, "", "clip_matrix_norm"], [55, 2, 1, "", "clip_vector_norm"], [55, 2, 1, "", "default"], [55, 2, 1, "", "einops_rearrange"], [55, 2, 1, "", "einops_reduce"], [55, 2, 1, "", "einops_repeat"], [55, 2, 1, "", "exists"], [55, 2, 1, "", "fourier_encode"], [55, 2, 1, "", "gather"], [55, 2, 1, "", "gather_nd"], [55, 2, 1, "", "get_num_dims"], [55, 2, 1, "", "has_nans"], [55, 2, 1, "", "inplace_decrement"], [55, 2, 1, "", "inplace_increment"], [55, 2, 1, "", "inplace_update"], [55, 2, 1, "", "is_array"], [55, 2, 1, "", "is_ivy_array"], [55, 2, 1, "", "is_ivy_container"], [55, 2, 1, "", "is_native_array"], [55, 2, 1, "", "scatter_flat"], [55, 2, 1, "", "scatter_nd"], [55, 2, 1, "", "stable_divide"], [55, 2, 1, "", "stable_pow"], [55, 2, 1, "", "supports_inplace_updates"], [55, 2, 1, "", "to_list"], [55, 2, 1, "", "to_numpy"], [55, 2, 1, "", "to_scalar"], [55, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[57, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[57, 2, 1, "", "adam_step"], [57, 2, 1, "", "adam_update"], [57, 2, 1, "", "gradient_descent_update"], [57, 2, 1, "", "lamb_update"], [57, 2, 1, "", "lars_update"], [57, 2, 1, "", "optimizer_update"], [57, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[59, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[61, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[61, 2, 1, "", "conv1d"], [61, 2, 1, "", "conv1d_transpose"], [61, 2, 1, "", "conv2d"], [61, 2, 1, "", "conv2d_transpose"], [61, 2, 1, "", "conv3d"], [61, 2, 1, "", "conv3d_transpose"], [61, 2, 1, "", "depthwise_conv2d"], [61, 2, 1, "", "dropout"], [61, 2, 1, "", "dropout1d"], [61, 2, 1, "", "linear"], [61, 2, 1, "", "lstm_update"], [61, 2, 1, "", "multi_head_attention"], [61, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[63, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[63, 2, 1, "", "cholesky"], [63, 2, 1, "", "cross"], [63, 2, 1, "", "det"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "diagonal"], [63, 2, 1, "", "eig"], [63, 2, 1, "", "eigh"], [63, 2, 1, "", "eigvalsh"], [63, 2, 1, "", "inner"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "matmul"], [63, 2, 1, "", "matrix_norm"], [63, 2, 1, "", "matrix_power"], [63, 2, 1, "", "matrix_rank"], [63, 2, 1, "", "matrix_transpose"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "pinv"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "slogdet"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "svd"], [63, 2, 1, "", "svdvals"], [63, 2, 1, "", "tensordot"], [63, 2, 1, "", "tensorsolve"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "vander"], [63, 2, 1, "", "vecdot"], [63, 2, 1, "", "vector_norm"], [63, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[65, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[65, 2, 1, "", "binary_cross_entropy"], [65, 2, 1, "", "cross_entropy"], [65, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[67, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[67, 2, 1, "", "clip"], [67, 2, 1, "", "concat"], [67, 2, 1, "", "constant_pad"], [67, 2, 1, "", "expand_dims"], [67, 2, 1, "", "flip"], [67, 2, 1, "", "permute_dims"], [67, 2, 1, "", "repeat"], [67, 2, 1, "", "reshape"], [67, 2, 1, "", "roll"], [67, 2, 1, "", "split"], [67, 2, 1, "", "squeeze"], [67, 2, 1, "", "stack"], [67, 2, 1, "", "swapaxes"], [67, 2, 1, "", "tile"], [67, 2, 1, "", "unstack"], [67, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[69, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[69, 2, 1, "", "layer_norm"]], "ivy.array.random": [[71, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[71, 2, 1, "", "multinomial"], [71, 2, 1, "", "randint"], [71, 2, 1, "", "random_normal"], [71, 2, 1, "", "random_uniform"], [71, 2, 1, "", "shuffle"]], "ivy.array.searching": [[73, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[73, 2, 1, "", "argmax"], [73, 2, 1, "", "argmin"], [73, 2, 1, "", "argwhere"], [73, 2, 1, "", "nonzero"], [73, 2, 1, "", "where"]], "ivy.array.set": [[75, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[75, 2, 1, "", "unique_all"], [75, 2, 1, "", "unique_counts"], [75, 2, 1, "", "unique_inverse"], [75, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[77, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[77, 2, 1, "", "argsort"], [77, 2, 1, "", "searchsorted"], [77, 2, 1, "", "sort"]], "ivy.array.statistical": [[79, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[79, 2, 1, "", "cumprod"], [79, 2, 1, "", "cumsum"], [79, 2, 1, "", "einsum"], [79, 2, 1, "", "max"], [79, 2, 1, "", "mean"], [79, 2, 1, "", "min"], [79, 2, 1, "", "prod"], [79, 2, 1, "", "std"], [79, 2, 1, "", "sum"], [79, 2, 1, "", "var"]], "ivy.array.utility": [[81, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[81, 2, 1, "", "all"], [81, 2, 1, "", "any"]], "ivy.array.wrapping": [[83, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_dimensions"], [6, 4, 1, "", "check_elem_in_list"], [7, 4, 1, "", "check_equal"], [8, 4, 1, "", "check_exists"], [9, 4, 1, "", "check_false"], [10, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [11, 4, 1, "", "check_gather_input_valid"], [12, 4, 1, "", "check_gather_nd_input_valid"], [13, 4, 1, "", "check_greater"], [14, 4, 1, "", "check_inplace_sizes_valid"], [15, 4, 1, "", "check_isinstance"], [16, 4, 1, "", "check_kernel_padding_size"], [17, 4, 1, "", "check_less"], [18, 4, 1, "", "check_one_way_broadcastable"], [19, 4, 1, "", "check_same_dtype"], [20, 4, 1, "", "check_shape"], [21, 4, 1, "", "check_shapes_broadcastable"], [22, 4, 1, "", "check_true"]], "ivy.container": [[85, 0, 0, "-", "activations"], [87, 0, 0, "-", "base"], [89, 0, 0, "-", "container"], [91, 0, 0, "-", "conversions"], [93, 0, 0, "-", "creation"], [95, 0, 0, "-", "data_type"], [97, 0, 0, "-", "device"], [99, 0, 0, "-", "elementwise"], [102, 0, 0, "-", "general"], [104, 0, 0, "-", "gradients"], [106, 0, 0, "-", "image"], [108, 0, 0, "-", "layers"], [110, 0, 0, "-", "linear_algebra"], [112, 0, 0, "-", "losses"], [114, 0, 0, "-", "manipulation"], [116, 0, 0, "-", "norms"], [118, 0, 0, "-", "random"], [120, 0, 0, "-", "searching"], [122, 0, 0, "-", "set"], [124, 0, 0, "-", "sorting"], [126, 0, 0, "-", "statistical"], [128, 0, 0, "-", "utility"], [130, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[86, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[86, 2, 1, "", "gelu"], [86, 2, 1, "", "leaky_relu"], [86, 2, 1, "", "log_softmax"], [86, 2, 1, "", "mish"], [86, 2, 1, "", "relu"], [86, 2, 1, "", "sigmoid"], [86, 2, 1, "", "softmax"], [86, 2, 1, "", "softplus"], [86, 2, 1, "", "static_gelu"], [86, 2, 1, "", "static_leaky_relu"], [86, 2, 1, "", "static_log_softmax"], [86, 2, 1, "", "static_mish"], [86, 2, 1, "", "static_relu"], [86, 2, 1, "", "static_sigmoid"], [86, 2, 1, "", "static_softmax"], [86, 2, 1, "", "static_softplus"]], "ivy.container.base": [[88, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[88, 2, 1, "", "__getitem__"], [88, 2, 1, "", "__init__"], [88, 2, 1, "", "__setitem__"], [88, 2, 1, "", "cont_all_false"], [88, 2, 1, "", "cont_all_key_chains"], [88, 2, 1, "", "cont_all_true"], [88, 2, 1, "", "cont_as_bools"], [88, 2, 1, "", "cont_assert_contains_sub_container"], [88, 2, 1, "", "cont_assert_contains_sub_structure"], [88, 2, 1, "", "cont_assert_identical"], [88, 2, 1, "", "cont_assert_identical_structure"], [88, 2, 1, "", "cont_at_key_chain"], [88, 2, 1, "", "cont_at_key_chains"], [88, 2, 1, "", "cont_at_keys"], [88, 2, 1, "", "cont_combine"], [88, 2, 1, "", "cont_common_key_chains"], [88, 3, 1, "", "cont_config"], [88, 2, 1, "", "cont_contains_sub_container"], [88, 2, 1, "", "cont_contains_sub_structure"], [88, 2, 1, "", "cont_copy"], [88, 2, 1, "", "cont_create_if_absent"], [88, 2, 1, "", "cont_cutoff_at_depth"], [88, 2, 1, "", "cont_cutoff_at_height"], [88, 2, 1, "", "cont_deep_copy"], [88, 3, 1, "", "cont_dev"], [88, 3, 1, "", "cont_dev_str"], [88, 2, 1, "", "cont_diff"], [88, 2, 1, "", "cont_duplicate_array_keychains"], [88, 2, 1, "", "cont_find_sub_container"], [88, 2, 1, "", "cont_find_sub_structure"], [88, 2, 1, "", "cont_flatten_key_chain"], [88, 2, 1, "", "cont_flatten_key_chains"], [88, 2, 1, "", "cont_format_key_chains"], [88, 2, 1, "", "cont_from_disk_as_hdf5"], [88, 2, 1, "", "cont_from_disk_as_json"], [88, 2, 1, "", "cont_from_disk_as_pickled"], [88, 2, 1, "", "cont_from_flat_list"], [88, 2, 1, "", "cont_handle_inplace"], [88, 2, 1, "", "cont_has_key"], [88, 2, 1, "", "cont_has_key_chain"], [88, 2, 1, "", "cont_identical"], [88, 2, 1, "", "cont_identical_array_shapes"], [88, 2, 1, "", "cont_identical_configs"], [88, 2, 1, "", "cont_identical_structure"], [88, 2, 1, "", "cont_if_exists"], [88, 2, 1, "", "cont_inplace_update"], [88, 3, 1, "", "cont_ivy"], [88, 2, 1, "", "cont_key_chains_containing"], [88, 2, 1, "", "cont_list_join"], [88, 2, 1, "", "cont_list_stack"], [88, 2, 1, "", "cont_map"], [88, 2, 1, "", "cont_map_sub_conts"], [88, 3, 1, "", "cont_max_depth"], [88, 2, 1, "", "cont_multi_map"], [88, 2, 1, "", "cont_multi_map_in_function"], [88, 2, 1, "", "cont_num_arrays"], [88, 2, 1, "", "cont_overwrite_at_key_chain"], [88, 2, 1, "", "cont_overwrite_at_key_chains"], [88, 2, 1, "", "cont_prune_empty"], [88, 2, 1, "", "cont_prune_key_chain"], [88, 2, 1, "", "cont_prune_key_chains"], [88, 2, 1, "", "cont_prune_key_from_key_chains"], [88, 2, 1, "", "cont_prune_keys"], [88, 2, 1, "", "cont_prune_keys_from_key_chains"], [88, 2, 1, "", "cont_reduce"], [88, 2, 1, "", "cont_remove_key_length_limit"], [88, 2, 1, "", "cont_remove_print_limit"], [88, 2, 1, "", "cont_reshape_like"], [88, 2, 1, "", "cont_restructure"], [88, 2, 1, "", "cont_restructure_key_chains"], [88, 2, 1, "", "cont_set_at_key_chain"], [88, 2, 1, "", "cont_set_at_key_chains"], [88, 2, 1, "", "cont_set_at_keys"], [88, 3, 1, "", "cont_shape"], [88, 3, 1, "", "cont_shapes"], [88, 2, 1, "", "cont_show"], [88, 2, 1, "", "cont_show_sub_container"], [88, 2, 1, "", "cont_size_ordered_arrays"], [88, 2, 1, "", "cont_slice_keys"], [88, 2, 1, "", "cont_slice_via_key"], [88, 2, 1, "", "cont_sort_by_key"], [88, 2, 1, "", "cont_structural_diff"], [88, 2, 1, "", "cont_to_dict"], [88, 2, 1, "", "cont_to_disk_as_hdf5"], [88, 2, 1, "", "cont_to_disk_as_json"], [88, 2, 1, "", "cont_to_disk_as_pickled"], [88, 2, 1, "", "cont_to_flat_list"], [88, 2, 1, "", "cont_to_iterator"], [88, 2, 1, "", "cont_to_iterator_keys"], [88, 2, 1, "", "cont_to_iterator_values"], [88, 2, 1, "", "cont_to_jsonable"], [88, 2, 1, "", "cont_to_nested_list"], [88, 2, 1, "", "cont_to_raw"], [88, 2, 1, "", "cont_trim_key"], [88, 2, 1, "", "cont_try_kc"], [88, 2, 1, "", "cont_unify"], [88, 2, 1, "", "cont_unstack_conts"], [88, 2, 1, "", "cont_update_config"], [88, 2, 1, "", "cont_with_default_key_color"], [88, 2, 1, "", "cont_with_entries_as_lists"], [88, 2, 1, "", "cont_with_ivy_backend"], [88, 2, 1, "", "cont_with_key_length_limit"], [88, 2, 1, "", "cont_with_print_indent"], [88, 2, 1, "", "cont_with_print_limit"], [88, 2, 1, "", "cont_with_print_line_spacing"], [88, 3, 1, "", "dynamic_backend"], [88, 2, 1, "", "h5_file_size"], [88, 2, 1, "", "shuffle_h5_file"], [88, 2, 1, "", "split_conts"]], "ivy.container.container": [[90, 1, 1, "", "Container"]], "ivy.container.container.Container": [[90, 2, 1, "", "__abs__"], [90, 2, 1, "", "__add__"], [90, 2, 1, "", "__eq__"], [90, 2, 1, "", "__ge__"], [90, 2, 1, "", "__gt__"], [90, 2, 1, "", "__init__"], [90, 2, 1, "", "__le__"], [90, 2, 1, "", "__lt__"], [90, 2, 1, "", "__ne__"], [90, 2, 1, "", "__pow__"], [90, 2, 1, "", "__radd__"], [90, 2, 1, "", "__rrshift__"], [90, 2, 1, "", "__rshift__"], [90, 2, 1, "", "__rsub__"], [90, 2, 1, "", "__sub__"], [90, 2, 1, "", "__truediv__"], [90, 2, 1, "", "__xor__"], [90, 2, 1, "", "arange"], [90, 2, 1, "", "arg_info"], [90, 2, 1, "", "arg_names"], [90, 2, 1, "", "array"], [90, 2, 1, "", "as_ivy_dev"], [90, 2, 1, "", "as_ivy_dtype"], [90, 2, 1, "", "as_native_dev"], [90, 2, 1, "", "as_native_dtype"], [90, 2, 1, "", "asarray"], [90, 2, 1, "", "asarray_handle_nestable"], [90, 2, 1, "", "asarray_infer_device"], [90, 2, 1, "", "asarray_to_native_arrays_and_back"], [90, 2, 1, "", "cache_fn"], [90, 2, 1, "", "check_float"], [90, 2, 1, "", "clear_mem_on_dev"], [90, 2, 1, "", "closest_valid_dtype"], [90, 2, 1, "", "container_types"], [90, 2, 1, "", "conv"], [90, 2, 1, "", "conv_general_dilated"], [90, 2, 1, "", "conv_general_transpose"], [90, 2, 1, "", "copy_array"], [90, 2, 1, "", "current_backend"], [90, 2, 1, "", "current_backend_str"], [90, 2, 1, "", "default"], [90, 2, 1, "", "default_complex_dtype"], [90, 2, 1, "", "default_device"], [90, 2, 1, "", "default_dtype"], [90, 2, 1, "", "default_float_dtype"], [90, 2, 1, "", "default_int_dtype"], [90, 2, 1, "", "default_uint_dtype"], [90, 2, 1, "", "deserialize"], [90, 2, 1, "", "dev_util"], [90, 2, 1, "", "dtype_bits"], [90, 2, 1, "", "empty"], [90, 2, 1, "", "execute_with_gradients"], [90, 2, 1, "", "exists"], [90, 2, 1, "", "eye"], [90, 2, 1, "", "full"], [90, 2, 1, "", "function_supported_devices"], [90, 2, 1, "", "function_supported_devices_and_dtypes"], [90, 2, 1, "", "function_supported_dtypes"], [90, 2, 1, "", "function_unsupported_devices"], [90, 2, 1, "", "function_unsupported_devices_and_dtypes"], [90, 2, 1, "", "function_unsupported_dtypes"], [90, 2, 1, "", "get_all_arrays_in_memory"], [90, 2, 1, "", "get_all_ivy_arrays_on_dev"], [90, 2, 1, "", "get_array_mode"], [90, 2, 1, "", "get_exception_trace_mode"], [90, 2, 1, "", "get_item"], [90, 2, 1, "", "get_min_base"], [90, 2, 1, "", "get_min_denominator"], [90, 2, 1, "", "get_nestable_mode"], [90, 2, 1, "", "get_queue_timeout"], [90, 2, 1, "", "get_referrers_recursive"], [90, 2, 1, "", "get_show_func_wrapper_trace_mode"], [90, 2, 1, "", "get_tmp_dir"], [90, 2, 1, "", "gpu_is_available"], [90, 2, 1, "", "grad"], [90, 2, 1, "", "handle_array_function"], [90, 2, 1, "", "handle_array_like_without_promotion"], [90, 2, 1, "", "handle_exceptions"], [90, 2, 1, "", "handle_nestable"], [90, 2, 1, "", "handle_out_argument"], [90, 2, 1, "", "infer_default_dtype"], [90, 2, 1, "", "infer_device"], [90, 2, 1, "", "infer_dtype"], [90, 2, 1, "", "inplace_arrays_supported"], [90, 2, 1, "", "inplace_variables_supported"], [90, 2, 1, "", "inputs_to_ivy_arrays"], [90, 2, 1, "", "inputs_to_native_arrays"], [90, 2, 1, "", "integer_arrays_to_float"], [90, 2, 1, "", "invalid_dtype"], [90, 2, 1, "", "is_ivy_container"], [90, 2, 1, "", "isscalar"], [90, 2, 1, "", "jac"], [90, 2, 1, "", "match_kwargs"], [90, 2, 1, "", "multiprocessing"], [90, 2, 1, "", "normalize_axis_tuple"], [90, 2, 1, "", "num_arrays_in_memory"], [90, 2, 1, "", "num_cpu_cores"], [90, 2, 1, "", "num_gpus"], [90, 2, 1, "", "num_ivy_arrays_on_dev"], [90, 2, 1, "", "ones"], [90, 2, 1, "", "outputs_to_ivy_arrays"], [90, 2, 1, "", "percent_used_mem_on_dev"], [90, 2, 1, "", "print_all_arrays_in_memory"], [90, 2, 1, "", "print_all_ivy_arrays_on_dev"], [90, 2, 1, "", "promote_types"], [90, 2, 1, "", "promote_types_of_inputs"], [90, 2, 1, "", "seed"], [90, 2, 1, "", "set_array_mode"], [90, 2, 1, "", "set_default_complex_dtype"], [90, 2, 1, "", "set_default_device"], [90, 2, 1, "", "set_default_dtype"], [90, 2, 1, "", "set_default_float_dtype"], [90, 2, 1, "", "set_default_int_dtype"], [90, 2, 1, "", "set_default_uint_dtype"], [90, 2, 1, "", "set_exception_trace_mode"], [90, 2, 1, "", "set_min_base"], [90, 2, 1, "", "set_min_denominator"], [90, 2, 1, "", "set_nestable_mode"], [90, 2, 1, "", "set_queue_timeout"], [90, 2, 1, "", "set_shape_array_mode"], [90, 2, 1, "", "set_show_func_wrapper_trace_mode"], [90, 2, 1, "", "set_split_factor"], [90, 2, 1, "", "set_tmp_dir"], [90, 2, 1, "", "set_with_grads"], [90, 2, 1, "", "shape_array_mode"], [90, 2, 1, "", "split_factor"], [90, 2, 1, "", "split_func_call"], [90, 2, 1, "", "static_adam_step"], [90, 2, 1, "", "static_adam_update"], [90, 2, 1, "", "static_arg_info"], [90, 2, 1, "", "static_arg_names"], [90, 2, 1, "", "static_array"], [90, 2, 1, "", "static_as_ivy_dev"], [90, 2, 1, "", "static_as_ivy_dtype"], [90, 2, 1, "", "static_as_native_dev"], [90, 2, 1, "", "static_as_native_dtype"], [90, 2, 1, "", "static_asarray_handle_nestable"], [90, 2, 1, "", "static_asarray_infer_device"], [90, 2, 1, "", "static_asarray_to_native_arrays_and_back"], [90, 2, 1, "", "static_cache_fn"], [90, 2, 1, "", "static_check_float"], [90, 2, 1, "", "static_clear_mem_on_dev"], [90, 2, 1, "", "static_closest_valid_dtype"], [90, 2, 1, "", "static_container_types"], [90, 2, 1, "", "static_conv"], [90, 2, 1, "", "static_conv_general_dilated"], [90, 2, 1, "", "static_conv_general_transpose"], [90, 2, 1, "", "static_copy_array"], [90, 2, 1, "", "static_current_backend"], [90, 2, 1, "", "static_current_backend_str"], [90, 2, 1, "", "static_default"], [90, 2, 1, "", "static_default_device"], [90, 2, 1, "", "static_default_dtype"], [90, 2, 1, "", "static_default_int_dtype"], [90, 2, 1, "", "static_default_uint_dtype"], [90, 2, 1, "", "static_deserialize"], [90, 2, 1, "", "static_dev_util"], [90, 2, 1, "", "static_dtype_bits"], [90, 2, 1, "", "static_einsum"], [90, 2, 1, "", "static_empty"], [90, 2, 1, "", "static_execute_with_gradients"], [90, 2, 1, "", "static_exists"], [90, 2, 1, "", "static_full"], [90, 2, 1, "", "static_function_supported_devices"], [90, 2, 1, "", "static_function_supported_devices_and_dtypes"], [90, 2, 1, "", "static_function_unsupported_devices"], [90, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [90, 2, 1, "", "static_get"], [90, 2, 1, "", "static_get_all_arrays_in_memory"], [90, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [90, 2, 1, "", "static_get_array_mode"], [90, 2, 1, "", "static_get_exception_trace_mode"], [90, 2, 1, "", "static_get_item"], [90, 2, 1, "", "static_get_min_base"], [90, 2, 1, "", "static_get_min_denominator"], [90, 2, 1, "", "static_get_nestable_mode"], [90, 2, 1, "", "static_get_queue_timeout"], [90, 2, 1, "", "static_get_referrers_recursive"], [90, 2, 1, "", "static_get_show_func_wrapper_trace_mode"], [90, 2, 1, "", "static_get_tmp_dir"], [90, 2, 1, "", "static_gpu_is_available"], [90, 2, 1, "", "static_grad"], [90, 2, 1, "", "static_gradient_descent_update"], [90, 2, 1, "", "static_handle_array_function"], [90, 2, 1, "", "static_handle_array_like_without_promotion"], [90, 2, 1, "", "static_handle_exceptions"], [90, 2, 1, "", "static_handle_nestable"], [90, 2, 1, "", "static_handle_out_argument"], [90, 2, 1, "", "static_infer_default_dtype"], [90, 2, 1, "", "static_infer_device"], [90, 2, 1, "", "static_infer_dtype"], [90, 2, 1, "", "static_inplace_arrays_supported"], [90, 2, 1, "", "static_inplace_variables_supported"], [90, 2, 1, "", "static_inputs_to_ivy_arrays"], [90, 2, 1, "", "static_inputs_to_native_arrays"], [90, 2, 1, "", "static_integer_arrays_to_float"], [90, 2, 1, "", "static_invalid_dtype"], [90, 2, 1, "", "static_is_ivy_container"], [90, 2, 1, "", "static_isscalar"], [90, 2, 1, "", "static_jac"], [90, 2, 1, "", "static_lamb_update"], [90, 2, 1, "", "static_lars_update"], [90, 2, 1, "", "static_layer_norm"], [90, 2, 1, "", "static_match_kwargs"], [90, 2, 1, "", "static_max"], [90, 2, 1, "", "static_mean"], [90, 2, 1, "", "static_min"], [90, 2, 1, "", "static_multiprocessing"], [90, 2, 1, "", "static_normalize_axis_tuple"], [90, 2, 1, "", "static_num_arrays_in_memory"], [90, 2, 1, "", "static_num_cpu_cores"], [90, 2, 1, "", "static_num_gpus"], [90, 2, 1, "", "static_num_ivy_arrays_on_dev"], [90, 2, 1, "", "static_optimizer_update"], [90, 2, 1, "", "static_outputs_to_ivy_arrays"], [90, 2, 1, "", "static_percent_used_mem_on_dev"], [90, 2, 1, "", "static_print_all_arrays_in_memory"], [90, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [90, 2, 1, "", "static_promote_types"], [90, 2, 1, "", "static_promote_types_of_inputs"], [90, 2, 1, "", "static_seed"], [90, 2, 1, "", "static_set_array_mode"], [90, 2, 1, "", "static_set_default_complex_dtype"], [90, 2, 1, "", "static_set_default_device"], [90, 2, 1, "", "static_set_default_dtype"], [90, 2, 1, "", "static_set_default_float_dtype"], [90, 2, 1, "", "static_set_default_int_dtype"], [90, 2, 1, "", "static_set_default_uint_dtype"], [90, 2, 1, "", "static_set_exception_trace_mode"], [90, 2, 1, "", "static_set_min_base"], [90, 2, 1, "", "static_set_min_denominator"], [90, 2, 1, "", "static_set_nestable_mode"], [90, 2, 1, "", "static_set_queue_timeout"], [90, 2, 1, "", "static_set_shape_array_mode"], [90, 2, 1, "", "static_set_show_func_wrapper_trace_mode"], [90, 2, 1, "", "static_set_split_factor"], [90, 2, 1, "", "static_set_tmp_dir"], [90, 2, 1, "", "static_set_with_grads"], [90, 2, 1, "", "static_shape"], [90, 2, 1, "", "static_shape_array_mode"], [90, 2, 1, "", "static_split_factor"], [90, 2, 1, "", "static_split_func_call"], [90, 2, 1, "", "static_std"], [90, 2, 1, "", "static_tensorsolve"], [90, 2, 1, "", "static_to_ivy_shape"], [90, 2, 1, "", "static_to_native_arrays_and_back"], [90, 2, 1, "", "static_to_native_shape"], [90, 2, 1, "", "static_total_mem_on_dev"], [90, 2, 1, "", "static_tpu_is_available"], [90, 2, 1, "", "static_try_else_none"], [90, 2, 1, "", "static_type_promote_arrays"], [90, 2, 1, "", "static_unset_array_mode"], [90, 2, 1, "", "static_unset_default_complex_dtype"], [90, 2, 1, "", "static_unset_default_device"], [90, 2, 1, "", "static_unset_default_dtype"], [90, 2, 1, "", "static_unset_default_float_dtype"], [90, 2, 1, "", "static_unset_default_int_dtype"], [90, 2, 1, "", "static_unset_default_uint_dtype"], [90, 2, 1, "", "static_unset_exception_trace_mode"], [90, 2, 1, "", "static_unset_nestable_mode"], [90, 2, 1, "", "static_unset_queue_timeout"], [90, 2, 1, "", "static_unset_shape_array_mode"], [90, 2, 1, "", "static_unset_show_func_wrapper_trace_mode"], [90, 2, 1, "", "static_unset_with_grads"], [90, 2, 1, "", "static_used_mem_on_dev"], [90, 2, 1, "", "static_valid_dtype"], [90, 2, 1, "", "static_value_and_grad"], [90, 2, 1, "", "static_vmap"], [90, 2, 1, "", "static_with_grads"], [90, 2, 1, "", "static_wraps"], [90, 2, 1, "", "to_ivy_shape"], [90, 2, 1, "", "to_native_arrays_and_back"], [90, 2, 1, "", "to_native_shape"], [90, 2, 1, "", "total_mem_on_dev"], [90, 2, 1, "", "tpu_is_available"], [90, 2, 1, "", "try_else_none"], [90, 2, 1, "", "type_promote_arrays"], [90, 2, 1, "", "unset_array_mode"], [90, 2, 1, "", "unset_default_complex_dtype"], [90, 2, 1, "", "unset_default_device"], [90, 2, 1, "", "unset_default_dtype"], [90, 2, 1, "", "unset_default_float_dtype"], [90, 2, 1, "", "unset_default_int_dtype"], [90, 2, 1, "", "unset_default_uint_dtype"], [90, 2, 1, "", "unset_exception_trace_mode"], [90, 2, 1, "", "unset_nestable_mode"], [90, 2, 1, "", "unset_queue_timeout"], [90, 2, 1, "", "unset_shape_array_mode"], [90, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [90, 2, 1, "", "unset_with_grads"], [90, 2, 1, "", "used_mem_on_dev"], [90, 2, 1, "", "valid_dtype"], [90, 2, 1, "", "value_and_grad"], [90, 2, 1, "", "vmap"], [90, 2, 1, "", "with_grads"], [90, 2, 1, "", "wraps"], [90, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[468, 4, 1, "", "abs"], [473, 4, 1, "", "acos"], [478, 4, 1, "", "acosh"], [1606, 4, 1, "", "adam_step"], [1610, 4, 1, "", "adam_update"], [483, 4, 1, "", "add"], [795, 4, 1, "", "adjoint"], [2109, 4, 1, "", "all"], [1410, 4, 1, "", "all_equal"], [800, 4, 1, "", "allclose"], [805, 4, 1, "", "angle"], [2114, 4, 1, "", "any"], [2000, 4, 1, "", "argmax"], [2005, 4, 1, "", "argmin"], [2047, 4, 1, "", "argsort"], [2010, 4, 1, "", "argwhere"], [1417, 4, 1, "", "array_equal"], [488, 4, 1, "", "asin"], [493, 4, 1, "", "asinh"], [1422, 4, 1, "", "assert_supports_inplace"], [335, 4, 1, "", "astype"], [498, 4, 1, "", "atan"], [503, 4, 1, "", "atan2"], [508, 4, 1, "", "atanh"], [810, 4, 1, "", "atleast_1d"], [815, 4, 1, "", "atleast_2d"], [820, 4, 1, "", "atleast_3d"], [825, 4, 1, "", "avg_pool1d"], [830, 4, 1, "", "avg_pool2d"], [835, 4, 1, "", "avg_pool3d"], [840, 4, 1, "", "bernoulli"], [845, 4, 1, "", "beta"], [851, 4, 1, "", "binarizer"], [1847, 4, 1, "", "binary_cross_entropy"], [855, 4, 1, "", "binary_cross_entropy_with_logits"], [513, 4, 1, "", "bitwise_and"], [518, 4, 1, "", "bitwise_invert"], [523, 4, 1, "", "bitwise_left_shift"], [528, 4, 1, "", "bitwise_or"], [533, 4, 1, "", "bitwise_right_shift"], [538, 4, 1, "", "bitwise_xor"], [340, 4, 1, "", "broadcast_arrays"], [860, 4, 1, "", "broadcast_shapes"], [345, 4, 1, "", "broadcast_to"], [350, 4, 1, "", "can_cast"], [543, 4, 1, "", "ceil"], [1707, 4, 1, "", "cholesky"], [1863, 4, 1, "", "clip"], [1428, 4, 1, "", "clip_matrix_norm"], [1433, 4, 1, "", "clip_vector_norm"], [1868, 4, 1, "", "concat"], [1873, 4, 1, "", "constant_pad"], [1644, 4, 1, "", "conv1d"], [1649, 4, 1, "", "conv1d_transpose"], [1654, 4, 1, "", "conv2d"], [1659, 4, 1, "", "conv2d_transpose"], [1664, 4, 1, "", "conv3d"], [1669, 4, 1, "", "conv3d_transpose"], [867, 4, 1, "", "copysign"], [872, 4, 1, "", "corrcoef"], [548, 4, 1, "", "cos"], [553, 4, 1, "", "cosh"], [877, 4, 1, "", "count_nonzero"], [1712, 4, 1, "", "cross"], [1852, 4, 1, "", "cross_entropy"], [2063, 4, 1, "", "cumprod"], [2068, 4, 1, "", "cumsum"], [894, 4, 1, "", "dct"], [558, 4, 1, "", "deg2rad"], [1676, 4, 1, "", "depthwise_conv2d"], [1717, 4, 1, "", "det"], [439, 4, 1, "", "dev"], [899, 4, 1, "", "dft"], [1722, 4, 1, "", "diag"], [904, 4, 1, "", "diagflat"], [1727, 4, 1, "", "diagonal"], [909, 4, 1, "", "diff"], [914, 4, 1, "", "dirichlet"], [563, 4, 1, "", "divide"], [1681, 4, 1, "", "dropout"], [920, 4, 1, "", "dsplit"], [925, 4, 1, "", "dstack"], [365, 4, 1, "", "dtype"], [930, 4, 1, "", "eig"], [1733, 4, 1, "", "eigh"], [935, 4, 1, "", "eigvals"], [1738, 4, 1, "", "eigvalsh"], [1443, 4, 1, "", "einops_rearrange"], [1448, 4, 1, "", "einops_reduce"], [1453, 4, 1, "", "einops_repeat"], [2073, 4, 1, "", "einsum"], [969, 4, 1, "", "embedding"], [257, 4, 1, "", "empty_like"], [568, 4, 1, "", "equal"], [573, 4, 1, "", "erf"], [578, 4, 1, "", "exp"], [974, 4, 1, "", "exp2"], [979, 4, 1, "", "expand"], [1878, 4, 1, "", "expand_dims"], [583, 4, 1, "", "expm1"], [984, 4, 1, "", "eye_like"], [989, 4, 1, "", "fft"], [371, 4, 1, "", "finfo"], [994, 4, 1, "", "fix"], [999, 4, 1, "", "flatten"], [1883, 4, 1, "", "flip"], [1004, 4, 1, "", "fliplr"], [1009, 4, 1, "", "flipud"], [1014, 4, 1, "", "float_power"], [588, 4, 1, "", "floor"], [593, 4, 1, "", "floor_divide"], [1019, 4, 1, "", "fmax"], [1024, 4, 1, "", "fmin"], [1029, 4, 1, "", "fmod"], [1461, 4, 1, "", "fourier_encode"], [265, 4, 1, "", "from_dlpack"], [271, 4, 1, "", "full_like"], [1468, 4, 1, "", "gather"], [1473, 4, 1, "", "gather_nd"], [1037, 4, 1, "", "gcd"], [193, 4, 1, "", "gelu"], [1485, 4, 1, "", "get_num_dims"], [1044, 4, 1, "", "gradient"], [1616, 4, 1, "", "gradient_descent_update"], [598, 4, 1, "", "greater"], [603, 4, 1, "", "greater_equal"], [1050, 4, 1, "", "hamming_window"], [1054, 4, 1, "", "hann_window"], [1494, 4, 1, "", "has_nans"], [1059, 4, 1, "", "heaviside"], [1064, 4, 1, "", "hsplit"], [1069, 4, 1, "", "hstack"], [1074, 4, 1, "", "hypot"], [1079, 4, 1, "", "i0"], [1084, 4, 1, "", "ifft"], [382, 4, 1, "", "iinfo"], [1089, 4, 1, "", "imag"], [1743, 4, 1, "", "inner"], [1500, 4, 1, "", "inplace_decrement"], [1505, 4, 1, "", "inplace_increment"], [1510, 4, 1, "", "inplace_update"], [1094, 4, 1, "", "instance_norm"], [1100, 4, 1, "", "interpolate"], [1748, 4, 1, "", "inv"], [1516, 4, 1, "", "is_array"], [389, 4, 1, "", "is_bool_dtype"], [393, 4, 1, "", "is_complex_dtype"], [398, 4, 1, "", "is_float_dtype"], [403, 4, 1, "", "is_int_dtype"], [1521, 4, 1, "", "is_ivy_array"], [1529, 4, 1, "", "is_native_array"], [408, 4, 1, "", "is_uint_dtype"], [1108, 4, 1, "", "isclose"], [608, 4, 1, "", "isfinite"], [1113, 4, 1, "", "isin"], [613, 4, 1, "", "isinf"], [618, 4, 1, "", "isnan"], [623, 4, 1, "", "isreal"], [1117, 4, 1, "", "kaiser_bessel_derived_window"], [1121, 4, 1, "", "kaiser_window"], [1126, 4, 1, "", "kron"], [1131, 4, 1, "", "l2_normalize"], [1621, 4, 1, "", "lamb_update"], [1625, 4, 1, "", "lars_update"], [1968, 4, 1, "", "layer_norm"], [1156, 4, 1, "", "lcm"], [199, 4, 1, "", "leaky_relu"], [628, 4, 1, "", "less"], [633, 4, 1, "", "less_equal"], [1161, 4, 1, "", "lexsort"], [1686, 4, 1, "", "linear"], [276, 4, 1, "", "linspace"], [638, 4, 1, "", "log"], [643, 4, 1, "", "log10"], [648, 4, 1, "", "log1p"], [653, 4, 1, "", "log2"], [204, 4, 1, "", "log_softmax"], [658, 4, 1, "", "logaddexp"], [1173, 4, 1, "", "logaddexp2"], [663, 4, 1, "", "logical_and"], [668, 4, 1, "", "logical_not"], [673, 4, 1, "", "logical_or"], [678, 4, 1, "", "logical_xor"], [1178, 4, 1, "", "logit"], [281, 4, 1, "", "logspace"], [1185, 4, 1, "", "lp_normalize"], [1691, 4, 1, "", "lstm_update"], [1753, 4, 1, "", "matmul"], [1214, 4, 1, "", "matrix_exp"], [1758, 4, 1, "", "matrix_norm"], [1763, 4, 1, "", "matrix_power"], [1768, 4, 1, "", "matrix_rank"], [1773, 4, 1, "", "matrix_transpose"], [2077, 4, 1, "", "max"], [1219, 4, 1, "", "max_pool1d"], [1224, 4, 1, "", "max_pool2d"], [1229, 4, 1, "", "max_pool3d"], [683, 4, 1, "", "maximum"], [2081, 4, 1, "", "mean"], [1234, 4, 1, "", "median"], [286, 4, 1, "", "meshgrid"], [2085, 4, 1, "", "min"], [688, 4, 1, "", "minimum"], [209, 4, 1, "", "mish"], [1240, 4, 1, "", "moveaxis"], [1245, 4, 1, "", "msort"], [1696, 4, 1, "", "multi_head_attention"], [1973, 4, 1, "", "multinomial"], [693, 4, 1, "", "multiply"], [1250, 4, 1, "", "nan_to_num"], [1255, 4, 1, "", "nanmean"], [1260, 4, 1, "", "nanmedian"], [1265, 4, 1, "", "nansum"], [291, 4, 1, "", "native_array"], [698, 4, 1, "", "negative"], [1275, 4, 1, "", "nextafter"], [2015, 4, 1, "", "nonzero"], [703, 4, 1, "", "not_equal"], [296, 4, 1, "", "one_hot"], [304, 4, 1, "", "ones_like"], [1629, 4, 1, "", "optimizer_update"], [1778, 4, 1, "", "outer"], [1284, 4, 1, "", "pad"], [1888, 4, 1, "", "permute_dims"], [1783, 4, 1, "", "pinv"], [1291, 4, 1, "", "poisson"], [708, 4, 1, "", "positive"], [713, 4, 1, "", "pow"], [1297, 4, 1, "", "prelu"], [2089, 4, 1, "", "prod"], [1788, 4, 1, "", "qr"], [1302, 4, 1, "", "quantile"], [718, 4, 1, "", "rad2deg"], [1978, 4, 1, "", "randint"], [1983, 4, 1, "", "random_normal"], [1988, 4, 1, "", "random_uniform"], [1313, 4, 1, "", "real"], [723, 4, 1, "", "reciprocal"], [214, 4, 1, "", "relu"], [728, 4, 1, "", "remainder"], [1893, 4, 1, "", "repeat"], [1898, 4, 1, "", "reshape"], [415, 4, 1, "", "result_type"], [1903, 4, 1, "", "roll"], [1318, 4, 1, "", "rot90"], [733, 4, 1, "", "round"], [1701, 4, 1, "", "scaled_dot_product_attention"], [1539, 4, 1, "", "scatter_flat"], [1544, 4, 1, "", "scatter_nd"], [2052, 4, 1, "", "searchsorted"], [1994, 4, 1, "", "shuffle"], [219, 4, 1, "", "sigmoid"], [738, 4, 1, "", "sign"], [1325, 4, 1, "", "signbit"], [743, 4, 1, "", "sin"], [1330, 4, 1, "", "sinc"], [748, 4, 1, "", "sinh"], [1793, 4, 1, "", "slogdet"], [224, 4, 1, "", "softmax"], [229, 4, 1, "", "softplus"], [1798, 4, 1, "", "solve"], [2057, 4, 1, "", "sort"], [1857, 4, 1, "", "sparse_cross_entropy"], [1908, 4, 1, "", "split"], [753, 4, 1, "", "sqrt"], [758, 4, 1, "", "square"], [1913, 4, 1, "", "squeeze"], [1560, 4, 1, "", "stable_divide"], [1565, 4, 1, "", "stable_pow"], [1918, 4, 1, "", "stack"], [470, 4, 1, "", "static_abs"], [475, 4, 1, "", "static_acos"], [480, 4, 1, "", "static_acosh"], [485, 4, 1, "", "static_add"], [797, 4, 1, "", "static_adjoint"], [2111, 4, 1, "", "static_all"], [1412, 4, 1, "", "static_all_equal"], [802, 4, 1, "", "static_allclose"], [807, 4, 1, "", "static_angle"], [2116, 4, 1, "", "static_any"], [243, 4, 1, "", "static_arange"], [2002, 4, 1, "", "static_argmax"], [2007, 4, 1, "", "static_argmin"], [2049, 4, 1, "", "static_argsort"], [2012, 4, 1, "", "static_argwhere"], [1419, 4, 1, "", "static_array_equal"], [247, 4, 1, "", "static_asarray"], [490, 4, 1, "", "static_asin"], [495, 4, 1, "", "static_asinh"], [1424, 4, 1, "", "static_assert_supports_inplace"], [337, 4, 1, "", "static_astype"], [500, 4, 1, "", "static_atan"], [505, 4, 1, "", "static_atan2"], [510, 4, 1, "", "static_atanh"], [812, 4, 1, "", "static_atleast_1d"], [817, 4, 1, "", "static_atleast_2d"], [822, 4, 1, "", "static_atleast_3d"], [827, 4, 1, "", "static_avg_pool1d"], [832, 4, 1, "", "static_avg_pool2d"], [837, 4, 1, "", "static_avg_pool3d"], [842, 4, 1, "", "static_bernoulli"], [847, 4, 1, "", "static_beta"], [853, 4, 1, "", "static_binarizer"], [1849, 4, 1, "", "static_binary_cross_entropy"], [857, 4, 1, "", "static_binary_cross_entropy_with_logits"], [515, 4, 1, "", "static_bitwise_and"], [520, 4, 1, "", "static_bitwise_invert"], [525, 4, 1, "", "static_bitwise_left_shift"], [530, 4, 1, "", "static_bitwise_or"], [535, 4, 1, "", "static_bitwise_right_shift"], [540, 4, 1, "", "static_bitwise_xor"], [342, 4, 1, "", "static_broadcast_arrays"], [862, 4, 1, "", "static_broadcast_shapes"], [347, 4, 1, "", "static_broadcast_to"], [352, 4, 1, "", "static_can_cast"], [545, 4, 1, "", "static_ceil"], [1709, 4, 1, "", "static_cholesky"], [1865, 4, 1, "", "static_clip"], [1430, 4, 1, "", "static_clip_matrix_norm"], [1435, 4, 1, "", "static_clip_vector_norm"], [1870, 4, 1, "", "static_concat"], [1875, 4, 1, "", "static_constant_pad"], [1646, 4, 1, "", "static_conv1d"], [1651, 4, 1, "", "static_conv1d_transpose"], [1656, 4, 1, "", "static_conv2d"], [1661, 4, 1, "", "static_conv2d_transpose"], [1666, 4, 1, "", "static_conv3d"], [1671, 4, 1, "", "static_conv3d_transpose"], [869, 4, 1, "", "static_copysign"], [874, 4, 1, "", "static_corrcoef"], [550, 4, 1, "", "static_cos"], [555, 4, 1, "", "static_cosh"], [879, 4, 1, "", "static_count_nonzero"], [1714, 4, 1, "", "static_cross"], [1854, 4, 1, "", "static_cross_entropy"], [2065, 4, 1, "", "static_cumprod"], [2070, 4, 1, "", "static_cumsum"], [896, 4, 1, "", "static_dct"], [357, 4, 1, "", "static_default_complex_dtype"], [361, 4, 1, "", "static_default_float_dtype"], [560, 4, 1, "", "static_deg2rad"], [1678, 4, 1, "", "static_depthwise_conv2d"], [1719, 4, 1, "", "static_det"], [441, 4, 1, "", "static_dev"], [901, 4, 1, "", "static_dft"], [1724, 4, 1, "", "static_diag"], [906, 4, 1, "", "static_diagflat"], [1729, 4, 1, "", "static_diagonal"], [911, 4, 1, "", "static_diff"], [916, 4, 1, "", "static_dirichlet"], [565, 4, 1, "", "static_divide"], [1683, 4, 1, "", "static_dropout"], [922, 4, 1, "", "static_dsplit"], [927, 4, 1, "", "static_dstack"], [367, 4, 1, "", "static_dtype"], [932, 4, 1, "", "static_eig"], [1735, 4, 1, "", "static_eigh"], [937, 4, 1, "", "static_eigvals"], [1740, 4, 1, "", "static_eigvalsh"], [1445, 4, 1, "", "static_einops_rearrange"], [1450, 4, 1, "", "static_einops_reduce"], [1455, 4, 1, "", "static_einops_repeat"], [971, 4, 1, "", "static_embedding"], [259, 4, 1, "", "static_empty_like"], [570, 4, 1, "", "static_equal"], [575, 4, 1, "", "static_erf"], [580, 4, 1, "", "static_exp"], [976, 4, 1, "", "static_exp2"], [981, 4, 1, "", "static_expand"], [1880, 4, 1, "", "static_expand_dims"], [585, 4, 1, "", "static_expm1"], [262, 4, 1, "", "static_eye"], [986, 4, 1, "", "static_eye_like"], [991, 4, 1, "", "static_fft"], [373, 4, 1, "", "static_finfo"], [996, 4, 1, "", "static_fix"], [1001, 4, 1, "", "static_flatten"], [1885, 4, 1, "", "static_flip"], [1006, 4, 1, "", "static_fliplr"], [1011, 4, 1, "", "static_flipud"], [1016, 4, 1, "", "static_float_power"], [590, 4, 1, "", "static_floor"], [595, 4, 1, "", "static_floor_divide"], [1021, 4, 1, "", "static_fmax"], [1026, 4, 1, "", "static_fmin"], [1031, 4, 1, "", "static_fmod"], [1463, 4, 1, "", "static_fourier_encode"], [267, 4, 1, "", "static_from_dlpack"], [273, 4, 1, "", "static_full_like"], [376, 4, 1, "", "static_function_supported_dtypes"], [379, 4, 1, "", "static_function_unsupported_dtypes"], [1470, 4, 1, "", "static_gather"], [1475, 4, 1, "", "static_gather_nd"], [1039, 4, 1, "", "static_gcd"], [195, 4, 1, "", "static_gelu"], [1487, 4, 1, "", "static_get_num_dims"], [1046, 4, 1, "", "static_gradient"], [600, 4, 1, "", "static_greater"], [605, 4, 1, "", "static_greater_equal"], [1052, 4, 1, "", "static_hamming_window"], [1056, 4, 1, "", "static_hann_window"], [1496, 4, 1, "", "static_has_nans"], [1061, 4, 1, "", "static_heaviside"], [1066, 4, 1, "", "static_hsplit"], [1071, 4, 1, "", "static_hstack"], [1076, 4, 1, "", "static_hypot"], [1081, 4, 1, "", "static_i0"], [1086, 4, 1, "", "static_ifft"], [384, 4, 1, "", "static_iinfo"], [1091, 4, 1, "", "static_imag"], [1745, 4, 1, "", "static_inner"], [1502, 4, 1, "", "static_inplace_decrement"], [1507, 4, 1, "", "static_inplace_increment"], [1512, 4, 1, "", "static_inplace_update"], [1096, 4, 1, "", "static_instance_norm"], [1102, 4, 1, "", "static_interpolate"], [1750, 4, 1, "", "static_inv"], [1518, 4, 1, "", "static_is_array"], [391, 4, 1, "", "static_is_bool_dtype"], [395, 4, 1, "", "static_is_complex_dtype"], [400, 4, 1, "", "static_is_float_dtype"], [405, 4, 1, "", "static_is_int_dtype"], [1523, 4, 1, "", "static_is_ivy_array"], [1531, 4, 1, "", "static_is_native_array"], [410, 4, 1, "", "static_is_uint_dtype"], [1110, 4, 1, "", "static_isclose"], [610, 4, 1, "", "static_isfinite"], [1115, 4, 1, "", "static_isin"], [615, 4, 1, "", "static_isinf"], [620, 4, 1, "", "static_isnan"], [625, 4, 1, "", "static_isreal"], [1119, 4, 1, "", "static_kaiser_bessel_derived_window"], [1123, 4, 1, "", "static_kaiser_window"], [1128, 4, 1, "", "static_kron"], [1133, 4, 1, "", "static_l2_normalize"], [1158, 4, 1, "", "static_lcm"], [201, 4, 1, "", "static_leaky_relu"], [630, 4, 1, "", "static_less"], [635, 4, 1, "", "static_less_equal"], [1163, 4, 1, "", "static_lexsort"], [1688, 4, 1, "", "static_linear"], [278, 4, 1, "", "static_linspace"], [640, 4, 1, "", "static_log"], [645, 4, 1, "", "static_log10"], [650, 4, 1, "", "static_log1p"], [655, 4, 1, "", "static_log2"], [206, 4, 1, "", "static_log_softmax"], [660, 4, 1, "", "static_logaddexp"], [1175, 4, 1, "", "static_logaddexp2"], [665, 4, 1, "", "static_logical_and"], [670, 4, 1, "", "static_logical_not"], [675, 4, 1, "", "static_logical_or"], [680, 4, 1, "", "static_logical_xor"], [1180, 4, 1, "", "static_logit"], [283, 4, 1, "", "static_logspace"], [1187, 4, 1, "", "static_lp_normalize"], [1693, 4, 1, "", "static_lstm_update"], [1755, 4, 1, "", "static_matmul"], [1216, 4, 1, "", "static_matrix_exp"], [1760, 4, 1, "", "static_matrix_norm"], [1765, 4, 1, "", "static_matrix_power"], [1770, 4, 1, "", "static_matrix_rank"], [1775, 4, 1, "", "static_matrix_transpose"], [1221, 4, 1, "", "static_max_pool1d"], [1226, 4, 1, "", "static_max_pool2d"], [1231, 4, 1, "", "static_max_pool3d"], [685, 4, 1, "", "static_maximum"], [1236, 4, 1, "", "static_median"], [288, 4, 1, "", "static_meshgrid"], [690, 4, 1, "", "static_minimum"], [211, 4, 1, "", "static_mish"], [1242, 4, 1, "", "static_moveaxis"], [1247, 4, 1, "", "static_msort"], [1698, 4, 1, "", "static_multi_head_attention"], [1975, 4, 1, "", "static_multinomial"], [695, 4, 1, "", "static_multiply"], [1252, 4, 1, "", "static_nan_to_num"], [1257, 4, 1, "", "static_nanmean"], [1262, 4, 1, "", "static_nanmedian"], [1267, 4, 1, "", "static_nansum"], [293, 4, 1, "", "static_native_array"], [700, 4, 1, "", "static_negative"], [1277, 4, 1, "", "static_nextafter"], [2017, 4, 1, "", "static_nonzero"], [705, 4, 1, "", "static_not_equal"], [298, 4, 1, "", "static_one_hot"], [301, 4, 1, "", "static_ones"], [306, 4, 1, "", "static_ones_like"], [1780, 4, 1, "", "static_outer"], [1286, 4, 1, "", "static_pad"], [1890, 4, 1, "", "static_permute_dims"], [1785, 4, 1, "", "static_pinv"], [1293, 4, 1, "", "static_poisson"], [710, 4, 1, "", "static_positive"], [715, 4, 1, "", "static_pow"], [1299, 4, 1, "", "static_prelu"], [2091, 4, 1, "", "static_prod"], [1790, 4, 1, "", "static_qr"], [1304, 4, 1, "", "static_quantile"], [720, 4, 1, "", "static_rad2deg"], [1980, 4, 1, "", "static_randint"], [1985, 4, 1, "", "static_random_normal"], [1990, 4, 1, "", "static_random_uniform"], [1315, 4, 1, "", "static_real"], [725, 4, 1, "", "static_reciprocal"], [216, 4, 1, "", "static_relu"], [730, 4, 1, "", "static_remainder"], [1895, 4, 1, "", "static_repeat"], [1900, 4, 1, "", "static_reshape"], [417, 4, 1, "", "static_result_type"], [1905, 4, 1, "", "static_roll"], [1320, 4, 1, "", "static_rot90"], [735, 4, 1, "", "static_round"], [1703, 4, 1, "", "static_scaled_dot_product_attention"], [1541, 4, 1, "", "static_scatter_flat"], [1546, 4, 1, "", "static_scatter_nd"], [2054, 4, 1, "", "static_searchsorted"], [1996, 4, 1, "", "static_shuffle"], [221, 4, 1, "", "static_sigmoid"], [740, 4, 1, "", "static_sign"], [1327, 4, 1, "", "static_signbit"], [745, 4, 1, "", "static_sin"], [1332, 4, 1, "", "static_sinc"], [750, 4, 1, "", "static_sinh"], [1795, 4, 1, "", "static_slogdet"], [226, 4, 1, "", "static_softmax"], [231, 4, 1, "", "static_softplus"], [1800, 4, 1, "", "static_solve"], [2059, 4, 1, "", "static_sort"], [1859, 4, 1, "", "static_sparse_cross_entropy"], [1910, 4, 1, "", "static_split"], [755, 4, 1, "", "static_sqrt"], [760, 4, 1, "", "static_square"], [1915, 4, 1, "", "static_squeeze"], [1562, 4, 1, "", "static_stable_divide"], [1567, 4, 1, "", "static_stable_pow"], [1920, 4, 1, "", "static_stack"], [1633, 4, 1, "", "static_stop_gradient"], [762, 4, 1, "", "static_subtract"], [2097, 4, 1, "", "static_sum"], [1569, 4, 1, "", "static_supports_inplace_updates"], [1802, 4, 1, "", "static_svd"], [1807, 4, 1, "", "static_svdvals"], [1922, 4, 1, "", "static_swapaxes"], [1351, 4, 1, "", "static_take_along_axis"], [767, 4, 1, "", "static_tan"], [772, 4, 1, "", "static_tanh"], [1812, 4, 1, "", "static_tensordot"], [1356, 4, 1, "", "static_thresholded_relu"], [1927, 4, 1, "", "static_tile"], [457, 4, 1, "", "static_to_device"], [1575, 4, 1, "", "static_to_list"], [1580, 4, 1, "", "static_to_numpy"], [1585, 4, 1, "", "static_to_scalar"], [1361, 4, 1, "", "static_top_k"], [1820, 4, 1, "", "static_trace"], [308, 4, 1, "", "static_tril"], [1369, 4, 1, "", "static_tril_indices"], [313, 4, 1, "", "static_triu"], [1373, 4, 1, "", "static_triu_indices"], [777, 4, 1, "", "static_trunc"], [782, 4, 1, "", "static_trunc_divide"], [2025, 4, 1, "", "static_unique_all"], [2030, 4, 1, "", "static_unique_counts"], [2035, 4, 1, "", "static_unique_inverse"], [2040, 4, 1, "", "static_unique_values"], [1377, 4, 1, "", "static_unravel_index"], [1932, 4, 1, "", "static_unstack"], [1597, 4, 1, "", "static_value_is_nan"], [1825, 4, 1, "", "static_vander"], [2102, 4, 1, "", "static_var"], [1830, 4, 1, "", "static_vecdot"], [1835, 4, 1, "", "static_vector_norm"], [1840, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [1383, 4, 1, "", "static_vorbis_window"], [1387, 4, 1, "", "static_vsplit"], [1392, 4, 1, "", "static_vstack"], [2019, 4, 1, "", "static_where"], [1397, 4, 1, "", "static_xlogy"], [1937, 4, 1, "", "static_zero_pad"], [318, 4, 1, "", "static_zeros"], [321, 4, 1, "", "static_zeros_like"], [1402, 4, 1, "", "static_zeta"], [2094, 4, 1, "", "std"], [1635, 4, 1, "", "stop_gradient"], [764, 4, 1, "", "subtract"], [2099, 4, 1, "", "sum"], [1571, 4, 1, "", "supports_inplace_updates"], [1804, 4, 1, "", "svd"], [1809, 4, 1, "", "svdvals"], [1924, 4, 1, "", "swapaxes"], [1353, 4, 1, "", "take_along_axis"], [769, 4, 1, "", "tan"], [774, 4, 1, "", "tanh"], [1813, 4, 1, "", "tensordot"], [1817, 4, 1, "", "tensorsolve"], [1358, 4, 1, "", "thresholded_relu"], [1929, 4, 1, "", "tile"], [459, 4, 1, "", "to_device"], [1582, 4, 1, "", "to_numpy"], [1587, 4, 1, "", "to_scalar"], [1363, 4, 1, "", "top_k"], [1822, 4, 1, "", "trace"], [310, 4, 1, "", "tril"], [1370, 4, 1, "", "tril_indices"], [315, 4, 1, "", "triu"], [1374, 4, 1, "", "triu_indices"], [779, 4, 1, "", "trunc"], [784, 4, 1, "", "trunc_divide"], [2027, 4, 1, "", "unique_all"], [2032, 4, 1, "", "unique_counts"], [2037, 4, 1, "", "unique_inverse"], [2042, 4, 1, "", "unique_values"], [1379, 4, 1, "", "unravel_index"], [1934, 4, 1, "", "unstack"], [1599, 4, 1, "", "value_is_nan"], [1827, 4, 1, "", "vander"], [2104, 4, 1, "", "var"], [1832, 4, 1, "", "vecdot"], [1837, 4, 1, "", "vector_norm"], [1842, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1384, 4, 1, "", "vorbis_window"], [1389, 4, 1, "", "vsplit"], [1394, 4, 1, "", "vstack"], [2021, 4, 1, "", "where"], [1399, 4, 1, "", "xlogy"], [1939, 4, 1, "", "zero_pad"], [323, 4, 1, "", "zeros_like"], [1404, 4, 1, "", "zeta"]], "ivy.container.conversions": [[92, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[92, 2, 1, "", "static_to_ivy"], [92, 2, 1, "", "static_to_native"], [92, 2, 1, "", "to_ivy"], [92, 2, 1, "", "to_native"]], "ivy.container.creation": [[94, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[94, 2, 1, "", "empty_like"], [94, 2, 1, "", "from_dlpack"], [94, 2, 1, "", "full_like"], [94, 2, 1, "", "linspace"], [94, 2, 1, "", "logspace"], [94, 2, 1, "", "meshgrid"], [94, 2, 1, "", "native_array"], [94, 2, 1, "", "one_hot"], [94, 2, 1, "", "ones_like"], [94, 2, 1, "", "static_arange"], [94, 2, 1, "", "static_asarray"], [94, 2, 1, "", "static_empty_like"], [94, 2, 1, "", "static_eye"], [94, 2, 1, "", "static_from_dlpack"], [94, 2, 1, "", "static_full_like"], [94, 2, 1, "", "static_linspace"], [94, 2, 1, "", "static_logspace"], [94, 2, 1, "", "static_meshgrid"], [94, 2, 1, "", "static_native_array"], [94, 2, 1, "", "static_one_hot"], [94, 2, 1, "", "static_ones"], [94, 2, 1, "", "static_ones_like"], [94, 2, 1, "", "static_tril"], [94, 2, 1, "", "static_triu"], [94, 2, 1, "", "static_zeros"], [94, 2, 1, "", "static_zeros_like"], [94, 2, 1, "", "tril"], [94, 2, 1, "", "triu"], [94, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[96, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[96, 2, 1, "", "astype"], [96, 2, 1, "", "broadcast_arrays"], [96, 2, 1, "", "broadcast_to"], [96, 2, 1, "", "can_cast"], [96, 2, 1, "", "dtype"], [96, 2, 1, "", "finfo"], [96, 2, 1, "", "iinfo"], [96, 2, 1, "", "is_bool_dtype"], [96, 2, 1, "", "is_complex_dtype"], [96, 2, 1, "", "is_float_dtype"], [96, 2, 1, "", "is_int_dtype"], [96, 2, 1, "", "is_uint_dtype"], [96, 2, 1, "", "result_type"], [96, 2, 1, "", "static_astype"], [96, 2, 1, "", "static_broadcast_arrays"], [96, 2, 1, "", "static_broadcast_to"], [96, 2, 1, "", "static_can_cast"], [96, 2, 1, "", "static_default_complex_dtype"], [96, 2, 1, "", "static_default_float_dtype"], [96, 2, 1, "", "static_dtype"], [96, 2, 1, "", "static_finfo"], [96, 2, 1, "", "static_function_supported_dtypes"], [96, 2, 1, "", "static_function_unsupported_dtypes"], [96, 2, 1, "", "static_iinfo"], [96, 2, 1, "", "static_is_bool_dtype"], [96, 2, 1, "", "static_is_complex_dtype"], [96, 2, 1, "", "static_is_float_dtype"], [96, 2, 1, "", "static_is_int_dtype"], [96, 2, 1, "", "static_is_uint_dtype"], [96, 2, 1, "", "static_result_type"]], "ivy.container.device": [[98, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[98, 2, 1, "", "dev"], [98, 2, 1, "", "static_dev"], [98, 2, 1, "", "static_to_device"], [98, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[100, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[100, 2, 1, "", "abs"], [100, 2, 1, "", "acos"], [100, 2, 1, "", "acosh"], [100, 2, 1, "", "add"], [100, 2, 1, "", "asin"], [100, 2, 1, "", "asinh"], [100, 2, 1, "", "atan"], [100, 2, 1, "", "atan2"], [100, 2, 1, "", "atanh"], [100, 2, 1, "", "bitwise_and"], [100, 2, 1, "", "bitwise_invert"], [100, 2, 1, "", "bitwise_left_shift"], [100, 2, 1, "", "bitwise_or"], [100, 2, 1, "", "bitwise_right_shift"], [100, 2, 1, "", "bitwise_xor"], [100, 2, 1, "", "ceil"], [100, 2, 1, "", "cos"], [100, 2, 1, "", "cosh"], [100, 2, 1, "", "deg2rad"], [100, 2, 1, "", "divide"], [100, 2, 1, "", "equal"], [100, 2, 1, "", "erf"], [100, 2, 1, "", "exp"], [100, 2, 1, "", "expm1"], [100, 2, 1, "", "floor"], [100, 2, 1, "", "floor_divide"], [100, 2, 1, "", "greater"], [100, 2, 1, "", "greater_equal"], [100, 2, 1, "", "isfinite"], [100, 2, 1, "", "isinf"], [100, 2, 1, "", "isnan"], [100, 2, 1, "", "isreal"], [100, 2, 1, "", "less"], [100, 2, 1, "", "less_equal"], [100, 2, 1, "", "log"], [100, 2, 1, "", "log10"], [100, 2, 1, "", "log1p"], [100, 2, 1, "", "log2"], [100, 2, 1, "", "logaddexp"], [100, 2, 1, "", "logical_and"], [100, 2, 1, "", "logical_not"], [100, 2, 1, "", "logical_or"], [100, 2, 1, "", "logical_xor"], [100, 2, 1, "", "maximum"], [100, 2, 1, "", "minimum"], [100, 2, 1, "", "multiply"], [100, 2, 1, "", "negative"], [100, 2, 1, "", "not_equal"], [100, 2, 1, "", "positive"], [100, 2, 1, "", "pow"], [100, 2, 1, "", "rad2deg"], [100, 2, 1, "", "reciprocal"], [100, 2, 1, "", "remainder"], [100, 2, 1, "", "round"], [100, 2, 1, "", "sign"], [100, 2, 1, "", "sin"], [100, 2, 1, "", "sinh"], [100, 2, 1, "", "sqrt"], [100, 2, 1, "", "square"], [100, 2, 1, "", "static_abs"], [100, 2, 1, "", "static_acos"], [100, 2, 1, "", "static_acosh"], [100, 2, 1, "", "static_add"], [100, 2, 1, "", "static_asin"], [100, 2, 1, "", "static_asinh"], [100, 2, 1, "", "static_atan"], [100, 2, 1, "", "static_atan2"], [100, 2, 1, "", "static_atanh"], [100, 2, 1, "", "static_bitwise_and"], [100, 2, 1, "", "static_bitwise_invert"], [100, 2, 1, "", "static_bitwise_left_shift"], [100, 2, 1, "", "static_bitwise_or"], [100, 2, 1, "", "static_bitwise_right_shift"], [100, 2, 1, "", "static_bitwise_xor"], [100, 2, 1, "", "static_ceil"], [100, 2, 1, "", "static_cos"], [100, 2, 1, "", "static_cosh"], [100, 2, 1, "", "static_deg2rad"], [100, 2, 1, "", "static_divide"], [100, 2, 1, "", "static_equal"], [100, 2, 1, "", "static_erf"], [100, 2, 1, "", "static_exp"], [100, 2, 1, "", "static_expm1"], [100, 2, 1, "", "static_floor"], [100, 2, 1, "", "static_floor_divide"], [100, 2, 1, "", "static_greater"], [100, 2, 1, "", "static_greater_equal"], [100, 2, 1, "", "static_isfinite"], [100, 2, 1, "", "static_isinf"], [100, 2, 1, "", "static_isnan"], [100, 2, 1, "", "static_isreal"], [100, 2, 1, "", "static_less"], [100, 2, 1, "", "static_less_equal"], [100, 2, 1, "", "static_log"], [100, 2, 1, "", "static_log10"], [100, 2, 1, "", "static_log1p"], [100, 2, 1, "", "static_log2"], [100, 2, 1, "", "static_logaddexp"], [100, 2, 1, "", "static_logical_and"], [100, 2, 1, "", "static_logical_not"], [100, 2, 1, "", "static_logical_or"], [100, 2, 1, "", "static_logical_xor"], [100, 2, 1, "", "static_maximum"], [100, 2, 1, "", "static_minimum"], [100, 2, 1, "", "static_multiply"], [100, 2, 1, "", "static_negative"], [100, 2, 1, "", "static_not_equal"], [100, 2, 1, "", "static_positive"], [100, 2, 1, "", "static_pow"], [100, 2, 1, "", "static_rad2deg"], [100, 2, 1, "", "static_reciprocal"], [100, 2, 1, "", "static_remainder"], [100, 2, 1, "", "static_round"], [100, 2, 1, "", "static_sign"], [100, 2, 1, "", "static_sin"], [100, 2, 1, "", "static_sinh"], [100, 2, 1, "", "static_sqrt"], [100, 2, 1, "", "static_square"], [100, 2, 1, "", "static_subtract"], [100, 2, 1, "", "static_tan"], [100, 2, 1, "", "static_tanh"], [100, 2, 1, "", "static_trapz"], [100, 2, 1, "", "static_trunc"], [100, 2, 1, "", "static_trunc_divide"], [100, 2, 1, "", "subtract"], [100, 2, 1, "", "tan"], [100, 2, 1, "", "tanh"], [100, 2, 1, "", "trapz"], [100, 2, 1, "", "trunc"], [100, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[101, 1, 1, "", "ContainerWithActivationExperimental"], [101, 1, 1, "", "ContainerWithConversionExperimental"], [101, 1, 1, "", "ContainerWithCreationExperimental"], [101, 1, 1, "", "ContainerWithData_typeExperimental"], [101, 1, 1, "", "ContainerWithDeviceExperimental"], [101, 1, 1, "", "ContainerWithElementWiseExperimental"], [101, 1, 1, "", "ContainerWithGeneralExperimental"], [101, 1, 1, "", "ContainerWithGradientsExperimental"], [101, 1, 1, "", "ContainerWithImageExperimental"], [101, 1, 1, "", "ContainerWithLayersExperimental"], [101, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [101, 1, 1, "", "ContainerWithLossesExperimental"], [101, 1, 1, "", "ContainerWithManipulationExperimental"], [101, 1, 1, "", "ContainerWithNormsExperimental"], [101, 1, 1, "", "ContainerWithRandomExperimental"], [101, 1, 1, "", "ContainerWithSearchingExperimental"], [101, 1, 1, "", "ContainerWithSetExperimental"], [101, 1, 1, "", "ContainerWithSortingExperimental"], [101, 1, 1, "", "ContainerWithStatisticalExperimental"], [101, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithActivationExperimental": [[101, 2, 1, "", "logit"], [101, 2, 1, "", "prelu"], [101, 2, 1, "", "static_logit"], [101, 2, 1, "", "static_prelu"], [101, 2, 1, "", "static_thresholded_relu"], [101, 2, 1, "", "thresholded_relu"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[101, 2, 1, "", "eye_like"], [101, 2, 1, "", "hamming_window"], [101, 2, 1, "", "hann_window"], [101, 2, 1, "", "kaiser_bessel_derived_window"], [101, 2, 1, "", "kaiser_window"], [101, 2, 1, "", "static_eye_like"], [101, 2, 1, "", "static_hamming_window"], [101, 2, 1, "", "static_hann_window"], [101, 2, 1, "", "static_kaiser_bessel_derived_window"], [101, 2, 1, "", "static_kaiser_window"], [101, 2, 1, "", "static_tril_indices"], [101, 2, 1, "", "static_triu_indices"], [101, 2, 1, "", "static_vorbis_window"], [101, 2, 1, "", "tril_indices"], [101, 2, 1, "", "triu_indices"], [101, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[101, 2, 1, "", "allclose"], [101, 2, 1, "", "angle"], [101, 2, 1, "", "binarizer"], [101, 2, 1, "", "copysign"], [101, 2, 1, "", "count_nonzero"], [101, 2, 1, "", "diff"], [101, 2, 1, "", "exp2"], [101, 2, 1, "", "fix"], [101, 2, 1, "", "float_power"], [101, 2, 1, "", "fmax"], [101, 2, 1, "", "fmin"], [101, 2, 1, "", "fmod"], [101, 2, 1, "", "gcd"], [101, 2, 1, "", "gradient"], [101, 2, 1, "", "hypot"], [101, 2, 1, "", "imag"], [101, 2, 1, "", "isclose"], [101, 2, 1, "", "lcm"], [101, 2, 1, "", "logaddexp2"], [101, 2, 1, "", "nan_to_num"], [101, 2, 1, "", "nansum"], [101, 2, 1, "", "nextafter"], [101, 2, 1, "", "real"], [101, 2, 1, "", "signbit"], [101, 2, 1, "", "sinc"], [101, 2, 1, "", "static_allclose"], [101, 2, 1, "", "static_angle"], [101, 2, 1, "", "static_binarizer"], [101, 2, 1, "", "static_copysign"], [101, 2, 1, "", "static_count_nonzero"], [101, 2, 1, "", "static_diff"], [101, 2, 1, "", "static_exp2"], [101, 2, 1, "", "static_fix"], [101, 2, 1, "", "static_float_power"], [101, 2, 1, "", "static_fmax"], [101, 2, 1, "", "static_fmin"], [101, 2, 1, "", "static_fmod"], [101, 2, 1, "", "static_gcd"], [101, 2, 1, "", "static_gradient"], [101, 2, 1, "", "static_hypot"], [101, 2, 1, "", "static_imag"], [101, 2, 1, "", "static_isclose"], [101, 2, 1, "", "static_lcm"], [101, 2, 1, "", "static_logaddexp2"], [101, 2, 1, "", "static_nan_to_num"], [101, 2, 1, "", "static_nansum"], [101, 2, 1, "", "static_nextafter"], [101, 2, 1, "", "static_real"], [101, 2, 1, "", "static_signbit"], [101, 2, 1, "", "static_sinc"], [101, 2, 1, "", "static_xlogy"], [101, 2, 1, "", "static_zeta"], [101, 2, 1, "", "xlogy"], [101, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[101, 2, 1, "", "isin"], [101, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[101, 2, 1, "", "avg_pool1d"], [101, 2, 1, "", "avg_pool2d"], [101, 2, 1, "", "avg_pool3d"], [101, 2, 1, "", "dct"], [101, 2, 1, "", "dft"], [101, 2, 1, "", "embedding"], [101, 2, 1, "", "fft"], [101, 2, 1, "", "ifft"], [101, 2, 1, "", "interpolate"], [101, 2, 1, "", "max_pool1d"], [101, 2, 1, "", "max_pool2d"], [101, 2, 1, "", "max_pool3d"], [101, 2, 1, "", "static_avg_pool1d"], [101, 2, 1, "", "static_avg_pool2d"], [101, 2, 1, "", "static_avg_pool3d"], [101, 2, 1, "", "static_dct"], [101, 2, 1, "", "static_dft"], [101, 2, 1, "", "static_embedding"], [101, 2, 1, "", "static_fft"], [101, 2, 1, "", "static_ifft"], [101, 2, 1, "", "static_interpolate"], [101, 2, 1, "", "static_max_pool1d"], [101, 2, 1, "", "static_max_pool2d"], [101, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[101, 2, 1, "", "adjoint"], [101, 2, 1, "", "diagflat"], [101, 2, 1, "", "eig"], [101, 2, 1, "", "eigvals"], [101, 2, 1, "", "kron"], [101, 2, 1, "", "matrix_exp"], [101, 2, 1, "", "static_adjoint"], [101, 2, 1, "", "static_diagflat"], [101, 2, 1, "", "static_eig"], [101, 2, 1, "", "static_eigvals"], [101, 2, 1, "", "static_kron"], [101, 2, 1, "", "static_matrix_exp"]], "ivy.container.experimental.ContainerWithLossesExperimental": [[101, 2, 1, "", "binary_cross_entropy_with_logits"], [101, 2, 1, "", "static_binary_cross_entropy_with_logits"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[101, 2, 1, "", "atleast_1d"], [101, 2, 1, "", "atleast_2d"], [101, 2, 1, "", "atleast_3d"], [101, 2, 1, "", "broadcast_shapes"], [101, 2, 1, "", "dsplit"], [101, 2, 1, "", "dstack"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "flatten"], [101, 2, 1, "", "fliplr"], [101, 2, 1, "", "flipud"], [101, 2, 1, "", "heaviside"], [101, 2, 1, "", "hsplit"], [101, 2, 1, "", "hstack"], [101, 2, 1, "", "i0"], [101, 2, 1, "", "moveaxis"], [101, 2, 1, "", "pad"], [101, 2, 1, "", "rot90"], [101, 2, 1, "", "static_atleast_1d"], [101, 2, 1, "", "static_atleast_2d"], [101, 2, 1, "", "static_atleast_3d"], [101, 2, 1, "", "static_broadcast_shapes"], [101, 2, 1, "", "static_dsplit"], [101, 2, 1, "", "static_dstack"], [101, 2, 1, "", "static_expand"], [101, 2, 1, "", "static_flatten"], [101, 2, 1, "", "static_fliplr"], [101, 2, 1, "", "static_flipud"], [101, 2, 1, "", "static_heaviside"], [101, 2, 1, "", "static_hsplit"], [101, 2, 1, "", "static_hstack"], [101, 2, 1, "", "static_i0"], [101, 2, 1, "", "static_moveaxis"], [101, 2, 1, "", "static_pad"], [101, 2, 1, "", "static_rot90"], [101, 2, 1, "", "static_take_along_axis"], [101, 2, 1, "", "static_top_k"], [101, 2, 1, "", "static_vsplit"], [101, 2, 1, "", "static_vstack"], [101, 2, 1, "", "take_along_axis"], [101, 2, 1, "", "top_k"], [101, 2, 1, "", "vsplit"], [101, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithNormsExperimental": [[101, 2, 1, "", "instance_norm"], [101, 2, 1, "", "l2_normalize"], [101, 2, 1, "", "lp_normalize"], [101, 2, 1, "", "static_instance_norm"], [101, 2, 1, "", "static_l2_normalize"], [101, 2, 1, "", "static_lp_normalize"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[101, 2, 1, "", "bernoulli"], [101, 2, 1, "", "beta"], [101, 2, 1, "", "dirichlet"], [101, 2, 1, "", "poisson"], [101, 2, 1, "", "static_bernoulli"], [101, 2, 1, "", "static_beta"], [101, 2, 1, "", "static_dirichlet"], [101, 2, 1, "", "static_poisson"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[101, 2, 1, "", "lexsort"], [101, 2, 1, "", "msort"], [101, 2, 1, "", "static_lexsort"], [101, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[101, 2, 1, "", "corrcoef"], [101, 2, 1, "", "median"], [101, 2, 1, "", "nanmean"], [101, 2, 1, "", "nanmedian"], [101, 2, 1, "", "quantile"], [101, 2, 1, "", "static_corrcoef"], [101, 2, 1, "", "static_median"], [101, 2, 1, "", "static_nanmean"], [101, 2, 1, "", "static_nanmedian"], [101, 2, 1, "", "static_quantile"], [101, 2, 1, "", "static_unravel_index"], [101, 2, 1, "", "unravel_index"]], "ivy.container.general": [[103, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[103, 2, 1, "", "all_equal"], [103, 2, 1, "", "array_equal"], [103, 2, 1, "", "assert_supports_inplace"], [103, 2, 1, "", "clip_matrix_norm"], [103, 2, 1, "", "clip_vector_norm"], [103, 2, 1, "", "einops_rearrange"], [103, 2, 1, "", "einops_reduce"], [103, 2, 1, "", "einops_repeat"], [103, 2, 1, "", "fourier_encode"], [103, 2, 1, "", "gather"], [103, 2, 1, "", "gather_nd"], [103, 2, 1, "", "get_num_dims"], [103, 2, 1, "", "has_nans"], [103, 2, 1, "", "inplace_decrement"], [103, 2, 1, "", "inplace_increment"], [103, 2, 1, "", "inplace_update"], [103, 2, 1, "", "is_array"], [103, 2, 1, "", "is_ivy_array"], [103, 2, 1, "", "is_native_array"], [103, 2, 1, "", "scatter_flat"], [103, 2, 1, "", "scatter_nd"], [103, 2, 1, "", "stable_divide"], [103, 2, 1, "", "stable_pow"], [103, 2, 1, "", "static_all_equal"], [103, 2, 1, "", "static_array_equal"], [103, 2, 1, "", "static_assert_supports_inplace"], [103, 2, 1, "", "static_clip_matrix_norm"], [103, 2, 1, "", "static_clip_vector_norm"], [103, 2, 1, "", "static_einops_rearrange"], [103, 2, 1, "", "static_einops_reduce"], [103, 2, 1, "", "static_einops_repeat"], [103, 2, 1, "", "static_fourier_encode"], [103, 2, 1, "", "static_gather"], [103, 2, 1, "", "static_gather_nd"], [103, 2, 1, "", "static_get_num_dims"], [103, 2, 1, "", "static_has_nans"], [103, 2, 1, "", "static_inplace_decrement"], [103, 2, 1, "", "static_inplace_increment"], [103, 2, 1, "", "static_inplace_update"], [103, 2, 1, "", "static_is_array"], [103, 2, 1, "", "static_is_ivy_array"], [103, 2, 1, "", "static_is_native_array"], [103, 2, 1, "", "static_scatter_flat"], [103, 2, 1, "", "static_scatter_nd"], [103, 2, 1, "", "static_stable_divide"], [103, 2, 1, "", "static_stable_pow"], [103, 2, 1, "", "static_supports_inplace_updates"], [103, 2, 1, "", "static_to_list"], [103, 2, 1, "", "static_to_numpy"], [103, 2, 1, "", "static_to_scalar"], [103, 2, 1, "", "static_value_is_nan"], [103, 2, 1, "", "supports_inplace_updates"], [103, 2, 1, "", "to_list"], [103, 2, 1, "", "to_numpy"], [103, 2, 1, "", "to_scalar"], [103, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[105, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[105, 2, 1, "", "adam_step"], [105, 2, 1, "", "adam_update"], [105, 2, 1, "", "gradient_descent_update"], [105, 2, 1, "", "lamb_update"], [105, 2, 1, "", "lars_update"], [105, 2, 1, "", "optimizer_update"], [105, 2, 1, "", "static_stop_gradient"], [105, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[107, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[109, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[109, 2, 1, "", "conv1d"], [109, 2, 1, "", "conv1d_transpose"], [109, 2, 1, "", "conv2d"], [109, 2, 1, "", "conv2d_transpose"], [109, 2, 1, "", "conv3d"], [109, 2, 1, "", "conv3d_transpose"], [109, 2, 1, "", "depthwise_conv2d"], [109, 2, 1, "", "dropout"], [109, 2, 1, "", "dropout1d"], [109, 2, 1, "", "linear"], [109, 2, 1, "", "lstm_update"], [109, 2, 1, "", "multi_head_attention"], [109, 2, 1, "", "scaled_dot_product_attention"], [109, 2, 1, "", "static_conv1d"], [109, 2, 1, "", "static_conv1d_transpose"], [109, 2, 1, "", "static_conv2d"], [109, 2, 1, "", "static_conv2d_transpose"], [109, 2, 1, "", "static_conv3d"], [109, 2, 1, "", "static_conv3d_transpose"], [109, 2, 1, "", "static_depthwise_conv2d"], [109, 2, 1, "", "static_dropout"], [109, 2, 1, "", "static_dropout1d"], [109, 2, 1, "", "static_linear"], [109, 2, 1, "", "static_lstm_update"], [109, 2, 1, "", "static_multi_head_attention"], [109, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[111, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[111, 2, 1, "", "cholesky"], [111, 2, 1, "", "cross"], [111, 2, 1, "", "det"], [111, 2, 1, "", "diag"], [111, 2, 1, "", "diagonal"], [111, 2, 1, "", "eigh"], [111, 2, 1, "", "eigvalsh"], [111, 2, 1, "", "inner"], [111, 2, 1, "", "inv"], [111, 2, 1, "", "matmul"], [111, 2, 1, "", "matrix_norm"], [111, 2, 1, "", "matrix_power"], [111, 2, 1, "", "matrix_rank"], [111, 2, 1, "", "matrix_transpose"], [111, 2, 1, "", "outer"], [111, 2, 1, "", "pinv"], [111, 2, 1, "", "qr"], [111, 2, 1, "", "slogdet"], [111, 2, 1, "", "solve"], [111, 2, 1, "", "static_cholesky"], [111, 2, 1, "", "static_cross"], [111, 2, 1, "", "static_det"], [111, 2, 1, "", "static_diag"], [111, 2, 1, "", "static_diagonal"], [111, 2, 1, "", "static_eigh"], [111, 2, 1, "", "static_eigvalsh"], [111, 2, 1, "", "static_inner"], [111, 2, 1, "", "static_inv"], [111, 2, 1, "", "static_matmul"], [111, 2, 1, "", "static_matrix_norm"], [111, 2, 1, "", "static_matrix_power"], [111, 2, 1, "", "static_matrix_rank"], [111, 2, 1, "", "static_matrix_transpose"], [111, 2, 1, "", "static_outer"], [111, 2, 1, "", "static_pinv"], [111, 2, 1, "", "static_qr"], [111, 2, 1, "", "static_slogdet"], [111, 2, 1, "", "static_solve"], [111, 2, 1, "", "static_svd"], [111, 2, 1, "", "static_svdvals"], [111, 2, 1, "", "static_tensordot"], [111, 2, 1, "", "static_trace"], [111, 2, 1, "", "static_vander"], [111, 2, 1, "", "static_vecdot"], [111, 2, 1, "", "static_vector_norm"], [111, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [111, 2, 1, "", "svd"], [111, 2, 1, "", "svdvals"], [111, 2, 1, "", "tensordot"], [111, 2, 1, "", "tensorsolve"], [111, 2, 1, "", "trace"], [111, 2, 1, "", "vander"], [111, 2, 1, "", "vecdot"], [111, 2, 1, "", "vector_norm"], [111, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[113, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[113, 2, 1, "", "binary_cross_entropy"], [113, 2, 1, "", "cross_entropy"], [113, 2, 1, "", "sparse_cross_entropy"], [113, 2, 1, "", "static_binary_cross_entropy"], [113, 2, 1, "", "static_cross_entropy"], [113, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[115, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[115, 2, 1, "", "clip"], [115, 2, 1, "", "concat"], [115, 2, 1, "", "constant_pad"], [115, 2, 1, "", "expand_dims"], [115, 2, 1, "", "flip"], [115, 2, 1, "", "permute_dims"], [115, 2, 1, "", "repeat"], [115, 2, 1, "", "reshape"], [115, 2, 1, "", "roll"], [115, 2, 1, "", "split"], [115, 2, 1, "", "squeeze"], [115, 2, 1, "", "stack"], [115, 2, 1, "", "static_clip"], [115, 2, 1, "", "static_concat"], [115, 2, 1, "", "static_constant_pad"], [115, 2, 1, "", "static_expand_dims"], [115, 2, 1, "", "static_flip"], [115, 2, 1, "", "static_permute_dims"], [115, 2, 1, "", "static_repeat"], [115, 2, 1, "", "static_reshape"], [115, 2, 1, "", "static_roll"], [115, 2, 1, "", "static_split"], [115, 2, 1, "", "static_squeeze"], [115, 2, 1, "", "static_stack"], [115, 2, 1, "", "static_swapaxes"], [115, 2, 1, "", "static_tile"], [115, 2, 1, "", "static_unstack"], [115, 2, 1, "", "static_zero_pad"], [115, 2, 1, "", "swapaxes"], [115, 2, 1, "", "tile"], [115, 2, 1, "", "unstack"], [115, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[117, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[117, 2, 1, "", "layer_norm"]], "ivy.container.random": [[119, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[119, 2, 1, "", "multinomial"], [119, 2, 1, "", "randint"], [119, 2, 1, "", "random_normal"], [119, 2, 1, "", "random_uniform"], [119, 2, 1, "", "shuffle"], [119, 2, 1, "", "static_multinomial"], [119, 2, 1, "", "static_randint"], [119, 2, 1, "", "static_random_normal"], [119, 2, 1, "", "static_random_uniform"], [119, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[121, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[121, 2, 1, "", "argmax"], [121, 2, 1, "", "argmin"], [121, 2, 1, "", "argwhere"], [121, 2, 1, "", "nonzero"], [121, 2, 1, "", "static_argmax"], [121, 2, 1, "", "static_argmin"], [121, 2, 1, "", "static_argwhere"], [121, 2, 1, "", "static_nonzero"], [121, 2, 1, "", "static_where"], [121, 2, 1, "", "where"]], "ivy.container.set": [[123, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[123, 2, 1, "", "static_unique_all"], [123, 2, 1, "", "static_unique_counts"], [123, 2, 1, "", "static_unique_inverse"], [123, 2, 1, "", "static_unique_values"], [123, 2, 1, "", "unique_all"], [123, 2, 1, "", "unique_counts"], [123, 2, 1, "", "unique_inverse"], [123, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[125, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[125, 2, 1, "", "argsort"], [125, 2, 1, "", "searchsorted"], [125, 2, 1, "", "sort"], [125, 2, 1, "", "static_argsort"], [125, 2, 1, "", "static_searchsorted"], [125, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[127, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[127, 2, 1, "", "cumprod"], [127, 2, 1, "", "cumsum"], [127, 2, 1, "", "einsum"], [127, 2, 1, "", "max"], [127, 2, 1, "", "mean"], [127, 2, 1, "", "min"], [127, 2, 1, "", "prod"], [127, 2, 1, "", "static_cumprod"], [127, 2, 1, "", "static_cumsum"], [127, 2, 1, "", "static_prod"], [127, 2, 1, "", "static_sum"], [127, 2, 1, "", "static_var"], [127, 2, 1, "", "std"], [127, 2, 1, "", "sum"], [127, 2, 1, "", "var"]], "ivy.container.utility": [[129, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[129, 2, 1, "", "all"], [129, 2, 1, "", "any"], [129, 2, 1, "", "static_all"], [129, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[131, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[173, 4, 1, "", "handle_array_function"], [174, 4, 1, "", "handle_array_like_without_promotion"], [175, 4, 1, "", "handle_nans"], [176, 4, 1, "", "handle_nestable"], [177, 4, 1, "", "handle_out_argument"], [178, 4, 1, "", "infer_device"], [179, 4, 1, "", "infer_dtype"], [180, 4, 1, "", "inputs_to_ivy_arrays"], [181, 4, 1, "", "inputs_to_native_arrays"], [182, 4, 1, "", "integer_arrays_to_float"], [183, 4, 1, "", "output_to_native_arrays"], [184, 4, 1, "", "outputs_to_ivy_arrays"], [185, 4, 1, "", "to_ivy_arrays_and_back"], [186, 4, 1, "", "to_native_arrays_and_back"], [187, 4, 1, "", "try_array_function_override"], [172, 4, 1, "", "with_supported_device_and_dtypes"], [172, 4, 1, "", "with_supported_devices"], [172, 4, 1, "", "with_supported_dtypes"], [172, 4, 1, "", "with_unsupported_device_and_dtypes"], [172, 4, 1, "", "with_unsupported_devices"], [172, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[189, 0, 0, "-", "activations"], [233, 0, 0, "-", "constants"], [234, 0, 0, "-", "control_flow_ops"], [239, 0, 0, "-", "creation"], [325, 0, 0, "-", "data_type"], [430, 0, 0, "-", "device"], [465, 0, 0, "-", "elementwise"], [786, 0, 0, "-", "experimental"], [1407, 0, 0, "-", "general"], [1602, 0, 0, "-", "gradients"], [1640, 0, 0, "-", "layers"], [1704, 0, 0, "-", "linear_algebra"], [1844, 0, 0, "-", "losses"], [1860, 0, 0, "-", "manipulation"], [1941, 0, 0, "-", "meta"], [1945, 0, 0, "-", "nest"], [1965, 0, 0, "-", "norms"], [1970, 0, 0, "-", "random"], [1997, 0, 0, "-", "searching"], [2023, 0, 0, "-", "set"], [2044, 0, 0, "-", "sorting"], [2060, 0, 0, "-", "statistical"], [2106, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[190, 4, 1, "", "deserialize"], [194, 4, 1, "", "gelu"], [196, 4, 1, "", "get"], [200, 4, 1, "", "leaky_relu"], [205, 4, 1, "", "log_softmax"], [210, 4, 1, "", "mish"], [215, 4, 1, "", "relu"], [220, 4, 1, "", "sigmoid"], [225, 4, 1, "", "softmax"], [230, 4, 1, "", "softplus"]], "ivy.functional.ivy.constants": [[233, 5, 1, "", "e"], [233, 5, 1, "", "inf"], [233, 5, 1, "", "nan"], [233, 5, 1, "", "newaxis"], [233, 5, 1, "", "pi"]], "ivy.functional.ivy.control_flow_ops": [[235, 4, 1, "", "IfElse"], [236, 4, 1, "", "WhileLoop"], [237, 4, 1, "", "if_else"], [238, 4, 1, "", "while_loop"]], "ivy.functional.ivy.creation": [[240, 1, 1, "", "NestedSequence"], [242, 4, 1, "", "arange"], [239, 4, 1, "", "array"], [246, 4, 1, "", "asarray"], [248, 4, 1, "", "asarray_handle_nestable"], [249, 4, 1, "", "asarray_infer_device"], [250, 4, 1, "", "asarray_to_native_arrays_and_back"], [253, 4, 1, "", "copy_array"], [254, 4, 1, "", "empty"], [258, 4, 1, "", "empty_like"], [261, 4, 1, "", "eye"], [266, 4, 1, "", "from_dlpack"], [268, 4, 1, "", "full"], [272, 4, 1, "", "full_like"], [277, 4, 1, "", "linspace"], [282, 4, 1, "", "logspace"], [287, 4, 1, "", "meshgrid"], [292, 4, 1, "", "native_array"], [297, 4, 1, "", "one_hot"], [300, 4, 1, "", "ones"], [305, 4, 1, "", "ones_like"], [311, 4, 1, "", "tril"], [316, 4, 1, "", "triu"], [319, 4, 1, "", "zeros"], [324, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[240, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[326, 1, 1, "", "DefaultComplexDtype"], [327, 1, 1, "", "DefaultDtype"], [328, 1, 1, "", "DefaultFloatDtype"], [329, 1, 1, "", "DefaultIntDtype"], [330, 1, 1, "", "DefaultUintDtype"], [331, 4, 1, "", "as_ivy_dtype"], [332, 4, 1, "", "as_native_dtype"], [336, 4, 1, "", "astype"], [341, 4, 1, "", "broadcast_arrays"], [346, 4, 1, "", "broadcast_to"], [351, 4, 1, "", "can_cast"], [353, 4, 1, "", "check_float"], [354, 4, 1, "", "closest_valid_dtype"], [356, 4, 1, "", "default_complex_dtype"], [358, 4, 1, "", "default_dtype"], [360, 4, 1, "", "default_float_dtype"], [362, 4, 1, "", "default_int_dtype"], [363, 4, 1, "", "default_uint_dtype"], [366, 4, 1, "", "dtype"], [368, 4, 1, "", "dtype_bits"], [372, 4, 1, "", "finfo"], [375, 4, 1, "", "function_supported_dtypes"], [378, 4, 1, "", "function_unsupported_dtypes"], [383, 4, 1, "", "iinfo"], [385, 4, 1, "", "infer_default_dtype"], [386, 4, 1, "", "invalid_dtype"], [390, 4, 1, "", "is_bool_dtype"], [394, 4, 1, "", "is_complex_dtype"], [399, 4, 1, "", "is_float_dtype"], [404, 4, 1, "", "is_int_dtype"], [409, 4, 1, "", "is_uint_dtype"], [411, 4, 1, "", "promote_types"], [412, 4, 1, "", "promote_types_of_inputs"], [416, 4, 1, "", "result_type"], [418, 4, 1, "", "set_default_complex_dtype"], [419, 4, 1, "", "set_default_dtype"], [420, 4, 1, "", "set_default_float_dtype"], [421, 4, 1, "", "set_default_int_dtype"], [422, 4, 1, "", "set_default_uint_dtype"], [423, 4, 1, "", "type_promote_arrays"], [424, 4, 1, "", "unset_default_complex_dtype"], [425, 4, 1, "", "unset_default_dtype"], [426, 4, 1, "", "unset_default_float_dtype"], [427, 4, 1, "", "unset_default_int_dtype"], [428, 4, 1, "", "unset_default_uint_dtype"], [429, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultComplexDtype": [[326, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultDtype": [[327, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[328, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[329, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[330, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[431, 1, 1, "", "DefaultDevice"], [432, 1, 1, "", "Profiler"], [433, 4, 1, "", "as_ivy_dev"], [434, 4, 1, "", "as_native_dev"], [435, 4, 1, "", "clear_mem_on_dev"], [436, 4, 1, "", "default_device"], [440, 4, 1, "", "dev"], [442, 4, 1, "", "dev_util"], [443, 4, 1, "", "function_supported_devices"], [444, 4, 1, "", "function_unsupported_devices"], [445, 4, 1, "", "get_all_ivy_arrays_on_dev"], [446, 4, 1, "", "gpu_is_available"], [447, 4, 1, "", "num_cpu_cores"], [448, 4, 1, "", "num_gpus"], [449, 4, 1, "", "num_ivy_arrays_on_dev"], [450, 4, 1, "", "percent_used_mem_on_dev"], [451, 4, 1, "", "print_all_ivy_arrays_on_dev"], [452, 4, 1, "", "set_default_device"], [453, 4, 1, "", "set_split_factor"], [454, 4, 1, "", "split_factor"], [455, 4, 1, "", "split_func_call"], [460, 4, 1, "", "to_device"], [461, 4, 1, "", "total_mem_on_dev"], [462, 4, 1, "", "tpu_is_available"], [463, 4, 1, "", "unset_default_device"], [464, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[431, 2, 1, "", "__enter__"], [431, 2, 1, "", "__exit__"], [431, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[432, 2, 1, "", "__init__"], [432, 2, 1, "", "start"], [432, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[469, 4, 1, "", "abs"], [474, 4, 1, "", "acos"], [479, 4, 1, "", "acosh"], [484, 4, 1, "", "add"], [489, 4, 1, "", "asin"], [494, 4, 1, "", "asinh"], [499, 4, 1, "", "atan"], [504, 4, 1, "", "atan2"], [509, 4, 1, "", "atanh"], [514, 4, 1, "", "bitwise_and"], [519, 4, 1, "", "bitwise_invert"], [524, 4, 1, "", "bitwise_left_shift"], [529, 4, 1, "", "bitwise_or"], [534, 4, 1, "", "bitwise_right_shift"], [539, 4, 1, "", "bitwise_xor"], [544, 4, 1, "", "ceil"], [549, 4, 1, "", "cos"], [554, 4, 1, "", "cosh"], [559, 4, 1, "", "deg2rad"], [564, 4, 1, "", "divide"], [569, 4, 1, "", "equal"], [574, 4, 1, "", "erf"], [579, 4, 1, "", "exp"], [584, 4, 1, "", "expm1"], [589, 4, 1, "", "floor"], [594, 4, 1, "", "floor_divide"], [599, 4, 1, "", "greater"], [604, 4, 1, "", "greater_equal"], [609, 4, 1, "", "isfinite"], [614, 4, 1, "", "isinf"], [619, 4, 1, "", "isnan"], [624, 4, 1, "", "isreal"], [629, 4, 1, "", "less"], [634, 4, 1, "", "less_equal"], [639, 4, 1, "", "log"], [644, 4, 1, "", "log10"], [649, 4, 1, "", "log1p"], [654, 4, 1, "", "log2"], [659, 4, 1, "", "logaddexp"], [664, 4, 1, "", "logical_and"], [669, 4, 1, "", "logical_not"], [674, 4, 1, "", "logical_or"], [679, 4, 1, "", "logical_xor"], [684, 4, 1, "", "maximum"], [689, 4, 1, "", "minimum"], [694, 4, 1, "", "multiply"], [699, 4, 1, "", "negative"], [704, 4, 1, "", "not_equal"], [709, 4, 1, "", "positive"], [714, 4, 1, "", "pow"], [719, 4, 1, "", "rad2deg"], [724, 4, 1, "", "reciprocal"], [729, 4, 1, "", "remainder"], [734, 4, 1, "", "round"], [739, 4, 1, "", "sign"], [744, 4, 1, "", "sin"], [749, 4, 1, "", "sinh"], [754, 4, 1, "", "sqrt"], [759, 4, 1, "", "square"], [765, 4, 1, "", "subtract"], [770, 4, 1, "", "tan"], [775, 4, 1, "", "tanh"], [780, 4, 1, "", "trunc"], [785, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.experimental": [[787, 1, 1, "", "NativeSparseArray"], [788, 1, 1, "", "SparseArray"], [789, 0, 0, "-", "activations"], [796, 4, 1, "", "adjoint"], [801, 4, 1, "", "allclose"], [806, 4, 1, "", "angle"], [811, 4, 1, "", "atleast_1d"], [816, 4, 1, "", "atleast_2d"], [821, 4, 1, "", "atleast_3d"], [826, 4, 1, "", "avg_pool1d"], [831, 4, 1, "", "avg_pool2d"], [836, 4, 1, "", "avg_pool3d"], [841, 4, 1, "", "bernoulli"], [846, 4, 1, "", "beta"], [848, 4, 1, "", "bicubic"], [852, 4, 1, "", "binarizer"], [856, 4, 1, "", "binary_cross_entropy_with_logits"], [858, 4, 1, "", "bind_custom_gradient_function"], [861, 4, 1, "", "broadcast_shapes"], [863, 0, 0, "-", "compilation"], [864, 0, 0, "-", "constants"], [868, 4, 1, "", "copysign"], [873, 4, 1, "", "corrcoef"], [878, 4, 1, "", "count_nonzero"], [880, 0, 0, "-", "creation"], [889, 4, 1, "", "cubic"], [890, 0, 0, "-", "data_type"], [895, 4, 1, "", "dct"], [897, 0, 0, "-", "device"], [900, 4, 1, "", "dft"], [905, 4, 1, "", "diagflat"], [910, 4, 1, "", "diff"], [915, 4, 1, "", "dirichlet"], [917, 4, 1, "", "dropout1d"], [921, 4, 1, "", "dsplit"], [926, 4, 1, "", "dstack"], [931, 4, 1, "", "eig"], [936, 4, 1, "", "eigvals"], [938, 0, 0, "-", "elementwise"], [970, 4, 1, "", "embedding"], [975, 4, 1, "", "exp2"], [980, 4, 1, "", "expand"], [985, 4, 1, "", "eye_like"], [990, 4, 1, "", "fft"], [995, 4, 1, "", "fix"], [1000, 4, 1, "", "flatten"], [1005, 4, 1, "", "fliplr"], [1010, 4, 1, "", "flipud"], [1015, 4, 1, "", "float_power"], [1020, 4, 1, "", "fmax"], [1025, 4, 1, "", "fmin"], [1030, 4, 1, "", "fmod"], [1034, 4, 1, "", "gamma"], [1038, 4, 1, "", "gcd"], [1040, 0, 0, "-", "general"], [1045, 4, 1, "", "gradient"], [1047, 0, 0, "-", "gradients"], [1051, 4, 1, "", "hamming_window"], [1055, 4, 1, "", "hann_window"], [1060, 4, 1, "", "heaviside"], [1065, 4, 1, "", "hsplit"], [1070, 4, 1, "", "hstack"], [1075, 4, 1, "", "hypot"], [1080, 4, 1, "", "i0"], [1085, 4, 1, "", "ifft"], [1090, 4, 1, "", "imag"], [1095, 4, 1, "", "instance_norm"], [1097, 4, 1, "", "interp"], [1101, 4, 1, "", "interpolate"], [1103, 4, 1, "", "is_ivy_sparse_array"], [1104, 4, 1, "", "is_native_dtype"], [1105, 4, 1, "", "is_native_sparse_array"], [1109, 4, 1, "", "isclose"], [1114, 4, 1, "", "isin"], [1118, 4, 1, "", "kaiser_bessel_derived_window"], [1122, 4, 1, "", "kaiser_window"], [1127, 4, 1, "", "kron"], [1132, 4, 1, "", "l2_normalize"], [1134, 0, 0, "-", "layers"], [1157, 4, 1, "", "lcm"], [1162, 4, 1, "", "lexsort"], [1164, 0, 0, "-", "linear_algebra"], [1174, 4, 1, "", "logaddexp2"], [1179, 4, 1, "", "logit"], [1181, 0, 0, "-", "losses"], [1186, 4, 1, "", "lp_normalize"], [1188, 0, 0, "-", "manipulation"], [1215, 4, 1, "", "matrix_exp"], [1220, 4, 1, "", "max_pool1d"], [1225, 4, 1, "", "max_pool2d"], [1230, 4, 1, "", "max_pool3d"], [1235, 4, 1, "", "median"], [1237, 0, 0, "-", "meta"], [1241, 4, 1, "", "moveaxis"], [1246, 4, 1, "", "msort"], [1251, 4, 1, "", "nan_to_num"], [1256, 4, 1, "", "nanmean"], [1261, 4, 1, "", "nanmedian"], [1266, 4, 1, "", "nansum"], [1268, 4, 1, "", "native_sparse_array"], [1269, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"], [1270, 4, 1, "", "ndenumerate"], [1271, 4, 1, "", "ndindex"], [1272, 0, 0, "-", "nest"], [1276, 4, 1, "", "nextafter"], [1278, 0, 0, "-", "norms"], [1285, 4, 1, "", "pad"], [1287, 4, 1, "", "paddedRow"], [1288, 4, 1, "", "padding_ceil_mode"], [1292, 4, 1, "", "poisson"], [1294, 4, 1, "", "polynomial_calclulation"], [1298, 4, 1, "", "prelu"], [1303, 4, 1, "", "quantile"], [1305, 0, 0, "-", "random"], [1314, 4, 1, "", "real"], [1319, 4, 1, "", "rot90"], [1321, 0, 0, "-", "searching"], [1322, 0, 0, "-", "set"], [1326, 4, 1, "", "signbit"], [1331, 4, 1, "", "sinc"], [1333, 0, 0, "-", "sorting"], [1336, 0, 0, "-", "sparse_array"], [1343, 0, 0, "-", "statistical"], [1354, 4, 1, "", "take_along_axis"], [1359, 4, 1, "", "thresholded_relu"], [1364, 4, 1, "", "top_k"], [1367, 4, 1, "", "trapz"], [1371, 4, 1, "", "tril_indices"], [1375, 4, 1, "", "triu_indices"], [1380, 4, 1, "", "unravel_index"], [1381, 0, 0, "-", "utility"], [1385, 4, 1, "", "vorbis_window"], [1390, 4, 1, "", "vsplit"], [1395, 4, 1, "", "vstack"], [1400, 4, 1, "", "xlogy"], [1405, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.SparseArray": [[788, 2, 1, "", "__init__"], [788, 3, 1, "", "ccol_indices"], [788, 3, 1, "", "col_indices"], [788, 3, 1, "", "coo_indices"], [788, 3, 1, "", "crow_indices"], [788, 3, 1, "", "data"], [788, 3, 1, "", "dense_shape"], [788, 3, 1, "", "row_indices"], [788, 2, 1, "", "to_dense_array"], [788, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.activations": [[790, 4, 1, "", "logit"], [791, 4, 1, "", "prelu"], [792, 4, 1, "", "thresholded_relu"]], "ivy.functional.ivy.experimental.creation": [[881, 4, 1, "", "eye_like"], [882, 4, 1, "", "hamming_window"], [883, 4, 1, "", "hann_window"], [884, 4, 1, "", "kaiser_bessel_derived_window"], [885, 4, 1, "", "kaiser_window"], [886, 4, 1, "", "tril_indices"], [887, 4, 1, "", "triu_indices"], [888, 4, 1, "", "vorbis_window"]], "ivy.functional.ivy.experimental.data_type": [[891, 4, 1, "", "is_native_dtype"]], "ivy.functional.ivy.experimental.elementwise": [[939, 4, 1, "", "allclose"], [940, 4, 1, "", "angle"], [941, 4, 1, "", "binarizer"], [942, 4, 1, "", "copysign"], [943, 4, 1, "", "count_nonzero"], [944, 4, 1, "", "diff"], [945, 4, 1, "", "exp2"], [946, 4, 1, "", "fix"], [947, 4, 1, "", "float_power"], [948, 4, 1, "", "fmax"], [949, 4, 1, "", "fmin"], [950, 4, 1, "", "fmod"], [951, 4, 1, "", "gcd"], [952, 4, 1, "", "gradient"], [953, 4, 1, "", "hypot"], [954, 4, 1, "", "imag"], [955, 4, 1, "", "isclose"], [956, 4, 1, "", "lcm"], [957, 4, 1, "", "logaddexp2"], [958, 4, 1, "", "nan_to_num"], [959, 4, 1, "", "nansum"], [960, 4, 1, "", "nextafter"], [961, 4, 1, "", "real"], [962, 4, 1, "", "signbit"], [963, 4, 1, "", "sinc"], [964, 4, 1, "", "trapz"], [965, 4, 1, "", "xlogy"], [966, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.general": [[1041, 4, 1, "", "isin"]], "ivy.functional.ivy.experimental.gradients": [[1048, 4, 1, "", "bind_custom_gradient_function"]], "ivy.functional.ivy.experimental.layers": [[1135, 4, 1, "", "avg_pool1d"], [1136, 4, 1, "", "avg_pool2d"], [1137, 4, 1, "", "avg_pool3d"], [1138, 4, 1, "", "bicubic"], [1139, 4, 1, "", "cubic"], [1140, 4, 1, "", "dct"], [1141, 4, 1, "", "dft"], [1142, 4, 1, "", "dropout1d"], [1143, 4, 1, "", "embedding"], [1144, 4, 1, "", "fft"], [1145, 4, 1, "", "ifft"], [1146, 4, 1, "", "interp"], [1147, 4, 1, "", "interpolate"], [1148, 4, 1, "", "max_pool1d"], [1149, 4, 1, "", "max_pool2d"], [1150, 4, 1, "", "max_pool3d"], [1151, 4, 1, "", "paddedRow"], [1152, 4, 1, "", "padding_ceil_mode"], [1153, 4, 1, "", "polynomial_calclulation"]], "ivy.functional.ivy.experimental.linear_algebra": [[1165, 4, 1, "", "adjoint"], [1166, 4, 1, "", "diagflat"], [1167, 4, 1, "", "eig"], [1168, 4, 1, "", "eigvals"], [1169, 4, 1, "", "kron"], [1170, 4, 1, "", "matrix_exp"]], "ivy.functional.ivy.experimental.losses": [[1182, 4, 1, "", "binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.manipulation": [[1189, 4, 1, "", "atleast_1d"], [1190, 4, 1, "", "atleast_2d"], [1191, 4, 1, "", "atleast_3d"], [1192, 4, 1, "", "broadcast_shapes"], [1193, 4, 1, "", "dsplit"], [1194, 4, 1, "", "dstack"], [1195, 4, 1, "", "expand"], [1196, 4, 1, "", "flatten"], [1197, 4, 1, "", "fliplr"], [1198, 4, 1, "", "flipud"], [1199, 4, 1, "", "heaviside"], [1200, 4, 1, "", "hsplit"], [1201, 4, 1, "", "hstack"], [1202, 4, 1, "", "i0"], [1203, 4, 1, "", "moveaxis"], [1204, 4, 1, "", "ndenumerate"], [1205, 4, 1, "", "ndindex"], [1206, 4, 1, "", "pad"], [1207, 4, 1, "", "rot90"], [1208, 4, 1, "", "take_along_axis"], [1209, 4, 1, "", "top_k"], [1210, 4, 1, "", "vsplit"], [1211, 4, 1, "", "vstack"]], "ivy.functional.ivy.experimental.norms": [[1279, 4, 1, "", "instance_norm"], [1280, 4, 1, "", "l2_normalize"], [1281, 4, 1, "", "lp_normalize"]], "ivy.functional.ivy.experimental.random": [[1306, 4, 1, "", "bernoulli"], [1307, 4, 1, "", "beta"], [1308, 4, 1, "", "dirichlet"], [1309, 4, 1, "", "gamma"], [1310, 4, 1, "", "poisson"]], "ivy.functional.ivy.experimental.sorting": [[1334, 4, 1, "", "lexsort"], [1335, 4, 1, "", "msort"]], "ivy.functional.ivy.experimental.sparse_array": [[1337, 1, 1, "", "NativeSparseArray"], [1338, 1, 1, "", "SparseArray"], [1339, 4, 1, "", "is_ivy_sparse_array"], [1340, 4, 1, "", "is_native_sparse_array"], [1341, 4, 1, "", "native_sparse_array"], [1342, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.ivy.experimental.sparse_array.SparseArray": [[1338, 2, 1, "", "__init__"], [1338, 3, 1, "", "ccol_indices"], [1338, 3, 1, "", "col_indices"], [1338, 3, 1, "", "coo_indices"], [1338, 3, 1, "", "crow_indices"], [1338, 3, 1, "", "data"], [1338, 3, 1, "", "dense_shape"], [1338, 3, 1, "", "row_indices"], [1338, 2, 1, "", "to_dense_array"], [1338, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.statistical": [[1344, 4, 1, "", "corrcoef"], [1345, 4, 1, "", "median"], [1346, 4, 1, "", "nanmean"], [1347, 4, 1, "", "nanmedian"], [1348, 4, 1, "", "quantile"], [1349, 4, 1, "", "unravel_index"]], "ivy.functional.ivy.general": [[1411, 4, 1, "", "all_equal"], [1413, 4, 1, "", "arg_info"], [1414, 4, 1, "", "arg_names"], [1418, 4, 1, "", "array_equal"], [1423, 4, 1, "", "assert_supports_inplace"], [1425, 4, 1, "", "cache_fn"], [1429, 4, 1, "", "clip_matrix_norm"], [1434, 4, 1, "", "clip_vector_norm"], [1436, 4, 1, "", "container_types"], [1437, 4, 1, "", "current_backend_str"], [1440, 4, 1, "", "default"], [1444, 4, 1, "", "einops_rearrange"], [1449, 4, 1, "", "einops_reduce"], [1454, 4, 1, "", "einops_repeat"], [1458, 4, 1, "", "exists"], [1462, 4, 1, "", "fourier_encode"], [1464, 4, 1, "", "function_supported_devices_and_dtypes"], [1465, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1469, 4, 1, "", "gather"], [1474, 4, 1, "", "gather_nd"], [1476, 4, 1, "", "get_all_arrays_in_memory"], [1477, 4, 1, "", "get_array_mode"], [1478, 4, 1, "", "get_exception_trace_mode"], [1479, 4, 1, "", "get_item"], [1480, 4, 1, "", "get_min_base"], [1481, 4, 1, "", "get_min_denominator"], [1482, 4, 1, "", "get_nestable_mode"], [1486, 4, 1, "", "get_num_dims"], [1488, 4, 1, "", "get_queue_timeout"], [1489, 4, 1, "", "get_referrers_recursive"], [1490, 4, 1, "", "get_show_func_wrapper_trace_mode"], [1491, 4, 1, "", "get_tmp_dir"], [1495, 4, 1, "", "has_nans"], [1497, 4, 1, "", "inplace_arrays_supported"], [1501, 4, 1, "", "inplace_decrement"], [1506, 4, 1, "", "inplace_increment"], [1511, 4, 1, "", "inplace_update"], [1513, 4, 1, "", "inplace_variables_supported"], [1517, 4, 1, "", "is_array"], [1522, 4, 1, "", "is_ivy_array"], [1526, 4, 1, "", "is_ivy_container"], [1530, 4, 1, "", "is_native_array"], [1532, 4, 1, "", "isscalar"], [1533, 4, 1, "", "match_kwargs"], [1534, 4, 1, "", "multiprocessing"], [1535, 4, 1, "", "num_arrays_in_memory"], [1536, 4, 1, "", "print_all_arrays_in_memory"], [1540, 4, 1, "", "scatter_flat"], [1545, 4, 1, "", "scatter_nd"], [1547, 4, 1, "", "set_array_mode"], [1548, 4, 1, "", "set_exception_trace_mode"], [1549, 4, 1, "", "set_min_base"], [1550, 4, 1, "", "set_min_denominator"], [1551, 4, 1, "", "set_nestable_mode"], [1552, 4, 1, "", "set_queue_timeout"], [1553, 4, 1, "", "set_shape_array_mode"], [1554, 4, 1, "", "set_show_func_wrapper_trace_mode"], [1555, 4, 1, "", "set_tmp_dir"], [1556, 4, 1, "", "shape"], [1557, 4, 1, "", "shape_array_mode"], [1561, 4, 1, "", "stable_divide"], [1566, 4, 1, "", "stable_pow"], [1572, 4, 1, "", "supports_inplace_updates"], [1573, 4, 1, "", "to_ivy_shape"], [1577, 4, 1, "", "to_list"], [1578, 4, 1, "", "to_native_shape"], [1583, 4, 1, "", "to_numpy"], [1588, 4, 1, "", "to_scalar"], [1589, 4, 1, "", "try_else_none"], [1590, 4, 1, "", "unset_array_mode"], [1591, 4, 1, "", "unset_exception_trace_mode"], [1592, 4, 1, "", "unset_nestable_mode"], [1593, 4, 1, "", "unset_queue_timeout"], [1594, 4, 1, "", "unset_shape_array_mode"], [1595, 4, 1, "", "unset_show_func_wrapper_trace_mode"], [1600, 4, 1, "", "value_is_nan"], [1601, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1603, 1, 1, "", "GradientTracking"], [1607, 4, 1, "", "adam_step"], [1611, 4, 1, "", "adam_update"], [1612, 4, 1, "", "execute_with_gradients"], [1613, 4, 1, "", "grad"], [1617, 4, 1, "", "gradient_descent_update"], [1618, 4, 1, "", "jac"], [1622, 4, 1, "", "lamb_update"], [1626, 4, 1, "", "lars_update"], [1630, 4, 1, "", "optimizer_update"], [1631, 4, 1, "", "set_with_grads"], [1636, 4, 1, "", "stop_gradient"], [1637, 4, 1, "", "unset_with_grads"], [1638, 4, 1, "", "value_and_grad"], [1639, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1603, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1641, 4, 1, "", "conv"], [1645, 4, 1, "", "conv1d"], [1650, 4, 1, "", "conv1d_transpose"], [1655, 4, 1, "", "conv2d"], [1660, 4, 1, "", "conv2d_transpose"], [1665, 4, 1, "", "conv3d"], [1670, 4, 1, "", "conv3d_transpose"], [1672, 4, 1, "", "conv_general_dilated"], [1673, 4, 1, "", "conv_general_transpose"], [1677, 4, 1, "", "depthwise_conv2d"], [1682, 4, 1, "", "dropout"], [1687, 4, 1, "", "linear"], [1692, 4, 1, "", "lstm_update"], [1697, 4, 1, "", "multi_head_attention"], [1702, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1708, 4, 1, "", "cholesky"], [1713, 4, 1, "", "cross"], [1718, 4, 1, "", "det"], [1723, 4, 1, "", "diag"], [1728, 4, 1, "", "diagonal"], [1730, 4, 1, "", "eig"], [1734, 4, 1, "", "eigh"], [1739, 4, 1, "", "eigvalsh"], [1744, 4, 1, "", "inner"], [1749, 4, 1, "", "inv"], [1754, 4, 1, "", "matmul"], [1759, 4, 1, "", "matrix_norm"], [1764, 4, 1, "", "matrix_power"], [1769, 4, 1, "", "matrix_rank"], [1774, 4, 1, "", "matrix_transpose"], [1779, 4, 1, "", "outer"], [1784, 4, 1, "", "pinv"], [1789, 4, 1, "", "qr"], [1794, 4, 1, "", "slogdet"], [1799, 4, 1, "", "solve"], [1805, 4, 1, "", "svd"], [1810, 4, 1, "", "svdvals"], [1814, 4, 1, "", "tensordot"], [1818, 4, 1, "", "tensorsolve"], [1823, 4, 1, "", "trace"], [1828, 4, 1, "", "vander"], [1833, 4, 1, "", "vecdot"], [1838, 4, 1, "", "vector_norm"], [1843, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1848, 4, 1, "", "binary_cross_entropy"], [1853, 4, 1, "", "cross_entropy"], [1858, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1864, 4, 1, "", "clip"], [1869, 4, 1, "", "concat"], [1874, 4, 1, "", "constant_pad"], [1879, 4, 1, "", "expand_dims"], [1884, 4, 1, "", "flip"], [1889, 4, 1, "", "permute_dims"], [1894, 4, 1, "", "repeat"], [1899, 4, 1, "", "reshape"], [1904, 4, 1, "", "roll"], [1909, 4, 1, "", "split"], [1914, 4, 1, "", "squeeze"], [1919, 4, 1, "", "stack"], [1925, 4, 1, "", "swapaxes"], [1930, 4, 1, "", "tile"], [1935, 4, 1, "", "unstack"], [1940, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1942, 4, 1, "", "fomaml_step"], [1943, 4, 1, "", "maml_step"], [1944, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1946, 4, 1, "", "all_nested_indices"], [1947, 4, 1, "", "copy_nest"], [1948, 4, 1, "", "duplicate_array_index_chains"], [1949, 4, 1, "", "index_nest"], [1950, 4, 1, "", "insert_into_nest_at_index"], [1951, 4, 1, "", "insert_into_nest_at_indices"], [1952, 4, 1, "", "map"], [1953, 4, 1, "", "map_nest_at_index"], [1954, 4, 1, "", "map_nest_at_indices"], [1955, 4, 1, "", "multi_index_nest"], [1956, 4, 1, "", "nested_any"], [1957, 4, 1, "", "nested_argwhere"], [1958, 4, 1, "", "nested_map"], [1959, 4, 1, "", "nested_multi_map"], [1960, 4, 1, "", "prune_empty"], [1961, 4, 1, "", "prune_nest_at_index"], [1962, 4, 1, "", "prune_nest_at_indices"], [1963, 4, 1, "", "set_nest_at_index"], [1964, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1969, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1974, 4, 1, "", "multinomial"], [1979, 4, 1, "", "randint"], [1984, 4, 1, "", "random_normal"], [1989, 4, 1, "", "random_uniform"], [1991, 4, 1, "", "seed"], [1995, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[2001, 4, 1, "", "argmax"], [2006, 4, 1, "", "argmin"], [2011, 4, 1, "", "argwhere"], [2016, 4, 1, "", "nonzero"], [2022, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[2028, 4, 1, "", "unique_all"], [2033, 4, 1, "", "unique_counts"], [2038, 4, 1, "", "unique_inverse"], [2043, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[2048, 4, 1, "", "argsort"], [2053, 4, 1, "", "searchsorted"], [2058, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[2064, 4, 1, "", "cumprod"], [2069, 4, 1, "", "cumsum"], [2074, 4, 1, "", "einsum"], [2078, 4, 1, "", "max"], [2082, 4, 1, "", "mean"], [2086, 4, 1, "", "min"], [2090, 4, 1, "", "prod"], [2095, 4, 1, "", "std"], [2100, 4, 1, "", "sum"], [2105, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[2110, 4, 1, "", "all"], [2115, 4, 1, "", "any"]], "ivy.inspection": [[2122, 4, 1, "", "add_array_specs"], [2123, 4, 1, "", "fn_array_spec"]], "ivy.nested_array": [[2124, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[2125, 1, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[2125, 2, 1, "", "__init__"], [2125, 3, 1, "", "data"], [2125, 3, 1, "", "device"], [2125, 3, 1, "", "dtype"], [2125, 2, 1, "", "from_row_lengths"], [2125, 2, 1, "", "from_row_split"], [2125, 3, 1, "", "ndim"], [2125, 2, 1, "", "nested_array"], [2125, 2, 1, "", "reshape"], [2125, 3, 1, "", "shape"], [2125, 2, 1, "", "unbind"]], "ivy.stateful": [[2139, 0, 0, "-", "activations"], [2142, 0, 0, "-", "converters"], [2147, 0, 0, "-", "helpers"], [2149, 0, 0, "-", "initializers"], [2159, 0, 0, "-", "layers"], [2171, 0, 0, "-", "module"], [2173, 0, 0, "-", "norms"], [2175, 0, 0, "-", "optimizers"], [2181, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[2140, 1, 1, "", "GEGLU"], [2141, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[2140, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[2141, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[2143, 1, 1, "", "ModuleConverters"], [2144, 1, 1, "", "MyTFModule"], [2145, 1, 1, "", "MyTorchModule"], [2146, 4, 1, "", "to_ivy_module"]], "ivy.stateful.converters.ModuleConverters": [[2143, 2, 1, "", "from_haiku_module"], [2143, 2, 1, "", "from_keras_module"], [2143, 2, 1, "", "from_torch_module"], [2143, 2, 1, "", "to_haiku_module"], [2143, 2, 1, "", "to_keras_module"], [2143, 2, 1, "", "to_torch_module"]], "ivy.stateful.converters.MyTFModule": [[2144, 2, 1, "", "__init__"], [2144, 2, 1, "", "call"]], "ivy.stateful.converters.MyTorchModule": [[2145, 2, 1, "", "__init__"], [2145, 2, 1, "", "forward"], [2145, 6, 1, "", "training"]], "ivy.stateful.helpers": [[2148, 1, 1, "", "ModuleHelpers"]], "ivy.stateful.helpers.ModuleHelpers": [[2148, 2, 1, "", "check_submod_rets"], [2148, 2, 1, "", "get_mod_key"], [2148, 2, 1, "", "mod_depth"], [2148, 2, 1, "", "mod_height"], [2148, 2, 1, "", "mod_with_top_mod_key_chain"], [2148, 2, 1, "", "show_mod_in_top_mod"], [2148, 2, 1, "", "show_structure"], [2148, 2, 1, "", "show_v_in_top_v"], [2148, 2, 1, "", "sub_mods"], [2148, 2, 1, "", "track_submod_call_order"], [2148, 2, 1, "", "track_submod_rets"], [2148, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.initializers": [[2150, 1, 1, "", "Constant"], [2151, 1, 1, "", "FirstLayerSiren"], [2152, 1, 1, "", "GlorotUniform"], [2153, 1, 1, "", "Initializer"], [2154, 1, 1, "", "KaimingNormal"], [2155, 1, 1, "", "Ones"], [2156, 1, 1, "", "Siren"], [2157, 1, 1, "", "Uniform"], [2158, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[2150, 2, 1, "", "__init__"], [2150, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[2151, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[2152, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Initializer": [[2153, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.KaimingNormal": [[2154, 2, 1, "", "__init__"], [2154, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[2155, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[2156, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[2157, 2, 1, "", "__init__"], [2157, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[2158, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[2160, 1, 1, "", "Conv1D"], [2161, 1, 1, "", "Conv1DTranspose"], [2162, 1, 1, "", "Conv2D"], [2163, 1, 1, "", "Conv2DTranspose"], [2164, 1, 1, "", "Conv3D"], [2165, 1, 1, "", "Conv3DTranspose"], [2166, 1, 1, "", "DepthwiseConv2D"], [2167, 1, 1, "", "Dropout"], [2168, 1, 1, "", "LSTM"], [2169, 1, 1, "", "Linear"], [2170, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[2160, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[2161, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[2162, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[2163, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[2164, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[2165, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[2166, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[2167, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[2168, 2, 1, "", "__init__"], [2168, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[2169, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[2170, 2, 1, "", "__init__"]], "ivy.stateful.module": [[2172, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[2172, 2, 1, "", "__call__"], [2172, 2, 1, "", "__init__"], [2172, 2, 1, "", "build"], [2172, 3, 1, "", "build_mode"], [2172, 3, 1, "", "built_"], [2172, 2, 1, "", "save_weights"]], "ivy.stateful.norms": [[2174, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[2174, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[2176, 1, 1, "", "Adam"], [2177, 1, 1, "", "LAMB"], [2178, 1, 1, "", "LARS"], [2179, 1, 1, "", "Optimizer"], [2180, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[2176, 2, 1, "", "__init__"], [2176, 2, 1, "", "set_state"], [2176, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[2177, 2, 1, "", "__init__"], [2177, 2, 1, "", "set_state"], [2177, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[2178, 2, 1, "", "__init__"], [2178, 2, 1, "", "set_state"], [2178, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[2179, 2, 1, "", "__init__"], [2179, 2, 1, "", "set_state"], [2179, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[2180, 2, 1, "", "__init__"], [2180, 2, 1, "", "set_state"], [2180, 3, 1, "", "state"]], "ivy.stateful.sequential": [[2182, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[2182, 2, 1, "", "__init__"]], "ivy.utils": [[2280, 0, 0, "-", "_importlib"], [2281, 0, 0, "-", "backend"], [2304, 0, 0, "-", "dynamic_import"]], "ivy.utils.backend": [[2282, 0, 0, "-", "ast_helpers"], [2286, 0, 0, "-", "handler"]], "ivy.utils.backend.ast_helpers": [[2283, 1, 1, "", "ImportTransformer"], [2284, 1, 1, "", "IvyLoader"], [2285, 1, 1, "", "IvyPathFinder"]], "ivy.utils.backend.ast_helpers.ImportTransformer": [[2283, 2, 1, "", "__init__"], [2283, 2, 1, "", "impersonate_import"], [2283, 2, 1, "", "visit_Import"], [2283, 2, 1, "", "visit_ImportFrom"]], "ivy.utils.backend.ast_helpers.IvyLoader": [[2284, 2, 1, "", "__init__"], [2284, 2, 1, "", "exec_module"]], "ivy.utils.backend.ast_helpers.IvyPathFinder": [[2285, 2, 1, "", "find_spec"]], "ivy.utils.backend.handler": [[2287, 1, 1, "", "ContextManager"], [2288, 4, 1, "", "choose_random_backend"], [2289, 4, 1, "", "clear_backend_stack"], [2290, 4, 1, "", "convert_from_numpy_to_target_backend"], [2291, 4, 1, "", "convert_from_source_backend_to_numpy"], [2292, 4, 1, "", "current_backend"], [2293, 4, 1, "", "fn_name_from_version_specific_fn_name"], [2294, 4, 1, "", "get_backend"], [2295, 4, 1, "", "prevent_access_locally"], [2296, 4, 1, "", "set_backend"], [2297, 4, 1, "", "set_backend_to_specific_version"], [2298, 4, 1, "", "set_jax_backend"], [2299, 4, 1, "", "set_numpy_backend"], [2300, 4, 1, "", "set_tensorflow_backend"], [2301, 4, 1, "", "set_torch_backend"], [2302, 4, 1, "", "unset_backend"], [2303, 4, 1, "", "with_backend"]], "ivy.utils.backend.handler.ContextManager": [[2287, 2, 1, "", "__init__"]], "ivy.utils.dynamic_import": [[2305, 4, 1, "", "import_module"]], "ivy.verbosity": [[2307, 4, 1, "", "cprint"]], "ivy_tests.test_ivy.helpers": [[2184, 0, 0, "-", "assertions"], [2192, 0, 0, "-", "available_frameworks"], [2195, 0, 0, "-", "function_testing"], [2218, 0, 0, "-", "globals"], [2226, 0, 0, "-", "hypothesis_helpers"], [2260, 0, 0, "-", "structs"], [2262, 0, 0, "-", "test_parameter_flags"], [2272, 0, 0, "-", "testing_helpers"]], "ivy_tests.test_ivy.helpers.assertions": [[2185, 4, 1, "", "assert_all_close"], [2186, 4, 1, "", "assert_same_type_and_shape"], [2187, 4, 1, "", "check_unsupported_device"], [2188, 4, 1, "", "check_unsupported_device_and_dtype"], [2189, 4, 1, "", "check_unsupported_dtype"], [2190, 4, 1, "", "test_unsupported_function"], [2191, 4, 1, "", "value_test"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2193, 4, 1, "", "available_frameworks"], [2194, 4, 1, "", "ground_truth"]], "ivy_tests.test_ivy.helpers.function_testing": [[2196, 4, 1, "", "args_to_container"], [2197, 4, 1, "", "as_cont"], [2198, 4, 1, "", "as_lists"], [2199, 4, 1, "", "convtrue"], [2200, 4, 1, "", "create_args_kwargs"], [2201, 4, 1, "", "empty_func"], [2202, 4, 1, "", "flatten"], [2203, 4, 1, "", "flatten_and_to_np"], [2204, 4, 1, "", "flatten_fw_and_to_np"], [2205, 4, 1, "", "framework_comparator"], [2206, 4, 1, "", "get_frontend_ret"], [2207, 4, 1, "", "get_ret_and_flattened_np_array"], [2208, 4, 1, "", "gradient_incompatible_function"], [2209, 4, 1, "", "gradient_test"], [2210, 4, 1, "", "gradient_unsupported_dtypes"], [2211, 4, 1, "", "kwargs_to_args_n_kwargs"], [2212, 4, 1, "", "make_json_pickable"], [2213, 4, 1, "", "test_frontend_function"], [2214, 4, 1, "", "test_frontend_method"], [2215, 4, 1, "", "test_function"], [2216, 4, 1, "", "test_method"], [2217, 4, 1, "", "var_fn"]], "ivy_tests.test_ivy.helpers.globals": [[2219, 1, 1, "", "InterruptedTest"], [2220, 1, 1, "", "TestData"], [2221, 4, 1, "", "remove_all_current_framework"], [2222, 4, 1, "", "setup_api_test"], [2223, 4, 1, "", "setup_frontend_test"], [2224, 4, 1, "", "teardown_api_test"], [2225, 4, 1, "", "teardown_frontend_test"]], "ivy_tests.test_ivy.helpers.globals.InterruptedTest": [[2219, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.globals.TestData": [[2220, 2, 1, "", "__init__"], [2220, 6, 1, "", "fn_name"], [2220, 6, 1, "", "fn_tree"], [2220, 6, 1, "", "supported_device_dtypes"], [2220, 6, 1, "", "test_fn"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2227, 0, 0, "-", "array_helpers"], [2241, 0, 0, "-", "dtype_helpers"], [2245, 0, 0, "-", "general_helpers"], [2256, 0, 0, "-", "number_helpers"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2228, 4, 1, "", "array_and_broadcastable_shape"], [2229, 4, 1, "", "array_bools"], [2230, 4, 1, "", "array_indices_axis"], [2231, 4, 1, "", "array_values"], [2232, 4, 1, "", "arrays_and_axes"], [2233, 4, 1, "", "arrays_for_pooling"], [2234, 4, 1, "", "broadcast_shapes"], [2235, 4, 1, "", "dtype_and_values"], [2236, 4, 1, "", "dtype_values_axis"], [2237, 4, 1, "", "list_of_size"], [2238, 4, 1, "", "lists"], [2239, 4, 1, "", "mutually_broadcastable_shapes"], [2240, 4, 1, "", "prod"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2242, 4, 1, "", "array_dtypes"], [2243, 4, 1, "", "get_castable_dtype"], [2244, 4, 1, "", "get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2246, 4, 1, "", "apply_safety_factor"], [2247, 4, 1, "", "embedding_helper"], [2248, 4, 1, "", "get_axis"], [2249, 4, 1, "", "get_bounds"], [2250, 4, 1, "", "get_mean_std"], [2251, 4, 1, "", "get_shape"], [2252, 4, 1, "", "matrix_is_stable"], [2253, 4, 1, "", "reshape_shapes"], [2254, 4, 1, "", "subsets"], [2255, 4, 1, "", "x_and_filters"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2257, 4, 1, "", "floats"], [2258, 4, 1, "", "ints"], [2259, 4, 1, "", "number"]], "ivy_tests.test_ivy.helpers.structs": [[2261, 1, 1, "", "FrontendMethodData"]], "ivy_tests.test_ivy.helpers.structs.FrontendMethodData": [[2261, 2, 1, "", "__init__"], [2261, 6, 1, "", "framework_init_module"], [2261, 6, 1, "", "init_name"], [2261, 6, 1, "", "ivy_init_module"], [2261, 6, 1, "", "method_name"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2263, 1, 1, "", "FrontendFunctionTestFlags"], [2264, 1, 1, "", "FrontendMethodTestFlags"], [2265, 1, 1, "", "FunctionTestFlags"], [2266, 1, 1, "", "MethodTestFlags"], [2267, 4, 1, "", "build_flag"], [2268, 4, 1, "", "frontend_function_flags"], [2269, 4, 1, "", "frontend_method_flags"], [2270, 4, 1, "", "function_flags"], [2271, 4, 1, "", "method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags": [[2263, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags": [[2264, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags": [[2265, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags": [[2266, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2273, 4, 1, "", "handle_frontend_method"], [2274, 4, 1, "", "handle_frontend_test"], [2275, 4, 1, "", "handle_method"], [2276, 4, 1, "", "handle_test"], [2277, 4, 1, "", "num_positional_args"], [2278, 4, 1, "", "num_positional_args_method"], [2279, 4, 1, "", "seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"assert": [1, 142, 2184], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_dimens": 5, "check_elem_in_list": 6, "check_equ": 7, "check_exist": 8, "check_fals": 9, "check_fill_value_and_dtype_are_compat": 10, "check_gather_input_valid": 11, "check_gather_nd_input_valid": 12, "check_great": 13, "check_inplace_sizes_valid": 14, "check_isinst": 15, "check_kernel_padding_s": 16, "check_less": 17, "check_one_way_broadcast": 18, "check_same_dtyp": 19, "check_shap": 20, "check_shapes_broadcast": 21, "check_tru": 22, "background": [23, 2118], "ml": [24, 2132, 2136], "explos": 24, "standard": [25, 152, 2127, 2136], "skeptic": 25, "complimentari": 25, "v": [25, 171], "competit": 25, "do": [25, 150], "work": [25, 29, 2126], "The": [25, 33, 148, 156, 171], "arrai": [25, 35, 38, 133, 134, 137, 144, 156, 192, 198, 203, 208, 213, 218, 223, 228, 245, 252, 256, 264, 270, 275, 280, 285, 290, 295, 303, 309, 314, 322, 334, 339, 344, 349, 370, 381, 388, 397, 402, 407, 414, 438, 458, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 732, 737, 742, 747, 752, 757, 763, 768, 773, 778, 783, 794, 799, 804, 809, 814, 819, 824, 829, 834, 839, 844, 850, 866, 871, 876, 893, 903, 908, 913, 919, 924, 929, 934, 968, 973, 978, 983, 988, 993, 998, 1003, 1008, 1013, 1018, 1023, 1028, 1033, 1036, 1043, 1058, 1063, 1068, 1073, 1078, 1083, 1088, 1093, 1099, 1107, 1112, 1125, 1130, 1155, 1160, 1172, 1177, 1184, 1213, 1218, 1223, 1228, 1233, 1239, 1244, 1249, 1254, 1259, 1264, 1274, 1283, 1290, 1296, 1301, 1312, 1317, 1324, 1329, 1336, 1352, 1357, 1362, 1366, 1378, 1388, 1393, 1398, 1403, 1409, 1416, 1421, 1427, 1432, 1439, 1442, 1447, 1452, 1457, 1460, 1467, 1472, 1484, 1493, 1499, 1504, 1509, 1515, 1520, 1525, 1528, 1538, 1543, 1559, 1564, 1570, 1576, 1581, 1586, 1598, 1605, 1609, 1615, 1620, 1624, 1628, 1634, 1643, 1648, 1653, 1658, 1663, 1668, 1675, 1680, 1685, 1690, 1695, 1700, 1706, 1711, 1716, 1721, 1726, 1732, 1737, 1742, 1747, 1752, 1757, 1762, 1767, 1772, 1777, 1782, 1787, 1792, 1797, 1803, 1808, 1816, 1821, 1826, 1831, 1836, 1841, 1846, 1851, 1856, 1862, 1867, 1872, 1877, 1882, 1887, 1892, 1897, 1902, 1907, 1912, 1917, 1923, 1928, 1933, 1938, 1967, 1972, 1977, 1982, 1987, 1993, 1999, 2004, 2009, 2014, 2020, 2026, 2031, 2036, 2041, 2046, 2051, 2056, 2062, 2067, 2072, 2076, 2080, 2084, 2088, 2093, 2098, 2103, 2108, 2113, 2124, 2127, 2227], "api": [25, 31, 33, 133, 136, 137, 151, 154, 156, 158, 159, 2127, 2134, 2136], "why": [26, 150], "unifi": [26, 156, 2132, 2136], "No": [26, 32], "more": [26, 32, 152], "re": [26, 150], "implement": [26, 137], "infinit": 26, "shelf": 26, "life": 26, "contribut": [27, 2118], "appli": [28, 170], "librari": [28, 170], "introduct": [28, 148, 149], "exampl": [28, 140, 144, 149, 152], "ivi": [28, 31, 33, 134, 137, 140, 142, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 242, 243, 245, 246, 247, 252, 253, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 356, 357, 360, 361, 365, 366, 367, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 414, 415, 416, 417, 438, 439, 440, 441, 457, 458, 459, 460, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 777, 778, 779, 780, 782, 783, 784, 785, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 839, 840, 841, 842, 844, 845, 846, 847, 850, 851, 852, 853, 855, 856, 857, 860, 861, 862, 866, 867, 868, 869, 871, 872, 873, 874, 876, 877, 878, 879, 893, 894, 895, 896, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 968, 969, 970, 971, 973, 974, 975, 976, 978, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1184, 1185, 1186, 1187, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1274, 1275, 1276, 1277, 1283, 1284, 1285, 1286, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1409, 1410, 1411, 1412, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1439, 1440, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1484, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1525, 1526, 1528, 1529, 1530, 1531, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1597, 1598, 1599, 1600, 1605, 1606, 1607, 1609, 1610, 1611, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1626, 1628, 1629, 1630, 1633, 1634, 1635, 1636, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1816, 1817, 1818, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1967, 1968, 1969, 1972, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1982, 1983, 1984, 1985, 1987, 1988, 1989, 1990, 1993, 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2014, 2015, 2016, 2017, 2019, 2020, 2021, 2022, 2025, 2026, 2027, 2028, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2046, 2047, 2048, 2049, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2059, 2062, 2063, 2064, 2065, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2097, 2098, 2099, 2100, 2102, 2103, 2104, 2105, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2136], "robot": [28, 167, 170], "build": [29, 154], "doc": 29, "docker": [29, 32, 33], "dockerless": 29, "us": [29, 32, 133, 149, 157], "miniconda": [29, 32], "venv": [29, 32], "document": 29, "pipelin": [29, 137, 150, 171], "make_doc": 29, "sh": 29, "entrypoint": 29, "_make_doc": 29, "generate_src_rst_fil": 29, "py": 29, "sphinx": 29, "correct_built_html_fil": 29, "remove_fil": 29, "help": [30, 33], "resourc": 30, "open": 31, "task": 31, "function": [31, 136, 138, 139, 142, 144, 145, 146, 148, 149, 150, 151, 154, 159, 171, 2195], "format": [31, 143, 2129, 2136], "checklist": 31, "frontend": [31, 135, 148, 149, 159], "where": [31, 2018, 2020, 2021, 2022], "place": 31, "experiment": [31, 33, 53, 101, 786], "set": [32, 74, 122, 135, 1322, 2023], "up": 32, "fork": [32, 33], "clone": [32, 137], "repo": 32, "pycharm": [32, 33], "virtual": 32, "environ": 32, "interpret": 32, "window": 32, "maco": 32, "ubuntu": 32, "test": [32, 33, 133, 137, 149, 150, 2195, 2262, 2272], "detail": 32, "hypothesi": [32, 149, 150, 2226], "log": [32, 636, 637, 638, 639], "free": 32, "github": 32, "codespac": 32, "pre": [32, 143], "commit": [32, 33, 137, 143], "basic": [33, 148], "get": [33, 196], "todo": 33, "list": [33, 2238], "issu": 33, "manag": 33, "your": [33, 150], "who": 33, "To": 33, "ask": 33, "With": 33, "command": 33, "line": 33, "browser": 33, "pull": [33, 137], "request": [33, 137], "small": 33, "often": 33, "interact": 33, "contain": [33, 84, 89, 136, 157, 193, 195, 199, 201, 204, 206, 209, 211, 214, 216, 219, 221, 224, 226, 229, 231, 243, 247, 257, 259, 262, 265, 267, 271, 273, 276, 278, 281, 283, 286, 288, 291, 293, 296, 298, 301, 304, 306, 308, 310, 313, 315, 318, 321, 323, 335, 337, 340, 342, 345, 347, 350, 352, 357, 361, 365, 367, 371, 373, 376, 379, 382, 384, 389, 391, 393, 395, 398, 400, 403, 405, 408, 410, 415, 417, 439, 441, 457, 459, 468, 470, 473, 475, 478, 480, 483, 485, 488, 490, 493, 495, 498, 500, 503, 505, 508, 510, 513, 515, 518, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 673, 675, 678, 680, 683, 685, 688, 690, 693, 695, 698, 700, 703, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 762, 764, 767, 769, 772, 774, 777, 779, 782, 784, 795, 797, 800, 802, 805, 807, 810, 812, 815, 817, 820, 822, 825, 827, 830, 832, 835, 837, 840, 842, 845, 847, 851, 853, 855, 857, 860, 862, 867, 869, 872, 874, 877, 879, 894, 896, 899, 901, 904, 906, 909, 911, 914, 916, 920, 922, 925, 927, 930, 932, 935, 937, 969, 971, 974, 976, 979, 981, 984, 986, 989, 991, 994, 996, 999, 1001, 1004, 1006, 1009, 1011, 1014, 1016, 1019, 1021, 1024, 1026, 1029, 1031, 1037, 1039, 1044, 1046, 1050, 1052, 1054, 1056, 1059, 1061, 1064, 1066, 1069, 1071, 1074, 1076, 1079, 1081, 1084, 1086, 1089, 1091, 1094, 1096, 1100, 1102, 1108, 1110, 1113, 1115, 1117, 1119, 1121, 1123, 1126, 1128, 1131, 1133, 1156, 1158, 1161, 1163, 1173, 1175, 1178, 1180, 1185, 1187, 1214, 1216, 1219, 1221, 1224, 1226, 1229, 1231, 1234, 1236, 1240, 1242, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1265, 1267, 1275, 1277, 1284, 1286, 1291, 1293, 1297, 1299, 1302, 1304, 1313, 1315, 1318, 1320, 1325, 1327, 1330, 1332, 1351, 1353, 1356, 1358, 1361, 1363, 1369, 1370, 1373, 1374, 1377, 1379, 1383, 1384, 1387, 1389, 1392, 1394, 1397, 1399, 1402, 1404, 1410, 1412, 1417, 1419, 1422, 1424, 1428, 1430, 1433, 1435, 1443, 1445, 1448, 1450, 1453, 1455, 1461, 1463, 1468, 1470, 1473, 1475, 1485, 1487, 1494, 1496, 1500, 1502, 1505, 1507, 1510, 1512, 1516, 1518, 1521, 1523, 1529, 1531, 1539, 1541, 1544, 1546, 1560, 1562, 1565, 1567, 1569, 1571, 1575, 1580, 1582, 1585, 1587, 1597, 1599, 1606, 1610, 1616, 1621, 1625, 1629, 1633, 1635, 1644, 1646, 1649, 1651, 1654, 1656, 1659, 1661, 1664, 1666, 1669, 1671, 1676, 1678, 1681, 1683, 1686, 1688, 1691, 1693, 1696, 1698, 1701, 1703, 1707, 1709, 1712, 1714, 1717, 1719, 1722, 1724, 1727, 1729, 1733, 1735, 1738, 1740, 1743, 1745, 1748, 1750, 1753, 1755, 1758, 1760, 1763, 1765, 1768, 1770, 1773, 1775, 1778, 1780, 1783, 1785, 1788, 1790, 1793, 1795, 1798, 1800, 1802, 1804, 1807, 1809, 1812, 1813, 1817, 1820, 1822, 1825, 1827, 1830, 1832, 1835, 1837, 1840, 1842, 1847, 1849, 1852, 1854, 1857, 1859, 1863, 1865, 1868, 1870, 1873, 1875, 1878, 1880, 1883, 1885, 1888, 1890, 1893, 1895, 1898, 1900, 1903, 1905, 1908, 1910, 1913, 1915, 1918, 1920, 1922, 1924, 1927, 1929, 1932, 1934, 1937, 1939, 1968, 1973, 1975, 1978, 1980, 1983, 1985, 1988, 1990, 1994, 1996, 2000, 2002, 2005, 2007, 2010, 2012, 2015, 2017, 2019, 2021, 2025, 2027, 2030, 2032, 2035, 2037, 2040, 2042, 2047, 2049, 2052, 2054, 2057, 2059, 2063, 2065, 2068, 2070, 2073, 2077, 2081, 2085, 2089, 2091, 2094, 2097, 2099, 2102, 2104, 2109, 2111, 2114, 2116], "run": [33, 133, 150], "local": 33, "most": 33, "out": [33, 144, 147], "id": [33, 133], "data": [34, 47, 95, 138, 148, 150, 157, 171, 325, 890, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "class": [34, 134, 142, 148, 156, 2138], "activ": [36, 85, 189, 789, 2139], "arraywithactiv": 37, "convers": [40, 91], "args_to_ivi": 41, "args_to_n": 42, "to_ivi": 43, "to_n": 44, "creation": [45, 93, 239, 880], "arraywithcr": 46, "type": [47, 95, 138, 145, 148, 171, 325, 890], "arraywithdatatyp": 48, "devic": [49, 97, 139, 144, 148, 430, 897], "arraywithdevic": 50, "elementwis": [51, 99, 465, 938], "arraywithelementwis": 52, "gener": [54, 102, 150, 152, 1040, 1407, 2245], "arraywithgener": 55, "gradient": [56, 104, 952, 1042, 1043, 1044, 1045, 1047, 1602], "arraywithgradi": 57, "imag": [58, 106, 954, 1087, 1088, 1089, 1090], "arraywithimag": 59, "layer": [60, 108, 1134, 1640, 2159], "arraywithlay": 61, "linear": [62, 110, 1164, 1684, 1685, 1686, 1687, 1704, 2169], "algebra": [62, 110, 1164, 1704], "arraywithlinearalgebra": 63, "loss": [64, 112, 1181, 1844], "arraywithloss": 65, "manipul": [66, 114, 1188, 1860], "arraywithmanipul": 67, "norm": [68, 116, 1278, 1965, 2173], "arraywithnorm": 69, "random": [70, 118, 1305, 1970], "arraywithrandom": 71, "search": [72, 120, 1321, 1997], "arraywithsearch": 73, "arraywithset": 75, "sort": [76, 124, 1333, 2044, 2055, 2056, 2057, 2058], "arraywithsort": 77, "statist": [78, 126, 1343, 2060], "arraywithstatist": 79, "util": [80, 128, 1381, 2106], "arraywithutil": 81, "wrap": [82, 130, 146], "add_ivy_array_instance_method": 83, "containerwithactiv": 86, "base": 87, "containerbas": 88, "containerwithconvers": 92, "containerwithcr": 94, "containerwithdatatyp": 96, "containerwithdevic": 98, "containerwithelementwis": 100, "containerwithgener": 103, "containerwithgradi": 105, "containerwithimag": 107, "containerwithlay": 109, "containerwithlinearalgebra": 111, "containerwithloss": 113, "containerwithmanipul": 115, "containerwithnorm": 117, "containerwithrandom": 119, "containerwithsearch": 121, "containerwithset": 123, "containerwithsort": 125, "containerwithstatist": 127, "containerwithutil": 129, "add_ivy_container_instance_method": 131, "deep": 132, "dive": 132, "termin": 133, "regener": 133, "failur": 133, "skip": 133, "nativ": 134, "handl": [134, 142, 171], "integr": [134, 137, 150], "custom": [134, 157, 171], "backend": [135, 138, 151, 154, 171, 2281], "version": [135, 151, 171], "support": [135, 138, 148, 171], "instanc": [136, 148, 149, 156], "method": [136, 148, 149, 156, 157], "static": 136, "special": [136, 148], "nestabl": [136, 144, 145], "continu": 137, "push": 137, "pr": 137, "trigger": 137, "A": [137, 152], "top": 137, "down": 137, "view": 137, "store": 137, "retriev": 137, "map": [137, 1952], "repositori": 137, "nitti": 137, "gritti": 137, "storag": 137, "space": 137, "unifyai": 137, "determin": 137, "coverag": 137, "workflow": 137, "multipl": 137, "runner": 137, "race": 137, "condit": 137, "period": 137, "manual": 137, "dispatch": 137, "ci": 137, "dashboard": 137, "modul": [138, 139, 158, 2171, 2172], "promot": [138, 148], "argument": [138, 139, 144, 147, 148], "other": [138, 139], "unsupport": 138, "bug": 138, "superset": [138, 152], "docstr": [140, 141], "tan": [140, 149, 766, 768, 769, 770], "roll": [140, 1901, 1902, 1903, 1904], "add": [140, 149, 481, 482, 483, 484, 2136], "except": 142, "configur": [142, 157], "mode": 142, "stack": [142, 1916, 1917, 1918, 1919], "trace": [142, 1819, 1821, 1822, 1823], "func_wrapp": 142, "prune": 142, "handle_except": 142, "decor": [142, 150], "lint": 143, "check": [143, 171], "hook": 143, "posit": [144, 706, 707, 708, 709], "keyword": 144, "input": 144, "dtype": [144, 364, 365, 366, 2241], "number": [144, 2256, 2259], "oper": [144, 156, 171], "integ": 144, "sequenc": 144, "primari": 145, "composit": [145, 148], "mix": 145, "standalon": 145, "conveni": 145, "inplac": 147, "updat": 147, "copi": 147, "unus": 148, "miss": 148, "temporari": 148, "rule": 148, "numpi": [148, 2130], "cast": 148, "duplic": [148, 152], "polici": 148, "full": [149, 268], "without": 149, "valu": 149, "alia": 149, "helper": [149, 150, 151, 2147, 2226, 2227, 2241, 2245, 2256, 2272, 2282], "write": 150, "own": 150, "strategi": 150, "we": 150, "need": 150, "how": 150, "effect": 150, "bonu": 150, "extend": [150, 152], "featur": 150, "self": 150, "consist": 150, "explicit": 150, "test_array_funct": 150, "fail": 150, "navig": 151, "code": 151, "categor": 151, "submodul": 151, "design": [151, 153, 2118], "pin": 151, "behaviour": 152, "what": [152, 2136], "i": 152, "non": 152, "when": 152, "too": 152, "much": 152, "balanc": 152, "effici": 152, "block": 154, "handler": [154, 2286], "graph": [154, 159, 2131, 2136], "compil": [154, 159, 863, 2128, 2133, 2135, 2136], "framework": [155, 2130, 2133, 2136, 2137, 2138, 2192], "monkei": 156, "patch": 156, "construct": 157, "represent": 157, "recurs": 157, "built": 157, "ins": 157, "access": 157, "save": 157, "load": 157, "comparison": 157, "case": 157, "compartment": 157, "network": [157, 159], "weight": 157, "state": [158, 171], "initi": [158, 2149, 2153], "optim": [158, 2175, 2179], "transpil": 159, "role": 159, "convert": [159, 2142], "model": [159, 166, 171], "builder": 161, "ecosystem": 162, "gym": [163, 170], "mech": 164, "memori": [165, 170], "vision": [168, 170], "extens": [169, 2118], "mechan": 170, "faq": 171, "maintain": 171, "dynam": [171, 2304], "size": 171, "shape": [171, 1556, 2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "gpu": 171, "deploy": 171, "control": [171, 234], "flow": [171, 234], "auto": 171, "differenti": 171, "replica": 171, "parallel": 171, "altern": 171, "structur": 171, "func": 172, "wrapper": [172, 2136, 2137], "handle_array_funct": 173, "handle_array_like_without_promot": 174, "handle_nan": 175, "handle_nest": 176, "handle_out_argu": 177, "infer_devic": 178, "infer_dtyp": 179, "inputs_to_ivy_arrai": 180, "inputs_to_native_arrai": 181, "integer_arrays_to_float": 182, "output_to_native_arrai": 183, "outputs_to_ivy_arrai": 184, "to_ivy_arrays_and_back": 185, "to_native_arrays_and_back": 186, "try_array_function_overrid": 187, "deseri": 190, "gelu": [191, 192, 193, 194, 2141], "static_gelu": 195, "leaky_relu": [197, 198, 199, 200], "static_leaky_relu": 201, "log_softmax": [202, 203, 204, 205], "static_log_softmax": 206, "mish": [207, 208, 209, 210], "static_mish": 211, "relu": [212, 213, 214, 215], "static_relu": 216, "sigmoid": [217, 218, 219, 220], "static_sigmoid": 221, "softmax": [222, 223, 224, 225], "static_softmax": 226, "softplu": [227, 228, 229, 230], "static_softplu": 231, "constant": [233, 864, 2150], "op": 234, "ifels": 235, "whileloop": 236, "if_els": 237, "while_loop": 238, "note": [239, 263, 266], "nestedsequ": 240, "arang": [241, 242], "static_arang": 243, "asarrai": [244, 245, 246], "static_asarrai": 247, "asarray_handle_nest": 248, "asarray_infer_devic": 249, "asarray_to_native_arrays_and_back": 250, "copy_arrai": [251, 252, 253], "empti": 254, "empty_lik": [255, 256, 257, 258], "static_empty_lik": 259, "ey": [260, 261], "static_ey": 262, "from_dlpack": [263, 264, 265, 266], "static_from_dlpack": 267, "full_lik": [269, 270, 271, 272], "static_full_lik": 273, "linspac": [274, 275, 276, 277], "static_linspac": 278, "logspac": [279, 280, 281, 282], "static_logspac": 283, "meshgrid": [284, 285, 286, 287], "static_meshgrid": 288, "native_arrai": [289, 290, 291, 292], "static_native_arrai": 293, "one_hot": [294, 295, 296, 297], "static_one_hot": 298, "ones": [299, 300], "static_on": 301, "ones_lik": [302, 303, 304, 305], "static_ones_lik": 306, "tril": [307, 309, 310, 311], "static_tril": 308, "triu": [312, 314, 315, 316], "static_triu": 313, "zero": [317, 319, 2158], "static_zero": 318, "zeros_lik": [320, 322, 323, 324], "static_zeros_lik": 321, "defaultcomplexdtyp": 326, "defaultdtyp": 327, "defaultfloatdtyp": 328, "defaultintdtyp": 329, "defaultuintdtyp": 330, "as_ivy_dtyp": 331, "as_native_dtyp": 332, "astyp": [333, 334, 335, 336], "static_astyp": 337, "broadcast_arrai": [338, 339, 340, 341], "static_broadcast_arrai": 342, "broadcast_to": [343, 344, 345, 346], "static_broadcast_to": 347, "can_cast": [348, 349, 350, 351], "static_can_cast": 352, "check_float": 353, "closest_valid_dtyp": 354, "default_complex_dtyp": [355, 356], "static_default_complex_dtyp": 357, "default_dtyp": 358, "default_float_dtyp": [359, 360], "static_default_float_dtyp": 361, "default_int_dtyp": 362, "default_uint_dtyp": 363, "static_dtyp": 367, "dtype_bit": 368, "finfo": [369, 370, 371, 372], "static_finfo": 373, "function_supported_dtyp": [374, 375], "static_function_supported_dtyp": 376, "function_unsupported_dtyp": [377, 378], "static_function_unsupported_dtyp": 379, "iinfo": [380, 381, 382, 383], "static_iinfo": 384, "infer_default_dtyp": 385, "invalid_dtyp": 386, "is_bool_dtyp": [387, 388, 389, 390], "static_is_bool_dtyp": 391, "is_complex_dtyp": [392, 393, 394], "static_is_complex_dtyp": 395, "is_float_dtyp": [396, 397, 398, 399], "static_is_float_dtyp": 400, "is_int_dtyp": [401, 402, 403, 404], "static_is_int_dtyp": 405, "is_uint_dtyp": [406, 407, 408, 409], "static_is_uint_dtyp": 410, "promote_typ": 411, "promote_types_of_input": 412, "result_typ": [413, 414, 415, 416], "static_result_typ": 417, "set_default_complex_dtyp": 418, "set_default_dtyp": 419, "set_default_float_dtyp": 420, "set_default_int_dtyp": 421, "set_default_uint_dtyp": 422, "type_promote_arrai": 423, "unset_default_complex_dtyp": 424, "unset_default_dtyp": 425, "unset_default_float_dtyp": 426, "unset_default_int_dtyp": 427, "unset_default_uint_dtyp": 428, "valid_dtyp": 429, "defaultdevic": 431, "profil": 432, "as_ivy_dev": 433, "as_native_dev": 434, "clear_mem_on_dev": 435, "default_devic": 436, "dev": [437, 438, 439, 440], "static_dev": 441, "dev_util": 442, "function_supported_devic": 443, "function_unsupported_devic": 444, "get_all_ivy_arrays_on_dev": 445, "gpu_is_avail": 446, "num_cpu_cor": 447, "num_gpu": 448, "num_ivy_arrays_on_dev": 449, "percent_used_mem_on_dev": 450, "print_all_ivy_arrays_on_dev": 451, "set_default_devic": 452, "set_split_factor": 453, "split_factor": 454, "split_func_cal": 455, "to_devic": [456, 458, 459, 460], "static_to_devic": 457, "total_mem_on_dev": 461, "tpu_is_avail": 462, "unset_default_devic": 463, "used_mem_on_dev": 464, "ab": [466, 467, 468, 469], "static_ab": 470, "aco": [471, 472, 473, 474], "static_aco": 475, "acosh": [476, 477, 478, 479], "static_acosh": 480, "static_add": 485, "asin": [486, 487, 488, 489], "static_asin": 490, "asinh": [491, 492, 493, 494], "static_asinh": 495, "atan": [496, 497, 498, 499], "static_atan": 500, "atan2": [501, 502, 503, 504], "static_atan2": 505, "atanh": [506, 507, 508, 509], "static_atanh": 510, "bitwise_and": [511, 512, 513, 514], "static_bitwise_and": 515, "bitwise_invert": [516, 517, 518, 519], "static_bitwise_invert": 520, "bitwise_left_shift": [521, 522, 523, 524], "static_bitwise_left_shift": 525, "bitwise_or": [526, 527, 528, 529], "static_bitwise_or": 530, "bitwise_right_shift": [531, 532, 533, 534], "static_bitwise_right_shift": 535, "bitwise_xor": [536, 537, 538, 539], "static_bitwise_xor": 540, "ceil": [541, 542, 543, 544], "static_ceil": 545, "co": [546, 547, 548, 549], "static_co": 550, "cosh": [551, 552, 553, 554], "static_cosh": 555, "deg2rad": [556, 557, 558, 559], "static_deg2rad": 560, "divid": [561, 562, 563, 564], "static_divid": 565, "equal": [566, 567, 568, 569], "static_equ": 570, "erf": [571, 572, 573, 574], "static_erf": 575, "exp": [576, 577, 578, 579], "static_exp": 580, "expm1": [581, 582, 583, 584], "static_expm1": 585, "floor": [586, 587, 588, 589], "static_floor": 590, "floor_divid": [591, 592, 593, 594], "static_floor_divid": 595, "greater": [596, 597, 598, 599], "static_great": 600, "greater_equ": [601, 602, 603, 604], "static_greater_equ": 605, "isfinit": [606, 607, 608, 609], "static_isfinit": 610, "isinf": [611, 612, 613, 614], "static_isinf": 615, "isnan": [616, 617, 618, 619], "static_isnan": 620, "isreal": [621, 622, 623, 624], "static_isr": 625, "less": [626, 627, 628, 629], "static_less": 630, "less_equ": [631, 632, 633, 634], "static_less_equ": 635, "static_log": 640, "log10": [641, 642, 643, 644], "static_log10": 645, "log1p": [646, 647, 648, 649], "static_log1p": 650, "log2": [651, 652, 653, 654], "static_log2": 655, "logaddexp": [656, 657, 658, 659], "static_logaddexp": 660, "logical_and": [661, 662, 663, 664], "static_logical_and": 665, "logical_not": [666, 667, 668, 669], "static_logical_not": 670, "logical_or": [671, 672, 673, 674], "static_logical_or": 675, "logical_xor": [676, 677, 678, 679], "static_logical_xor": 680, "maximum": [681, 682, 683, 684], "static_maximum": 685, "minimum": [686, 687, 688, 689], "static_minimum": 690, "multipli": [691, 692, 693, 694], "static_multipli": 695, "neg": [696, 697, 698, 699], "static_neg": 700, "not_equ": [701, 702, 703, 704], "static_not_equ": 705, "static_posit": 710, "pow": [711, 712, 713, 714], "static_pow": 715, "rad2deg": [716, 717, 718, 719], "static_rad2deg": 720, "reciproc": [721, 722, 723, 724], "static_reciproc": 725, "remaind": [726, 727, 728, 729], "static_remaind": 730, "round": [731, 732, 733, 734], "static_round": 735, "sign": [736, 737, 738, 739], "static_sign": 740, "sin": [741, 742, 743, 744], "static_sin": 745, "sinh": [746, 747, 748, 749], "static_sinh": 750, "sqrt": [751, 752, 753, 754], "static_sqrt": 755, "squar": [756, 757, 758, 759], "static_squar": 760, "subtract": [761, 763, 764, 765], "static_subtract": 762, "static_tan": 767, "tanh": [771, 773, 774, 775], "static_tanh": 772, "trunc": [776, 778, 779, 780], "static_trunc": 777, "trunc_divid": [781, 783, 784, 785], "static_trunc_divid": 782, "nativesparsearrai": [787, 1337], "sparsearrai": [788, 1338], "logit": [790, 1176, 1177, 1178, 1179], "prelu": [791, 1295, 1296, 1297, 1298], "thresholded_relu": [792, 1355, 1357, 1358, 1359], "adjoint": [793, 794, 795, 796, 1165], "static_adjoint": 797, "allclos": [798, 799, 800, 801, 939], "static_allclos": 802, "angl": [803, 804, 805, 806, 940], "static_angl": 807, "atleast_1d": [808, 809, 810, 811, 1189], "static_atleast_1d": 812, "atleast_2d": [813, 814, 815, 816, 1190], "static_atleast_2d": 817, "atleast_3d": [818, 819, 820, 821, 1191], "static_atleast_3d": 822, "avg_pool1d": [823, 824, 825, 826, 1135], "static_avg_pool1d": 827, "avg_pool2d": [828, 829, 830, 831, 1136], "static_avg_pool2d": 832, "avg_pool3d": [833, 834, 835, 836, 1137], "static_avg_pool3d": 837, "bernoulli": [838, 839, 840, 841, 1306], "static_bernoulli": 842, "beta": [843, 844, 845, 846, 1307], "static_beta": 847, "bicub": [848, 1138], "binar": [849, 850, 851, 852, 941], "static_binar": 853, "binary_cross_entropy_with_logit": [854, 855, 856, 1182], "static_binary_cross_entropy_with_logit": 857, "bind_custom_gradient_funct": [858, 1048], "broadcast_shap": [859, 860, 861, 1192, 2234], "static_broadcast_shap": 862, "copysign": [865, 866, 867, 868, 942], "static_copysign": 869, "corrcoef": [870, 871, 872, 873, 1344], "static_corrcoef": 874, "count_nonzero": [875, 876, 877, 878, 943], "static_count_nonzero": 879, "eye_lik": [881, 982, 983, 984, 985], "hamming_window": [882, 1049, 1050, 1051], "hann_window": [883, 1053, 1054, 1055], "kaiser_bessel_derived_window": [884, 1116, 1117, 1118], "kaiser_window": [885, 1120, 1121, 1122], "tril_indic": [886, 1368, 1370, 1371], "triu_indic": [887, 1372, 1374, 1375], "vorbis_window": [888, 1382, 1384, 1385], "cubic": [889, 1139], "is_native_dtyp": [891, 1104], "dct": [892, 893, 894, 895, 1140], "static_dct": 896, "dft": [898, 899, 900, 1141], "static_dft": 901, "diagflat": [902, 903, 904, 905, 1166], "static_diagflat": 906, "diff": [907, 908, 909, 910, 944], "static_diff": 911, "dirichlet": [912, 913, 914, 915, 1308], "static_dirichlet": 916, "dropout1d": [917, 1142], "dsplit": [918, 919, 920, 921, 1193], "static_dsplit": 922, "dstack": [923, 924, 925, 926, 1194], "static_dstack": 927, "eig": [928, 929, 930, 931, 1167, 1730], "static_eig": 932, "eigval": [933, 934, 935, 936, 1168], "static_eigv": 937, "exp2": [945, 972, 973, 974, 975], "fix": [946, 992, 993, 994, 995], "float_pow": [947, 1012, 1013, 1014, 1015], "fmax": [948, 1017, 1018, 1019, 1020], "fmin": [949, 1022, 1023, 1024, 1025], "fmod": [950, 1027, 1028, 1029, 1030], "gcd": [951, 1035, 1036, 1037, 1038], "hypot": [953, 1072, 1073, 1074, 1075], "isclos": [955, 1106, 1107, 1108, 1109], "lcm": [956, 1154, 1155, 1156, 1157], "logaddexp2": [957, 1171, 1172, 1173, 1174], "nan_to_num": [958, 1248, 1249, 1250, 1251], "nansum": [959, 1263, 1264, 1265, 1266], "nextaft": [960, 1273, 1274, 1275, 1276], "real": [961, 1311, 1312, 1313, 1314], "signbit": [962, 1323, 1324, 1325, 1326], "sinc": [963, 1328, 1329, 1330, 1331], "trapz": [964, 1365, 1366, 1367], "xlogi": [965, 1396, 1398, 1399, 1400], "zeta": [966, 1401, 1403, 1404, 1405], "embed": [967, 968, 969, 970, 1143], "static_embed": 971, "static_exp2": 976, "expand": [977, 978, 979, 980, 1195], "static_expand": 981, "static_eye_lik": 986, "fft": [987, 988, 989, 990, 1144], "static_fft": 991, "static_fix": 996, "flatten": [997, 998, 999, 1000, 1196, 2202], "static_flatten": 1001, "fliplr": [1002, 1003, 1004, 1005, 1197], "static_fliplr": 1006, "flipud": [1007, 1008, 1009, 1010, 1198], "static_flipud": 1011, "static_float_pow": 1016, "static_fmax": 1021, "static_fmin": 1026, "static_fmod": 1031, "gamma": [1032, 1033, 1034, 1309], "static_gcd": 1039, "isin": [1041, 1111, 1112, 1113, 1114], "static_gradi": 1046, "static_hamming_window": 1052, "static_hann_window": 1056, "heavisid": [1057, 1058, 1059, 1060, 1199], "static_heavisid": 1061, "hsplit": [1062, 1063, 1064, 1065, 1200], "static_hsplit": 1066, "hstack": [1067, 1068, 1069, 1070, 1201], "static_hstack": 1071, "static_hypot": 1076, "i0": [1077, 1078, 1079, 1080, 1202], "static_i0": 1081, "ifft": [1082, 1083, 1084, 1085, 1145], "static_ifft": 1086, "static_imag": 1091, "instance_norm": [1092, 1093, 1094, 1095, 1279], "static_instance_norm": 1096, "interp": [1097, 1146], "interpol": [1098, 1099, 1100, 1101, 1147], "static_interpol": 1102, "is_ivy_sparse_arrai": [1103, 1339], "is_native_sparse_arrai": [1105, 1340], "static_isclos": 1110, "static_isin": 1115, "static_kaiser_bessel_derived_window": 1119, "static_kaiser_window": 1123, "kron": [1124, 1125, 1126, 1127, 1169], "static_kron": 1128, "l2_normal": [1129, 1130, 1131, 1132, 1280], "static_l2_norm": 1133, "max_pool1d": [1148, 1217, 1218, 1219, 1220], "max_pool2d": [1149, 1222, 1223, 1224, 1225], "max_pool3d": [1150, 1227, 1228, 1229, 1230], "paddedrow": [1151, 1287], "padding_ceil_mod": [1152, 1288], "polynomial_calclul": [1153, 1294], "static_lcm": 1158, "lexsort": [1159, 1160, 1161, 1162, 1334], "static_lexsort": 1163, "matrix_exp": [1170, 1212, 1213, 1214, 1215], "static_logaddexp2": 1175, "static_logit": 1180, "lp_normal": [1183, 1184, 1185, 1186, 1281], "static_lp_norm": 1187, "moveaxi": [1203, 1238, 1239, 1240, 1241], "ndenumer": [1204, 1270], "ndindex": [1205, 1271], "pad": [1206, 1282, 1283, 1284, 1285], "rot90": [1207, 1316, 1317, 1318, 1319], "take_along_axi": [1208, 1350, 1352, 1353, 1354], "top_k": [1209, 1360, 1362, 1363, 1364], "vsplit": [1210, 1386, 1388, 1389, 1390], "vstack": [1211, 1391, 1393, 1394, 1395], "static_matrix_exp": 1216, "static_max_pool1d": 1221, "static_max_pool2d": 1226, "static_max_pool3d": 1231, "median": [1232, 1233, 1234, 1235, 1345], "static_median": 1236, "meta": [1237, 1941], "static_moveaxi": 1242, "msort": [1243, 1244, 1245, 1246, 1335], "static_msort": 1247, "static_nan_to_num": 1252, "nanmean": [1253, 1254, 1255, 1256, 1346], "static_nanmean": 1257, "nanmedian": [1258, 1259, 1260, 1261, 1347], "static_nanmedian": 1262, "static_nansum": 1267, "native_sparse_arrai": [1268, 1341], "native_sparse_array_to_indices_values_and_shap": [1269, 1342], "nest": [1272, 1945, 2124], "static_nextaft": 1277, "static_pad": 1286, "poisson": [1289, 1290, 1291, 1292, 1310], "static_poisson": 1293, "static_prelu": 1299, "quantil": [1300, 1301, 1302, 1303, 1348], "static_quantil": 1304, "static_r": 1315, "static_rot90": 1320, "static_signbit": 1327, "static_sinc": 1332, "spars": 1336, "unravel_index": [1349, 1376, 1378, 1379, 1380], "static_take_along_axi": 1351, "static_thresholded_relu": 1356, "static_top_k": 1361, "static_tril_indic": 1369, "static_triu_indic": 1373, "static_unravel_index": 1377, "static_vorbis_window": 1383, "static_vsplit": 1387, "static_vstack": 1392, "static_xlogi": 1397, "static_zeta": 1402, "paramet": [1407, 1547, 1548, 1551, 1553, 1554, 2262], "all_equ": [1408, 1409, 1410, 1411], "static_all_equ": 1412, "arg_info": 1413, "arg_nam": 1414, "array_equ": [1415, 1416, 1417, 1418], "static_array_equ": 1419, "assert_supports_inplac": [1420, 1421, 1422, 1423], "static_assert_supports_inplac": 1424, "cache_fn": 1425, "clip_matrix_norm": [1426, 1427, 1428, 1429], "static_clip_matrix_norm": 1430, "clip_vector_norm": [1431, 1432, 1433, 1434], "static_clip_vector_norm": 1435, "container_typ": 1436, "current_backend_str": 1437, "default": [1438, 1439, 1440], "einops_rearrang": [1441, 1442, 1443, 1444], "static_einops_rearrang": 1445, "einops_reduc": [1446, 1447, 1448, 1449], "static_einops_reduc": 1450, "einops_repeat": [1451, 1452, 1453, 1454], "static_einops_repeat": 1455, "exist": [1456, 1457, 1458], "fourier_encod": [1459, 1460, 1461, 1462], "static_fourier_encod": 1463, "function_supported_devices_and_dtyp": 1464, "function_unsupported_devices_and_dtyp": 1465, "gather": [1466, 1467, 1468, 1469], "static_gath": 1470, "gather_nd": [1471, 1472, 1473, 1474], "static_gather_nd": 1475, "get_all_arrays_in_memori": 1476, "get_array_mod": 1477, "get_exception_trace_mod": 1478, "get_item": 1479, "get_min_bas": 1480, "get_min_denomin": 1481, "get_nestable_mod": 1482, "get_num_dim": [1483, 1484, 1485, 1486], "static_get_num_dim": 1487, "get_queue_timeout": 1488, "get_referrers_recurs": 1489, "get_show_func_wrapper_trace_mod": 1490, "get_tmp_dir": 1491, "has_nan": [1492, 1493, 1494, 1495], "static_has_nan": 1496, "inplace_arrays_support": 1497, "inplace_decr": [1498, 1499, 1500, 1501], "static_inplace_decr": 1502, "inplace_incr": [1503, 1504, 1505, 1506], "static_inplace_incr": 1507, "inplace_upd": [1508, 1509, 1510, 1511], "static_inplace_upd": 1512, "inplace_variables_support": 1513, "is_arrai": [1514, 1515, 1516, 1517], "static_is_arrai": 1518, "is_ivy_arrai": [1519, 1520, 1521, 1522], "static_is_ivy_arrai": 1523, "is_ivy_contain": [1524, 1525, 1526], "is_native_arrai": [1527, 1528, 1529, 1530], "static_is_native_arrai": 1531, "isscalar": 1532, "match_kwarg": 1533, "multiprocess": 1534, "num_arrays_in_memori": 1535, "print_all_arrays_in_memori": 1536, "scatter_flat": [1537, 1538, 1539, 1540], "static_scatter_flat": 1541, "scatter_nd": [1542, 1543, 1544, 1545], "static_scatter_nd": 1546, "set_array_mod": 1547, "set_exception_trace_mod": 1548, "set_min_bas": 1549, "set_min_denomin": 1550, "set_nestable_mod": 1551, "set_queue_timeout": 1552, "set_shape_array_mod": 1553, "set_show_func_wrapper_trace_mod": 1554, "set_tmp_dir": 1555, "shape_array_mod": 1557, "stable_divid": [1558, 1559, 1560, 1561], "static_stable_divid": 1562, "stable_pow": [1563, 1564, 1565, 1566], "static_stable_pow": 1567, "supports_inplace_upd": [1568, 1570, 1571, 1572], "static_supports_inplace_upd": 1569, "to_ivy_shap": 1573, "to_list": [1574, 1576, 1577], "static_to_list": 1575, "to_native_shap": 1578, "to_numpi": [1579, 1581, 1582, 1583], "static_to_numpi": 1580, "to_scalar": [1584, 1586, 1587, 1588], "static_to_scalar": 1585, "try_else_non": 1589, "unset_array_mod": 1590, "unset_exception_trace_mod": 1591, "unset_nestable_mod": 1592, "unset_queue_timeout": 1593, "unset_shape_array_mod": 1594, "unset_show_func_wrapper_trace_mod": 1595, "value_is_nan": [1596, 1598, 1599, 1600], "static_value_is_nan": 1597, "vmap": 1601, "gradienttrack": 1603, "adam_step": [1604, 1605, 1606, 1607], "adam_upd": [1608, 1609, 1610, 1611], "execute_with_gradi": 1612, "grad": 1613, "gradient_descent_upd": [1614, 1615, 1616, 1617], "jac": 1618, "lamb_upd": [1619, 1620, 1621, 1622], "lars_upd": [1623, 1624, 1625, 1626], "optimizer_upd": [1627, 1628, 1629, 1630], "set_with_grad": 1631, "stop_gradi": [1632, 1634, 1635, 1636], "static_stop_gradi": 1633, "unset_with_grad": 1637, "value_and_grad": 1638, "with_grad": 1639, "conv": 1641, "conv1d": [1642, 1643, 1644, 1645, 2160], "static_conv1d": 1646, "conv1d_transpos": [1647, 1648, 1649, 1650], "static_conv1d_transpos": 1651, "conv2d": [1652, 1653, 1654, 1655, 2162], "static_conv2d": 1656, "conv2d_transpos": [1657, 1658, 1659, 1660], "static_conv2d_transpos": 1661, "conv3d": [1662, 1663, 1664, 1665, 2164], "static_conv3d": 1666, "conv3d_transpos": [1667, 1668, 1669, 1670], "static_conv3d_transpos": 1671, "conv_general_dil": 1672, "conv_general_transpos": 1673, "depthwise_conv2d": [1674, 1675, 1676, 1677], "static_depthwise_conv2d": 1678, "dropout": [1679, 1680, 1681, 1682, 2167], "static_dropout": 1683, "static_linear": 1688, "lstm_updat": [1689, 1690, 1691, 1692], "static_lstm_upd": 1693, "multi_head_attent": [1694, 1695, 1696, 1697], "static_multi_head_attent": 1698, "scaled_dot_product_attent": [1699, 1700, 1701, 1702], "static_scaled_dot_product_attent": 1703, "choleski": [1705, 1706, 1707, 1708], "static_choleski": 1709, "cross": [1710, 1711, 1712, 1713], "static_cross": 1714, "det": [1715, 1716, 1717, 1718], "static_det": 1719, "diag": [1720, 1721, 1722, 1723], "static_diag": 1724, "diagon": [1725, 1726, 1727, 1728], "static_diagon": 1729, "eigh": [1731, 1732, 1733, 1734], "static_eigh": 1735, "eigvalsh": [1736, 1737, 1738, 1739], "static_eigvalsh": 1740, "inner": [1741, 1742, 1743, 1744], "static_inn": 1745, "inv": [1746, 1747, 1748, 1749], "static_inv": 1750, "matmul": [1751, 1752, 1753, 1754], "static_matmul": 1755, "matrix_norm": [1756, 1757, 1758, 1759], "static_matrix_norm": 1760, "matrix_pow": [1761, 1762, 1763, 1764], "static_matrix_pow": 1765, "matrix_rank": [1766, 1767, 1768, 1769], "static_matrix_rank": 1770, "matrix_transpos": [1771, 1772, 1773, 1774], "static_matrix_transpos": 1775, "outer": [1776, 1777, 1778, 1779], "static_out": 1780, "pinv": [1781, 1782, 1783, 1784], "static_pinv": 1785, "qr": [1786, 1787, 1788, 1789], "static_qr": 1790, "slogdet": [1791, 1792, 1793, 1794], "static_slogdet": 1795, "solv": [1796, 1797, 1798, 1799], "static_solv": 1800, "svd": [1801, 1803, 1804, 1805], "static_svd": 1802, "svdval": [1806, 1808, 1809, 1810], "static_svdv": 1807, "tensordot": [1811, 1813, 1814], "static_tensordot": 1812, "tensorsolv": [1815, 1816, 1817, 1818], "static_trac": 1820, "vander": [1824, 1826, 1827, 1828], "static_vand": 1825, "vecdot": [1829, 1831, 1832, 1833], "static_vecdot": 1830, "vector_norm": [1834, 1836, 1837, 1838], "static_vector_norm": 1835, "vector_to_skew_symmetric_matrix": [1839, 1841, 1842, 1843], "static_vector_to_skew_symmetric_matrix": 1840, "binary_cross_entropi": [1845, 1846, 1847, 1848], "static_binary_cross_entropi": 1849, "cross_entropi": [1850, 1851, 1852, 1853], "static_cross_entropi": 1854, "sparse_cross_entropi": [1855, 1856, 1857, 1858], "static_sparse_cross_entropi": 1859, "clip": [1861, 1862, 1863, 1864], "static_clip": 1865, "concat": [1866, 1867, 1868, 1869], "static_concat": 1870, "constant_pad": [1871, 1872, 1873, 1874], "static_constant_pad": 1875, "expand_dim": [1876, 1877, 1878, 1879], "static_expand_dim": 1880, "flip": [1881, 1882, 1883, 1884], "static_flip": 1885, "permute_dim": [1886, 1887, 1888, 1889], "static_permute_dim": 1890, "repeat": [1891, 1892, 1893, 1894], "static_repeat": 1895, "reshap": [1896, 1897, 1898, 1899], "static_reshap": 1900, "static_rol": 1905, "split": [1906, 1907, 1908, 1909], "static_split": 1910, "squeez": [1911, 1912, 1913, 1914], "static_squeez": 1915, "static_stack": 1920, "swapax": [1921, 1923, 1924, 1925], "static_swapax": 1922, "tile": [1926, 1928, 1929, 1930], "static_til": 1927, "unstack": [1931, 1933, 1934, 1935], "static_unstack": 1932, "zero_pad": [1936, 1938, 1939, 1940], "static_zero_pad": 1937, "fomaml_step": 1942, "maml_step": 1943, "reptile_step": 1944, "all_nested_indic": 1946, "copy_nest": 1947, "duplicate_array_index_chain": 1948, "index_nest": 1949, "insert_into_nest_at_index": 1950, "insert_into_nest_at_indic": 1951, "map_nest_at_index": 1953, "map_nest_at_indic": 1954, "multi_index_nest": 1955, "nested_ani": 1956, "nested_argwher": 1957, "nested_map": 1958, "nested_multi_map": 1959, "prune_empti": 1960, "prune_nest_at_index": 1961, "prune_nest_at_indic": 1962, "set_nest_at_index": 1963, "set_nest_at_indic": 1964, "layer_norm": [1966, 1967, 1968, 1969], "multinomi": [1971, 1972, 1973, 1974], "static_multinomi": 1975, "randint": [1976, 1977, 1978, 1979], "static_randint": 1980, "random_norm": [1981, 1982, 1983, 1984], "static_random_norm": 1985, "random_uniform": [1986, 1987, 1988, 1989], "static_random_uniform": 1990, "seed": [1991, 2279], "shuffl": [1992, 1993, 1994, 1995], "static_shuffl": 1996, "argmax": [1998, 1999, 2000, 2001], "static_argmax": 2002, "argmin": [2003, 2004, 2005, 2006], "static_argmin": 2007, "argwher": [2008, 2009, 2010, 2011], "static_argwher": 2012, "nonzero": [2013, 2014, 2015, 2016], "static_nonzero": 2017, "static_wher": 2019, "depend": [2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "output": [2023, 2024, 2028, 2029, 2033, 2034, 2038, 2039, 2043], "unique_al": [2024, 2026, 2027, 2028], "static_unique_al": 2025, "unique_count": [2029, 2031, 2032, 2033], "static_unique_count": 2030, "unique_invers": [2034, 2036, 2037, 2038], "static_unique_invers": 2035, "unique_valu": [2039, 2041, 2042, 2043], "static_unique_valu": 2040, "argsort": [2045, 2046, 2047, 2048], "static_argsort": 2049, "searchsort": [2050, 2051, 2052, 2053], "static_searchsort": 2054, "static_sort": 2059, "cumprod": [2061, 2062, 2063, 2064], "static_cumprod": 2065, "cumsum": [2066, 2067, 2068, 2069], "static_cumsum": 2070, "einsum": [2071, 2072, 2073, 2074], "max": [2075, 2076, 2077, 2078], "mean": [2079, 2080, 2081, 2082], "min": [2083, 2084, 2085, 2086], "prod": [2087, 2088, 2089, 2090, 2240], "static_prod": 2091, "std": [2092, 2093, 2094, 2095], "sum": [2096, 2098, 2099, 2100], "static_sum": 2097, "var": [2101, 2103, 2104, 2105], "static_var": 2102, "all": [2107, 2108, 2109, 2110], "static_al": 2111, "ani": [2112, 2113, 2114, 2115], "static_ani": 2116, "glossari": 2117, "content": 2118, "overview": 2118, "quick": 2118, "start": 2118, "citat": 2118, "inspect": 2121, "add_array_spec": 2122, "fn_array_spec": 2123, "nestedarrai": 2125, "relat": 2126, "infrastructur": [2128, 2136], "llvm": 2128, "mlir": 2128, "oneapi": 2128, "exchang": [2129, 2136], "onnx": 2129, "nnef": 2129, "coreml": 2129, "matlab": 2130, "scipi": 2130, "torch": [2130, 2131], "scikit": 2130, "learn": 2130, "theano": 2130, "panda": 2130, "julia": 2130, "apach": [2130, 2133], "spark": 2130, "mllib": 2130, "caff": 2130, "chainer": 2130, "tensorflow": 2130, "1": 2130, "mxnet": 2130, "cntk": 2130, "pytorch": 2130, "flux": 2130, "jax": 2130, "2": 2130, "dex": 2130, "languag": 2130, "tracer": [2131, 2136], "tf": 2131, "jaxpr": 2131, "jit": 2131, "fx": 2131, "compani": [2132, 2136], "quansight": 2132, "modular": 2132, "octoml": 2132, "multi": [2133, 2136], "vendor": [2133, 2134, 2135, 2136], "tvm": 2133, "xla": 2133, "gcc": 2133, "specif": [2134, 2135, 2136], "tensorrt": 2134, "cuda": 2134, "icc": 2135, "icx": 2135, "nvcc": 2135, "doe": 2136, "eagerpi": 2137, "kera": 2137, "thinc": 2137, "tensorli": 2137, "neuropod": 2137, "geglu": 2140, "moduleconvert": 2143, "mytfmodul": 2144, "mytorchmodul": 2145, "to_ivy_modul": 2146, "modulehelp": 2148, "firstlayersiren": 2151, "glorotuniform": 2152, "kaimingnorm": 2154, "Ones": 2155, "siren": 2156, "uniform": 2157, "conv1dtranspos": 2161, "conv2dtranspos": 2163, "conv3dtranspos": 2165, "depthwiseconv2d": 2166, "lstm": 2168, "multiheadattent": 2170, "layernorm": 2174, "adam": 2176, "lamb": 2177, "lar": 2178, "sgd": 2180, "sequenti": [2181, 2182], "assert_all_clos": 2185, "assert_same_type_and_shap": 2186, "check_unsupported_devic": 2187, "check_unsupported_device_and_dtyp": 2188, "check_unsupported_dtyp": 2189, "test_unsupported_funct": 2190, "value_test": 2191, "avail": 2192, "available_framework": 2193, "ground_truth": 2194, "args_to_contain": 2196, "as_cont": 2197, "as_list": 2198, "convtru": 2199, "create_args_kwarg": 2200, "empty_func": 2201, "flatten_and_to_np": 2203, "flatten_fw_and_to_np": 2204, "framework_compar": 2205, "get_frontend_ret": 2206, "get_ret_and_flattened_np_arrai": 2207, "gradient_incompatible_funct": 2208, "gradient_test": 2209, "gradient_unsupported_dtyp": 2210, "kwargs_to_args_n_kwarg": 2211, "make_json_pick": 2212, "test_frontend_funct": 2213, "test_frontend_method": 2214, "test_funct": 2215, "test_method": 2216, "var_fn": 2217, "global": 2218, "interruptedtest": 2219, "testdata": 2220, "remove_all_current_framework": 2221, "setup_api_test": 2222, "setup_frontend_test": 2223, "teardown_api_test": 2224, "teardown_frontend_test": 2225, "array_and_broadcastable_shap": 2228, "array_bool": 2229, "array_indices_axi": 2230, "array_valu": 2231, "arrays_and_ax": 2232, "arrays_for_pool": 2233, "dtype_and_valu": 2235, "dtype_values_axi": 2236, "list_of_s": 2237, "mutually_broadcastable_shap": 2239, "array_dtyp": 2242, "get_castable_dtyp": 2243, "get_dtyp": 2244, "apply_safety_factor": 2246, "embedding_help": 2247, "get_axi": 2248, "get_bound": 2249, "get_mean_std": 2250, "get_shap": 2251, "matrix_is_st": 2252, "reshape_shap": 2253, "subset": 2254, "x_and_filt": 2255, "float": 2257, "int": 2258, "struct": 2260, "frontendmethoddata": 2261, "flag": 2262, "frontendfunctiontestflag": 2263, "frontendmethodtestflag": 2264, "functiontestflag": 2265, "methodtestflag": 2266, "build_flag": 2267, "frontend_function_flag": 2268, "frontend_method_flag": 2269, "function_flag": 2270, "method_flag": 2271, "handle_frontend_method": 2273, "handle_frontend_test": 2274, "handle_method": 2275, "handle_test": 2276, "num_positional_arg": 2277, "num_positional_args_method": 2278, "ast": 2282, "importtransform": 2283, "ivyload": 2284, "ivypathfind": 2285, "contextmanag": 2287, "choose_random_backend": 2288, "clear_backend_stack": 2289, "convert_from_numpy_to_target_backend": 2290, "convert_from_source_backend_to_numpi": 2291, "current_backend": 2292, "fn_name_from_version_specific_fn_nam": 2293, "get_backend": 2294, "prevent_access_loc": 2295, "set_backend": 2296, "set_backend_to_specific_vers": 2297, "set_jax_backend": 2298, "set_numpy_backend": 2299, "set_tensorflow_backend": 2300, "set_torch_backend": 2301, "unset_backend": 2302, "with_backend": 2303, "import": 2304, "import_modul": 2305, "verbos": 2306, "cprint": 2307}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Assertions": [[1, "module-ivy.assertions"], [2184, "module-ivy_tests.test_ivy.helpers.assertions"]], "check_all": [[2, "check-all"]], "check_all_or_any_fn": [[3, "check-all-or-any-fn"]], "check_any": [[4, "check-any"]], "check_dimensions": [[5, "check-dimensions"]], "check_elem_in_list": [[6, "check-elem-in-list"]], "check_equal": [[7, "check-equal"]], "check_exists": [[8, "check-exists"]], "check_false": [[9, "check-false"]], "check_fill_value_and_dtype_are_compatible": [[10, "check-fill-value-and-dtype-are-compatible"]], "check_gather_input_valid": [[11, "check-gather-input-valid"]], "check_gather_nd_input_valid": [[12, "check-gather-nd-input-valid"]], "check_greater": [[13, "check-greater"]], "check_inplace_sizes_valid": [[14, "check-inplace-sizes-valid"]], "check_isinstance": [[15, "check-isinstance"]], "check_kernel_padding_size": [[16, "check-kernel-padding-size"]], "check_less": [[17, "check-less"]], "check_one_way_broadcastable": [[18, "check-one-way-broadcastable"]], "check_same_dtype": [[19, "check-same-dtype"]], "check_shape": [[20, "check-shape"]], "check_shapes_broadcastable": [[21, "check-shapes-broadcastable"]], "check_true": [[22, "check-true"]], "Background": [[23, "background"], [2118, "background"]], "ML Explosion": [[24, "ml-explosion"]], "Standardization": [[25, "standardization"]], "Skepticism": [[25, "skepticism"]], "Complimentary vs Competitive": [[25, "complimentary-vs-competitive"]], "Do Standards Work?": [[25, "do-standards-work"]], "The Array API Standard": [[25, "the-array-api-standard"]], "Why Unify?": [[26, "why-unify"]], "No More Re-implementations \ud83d\udea7": [[26, "no-more-re-implementations"]], "\u201cInfinite\u201d Shelf-Life \u2705": [[26, "infinite-shelf-life"]], "Contributing": [[27, "contributing"], [2118, "contributing"]], "Applied Libraries": [[28, "applied-libraries"], [170, "applied-libraries"]], "Introduction": [[28, "introduction"], [148, "introduction"], [149, "introduction"]], "Example - Ivy Robot": [[28, "example-ivy-robot"]], "Building the Docs": [[29, "building-the-docs"]], "Building the Docs with Docker": [[29, "building-the-docs-with-docker"]], "Dockerless Doc-building": [[29, "dockerless-doc-building"]], "Using miniconda": [[29, "using-miniconda"], [32, "using-miniconda"]], "Using venv": [[29, "using-venv"], [32, "using-venv"]], "Building the docs": [[29, "id1"]], "Working of the Documentation Building Pipeline": [[29, "working-of-the-documentation-building-pipeline"]], "make_docs.sh:": [[29, "make-docs-sh"]], "entrypoint.sh:": [[29, "entrypoint-sh"]], "_make_docs.sh:": [[29, "id2"]], "generate_src_rst_files.py:": [[29, "generate-src-rst-files-py"]], "sphinx-build.py": [[29, "sphinx-build-py"]], "correct_built_html_files.py": [[29, "correct-built-html-files-py"]], "remove_files.sh": [[29, "remove-files-sh"]], "Helpful Resources": [[30, "helpful-resources"]], "Open Tasks": [[31, "open-tasks"]], "Function Formatting": [[31, "function-formatting"]], "Formatting checklist": [[31, "formatting-checklist"]], "Frontend APIs": [[31, "frontend-apis"]], "Where to place a frontend function": [[31, "where-to-place-a-frontend-function"]], "Ivy Experimental API": [[31, "ivy-experimental-api"], [33, "ivy-experimental-api"]], "Setting Up": [[32, "setting-up"]], "Forking and cloning the repo": [[32, "forking-and-cloning-the-repo"]], "PyCharm": [[32, "pycharm"]], "Virtual environments - No Docker": [[32, "virtual-environments-no-docker"]], "Docker Interpreter with PyCharm": [[32, "docker-interpreter-with-pycharm"]], "Windows": [[32, "windows"], [32, "id6"]], "MacOS": [[32, "macos"]], "Ubuntu": [[32, "ubuntu"], [32, "id8"]], "Setting Up Testing": [[32, "setting-up-testing"]], "More Detailed Hypothesis Logs": [[32, "more-detailed-hypothesis-logs"]], "Setting up for Free": [[32, "setting-up-for-free"]], "GitHub Codespaces": [[32, "github-codespaces"]], "Pre-Commit": [[32, "pre-commit"]], "The Basics": [[33, "the-basics"]], "Getting Help": [[33, "getting-help"]], "ToDo List Issues": [[33, "todo-list-issues"]], "Managing Your Fork": [[33, "managing-your-fork"]], "Who To Ask": [[33, "who-to-ask"]], "With Command Line:": [[33, "with-command-line"]], "With Browser:": [[33, "with-browser"]], "Pull Requests": [[33, "pull-requests"]], "Small Commits Often": [[33, "small-commits-often"]], "Interactive Ivy Docker Container": [[33, "interactive-ivy-docker-container"]], "Running Tests Locally": [[33, "running-tests-locally"]], "With Docker": [[33, "with-docker"]], "Getting the most out of IDE": [[33, "getting-the-most-out-of-ide"]], "with PyCharm": [[33, "with-pycharm"]], "Data classes": [[34, "data-classes"]], "Array": [[35, "module-ivy.array.array"], [38, "module-ivy.array.array"]], "Activations": [[36, "module-ivy.array.activations"], [85, "module-ivy.container.activations"], [189, "module-ivy.functional.ivy.activations"], [789, "module-ivy.functional.ivy.experimental.activations"], [2139, "module-ivy.stateful.activations"]], "ArrayWithActivations": [[37, "arraywithactivations"]], "Conversions": [[40, "module-ivy.array.conversions"], [91, "module-ivy.container.conversions"]], "args_to_ivy": [[41, "args-to-ivy"]], "args_to_native": [[42, "args-to-native"]], "to_ivy": [[43, "to-ivy"]], "to_native": [[44, "to-native"]], "Creation": [[45, "module-ivy.array.creation"], [93, "module-ivy.container.creation"], [239, "module-ivy.functional.ivy.creation"], [880, "module-ivy.functional.ivy.experimental.creation"]], "ArrayWithCreation": [[46, "arraywithcreation"]], "Data type": [[47, "module-ivy.array.data_type"], [95, "module-ivy.container.data_type"], [325, "module-ivy.functional.ivy.data_type"], [890, "module-ivy.functional.ivy.experimental.data_type"]], "ArrayWithDataTypes": [[48, "arraywithdatatypes"]], "Device": [[49, "module-ivy.array.device"], [97, "module-ivy.container.device"], [430, "module-ivy.functional.ivy.device"], [897, "module-ivy.functional.ivy.experimental.device"]], "ArrayWithDevice": [[50, "arraywithdevice"]], "Elementwise": [[51, "module-ivy.array.elementwise"], [99, "module-ivy.container.elementwise"], [465, "module-ivy.functional.ivy.elementwise"], [938, "module-ivy.functional.ivy.experimental.elementwise"]], "ArrayWithElementwise": [[52, "arraywithelementwise"]], "Experimental": [[53, "experimental"], [101, "experimental"], [786, "module-ivy.functional.ivy.experimental"]], "General": [[54, "module-ivy.array.general"], [102, "module-ivy.container.general"], [1040, "module-ivy.functional.ivy.experimental.general"], [1407, "module-ivy.functional.ivy.general"]], "ArrayWithGeneral": [[55, "arraywithgeneral"]], "Gradients": [[56, "module-ivy.array.gradients"], [104, "module-ivy.container.gradients"], [1047, "module-ivy.functional.ivy.experimental.gradients"], [1602, "module-ivy.functional.ivy.gradients"]], "ArrayWithGradients": [[57, "arraywithgradients"]], "Image": [[58, "module-ivy.array.image"], [106, "module-ivy.container.image"]], "ArrayWithImage": [[59, "arraywithimage"]], "Layers": [[60, "module-ivy.array.layers"], [108, "module-ivy.container.layers"], [1134, "module-ivy.functional.ivy.experimental.layers"], [1640, "module-ivy.functional.ivy.layers"], [2159, "module-ivy.stateful.layers"]], "ArrayWithLayers": [[61, "arraywithlayers"]], "Linear algebra": [[62, "module-ivy.array.linear_algebra"], [110, "module-ivy.container.linear_algebra"], [1164, "module-ivy.functional.ivy.experimental.linear_algebra"], [1704, "module-ivy.functional.ivy.linear_algebra"]], "ArrayWithLinearAlgebra": [[63, "arraywithlinearalgebra"]], "Losses": [[64, "module-ivy.array.losses"], [112, "module-ivy.container.losses"], [1181, "module-ivy.functional.ivy.experimental.losses"], [1844, "module-ivy.functional.ivy.losses"]], "ArrayWithLosses": [[65, "arraywithlosses"]], "Manipulation": [[66, "module-ivy.array.manipulation"], [114, "module-ivy.container.manipulation"], [1188, "module-ivy.functional.ivy.experimental.manipulation"], [1860, "module-ivy.functional.ivy.manipulation"]], "ArrayWithManipulation": [[67, "arraywithmanipulation"]], "Norms": [[68, "module-ivy.array.norms"], [116, "module-ivy.container.norms"], [1278, "module-ivy.functional.ivy.experimental.norms"], [1965, "module-ivy.functional.ivy.norms"], [2173, "module-ivy.stateful.norms"]], "ArrayWithNorms": [[69, "arraywithnorms"]], "Random": [[70, "module-ivy.array.random"], [118, "module-ivy.container.random"], [1305, "module-ivy.functional.ivy.experimental.random"], [1970, "module-ivy.functional.ivy.random"]], "ArrayWithRandom": [[71, "arraywithrandom"]], "Searching": [[72, "module-ivy.array.searching"], [120, "module-ivy.container.searching"], [1321, "module-ivy.functional.ivy.experimental.searching"], [1997, "module-ivy.functional.ivy.searching"]], "ArrayWithSearching": [[73, "arraywithsearching"]], "Set": [[74, "module-ivy.array.set"], [122, "module-ivy.container.set"], [1322, "module-ivy.functional.ivy.experimental.set"], [2023, "module-ivy.functional.ivy.set"]], "ArrayWithSet": [[75, "arraywithset"]], "Sorting": [[76, "module-ivy.array.sorting"], [124, "module-ivy.container.sorting"], [1333, "module-ivy.functional.ivy.experimental.sorting"], [2044, "module-ivy.functional.ivy.sorting"]], "ArrayWithSorting": [[77, "arraywithsorting"]], "Statistical": [[78, "module-ivy.array.statistical"], [126, "module-ivy.container.statistical"], [1343, "module-ivy.functional.ivy.experimental.statistical"], [2060, "module-ivy.functional.ivy.statistical"]], "ArrayWithStatistical": [[79, "arraywithstatistical"]], "Utility": [[80, "module-ivy.array.utility"], [128, "module-ivy.container.utility"], [1381, "module-ivy.functional.ivy.experimental.utility"], [2106, "module-ivy.functional.ivy.utility"]], "ArrayWithUtility": [[81, "arraywithutility"]], "Wrapping": [[82, "module-ivy.array.wrapping"], [130, "module-ivy.container.wrapping"]], "add_ivy_array_instance_methods": [[83, "add-ivy-array-instance-methods"]], "Container": [[84, "module-ivy.container.container"], [89, "module-ivy.container.container"]], "ContainerWithActivations": [[86, "containerwithactivations"]], "Base": [[87, "module-ivy.container.base"]], "ContainerBase": [[88, "containerbase"]], "ContainerWithConversions": [[92, "containerwithconversions"]], "ContainerWithCreation": [[94, "containerwithcreation"]], "ContainerWithDataTypes": [[96, "containerwithdatatypes"]], "ContainerWithDevice": [[98, "containerwithdevice"]], "ContainerWithElementwise": [[100, "containerwithelementwise"]], "ContainerWithGeneral": [[103, "containerwithgeneral"]], "ContainerWithGradients": [[105, "containerwithgradients"]], "ContainerWithImage": [[107, "containerwithimage"]], "ContainerWithLayers": [[109, "containerwithlayers"]], "ContainerWithLinearAlgebra": [[111, "containerwithlinearalgebra"]], "ContainerWithLosses": [[113, "containerwithlosses"]], "ContainerWithManipulation": [[115, "containerwithmanipulation"]], "ContainerWithNorms": [[117, "containerwithnorms"]], "ContainerWithRandom": [[119, "containerwithrandom"]], "ContainerWithSearching": [[121, "containerwithsearching"]], "ContainerWithSet": [[123, "containerwithset"]], "ContainerWithSorting": [[125, "containerwithsorting"]], "ContainerWithStatistical": [[127, "containerwithstatistical"]], "ContainerWithUtility": [[129, "containerwithutility"]], "add_ivy_container_instance_methods": [[131, "add-ivy-container-instance-methods"]], "Deep Dive": [[132, "deep-dive"]], "Array API Tests": [[133, "array-api-tests"], [137, "array-api-tests"]], "Running the Tests": [[133, "running-the-tests"]], "Using Terminal": [[133, "using-terminal"]], "Using the IDE": [[133, "using-the-ide"]], "Regenerating Test Failures": [[133, "regenerating-test-failures"]], "Test Skipping": [[133, "test-skipping"]], "Arrays": [[134, "arrays"]], "Native Array": [[134, "native-array"]], "Ivy Array": [[134, "ivy-array"], [156, "ivy-array"]], "Array Handling": [[134, "array-handling"]], "Integrating custom classes with Ivy": [[134, "integrating-custom-classes-with-ivy"]], "Backend Setting": [[135, "backend-setting"]], "Backend and Frontend Version Support": [[135, "backend-and-frontend-version-support"]], "Containers": [[136, "containers"]], "Container Instance Methods": [[136, "container-instance-methods"]], "Container Static Methods": [[136, "container-static-methods"]], "API Static Methods": [[136, "api-static-methods"]], "API Instance Methods": [[136, "api-instance-methods"]], "API Special Methods": [[136, "api-special-methods"]], "Nestable Functions": [[136, "nestable-functions"], [144, "nestable-functions"], [145, "nestable-functions"]], "Continuous Integration": [[137, "continuous-integration"]], "Commit (Push/PR) Triggered Testing": [[137, "commit-push-pr-triggered-testing"]], "Ivy Tests": [[137, "ivy-tests"], [150, "ivy-tests"]], "Implementation": [[137, "implementation"]], "A Top-Down View": [[137, "a-top-down-view"]], "Storing (and retrieving) the Mapping": [[137, "storing-and-retrieving-the-mapping"]], "Cloning and Pushing to the Repository": [[137, "cloning-and-pushing-to-the-repository"]], "Implementational Nitty Gritties": [[137, "implementational-nitty-gritties"]], "Storage Space (unifyai/Mapping)": [[137, "storage-space-unifyai-mapping"]], "Determine Test Coverage Workflow": [[137, "determine-test-coverage-workflow"]], "Multiple Runners": [[137, "multiple-runners"]], "Race Condition": [[137, "race-condition"]], "Periodic Testing": [[137, "periodic-testing"]], "Manually Dispatched Workflows": [[137, "manually-dispatched-workflows"]], "CI Pipeline \u27a1\ufe0f": [[137, "ci-pipeline"]], "Push": [[137, "push"]], "Pull Request": [[137, "pull-request"]], "Dashboard": [[137, "dashboard"]], "Data Types": [[138, "data-types"]], "Data Type Module": [[138, "data-type-module"]], "Data Type Promotion": [[138, "data-type-promotion"]], "Arguments in other Functions": [[138, "arguments-in-other-functions"], [139, "arguments-in-other-functions"]], "Supported and Unsupported Data Types": [[138, "supported-and-unsupported-data-types"]], "Backend Data Type Bugs": [[138, "backend-data-type-bugs"]], "Superset Data Type Support": [[138, "superset-data-type-support"]], "Devices": [[139, "devices"]], "Device Module": [[139, "device-module"]], "Docstring Examples": [[140, "docstring-examples"]], "ivy.tan": [[140, "ivy-tan"], [770, "ivy-tan"]], "ivy.roll": [[140, "ivy-roll"], [1904, "ivy-roll"]], "ivy.add": [[140, "ivy-add"], [484, "ivy-add"]], "Docstrings": [[141, "docstrings"]], "Exception Handling": [[142, "exception-handling"]], "Ivy Exception Class": [[142, "ivy-exception-class"]], "Configurable Mode for Stack Trace": [[142, "configurable-mode-for-stack-trace"]], "Ivy func_wrapper Pruning": [[142, "ivy-func-wrapper-pruning"]], "@handle_exceptions Decorator": [[142, "handle-exceptions-decorator"]], "Assertion Function": [[142, "assertion-function"]], "Formatting": [[143, "formatting"]], "Lint Checks": [[143, "lint-checks"]], "Pre-Commit Hook": [[143, "pre-commit-hook"]], "Function Arguments": [[144, "function-arguments"]], "Examples": [[144, "examples"]], "Positional and Keyword Arguments": [[144, "positional-and-keyword-arguments"]], "Input Arrays": [[144, "input-arrays"]], "out Argument": [[144, "out-argument"]], "dtype and device arguments": [[144, "dtype-and-device-arguments"]], "Numbers in Operator Functions": [[144, "numbers-in-operator-functions"]], "Integer Sequences": [[144, "integer-sequences"]], "Function Types": [[145, "function-types"]], "Primary Functions": [[145, "primary-functions"]], "Compositional Functions": [[145, "compositional-functions"]], "Mixed Functions": [[145, "mixed-functions"]], "Standalone Functions": [[145, "standalone-functions"]], "Convenience Functions": [[145, "convenience-functions"]], "Function Wrapping": [[146, "function-wrapping"]], "Inplace Updates": [[147, "inplace-updates"]], "out argument": [[147, "out-argument"]], "copy argument": [[147, "copy-argument"]], "Ivy Frontends": [[148, "ivy-frontends"]], "The Frontend Basics": [[148, "the-frontend-basics"]], "Unused Arguments": [[148, "unused-arguments"]], "Compositions": [[148, "compositions"]], "Missing Ivy Functions": [[148, "missing-ivy-functions"]], "Temporary Compositions": [[148, "temporary-compositions"]], "Supported Data Types and Devices": [[148, "supported-data-types-and-devices"]], "Classes and Instance Methods": [[148, "id6"]], "Frontend Data Type Promotion Rules": [[148, "frontend-data-type-promotion-rules"]], "NumPy Special Argument - Casting": [[148, "numpy-special-argument-casting"]], "Frontends Duplicate Policy": [[148, "frontends-duplicate-policy"]], "Ivy Frontend Tests": [[149, "ivy-frontend-tests"]], "Frontend Test Examples": [[149, "frontend-test-examples"]], "ivy.tan()": [[149, "ivy-tan"]], "ivy.full()": [[149, "ivy-full"]], "Testing Without Using Tests Values": [[149, "testing-without-using-tests-values"]], "Alias functions": [[149, "alias-functions"]], "Frontend Instance Method Tests": [[149, "frontend-instance-method-tests"]], "Frontend Instance Method Test Examples": [[149, "frontend-instance-method-test-examples"]], "ivy.add()": [[149, "ivy-add"]], "Hypothesis Helpers": [[149, "hypothesis-helpers"]], "Testing Pipeline": [[150, "testing-pipeline"]], "Hypothesis": [[150, "id2"]], "Data Generation": [[150, "id3"]], "Writing your own strategy": [[150, "writing-your-own-strategy"]], "Writing Hypothesis Test": [[150, "writing-hypothesis-test"]], "Ivy Test Decorators": [[150, "ivy-test-decorators"]], "Writing Ivy Tests": [[150, "writing-ivy-tests"]], "Integration of Strategies into Ivy Tests": [[150, "integration-of-strategies-into-ivy-tests"]], "Why do we need helper functions": [[150, "why-do-we-need-helper-functions"]], "How to write Hypothesis Tests effectively": [[150, "how-to-write-hypothesis-tests-effectively"]], "Bonus: Hypothesis\u2019 Extended Features": [[150, "bonus-hypothesis-extended-features"]], "Self-Consistent and Explicit Testing": [[150, "self-consistent-and-explicit-testing"]], "test_array_function": [[150, "id6"]], "Running Ivy Tests": [[150, "running-ivy-tests"]], "Re-Running Failed Ivy Tests": [[150, "re-running-failed-ivy-tests"]], "Navigating the Code": [[151, "navigating-the-code"]], "Categorization": [[151, "categorization"]], "Submodule Design": [[151, "submodule-design"]], "Ivy API": [[151, "ivy-api"]], "Backend API": [[151, "backend-api"]], "Submodule Helper Functions": [[151, "submodule-helper-functions"]], "Version Pinning": [[151, "version-pinning"]], "Superset Behaviour": [[152, "superset-behaviour"]], "Extending the Standard": [[152, "extending-the-standard"]], "What is the Superset?": [[152, "what-is-the-superset"]], "A Non-Duplicate Superset": [[152, "a-non-duplicate-superset"]], "What is not the Superset?": [[152, "what-is-not-the-superset"]], "When the Superset is Too Much": [[152, "when-the-superset-is-too-much"]], "Balancing Generalization with Efficiency": [[152, "balancing-generalization-with-efficiency"]], "More Examples": [[152, "more-examples"]], "Design": [[153, "design"], [2118, "design"]], "Building Blocks": [[154, "building-blocks"]], "Backend Functional APIs \u2705": [[154, "backend-functional-apis"]], "Ivy Functional API \u2705": [[154, "ivy-functional-api"]], "Backend Handler \u2705": [[154, "backend-handler"]], "Graph Compiler \ud83d\udea7": [[154, "graph-compiler"]], "Ivy as a Framework": [[155, "ivy-as-a-framework"]], "The Array Class": [[156, "the-array-class"]], "Unifying Operators": [[156, "unifying-operators"]], "API Monkey Patching": [[156, "api-monkey-patching"]], "Instance Methods": [[156, "instance-methods"]], "Ivy Container": [[157, "ivy-container"]], "Construction": [[157, "construction"]], "Representation": [[157, "representation"]], "Recursive Methods": [[157, "recursive-methods"]], "Built-ins": [[157, "built-ins"]], "Access": [[157, "access"]], "Saving and Loading": [[157, "saving-and-loading"]], "Comparisons": [[157, "comparisons"]], "Customized Representations": [[157, "customized-representations"]], "Use Cases": [[157, "use-cases"]], "Compartmentalization": [[157, "compartmentalization"]], "Configuration": [[157, "configuration"]], "Data loading": [[157, "data-loading"]], "Network weights": [[157, "network-weights"]], "Ivy Stateful API": [[158, "ivy-stateful-api"]], "Modules": [[158, "modules"]], "Initializers": [[158, "initializers"], [2149, "module-ivy.stateful.initializers"]], "Optimizers": [[158, "optimizers"], [2175, "module-ivy.stateful.optimizers"]], "Ivy as a Transpiler": [[159, "ivy-as-a-transpiler"]], "Frontend Functional APIs \ud83d\udea7": [[159, "frontend-functional-apis"]], "Role of the Graph Compiler \ud83d\udea7": [[159, "role-of-the-graph-compiler"]], "Converting Network Models \ud83d\udea7": [[159, "converting-network-models"]], "Ivy": [[160, "ivy"]], "Ivy builder": [[161, "ivy-builder"]], "Ivy ecosystem": [[162, "ivy-ecosystem"]], "Ivy gym": [[163, "ivy-gym"]], "Ivy mech": [[164, "ivy-mech"]], "Ivy memory": [[165, "ivy-memory"]], "Ivy models": [[166, "ivy-models"]], "Ivy robot": [[167, "ivy-robot"]], "Ivy vision": [[168, "ivy-vision"]], "Extensions": [[169, "extensions"], [2118, "extensions"]], "Ivy Mechanics": [[170, "ivy-mechanics"]], "Ivy Vision": [[170, "ivy-vision"]], "Ivy Robot": [[170, "ivy-robot"]], "Ivy Gym": [[170, "ivy-gym"]], "Ivy Memory": [[170, "ivy-memory"]], "FAQ": [[171, "faq"]], "Maintaining Backend Versions": [[171, "maintaining-backend-versions"]], "Dynamic Sizes": [[171, "dynamic-sizes"]], "Type and Shape Checking": [[171, "type-and-shape-checking"]], "GPU handling": [[171, "gpu-handling"]], "Model Deployment": [[171, "model-deployment"]], "Dynamic Control Flow": [[171, "dynamic-control-flow"]], "Auto-Differentiation": [[171, "auto-differentiation"]], "Replicas, and Data vs Model Parallelism": [[171, "replicas-and-data-vs-model-parallelism"]], "Support for Functions": [[171, "support-for-functions"]], "Alternative Data Structures": [[171, "alternative-data-structures"]], "Custom Operations": [[171, "custom-operations"]], "The Pipeline": [[171, "the-pipeline"]], "State": [[171, "state"]], "Func wrapper": [[172, "module-ivy.func_wrapper"]], "handle_array_function": [[173, "handle-array-function"]], "handle_array_like_without_promotion": [[174, "handle-array-like-without-promotion"]], "handle_nans": [[175, "handle-nans"]], "handle_nestable": [[176, "handle-nestable"]], "handle_out_argument": [[177, "handle-out-argument"]], "infer_device": [[178, "infer-device"]], "infer_dtype": [[179, "infer-dtype"]], "inputs_to_ivy_arrays": [[180, "inputs-to-ivy-arrays"]], "inputs_to_native_arrays": [[181, "inputs-to-native-arrays"]], "integer_arrays_to_float": [[182, "integer-arrays-to-float"]], "output_to_native_arrays": [[183, "output-to-native-arrays"]], "outputs_to_ivy_arrays": [[184, "outputs-to-ivy-arrays"]], "to_ivy_arrays_and_back": [[185, "to-ivy-arrays-and-back"]], "to_native_arrays_and_back": [[186, "to-native-arrays-and-back"]], "try_array_function_override": [[187, "try-array-function-override"]], "deserialize": [[190, "deserialize"]], "gelu": [[191, "gelu"]], "ivy.Array.gelu": [[192, "ivy-array-gelu"]], "ivy.Container.gelu": [[193, "ivy-container-gelu"]], "ivy.gelu": [[194, "ivy-gelu"]], "ivy.Container.static_gelu": [[195, "ivy-container-static-gelu"]], "get": [[196, "get"]], "leaky_relu": [[197, "leaky-relu"]], "ivy.Array.leaky_relu": [[198, "ivy-array-leaky-relu"]], "ivy.Container.leaky_relu": [[199, "ivy-container-leaky-relu"]], "ivy.leaky_relu": [[200, "ivy-leaky-relu"]], "ivy.Container.static_leaky_relu": [[201, "ivy-container-static-leaky-relu"]], "log_softmax": [[202, "log-softmax"]], "ivy.Array.log_softmax": [[203, "ivy-array-log-softmax"]], "ivy.Container.log_softmax": [[204, "ivy-container-log-softmax"]], "ivy.log_softmax": [[205, "ivy-log-softmax"]], "ivy.Container.static_log_softmax": [[206, "ivy-container-static-log-softmax"]], "mish": [[207, "mish"]], "ivy.Array.mish": [[208, "ivy-array-mish"]], "ivy.Container.mish": [[209, "ivy-container-mish"]], "ivy.mish": [[210, "ivy-mish"]], "ivy.Container.static_mish": [[211, "ivy-container-static-mish"]], "relu": [[212, "relu"]], "ivy.Array.relu": [[213, "ivy-array-relu"]], "ivy.Container.relu": [[214, "ivy-container-relu"]], "ivy.relu": [[215, "ivy-relu"]], "ivy.Container.static_relu": [[216, "ivy-container-static-relu"]], "sigmoid": [[217, "sigmoid"]], "ivy.Array.sigmoid": [[218, "ivy-array-sigmoid"]], "ivy.Container.sigmoid": [[219, "ivy-container-sigmoid"]], "ivy.sigmoid": [[220, "ivy-sigmoid"]], "ivy.Container.static_sigmoid": [[221, "ivy-container-static-sigmoid"]], "softmax": [[222, "softmax"]], "ivy.Array.softmax": [[223, "ivy-array-softmax"]], "ivy.Container.softmax": [[224, "ivy-container-softmax"]], "ivy.softmax": [[225, "ivy-softmax"]], "ivy.Container.static_softmax": [[226, "ivy-container-static-softmax"]], "softplus": [[227, "softplus"]], "ivy.Array.softplus": [[228, "ivy-array-softplus"]], "ivy.Container.softplus": [[229, "ivy-container-softplus"]], "ivy.softplus": [[230, "ivy-softplus"]], "ivy.Container.static_softplus": [[231, "ivy-container-static-softplus"]], "Constants": [[233, "module-ivy.functional.ivy.constants"], [864, "module-ivy.functional.ivy.experimental.constants"]], "Control flow ops": [[234, "module-ivy.functional.ivy.control_flow_ops"]], "IfElse": [[235, "ifelse"]], "WhileLoop": [[236, "whileloop"]], "if_else": [[237, "if-else"]], "while_loop": [[238, "while-loop"]], "Note": [[239, null], [263, null], [266, null]], "NestedSequence": [[240, "nestedsequence"]], "arange": [[241, "arange"]], "ivy.arange": [[242, "ivy-arange"]], "ivy.Container.static_arange": [[243, "ivy-container-static-arange"]], "asarray": [[244, "asarray"]], "ivy.Array.asarray": [[245, "ivy-array-asarray"]], "ivy.asarray": [[246, "ivy-asarray"]], "ivy.Container.static_asarray": [[247, "ivy-container-static-asarray"]], "asarray_handle_nestable": [[248, "asarray-handle-nestable"]], "asarray_infer_device": [[249, "asarray-infer-device"]], "asarray_to_native_arrays_and_back": [[250, "asarray-to-native-arrays-and-back"]], "copy_array": [[251, "copy-array"]], "ivy.Array.copy_array": [[252, "ivy-array-copy-array"]], "ivy.copy_array": [[253, "ivy-copy-array"]], "empty": [[254, "empty"]], "empty_like": [[255, "empty-like"]], "ivy.Array.empty_like": [[256, "ivy-array-empty-like"]], "ivy.Container.empty_like": [[257, "ivy-container-empty-like"]], "ivy.empty_like": [[258, "ivy-empty-like"]], "ivy.Container.static_empty_like": [[259, "ivy-container-static-empty-like"]], "eye": [[260, "eye"]], "ivy.eye": [[261, "ivy-eye"]], "ivy.Container.static_eye": [[262, "ivy-container-static-eye"]], "from_dlpack": [[263, "from-dlpack"]], "ivy.Array.from_dlpack": [[264, "ivy-array-from-dlpack"]], "ivy.Container.from_dlpack": [[265, "ivy-container-from-dlpack"]], "ivy.from_dlpack": [[266, "ivy-from-dlpack"]], "ivy.Container.static_from_dlpack": [[267, "ivy-container-static-from-dlpack"]], "full": [[268, "full"]], "full_like": [[269, "full-like"]], "ivy.Array.full_like": [[270, "ivy-array-full-like"]], "ivy.Container.full_like": [[271, "ivy-container-full-like"]], "ivy.full_like": [[272, "ivy-full-like"]], "ivy.Container.static_full_like": [[273, "ivy-container-static-full-like"]], "linspace": [[274, "linspace"]], "ivy.Array.linspace": [[275, "ivy-array-linspace"]], "ivy.Container.linspace": [[276, "ivy-container-linspace"]], "ivy.linspace": [[277, "ivy-linspace"]], "ivy.Container.static_linspace": [[278, "ivy-container-static-linspace"]], "logspace": [[279, "logspace"]], "ivy.Array.logspace": [[280, "ivy-array-logspace"]], "ivy.Container.logspace": [[281, "ivy-container-logspace"]], "ivy.logspace": [[282, "ivy-logspace"]], "ivy.Container.static_logspace": [[283, "ivy-container-static-logspace"]], "meshgrid": [[284, "meshgrid"]], "ivy.Array.meshgrid": [[285, "ivy-array-meshgrid"]], "ivy.Container.meshgrid": [[286, "ivy-container-meshgrid"]], "ivy.meshgrid": [[287, "ivy-meshgrid"]], "ivy.Container.static_meshgrid": [[288, "ivy-container-static-meshgrid"]], "native_array": [[289, "native-array"]], "ivy.Array.native_array": [[290, "ivy-array-native-array"]], "ivy.Container.native_array": [[291, "ivy-container-native-array"]], "ivy.native_array": [[292, "ivy-native-array"]], "ivy.Container.static_native_array": [[293, "ivy-container-static-native-array"]], "one_hot": [[294, "one-hot"]], "ivy.Array.one_hot": [[295, "ivy-array-one-hot"]], "ivy.Container.one_hot": [[296, "ivy-container-one-hot"]], "ivy.one_hot": [[297, "ivy-one-hot"]], "ivy.Container.static_one_hot": [[298, "ivy-container-static-one-hot"]], "ones": [[299, "ones"]], "ivy.ones": [[300, "ivy-ones"]], "ivy.Container.static_ones": [[301, "ivy-container-static-ones"]], "ones_like": [[302, "ones-like"]], "ivy.Array.ones_like": [[303, "ivy-array-ones-like"]], "ivy.Container.ones_like": [[304, "ivy-container-ones-like"]], "ivy.ones_like": [[305, "ivy-ones-like"]], "ivy.Container.static_ones_like": [[306, "ivy-container-static-ones-like"]], "tril": [[307, "tril"]], "ivy.Container.static_tril": [[308, "ivy-container-static-tril"]], "ivy.Array.tril": [[309, "ivy-array-tril"]], "ivy.Container.tril": [[310, "ivy-container-tril"]], "ivy.tril": [[311, "ivy-tril"]], "triu": [[312, "triu"]], "ivy.Container.static_triu": [[313, "ivy-container-static-triu"]], "ivy.Array.triu": [[314, "ivy-array-triu"]], "ivy.Container.triu": [[315, "ivy-container-triu"]], "ivy.triu": [[316, "ivy-triu"]], "zeros": [[317, "zeros"]], "ivy.Container.static_zeros": [[318, "ivy-container-static-zeros"]], "ivy.zeros": [[319, "ivy-zeros"]], "zeros_like": [[320, "zeros-like"]], "ivy.Container.static_zeros_like": [[321, "ivy-container-static-zeros-like"]], "ivy.Array.zeros_like": [[322, "ivy-array-zeros-like"]], "ivy.Container.zeros_like": [[323, "ivy-container-zeros-like"]], "ivy.zeros_like": [[324, "ivy-zeros-like"]], "DefaultComplexDtype": [[326, "defaultcomplexdtype"]], "DefaultDtype": [[327, "defaultdtype"]], "DefaultFloatDtype": [[328, "defaultfloatdtype"]], "DefaultIntDtype": [[329, "defaultintdtype"]], "DefaultUintDtype": [[330, "defaultuintdtype"]], "as_ivy_dtype": [[331, "as-ivy-dtype"]], "as_native_dtype": [[332, "as-native-dtype"]], "astype": [[333, "astype"]], "ivy.Array.astype": [[334, "ivy-array-astype"]], "ivy.Container.astype": [[335, "ivy-container-astype"]], "ivy.astype": [[336, "ivy-astype"]], "ivy.Container.static_astype": [[337, "ivy-container-static-astype"]], "broadcast_arrays": [[338, "broadcast-arrays"]], "ivy.Array.broadcast_arrays": [[339, "ivy-array-broadcast-arrays"]], "ivy.Container.broadcast_arrays": [[340, "ivy-container-broadcast-arrays"]], "ivy.broadcast_arrays": [[341, "ivy-broadcast-arrays"]], "ivy.Container.static_broadcast_arrays": [[342, "ivy-container-static-broadcast-arrays"]], "broadcast_to": [[343, "broadcast-to"]], "ivy.Array.broadcast_to": [[344, "ivy-array-broadcast-to"]], "ivy.Container.broadcast_to": [[345, "ivy-container-broadcast-to"]], "ivy.broadcast_to": [[346, "ivy-broadcast-to"]], "ivy.Container.static_broadcast_to": [[347, "ivy-container-static-broadcast-to"]], "can_cast": [[348, "can-cast"]], "ivy.Array.can_cast": [[349, "ivy-array-can-cast"]], "ivy.Container.can_cast": [[350, "ivy-container-can-cast"]], "ivy.can_cast": [[351, "ivy-can-cast"]], "ivy.Container.static_can_cast": [[352, "ivy-container-static-can-cast"]], "check_float": [[353, "check-float"]], "closest_valid_dtype": [[354, "closest-valid-dtype"]], "default_complex_dtype": [[355, "default-complex-dtype"]], "ivy.default_complex_dtype": [[356, "ivy-default-complex-dtype"]], "ivy.Container.static_default_complex_dtype": [[357, "ivy-container-static-default-complex-dtype"]], "default_dtype": [[358, "default-dtype"]], "default_float_dtype": [[359, "default-float-dtype"]], "ivy.default_float_dtype": [[360, "ivy-default-float-dtype"]], "ivy.Container.static_default_float_dtype": [[361, "ivy-container-static-default-float-dtype"]], "default_int_dtype": [[362, "default-int-dtype"]], "default_uint_dtype": [[363, "default-uint-dtype"]], "dtype": [[364, "dtype"]], "ivy.Container.dtype": [[365, "ivy-container-dtype"]], "ivy.dtype": [[366, "ivy-dtype"]], "ivy.Container.static_dtype": [[367, "ivy-container-static-dtype"]], "dtype_bits": [[368, "dtype-bits"]], "finfo": [[369, "finfo"]], "ivy.Array.finfo": [[370, "ivy-array-finfo"]], "ivy.Container.finfo": [[371, "ivy-container-finfo"]], "ivy.finfo": [[372, "ivy-finfo"]], "ivy.Container.static_finfo": [[373, "ivy-container-static-finfo"]], "function_supported_dtypes": [[374, "function-supported-dtypes"]], "ivy.function_supported_dtypes": [[375, "ivy-function-supported-dtypes"]], "ivy.Container.static_function_supported_dtypes": [[376, "ivy-container-static-function-supported-dtypes"]], "function_unsupported_dtypes": [[377, "function-unsupported-dtypes"]], "ivy.function_unsupported_dtypes": [[378, "ivy-function-unsupported-dtypes"]], "ivy.Container.static_function_unsupported_dtypes": [[379, "ivy-container-static-function-unsupported-dtypes"]], "iinfo": [[380, "iinfo"]], "ivy.Array.iinfo": [[381, "ivy-array-iinfo"]], "ivy.Container.iinfo": [[382, "ivy-container-iinfo"]], "ivy.iinfo": [[383, "ivy-iinfo"]], "ivy.Container.static_iinfo": [[384, "ivy-container-static-iinfo"]], "infer_default_dtype": [[385, "infer-default-dtype"]], "invalid_dtype": [[386, "invalid-dtype"]], "is_bool_dtype": [[387, "is-bool-dtype"]], "ivy.Array.is_bool_dtype": [[388, "ivy-array-is-bool-dtype"]], "ivy.Container.is_bool_dtype": [[389, "ivy-container-is-bool-dtype"]], "ivy.is_bool_dtype": [[390, "ivy-is-bool-dtype"]], "ivy.Container.static_is_bool_dtype": [[391, "ivy-container-static-is-bool-dtype"]], "is_complex_dtype": [[392, "is-complex-dtype"]], "ivy.Container.is_complex_dtype": [[393, "ivy-container-is-complex-dtype"]], "ivy.is_complex_dtype": [[394, "ivy-is-complex-dtype"]], "ivy.Container.static_is_complex_dtype": [[395, "ivy-container-static-is-complex-dtype"]], "is_float_dtype": [[396, "is-float-dtype"]], "ivy.Array.is_float_dtype": [[397, "ivy-array-is-float-dtype"]], "ivy.Container.is_float_dtype": [[398, "ivy-container-is-float-dtype"]], "ivy.is_float_dtype": [[399, "ivy-is-float-dtype"]], "ivy.Container.static_is_float_dtype": [[400, "ivy-container-static-is-float-dtype"]], "is_int_dtype": [[401, "is-int-dtype"]], "ivy.Array.is_int_dtype": [[402, "ivy-array-is-int-dtype"]], "ivy.Container.is_int_dtype": [[403, "ivy-container-is-int-dtype"]], "ivy.is_int_dtype": [[404, "ivy-is-int-dtype"]], "ivy.Container.static_is_int_dtype": [[405, "ivy-container-static-is-int-dtype"]], "is_uint_dtype": [[406, "is-uint-dtype"]], "ivy.Array.is_uint_dtype": [[407, "ivy-array-is-uint-dtype"]], "ivy.Container.is_uint_dtype": [[408, "ivy-container-is-uint-dtype"]], "ivy.is_uint_dtype": [[409, "ivy-is-uint-dtype"]], "ivy.Container.static_is_uint_dtype": [[410, "ivy-container-static-is-uint-dtype"]], "promote_types": [[411, "promote-types"]], "promote_types_of_inputs": [[412, "promote-types-of-inputs"]], "result_type": [[413, "result-type"]], "ivy.Array.result_type": [[414, "ivy-array-result-type"]], "ivy.Container.result_type": [[415, "ivy-container-result-type"]], "ivy.result_type": [[416, "ivy-result-type"]], "ivy.Container.static_result_type": [[417, "ivy-container-static-result-type"]], "set_default_complex_dtype": [[418, "set-default-complex-dtype"]], "set_default_dtype": [[419, "set-default-dtype"]], "set_default_float_dtype": [[420, "set-default-float-dtype"]], "set_default_int_dtype": [[421, "set-default-int-dtype"]], "set_default_uint_dtype": [[422, "set-default-uint-dtype"]], "type_promote_arrays": [[423, "type-promote-arrays"]], "unset_default_complex_dtype": [[424, "unset-default-complex-dtype"]], "unset_default_dtype": [[425, "unset-default-dtype"]], "unset_default_float_dtype": [[426, "unset-default-float-dtype"]], "unset_default_int_dtype": [[427, "unset-default-int-dtype"]], "unset_default_uint_dtype": [[428, "unset-default-uint-dtype"]], "valid_dtype": [[429, "valid-dtype"]], "DefaultDevice": [[431, "defaultdevice"]], "Profiler": [[432, "profiler"]], "as_ivy_dev": [[433, "as-ivy-dev"]], "as_native_dev": [[434, "as-native-dev"]], "clear_mem_on_dev": [[435, "clear-mem-on-dev"]], "default_device": [[436, "default-device"]], "dev": [[437, "dev"]], "ivy.Array.dev": [[438, "ivy-array-dev"]], "ivy.Container.dev": [[439, "ivy-container-dev"]], "ivy.dev": [[440, "ivy-dev"]], "ivy.Container.static_dev": [[441, "ivy-container-static-dev"]], "dev_util": [[442, "dev-util"]], "function_supported_devices": [[443, "function-supported-devices"]], "function_unsupported_devices": [[444, "function-unsupported-devices"]], "get_all_ivy_arrays_on_dev": [[445, "get-all-ivy-arrays-on-dev"]], "gpu_is_available": [[446, "gpu-is-available"]], "num_cpu_cores": [[447, "num-cpu-cores"]], "num_gpus": [[448, "num-gpus"]], "num_ivy_arrays_on_dev": [[449, "num-ivy-arrays-on-dev"]], "percent_used_mem_on_dev": [[450, "percent-used-mem-on-dev"]], "print_all_ivy_arrays_on_dev": [[451, "print-all-ivy-arrays-on-dev"]], "set_default_device": [[452, "set-default-device"]], "set_split_factor": [[453, "set-split-factor"]], "split_factor": [[454, "split-factor"]], "split_func_call": [[455, "split-func-call"]], "to_device": [[456, "to-device"]], "ivy.Container.static_to_device": [[457, "ivy-container-static-to-device"]], "ivy.Array.to_device": [[458, "ivy-array-to-device"]], "ivy.Container.to_device": [[459, "ivy-container-to-device"]], "ivy.to_device": [[460, "ivy-to-device"]], "total_mem_on_dev": [[461, "total-mem-on-dev"]], "tpu_is_available": [[462, "tpu-is-available"]], "unset_default_device": [[463, "unset-default-device"]], "used_mem_on_dev": [[464, "used-mem-on-dev"]], "abs": [[466, "abs"]], "ivy.Array.abs": [[467, "ivy-array-abs"]], "ivy.Container.abs": [[468, "ivy-container-abs"]], "ivy.abs": [[469, "ivy-abs"]], "ivy.Container.static_abs": [[470, "ivy-container-static-abs"]], "acos": [[471, "acos"]], "ivy.Array.acos": [[472, "ivy-array-acos"]], "ivy.Container.acos": [[473, "ivy-container-acos"]], "ivy.acos": [[474, "ivy-acos"]], "ivy.Container.static_acos": [[475, "ivy-container-static-acos"]], "acosh": [[476, "acosh"]], "ivy.Array.acosh": [[477, "ivy-array-acosh"]], "ivy.Container.acosh": [[478, "ivy-container-acosh"]], "ivy.acosh": [[479, "ivy-acosh"]], "ivy.Container.static_acosh": [[480, "ivy-container-static-acosh"]], "add": [[481, "add"]], "ivy.Array.add": [[482, "ivy-array-add"]], "ivy.Container.add": [[483, "ivy-container-add"]], "ivy.Container.static_add": [[485, "ivy-container-static-add"]], "asin": [[486, "asin"]], "ivy.Array.asin": [[487, "ivy-array-asin"]], "ivy.Container.asin": [[488, "ivy-container-asin"]], "ivy.asin": [[489, "ivy-asin"]], "ivy.Container.static_asin": [[490, "ivy-container-static-asin"]], "asinh": [[491, "asinh"]], "ivy.Array.asinh": [[492, "ivy-array-asinh"]], "ivy.Container.asinh": [[493, "ivy-container-asinh"]], "ivy.asinh": [[494, "ivy-asinh"]], "ivy.Container.static_asinh": [[495, "ivy-container-static-asinh"]], "atan": [[496, "atan"]], "ivy.Array.atan": [[497, "ivy-array-atan"]], "ivy.Container.atan": [[498, "ivy-container-atan"]], "ivy.atan": [[499, "ivy-atan"]], "ivy.Container.static_atan": [[500, "ivy-container-static-atan"]], "atan2": [[501, "atan2"]], "ivy.Array.atan2": [[502, "ivy-array-atan2"]], "ivy.Container.atan2": [[503, "ivy-container-atan2"]], "ivy.atan2": [[504, "ivy-atan2"]], "ivy.Container.static_atan2": [[505, "ivy-container-static-atan2"]], "atanh": [[506, "atanh"]], "ivy.Array.atanh": [[507, "ivy-array-atanh"]], "ivy.Container.atanh": [[508, "ivy-container-atanh"]], "ivy.atanh": [[509, "ivy-atanh"]], "ivy.Container.static_atanh": [[510, "ivy-container-static-atanh"]], "bitwise_and": [[511, "bitwise-and"]], "ivy.Array.bitwise_and": [[512, "ivy-array-bitwise-and"]], "ivy.Container.bitwise_and": [[513, "ivy-container-bitwise-and"]], "ivy.bitwise_and": [[514, "ivy-bitwise-and"]], "ivy.Container.static_bitwise_and": [[515, "ivy-container-static-bitwise-and"]], "bitwise_invert": [[516, "bitwise-invert"]], "ivy.Array.bitwise_invert": [[517, "ivy-array-bitwise-invert"]], "ivy.Container.bitwise_invert": [[518, "ivy-container-bitwise-invert"]], "ivy.bitwise_invert": [[519, "ivy-bitwise-invert"]], "ivy.Container.static_bitwise_invert": [[520, "ivy-container-static-bitwise-invert"]], "bitwise_left_shift": [[521, "bitwise-left-shift"]], "ivy.Array.bitwise_left_shift": [[522, "ivy-array-bitwise-left-shift"]], "ivy.Container.bitwise_left_shift": [[523, "ivy-container-bitwise-left-shift"]], "ivy.bitwise_left_shift": [[524, "ivy-bitwise-left-shift"]], "ivy.Container.static_bitwise_left_shift": [[525, "ivy-container-static-bitwise-left-shift"]], "bitwise_or": [[526, "bitwise-or"]], "ivy.Array.bitwise_or": [[527, "ivy-array-bitwise-or"]], "ivy.Container.bitwise_or": [[528, "ivy-container-bitwise-or"]], "ivy.bitwise_or": [[529, "ivy-bitwise-or"]], "ivy.Container.static_bitwise_or": [[530, "ivy-container-static-bitwise-or"]], "bitwise_right_shift": [[531, "bitwise-right-shift"]], "ivy.Array.bitwise_right_shift": [[532, "ivy-array-bitwise-right-shift"]], "ivy.Container.bitwise_right_shift": [[533, "ivy-container-bitwise-right-shift"]], "ivy.bitwise_right_shift": [[534, "ivy-bitwise-right-shift"]], "ivy.Container.static_bitwise_right_shift": [[535, "ivy-container-static-bitwise-right-shift"]], "bitwise_xor": [[536, "bitwise-xor"]], "ivy.Array.bitwise_xor": [[537, "ivy-array-bitwise-xor"]], "ivy.Container.bitwise_xor": [[538, "ivy-container-bitwise-xor"]], "ivy.bitwise_xor": [[539, "ivy-bitwise-xor"]], "ivy.Container.static_bitwise_xor": [[540, "ivy-container-static-bitwise-xor"]], "ceil": [[541, "ceil"]], "ivy.Array.ceil": [[542, "ivy-array-ceil"]], "ivy.Container.ceil": [[543, "ivy-container-ceil"]], "ivy.ceil": [[544, "ivy-ceil"]], "ivy.Container.static_ceil": [[545, "ivy-container-static-ceil"]], "cos": [[546, "cos"]], "ivy.Array.cos": [[547, "ivy-array-cos"]], "ivy.Container.cos": [[548, "ivy-container-cos"]], "ivy.cos": [[549, "ivy-cos"]], "ivy.Container.static_cos": [[550, "ivy-container-static-cos"]], "cosh": [[551, "cosh"]], "ivy.Array.cosh": [[552, "ivy-array-cosh"]], "ivy.Container.cosh": [[553, "ivy-container-cosh"]], "ivy.cosh": [[554, "ivy-cosh"]], "ivy.Container.static_cosh": [[555, "ivy-container-static-cosh"]], "deg2rad": [[556, "deg2rad"]], "ivy.Array.deg2rad": [[557, "ivy-array-deg2rad"]], "ivy.Container.deg2rad": [[558, "ivy-container-deg2rad"]], "ivy.deg2rad": [[559, "ivy-deg2rad"]], "ivy.Container.static_deg2rad": [[560, "ivy-container-static-deg2rad"]], "divide": [[561, "divide"]], "ivy.Array.divide": [[562, "ivy-array-divide"]], "ivy.Container.divide": [[563, "ivy-container-divide"]], "ivy.divide": [[564, "ivy-divide"]], "ivy.Container.static_divide": [[565, "ivy-container-static-divide"]], "equal": [[566, "equal"]], "ivy.Array.equal": [[567, "ivy-array-equal"]], "ivy.Container.equal": [[568, "ivy-container-equal"]], "ivy.equal": [[569, "ivy-equal"]], "ivy.Container.static_equal": [[570, "ivy-container-static-equal"]], "erf": [[571, "erf"]], "ivy.Array.erf": [[572, "ivy-array-erf"]], "ivy.Container.erf": [[573, "ivy-container-erf"]], "ivy.erf": [[574, "ivy-erf"]], "ivy.Container.static_erf": [[575, "ivy-container-static-erf"]], "exp": [[576, "exp"]], "ivy.Array.exp": [[577, "ivy-array-exp"]], "ivy.Container.exp": [[578, "ivy-container-exp"]], "ivy.exp": [[579, "ivy-exp"]], "ivy.Container.static_exp": [[580, "ivy-container-static-exp"]], "expm1": [[581, "expm1"]], "ivy.Array.expm1": [[582, "ivy-array-expm1"]], "ivy.Container.expm1": [[583, "ivy-container-expm1"]], "ivy.expm1": [[584, "ivy-expm1"]], "ivy.Container.static_expm1": [[585, "ivy-container-static-expm1"]], "floor": [[586, "floor"]], "ivy.Array.floor": [[587, "ivy-array-floor"]], "ivy.Container.floor": [[588, "ivy-container-floor"]], "ivy.floor": [[589, "ivy-floor"]], "ivy.Container.static_floor": [[590, "ivy-container-static-floor"]], "floor_divide": [[591, "floor-divide"]], "ivy.Array.floor_divide": [[592, "ivy-array-floor-divide"]], "ivy.Container.floor_divide": [[593, "ivy-container-floor-divide"]], "ivy.floor_divide": [[594, "ivy-floor-divide"]], "ivy.Container.static_floor_divide": [[595, "ivy-container-static-floor-divide"]], "greater": [[596, "greater"]], "ivy.Array.greater": [[597, "ivy-array-greater"]], "ivy.Container.greater": [[598, "ivy-container-greater"]], "ivy.greater": [[599, "ivy-greater"]], "ivy.Container.static_greater": [[600, "ivy-container-static-greater"]], "greater_equal": [[601, "greater-equal"]], "ivy.Array.greater_equal": [[602, "ivy-array-greater-equal"]], "ivy.Container.greater_equal": [[603, "ivy-container-greater-equal"]], "ivy.greater_equal": [[604, "ivy-greater-equal"]], "ivy.Container.static_greater_equal": [[605, "ivy-container-static-greater-equal"]], "isfinite": [[606, "isfinite"]], "ivy.Array.isfinite": [[607, "ivy-array-isfinite"]], "ivy.Container.isfinite": [[608, "ivy-container-isfinite"]], "ivy.isfinite": [[609, "ivy-isfinite"]], "ivy.Container.static_isfinite": [[610, "ivy-container-static-isfinite"]], "isinf": [[611, "isinf"]], "ivy.Array.isinf": [[612, "ivy-array-isinf"]], "ivy.Container.isinf": [[613, "ivy-container-isinf"]], "ivy.isinf": [[614, "ivy-isinf"]], "ivy.Container.static_isinf": [[615, "ivy-container-static-isinf"]], "isnan": [[616, "isnan"]], "ivy.Array.isnan": [[617, "ivy-array-isnan"]], "ivy.Container.isnan": [[618, "ivy-container-isnan"]], "ivy.isnan": [[619, "ivy-isnan"]], "ivy.Container.static_isnan": [[620, "ivy-container-static-isnan"]], "isreal": [[621, "isreal"]], "ivy.Array.isreal": [[622, "ivy-array-isreal"]], "ivy.Container.isreal": [[623, "ivy-container-isreal"]], "ivy.isreal": [[624, "ivy-isreal"]], "ivy.Container.static_isreal": [[625, "ivy-container-static-isreal"]], "less": [[626, "less"]], "ivy.Array.less": [[627, "ivy-array-less"]], "ivy.Container.less": [[628, "ivy-container-less"]], "ivy.less": [[629, "ivy-less"]], "ivy.Container.static_less": [[630, "ivy-container-static-less"]], "less_equal": [[631, "less-equal"]], "ivy.Array.less_equal": [[632, "ivy-array-less-equal"]], "ivy.Container.less_equal": [[633, "ivy-container-less-equal"]], "ivy.less_equal": [[634, "ivy-less-equal"]], "ivy.Container.static_less_equal": [[635, "ivy-container-static-less-equal"]], "log": [[636, "log"]], "ivy.Array.log": [[637, "ivy-array-log"]], "ivy.Container.log": [[638, "ivy-container-log"]], "ivy.log": [[639, "ivy-log"]], "ivy.Container.static_log": [[640, "ivy-container-static-log"]], "log10": [[641, "log10"]], "ivy.Array.log10": [[642, "ivy-array-log10"]], "ivy.Container.log10": [[643, "ivy-container-log10"]], "ivy.log10": [[644, "ivy-log10"]], "ivy.Container.static_log10": [[645, "ivy-container-static-log10"]], "log1p": [[646, "log1p"]], "ivy.Array.log1p": [[647, "ivy-array-log1p"]], "ivy.Container.log1p": [[648, "ivy-container-log1p"]], "ivy.log1p": [[649, "ivy-log1p"]], "ivy.Container.static_log1p": [[650, "ivy-container-static-log1p"]], "log2": [[651, "log2"]], "ivy.Array.log2": [[652, "ivy-array-log2"]], "ivy.Container.log2": [[653, "ivy-container-log2"]], "ivy.log2": [[654, "ivy-log2"]], "ivy.Container.static_log2": [[655, "ivy-container-static-log2"]], "logaddexp": [[656, "logaddexp"]], "ivy.Array.logaddexp": [[657, "ivy-array-logaddexp"]], "ivy.Container.logaddexp": [[658, "ivy-container-logaddexp"]], "ivy.logaddexp": [[659, "ivy-logaddexp"]], "ivy.Container.static_logaddexp": [[660, "ivy-container-static-logaddexp"]], "logical_and": [[661, "logical-and"]], "ivy.Array.logical_and": [[662, "ivy-array-logical-and"]], "ivy.Container.logical_and": [[663, "ivy-container-logical-and"]], "ivy.logical_and": [[664, "ivy-logical-and"]], "ivy.Container.static_logical_and": [[665, "ivy-container-static-logical-and"]], "logical_not": [[666, "logical-not"]], "ivy.Array.logical_not": [[667, "ivy-array-logical-not"]], "ivy.Container.logical_not": [[668, "ivy-container-logical-not"]], "ivy.logical_not": [[669, "ivy-logical-not"]], "ivy.Container.static_logical_not": [[670, "ivy-container-static-logical-not"]], "logical_or": [[671, "logical-or"]], "ivy.Array.logical_or": [[672, "ivy-array-logical-or"]], "ivy.Container.logical_or": [[673, "ivy-container-logical-or"]], "ivy.logical_or": [[674, "ivy-logical-or"]], "ivy.Container.static_logical_or": [[675, "ivy-container-static-logical-or"]], "logical_xor": [[676, "logical-xor"]], "ivy.Array.logical_xor": [[677, "ivy-array-logical-xor"]], "ivy.Container.logical_xor": [[678, "ivy-container-logical-xor"]], "ivy.logical_xor": [[679, "ivy-logical-xor"]], "ivy.Container.static_logical_xor": [[680, "ivy-container-static-logical-xor"]], "maximum": [[681, "maximum"]], "ivy.Array.maximum": [[682, "ivy-array-maximum"]], "ivy.Container.maximum": [[683, "ivy-container-maximum"]], "ivy.maximum": [[684, "ivy-maximum"]], "ivy.Container.static_maximum": [[685, "ivy-container-static-maximum"]], "minimum": [[686, "minimum"]], "ivy.Array.minimum": [[687, "ivy-array-minimum"]], "ivy.Container.minimum": [[688, "ivy-container-minimum"]], "ivy.minimum": [[689, "ivy-minimum"]], "ivy.Container.static_minimum": [[690, "ivy-container-static-minimum"]], "multiply": [[691, "multiply"]], "ivy.Array.multiply": [[692, "ivy-array-multiply"]], "ivy.Container.multiply": [[693, "ivy-container-multiply"]], "ivy.multiply": [[694, "ivy-multiply"]], "ivy.Container.static_multiply": [[695, "ivy-container-static-multiply"]], "negative": [[696, "negative"]], "ivy.Array.negative": [[697, "ivy-array-negative"]], "ivy.Container.negative": [[698, "ivy-container-negative"]], "ivy.negative": [[699, "ivy-negative"]], "ivy.Container.static_negative": [[700, "ivy-container-static-negative"]], "not_equal": [[701, "not-equal"]], "ivy.Array.not_equal": [[702, "ivy-array-not-equal"]], "ivy.Container.not_equal": [[703, "ivy-container-not-equal"]], "ivy.not_equal": [[704, "ivy-not-equal"]], "ivy.Container.static_not_equal": [[705, "ivy-container-static-not-equal"]], "positive": [[706, "positive"]], "ivy.Array.positive": [[707, "ivy-array-positive"]], "ivy.Container.positive": [[708, "ivy-container-positive"]], "ivy.positive": [[709, "ivy-positive"]], "ivy.Container.static_positive": [[710, "ivy-container-static-positive"]], "pow": [[711, "pow"]], "ivy.Array.pow": [[712, "ivy-array-pow"]], "ivy.Container.pow": [[713, "ivy-container-pow"]], "ivy.pow": [[714, "ivy-pow"]], "ivy.Container.static_pow": [[715, "ivy-container-static-pow"]], "rad2deg": [[716, "rad2deg"]], "ivy.Array.rad2deg": [[717, "ivy-array-rad2deg"]], "ivy.Container.rad2deg": [[718, "ivy-container-rad2deg"]], "ivy.rad2deg": [[719, "ivy-rad2deg"]], "ivy.Container.static_rad2deg": [[720, "ivy-container-static-rad2deg"]], "reciprocal": [[721, "reciprocal"]], "ivy.Array.reciprocal": [[722, "ivy-array-reciprocal"]], "ivy.Container.reciprocal": [[723, "ivy-container-reciprocal"]], "ivy.reciprocal": [[724, "ivy-reciprocal"]], "ivy.Container.static_reciprocal": [[725, "ivy-container-static-reciprocal"]], "remainder": [[726, "remainder"]], "ivy.Array.remainder": [[727, "ivy-array-remainder"]], "ivy.Container.remainder": [[728, "ivy-container-remainder"]], "ivy.remainder": [[729, "ivy-remainder"]], "ivy.Container.static_remainder": [[730, "ivy-container-static-remainder"]], "round": [[731, "round"]], "ivy.Array.round": [[732, "ivy-array-round"]], "ivy.Container.round": [[733, "ivy-container-round"]], "ivy.round": [[734, "ivy-round"]], "ivy.Container.static_round": [[735, "ivy-container-static-round"]], "sign": [[736, "sign"]], "ivy.Array.sign": [[737, "ivy-array-sign"]], "ivy.Container.sign": [[738, "ivy-container-sign"]], "ivy.sign": [[739, "ivy-sign"]], "ivy.Container.static_sign": [[740, "ivy-container-static-sign"]], "sin": [[741, "sin"]], "ivy.Array.sin": [[742, "ivy-array-sin"]], "ivy.Container.sin": [[743, "ivy-container-sin"]], "ivy.sin": [[744, "ivy-sin"]], "ivy.Container.static_sin": [[745, "ivy-container-static-sin"]], "sinh": [[746, "sinh"]], "ivy.Array.sinh": [[747, "ivy-array-sinh"]], "ivy.Container.sinh": [[748, "ivy-container-sinh"]], "ivy.sinh": [[749, "ivy-sinh"]], "ivy.Container.static_sinh": [[750, "ivy-container-static-sinh"]], "sqrt": [[751, "sqrt"]], "ivy.Array.sqrt": [[752, "ivy-array-sqrt"]], "ivy.Container.sqrt": [[753, "ivy-container-sqrt"]], "ivy.sqrt": [[754, "ivy-sqrt"]], "ivy.Container.static_sqrt": [[755, "ivy-container-static-sqrt"]], "square": [[756, "square"]], "ivy.Array.square": [[757, "ivy-array-square"]], "ivy.Container.square": [[758, "ivy-container-square"]], "ivy.square": [[759, "ivy-square"]], "ivy.Container.static_square": [[760, "ivy-container-static-square"]], "subtract": [[761, "subtract"]], "ivy.Container.static_subtract": [[762, "ivy-container-static-subtract"]], "ivy.Array.subtract": [[763, "ivy-array-subtract"]], "ivy.Container.subtract": [[764, "ivy-container-subtract"]], "ivy.subtract": [[765, "ivy-subtract"]], "tan": [[766, "tan"]], "ivy.Container.static_tan": [[767, "ivy-container-static-tan"]], "ivy.Array.tan": [[768, "ivy-array-tan"]], "ivy.Container.tan": [[769, "ivy-container-tan"]], "tanh": [[771, "tanh"]], "ivy.Container.static_tanh": [[772, "ivy-container-static-tanh"]], "ivy.Array.tanh": [[773, "ivy-array-tanh"]], "ivy.Container.tanh": [[774, "ivy-container-tanh"]], "ivy.tanh": [[775, "ivy-tanh"]], "trunc": [[776, "trunc"]], "ivy.Container.static_trunc": [[777, "ivy-container-static-trunc"]], "ivy.Array.trunc": [[778, "ivy-array-trunc"]], "ivy.Container.trunc": [[779, "ivy-container-trunc"]], "ivy.trunc": [[780, "ivy-trunc"]], "trunc_divide": [[781, "trunc-divide"]], "ivy.Container.static_trunc_divide": [[782, "ivy-container-static-trunc-divide"]], "ivy.Array.trunc_divide": [[783, "ivy-array-trunc-divide"]], "ivy.Container.trunc_divide": [[784, "ivy-container-trunc-divide"]], "ivy.trunc_divide": [[785, "ivy-trunc-divide"]], "NativeSparseArray": [[787, "nativesparsearray"], [1337, "nativesparsearray"]], "SparseArray": [[788, "sparsearray"], [1338, "sparsearray"]], "logit": [[790, "logit"], [1176, "logit"]], "prelu": [[791, "prelu"], [1295, "prelu"]], "thresholded_relu": [[792, "thresholded-relu"], [1355, "thresholded-relu"]], "adjoint": [[793, "adjoint"], [1165, "adjoint"]], "ivy.Array.adjoint": [[794, "ivy-array-adjoint"]], "ivy.Container.adjoint": [[795, "ivy-container-adjoint"]], "ivy.adjoint": [[796, "ivy-adjoint"]], "ivy.Container.static_adjoint": [[797, "ivy-container-static-adjoint"]], "allclose": [[798, "allclose"], [939, "allclose"]], "ivy.Array.allclose": [[799, "ivy-array-allclose"]], "ivy.Container.allclose": [[800, "ivy-container-allclose"]], "ivy.allclose": [[801, "ivy-allclose"]], "ivy.Container.static_allclose": [[802, "ivy-container-static-allclose"]], "angle": [[803, "angle"], [940, "angle"]], "ivy.Array.angle": [[804, "ivy-array-angle"]], "ivy.Container.angle": [[805, "ivy-container-angle"]], "ivy.angle": [[806, "ivy-angle"]], "ivy.Container.static_angle": [[807, "ivy-container-static-angle"]], "atleast_1d": [[808, "atleast-1d"], [1189, "atleast-1d"]], "ivy.Array.atleast_1d": [[809, "ivy-array-atleast-1d"]], "ivy.Container.atleast_1d": [[810, "ivy-container-atleast-1d"]], "ivy.atleast_1d": [[811, "ivy-atleast-1d"]], "ivy.Container.static_atleast_1d": [[812, "ivy-container-static-atleast-1d"]], "atleast_2d": [[813, "atleast-2d"], [1190, "atleast-2d"]], "ivy.Array.atleast_2d": [[814, "ivy-array-atleast-2d"]], "ivy.Container.atleast_2d": [[815, "ivy-container-atleast-2d"]], "ivy.atleast_2d": [[816, "ivy-atleast-2d"]], "ivy.Container.static_atleast_2d": [[817, "ivy-container-static-atleast-2d"]], "atleast_3d": [[818, "atleast-3d"], [1191, "atleast-3d"]], "ivy.Array.atleast_3d": [[819, "ivy-array-atleast-3d"]], "ivy.Container.atleast_3d": [[820, "ivy-container-atleast-3d"]], "ivy.atleast_3d": [[821, "ivy-atleast-3d"]], "ivy.Container.static_atleast_3d": [[822, "ivy-container-static-atleast-3d"]], "avg_pool1d": [[823, "avg-pool1d"], [1135, "avg-pool1d"]], "ivy.Array.avg_pool1d": [[824, "ivy-array-avg-pool1d"]], "ivy.Container.avg_pool1d": [[825, "ivy-container-avg-pool1d"]], "ivy.avg_pool1d": [[826, "ivy-avg-pool1d"]], "ivy.Container.static_avg_pool1d": [[827, "ivy-container-static-avg-pool1d"]], "avg_pool2d": [[828, "avg-pool2d"], [1136, "avg-pool2d"]], "ivy.Array.avg_pool2d": [[829, "ivy-array-avg-pool2d"]], "ivy.Container.avg_pool2d": [[830, "ivy-container-avg-pool2d"]], "ivy.avg_pool2d": [[831, "ivy-avg-pool2d"]], "ivy.Container.static_avg_pool2d": [[832, "ivy-container-static-avg-pool2d"]], "avg_pool3d": [[833, "avg-pool3d"], [1137, "avg-pool3d"]], "ivy.Array.avg_pool3d": [[834, "ivy-array-avg-pool3d"]], "ivy.Container.avg_pool3d": [[835, "ivy-container-avg-pool3d"]], "ivy.avg_pool3d": [[836, "ivy-avg-pool3d"]], "ivy.Container.static_avg_pool3d": [[837, "ivy-container-static-avg-pool3d"]], "bernoulli": [[838, "bernoulli"], [1306, "bernoulli"]], "ivy.Array.bernoulli": [[839, "ivy-array-bernoulli"]], "ivy.Container.bernoulli": [[840, "ivy-container-bernoulli"]], "ivy.bernoulli": [[841, "ivy-bernoulli"]], "ivy.Container.static_bernoulli": [[842, "ivy-container-static-bernoulli"]], "beta": [[843, "beta"], [1307, "beta"]], "ivy.Array.beta": [[844, "ivy-array-beta"]], "ivy.Container.beta": [[845, "ivy-container-beta"]], "ivy.beta": [[846, "ivy-beta"]], "ivy.Container.static_beta": [[847, "ivy-container-static-beta"]], "bicubic": [[848, "bicubic"], [1138, "bicubic"]], "binarizer": [[849, "binarizer"], [941, "binarizer"]], "ivy.Array.binarizer": [[850, "ivy-array-binarizer"]], "ivy.Container.binarizer": [[851, "ivy-container-binarizer"]], "ivy.binarizer": [[852, "ivy-binarizer"]], "ivy.Container.static_binarizer": [[853, "ivy-container-static-binarizer"]], "binary_cross_entropy_with_logits": [[854, "binary-cross-entropy-with-logits"], [1182, "binary-cross-entropy-with-logits"]], "ivy.Container.binary_cross_entropy_with_logits": [[855, "ivy-container-binary-cross-entropy-with-logits"]], "ivy.binary_cross_entropy_with_logits": [[856, "ivy-binary-cross-entropy-with-logits"]], "ivy.Container.static_binary_cross_entropy_with_logits": [[857, "ivy-container-static-binary-cross-entropy-with-logits"]], "bind_custom_gradient_function": [[858, "bind-custom-gradient-function"], [1048, "bind-custom-gradient-function"]], "broadcast_shapes": [[859, "broadcast-shapes"], [1192, "broadcast-shapes"], [2234, "broadcast-shapes"]], "ivy.Container.broadcast_shapes": [[860, "ivy-container-broadcast-shapes"]], "ivy.broadcast_shapes": [[861, "ivy-broadcast-shapes"]], "ivy.Container.static_broadcast_shapes": [[862, "ivy-container-static-broadcast-shapes"]], "Compilation": [[863, "module-ivy.functional.ivy.experimental.compilation"]], "copysign": [[865, "copysign"], [942, "copysign"]], "ivy.Array.copysign": [[866, "ivy-array-copysign"]], "ivy.Container.copysign": [[867, "ivy-container-copysign"]], "ivy.copysign": [[868, "ivy-copysign"]], "ivy.Container.static_copysign": [[869, "ivy-container-static-copysign"]], "corrcoef": [[870, "corrcoef"], [1344, "corrcoef"]], "ivy.Array.corrcoef": [[871, "ivy-array-corrcoef"]], "ivy.Container.corrcoef": [[872, "ivy-container-corrcoef"]], "ivy.corrcoef": [[873, "ivy-corrcoef"]], "ivy.Container.static_corrcoef": [[874, "ivy-container-static-corrcoef"]], "count_nonzero": [[875, "count-nonzero"], [943, "count-nonzero"]], "ivy.Array.count_nonzero": [[876, "ivy-array-count-nonzero"]], "ivy.Container.count_nonzero": [[877, "ivy-container-count-nonzero"]], "ivy.count_nonzero": [[878, "ivy-count-nonzero"]], "ivy.Container.static_count_nonzero": [[879, "ivy-container-static-count-nonzero"]], "eye_like": [[881, "eye-like"], [982, "eye-like"]], "hamming_window": [[882, "hamming-window"], [1049, "hamming-window"]], "hann_window": [[883, "hann-window"], [1053, "hann-window"]], "kaiser_bessel_derived_window": [[884, "kaiser-bessel-derived-window"], [1116, "kaiser-bessel-derived-window"]], "kaiser_window": [[885, "kaiser-window"], [1120, "kaiser-window"]], "tril_indices": [[886, "tril-indices"], [1368, "tril-indices"]], "triu_indices": [[887, "triu-indices"], [1372, "triu-indices"]], "vorbis_window": [[888, "vorbis-window"], [1382, "vorbis-window"]], "cubic": [[889, "cubic"], [1139, "cubic"]], "is_native_dtype": [[891, "is-native-dtype"], [1104, "is-native-dtype"]], "dct": [[892, "dct"], [1140, "dct"]], "ivy.Array.dct": [[893, "ivy-array-dct"]], "ivy.Container.dct": [[894, "ivy-container-dct"]], "ivy.dct": [[895, "ivy-dct"]], "ivy.Container.static_dct": [[896, "ivy-container-static-dct"]], "dft": [[898, "dft"], [1141, "dft"]], "ivy.Container.dft": [[899, "ivy-container-dft"]], "ivy.dft": [[900, "ivy-dft"]], "ivy.Container.static_dft": [[901, "ivy-container-static-dft"]], "diagflat": [[902, "diagflat"], [1166, "diagflat"]], "ivy.Array.diagflat": [[903, "ivy-array-diagflat"]], "ivy.Container.diagflat": [[904, "ivy-container-diagflat"]], "ivy.diagflat": [[905, "ivy-diagflat"]], "ivy.Container.static_diagflat": [[906, "ivy-container-static-diagflat"]], "diff": [[907, "diff"], [944, "diff"]], "ivy.Array.diff": [[908, "ivy-array-diff"]], "ivy.Container.diff": [[909, "ivy-container-diff"]], "ivy.diff": [[910, "ivy-diff"]], "ivy.Container.static_diff": [[911, "ivy-container-static-diff"]], "dirichlet": [[912, "dirichlet"], [1308, "dirichlet"]], "ivy.Array.dirichlet": [[913, "ivy-array-dirichlet"]], "ivy.Container.dirichlet": [[914, "ivy-container-dirichlet"]], "ivy.dirichlet": [[915, "ivy-dirichlet"]], "ivy.Container.static_dirichlet": [[916, "ivy-container-static-dirichlet"]], "dropout1d": [[917, "dropout1d"], [1142, "dropout1d"]], "dsplit": [[918, "dsplit"], [1193, "dsplit"]], "ivy.Array.dsplit": [[919, "ivy-array-dsplit"]], "ivy.Container.dsplit": [[920, "ivy-container-dsplit"]], "ivy.dsplit": [[921, "ivy-dsplit"]], "ivy.Container.static_dsplit": [[922, "ivy-container-static-dsplit"]], "dstack": [[923, "dstack"], [1194, "dstack"]], "ivy.Array.dstack": [[924, "ivy-array-dstack"]], "ivy.Container.dstack": [[925, "ivy-container-dstack"]], "ivy.dstack": [[926, "ivy-dstack"]], "ivy.Container.static_dstack": [[927, "ivy-container-static-dstack"]], "eig": [[928, "eig"], [1167, "eig"], [1730, "eig"]], "ivy.Array.eig": [[929, "ivy-array-eig"]], "ivy.Container.eig": [[930, "ivy-container-eig"]], "ivy.eig": [[931, "ivy-eig"]], "ivy.Container.static_eig": [[932, "ivy-container-static-eig"]], "eigvals": [[933, "eigvals"], [1168, "eigvals"]], "ivy.Array.eigvals": [[934, "ivy-array-eigvals"]], "ivy.Container.eigvals": [[935, "ivy-container-eigvals"]], "ivy.eigvals": [[936, "ivy-eigvals"]], "ivy.Container.static_eigvals": [[937, "ivy-container-static-eigvals"]], "exp2": [[945, "exp2"], [972, "exp2"]], "fix": [[946, "fix"], [992, "fix"]], "float_power": [[947, "float-power"], [1012, "float-power"]], "fmax": [[948, "fmax"], [1017, "fmax"]], "fmin": [[949, "fmin"], [1022, "fmin"]], "fmod": [[950, "fmod"], [1027, "fmod"]], "gcd": [[951, "gcd"], [1035, "gcd"]], "gradient": [[952, "gradient"], [1042, "gradient"]], "hypot": [[953, "hypot"], [1072, "hypot"]], "imag": [[954, "imag"], [1087, "imag"]], "isclose": [[955, "isclose"], [1106, "isclose"]], "lcm": [[956, "lcm"], [1154, "lcm"]], "logaddexp2": [[957, "logaddexp2"], [1171, "logaddexp2"]], "nan_to_num": [[958, "nan-to-num"], [1248, "nan-to-num"]], "nansum": [[959, "nansum"], [1263, "nansum"]], "nextafter": [[960, "nextafter"], [1273, "nextafter"]], "real": [[961, "real"], [1311, "real"]], "signbit": [[962, "signbit"], [1323, "signbit"]], "sinc": [[963, "sinc"], [1328, "sinc"]], "trapz": [[964, "trapz"], [1365, "trapz"]], "xlogy": [[965, "xlogy"], [1396, "xlogy"]], "zeta": [[966, "zeta"], [1401, "zeta"]], "embedding": [[967, "embedding"], [1143, "embedding"]], "ivy.Array.embedding": [[968, "ivy-array-embedding"]], "ivy.Container.embedding": [[969, "ivy-container-embedding"]], "ivy.embedding": [[970, "ivy-embedding"]], "ivy.Container.static_embedding": [[971, "ivy-container-static-embedding"]], "ivy.Array.exp2": [[973, "ivy-array-exp2"]], "ivy.Container.exp2": [[974, "ivy-container-exp2"]], "ivy.exp2": [[975, "ivy-exp2"]], "ivy.Container.static_exp2": [[976, "ivy-container-static-exp2"]], "expand": [[977, "expand"], [1195, "expand"]], "ivy.Array.expand": [[978, "ivy-array-expand"]], "ivy.Container.expand": [[979, "ivy-container-expand"]], "ivy.expand": [[980, "ivy-expand"]], "ivy.Container.static_expand": [[981, "ivy-container-static-expand"]], "ivy.Array.eye_like": [[983, "ivy-array-eye-like"]], "ivy.Container.eye_like": [[984, "ivy-container-eye-like"]], "ivy.eye_like": [[985, "ivy-eye-like"]], "ivy.Container.static_eye_like": [[986, "ivy-container-static-eye-like"]], "fft": [[987, "fft"], [1144, "fft"]], "ivy.Array.fft": [[988, "ivy-array-fft"]], "ivy.Container.fft": [[989, "ivy-container-fft"]], "ivy.fft": [[990, "ivy-fft"]], "ivy.Container.static_fft": [[991, "ivy-container-static-fft"]], "ivy.Array.fix": [[993, "ivy-array-fix"]], "ivy.Container.fix": [[994, "ivy-container-fix"]], "ivy.fix": [[995, "ivy-fix"]], "ivy.Container.static_fix": [[996, "ivy-container-static-fix"]], "flatten": [[997, "flatten"], [1196, "flatten"], [2202, "flatten"]], "ivy.Array.flatten": [[998, "ivy-array-flatten"]], "ivy.Container.flatten": [[999, "ivy-container-flatten"]], "ivy.flatten": [[1000, "ivy-flatten"]], "ivy.Container.static_flatten": [[1001, "ivy-container-static-flatten"]], "fliplr": [[1002, "fliplr"], [1197, "fliplr"]], "ivy.Array.fliplr": [[1003, "ivy-array-fliplr"]], "ivy.Container.fliplr": [[1004, "ivy-container-fliplr"]], "ivy.fliplr": [[1005, "ivy-fliplr"]], "ivy.Container.static_fliplr": [[1006, "ivy-container-static-fliplr"]], "flipud": [[1007, "flipud"], [1198, "flipud"]], "ivy.Array.flipud": [[1008, "ivy-array-flipud"]], "ivy.Container.flipud": [[1009, "ivy-container-flipud"]], "ivy.flipud": [[1010, "ivy-flipud"]], "ivy.Container.static_flipud": [[1011, "ivy-container-static-flipud"]], "ivy.Array.float_power": [[1013, "ivy-array-float-power"]], "ivy.Container.float_power": [[1014, "ivy-container-float-power"]], "ivy.float_power": [[1015, "ivy-float-power"]], "ivy.Container.static_float_power": [[1016, "ivy-container-static-float-power"]], "ivy.Array.fmax": [[1018, "ivy-array-fmax"]], "ivy.Container.fmax": [[1019, "ivy-container-fmax"]], "ivy.fmax": [[1020, "ivy-fmax"]], "ivy.Container.static_fmax": [[1021, "ivy-container-static-fmax"]], "ivy.Array.fmin": [[1023, "ivy-array-fmin"]], "ivy.Container.fmin": [[1024, "ivy-container-fmin"]], "ivy.fmin": [[1025, "ivy-fmin"]], "ivy.Container.static_fmin": [[1026, "ivy-container-static-fmin"]], "ivy.Array.fmod": [[1028, "ivy-array-fmod"]], "ivy.Container.fmod": [[1029, "ivy-container-fmod"]], "ivy.fmod": [[1030, "ivy-fmod"]], "ivy.Container.static_fmod": [[1031, "ivy-container-static-fmod"]], "gamma": [[1032, "gamma"], [1309, "gamma"]], "ivy.Array.gamma": [[1033, "ivy-array-gamma"]], "ivy.gamma": [[1034, "ivy-gamma"]], "ivy.Array.gcd": [[1036, "ivy-array-gcd"]], "ivy.Container.gcd": [[1037, "ivy-container-gcd"]], "ivy.gcd": [[1038, "ivy-gcd"]], "ivy.Container.static_gcd": [[1039, "ivy-container-static-gcd"]], "isin": [[1041, "isin"], [1111, "isin"]], "ivy.Array.gradient": [[1043, "ivy-array-gradient"]], "ivy.Container.gradient": [[1044, "ivy-container-gradient"]], "ivy.gradient": [[1045, "ivy-gradient"]], "ivy.Container.static_gradient": [[1046, "ivy-container-static-gradient"]], "ivy.Container.hamming_window": [[1050, "ivy-container-hamming-window"]], "ivy.hamming_window": [[1051, "ivy-hamming-window"]], "ivy.Container.static_hamming_window": [[1052, "ivy-container-static-hamming-window"]], "ivy.Container.hann_window": [[1054, "ivy-container-hann-window"]], "ivy.hann_window": [[1055, "ivy-hann-window"]], "ivy.Container.static_hann_window": [[1056, "ivy-container-static-hann-window"]], "heaviside": [[1057, "heaviside"], [1199, "heaviside"]], "ivy.Array.heaviside": [[1058, "ivy-array-heaviside"]], "ivy.Container.heaviside": [[1059, "ivy-container-heaviside"]], "ivy.heaviside": [[1060, "ivy-heaviside"]], "ivy.Container.static_heaviside": [[1061, "ivy-container-static-heaviside"]], "hsplit": [[1062, "hsplit"], [1200, "hsplit"]], "ivy.Array.hsplit": [[1063, "ivy-array-hsplit"]], "ivy.Container.hsplit": [[1064, "ivy-container-hsplit"]], "ivy.hsplit": [[1065, "ivy-hsplit"]], "ivy.Container.static_hsplit": [[1066, "ivy-container-static-hsplit"]], "hstack": [[1067, "hstack"], [1201, "hstack"]], "ivy.Array.hstack": [[1068, "ivy-array-hstack"]], "ivy.Container.hstack": [[1069, "ivy-container-hstack"]], "ivy.hstack": [[1070, "ivy-hstack"]], "ivy.Container.static_hstack": [[1071, "ivy-container-static-hstack"]], "ivy.Array.hypot": [[1073, "ivy-array-hypot"]], "ivy.Container.hypot": [[1074, "ivy-container-hypot"]], "ivy.hypot": [[1075, "ivy-hypot"]], "ivy.Container.static_hypot": [[1076, "ivy-container-static-hypot"]], "i0": [[1077, "i0"], [1202, "i0"]], "ivy.Array.i0": [[1078, "ivy-array-i0"]], "ivy.Container.i0": [[1079, "ivy-container-i0"]], "ivy.i0": [[1080, "ivy-i0"]], "ivy.Container.static_i0": [[1081, "ivy-container-static-i0"]], "ifft": [[1082, "ifft"], [1145, "ifft"]], "ivy.Array.ifft": [[1083, "ivy-array-ifft"]], "ivy.Container.ifft": [[1084, "ivy-container-ifft"]], "ivy.ifft": [[1085, "ivy-ifft"]], "ivy.Container.static_ifft": [[1086, "ivy-container-static-ifft"]], "ivy.Array.imag": [[1088, "ivy-array-imag"]], "ivy.Container.imag": [[1089, "ivy-container-imag"]], "ivy.imag": [[1090, "ivy-imag"]], "ivy.Container.static_imag": [[1091, "ivy-container-static-imag"]], "instance_norm": [[1092, "instance-norm"], [1279, "instance-norm"]], "ivy.Array.instance_norm": [[1093, "ivy-array-instance-norm"]], "ivy.Container.instance_norm": [[1094, "ivy-container-instance-norm"]], "ivy.instance_norm": [[1095, "ivy-instance-norm"]], "ivy.Container.static_instance_norm": [[1096, "ivy-container-static-instance-norm"]], "interp": [[1097, "interp"], [1146, "interp"]], "interpolate": [[1098, "interpolate"], [1147, "interpolate"]], "ivy.Array.interpolate": [[1099, "ivy-array-interpolate"]], "ivy.Container.interpolate": [[1100, "ivy-container-interpolate"]], "ivy.interpolate": [[1101, "ivy-interpolate"]], "ivy.Container.static_interpolate": [[1102, "ivy-container-static-interpolate"]], "is_ivy_sparse_array": [[1103, "is-ivy-sparse-array"], [1339, "is-ivy-sparse-array"]], "is_native_sparse_array": [[1105, "is-native-sparse-array"], [1340, "is-native-sparse-array"]], "ivy.Array.isclose": [[1107, "ivy-array-isclose"]], "ivy.Container.isclose": [[1108, "ivy-container-isclose"]], "ivy.isclose": [[1109, "ivy-isclose"]], "ivy.Container.static_isclose": [[1110, "ivy-container-static-isclose"]], "ivy.Array.isin": [[1112, "ivy-array-isin"]], "ivy.Container.isin": [[1113, "ivy-container-isin"]], "ivy.isin": [[1114, "ivy-isin"]], "ivy.Container.static_isin": [[1115, "ivy-container-static-isin"]], "ivy.Container.kaiser_bessel_derived_window": [[1117, "ivy-container-kaiser-bessel-derived-window"]], "ivy.kaiser_bessel_derived_window": [[1118, "ivy-kaiser-bessel-derived-window"]], "ivy.Container.static_kaiser_bessel_derived_window": [[1119, "ivy-container-static-kaiser-bessel-derived-window"]], "ivy.Container.kaiser_window": [[1121, "ivy-container-kaiser-window"]], "ivy.kaiser_window": [[1122, "ivy-kaiser-window"]], "ivy.Container.static_kaiser_window": [[1123, "ivy-container-static-kaiser-window"]], "kron": [[1124, "kron"], [1169, "kron"]], "ivy.Array.kron": [[1125, "ivy-array-kron"]], "ivy.Container.kron": [[1126, "ivy-container-kron"]], "ivy.kron": [[1127, "ivy-kron"]], "ivy.Container.static_kron": [[1128, "ivy-container-static-kron"]], "l2_normalize": [[1129, "l2-normalize"], [1280, "l2-normalize"]], "ivy.Array.l2_normalize": [[1130, "ivy-array-l2-normalize"]], "ivy.Container.l2_normalize": [[1131, "ivy-container-l2-normalize"]], "ivy.l2_normalize": [[1132, "ivy-l2-normalize"]], "ivy.Container.static_l2_normalize": [[1133, "ivy-container-static-l2-normalize"]], "max_pool1d": [[1148, "max-pool1d"], [1217, "max-pool1d"]], "max_pool2d": [[1149, "max-pool2d"], [1222, "max-pool2d"]], "max_pool3d": [[1150, "max-pool3d"], [1227, "max-pool3d"]], "paddedRow": [[1151, "paddedrow"], [1287, "paddedrow"]], "padding_ceil_mode": [[1152, "padding-ceil-mode"], [1288, "padding-ceil-mode"]], "polynomial_calclulation": [[1153, "polynomial-calclulation"], [1294, "polynomial-calclulation"]], "ivy.Array.lcm": [[1155, "ivy-array-lcm"]], "ivy.Container.lcm": [[1156, "ivy-container-lcm"]], "ivy.lcm": [[1157, "ivy-lcm"]], "ivy.Container.static_lcm": [[1158, "ivy-container-static-lcm"]], "lexsort": [[1159, "lexsort"], [1334, "lexsort"]], "ivy.Array.lexsort": [[1160, "ivy-array-lexsort"]], "ivy.Container.lexsort": [[1161, "ivy-container-lexsort"]], "ivy.lexsort": [[1162, "ivy-lexsort"]], "ivy.Container.static_lexsort": [[1163, "ivy-container-static-lexsort"]], "matrix_exp": [[1170, "matrix-exp"], [1212, "matrix-exp"]], "ivy.Array.logaddexp2": [[1172, "ivy-array-logaddexp2"]], "ivy.Container.logaddexp2": [[1173, "ivy-container-logaddexp2"]], "ivy.logaddexp2": [[1174, "ivy-logaddexp2"]], "ivy.Container.static_logaddexp2": [[1175, "ivy-container-static-logaddexp2"]], "ivy.Array.logit": [[1177, "ivy-array-logit"]], "ivy.Container.logit": [[1178, "ivy-container-logit"]], "ivy.logit": [[1179, "ivy-logit"]], "ivy.Container.static_logit": [[1180, "ivy-container-static-logit"]], "lp_normalize": [[1183, "lp-normalize"], [1281, "lp-normalize"]], "ivy.Array.lp_normalize": [[1184, "ivy-array-lp-normalize"]], "ivy.Container.lp_normalize": [[1185, "ivy-container-lp-normalize"]], "ivy.lp_normalize": [[1186, "ivy-lp-normalize"]], "ivy.Container.static_lp_normalize": [[1187, "ivy-container-static-lp-normalize"]], "moveaxis": [[1203, "moveaxis"], [1238, "moveaxis"]], "ndenumerate": [[1204, "ndenumerate"], [1270, "ndenumerate"]], "ndindex": [[1205, "ndindex"], [1271, "ndindex"]], "pad": [[1206, "pad"], [1282, "pad"]], "rot90": [[1207, "rot90"], [1316, "rot90"]], "take_along_axis": [[1208, "take-along-axis"], [1350, "take-along-axis"]], "top_k": [[1209, "top-k"], [1360, "top-k"]], "vsplit": [[1210, "vsplit"], [1386, "vsplit"]], "vstack": [[1211, "vstack"], [1391, "vstack"]], "ivy.Array.matrix_exp": [[1213, "ivy-array-matrix-exp"]], "ivy.Container.matrix_exp": [[1214, "ivy-container-matrix-exp"]], "ivy.matrix_exp": [[1215, "ivy-matrix-exp"]], "ivy.Container.static_matrix_exp": [[1216, "ivy-container-static-matrix-exp"]], "ivy.Array.max_pool1d": [[1218, "ivy-array-max-pool1d"]], "ivy.Container.max_pool1d": [[1219, "ivy-container-max-pool1d"]], "ivy.max_pool1d": [[1220, "ivy-max-pool1d"]], "ivy.Container.static_max_pool1d": [[1221, "ivy-container-static-max-pool1d"]], "ivy.Array.max_pool2d": [[1223, "ivy-array-max-pool2d"]], "ivy.Container.max_pool2d": [[1224, "ivy-container-max-pool2d"]], "ivy.max_pool2d": [[1225, "ivy-max-pool2d"]], "ivy.Container.static_max_pool2d": [[1226, "ivy-container-static-max-pool2d"]], "ivy.Array.max_pool3d": [[1228, "ivy-array-max-pool3d"]], "ivy.Container.max_pool3d": [[1229, "ivy-container-max-pool3d"]], "ivy.max_pool3d": [[1230, "ivy-max-pool3d"]], "ivy.Container.static_max_pool3d": [[1231, "ivy-container-static-max-pool3d"]], "median": [[1232, "median"], [1345, "median"]], "ivy.Array.median": [[1233, "ivy-array-median"]], "ivy.Container.median": [[1234, "ivy-container-median"]], "ivy.median": [[1235, "ivy-median"]], "ivy.Container.static_median": [[1236, "ivy-container-static-median"]], "Meta": [[1237, "module-ivy.functional.ivy.experimental.meta"], [1941, "module-ivy.functional.ivy.meta"]], "ivy.Array.moveaxis": [[1239, "ivy-array-moveaxis"]], "ivy.Container.moveaxis": [[1240, "ivy-container-moveaxis"]], "ivy.moveaxis": [[1241, "ivy-moveaxis"]], "ivy.Container.static_moveaxis": [[1242, "ivy-container-static-moveaxis"]], "msort": [[1243, "msort"], [1335, "msort"]], "ivy.Array.msort": [[1244, "ivy-array-msort"]], "ivy.Container.msort": [[1245, "ivy-container-msort"]], "ivy.msort": [[1246, "ivy-msort"]], "ivy.Container.static_msort": [[1247, "ivy-container-static-msort"]], "ivy.Array.nan_to_num": [[1249, "ivy-array-nan-to-num"]], "ivy.Container.nan_to_num": [[1250, "ivy-container-nan-to-num"]], "ivy.nan_to_num": [[1251, "ivy-nan-to-num"]], "ivy.Container.static_nan_to_num": [[1252, "ivy-container-static-nan-to-num"]], "nanmean": [[1253, "nanmean"], [1346, "nanmean"]], "ivy.Array.nanmean": [[1254, "ivy-array-nanmean"]], "ivy.Container.nanmean": [[1255, "ivy-container-nanmean"]], "ivy.nanmean": [[1256, "ivy-nanmean"]], "ivy.Container.static_nanmean": [[1257, "ivy-container-static-nanmean"]], "nanmedian": [[1258, "nanmedian"], [1347, "nanmedian"]], "ivy.Array.nanmedian": [[1259, "ivy-array-nanmedian"]], "ivy.Container.nanmedian": [[1260, "ivy-container-nanmedian"]], "ivy.nanmedian": [[1261, "ivy-nanmedian"]], "ivy.Container.static_nanmedian": [[1262, "ivy-container-static-nanmedian"]], "ivy.Array.nansum": [[1264, "ivy-array-nansum"]], "ivy.Container.nansum": [[1265, "ivy-container-nansum"]], "ivy.nansum": [[1266, "ivy-nansum"]], "ivy.Container.static_nansum": [[1267, "ivy-container-static-nansum"]], "native_sparse_array": [[1268, "native-sparse-array"], [1341, "native-sparse-array"]], "native_sparse_array_to_indices_values_and_shape": [[1269, "native-sparse-array-to-indices-values-and-shape"], [1342, "native-sparse-array-to-indices-values-and-shape"]], "Nest": [[1272, "module-ivy.functional.ivy.experimental.nest"], [1945, "module-ivy.functional.ivy.nest"]], "ivy.Array.nextafter": [[1274, "ivy-array-nextafter"]], "ivy.Container.nextafter": [[1275, "ivy-container-nextafter"]], "ivy.nextafter": [[1276, "ivy-nextafter"]], "ivy.Container.static_nextafter": [[1277, "ivy-container-static-nextafter"]], "ivy.Array.pad": [[1283, "ivy-array-pad"]], "ivy.Container.pad": [[1284, "ivy-container-pad"]], "ivy.pad": [[1285, "ivy-pad"]], "ivy.Container.static_pad": [[1286, "ivy-container-static-pad"]], "poisson": [[1289, "poisson"], [1310, "poisson"]], "ivy.Array.poisson": [[1290, "ivy-array-poisson"]], "ivy.Container.poisson": [[1291, "ivy-container-poisson"]], "ivy.poisson": [[1292, "ivy-poisson"]], "ivy.Container.static_poisson": [[1293, "ivy-container-static-poisson"]], "ivy.Array.prelu": [[1296, "ivy-array-prelu"]], "ivy.Container.prelu": [[1297, "ivy-container-prelu"]], "ivy.prelu": [[1298, "ivy-prelu"]], "ivy.Container.static_prelu": [[1299, "ivy-container-static-prelu"]], "quantile": [[1300, "quantile"], [1348, "quantile"]], "ivy.Array.quantile": [[1301, "ivy-array-quantile"]], "ivy.Container.quantile": [[1302, "ivy-container-quantile"]], "ivy.quantile": [[1303, "ivy-quantile"]], "ivy.Container.static_quantile": [[1304, "ivy-container-static-quantile"]], "ivy.Array.real": [[1312, "ivy-array-real"]], "ivy.Container.real": [[1313, "ivy-container-real"]], "ivy.real": [[1314, "ivy-real"]], "ivy.Container.static_real": [[1315, "ivy-container-static-real"]], "ivy.Array.rot90": [[1317, "ivy-array-rot90"]], "ivy.Container.rot90": [[1318, "ivy-container-rot90"]], "ivy.rot90": [[1319, "ivy-rot90"]], "ivy.Container.static_rot90": [[1320, "ivy-container-static-rot90"]], "ivy.Array.signbit": [[1324, "ivy-array-signbit"]], "ivy.Container.signbit": [[1325, "ivy-container-signbit"]], "ivy.signbit": [[1326, "ivy-signbit"]], "ivy.Container.static_signbit": [[1327, "ivy-container-static-signbit"]], "ivy.Array.sinc": [[1329, "ivy-array-sinc"]], "ivy.Container.sinc": [[1330, "ivy-container-sinc"]], "ivy.sinc": [[1331, "ivy-sinc"]], "ivy.Container.static_sinc": [[1332, "ivy-container-static-sinc"]], "Sparse array": [[1336, "module-ivy.functional.ivy.experimental.sparse_array"]], "unravel_index": [[1349, "unravel-index"], [1376, "unravel-index"]], "ivy.Container.static_take_along_axis": [[1351, "ivy-container-static-take-along-axis"]], "ivy.Array.take_along_axis": [[1352, "ivy-array-take-along-axis"]], "ivy.Container.take_along_axis": [[1353, "ivy-container-take-along-axis"]], "ivy.take_along_axis": [[1354, "ivy-take-along-axis"]], "ivy.Container.static_thresholded_relu": [[1356, "ivy-container-static-thresholded-relu"]], "ivy.Array.thresholded_relu": [[1357, "ivy-array-thresholded-relu"]], "ivy.Container.thresholded_relu": [[1358, "ivy-container-thresholded-relu"]], "ivy.thresholded_relu": [[1359, "ivy-thresholded-relu"]], "ivy.Container.static_top_k": [[1361, "ivy-container-static-top-k"]], "ivy.Array.top_k": [[1362, "ivy-array-top-k"]], "ivy.Container.top_k": [[1363, "ivy-container-top-k"]], "ivy.top_k": [[1364, "ivy-top-k"]], "ivy.Array.trapz": [[1366, "ivy-array-trapz"]], "ivy.trapz": [[1367, "ivy-trapz"]], "ivy.Container.static_tril_indices": [[1369, "ivy-container-static-tril-indices"]], "ivy.Container.tril_indices": [[1370, "ivy-container-tril-indices"]], "ivy.tril_indices": [[1371, "ivy-tril-indices"]], "ivy.Container.static_triu_indices": [[1373, "ivy-container-static-triu-indices"]], "ivy.Container.triu_indices": [[1374, "ivy-container-triu-indices"]], "ivy.triu_indices": [[1375, "ivy-triu-indices"]], "ivy.Container.static_unravel_index": [[1377, "ivy-container-static-unravel-index"]], "ivy.Array.unravel_index": [[1378, "ivy-array-unravel-index"]], "ivy.Container.unravel_index": [[1379, "ivy-container-unravel-index"]], "ivy.unravel_index": [[1380, "ivy-unravel-index"]], "ivy.Container.static_vorbis_window": [[1383, "ivy-container-static-vorbis-window"]], "ivy.Container.vorbis_window": [[1384, "ivy-container-vorbis-window"]], "ivy.vorbis_window": [[1385, "ivy-vorbis-window"]], "ivy.Container.static_vsplit": [[1387, "ivy-container-static-vsplit"]], "ivy.Array.vsplit": [[1388, "ivy-array-vsplit"]], "ivy.Container.vsplit": [[1389, "ivy-container-vsplit"]], "ivy.vsplit": [[1390, "ivy-vsplit"]], "ivy.Container.static_vstack": [[1392, "ivy-container-static-vstack"]], "ivy.Array.vstack": [[1393, "ivy-array-vstack"]], "ivy.Container.vstack": [[1394, "ivy-container-vstack"]], "ivy.vstack": [[1395, "ivy-vstack"]], "ivy.Container.static_xlogy": [[1397, "ivy-container-static-xlogy"]], "ivy.Array.xlogy": [[1398, "ivy-array-xlogy"]], "ivy.Container.xlogy": [[1399, "ivy-container-xlogy"]], "ivy.xlogy": [[1400, "ivy-xlogy"]], "ivy.Container.static_zeta": [[1402, "ivy-container-static-zeta"]], "ivy.Array.zeta": [[1403, "ivy-array-zeta"]], "ivy.Container.zeta": [[1404, "ivy-container-zeta"]], "ivy.zeta": [[1405, "ivy-zeta"]], "Parameter": [[1407, "parameter"], [1407, "id1"], [1407, "id2"], [1407, "id3"], [1407, "id4"], [1547, "parameter"], [1548, "parameter"], [1551, "parameter"], [1553, "parameter"], [1554, "parameter"]], "all_equal": [[1408, "all-equal"]], "ivy.Array.all_equal": [[1409, "ivy-array-all-equal"]], "ivy.Container.all_equal": [[1410, "ivy-container-all-equal"]], "ivy.all_equal": [[1411, "ivy-all-equal"]], "ivy.Container.static_all_equal": [[1412, "ivy-container-static-all-equal"]], "arg_info": [[1413, "arg-info"]], "arg_names": [[1414, "arg-names"]], "array_equal": [[1415, "array-equal"]], "ivy.Array.array_equal": [[1416, "ivy-array-array-equal"]], "ivy.Container.array_equal": [[1417, "ivy-container-array-equal"]], "ivy.array_equal": [[1418, "ivy-array-equal"]], "ivy.Container.static_array_equal": [[1419, "ivy-container-static-array-equal"]], "assert_supports_inplace": [[1420, "assert-supports-inplace"]], "ivy.Array.assert_supports_inplace": [[1421, "ivy-array-assert-supports-inplace"]], "ivy.Container.assert_supports_inplace": [[1422, "ivy-container-assert-supports-inplace"]], "ivy.assert_supports_inplace": [[1423, "ivy-assert-supports-inplace"]], "ivy.Container.static_assert_supports_inplace": [[1424, "ivy-container-static-assert-supports-inplace"]], "cache_fn": [[1425, "cache-fn"]], "clip_matrix_norm": [[1426, "clip-matrix-norm"]], "ivy.Array.clip_matrix_norm": [[1427, "ivy-array-clip-matrix-norm"]], "ivy.Container.clip_matrix_norm": [[1428, "ivy-container-clip-matrix-norm"]], "ivy.clip_matrix_norm": [[1429, "ivy-clip-matrix-norm"]], "ivy.Container.static_clip_matrix_norm": [[1430, "ivy-container-static-clip-matrix-norm"]], "clip_vector_norm": [[1431, "clip-vector-norm"]], "ivy.Array.clip_vector_norm": [[1432, "ivy-array-clip-vector-norm"]], "ivy.Container.clip_vector_norm": [[1433, "ivy-container-clip-vector-norm"]], "ivy.clip_vector_norm": [[1434, "ivy-clip-vector-norm"]], "ivy.Container.static_clip_vector_norm": [[1435, "ivy-container-static-clip-vector-norm"]], "container_types": [[1436, "container-types"]], "current_backend_str": [[1437, "current-backend-str"]], "default": [[1438, "default"]], "ivy.Array.default": [[1439, "ivy-array-default"]], "ivy.default": [[1440, "ivy-default"]], "einops_rearrange": [[1441, "einops-rearrange"]], "ivy.Array.einops_rearrange": [[1442, "ivy-array-einops-rearrange"]], "ivy.Container.einops_rearrange": [[1443, "ivy-container-einops-rearrange"]], "ivy.einops_rearrange": [[1444, "ivy-einops-rearrange"]], "ivy.Container.static_einops_rearrange": [[1445, "ivy-container-static-einops-rearrange"]], "einops_reduce": [[1446, "einops-reduce"]], "ivy.Array.einops_reduce": [[1447, "ivy-array-einops-reduce"]], "ivy.Container.einops_reduce": [[1448, "ivy-container-einops-reduce"]], "ivy.einops_reduce": [[1449, "ivy-einops-reduce"]], "ivy.Container.static_einops_reduce": [[1450, "ivy-container-static-einops-reduce"]], "einops_repeat": [[1451, "einops-repeat"]], "ivy.Array.einops_repeat": [[1452, "ivy-array-einops-repeat"]], "ivy.Container.einops_repeat": [[1453, "ivy-container-einops-repeat"]], "ivy.einops_repeat": [[1454, "ivy-einops-repeat"]], "ivy.Container.static_einops_repeat": [[1455, "ivy-container-static-einops-repeat"]], "exists": [[1456, "exists"]], "ivy.Array.exists": [[1457, "ivy-array-exists"]], "ivy.exists": [[1458, "ivy-exists"]], "fourier_encode": [[1459, "fourier-encode"]], "ivy.Array.fourier_encode": [[1460, "ivy-array-fourier-encode"]], "ivy.Container.fourier_encode": [[1461, "ivy-container-fourier-encode"]], "ivy.fourier_encode": [[1462, "ivy-fourier-encode"]], "ivy.Container.static_fourier_encode": [[1463, "ivy-container-static-fourier-encode"]], "function_supported_devices_and_dtypes": [[1464, "function-supported-devices-and-dtypes"]], "function_unsupported_devices_and_dtypes": [[1465, "function-unsupported-devices-and-dtypes"]], "gather": [[1466, "gather"]], "ivy.Array.gather": [[1467, "ivy-array-gather"]], "ivy.Container.gather": [[1468, "ivy-container-gather"]], "ivy.gather": [[1469, "ivy-gather"]], "ivy.Container.static_gather": [[1470, "ivy-container-static-gather"]], "gather_nd": [[1471, "gather-nd"]], "ivy.Array.gather_nd": [[1472, "ivy-array-gather-nd"]], "ivy.Container.gather_nd": [[1473, "ivy-container-gather-nd"]], "ivy.gather_nd": [[1474, "ivy-gather-nd"]], "ivy.Container.static_gather_nd": [[1475, "ivy-container-static-gather-nd"]], "get_all_arrays_in_memory": [[1476, "get-all-arrays-in-memory"]], "get_array_mode": [[1477, "get-array-mode"]], "get_exception_trace_mode": [[1478, "get-exception-trace-mode"]], "get_item": [[1479, "get-item"]], "get_min_base": [[1480, "get-min-base"]], "get_min_denominator": [[1481, "get-min-denominator"]], "get_nestable_mode": [[1482, "get-nestable-mode"]], "get_num_dims": [[1483, "get-num-dims"]], "ivy.Array.get_num_dims": [[1484, "ivy-array-get-num-dims"]], "ivy.Container.get_num_dims": [[1485, "ivy-container-get-num-dims"]], "ivy.get_num_dims": [[1486, "ivy-get-num-dims"]], "ivy.Container.static_get_num_dims": [[1487, "ivy-container-static-get-num-dims"]], "get_queue_timeout": [[1488, "get-queue-timeout"]], "get_referrers_recursive": [[1489, "get-referrers-recursive"]], "get_show_func_wrapper_trace_mode": [[1490, "get-show-func-wrapper-trace-mode"]], "get_tmp_dir": [[1491, "get-tmp-dir"]], "has_nans": [[1492, "has-nans"]], "ivy.Array.has_nans": [[1493, "ivy-array-has-nans"]], "ivy.Container.has_nans": [[1494, "ivy-container-has-nans"]], "ivy.has_nans": [[1495, "ivy-has-nans"]], "ivy.Container.static_has_nans": [[1496, "ivy-container-static-has-nans"]], "inplace_arrays_supported": [[1497, "inplace-arrays-supported"]], "inplace_decrement": [[1498, "inplace-decrement"]], "ivy.Array.inplace_decrement": [[1499, "ivy-array-inplace-decrement"]], "ivy.Container.inplace_decrement": [[1500, "ivy-container-inplace-decrement"]], "ivy.inplace_decrement": [[1501, "ivy-inplace-decrement"]], "ivy.Container.static_inplace_decrement": [[1502, "ivy-container-static-inplace-decrement"]], "inplace_increment": [[1503, "inplace-increment"]], "ivy.Array.inplace_increment": [[1504, "ivy-array-inplace-increment"]], "ivy.Container.inplace_increment": [[1505, "ivy-container-inplace-increment"]], "ivy.inplace_increment": [[1506, "ivy-inplace-increment"]], "ivy.Container.static_inplace_increment": [[1507, "ivy-container-static-inplace-increment"]], "inplace_update": [[1508, "inplace-update"]], "ivy.Array.inplace_update": [[1509, "ivy-array-inplace-update"]], "ivy.Container.inplace_update": [[1510, "ivy-container-inplace-update"]], "ivy.inplace_update": [[1511, "ivy-inplace-update"]], "ivy.Container.static_inplace_update": [[1512, "ivy-container-static-inplace-update"]], "inplace_variables_supported": [[1513, "inplace-variables-supported"]], "is_array": [[1514, "is-array"]], "ivy.Array.is_array": [[1515, "ivy-array-is-array"]], "ivy.Container.is_array": [[1516, "ivy-container-is-array"]], "ivy.is_array": [[1517, "ivy-is-array"]], "ivy.Container.static_is_array": [[1518, "ivy-container-static-is-array"]], "is_ivy_array": [[1519, "is-ivy-array"]], "ivy.Array.is_ivy_array": [[1520, "ivy-array-is-ivy-array"]], "ivy.Container.is_ivy_array": [[1521, "ivy-container-is-ivy-array"]], "ivy.is_ivy_array": [[1522, "ivy-is-ivy-array"]], "ivy.Container.static_is_ivy_array": [[1523, "ivy-container-static-is-ivy-array"]], "is_ivy_container": [[1524, "is-ivy-container"]], "ivy.Array.is_ivy_container": [[1525, "ivy-array-is-ivy-container"]], "ivy.is_ivy_container": [[1526, "ivy-is-ivy-container"]], "is_native_array": [[1527, "is-native-array"]], "ivy.Array.is_native_array": [[1528, "ivy-array-is-native-array"]], "ivy.Container.is_native_array": [[1529, "ivy-container-is-native-array"]], "ivy.is_native_array": [[1530, "ivy-is-native-array"]], "ivy.Container.static_is_native_array": [[1531, "ivy-container-static-is-native-array"]], "isscalar": [[1532, "isscalar"]], "match_kwargs": [[1533, "match-kwargs"]], "multiprocessing": [[1534, "multiprocessing"]], "num_arrays_in_memory": [[1535, "num-arrays-in-memory"]], "print_all_arrays_in_memory": [[1536, "print-all-arrays-in-memory"]], "scatter_flat": [[1537, "scatter-flat"]], "ivy.Array.scatter_flat": [[1538, "ivy-array-scatter-flat"]], "ivy.Container.scatter_flat": [[1539, "ivy-container-scatter-flat"]], "ivy.scatter_flat": [[1540, "ivy-scatter-flat"]], "ivy.Container.static_scatter_flat": [[1541, "ivy-container-static-scatter-flat"]], "scatter_nd": [[1542, "scatter-nd"]], "ivy.Array.scatter_nd": [[1543, "ivy-array-scatter-nd"]], "ivy.Container.scatter_nd": [[1544, "ivy-container-scatter-nd"]], "ivy.scatter_nd": [[1545, "ivy-scatter-nd"]], "ivy.Container.static_scatter_nd": [[1546, "ivy-container-static-scatter-nd"]], "set_array_mode": [[1547, "set-array-mode"]], "set_exception_trace_mode": [[1548, "set-exception-trace-mode"]], "set_min_base": [[1549, "set-min-base"]], "set_min_denominator": [[1550, "set-min-denominator"]], "set_nestable_mode": [[1551, "set-nestable-mode"]], "set_queue_timeout": [[1552, "set-queue-timeout"]], "set_shape_array_mode": [[1553, "set-shape-array-mode"]], "set_show_func_wrapper_trace_mode": [[1554, "set-show-func-wrapper-trace-mode"]], "set_tmp_dir": [[1555, "set-tmp-dir"]], "shape": [[1556, "shape"]], "shape_array_mode": [[1557, "shape-array-mode"]], "stable_divide": [[1558, "stable-divide"]], "ivy.Array.stable_divide": [[1559, "ivy-array-stable-divide"]], "ivy.Container.stable_divide": [[1560, "ivy-container-stable-divide"]], "ivy.stable_divide": [[1561, "ivy-stable-divide"]], "ivy.Container.static_stable_divide": [[1562, "ivy-container-static-stable-divide"]], "stable_pow": [[1563, "stable-pow"]], "ivy.Array.stable_pow": [[1564, "ivy-array-stable-pow"]], "ivy.Container.stable_pow": [[1565, "ivy-container-stable-pow"]], "ivy.stable_pow": [[1566, "ivy-stable-pow"]], "ivy.Container.static_stable_pow": [[1567, "ivy-container-static-stable-pow"]], "supports_inplace_updates": [[1568, "supports-inplace-updates"]], "ivy.Container.static_supports_inplace_updates": [[1569, "ivy-container-static-supports-inplace-updates"]], "ivy.Array.supports_inplace_updates": [[1570, "ivy-array-supports-inplace-updates"]], "ivy.Container.supports_inplace_updates": [[1571, "ivy-container-supports-inplace-updates"]], "ivy.supports_inplace_updates": [[1572, "ivy-supports-inplace-updates"]], "to_ivy_shape": [[1573, "to-ivy-shape"]], "to_list": [[1574, "to-list"]], "ivy.Container.static_to_list": [[1575, "ivy-container-static-to-list"]], "ivy.Array.to_list": [[1576, "ivy-array-to-list"]], "ivy.to_list": [[1577, "ivy-to-list"]], "to_native_shape": [[1578, "to-native-shape"]], "to_numpy": [[1579, "to-numpy"]], "ivy.Container.static_to_numpy": [[1580, "ivy-container-static-to-numpy"]], "ivy.Array.to_numpy": [[1581, "ivy-array-to-numpy"]], "ivy.Container.to_numpy": [[1582, "ivy-container-to-numpy"]], "ivy.to_numpy": [[1583, "ivy-to-numpy"]], "to_scalar": [[1584, "to-scalar"]], "ivy.Container.static_to_scalar": [[1585, "ivy-container-static-to-scalar"]], "ivy.Array.to_scalar": [[1586, "ivy-array-to-scalar"]], "ivy.Container.to_scalar": [[1587, "ivy-container-to-scalar"]], "ivy.to_scalar": [[1588, "ivy-to-scalar"]], "try_else_none": [[1589, "try-else-none"]], "unset_array_mode": [[1590, "unset-array-mode"]], "unset_exception_trace_mode": [[1591, "unset-exception-trace-mode"]], "unset_nestable_mode": [[1592, "unset-nestable-mode"]], "unset_queue_timeout": [[1593, "unset-queue-timeout"]], "unset_shape_array_mode": [[1594, "unset-shape-array-mode"]], "unset_show_func_wrapper_trace_mode": [[1595, "unset-show-func-wrapper-trace-mode"]], "value_is_nan": [[1596, "value-is-nan"]], "ivy.Container.static_value_is_nan": [[1597, "ivy-container-static-value-is-nan"]], "ivy.Array.value_is_nan": [[1598, "ivy-array-value-is-nan"]], "ivy.Container.value_is_nan": [[1599, "ivy-container-value-is-nan"]], "ivy.value_is_nan": [[1600, "ivy-value-is-nan"]], "vmap": [[1601, "vmap"]], "GradientTracking": [[1603, "gradienttracking"]], "adam_step": [[1604, "adam-step"]], "ivy.Array.adam_step": [[1605, "ivy-array-adam-step"]], "ivy.Container.adam_step": [[1606, "ivy-container-adam-step"]], "ivy.adam_step": [[1607, "ivy-adam-step"]], "adam_update": [[1608, "adam-update"]], "ivy.Array.adam_update": [[1609, "ivy-array-adam-update"]], "ivy.Container.adam_update": [[1610, "ivy-container-adam-update"]], "ivy.adam_update": [[1611, "ivy-adam-update"]], "execute_with_gradients": [[1612, "execute-with-gradients"]], "grad": [[1613, "grad"]], "gradient_descent_update": [[1614, "gradient-descent-update"]], "ivy.Array.gradient_descent_update": [[1615, "ivy-array-gradient-descent-update"]], "ivy.Container.gradient_descent_update": [[1616, "ivy-container-gradient-descent-update"]], "ivy.gradient_descent_update": [[1617, "ivy-gradient-descent-update"]], "jac": [[1618, "jac"]], "lamb_update": [[1619, "lamb-update"]], "ivy.Array.lamb_update": [[1620, "ivy-array-lamb-update"]], "ivy.Container.lamb_update": [[1621, "ivy-container-lamb-update"]], "ivy.lamb_update": [[1622, "ivy-lamb-update"]], "lars_update": [[1623, "lars-update"]], "ivy.Array.lars_update": [[1624, "ivy-array-lars-update"]], "ivy.Container.lars_update": [[1625, "ivy-container-lars-update"]], "ivy.lars_update": [[1626, "ivy-lars-update"]], "optimizer_update": [[1627, "optimizer-update"]], "ivy.Array.optimizer_update": [[1628, "ivy-array-optimizer-update"]], "ivy.Container.optimizer_update": [[1629, "ivy-container-optimizer-update"]], "ivy.optimizer_update": [[1630, "ivy-optimizer-update"]], "set_with_grads": [[1631, "set-with-grads"]], "stop_gradient": [[1632, "stop-gradient"]], "ivy.Container.static_stop_gradient": [[1633, "ivy-container-static-stop-gradient"]], "ivy.Array.stop_gradient": [[1634, "ivy-array-stop-gradient"]], "ivy.Container.stop_gradient": [[1635, "ivy-container-stop-gradient"]], "ivy.stop_gradient": [[1636, "ivy-stop-gradient"]], "unset_with_grads": [[1637, "unset-with-grads"]], "value_and_grad": [[1638, "value-and-grad"]], "with_grads": [[1639, "with-grads"]], "conv": [[1641, "conv"]], "conv1d": [[1642, "conv1d"]], "ivy.Array.conv1d": [[1643, "ivy-array-conv1d"]], "ivy.Container.conv1d": [[1644, "ivy-container-conv1d"]], "ivy.conv1d": [[1645, "ivy-conv1d"]], "ivy.Container.static_conv1d": [[1646, "ivy-container-static-conv1d"]], "conv1d_transpose": [[1647, "conv1d-transpose"]], "ivy.Array.conv1d_transpose": [[1648, "ivy-array-conv1d-transpose"]], "ivy.Container.conv1d_transpose": [[1649, "ivy-container-conv1d-transpose"]], "ivy.conv1d_transpose": [[1650, "ivy-conv1d-transpose"]], "ivy.Container.static_conv1d_transpose": [[1651, "ivy-container-static-conv1d-transpose"]], "conv2d": [[1652, "conv2d"]], "ivy.Array.conv2d": [[1653, "ivy-array-conv2d"]], "ivy.Container.conv2d": [[1654, "ivy-container-conv2d"]], "ivy.conv2d": [[1655, "ivy-conv2d"]], "ivy.Container.static_conv2d": [[1656, "ivy-container-static-conv2d"]], "conv2d_transpose": [[1657, "conv2d-transpose"]], "ivy.Array.conv2d_transpose": [[1658, "ivy-array-conv2d-transpose"]], "ivy.Container.conv2d_transpose": [[1659, "ivy-container-conv2d-transpose"]], "ivy.conv2d_transpose": [[1660, "ivy-conv2d-transpose"]], "ivy.Container.static_conv2d_transpose": [[1661, "ivy-container-static-conv2d-transpose"]], "conv3d": [[1662, "conv3d"]], "ivy.Array.conv3d": [[1663, "ivy-array-conv3d"]], "ivy.Container.conv3d": [[1664, "ivy-container-conv3d"]], "ivy.conv3d": [[1665, "ivy-conv3d"]], "ivy.Container.static_conv3d": [[1666, "ivy-container-static-conv3d"]], "conv3d_transpose": [[1667, "conv3d-transpose"]], "ivy.Array.conv3d_transpose": [[1668, "ivy-array-conv3d-transpose"]], "ivy.Container.conv3d_transpose": [[1669, "ivy-container-conv3d-transpose"]], "ivy.conv3d_transpose": [[1670, "ivy-conv3d-transpose"]], "ivy.Container.static_conv3d_transpose": [[1671, "ivy-container-static-conv3d-transpose"]], "conv_general_dilated": [[1672, "conv-general-dilated"]], "conv_general_transpose": [[1673, "conv-general-transpose"]], "depthwise_conv2d": [[1674, "depthwise-conv2d"]], "ivy.Array.depthwise_conv2d": [[1675, "ivy-array-depthwise-conv2d"]], "ivy.Container.depthwise_conv2d": [[1676, "ivy-container-depthwise-conv2d"]], "ivy.depthwise_conv2d": [[1677, "ivy-depthwise-conv2d"]], "ivy.Container.static_depthwise_conv2d": [[1678, "ivy-container-static-depthwise-conv2d"]], "dropout": [[1679, "dropout"]], "ivy.Array.dropout": [[1680, "ivy-array-dropout"]], "ivy.Container.dropout": [[1681, "ivy-container-dropout"]], "ivy.dropout": [[1682, "ivy-dropout"]], "ivy.Container.static_dropout": [[1683, "ivy-container-static-dropout"]], "linear": [[1684, "linear"]], "ivy.Array.linear": [[1685, "ivy-array-linear"]], "ivy.Container.linear": [[1686, "ivy-container-linear"]], "ivy.linear": [[1687, "ivy-linear"]], "ivy.Container.static_linear": [[1688, "ivy-container-static-linear"]], "lstm_update": [[1689, "lstm-update"]], "ivy.Array.lstm_update": [[1690, "ivy-array-lstm-update"]], "ivy.Container.lstm_update": [[1691, "ivy-container-lstm-update"]], "ivy.lstm_update": [[1692, "ivy-lstm-update"]], "ivy.Container.static_lstm_update": [[1693, "ivy-container-static-lstm-update"]], "multi_head_attention": [[1694, "multi-head-attention"]], "ivy.Array.multi_head_attention": [[1695, "ivy-array-multi-head-attention"]], "ivy.Container.multi_head_attention": [[1696, "ivy-container-multi-head-attention"]], "ivy.multi_head_attention": [[1697, "ivy-multi-head-attention"]], "ivy.Container.static_multi_head_attention": [[1698, "ivy-container-static-multi-head-attention"]], "scaled_dot_product_attention": [[1699, "scaled-dot-product-attention"]], "ivy.Array.scaled_dot_product_attention": [[1700, "ivy-array-scaled-dot-product-attention"]], "ivy.Container.scaled_dot_product_attention": [[1701, "ivy-container-scaled-dot-product-attention"]], "ivy.scaled_dot_product_attention": [[1702, "ivy-scaled-dot-product-attention"]], "ivy.Container.static_scaled_dot_product_attention": [[1703, "ivy-container-static-scaled-dot-product-attention"]], "cholesky": [[1705, "cholesky"]], "ivy.Array.cholesky": [[1706, "ivy-array-cholesky"]], "ivy.Container.cholesky": [[1707, "ivy-container-cholesky"]], "ivy.cholesky": [[1708, "ivy-cholesky"]], "ivy.Container.static_cholesky": [[1709, "ivy-container-static-cholesky"]], "cross": [[1710, "cross"]], "ivy.Array.cross": [[1711, "ivy-array-cross"]], "ivy.Container.cross": [[1712, "ivy-container-cross"]], "ivy.cross": [[1713, "ivy-cross"]], "ivy.Container.static_cross": [[1714, "ivy-container-static-cross"]], "det": [[1715, "det"]], "ivy.Array.det": [[1716, "ivy-array-det"]], "ivy.Container.det": [[1717, "ivy-container-det"]], "ivy.det": [[1718, "ivy-det"]], "ivy.Container.static_det": [[1719, "ivy-container-static-det"]], "diag": [[1720, "diag"]], "ivy.Array.diag": [[1721, "ivy-array-diag"]], "ivy.Container.diag": [[1722, "ivy-container-diag"]], "ivy.diag": [[1723, "ivy-diag"]], "ivy.Container.static_diag": [[1724, "ivy-container-static-diag"]], "diagonal": [[1725, "diagonal"]], "ivy.Array.diagonal": [[1726, "ivy-array-diagonal"]], "ivy.Container.diagonal": [[1727, "ivy-container-diagonal"]], "ivy.diagonal": [[1728, "ivy-diagonal"]], "ivy.Container.static_diagonal": [[1729, "ivy-container-static-diagonal"]], "eigh": [[1731, "eigh"]], "ivy.Array.eigh": [[1732, "ivy-array-eigh"]], "ivy.Container.eigh": [[1733, "ivy-container-eigh"]], "ivy.eigh": [[1734, "ivy-eigh"]], "ivy.Container.static_eigh": [[1735, "ivy-container-static-eigh"]], "eigvalsh": [[1736, "eigvalsh"]], "ivy.Array.eigvalsh": [[1737, "ivy-array-eigvalsh"]], "ivy.Container.eigvalsh": [[1738, "ivy-container-eigvalsh"]], "ivy.eigvalsh": [[1739, "ivy-eigvalsh"]], "ivy.Container.static_eigvalsh": [[1740, "ivy-container-static-eigvalsh"]], "inner": [[1741, "inner"]], "ivy.Array.inner": [[1742, "ivy-array-inner"]], "ivy.Container.inner": [[1743, "ivy-container-inner"]], "ivy.inner": [[1744, "ivy-inner"]], "ivy.Container.static_inner": [[1745, "ivy-container-static-inner"]], "inv": [[1746, "inv"]], "ivy.Array.inv": [[1747, "ivy-array-inv"]], "ivy.Container.inv": [[1748, "ivy-container-inv"]], "ivy.inv": [[1749, "ivy-inv"]], "ivy.Container.static_inv": [[1750, "ivy-container-static-inv"]], "matmul": [[1751, "matmul"]], "ivy.Array.matmul": [[1752, "ivy-array-matmul"]], "ivy.Container.matmul": [[1753, "ivy-container-matmul"]], "ivy.matmul": [[1754, "ivy-matmul"]], "ivy.Container.static_matmul": [[1755, "ivy-container-static-matmul"]], "matrix_norm": [[1756, "matrix-norm"]], "ivy.Array.matrix_norm": [[1757, "ivy-array-matrix-norm"]], "ivy.Container.matrix_norm": [[1758, "ivy-container-matrix-norm"]], "ivy.matrix_norm": [[1759, "ivy-matrix-norm"]], "ivy.Container.static_matrix_norm": [[1760, "ivy-container-static-matrix-norm"]], "matrix_power": [[1761, "matrix-power"]], "ivy.Array.matrix_power": [[1762, "ivy-array-matrix-power"]], "ivy.Container.matrix_power": [[1763, "ivy-container-matrix-power"]], "ivy.matrix_power": [[1764, "ivy-matrix-power"]], "ivy.Container.static_matrix_power": [[1765, "ivy-container-static-matrix-power"]], "matrix_rank": [[1766, "matrix-rank"]], "ivy.Array.matrix_rank": [[1767, "ivy-array-matrix-rank"]], "ivy.Container.matrix_rank": [[1768, "ivy-container-matrix-rank"]], "ivy.matrix_rank": [[1769, "ivy-matrix-rank"]], "ivy.Container.static_matrix_rank": [[1770, "ivy-container-static-matrix-rank"]], "matrix_transpose": [[1771, "matrix-transpose"]], "ivy.Array.matrix_transpose": [[1772, "ivy-array-matrix-transpose"]], "ivy.Container.matrix_transpose": [[1773, "ivy-container-matrix-transpose"]], "ivy.matrix_transpose": [[1774, "ivy-matrix-transpose"]], "ivy.Container.static_matrix_transpose": [[1775, "ivy-container-static-matrix-transpose"]], "outer": [[1776, "outer"]], "ivy.Array.outer": [[1777, "ivy-array-outer"]], "ivy.Container.outer": [[1778, "ivy-container-outer"]], "ivy.outer": [[1779, "ivy-outer"]], "ivy.Container.static_outer": [[1780, "ivy-container-static-outer"]], "pinv": [[1781, "pinv"]], "ivy.Array.pinv": [[1782, "ivy-array-pinv"]], "ivy.Container.pinv": [[1783, "ivy-container-pinv"]], "ivy.pinv": [[1784, "ivy-pinv"]], "ivy.Container.static_pinv": [[1785, "ivy-container-static-pinv"]], "qr": [[1786, "qr"]], "ivy.Array.qr": [[1787, "ivy-array-qr"]], "ivy.Container.qr": [[1788, "ivy-container-qr"]], "ivy.qr": [[1789, "ivy-qr"]], "ivy.Container.static_qr": [[1790, "ivy-container-static-qr"]], "slogdet": [[1791, "slogdet"]], "ivy.Array.slogdet": [[1792, "ivy-array-slogdet"]], "ivy.Container.slogdet": [[1793, "ivy-container-slogdet"]], "ivy.slogdet": [[1794, "ivy-slogdet"]], "ivy.Container.static_slogdet": [[1795, "ivy-container-static-slogdet"]], "solve": [[1796, "solve"]], "ivy.Array.solve": [[1797, "ivy-array-solve"]], "ivy.Container.solve": [[1798, "ivy-container-solve"]], "ivy.solve": [[1799, "ivy-solve"]], "ivy.Container.static_solve": [[1800, "ivy-container-static-solve"]], "svd": [[1801, "svd"]], "ivy.Container.static_svd": [[1802, "ivy-container-static-svd"]], "ivy.Array.svd": [[1803, "ivy-array-svd"]], "ivy.Container.svd": [[1804, "ivy-container-svd"]], "ivy.svd": [[1805, "ivy-svd"]], "svdvals": [[1806, "svdvals"]], "ivy.Container.static_svdvals": [[1807, "ivy-container-static-svdvals"]], "ivy.Array.svdvals": [[1808, "ivy-array-svdvals"]], "ivy.Container.svdvals": [[1809, "ivy-container-svdvals"]], "ivy.svdvals": [[1810, "ivy-svdvals"]], "tensordot": [[1811, "tensordot"]], "ivy.Container.static_tensordot": [[1812, "ivy-container-static-tensordot"]], "ivy.Container.tensordot": [[1813, "ivy-container-tensordot"]], "ivy.tensordot": [[1814, "ivy-tensordot"]], "tensorsolve": [[1815, "tensorsolve"]], "ivy.Array.tensorsolve": [[1816, "ivy-array-tensorsolve"]], "ivy.Container.tensorsolve": [[1817, "ivy-container-tensorsolve"]], "ivy.tensorsolve": [[1818, "ivy-tensorsolve"]], "trace": [[1819, "trace"]], "ivy.Container.static_trace": [[1820, "ivy-container-static-trace"]], "ivy.Array.trace": [[1821, "ivy-array-trace"]], "ivy.Container.trace": [[1822, "ivy-container-trace"]], "ivy.trace": [[1823, "ivy-trace"]], "vander": [[1824, "vander"]], "ivy.Container.static_vander": [[1825, "ivy-container-static-vander"]], "ivy.Array.vander": [[1826, "ivy-array-vander"]], "ivy.Container.vander": [[1827, "ivy-container-vander"]], "ivy.vander": [[1828, "ivy-vander"]], "vecdot": [[1829, "vecdot"]], "ivy.Container.static_vecdot": [[1830, "ivy-container-static-vecdot"]], "ivy.Array.vecdot": [[1831, "ivy-array-vecdot"]], "ivy.Container.vecdot": [[1832, "ivy-container-vecdot"]], "ivy.vecdot": [[1833, "ivy-vecdot"]], "vector_norm": [[1834, "vector-norm"]], "ivy.Container.static_vector_norm": [[1835, "ivy-container-static-vector-norm"]], "ivy.Array.vector_norm": [[1836, "ivy-array-vector-norm"]], "ivy.Container.vector_norm": [[1837, "ivy-container-vector-norm"]], "ivy.vector_norm": [[1838, "ivy-vector-norm"]], "vector_to_skew_symmetric_matrix": [[1839, "vector-to-skew-symmetric-matrix"]], "ivy.Container.static_vector_to_skew_symmetric_matrix": [[1840, "ivy-container-static-vector-to-skew-symmetric-matrix"]], "ivy.Array.vector_to_skew_symmetric_matrix": [[1841, "ivy-array-vector-to-skew-symmetric-matrix"]], "ivy.Container.vector_to_skew_symmetric_matrix": [[1842, "ivy-container-vector-to-skew-symmetric-matrix"]], "ivy.vector_to_skew_symmetric_matrix": [[1843, "ivy-vector-to-skew-symmetric-matrix"]], "binary_cross_entropy": [[1845, "binary-cross-entropy"]], "ivy.Array.binary_cross_entropy": [[1846, "ivy-array-binary-cross-entropy"]], "ivy.Container.binary_cross_entropy": [[1847, "ivy-container-binary-cross-entropy"]], "ivy.binary_cross_entropy": [[1848, "ivy-binary-cross-entropy"]], "ivy.Container.static_binary_cross_entropy": [[1849, "ivy-container-static-binary-cross-entropy"]], "cross_entropy": [[1850, "cross-entropy"]], "ivy.Array.cross_entropy": [[1851, "ivy-array-cross-entropy"]], "ivy.Container.cross_entropy": [[1852, "ivy-container-cross-entropy"]], "ivy.cross_entropy": [[1853, "ivy-cross-entropy"]], "ivy.Container.static_cross_entropy": [[1854, "ivy-container-static-cross-entropy"]], "sparse_cross_entropy": [[1855, "sparse-cross-entropy"]], "ivy.Array.sparse_cross_entropy": [[1856, "ivy-array-sparse-cross-entropy"]], "ivy.Container.sparse_cross_entropy": [[1857, "ivy-container-sparse-cross-entropy"]], "ivy.sparse_cross_entropy": [[1858, "ivy-sparse-cross-entropy"]], "ivy.Container.static_sparse_cross_entropy": [[1859, "ivy-container-static-sparse-cross-entropy"]], "clip": [[1861, "clip"]], "ivy.Array.clip": [[1862, "ivy-array-clip"]], "ivy.Container.clip": [[1863, "ivy-container-clip"]], "ivy.clip": [[1864, "ivy-clip"]], "ivy.Container.static_clip": [[1865, "ivy-container-static-clip"]], "concat": [[1866, "concat"]], "ivy.Array.concat": [[1867, "ivy-array-concat"]], "ivy.Container.concat": [[1868, "ivy-container-concat"]], "ivy.concat": [[1869, "ivy-concat"]], "ivy.Container.static_concat": [[1870, "ivy-container-static-concat"]], "constant_pad": [[1871, "constant-pad"]], "ivy.Array.constant_pad": [[1872, "ivy-array-constant-pad"]], "ivy.Container.constant_pad": [[1873, "ivy-container-constant-pad"]], "ivy.constant_pad": [[1874, "ivy-constant-pad"]], "ivy.Container.static_constant_pad": [[1875, "ivy-container-static-constant-pad"]], "expand_dims": [[1876, "expand-dims"]], "ivy.Array.expand_dims": [[1877, "ivy-array-expand-dims"]], "ivy.Container.expand_dims": [[1878, "ivy-container-expand-dims"]], "ivy.expand_dims": [[1879, "ivy-expand-dims"]], "ivy.Container.static_expand_dims": [[1880, "ivy-container-static-expand-dims"]], "flip": [[1881, "flip"]], "ivy.Array.flip": [[1882, "ivy-array-flip"]], "ivy.Container.flip": [[1883, "ivy-container-flip"]], "ivy.flip": [[1884, "ivy-flip"]], "ivy.Container.static_flip": [[1885, "ivy-container-static-flip"]], "permute_dims": [[1886, "permute-dims"]], "ivy.Array.permute_dims": [[1887, "ivy-array-permute-dims"]], "ivy.Container.permute_dims": [[1888, "ivy-container-permute-dims"]], "ivy.permute_dims": [[1889, "ivy-permute-dims"]], "ivy.Container.static_permute_dims": [[1890, "ivy-container-static-permute-dims"]], "repeat": [[1891, "repeat"]], "ivy.Array.repeat": [[1892, "ivy-array-repeat"]], "ivy.Container.repeat": [[1893, "ivy-container-repeat"]], "ivy.repeat": [[1894, "ivy-repeat"]], "ivy.Container.static_repeat": [[1895, "ivy-container-static-repeat"]], "reshape": [[1896, "reshape"]], "ivy.Array.reshape": [[1897, "ivy-array-reshape"]], "ivy.Container.reshape": [[1898, "ivy-container-reshape"]], "ivy.reshape": [[1899, "ivy-reshape"]], "ivy.Container.static_reshape": [[1900, "ivy-container-static-reshape"]], "roll": [[1901, "roll"]], "ivy.Array.roll": [[1902, "ivy-array-roll"]], "ivy.Container.roll": [[1903, "ivy-container-roll"]], "ivy.Container.static_roll": [[1905, "ivy-container-static-roll"]], "split": [[1906, "split"]], "ivy.Array.split": [[1907, "ivy-array-split"]], "ivy.Container.split": [[1908, "ivy-container-split"]], "ivy.split": [[1909, "ivy-split"]], "ivy.Container.static_split": [[1910, "ivy-container-static-split"]], "squeeze": [[1911, "squeeze"]], "ivy.Array.squeeze": [[1912, "ivy-array-squeeze"]], "ivy.Container.squeeze": [[1913, "ivy-container-squeeze"]], "ivy.squeeze": [[1914, "ivy-squeeze"]], "ivy.Container.static_squeeze": [[1915, "ivy-container-static-squeeze"]], "stack": [[1916, "stack"]], "ivy.Array.stack": [[1917, "ivy-array-stack"]], "ivy.Container.stack": [[1918, "ivy-container-stack"]], "ivy.stack": [[1919, "ivy-stack"]], "ivy.Container.static_stack": [[1920, "ivy-container-static-stack"]], "swapaxes": [[1921, "swapaxes"]], "ivy.Container.static_swapaxes": [[1922, "ivy-container-static-swapaxes"]], "ivy.Array.swapaxes": [[1923, "ivy-array-swapaxes"]], "ivy.Container.swapaxes": [[1924, "ivy-container-swapaxes"]], "ivy.swapaxes": [[1925, "ivy-swapaxes"]], "tile": [[1926, "tile"]], "ivy.Container.static_tile": [[1927, "ivy-container-static-tile"]], "ivy.Array.tile": [[1928, "ivy-array-tile"]], "ivy.Container.tile": [[1929, "ivy-container-tile"]], "ivy.tile": [[1930, "ivy-tile"]], "unstack": [[1931, "unstack"]], "ivy.Container.static_unstack": [[1932, "ivy-container-static-unstack"]], "ivy.Array.unstack": [[1933, "ivy-array-unstack"]], "ivy.Container.unstack": [[1934, "ivy-container-unstack"]], "ivy.unstack": [[1935, "ivy-unstack"]], "zero_pad": [[1936, "zero-pad"]], "ivy.Container.static_zero_pad": [[1937, "ivy-container-static-zero-pad"]], "ivy.Array.zero_pad": [[1938, "ivy-array-zero-pad"]], "ivy.Container.zero_pad": [[1939, "ivy-container-zero-pad"]], "ivy.zero_pad": [[1940, "ivy-zero-pad"]], "fomaml_step": [[1942, "fomaml-step"]], "maml_step": [[1943, "maml-step"]], "reptile_step": [[1944, "reptile-step"]], "all_nested_indices": [[1946, "all-nested-indices"]], "copy_nest": [[1947, "copy-nest"]], "duplicate_array_index_chains": [[1948, "duplicate-array-index-chains"]], "index_nest": [[1949, "index-nest"]], "insert_into_nest_at_index": [[1950, "insert-into-nest-at-index"]], "insert_into_nest_at_indices": [[1951, "insert-into-nest-at-indices"]], "map": [[1952, "map"]], "map_nest_at_index": [[1953, "map-nest-at-index"]], "map_nest_at_indices": [[1954, "map-nest-at-indices"]], "multi_index_nest": [[1955, "multi-index-nest"]], "nested_any": [[1956, "nested-any"]], "nested_argwhere": [[1957, "nested-argwhere"]], "nested_map": [[1958, "nested-map"]], "nested_multi_map": [[1959, "nested-multi-map"]], "prune_empty": [[1960, "prune-empty"]], "prune_nest_at_index": [[1961, "prune-nest-at-index"]], "prune_nest_at_indices": [[1962, "prune-nest-at-indices"]], "set_nest_at_index": [[1963, "set-nest-at-index"]], "set_nest_at_indices": [[1964, "set-nest-at-indices"]], "layer_norm": [[1966, "layer-norm"]], "ivy.Array.layer_norm": [[1967, "ivy-array-layer-norm"]], "ivy.Container.layer_norm": [[1968, "ivy-container-layer-norm"]], "ivy.layer_norm": [[1969, "ivy-layer-norm"]], "multinomial": [[1971, "multinomial"]], "ivy.Array.multinomial": [[1972, "ivy-array-multinomial"]], "ivy.Container.multinomial": [[1973, "ivy-container-multinomial"]], "ivy.multinomial": [[1974, "ivy-multinomial"]], "ivy.Container.static_multinomial": [[1975, "ivy-container-static-multinomial"]], "randint": [[1976, "randint"]], "ivy.Array.randint": [[1977, "ivy-array-randint"]], "ivy.Container.randint": [[1978, "ivy-container-randint"]], "ivy.randint": [[1979, "ivy-randint"]], "ivy.Container.static_randint": [[1980, "ivy-container-static-randint"]], "random_normal": [[1981, "random-normal"]], "ivy.Array.random_normal": [[1982, "ivy-array-random-normal"]], "ivy.Container.random_normal": [[1983, "ivy-container-random-normal"]], "ivy.random_normal": [[1984, "ivy-random-normal"]], "ivy.Container.static_random_normal": [[1985, "ivy-container-static-random-normal"]], "random_uniform": [[1986, "random-uniform"]], "ivy.Array.random_uniform": [[1987, "ivy-array-random-uniform"]], "ivy.Container.random_uniform": [[1988, "ivy-container-random-uniform"]], "ivy.random_uniform": [[1989, "ivy-random-uniform"]], "ivy.Container.static_random_uniform": [[1990, "ivy-container-static-random-uniform"]], "seed": [[1991, "seed"], [2279, "seed"]], "shuffle": [[1992, "shuffle"]], "ivy.Array.shuffle": [[1993, "ivy-array-shuffle"]], "ivy.Container.shuffle": [[1994, "ivy-container-shuffle"]], "ivy.shuffle": [[1995, "ivy-shuffle"]], "ivy.Container.static_shuffle": [[1996, "ivy-container-static-shuffle"]], "argmax": [[1998, "argmax"]], "ivy.Array.argmax": [[1999, "ivy-array-argmax"]], "ivy.Container.argmax": [[2000, "ivy-container-argmax"]], "ivy.argmax": [[2001, "ivy-argmax"]], "ivy.Container.static_argmax": [[2002, "ivy-container-static-argmax"]], "argmin": [[2003, "argmin"]], "ivy.Array.argmin": [[2004, "ivy-array-argmin"]], "ivy.Container.argmin": [[2005, "ivy-container-argmin"]], "ivy.argmin": [[2006, "ivy-argmin"]], "ivy.Container.static_argmin": [[2007, "ivy-container-static-argmin"]], "argwhere": [[2008, "argwhere"]], "ivy.Array.argwhere": [[2009, "ivy-array-argwhere"]], "ivy.Container.argwhere": [[2010, "ivy-container-argwhere"]], "ivy.argwhere": [[2011, "ivy-argwhere"]], "ivy.Container.static_argwhere": [[2012, "ivy-container-static-argwhere"]], "nonzero": [[2013, "nonzero"]], "ivy.Array.nonzero": [[2014, "ivy-array-nonzero"]], "ivy.Container.nonzero": [[2015, "ivy-container-nonzero"]], "ivy.nonzero": [[2016, "ivy-nonzero"]], "ivy.Container.static_nonzero": [[2017, "ivy-container-static-nonzero"]], "where": [[2018, "where"]], "ivy.Container.static_where": [[2019, "ivy-container-static-where"]], "ivy.Array.where": [[2020, "ivy-array-where"]], "ivy.Container.where": [[2021, "ivy-container-where"]], "ivy.where": [[2022, "ivy-where"]], "Data-dependent output shape": [[2023, null], [2023, null], [2023, null], [2023, null], [2024, null], [2028, null], [2029, null], [2033, null], [2034, null], [2038, null], [2039, null], [2043, null]], "unique_all": [[2024, "unique-all"]], "ivy.Container.static_unique_all": [[2025, "ivy-container-static-unique-all"]], "ivy.Array.unique_all": [[2026, "ivy-array-unique-all"]], "ivy.Container.unique_all": [[2027, "ivy-container-unique-all"]], "ivy.unique_all": [[2028, "ivy-unique-all"]], "unique_counts": [[2029, "unique-counts"]], "ivy.Container.static_unique_counts": [[2030, "ivy-container-static-unique-counts"]], "ivy.Array.unique_counts": [[2031, "ivy-array-unique-counts"]], "ivy.Container.unique_counts": [[2032, "ivy-container-unique-counts"]], "ivy.unique_counts": [[2033, "ivy-unique-counts"]], "unique_inverse": [[2034, "unique-inverse"]], "ivy.Container.static_unique_inverse": [[2035, "ivy-container-static-unique-inverse"]], "ivy.Array.unique_inverse": [[2036, "ivy-array-unique-inverse"]], "ivy.Container.unique_inverse": [[2037, "ivy-container-unique-inverse"]], "ivy.unique_inverse": [[2038, "ivy-unique-inverse"]], "unique_values": [[2039, "unique-values"]], "ivy.Container.static_unique_values": [[2040, "ivy-container-static-unique-values"]], "ivy.Array.unique_values": [[2041, "ivy-array-unique-values"]], "ivy.Container.unique_values": [[2042, "ivy-container-unique-values"]], "ivy.unique_values": [[2043, "ivy-unique-values"]], "argsort": [[2045, "argsort"]], "ivy.Array.argsort": [[2046, "ivy-array-argsort"]], "ivy.Container.argsort": [[2047, "ivy-container-argsort"]], "ivy.argsort": [[2048, "ivy-argsort"]], "ivy.Container.static_argsort": [[2049, "ivy-container-static-argsort"]], "searchsorted": [[2050, "searchsorted"]], "ivy.Array.searchsorted": [[2051, "ivy-array-searchsorted"]], "ivy.Container.searchsorted": [[2052, "ivy-container-searchsorted"]], "ivy.searchsorted": [[2053, "ivy-searchsorted"]], "ivy.Container.static_searchsorted": [[2054, "ivy-container-static-searchsorted"]], "sort": [[2055, "sort"]], "ivy.Array.sort": [[2056, "ivy-array-sort"]], "ivy.Container.sort": [[2057, "ivy-container-sort"]], "ivy.sort": [[2058, "ivy-sort"]], "ivy.Container.static_sort": [[2059, "ivy-container-static-sort"]], "cumprod": [[2061, "cumprod"]], "ivy.Array.cumprod": [[2062, "ivy-array-cumprod"]], "ivy.Container.cumprod": [[2063, "ivy-container-cumprod"]], "ivy.cumprod": [[2064, "ivy-cumprod"]], "ivy.Container.static_cumprod": [[2065, "ivy-container-static-cumprod"]], "cumsum": [[2066, "cumsum"]], "ivy.Array.cumsum": [[2067, "ivy-array-cumsum"]], "ivy.Container.cumsum": [[2068, "ivy-container-cumsum"]], "ivy.cumsum": [[2069, "ivy-cumsum"]], "ivy.Container.static_cumsum": [[2070, "ivy-container-static-cumsum"]], "einsum": [[2071, "einsum"]], "ivy.Array.einsum": [[2072, "ivy-array-einsum"]], "ivy.Container.einsum": [[2073, "ivy-container-einsum"]], "ivy.einsum": [[2074, "ivy-einsum"]], "max": [[2075, "max"]], "ivy.Array.max": [[2076, "ivy-array-max"]], "ivy.Container.max": [[2077, "ivy-container-max"]], "ivy.max": [[2078, "ivy-max"]], "mean": [[2079, "mean"]], "ivy.Array.mean": [[2080, "ivy-array-mean"]], "ivy.Container.mean": [[2081, "ivy-container-mean"]], "ivy.mean": [[2082, "ivy-mean"]], "min": [[2083, "min"]], "ivy.Array.min": [[2084, "ivy-array-min"]], "ivy.Container.min": [[2085, "ivy-container-min"]], "ivy.min": [[2086, "ivy-min"]], "prod": [[2087, "prod"], [2240, "prod"]], "ivy.Array.prod": [[2088, "ivy-array-prod"]], "ivy.Container.prod": [[2089, "ivy-container-prod"]], "ivy.prod": [[2090, "ivy-prod"]], "ivy.Container.static_prod": [[2091, "ivy-container-static-prod"]], "std": [[2092, "std"]], "ivy.Array.std": [[2093, "ivy-array-std"]], "ivy.Container.std": [[2094, "ivy-container-std"]], "ivy.std": [[2095, "ivy-std"]], "sum": [[2096, "sum"]], "ivy.Container.static_sum": [[2097, "ivy-container-static-sum"]], "ivy.Array.sum": [[2098, "ivy-array-sum"]], "ivy.Container.sum": [[2099, "ivy-container-sum"]], "ivy.sum": [[2100, "ivy-sum"]], "var": [[2101, "var"]], "ivy.Container.static_var": [[2102, "ivy-container-static-var"]], "ivy.Array.var": [[2103, "ivy-array-var"]], "ivy.Container.var": [[2104, "ivy-container-var"]], "ivy.var": [[2105, "ivy-var"]], "all": [[2107, "all"]], "ivy.Array.all": [[2108, "ivy-array-all"]], "ivy.Container.all": [[2109, "ivy-container-all"]], "ivy.all": [[2110, "ivy-all"]], "ivy.Container.static_all": [[2111, "ivy-container-static-all"]], "any": [[2112, "any"]], "ivy.Array.any": [[2113, "ivy-array-any"]], "ivy.Container.any": [[2114, "ivy-container-any"]], "ivy.any": [[2115, "ivy-any"]], "ivy.Container.static_any": [[2116, "ivy-container-static-any"]], "Glossary": [[2117, "glossary"]], "Contents": [[2118, "contents"]], "Overview": [[2118, "overview"]], "Quick Start": [[2118, "quick-start"]], "Citation": [[2118, "citation"]], "Inspection": [[2121, "module-ivy.inspection"]], "add_array_specs": [[2122, "add-array-specs"]], "fn_array_spec": [[2123, "fn-array-spec"]], "Nested array": [[2124, "module-ivy.nested_array.nested_array"]], "NestedArray": [[2125, "nestedarray"]], "Related Work": [[2126, "related-work"]], "API Standards": [[2127, "api-standards"], [2136, "api-standards"]], "Array API Standard": [[2127, "id1"]], "Compiler Infrastructure": [[2128, "compiler-infrastructure"], [2136, "compiler-infrastructure"]], "LLVM": [[2128, "id1"]], "MLIR": [[2128, "id2"]], "OneAPI": [[2128, "id3"]], "Exchange Formats": [[2129, "exchange-formats"], [2136, "exchange-formats"]], "ONNX onnx": [[2129, "onnx-onnx"]], "NNEF nnef": [[2129, "nnef-nnef"]], "CoreML coreml": [[2129, "coreml-coreml"]], "Frameworks": [[2130, "frameworks"], [2136, "frameworks"]], "MATLAB matlab": [[2130, "matlab-matlab"]], "SciPy scipy": [[2130, "scipy-scipy"]], "Torch torch": [[2130, "torch-torch"]], "NumPy numpy": [[2130, "numpy-numpy"]], "SciKit Learn scikit-learn": [[2130, "scikit-learn-scikit-learn"]], "Theano theano": [[2130, "theano-theano"]], "Pandas pandas": [[2130, "pandas-pandas"]], "Julia julia": [[2130, "julia-julia"]], "Apache Spark MLlib apache-spark-mllib": [[2130, "apache-spark-mllib-apache-spark-mllib"]], "Caffe caffe": [[2130, "caffe-caffe"]], "Chainer chainer": [[2130, "chainer-chainer"]], "TensorFlow 1 tensorflow-1": [[2130, "tensorflow-1-tensorflow-1"]], "MXNet mxnet": [[2130, "mxnet-mxnet"]], "CNTK cntk": [[2130, "cntk-cntk"]], "PyTorch pytorch": [[2130, "pytorch-pytorch"]], "Flux flux": [[2130, "flux-flux"]], "JAX jax": [[2130, "jax-jax"]], "TensorFlow 2 tensorflow-2": [[2130, "tensorflow-2-tensorflow-2"]], "DEX Language dex-language": [[2130, "dex-language-dex-language"]], "Graph Tracers": [[2131, "graph-tracers"], [2136, "graph-tracers"]], "tf.Graph": [[2131, "tf-graph"]], "Jaxpr": [[2131, "jaxpr"]], "torch.jit": [[2131, "torch-jit"]], "torch.fx": [[2131, "torch-fx"]], "ML-Unifying Companies": [[2132, "ml-unifying-companies"], [2136, "ml-unifying-companies"]], "Quansight": [[2132, "id1"]], "Modular": [[2132, "id2"]], "OctoML": [[2132, "id3"]], "Multi-Vendor Compiler Frameworks": [[2133, "multi-vendor-compiler-frameworks"], [2136, "multi-vendor-compiler-frameworks"]], "Apache TVM": [[2133, "apache-tvm"]], "XLA": [[2133, "xla"]], "GCC": [[2133, "gcc"]], "Vendor-Specific APIs": [[2134, "vendor-specific-apis"], [2136, "vendor-specific-apis"]], "TensorRT tensorrt": [[2134, "tensorrt-tensorrt"]], "CUDA cuda": [[2134, "cuda-cuda"]], "Vendor-Specific Compilers": [[2135, "vendor-specific-compilers"], [2136, "vendor-specific-compilers"]], "ICC": [[2135, "id1"]], "ICX": [[2135, "icx"]], "NVCC": [[2135, "nvcc"]], "What does Ivy Add?": [[2136, "what-does-ivy-add"]], "Wrapper Frameworks": [[2136, "wrapper-frameworks"], [2137, "wrapper-frameworks"]], "EagerPy eagerpy": [[2137, "eagerpy-eagerpy"]], "Keras keras": [[2137, "keras-keras"]], "Thinc thinc": [[2137, "thinc-thinc"]], "TensorLy tensorly": [[2137, "tensorly-tensorly"]], "NeuroPod": [[2137, "id1"]], "Framework classes": [[2138, "module-ivy.stateful"]], "GEGLU": [[2140, "geglu"]], "GELU": [[2141, "gelu"]], "Converters": [[2142, "module-ivy.stateful.converters"]], "ModuleConverters": [[2143, "moduleconverters"]], "MyTFModule": [[2144, "mytfmodule"]], "MyTorchModule": [[2145, "mytorchmodule"]], "to_ivy_module": [[2146, "to-ivy-module"]], "Helpers": [[2147, "module-ivy.stateful.helpers"]], "ModuleHelpers": [[2148, "modulehelpers"]], "Constant": [[2150, "constant"]], "FirstLayerSiren": [[2151, "firstlayersiren"]], "GlorotUniform": [[2152, "glorotuniform"]], "Initializer": [[2153, "initializer"]], "KaimingNormal": [[2154, "kaimingnormal"]], "Ones": [[2155, "ones"]], "Siren": [[2156, "siren"]], "Uniform": [[2157, "uniform"]], "Zeros": [[2158, "zeros"]], "Conv1D": [[2160, "conv1d"]], "Conv1DTranspose": [[2161, "conv1dtranspose"]], "Conv2D": [[2162, "conv2d"]], "Conv2DTranspose": [[2163, "conv2dtranspose"]], "Conv3D": [[2164, "conv3d"]], "Conv3DTranspose": [[2165, "conv3dtranspose"]], "DepthwiseConv2D": [[2166, "depthwiseconv2d"]], "Dropout": [[2167, "dropout"]], "LSTM": [[2168, "lstm"]], "Linear": [[2169, "linear"]], "MultiHeadAttention": [[2170, "multiheadattention"]], "Module": [[2171, "module-ivy.stateful.module"], [2172, "module"]], "LayerNorm": [[2174, "layernorm"]], "Adam": [[2176, "adam"]], "LAMB": [[2177, "lamb"]], "LARS": [[2178, "lars"]], "Optimizer": [[2179, "optimizer"]], "SGD": [[2180, "sgd"]], "Sequential": [[2181, "module-ivy.stateful.sequential"], [2182, "sequential"]], "assert_all_close": [[2185, "assert-all-close"]], "assert_same_type_and_shape": [[2186, "assert-same-type-and-shape"]], "check_unsupported_device": [[2187, "check-unsupported-device"]], "check_unsupported_device_and_dtype": [[2188, "check-unsupported-device-and-dtype"]], "check_unsupported_dtype": [[2189, "check-unsupported-dtype"]], "test_unsupported_function": [[2190, "test-unsupported-function"]], "value_test": [[2191, "value-test"]], "Available frameworks": [[2192, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "available_frameworks": [[2193, "available-frameworks"]], "ground_truth": [[2194, "ground-truth"]], "Function testing": [[2195, "module-ivy_tests.test_ivy.helpers.function_testing"]], "args_to_container": [[2196, "args-to-container"]], "as_cont": [[2197, "as-cont"]], "as_lists": [[2198, "as-lists"]], "convtrue": [[2199, "convtrue"]], "create_args_kwargs": [[2200, "create-args-kwargs"]], "empty_func": [[2201, "empty-func"]], "flatten_and_to_np": [[2203, "flatten-and-to-np"]], "flatten_fw_and_to_np": [[2204, "flatten-fw-and-to-np"]], "framework_comparator": [[2205, "framework-comparator"]], "get_frontend_ret": [[2206, "get-frontend-ret"]], "get_ret_and_flattened_np_array": [[2207, "get-ret-and-flattened-np-array"]], "gradient_incompatible_function": [[2208, "gradient-incompatible-function"]], "gradient_test": [[2209, "gradient-test"]], "gradient_unsupported_dtypes": [[2210, "gradient-unsupported-dtypes"]], "kwargs_to_args_n_kwargs": [[2211, "kwargs-to-args-n-kwargs"]], "make_json_pickable": [[2212, "make-json-pickable"]], "test_frontend_function": [[2213, "test-frontend-function"]], "test_frontend_method": [[2214, "test-frontend-method"]], "test_function": [[2215, "test-function"]], "test_method": [[2216, "test-method"]], "var_fn": [[2217, "var-fn"]], "Globals": [[2218, "module-ivy_tests.test_ivy.helpers.globals"]], "InterruptedTest": [[2219, "interruptedtest"]], "TestData": [[2220, "testdata"]], "remove_all_current_framework": [[2221, "remove-all-current-framework"]], "setup_api_test": [[2222, "setup-api-test"]], "setup_frontend_test": [[2223, "setup-frontend-test"]], "teardown_api_test": [[2224, "teardown-api-test"]], "teardown_frontend_test": [[2225, "teardown-frontend-test"]], "Hypothesis helpers": [[2226, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "Array helpers": [[2227, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "array_and_broadcastable_shape": [[2228, "array-and-broadcastable-shape"]], "array_bools": [[2229, "array-bools"]], "array_indices_axis": [[2230, "array-indices-axis"]], "array_values": [[2231, "array-values"]], "arrays_and_axes": [[2232, "arrays-and-axes"]], "arrays_for_pooling": [[2233, "arrays-for-pooling"]], "dtype_and_values": [[2235, "dtype-and-values"]], "dtype_values_axis": [[2236, "dtype-values-axis"]], "list_of_size": [[2237, "list-of-size"]], "lists": [[2238, "lists"]], "mutually_broadcastable_shapes": [[2239, "mutually-broadcastable-shapes"]], "Dtype helpers": [[2241, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "array_dtypes": [[2242, "array-dtypes"]], "get_castable_dtype": [[2243, "get-castable-dtype"]], "get_dtypes": [[2244, "get-dtypes"]], "General helpers": [[2245, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "apply_safety_factor": [[2246, "apply-safety-factor"]], "embedding_helper": [[2247, "embedding-helper"]], "get_axis": [[2248, "get-axis"]], "get_bounds": [[2249, "get-bounds"]], "get_mean_std": [[2250, "get-mean-std"]], "get_shape": [[2251, "get-shape"]], "matrix_is_stable": [[2252, "matrix-is-stable"]], "reshape_shapes": [[2253, "reshape-shapes"]], "subsets": [[2254, "subsets"]], "x_and_filters": [[2255, "x-and-filters"]], "Number helpers": [[2256, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "floats": [[2257, "floats"]], "ints": [[2258, "ints"]], "number": [[2259, "number"]], "Structs": [[2260, "module-ivy_tests.test_ivy.helpers.structs"]], "FrontendMethodData": [[2261, "frontendmethoddata"]], "Test parameter flags": [[2262, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "FrontendFunctionTestFlags": [[2263, "frontendfunctiontestflags"]], "FrontendMethodTestFlags": [[2264, "frontendmethodtestflags"]], "FunctionTestFlags": [[2265, "functiontestflags"]], "MethodTestFlags": [[2266, "methodtestflags"]], "build_flag": [[2267, "build-flag"]], "frontend_function_flags": [[2268, "frontend-function-flags"]], "frontend_method_flags": [[2269, "frontend-method-flags"]], "function_flags": [[2270, "function-flags"]], "method_flags": [[2271, "method-flags"]], "Testing helpers": [[2272, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "handle_frontend_method": [[2273, "handle-frontend-method"]], "handle_frontend_test": [[2274, "handle-frontend-test"]], "handle_method": [[2275, "handle-method"]], "handle_test": [[2276, "handle-test"]], "num_positional_args": [[2277, "num-positional-args"]], "num_positional_args_method": [[2278, "num-positional-args-method"]], "Backend": [[2281, "module-ivy.utils.backend"]], "Ast helpers": [[2282, "module-ivy.utils.backend.ast_helpers"]], "ImportTransformer": [[2283, "importtransformer"]], "IvyLoader": [[2284, "ivyloader"]], "IvyPathFinder": [[2285, "ivypathfinder"]], "Handler": [[2286, "module-ivy.utils.backend.handler"]], "ContextManager": [[2287, "contextmanager"]], "choose_random_backend": [[2288, "choose-random-backend"]], "clear_backend_stack": [[2289, "clear-backend-stack"]], "convert_from_numpy_to_target_backend": [[2290, "convert-from-numpy-to-target-backend"]], "convert_from_source_backend_to_numpy": [[2291, "convert-from-source-backend-to-numpy"]], "current_backend": [[2292, "current-backend"]], "fn_name_from_version_specific_fn_name": [[2293, "fn-name-from-version-specific-fn-name"]], "get_backend": [[2294, "get-backend"]], "prevent_access_locally": [[2295, "prevent-access-locally"]], "set_backend": [[2296, "set-backend"]], "set_backend_to_specific_version": [[2297, "set-backend-to-specific-version"]], "set_jax_backend": [[2298, "set-jax-backend"]], "set_numpy_backend": [[2299, "set-numpy-backend"]], "set_tensorflow_backend": [[2300, "set-tensorflow-backend"]], "set_torch_backend": [[2301, "set-torch-backend"]], "unset_backend": [[2302, "unset-backend"]], "with_backend": [[2303, "with-backend"]], "Dynamic import": [[2304, "module-ivy.utils.dynamic_import"]], "import_module": [[2305, "import-module"]], "Verbosity": [[2306, "module-ivy.verbosity"]], "cprint": [[2307, "cprint"]]}, "indexentries": {"ivy._version": [[0, "module-ivy._version"]], "module": [[0, "module-ivy._version"], [1, "module-ivy.assertions"], [35, "module-ivy.array.array"], [36, "module-ivy.array.activations"], [38, "module-ivy.array.array"], [40, "module-ivy.array.conversions"], [45, "module-ivy.array.creation"], [47, "module-ivy.array.data_type"], [49, "module-ivy.array.device"], [51, "module-ivy.array.elementwise"], [54, "module-ivy.array.general"], [56, "module-ivy.array.gradients"], [58, "module-ivy.array.image"], [60, "module-ivy.array.layers"], [62, "module-ivy.array.linear_algebra"], [64, "module-ivy.array.losses"], [66, "module-ivy.array.manipulation"], [68, "module-ivy.array.norms"], [70, "module-ivy.array.random"], [72, "module-ivy.array.searching"], [74, "module-ivy.array.set"], [76, "module-ivy.array.sorting"], [78, "module-ivy.array.statistical"], [80, "module-ivy.array.utility"], [82, "module-ivy.array.wrapping"], [84, "module-ivy.container.container"], [85, "module-ivy.container.activations"], [87, "module-ivy.container.base"], [89, "module-ivy.container.container"], [91, "module-ivy.container.conversions"], [93, "module-ivy.container.creation"], [95, "module-ivy.container.data_type"], [97, "module-ivy.container.device"], [99, "module-ivy.container.elementwise"], [102, "module-ivy.container.general"], [104, "module-ivy.container.gradients"], [106, "module-ivy.container.image"], [108, "module-ivy.container.layers"], [110, "module-ivy.container.linear_algebra"], [112, "module-ivy.container.losses"], [114, "module-ivy.container.manipulation"], [116, "module-ivy.container.norms"], [118, "module-ivy.container.random"], [120, "module-ivy.container.searching"], [122, "module-ivy.container.set"], [124, "module-ivy.container.sorting"], [126, "module-ivy.container.statistical"], [128, "module-ivy.container.utility"], [130, "module-ivy.container.wrapping"], [172, "module-ivy.func_wrapper"], [189, "module-ivy.functional.ivy.activations"], [233, "module-ivy.functional.ivy.constants"], [234, "module-ivy.functional.ivy.control_flow_ops"], [239, "module-ivy.functional.ivy.creation"], [325, "module-ivy.functional.ivy.data_type"], [430, "module-ivy.functional.ivy.device"], [465, "module-ivy.functional.ivy.elementwise"], [786, "module-ivy.functional.ivy.experimental"], [789, "module-ivy.functional.ivy.experimental.activations"], [863, "module-ivy.functional.ivy.experimental.compilation"], [864, "module-ivy.functional.ivy.experimental.constants"], [880, "module-ivy.functional.ivy.experimental.creation"], [890, "module-ivy.functional.ivy.experimental.data_type"], [897, "module-ivy.functional.ivy.experimental.device"], [938, "module-ivy.functional.ivy.experimental.elementwise"], [1040, "module-ivy.functional.ivy.experimental.general"], [1047, "module-ivy.functional.ivy.experimental.gradients"], [1134, "module-ivy.functional.ivy.experimental.layers"], [1164, "module-ivy.functional.ivy.experimental.linear_algebra"], [1181, "module-ivy.functional.ivy.experimental.losses"], [1188, "module-ivy.functional.ivy.experimental.manipulation"], [1237, "module-ivy.functional.ivy.experimental.meta"], [1272, "module-ivy.functional.ivy.experimental.nest"], [1278, "module-ivy.functional.ivy.experimental.norms"], [1305, "module-ivy.functional.ivy.experimental.random"], [1321, "module-ivy.functional.ivy.experimental.searching"], [1322, "module-ivy.functional.ivy.experimental.set"], [1333, "module-ivy.functional.ivy.experimental.sorting"], [1336, "module-ivy.functional.ivy.experimental.sparse_array"], [1343, "module-ivy.functional.ivy.experimental.statistical"], [1381, "module-ivy.functional.ivy.experimental.utility"], [1407, "module-ivy.functional.ivy.general"], [1602, "module-ivy.functional.ivy.gradients"], [1640, "module-ivy.functional.ivy.layers"], [1704, "module-ivy.functional.ivy.linear_algebra"], [1844, "module-ivy.functional.ivy.losses"], [1860, "module-ivy.functional.ivy.manipulation"], [1941, "module-ivy.functional.ivy.meta"], [1945, "module-ivy.functional.ivy.nest"], [1965, "module-ivy.functional.ivy.norms"], [1970, "module-ivy.functional.ivy.random"], [1997, "module-ivy.functional.ivy.searching"], [2023, "module-ivy.functional.ivy.set"], [2044, "module-ivy.functional.ivy.sorting"], [2060, "module-ivy.functional.ivy.statistical"], [2106, "module-ivy.functional.ivy.utility"], [2121, "module-ivy.inspection"], [2124, "module-ivy.nested_array.nested_array"], [2138, "module-ivy.stateful"], [2139, "module-ivy.stateful.activations"], [2142, "module-ivy.stateful.converters"], [2147, "module-ivy.stateful.helpers"], [2149, "module-ivy.stateful.initializers"], [2159, "module-ivy.stateful.layers"], [2171, "module-ivy.stateful.module"], [2173, "module-ivy.stateful.norms"], [2175, "module-ivy.stateful.optimizers"], [2181, "module-ivy.stateful.sequential"], [2184, "module-ivy_tests.test_ivy.helpers.assertions"], [2192, "module-ivy_tests.test_ivy.helpers.available_frameworks"], [2195, "module-ivy_tests.test_ivy.helpers.function_testing"], [2218, "module-ivy_tests.test_ivy.helpers.globals"], [2226, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"], [2227, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"], [2241, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"], [2245, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"], [2256, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"], [2260, "module-ivy_tests.test_ivy.helpers.structs"], [2262, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"], [2272, "module-ivy_tests.test_ivy.helpers.testing_helpers"], [2280, "module-ivy.utils._importlib"], [2281, "module-ivy.utils.backend"], [2282, "module-ivy.utils.backend.ast_helpers"], [2286, "module-ivy.utils.backend.handler"], [2304, "module-ivy.utils.dynamic_import"], [2306, "module-ivy.verbosity"]], "check_all() (in module ivy.assertions)": [[1, "ivy.assertions.check_all"], [2, "ivy.assertions.check_all"]], "check_all_or_any_fn() (in module ivy.assertions)": [[1, "ivy.assertions.check_all_or_any_fn"], [3, "ivy.assertions.check_all_or_any_fn"]], "check_any() (in module ivy.assertions)": [[1, "ivy.assertions.check_any"], [4, "ivy.assertions.check_any"]], "check_dimensions() (in module ivy.assertions)": [[1, "ivy.assertions.check_dimensions"], [5, "ivy.assertions.check_dimensions"]], "check_elem_in_list() (in module ivy.assertions)": [[1, "ivy.assertions.check_elem_in_list"], [6, "ivy.assertions.check_elem_in_list"]], "check_equal() (in module ivy.assertions)": [[1, "ivy.assertions.check_equal"], [7, "ivy.assertions.check_equal"]], "check_exists() (in module ivy.assertions)": [[1, "ivy.assertions.check_exists"], [8, "ivy.assertions.check_exists"]], "check_false() (in module ivy.assertions)": [[1, "ivy.assertions.check_false"], [9, "ivy.assertions.check_false"]], "check_fill_value_and_dtype_are_compatible() (in module ivy.assertions)": [[1, "ivy.assertions.check_fill_value_and_dtype_are_compatible"], [10, "ivy.assertions.check_fill_value_and_dtype_are_compatible"]], "check_gather_input_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_gather_input_valid"], [11, "ivy.assertions.check_gather_input_valid"]], "check_gather_nd_input_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_gather_nd_input_valid"], [12, "ivy.assertions.check_gather_nd_input_valid"]], "check_greater() (in module ivy.assertions)": [[1, "ivy.assertions.check_greater"], [13, "ivy.assertions.check_greater"]], "check_inplace_sizes_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_inplace_sizes_valid"], [14, "ivy.assertions.check_inplace_sizes_valid"]], "check_isinstance() (in module ivy.assertions)": [[1, "ivy.assertions.check_isinstance"], [15, "ivy.assertions.check_isinstance"]], "check_kernel_padding_size() (in module ivy.assertions)": [[1, "ivy.assertions.check_kernel_padding_size"], [16, "ivy.assertions.check_kernel_padding_size"]], "check_less() (in module ivy.assertions)": [[1, "ivy.assertions.check_less"], [17, "ivy.assertions.check_less"]], "check_one_way_broadcastable() (in module ivy.assertions)": [[1, "ivy.assertions.check_one_way_broadcastable"], [18, "ivy.assertions.check_one_way_broadcastable"]], "check_same_dtype() (in module ivy.assertions)": [[1, "ivy.assertions.check_same_dtype"], [19, "ivy.assertions.check_same_dtype"]], "check_shape() (in module ivy.assertions)": [[1, "ivy.assertions.check_shape"], [20, "ivy.assertions.check_shape"]], "check_shapes_broadcastable() (in module ivy.assertions)": [[1, "ivy.assertions.check_shapes_broadcastable"], [21, "ivy.assertions.check_shapes_broadcastable"]], "check_true() (in module ivy.assertions)": [[1, "ivy.assertions.check_true"], [22, "ivy.assertions.check_true"]], "ivy.assertions": [[1, "module-ivy.assertions"]], "array (class in ivy.array.array)": [[35, "ivy.array.array.Array"], [38, "ivy.array.array.Array"], [39, "ivy.array.array.Array"]], "t (ivy.array.array.array property)": [[35, "ivy.array.array.Array.T"], [38, "ivy.array.array.Array.T"], [39, "ivy.array.array.Array.T"]], "__abs__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__abs__"], [38, "ivy.array.array.Array.__abs__"], [39, "ivy.array.array.Array.__abs__"]], "__add__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__add__"], [38, "ivy.array.array.Array.__add__"], [39, "ivy.array.array.Array.__add__"]], "__eq__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__eq__"], [38, "ivy.array.array.Array.__eq__"], [39, "ivy.array.array.Array.__eq__"]], "__ge__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__ge__"], [38, "ivy.array.array.Array.__ge__"], [39, "ivy.array.array.Array.__ge__"]], "__gt__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__gt__"], [38, "ivy.array.array.Array.__gt__"], [39, "ivy.array.array.Array.__gt__"]], "__init__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__init__"], [38, "ivy.array.array.Array.__init__"], [39, "ivy.array.array.Array.__init__"]], "__le__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__le__"], [38, "ivy.array.array.Array.__le__"], [39, "ivy.array.array.Array.__le__"]], "__lt__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__lt__"], [38, "ivy.array.array.Array.__lt__"], [39, "ivy.array.array.Array.__lt__"]], "__ne__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__ne__"], [38, "ivy.array.array.Array.__ne__"], [39, "ivy.array.array.Array.__ne__"]], "__pow__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__pow__"], [38, "ivy.array.array.Array.__pow__"], [39, "ivy.array.array.Array.__pow__"]], "__radd__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__radd__"], [38, "ivy.array.array.Array.__radd__"], [39, "ivy.array.array.Array.__radd__"]], "__rrshift__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__rrshift__"], [38, "ivy.array.array.Array.__rrshift__"], [39, "ivy.array.array.Array.__rrshift__"]], "__rshift__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__rshift__"], [38, "ivy.array.array.Array.__rshift__"], [39, "ivy.array.array.Array.__rshift__"]], "__rsub__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__rsub__"], [38, "ivy.array.array.Array.__rsub__"], [39, "ivy.array.array.Array.__rsub__"]], "__sub__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__sub__"], [38, "ivy.array.array.Array.__sub__"], [39, "ivy.array.array.Array.__sub__"]], "__truediv__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__truediv__"], [38, "ivy.array.array.Array.__truediv__"], [39, "ivy.array.array.Array.__truediv__"]], "__xor__() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.__xor__"], [38, "ivy.array.array.Array.__xor__"], [39, "ivy.array.array.Array.__xor__"]], "arange() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.arange"], [38, "ivy.array.array.Array.arange"], [39, "ivy.array.array.Array.arange"]], "arg_info() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.arg_info"], [38, "ivy.array.array.Array.arg_info"], [39, "ivy.array.array.Array.arg_info"]], "arg_names() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.arg_names"], [38, "ivy.array.array.Array.arg_names"], [39, "ivy.array.array.Array.arg_names"]], "args_to_ivy() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.args_to_ivy"], [38, "ivy.array.array.Array.args_to_ivy"], [39, "ivy.array.array.Array.args_to_ivy"]], "args_to_native() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.args_to_native"], [38, "ivy.array.array.Array.args_to_native"], [39, "ivy.array.array.Array.args_to_native"]], "array() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.array"], [38, "ivy.array.array.Array.array"], [39, "ivy.array.array.Array.array"]], "as_ivy_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.as_ivy_dev"], [38, "ivy.array.array.Array.as_ivy_dev"], [39, "ivy.array.array.Array.as_ivy_dev"]], "as_ivy_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.as_ivy_dtype"], [38, "ivy.array.array.Array.as_ivy_dtype"], [39, "ivy.array.array.Array.as_ivy_dtype"]], "as_native_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.as_native_dev"], [38, "ivy.array.array.Array.as_native_dev"], [39, "ivy.array.array.Array.as_native_dev"]], "as_native_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.as_native_dtype"], [38, "ivy.array.array.Array.as_native_dtype"], [39, "ivy.array.array.Array.as_native_dtype"]], "asarray_handle_nestable() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.asarray_handle_nestable"], [38, "ivy.array.array.Array.asarray_handle_nestable"], [39, "ivy.array.array.Array.asarray_handle_nestable"]], "asarray_infer_device() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.asarray_infer_device"], [38, "ivy.array.array.Array.asarray_infer_device"], [39, "ivy.array.array.Array.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [38, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [39, "ivy.array.array.Array.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.cache_fn"], [38, "ivy.array.array.Array.cache_fn"], [39, "ivy.array.array.Array.cache_fn"]], "check_float() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.check_float"], [38, "ivy.array.array.Array.check_float"], [39, "ivy.array.array.Array.check_float"]], "clear_mem_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.clear_mem_on_dev"], [38, "ivy.array.array.Array.clear_mem_on_dev"], [39, "ivy.array.array.Array.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.closest_valid_dtype"], [38, "ivy.array.array.Array.closest_valid_dtype"], [39, "ivy.array.array.Array.closest_valid_dtype"]], "container_types() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.container_types"], [38, "ivy.array.array.Array.container_types"], [39, "ivy.array.array.Array.container_types"]], "conv() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.conv"], [38, "ivy.array.array.Array.conv"], [39, "ivy.array.array.Array.conv"]], "conv_general_dilated() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.conv_general_dilated"], [38, "ivy.array.array.Array.conv_general_dilated"], [39, "ivy.array.array.Array.conv_general_dilated"]], "conv_general_transpose() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.conv_general_transpose"], [38, "ivy.array.array.Array.conv_general_transpose"], [39, "ivy.array.array.Array.conv_general_transpose"]], "current_backend() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.current_backend"], [38, "ivy.array.array.Array.current_backend"], [39, "ivy.array.array.Array.current_backend"]], "current_backend_str() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.current_backend_str"], [38, "ivy.array.array.Array.current_backend_str"], [39, "ivy.array.array.Array.current_backend_str"]], "data (ivy.array.array.array property)": [[35, "ivy.array.array.Array.data"], [38, "ivy.array.array.Array.data"], [39, "ivy.array.array.Array.data"]], "default_complex_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.default_complex_dtype"], [38, "ivy.array.array.Array.default_complex_dtype"], [39, "ivy.array.array.Array.default_complex_dtype"]], "default_device() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.default_device"], [38, "ivy.array.array.Array.default_device"], [39, "ivy.array.array.Array.default_device"]], "default_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.default_dtype"], [38, "ivy.array.array.Array.default_dtype"], [39, "ivy.array.array.Array.default_dtype"]], "default_float_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.default_float_dtype"], [38, "ivy.array.array.Array.default_float_dtype"], [39, "ivy.array.array.Array.default_float_dtype"]], "default_int_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.default_int_dtype"], [38, "ivy.array.array.Array.default_int_dtype"], [39, "ivy.array.array.Array.default_int_dtype"]], "default_uint_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.default_uint_dtype"], [38, "ivy.array.array.Array.default_uint_dtype"], [39, "ivy.array.array.Array.default_uint_dtype"]], "deserialize() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.deserialize"], [38, "ivy.array.array.Array.deserialize"], [39, "ivy.array.array.Array.deserialize"]], "dev_util() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.dev_util"], [38, "ivy.array.array.Array.dev_util"], [39, "ivy.array.array.Array.dev_util"]], "device (ivy.array.array.array property)": [[35, "ivy.array.array.Array.device"], [38, "ivy.array.array.Array.device"], [39, "ivy.array.array.Array.device"]], "dtype (ivy.array.array.array property)": [[35, "ivy.array.array.Array.dtype"], [38, "ivy.array.array.Array.dtype"], [39, "ivy.array.array.Array.dtype"]], "dtype_bits() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.dtype_bits"], [38, "ivy.array.array.Array.dtype_bits"], [39, "ivy.array.array.Array.dtype_bits"]], "dynamic_backend (ivy.array.array.array property)": [[35, "ivy.array.array.Array.dynamic_backend"], [38, "ivy.array.array.Array.dynamic_backend"], [39, "ivy.array.array.Array.dynamic_backend"]], "empty() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.empty"], [38, "ivy.array.array.Array.empty"], [39, "ivy.array.array.Array.empty"]], "execute_with_gradients() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.execute_with_gradients"], [38, "ivy.array.array.Array.execute_with_gradients"], [39, "ivy.array.array.Array.execute_with_gradients"]], "eye() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.eye"], [38, "ivy.array.array.Array.eye"], [39, "ivy.array.array.Array.eye"]], "full() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.full"], [38, "ivy.array.array.Array.full"], [39, "ivy.array.array.Array.full"]], "function_supported_devices() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.function_supported_devices"], [38, "ivy.array.array.Array.function_supported_devices"], [39, "ivy.array.array.Array.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [38, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [39, "ivy.array.array.Array.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.function_supported_dtypes"], [38, "ivy.array.array.Array.function_supported_dtypes"], [39, "ivy.array.array.Array.function_supported_dtypes"]], "function_unsupported_devices() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.function_unsupported_devices"], [38, "ivy.array.array.Array.function_unsupported_devices"], [39, "ivy.array.array.Array.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [38, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [39, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.function_unsupported_dtypes"], [38, "ivy.array.array.Array.function_unsupported_dtypes"], [39, "ivy.array.array.Array.function_unsupported_dtypes"]], "get() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get"], [38, "ivy.array.array.Array.get"], [39, "ivy.array.array.Array.get"]], "get_all_arrays_in_memory() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_all_arrays_in_memory"], [38, "ivy.array.array.Array.get_all_arrays_in_memory"], [39, "ivy.array.array.Array.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [38, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [39, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_array_mode"], [38, "ivy.array.array.Array.get_array_mode"], [39, "ivy.array.array.Array.get_array_mode"]], "get_exception_trace_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_exception_trace_mode"], [38, "ivy.array.array.Array.get_exception_trace_mode"], [39, "ivy.array.array.Array.get_exception_trace_mode"]], "get_item() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_item"], [38, "ivy.array.array.Array.get_item"], [39, "ivy.array.array.Array.get_item"]], "get_min_base() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_min_base"], [38, "ivy.array.array.Array.get_min_base"], [39, "ivy.array.array.Array.get_min_base"]], "get_min_denominator() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_min_denominator"], [38, "ivy.array.array.Array.get_min_denominator"], [39, "ivy.array.array.Array.get_min_denominator"]], "get_nestable_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_nestable_mode"], [38, "ivy.array.array.Array.get_nestable_mode"], [39, "ivy.array.array.Array.get_nestable_mode"]], "get_queue_timeout() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_queue_timeout"], [38, "ivy.array.array.Array.get_queue_timeout"], [39, "ivy.array.array.Array.get_queue_timeout"]], "get_referrers_recursive() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_referrers_recursive"], [38, "ivy.array.array.Array.get_referrers_recursive"], [39, "ivy.array.array.Array.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [38, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [39, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.get_tmp_dir"], [38, "ivy.array.array.Array.get_tmp_dir"], [39, "ivy.array.array.Array.get_tmp_dir"]], "gpu_is_available() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.gpu_is_available"], [38, "ivy.array.array.Array.gpu_is_available"], [39, "ivy.array.array.Array.gpu_is_available"]], "grad() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.grad"], [38, "ivy.array.array.Array.grad"], [39, "ivy.array.array.Array.grad"]], "handle_array_function() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.handle_array_function"], [38, "ivy.array.array.Array.handle_array_function"], [39, "ivy.array.array.Array.handle_array_function"]], "handle_array_like_without_promotion() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.handle_array_like_without_promotion"], [38, "ivy.array.array.Array.handle_array_like_without_promotion"], [39, "ivy.array.array.Array.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.handle_exceptions"], [38, "ivy.array.array.Array.handle_exceptions"], [39, "ivy.array.array.Array.handle_exceptions"]], "handle_nestable() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.handle_nestable"], [38, "ivy.array.array.Array.handle_nestable"], [39, "ivy.array.array.Array.handle_nestable"]], "handle_out_argument() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.handle_out_argument"], [38, "ivy.array.array.Array.handle_out_argument"], [39, "ivy.array.array.Array.handle_out_argument"]], "infer_default_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.infer_default_dtype"], [38, "ivy.array.array.Array.infer_default_dtype"], [39, "ivy.array.array.Array.infer_default_dtype"]], "infer_device() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.infer_device"], [38, "ivy.array.array.Array.infer_device"], [39, "ivy.array.array.Array.infer_device"]], "infer_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.infer_dtype"], [38, "ivy.array.array.Array.infer_dtype"], [39, "ivy.array.array.Array.infer_dtype"]], "inplace_arrays_supported() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.inplace_arrays_supported"], [38, "ivy.array.array.Array.inplace_arrays_supported"], [39, "ivy.array.array.Array.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.inplace_variables_supported"], [38, "ivy.array.array.Array.inplace_variables_supported"], [39, "ivy.array.array.Array.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.inputs_to_ivy_arrays"], [38, "ivy.array.array.Array.inputs_to_ivy_arrays"], [39, "ivy.array.array.Array.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.inputs_to_native_arrays"], [38, "ivy.array.array.Array.inputs_to_native_arrays"], [39, "ivy.array.array.Array.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.integer_arrays_to_float"], [38, "ivy.array.array.Array.integer_arrays_to_float"], [39, "ivy.array.array.Array.integer_arrays_to_float"]], "invalid_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.invalid_dtype"], [38, "ivy.array.array.Array.invalid_dtype"], [39, "ivy.array.array.Array.invalid_dtype"]], "is_complex_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.is_complex_dtype"], [38, "ivy.array.array.Array.is_complex_dtype"], [39, "ivy.array.array.Array.is_complex_dtype"]], "isscalar() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.isscalar"], [38, "ivy.array.array.Array.isscalar"], [39, "ivy.array.array.Array.isscalar"]], "ivy.array.array": [[35, "module-ivy.array.array"], [38, "module-ivy.array.array"]], "jac() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.jac"], [38, "ivy.array.array.Array.jac"], [39, "ivy.array.array.Array.jac"]], "mt (ivy.array.array.array property)": [[35, "ivy.array.array.Array.mT"], [38, "ivy.array.array.Array.mT"], [39, "ivy.array.array.Array.mT"]], "match_kwargs() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.match_kwargs"], [38, "ivy.array.array.Array.match_kwargs"], [39, "ivy.array.array.Array.match_kwargs"]], "multiprocessing() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.multiprocessing"], [38, "ivy.array.array.Array.multiprocessing"], [39, "ivy.array.array.Array.multiprocessing"]], "ndim (ivy.array.array.array property)": [[35, "ivy.array.array.Array.ndim"], [38, "ivy.array.array.Array.ndim"], [39, "ivy.array.array.Array.ndim"]], "normalize_axis_tuple() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.normalize_axis_tuple"], [38, "ivy.array.array.Array.normalize_axis_tuple"], [39, "ivy.array.array.Array.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.num_arrays_in_memory"], [38, "ivy.array.array.Array.num_arrays_in_memory"], [39, "ivy.array.array.Array.num_arrays_in_memory"]], "num_cpu_cores() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.num_cpu_cores"], [38, "ivy.array.array.Array.num_cpu_cores"], [39, "ivy.array.array.Array.num_cpu_cores"]], "num_gpus() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.num_gpus"], [38, "ivy.array.array.Array.num_gpus"], [39, "ivy.array.array.Array.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [38, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [39, "ivy.array.array.Array.num_ivy_arrays_on_dev"]], "ones() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.ones"], [38, "ivy.array.array.Array.ones"], [39, "ivy.array.array.Array.ones"]], "outputs_to_ivy_arrays() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.outputs_to_ivy_arrays"], [38, "ivy.array.array.Array.outputs_to_ivy_arrays"], [39, "ivy.array.array.Array.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.percent_used_mem_on_dev"], [38, "ivy.array.array.Array.percent_used_mem_on_dev"], [39, "ivy.array.array.Array.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.print_all_arrays_in_memory"], [38, "ivy.array.array.Array.print_all_arrays_in_memory"], [39, "ivy.array.array.Array.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [38, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [39, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.promote_types"], [38, "ivy.array.array.Array.promote_types"], [39, "ivy.array.array.Array.promote_types"]], "promote_types_of_inputs() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.promote_types_of_inputs"], [38, "ivy.array.array.Array.promote_types_of_inputs"], [39, "ivy.array.array.Array.promote_types_of_inputs"]], "seed() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.seed"], [38, "ivy.array.array.Array.seed"], [39, "ivy.array.array.Array.seed"]], "set_array_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_array_mode"], [38, "ivy.array.array.Array.set_array_mode"], [39, "ivy.array.array.Array.set_array_mode"]], "set_default_complex_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_default_complex_dtype"], [38, "ivy.array.array.Array.set_default_complex_dtype"], [39, "ivy.array.array.Array.set_default_complex_dtype"]], "set_default_device() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_default_device"], [38, "ivy.array.array.Array.set_default_device"], [39, "ivy.array.array.Array.set_default_device"]], "set_default_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_default_dtype"], [38, "ivy.array.array.Array.set_default_dtype"], [39, "ivy.array.array.Array.set_default_dtype"]], "set_default_float_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_default_float_dtype"], [38, "ivy.array.array.Array.set_default_float_dtype"], [39, "ivy.array.array.Array.set_default_float_dtype"]], "set_default_int_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_default_int_dtype"], [38, "ivy.array.array.Array.set_default_int_dtype"], [39, "ivy.array.array.Array.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_default_uint_dtype"], [38, "ivy.array.array.Array.set_default_uint_dtype"], [39, "ivy.array.array.Array.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_exception_trace_mode"], [38, "ivy.array.array.Array.set_exception_trace_mode"], [39, "ivy.array.array.Array.set_exception_trace_mode"]], "set_min_base() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_min_base"], [38, "ivy.array.array.Array.set_min_base"], [39, "ivy.array.array.Array.set_min_base"]], "set_min_denominator() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_min_denominator"], [38, "ivy.array.array.Array.set_min_denominator"], [39, "ivy.array.array.Array.set_min_denominator"]], "set_nestable_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_nestable_mode"], [38, "ivy.array.array.Array.set_nestable_mode"], [39, "ivy.array.array.Array.set_nestable_mode"]], "set_queue_timeout() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_queue_timeout"], [38, "ivy.array.array.Array.set_queue_timeout"], [39, "ivy.array.array.Array.set_queue_timeout"]], "set_shape_array_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_shape_array_mode"], [38, "ivy.array.array.Array.set_shape_array_mode"], [39, "ivy.array.array.Array.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [38, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [39, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_split_factor"], [38, "ivy.array.array.Array.set_split_factor"], [39, "ivy.array.array.Array.set_split_factor"]], "set_tmp_dir() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_tmp_dir"], [38, "ivy.array.array.Array.set_tmp_dir"], [39, "ivy.array.array.Array.set_tmp_dir"]], "set_with_grads() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.set_with_grads"], [38, "ivy.array.array.Array.set_with_grads"], [39, "ivy.array.array.Array.set_with_grads"]], "shape (ivy.array.array.array property)": [[35, "ivy.array.array.Array.shape"], [38, "ivy.array.array.Array.shape"], [39, "ivy.array.array.Array.shape"]], "shape_array_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.shape_array_mode"], [38, "ivy.array.array.Array.shape_array_mode"], [39, "ivy.array.array.Array.shape_array_mode"]], "size (ivy.array.array.array property)": [[35, "ivy.array.array.Array.size"], [38, "ivy.array.array.Array.size"], [39, "ivy.array.array.Array.size"]], "split_factor() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.split_factor"], [38, "ivy.array.array.Array.split_factor"], [39, "ivy.array.array.Array.split_factor"]], "split_func_call() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.split_func_call"], [38, "ivy.array.array.Array.split_func_call"], [39, "ivy.array.array.Array.split_func_call"]], "to_ivy() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.to_ivy"], [38, "ivy.array.array.Array.to_ivy"], [39, "ivy.array.array.Array.to_ivy"]], "to_ivy_shape() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.to_ivy_shape"], [38, "ivy.array.array.Array.to_ivy_shape"], [39, "ivy.array.array.Array.to_ivy_shape"]], "to_native() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.to_native"], [38, "ivy.array.array.Array.to_native"], [39, "ivy.array.array.Array.to_native"]], "to_native_arrays_and_back() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.to_native_arrays_and_back"], [38, "ivy.array.array.Array.to_native_arrays_and_back"], [39, "ivy.array.array.Array.to_native_arrays_and_back"]], "to_native_shape() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.to_native_shape"], [38, "ivy.array.array.Array.to_native_shape"], [39, "ivy.array.array.Array.to_native_shape"]], "total_mem_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.total_mem_on_dev"], [38, "ivy.array.array.Array.total_mem_on_dev"], [39, "ivy.array.array.Array.total_mem_on_dev"]], "tpu_is_available() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.tpu_is_available"], [38, "ivy.array.array.Array.tpu_is_available"], [39, "ivy.array.array.Array.tpu_is_available"]], "try_else_none() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.try_else_none"], [38, "ivy.array.array.Array.try_else_none"], [39, "ivy.array.array.Array.try_else_none"]], "type_promote_arrays() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.type_promote_arrays"], [38, "ivy.array.array.Array.type_promote_arrays"], [39, "ivy.array.array.Array.type_promote_arrays"]], "unset_array_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_array_mode"], [38, "ivy.array.array.Array.unset_array_mode"], [39, "ivy.array.array.Array.unset_array_mode"]], "unset_default_complex_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_default_complex_dtype"], [38, "ivy.array.array.Array.unset_default_complex_dtype"], [39, "ivy.array.array.Array.unset_default_complex_dtype"]], "unset_default_device() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_default_device"], [38, "ivy.array.array.Array.unset_default_device"], [39, "ivy.array.array.Array.unset_default_device"]], "unset_default_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_default_dtype"], [38, "ivy.array.array.Array.unset_default_dtype"], [39, "ivy.array.array.Array.unset_default_dtype"]], "unset_default_float_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_default_float_dtype"], [38, "ivy.array.array.Array.unset_default_float_dtype"], [39, "ivy.array.array.Array.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_default_int_dtype"], [38, "ivy.array.array.Array.unset_default_int_dtype"], [39, "ivy.array.array.Array.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_default_uint_dtype"], [38, "ivy.array.array.Array.unset_default_uint_dtype"], [39, "ivy.array.array.Array.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_exception_trace_mode"], [38, "ivy.array.array.Array.unset_exception_trace_mode"], [39, "ivy.array.array.Array.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_nestable_mode"], [38, "ivy.array.array.Array.unset_nestable_mode"], [39, "ivy.array.array.Array.unset_nestable_mode"]], "unset_queue_timeout() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_queue_timeout"], [38, "ivy.array.array.Array.unset_queue_timeout"], [39, "ivy.array.array.Array.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_shape_array_mode"], [38, "ivy.array.array.Array.unset_shape_array_mode"], [39, "ivy.array.array.Array.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [38, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [39, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.unset_with_grads"], [38, "ivy.array.array.Array.unset_with_grads"], [39, "ivy.array.array.Array.unset_with_grads"]], "used_mem_on_dev() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.used_mem_on_dev"], [38, "ivy.array.array.Array.used_mem_on_dev"], [39, "ivy.array.array.Array.used_mem_on_dev"]], "valid_dtype() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.valid_dtype"], [38, "ivy.array.array.Array.valid_dtype"], [39, "ivy.array.array.Array.valid_dtype"]], "value_and_grad() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.value_and_grad"], [38, "ivy.array.array.Array.value_and_grad"], [39, "ivy.array.array.Array.value_and_grad"]], "vmap() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.vmap"], [38, "ivy.array.array.Array.vmap"], [39, "ivy.array.array.Array.vmap"]], "with_grads() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.with_grads"], [38, "ivy.array.array.Array.with_grads"], [39, "ivy.array.array.Array.with_grads"]], "wraps() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.wraps"], [38, "ivy.array.array.Array.wraps"], [39, "ivy.array.array.Array.wraps"]], "zeros() (ivy.array.array.array method)": [[35, "ivy.array.array.Array.zeros"], [38, "ivy.array.array.Array.zeros"], [39, "ivy.array.array.Array.zeros"]], "arraywithactivations (class in ivy.array.activations)": [[36, "ivy.array.activations.ArrayWithActivations"], [37, "ivy.array.activations.ArrayWithActivations"]], "gelu() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.gelu"], [37, "ivy.array.activations.ArrayWithActivations.gelu"]], "ivy.array.activations": [[36, "module-ivy.array.activations"]], "leaky_relu() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.leaky_relu"], [37, "ivy.array.activations.ArrayWithActivations.leaky_relu"]], "log_softmax() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.log_softmax"], [37, "ivy.array.activations.ArrayWithActivations.log_softmax"]], "mish() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.mish"], [37, "ivy.array.activations.ArrayWithActivations.mish"]], "relu() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.relu"], [37, "ivy.array.activations.ArrayWithActivations.relu"]], "sigmoid() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.sigmoid"], [37, "ivy.array.activations.ArrayWithActivations.sigmoid"]], "softmax() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.softmax"], [37, "ivy.array.activations.ArrayWithActivations.softmax"]], "softplus() (ivy.array.activations.arraywithactivations method)": [[36, "ivy.array.activations.ArrayWithActivations.softplus"], [37, "ivy.array.activations.ArrayWithActivations.softplus"]], "args_to_ivy() (in module ivy.array.conversions)": [[40, "ivy.array.conversions.args_to_ivy"], [41, "ivy.array.conversions.args_to_ivy"]], "args_to_native() (in module ivy.array.conversions)": [[40, "ivy.array.conversions.args_to_native"], [42, "ivy.array.conversions.args_to_native"]], "ivy.array.conversions": [[40, "module-ivy.array.conversions"]], "to_ivy() (in module ivy.array.conversions)": [[40, "ivy.array.conversions.to_ivy"], [43, "ivy.array.conversions.to_ivy"]], "to_native() (in module ivy.array.conversions)": [[40, "ivy.array.conversions.to_native"], [44, "ivy.array.conversions.to_native"]], "arraywithcreation (class in ivy.array.creation)": [[45, "ivy.array.creation.ArrayWithCreation"], [46, "ivy.array.creation.ArrayWithCreation"]], "asarray() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.asarray"], [46, "ivy.array.creation.ArrayWithCreation.asarray"]], "copy_array() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.copy_array"], [46, "ivy.array.creation.ArrayWithCreation.copy_array"]], "empty_like() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.empty_like"], [46, "ivy.array.creation.ArrayWithCreation.empty_like"]], "from_dlpack() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.from_dlpack"], [46, "ivy.array.creation.ArrayWithCreation.from_dlpack"]], "full_like() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.full_like"], [46, "ivy.array.creation.ArrayWithCreation.full_like"]], "ivy.array.creation": [[45, "module-ivy.array.creation"]], "linspace() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.linspace"], [46, "ivy.array.creation.ArrayWithCreation.linspace"]], "logspace() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.logspace"], [46, "ivy.array.creation.ArrayWithCreation.logspace"]], "meshgrid() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.meshgrid"], [46, "ivy.array.creation.ArrayWithCreation.meshgrid"]], "native_array() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.native_array"], [46, "ivy.array.creation.ArrayWithCreation.native_array"]], "one_hot() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.one_hot"], [46, "ivy.array.creation.ArrayWithCreation.one_hot"]], "ones_like() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.ones_like"], [46, "ivy.array.creation.ArrayWithCreation.ones_like"]], "tril() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.tril"], [46, "ivy.array.creation.ArrayWithCreation.tril"]], "triu() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.triu"], [46, "ivy.array.creation.ArrayWithCreation.triu"]], "zeros_like() (ivy.array.creation.arraywithcreation method)": [[45, "ivy.array.creation.ArrayWithCreation.zeros_like"], [46, "ivy.array.creation.ArrayWithCreation.zeros_like"]], "arraywithdatatypes (class in ivy.array.data_type)": [[47, "ivy.array.data_type.ArrayWithDataTypes"], [48, "ivy.array.data_type.ArrayWithDataTypes"]], "astype() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.astype"], [48, "ivy.array.data_type.ArrayWithDataTypes.astype"]], "broadcast_arrays() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"], [48, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"], [48, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"]], "can_cast() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.can_cast"], [48, "ivy.array.data_type.ArrayWithDataTypes.can_cast"]], "dtype() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.dtype"], [48, "ivy.array.data_type.ArrayWithDataTypes.dtype"]], "finfo() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.finfo"], [48, "ivy.array.data_type.ArrayWithDataTypes.finfo"]], "iinfo() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.iinfo"], [48, "ivy.array.data_type.ArrayWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"], [48, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"]], "is_float_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"], [48, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"], [48, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"], [48, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"]], "ivy.array.data_type": [[47, "module-ivy.array.data_type"]], "result_type() (ivy.array.data_type.arraywithdatatypes method)": [[47, "ivy.array.data_type.ArrayWithDataTypes.result_type"], [48, "ivy.array.data_type.ArrayWithDataTypes.result_type"]], "arraywithdevice (class in ivy.array.device)": [[49, "ivy.array.device.ArrayWithDevice"], [50, "ivy.array.device.ArrayWithDevice"]], "dev() (ivy.array.device.arraywithdevice method)": [[49, "ivy.array.device.ArrayWithDevice.dev"], [50, "ivy.array.device.ArrayWithDevice.dev"]], "ivy.array.device": [[49, "module-ivy.array.device"]], "to_device() (ivy.array.device.arraywithdevice method)": [[49, "ivy.array.device.ArrayWithDevice.to_device"], [50, "ivy.array.device.ArrayWithDevice.to_device"]], "arraywithelementwise (class in ivy.array.elementwise)": [[51, "ivy.array.elementwise.ArrayWithElementwise"], [52, "ivy.array.elementwise.ArrayWithElementwise"]], "abs() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.abs"], [52, "ivy.array.elementwise.ArrayWithElementwise.abs"]], "acos() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.acos"], [52, "ivy.array.elementwise.ArrayWithElementwise.acos"]], "acosh() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.acosh"], [52, "ivy.array.elementwise.ArrayWithElementwise.acosh"]], "add() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.add"], [52, "ivy.array.elementwise.ArrayWithElementwise.add"]], "asin() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.asin"], [52, "ivy.array.elementwise.ArrayWithElementwise.asin"]], "asinh() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.asinh"], [52, "ivy.array.elementwise.ArrayWithElementwise.asinh"]], "atan() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.atan"], [52, "ivy.array.elementwise.ArrayWithElementwise.atan"]], "atan2() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.atan2"], [52, "ivy.array.elementwise.ArrayWithElementwise.atan2"]], "atanh() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.atanh"], [52, "ivy.array.elementwise.ArrayWithElementwise.atanh"]], "bitwise_and() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"], [52, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"], [52, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"], [52, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"], [52, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"], [52, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"], [52, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"]], "ceil() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.ceil"], [52, "ivy.array.elementwise.ArrayWithElementwise.ceil"]], "cos() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.cos"], [52, "ivy.array.elementwise.ArrayWithElementwise.cos"]], "cosh() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.cosh"], [52, "ivy.array.elementwise.ArrayWithElementwise.cosh"]], "deg2rad() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"], [52, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"]], "divide() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.divide"], [52, "ivy.array.elementwise.ArrayWithElementwise.divide"]], "equal() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.equal"], [52, "ivy.array.elementwise.ArrayWithElementwise.equal"]], "erf() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.erf"], [52, "ivy.array.elementwise.ArrayWithElementwise.erf"]], "exp() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.exp"], [52, "ivy.array.elementwise.ArrayWithElementwise.exp"]], "expm1() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.expm1"], [52, "ivy.array.elementwise.ArrayWithElementwise.expm1"]], "floor() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.floor"], [52, "ivy.array.elementwise.ArrayWithElementwise.floor"]], "floor_divide() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"], [52, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"]], "greater() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.greater"], [52, "ivy.array.elementwise.ArrayWithElementwise.greater"]], "greater_equal() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"], [52, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"]], "isfinite() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.isfinite"], [52, "ivy.array.elementwise.ArrayWithElementwise.isfinite"]], "isinf() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.isinf"], [52, "ivy.array.elementwise.ArrayWithElementwise.isinf"]], "isnan() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.isnan"], [52, "ivy.array.elementwise.ArrayWithElementwise.isnan"]], "isreal() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.isreal"], [52, "ivy.array.elementwise.ArrayWithElementwise.isreal"]], "ivy.array.elementwise": [[51, "module-ivy.array.elementwise"]], "less() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.less"], [52, "ivy.array.elementwise.ArrayWithElementwise.less"]], "less_equal() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.less_equal"], [52, "ivy.array.elementwise.ArrayWithElementwise.less_equal"]], "log() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.log"], [52, "ivy.array.elementwise.ArrayWithElementwise.log"]], "log10() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.log10"], [52, "ivy.array.elementwise.ArrayWithElementwise.log10"]], "log1p() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.log1p"], [52, "ivy.array.elementwise.ArrayWithElementwise.log1p"]], "log2() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.log2"], [52, "ivy.array.elementwise.ArrayWithElementwise.log2"]], "logaddexp() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"], [52, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"]], "logical_and() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.logical_and"], [52, "ivy.array.elementwise.ArrayWithElementwise.logical_and"]], "logical_not() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.logical_not"], [52, "ivy.array.elementwise.ArrayWithElementwise.logical_not"]], "logical_or() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.logical_or"], [52, "ivy.array.elementwise.ArrayWithElementwise.logical_or"]], "logical_xor() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"], [52, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"]], "maximum() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.maximum"], [52, "ivy.array.elementwise.ArrayWithElementwise.maximum"]], "minimum() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.minimum"], [52, "ivy.array.elementwise.ArrayWithElementwise.minimum"]], "multiply() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.multiply"], [52, "ivy.array.elementwise.ArrayWithElementwise.multiply"]], "negative() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.negative"], [52, "ivy.array.elementwise.ArrayWithElementwise.negative"]], "not_equal() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.not_equal"], [52, "ivy.array.elementwise.ArrayWithElementwise.not_equal"]], "positive() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.positive"], [52, "ivy.array.elementwise.ArrayWithElementwise.positive"]], "pow() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.pow"], [52, "ivy.array.elementwise.ArrayWithElementwise.pow"]], "rad2deg() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"], [52, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"]], "reciprocal() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"], [52, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"]], "remainder() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.remainder"], [52, "ivy.array.elementwise.ArrayWithElementwise.remainder"]], "round() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.round"], [52, "ivy.array.elementwise.ArrayWithElementwise.round"]], "sign() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.sign"], [52, "ivy.array.elementwise.ArrayWithElementwise.sign"]], "sin() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.sin"], [52, "ivy.array.elementwise.ArrayWithElementwise.sin"]], "sinh() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.sinh"], [52, "ivy.array.elementwise.ArrayWithElementwise.sinh"]], "sqrt() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.sqrt"], [52, "ivy.array.elementwise.ArrayWithElementwise.sqrt"]], "square() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.square"], [52, "ivy.array.elementwise.ArrayWithElementwise.square"]], "subtract() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.subtract"], [52, "ivy.array.elementwise.ArrayWithElementwise.subtract"]], "tan() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.tan"], [52, "ivy.array.elementwise.ArrayWithElementwise.tan"]], "tanh() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.tanh"], [52, "ivy.array.elementwise.ArrayWithElementwise.tanh"]], "trunc() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.trunc"], [52, "ivy.array.elementwise.ArrayWithElementwise.trunc"]], "trunc_divide() (ivy.array.elementwise.arraywithelementwise method)": [[51, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"], [52, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"]], "arraywithactivationsexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithActivationsExperimental"]], "arraywithconversionsexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithConversionsExperimental"]], "arraywithcreationexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithCreationExperimental"]], "arraywithdata_typeexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithData_typeExperimental"]], "arraywithdeviceexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithDeviceExperimental"]], "arraywithelementwiseexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental"]], "arraywithgeneralexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithGeneralExperimental"]], "arraywithgradientsexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithGradientsExperimental"]], "arraywithimageexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithImageExperimental"]], "arraywithlayersexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental"]], "arraywithlinearalgebraexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental"]], "arraywithlossesexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithLossesExperimental"]], "arraywithmanipulationexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental"]], "arraywithnormsexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithNormsExperimental"]], "arraywithrandomexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithRandomExperimental"]], "arraywithsearchingexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithSearchingExperimental"]], "arraywithsetexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithSetExperimental"]], "arraywithsortingexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithSortingExperimental"]], "arraywithstatisticalexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental"]], "arraywithutilityexperimental (class in ivy.array.experimental)": [[53, "ivy.array.experimental.ArrayWithUtilityExperimental"]], "adjoint() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.allclose"]], "angle() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool3d"]], "bernoulli() (ivy.array.experimental.arraywithrandomexperimental method)": [[53, "ivy.array.experimental.ArrayWithRandomExperimental.bernoulli"]], "beta() (ivy.array.experimental.arraywithrandomexperimental method)": [[53, "ivy.array.experimental.ArrayWithRandomExperimental.beta"]], "binarizer() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.binarizer"]], "copysign() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.dct"]], "dft() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.dft"]], "diagflat() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.diff"]], "dirichlet() (ivy.array.experimental.arraywithrandomexperimental method)": [[53, "ivy.array.experimental.ArrayWithRandomExperimental.dirichlet"]], "dsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.dsplit"]], "dstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.dstack"]], "eig() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eig"]], "eigvals() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.embedding"]], "exp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.exp2"]], "expand() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.expand"]], "eye_like() (ivy.array.experimental.arraywithcreationexperimental method)": [[53, "ivy.array.experimental.ArrayWithCreationExperimental.eye_like"]], "fft() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.fft"]], "fix() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.fix"]], "flatten() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.flatten"]], "fliplr() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.fliplr"]], "flipud() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.flipud"]], "float_power() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.float_power"]], "fmax() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmax"]], "fmin() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmin"]], "fmod() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmod"]], "gamma() (ivy.array.experimental.arraywithrandomexperimental method)": [[53, "ivy.array.experimental.ArrayWithRandomExperimental.gamma"]], "gcd() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.gcd"]], "gradient() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.gradient"]], "heaviside() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.heaviside"]], "hsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.hsplit"]], "hstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.hstack"]], "hypot() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.hypot"]], "i0() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.i0"]], "ifft() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.ifft"]], "imag() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.imag"]], "instance_norm() (ivy.array.experimental.arraywithnormsexperimental method)": [[53, "ivy.array.experimental.ArrayWithNormsExperimental.instance_norm"]], "interpolate() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.interpolate"]], "isclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.isclose"]], "isin() (ivy.array.experimental.arraywithgeneralexperimental method)": [[53, "ivy.array.experimental.ArrayWithGeneralExperimental.isin"]], "kron() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.array.experimental.arraywithnormsexperimental method)": [[53, "ivy.array.experimental.ArrayWithNormsExperimental.l2_normalize"]], "lcm() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.lcm"]], "lexsort() (ivy.array.experimental.arraywithsortingexperimental method)": [[53, "ivy.array.experimental.ArrayWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.array.experimental.arraywithactivationsexperimental method)": [[53, "ivy.array.experimental.ArrayWithActivationsExperimental.logit"]], "lp_normalize() (ivy.array.experimental.arraywithnormsexperimental method)": [[53, "ivy.array.experimental.ArrayWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[53, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[53, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool3d"]], "median() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental.median"]], "moveaxis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.moveaxis"]], "msort() (ivy.array.experimental.arraywithsortingexperimental method)": [[53, "ivy.array.experimental.ArrayWithSortingExperimental.msort"]], "nan_to_num() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.nansum"]], "nextafter() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.nextafter"]], "pad() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.pad"]], "poisson() (ivy.array.experimental.arraywithrandomexperimental method)": [[53, "ivy.array.experimental.ArrayWithRandomExperimental.poisson"]], "prelu() (ivy.array.experimental.arraywithactivationsexperimental method)": [[53, "ivy.array.experimental.ArrayWithActivationsExperimental.prelu"]], "quantile() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental.quantile"]], "real() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.real"]], "rot90() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.rot90"]], "signbit() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.signbit"]], "sinc() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.sinc"]], "take_along_axis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.array.experimental.arraywithactivationsexperimental method)": [[53, "ivy.array.experimental.ArrayWithActivationsExperimental.thresholded_relu"]], "top_k() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.top_k"]], "trapz() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.trapz"]], "unravel_index() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[53, "ivy.array.experimental.ArrayWithStatisticalExperimental.unravel_index"]], "vsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.vsplit"]], "vstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[53, "ivy.array.experimental.ArrayWithManipulationExperimental.vstack"]], "xlogy() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.xlogy"]], "zeta() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[53, "ivy.array.experimental.ArrayWithElementWiseExperimental.zeta"]], "arraywithgeneral (class in ivy.array.general)": [[54, "ivy.array.general.ArrayWithGeneral"], [55, "ivy.array.general.ArrayWithGeneral"]], "all_equal() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.all_equal"], [55, "ivy.array.general.ArrayWithGeneral.all_equal"]], "array_equal() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.array_equal"], [55, "ivy.array.general.ArrayWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"], [55, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"], [55, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"], [55, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"]], "default() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.default"], [55, "ivy.array.general.ArrayWithGeneral.default"]], "einops_rearrange() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.einops_rearrange"], [55, "ivy.array.general.ArrayWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.einops_reduce"], [55, "ivy.array.general.ArrayWithGeneral.einops_reduce"]], "einops_repeat() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.einops_repeat"], [55, "ivy.array.general.ArrayWithGeneral.einops_repeat"]], "exists() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.exists"], [55, "ivy.array.general.ArrayWithGeneral.exists"]], "fourier_encode() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.fourier_encode"], [55, "ivy.array.general.ArrayWithGeneral.fourier_encode"]], "gather() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.gather"], [55, "ivy.array.general.ArrayWithGeneral.gather"]], "gather_nd() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.gather_nd"], [55, "ivy.array.general.ArrayWithGeneral.gather_nd"]], "get_num_dims() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.get_num_dims"], [55, "ivy.array.general.ArrayWithGeneral.get_num_dims"]], "has_nans() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.has_nans"], [55, "ivy.array.general.ArrayWithGeneral.has_nans"]], "inplace_decrement() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.inplace_decrement"], [55, "ivy.array.general.ArrayWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.inplace_increment"], [55, "ivy.array.general.ArrayWithGeneral.inplace_increment"]], "inplace_update() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.inplace_update"], [55, "ivy.array.general.ArrayWithGeneral.inplace_update"]], "is_array() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.is_array"], [55, "ivy.array.general.ArrayWithGeneral.is_array"]], "is_ivy_array() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.is_ivy_array"], [55, "ivy.array.general.ArrayWithGeneral.is_ivy_array"]], "is_ivy_container() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.is_ivy_container"], [55, "ivy.array.general.ArrayWithGeneral.is_ivy_container"]], "is_native_array() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.is_native_array"], [55, "ivy.array.general.ArrayWithGeneral.is_native_array"]], "ivy.array.general": [[54, "module-ivy.array.general"]], "scatter_flat() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.scatter_flat"], [55, "ivy.array.general.ArrayWithGeneral.scatter_flat"]], "scatter_nd() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.scatter_nd"], [55, "ivy.array.general.ArrayWithGeneral.scatter_nd"]], "stable_divide() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.stable_divide"], [55, "ivy.array.general.ArrayWithGeneral.stable_divide"]], "stable_pow() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.stable_pow"], [55, "ivy.array.general.ArrayWithGeneral.stable_pow"]], "supports_inplace_updates() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"], [55, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"]], "to_list() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.to_list"], [55, "ivy.array.general.ArrayWithGeneral.to_list"]], "to_numpy() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.to_numpy"], [55, "ivy.array.general.ArrayWithGeneral.to_numpy"]], "to_scalar() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.to_scalar"], [55, "ivy.array.general.ArrayWithGeneral.to_scalar"]], "value_is_nan() (ivy.array.general.arraywithgeneral method)": [[54, "ivy.array.general.ArrayWithGeneral.value_is_nan"], [55, "ivy.array.general.ArrayWithGeneral.value_is_nan"]], "arraywithgradients (class in ivy.array.gradients)": [[56, "ivy.array.gradients.ArrayWithGradients"], [57, "ivy.array.gradients.ArrayWithGradients"]], "adam_step() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.adam_step"], [57, "ivy.array.gradients.ArrayWithGradients.adam_step"]], "adam_update() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.adam_update"], [57, "ivy.array.gradients.ArrayWithGradients.adam_update"]], "gradient_descent_update() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"], [57, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"]], "ivy.array.gradients": [[56, "module-ivy.array.gradients"]], "lamb_update() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.lamb_update"], [57, "ivy.array.gradients.ArrayWithGradients.lamb_update"]], "lars_update() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.lars_update"], [57, "ivy.array.gradients.ArrayWithGradients.lars_update"]], "optimizer_update() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.optimizer_update"], [57, "ivy.array.gradients.ArrayWithGradients.optimizer_update"]], "stop_gradient() (ivy.array.gradients.arraywithgradients method)": [[56, "ivy.array.gradients.ArrayWithGradients.stop_gradient"], [57, "ivy.array.gradients.ArrayWithGradients.stop_gradient"]], "arraywithimage (class in ivy.array.image)": [[58, "ivy.array.image.ArrayWithImage"], [59, "ivy.array.image.ArrayWithImage"]], "ivy.array.image": [[58, "module-ivy.array.image"]], "arraywithlayers (class in ivy.array.layers)": [[60, "ivy.array.layers.ArrayWithLayers"], [61, "ivy.array.layers.ArrayWithLayers"]], "conv1d() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.conv1d"], [61, "ivy.array.layers.ArrayWithLayers.conv1d"]], "conv1d_transpose() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"], [61, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"]], "conv2d() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.conv2d"], [61, "ivy.array.layers.ArrayWithLayers.conv2d"]], "conv2d_transpose() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.conv2d_transpose"], [61, "ivy.array.layers.ArrayWithLayers.conv2d_transpose"]], "conv3d() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.conv3d"], [61, "ivy.array.layers.ArrayWithLayers.conv3d"]], "conv3d_transpose() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"], [61, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"], [61, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"]], "dropout() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.dropout"], [61, "ivy.array.layers.ArrayWithLayers.dropout"]], "dropout1d() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.dropout1d"], [61, "ivy.array.layers.ArrayWithLayers.dropout1d"]], "ivy.array.layers": [[60, "module-ivy.array.layers"]], "linear() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.linear"], [61, "ivy.array.layers.ArrayWithLayers.linear"]], "lstm_update() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.lstm_update"], [61, "ivy.array.layers.ArrayWithLayers.lstm_update"]], "multi_head_attention() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.multi_head_attention"], [61, "ivy.array.layers.ArrayWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.array.layers.arraywithlayers method)": [[60, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"], [61, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"]], "arraywithlinearalgebra (class in ivy.array.linear_algebra)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"]], "cholesky() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"]], "cross() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"]], "det() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"]], "diag() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"]], "diagonal() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"]], "eig() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"]], "eigh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"]], "inner() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"]], "inv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"]], "ivy.array.linear_algebra": [[62, "module-ivy.array.linear_algebra"]], "matmul() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"]], "pinv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"]], "qr() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"]], "slogdet() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"]], "solve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"]], "svd() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"]], "svdvals() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"]], "tensordot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"]], "trace() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"]], "vander() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"]], "vecdot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[62, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [63, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "arraywithlosses (class in ivy.array.losses)": [[64, "ivy.array.losses.ArrayWithLosses"], [65, "ivy.array.losses.ArrayWithLosses"]], "binary_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[64, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"], [65, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.array.losses.arraywithlosses method)": [[64, "ivy.array.losses.ArrayWithLosses.cross_entropy"], [65, "ivy.array.losses.ArrayWithLosses.cross_entropy"]], "ivy.array.losses": [[64, "module-ivy.array.losses"]], "sparse_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[64, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"], [65, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"]], "arraywithmanipulation (class in ivy.array.manipulation)": [[66, "ivy.array.manipulation.ArrayWithManipulation"], [67, "ivy.array.manipulation.ArrayWithManipulation"]], "clip() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.clip"], [67, "ivy.array.manipulation.ArrayWithManipulation.clip"]], "concat() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.concat"], [67, "ivy.array.manipulation.ArrayWithManipulation.concat"]], "constant_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"], [67, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"]], "expand_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"], [67, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"]], "flip() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.flip"], [67, "ivy.array.manipulation.ArrayWithManipulation.flip"]], "ivy.array.manipulation": [[66, "module-ivy.array.manipulation"]], "permute_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"], [67, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"]], "repeat() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.repeat"], [67, "ivy.array.manipulation.ArrayWithManipulation.repeat"]], "reshape() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.reshape"], [67, "ivy.array.manipulation.ArrayWithManipulation.reshape"]], "roll() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.roll"], [67, "ivy.array.manipulation.ArrayWithManipulation.roll"]], "split() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.split"], [67, "ivy.array.manipulation.ArrayWithManipulation.split"]], "squeeze() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.squeeze"], [67, "ivy.array.manipulation.ArrayWithManipulation.squeeze"]], "stack() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.stack"], [67, "ivy.array.manipulation.ArrayWithManipulation.stack"]], "swapaxes() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"], [67, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"]], "tile() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.tile"], [67, "ivy.array.manipulation.ArrayWithManipulation.tile"]], "unstack() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.unstack"], [67, "ivy.array.manipulation.ArrayWithManipulation.unstack"]], "zero_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[66, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"], [67, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"]], "arraywithnorms (class in ivy.array.norms)": [[68, "ivy.array.norms.ArrayWithNorms"], [69, "ivy.array.norms.ArrayWithNorms"]], "ivy.array.norms": [[68, "module-ivy.array.norms"]], "layer_norm() (ivy.array.norms.arraywithnorms method)": [[68, "ivy.array.norms.ArrayWithNorms.layer_norm"], [69, "ivy.array.norms.ArrayWithNorms.layer_norm"]], "arraywithrandom (class in ivy.array.random)": [[70, "ivy.array.random.ArrayWithRandom"], [71, "ivy.array.random.ArrayWithRandom"]], "ivy.array.random": [[70, "module-ivy.array.random"]], "multinomial() (ivy.array.random.arraywithrandom method)": [[70, "ivy.array.random.ArrayWithRandom.multinomial"], [71, "ivy.array.random.ArrayWithRandom.multinomial"]], "randint() (ivy.array.random.arraywithrandom method)": [[70, "ivy.array.random.ArrayWithRandom.randint"], [71, "ivy.array.random.ArrayWithRandom.randint"]], "random_normal() (ivy.array.random.arraywithrandom method)": [[70, "ivy.array.random.ArrayWithRandom.random_normal"], [71, "ivy.array.random.ArrayWithRandom.random_normal"]], "random_uniform() (ivy.array.random.arraywithrandom method)": [[70, "ivy.array.random.ArrayWithRandom.random_uniform"], [71, "ivy.array.random.ArrayWithRandom.random_uniform"]], "shuffle() (ivy.array.random.arraywithrandom method)": [[70, "ivy.array.random.ArrayWithRandom.shuffle"], [71, "ivy.array.random.ArrayWithRandom.shuffle"]], "arraywithsearching (class in ivy.array.searching)": [[72, "ivy.array.searching.ArrayWithSearching"], [73, "ivy.array.searching.ArrayWithSearching"]], "argmax() (ivy.array.searching.arraywithsearching method)": [[72, "ivy.array.searching.ArrayWithSearching.argmax"], [73, "ivy.array.searching.ArrayWithSearching.argmax"]], "argmin() (ivy.array.searching.arraywithsearching method)": [[72, "ivy.array.searching.ArrayWithSearching.argmin"], [73, "ivy.array.searching.ArrayWithSearching.argmin"]], "argwhere() (ivy.array.searching.arraywithsearching method)": [[72, "ivy.array.searching.ArrayWithSearching.argwhere"], [73, "ivy.array.searching.ArrayWithSearching.argwhere"]], "ivy.array.searching": [[72, "module-ivy.array.searching"]], "nonzero() (ivy.array.searching.arraywithsearching method)": [[72, "ivy.array.searching.ArrayWithSearching.nonzero"], [73, "ivy.array.searching.ArrayWithSearching.nonzero"]], "where() (ivy.array.searching.arraywithsearching method)": [[72, "ivy.array.searching.ArrayWithSearching.where"], [73, "ivy.array.searching.ArrayWithSearching.where"]], "arraywithset (class in ivy.array.set)": [[74, "ivy.array.set.ArrayWithSet"], [75, "ivy.array.set.ArrayWithSet"]], "ivy.array.set": [[74, "module-ivy.array.set"]], "unique_all() (ivy.array.set.arraywithset method)": [[74, "ivy.array.set.ArrayWithSet.unique_all"], [75, "ivy.array.set.ArrayWithSet.unique_all"]], "unique_counts() (ivy.array.set.arraywithset method)": [[74, "ivy.array.set.ArrayWithSet.unique_counts"], [75, "ivy.array.set.ArrayWithSet.unique_counts"]], "unique_inverse() (ivy.array.set.arraywithset method)": [[74, "ivy.array.set.ArrayWithSet.unique_inverse"], [75, "ivy.array.set.ArrayWithSet.unique_inverse"]], "unique_values() (ivy.array.set.arraywithset method)": [[74, "ivy.array.set.ArrayWithSet.unique_values"], [75, "ivy.array.set.ArrayWithSet.unique_values"]], "arraywithsorting (class in ivy.array.sorting)": [[76, "ivy.array.sorting.ArrayWithSorting"], [77, "ivy.array.sorting.ArrayWithSorting"]], "argsort() (ivy.array.sorting.arraywithsorting method)": [[76, "ivy.array.sorting.ArrayWithSorting.argsort"], [77, "ivy.array.sorting.ArrayWithSorting.argsort"]], "ivy.array.sorting": [[76, "module-ivy.array.sorting"]], "searchsorted() (ivy.array.sorting.arraywithsorting method)": [[76, "ivy.array.sorting.ArrayWithSorting.searchsorted"], [77, "ivy.array.sorting.ArrayWithSorting.searchsorted"]], "sort() (ivy.array.sorting.arraywithsorting method)": [[76, "ivy.array.sorting.ArrayWithSorting.sort"], [77, "ivy.array.sorting.ArrayWithSorting.sort"]], "arraywithstatistical (class in ivy.array.statistical)": [[78, "ivy.array.statistical.ArrayWithStatistical"], [79, "ivy.array.statistical.ArrayWithStatistical"]], "cumprod() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.cumprod"], [79, "ivy.array.statistical.ArrayWithStatistical.cumprod"]], "cumsum() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.cumsum"], [79, "ivy.array.statistical.ArrayWithStatistical.cumsum"]], "einsum() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.einsum"], [79, "ivy.array.statistical.ArrayWithStatistical.einsum"]], "ivy.array.statistical": [[78, "module-ivy.array.statistical"]], "max() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.max"], [79, "ivy.array.statistical.ArrayWithStatistical.max"]], "mean() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.mean"], [79, "ivy.array.statistical.ArrayWithStatistical.mean"]], "min() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.min"], [79, "ivy.array.statistical.ArrayWithStatistical.min"]], "prod() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.prod"], [79, "ivy.array.statistical.ArrayWithStatistical.prod"]], "std() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.std"], [79, "ivy.array.statistical.ArrayWithStatistical.std"]], "sum() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.sum"], [79, "ivy.array.statistical.ArrayWithStatistical.sum"]], "var() (ivy.array.statistical.arraywithstatistical method)": [[78, "ivy.array.statistical.ArrayWithStatistical.var"], [79, "ivy.array.statistical.ArrayWithStatistical.var"]], "arraywithutility (class in ivy.array.utility)": [[80, "ivy.array.utility.ArrayWithUtility"], [81, "ivy.array.utility.ArrayWithUtility"]], "all() (ivy.array.utility.arraywithutility method)": [[80, "ivy.array.utility.ArrayWithUtility.all"], [81, "ivy.array.utility.ArrayWithUtility.all"]], "any() (ivy.array.utility.arraywithutility method)": [[80, "ivy.array.utility.ArrayWithUtility.any"], [81, "ivy.array.utility.ArrayWithUtility.any"]], "ivy.array.utility": [[80, "module-ivy.array.utility"]], "add_ivy_array_instance_methods() (in module ivy.array.wrapping)": [[82, "ivy.array.wrapping.add_ivy_array_instance_methods"], [83, "ivy.array.wrapping.add_ivy_array_instance_methods"]], "ivy.array.wrapping": [[82, "module-ivy.array.wrapping"]], "container (class in ivy.container.container)": [[84, "ivy.container.container.Container"], [89, "ivy.container.container.Container"], [90, "ivy.container.container.Container"]], "__abs__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__abs__"], [89, "ivy.container.container.Container.__abs__"], [90, "ivy.container.container.Container.__abs__"]], "__add__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__add__"], [89, "ivy.container.container.Container.__add__"], [90, "ivy.container.container.Container.__add__"]], "__eq__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__eq__"], [89, "ivy.container.container.Container.__eq__"], [90, "ivy.container.container.Container.__eq__"]], "__ge__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__ge__"], [89, "ivy.container.container.Container.__ge__"], [90, "ivy.container.container.Container.__ge__"]], "__gt__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__gt__"], [89, "ivy.container.container.Container.__gt__"], [90, "ivy.container.container.Container.__gt__"]], "__init__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__init__"], [89, "ivy.container.container.Container.__init__"], [90, "ivy.container.container.Container.__init__"]], "__le__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__le__"], [89, "ivy.container.container.Container.__le__"], [90, "ivy.container.container.Container.__le__"]], "__lt__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__lt__"], [89, "ivy.container.container.Container.__lt__"], [90, "ivy.container.container.Container.__lt__"]], "__ne__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__ne__"], [89, "ivy.container.container.Container.__ne__"], [90, "ivy.container.container.Container.__ne__"]], "__pow__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__pow__"], [89, "ivy.container.container.Container.__pow__"], [90, "ivy.container.container.Container.__pow__"]], "__radd__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__radd__"], [89, "ivy.container.container.Container.__radd__"], [90, "ivy.container.container.Container.__radd__"]], "__rrshift__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__rrshift__"], [89, "ivy.container.container.Container.__rrshift__"], [90, "ivy.container.container.Container.__rrshift__"]], "__rshift__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__rshift__"], [89, "ivy.container.container.Container.__rshift__"], [90, "ivy.container.container.Container.__rshift__"]], "__rsub__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__rsub__"], [89, "ivy.container.container.Container.__rsub__"], [90, "ivy.container.container.Container.__rsub__"]], "__sub__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__sub__"], [89, "ivy.container.container.Container.__sub__"], [90, "ivy.container.container.Container.__sub__"]], "__truediv__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__truediv__"], [89, "ivy.container.container.Container.__truediv__"], [90, "ivy.container.container.Container.__truediv__"]], "__xor__() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.__xor__"], [89, "ivy.container.container.Container.__xor__"], [90, "ivy.container.container.Container.__xor__"]], "arange() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.arange"], [89, "ivy.container.container.Container.arange"], [90, "ivy.container.container.Container.arange"]], "arg_info() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.arg_info"], [89, "ivy.container.container.Container.arg_info"], [90, "ivy.container.container.Container.arg_info"]], "arg_names() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.arg_names"], [89, "ivy.container.container.Container.arg_names"], [90, "ivy.container.container.Container.arg_names"]], "array() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.array"], [89, "ivy.container.container.Container.array"], [90, "ivy.container.container.Container.array"]], "as_ivy_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.as_ivy_dev"], [89, "ivy.container.container.Container.as_ivy_dev"], [90, "ivy.container.container.Container.as_ivy_dev"]], "as_ivy_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.as_ivy_dtype"], [89, "ivy.container.container.Container.as_ivy_dtype"], [90, "ivy.container.container.Container.as_ivy_dtype"]], "as_native_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.as_native_dev"], [89, "ivy.container.container.Container.as_native_dev"], [90, "ivy.container.container.Container.as_native_dev"]], "as_native_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.as_native_dtype"], [89, "ivy.container.container.Container.as_native_dtype"], [90, "ivy.container.container.Container.as_native_dtype"]], "asarray() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.asarray"], [89, "ivy.container.container.Container.asarray"], [90, "ivy.container.container.Container.asarray"]], "asarray_handle_nestable() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.asarray_handle_nestable"], [89, "ivy.container.container.Container.asarray_handle_nestable"], [90, "ivy.container.container.Container.asarray_handle_nestable"]], "asarray_infer_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.asarray_infer_device"], [89, "ivy.container.container.Container.asarray_infer_device"], [90, "ivy.container.container.Container.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [89, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [90, "ivy.container.container.Container.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.cache_fn"], [89, "ivy.container.container.Container.cache_fn"], [90, "ivy.container.container.Container.cache_fn"]], "check_float() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.check_float"], [89, "ivy.container.container.Container.check_float"], [90, "ivy.container.container.Container.check_float"]], "clear_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.clear_mem_on_dev"], [89, "ivy.container.container.Container.clear_mem_on_dev"], [90, "ivy.container.container.Container.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.closest_valid_dtype"], [89, "ivy.container.container.Container.closest_valid_dtype"], [90, "ivy.container.container.Container.closest_valid_dtype"]], "container_types() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.container_types"], [89, "ivy.container.container.Container.container_types"], [90, "ivy.container.container.Container.container_types"]], "conv() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.conv"], [89, "ivy.container.container.Container.conv"], [90, "ivy.container.container.Container.conv"]], "conv_general_dilated() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.conv_general_dilated"], [89, "ivy.container.container.Container.conv_general_dilated"], [90, "ivy.container.container.Container.conv_general_dilated"]], "conv_general_transpose() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.conv_general_transpose"], [89, "ivy.container.container.Container.conv_general_transpose"], [90, "ivy.container.container.Container.conv_general_transpose"]], "copy_array() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.copy_array"], [89, "ivy.container.container.Container.copy_array"], [90, "ivy.container.container.Container.copy_array"]], "current_backend() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.current_backend"], [89, "ivy.container.container.Container.current_backend"], [90, "ivy.container.container.Container.current_backend"]], "current_backend_str() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.current_backend_str"], [89, "ivy.container.container.Container.current_backend_str"], [90, "ivy.container.container.Container.current_backend_str"]], "default() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default"], [89, "ivy.container.container.Container.default"], [90, "ivy.container.container.Container.default"]], "default_complex_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default_complex_dtype"], [89, "ivy.container.container.Container.default_complex_dtype"], [90, "ivy.container.container.Container.default_complex_dtype"]], "default_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default_device"], [89, "ivy.container.container.Container.default_device"], [90, "ivy.container.container.Container.default_device"]], "default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default_dtype"], [89, "ivy.container.container.Container.default_dtype"], [90, "ivy.container.container.Container.default_dtype"]], "default_float_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default_float_dtype"], [89, "ivy.container.container.Container.default_float_dtype"], [90, "ivy.container.container.Container.default_float_dtype"]], "default_int_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default_int_dtype"], [89, "ivy.container.container.Container.default_int_dtype"], [90, "ivy.container.container.Container.default_int_dtype"]], "default_uint_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.default_uint_dtype"], [89, "ivy.container.container.Container.default_uint_dtype"], [90, "ivy.container.container.Container.default_uint_dtype"]], "deserialize() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.deserialize"], [89, "ivy.container.container.Container.deserialize"], [90, "ivy.container.container.Container.deserialize"]], "dev_util() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.dev_util"], [89, "ivy.container.container.Container.dev_util"], [90, "ivy.container.container.Container.dev_util"]], "dtype_bits() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.dtype_bits"], [89, "ivy.container.container.Container.dtype_bits"], [90, "ivy.container.container.Container.dtype_bits"]], "empty() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.empty"], [89, "ivy.container.container.Container.empty"], [90, "ivy.container.container.Container.empty"]], "execute_with_gradients() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.execute_with_gradients"], [89, "ivy.container.container.Container.execute_with_gradients"], [90, "ivy.container.container.Container.execute_with_gradients"]], "exists() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.exists"], [89, "ivy.container.container.Container.exists"], [90, "ivy.container.container.Container.exists"]], "eye() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.eye"], [89, "ivy.container.container.Container.eye"], [90, "ivy.container.container.Container.eye"]], "full() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.full"], [89, "ivy.container.container.Container.full"], [90, "ivy.container.container.Container.full"]], "function_supported_devices() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.function_supported_devices"], [89, "ivy.container.container.Container.function_supported_devices"], [90, "ivy.container.container.Container.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [89, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [90, "ivy.container.container.Container.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.function_supported_dtypes"], [89, "ivy.container.container.Container.function_supported_dtypes"], [90, "ivy.container.container.Container.function_supported_dtypes"]], "function_unsupported_devices() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.function_unsupported_devices"], [89, "ivy.container.container.Container.function_unsupported_devices"], [90, "ivy.container.container.Container.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [89, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [90, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.function_unsupported_dtypes"], [89, "ivy.container.container.Container.function_unsupported_dtypes"], [90, "ivy.container.container.Container.function_unsupported_dtypes"]], "get_all_arrays_in_memory() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_all_arrays_in_memory"], [89, "ivy.container.container.Container.get_all_arrays_in_memory"], [90, "ivy.container.container.Container.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [89, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [90, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_array_mode"], [89, "ivy.container.container.Container.get_array_mode"], [90, "ivy.container.container.Container.get_array_mode"]], "get_exception_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_exception_trace_mode"], [89, "ivy.container.container.Container.get_exception_trace_mode"], [90, "ivy.container.container.Container.get_exception_trace_mode"]], "get_item() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_item"], [89, "ivy.container.container.Container.get_item"], [90, "ivy.container.container.Container.get_item"]], "get_min_base() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_min_base"], [89, "ivy.container.container.Container.get_min_base"], [90, "ivy.container.container.Container.get_min_base"]], "get_min_denominator() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_min_denominator"], [89, "ivy.container.container.Container.get_min_denominator"], [90, "ivy.container.container.Container.get_min_denominator"]], "get_nestable_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_nestable_mode"], [89, "ivy.container.container.Container.get_nestable_mode"], [90, "ivy.container.container.Container.get_nestable_mode"]], "get_queue_timeout() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_queue_timeout"], [89, "ivy.container.container.Container.get_queue_timeout"], [90, "ivy.container.container.Container.get_queue_timeout"]], "get_referrers_recursive() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_referrers_recursive"], [89, "ivy.container.container.Container.get_referrers_recursive"], [90, "ivy.container.container.Container.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [89, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [90, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.get_tmp_dir"], [89, "ivy.container.container.Container.get_tmp_dir"], [90, "ivy.container.container.Container.get_tmp_dir"]], "gpu_is_available() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.gpu_is_available"], [89, "ivy.container.container.Container.gpu_is_available"], [90, "ivy.container.container.Container.gpu_is_available"]], "grad() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.grad"], [89, "ivy.container.container.Container.grad"], [90, "ivy.container.container.Container.grad"]], "handle_array_function() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.handle_array_function"], [89, "ivy.container.container.Container.handle_array_function"], [90, "ivy.container.container.Container.handle_array_function"]], "handle_array_like_without_promotion() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.handle_array_like_without_promotion"], [89, "ivy.container.container.Container.handle_array_like_without_promotion"], [90, "ivy.container.container.Container.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.handle_exceptions"], [89, "ivy.container.container.Container.handle_exceptions"], [90, "ivy.container.container.Container.handle_exceptions"]], "handle_nestable() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.handle_nestable"], [89, "ivy.container.container.Container.handle_nestable"], [90, "ivy.container.container.Container.handle_nestable"]], "handle_out_argument() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.handle_out_argument"], [89, "ivy.container.container.Container.handle_out_argument"], [90, "ivy.container.container.Container.handle_out_argument"]], "infer_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.infer_default_dtype"], [89, "ivy.container.container.Container.infer_default_dtype"], [90, "ivy.container.container.Container.infer_default_dtype"]], "infer_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.infer_device"], [89, "ivy.container.container.Container.infer_device"], [90, "ivy.container.container.Container.infer_device"]], "infer_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.infer_dtype"], [89, "ivy.container.container.Container.infer_dtype"], [90, "ivy.container.container.Container.infer_dtype"]], "inplace_arrays_supported() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.inplace_arrays_supported"], [89, "ivy.container.container.Container.inplace_arrays_supported"], [90, "ivy.container.container.Container.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.inplace_variables_supported"], [89, "ivy.container.container.Container.inplace_variables_supported"], [90, "ivy.container.container.Container.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.inputs_to_ivy_arrays"], [89, "ivy.container.container.Container.inputs_to_ivy_arrays"], [90, "ivy.container.container.Container.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.inputs_to_native_arrays"], [89, "ivy.container.container.Container.inputs_to_native_arrays"], [90, "ivy.container.container.Container.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.integer_arrays_to_float"], [89, "ivy.container.container.Container.integer_arrays_to_float"], [90, "ivy.container.container.Container.integer_arrays_to_float"]], "invalid_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.invalid_dtype"], [89, "ivy.container.container.Container.invalid_dtype"], [90, "ivy.container.container.Container.invalid_dtype"]], "is_ivy_container() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.is_ivy_container"], [89, "ivy.container.container.Container.is_ivy_container"], [90, "ivy.container.container.Container.is_ivy_container"]], "isscalar() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.isscalar"], [89, "ivy.container.container.Container.isscalar"], [90, "ivy.container.container.Container.isscalar"]], "ivy.container.container": [[84, "module-ivy.container.container"], [89, "module-ivy.container.container"]], "jac() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.jac"], [89, "ivy.container.container.Container.jac"], [90, "ivy.container.container.Container.jac"]], "match_kwargs() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.match_kwargs"], [89, "ivy.container.container.Container.match_kwargs"], [90, "ivy.container.container.Container.match_kwargs"]], "multiprocessing() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.multiprocessing"], [89, "ivy.container.container.Container.multiprocessing"], [90, "ivy.container.container.Container.multiprocessing"]], "normalize_axis_tuple() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.normalize_axis_tuple"], [89, "ivy.container.container.Container.normalize_axis_tuple"], [90, "ivy.container.container.Container.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.num_arrays_in_memory"], [89, "ivy.container.container.Container.num_arrays_in_memory"], [90, "ivy.container.container.Container.num_arrays_in_memory"]], "num_cpu_cores() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.num_cpu_cores"], [89, "ivy.container.container.Container.num_cpu_cores"], [90, "ivy.container.container.Container.num_cpu_cores"]], "num_gpus() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.num_gpus"], [89, "ivy.container.container.Container.num_gpus"], [90, "ivy.container.container.Container.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [89, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [90, "ivy.container.container.Container.num_ivy_arrays_on_dev"]], "ones() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.ones"], [89, "ivy.container.container.Container.ones"], [90, "ivy.container.container.Container.ones"]], "outputs_to_ivy_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.outputs_to_ivy_arrays"], [89, "ivy.container.container.Container.outputs_to_ivy_arrays"], [90, "ivy.container.container.Container.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.percent_used_mem_on_dev"], [89, "ivy.container.container.Container.percent_used_mem_on_dev"], [90, "ivy.container.container.Container.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.print_all_arrays_in_memory"], [89, "ivy.container.container.Container.print_all_arrays_in_memory"], [90, "ivy.container.container.Container.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [89, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [90, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.promote_types"], [89, "ivy.container.container.Container.promote_types"], [90, "ivy.container.container.Container.promote_types"]], "promote_types_of_inputs() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.promote_types_of_inputs"], [89, "ivy.container.container.Container.promote_types_of_inputs"], [90, "ivy.container.container.Container.promote_types_of_inputs"]], "seed() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.seed"], [89, "ivy.container.container.Container.seed"], [90, "ivy.container.container.Container.seed"]], "set_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_array_mode"], [89, "ivy.container.container.Container.set_array_mode"], [90, "ivy.container.container.Container.set_array_mode"]], "set_default_complex_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_default_complex_dtype"], [89, "ivy.container.container.Container.set_default_complex_dtype"], [90, "ivy.container.container.Container.set_default_complex_dtype"]], "set_default_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_default_device"], [89, "ivy.container.container.Container.set_default_device"], [90, "ivy.container.container.Container.set_default_device"]], "set_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_default_dtype"], [89, "ivy.container.container.Container.set_default_dtype"], [90, "ivy.container.container.Container.set_default_dtype"]], "set_default_float_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_default_float_dtype"], [89, "ivy.container.container.Container.set_default_float_dtype"], [90, "ivy.container.container.Container.set_default_float_dtype"]], "set_default_int_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_default_int_dtype"], [89, "ivy.container.container.Container.set_default_int_dtype"], [90, "ivy.container.container.Container.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_default_uint_dtype"], [89, "ivy.container.container.Container.set_default_uint_dtype"], [90, "ivy.container.container.Container.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_exception_trace_mode"], [89, "ivy.container.container.Container.set_exception_trace_mode"], [90, "ivy.container.container.Container.set_exception_trace_mode"]], "set_min_base() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_min_base"], [89, "ivy.container.container.Container.set_min_base"], [90, "ivy.container.container.Container.set_min_base"]], "set_min_denominator() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_min_denominator"], [89, "ivy.container.container.Container.set_min_denominator"], [90, "ivy.container.container.Container.set_min_denominator"]], "set_nestable_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_nestable_mode"], [89, "ivy.container.container.Container.set_nestable_mode"], [90, "ivy.container.container.Container.set_nestable_mode"]], "set_queue_timeout() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_queue_timeout"], [89, "ivy.container.container.Container.set_queue_timeout"], [90, "ivy.container.container.Container.set_queue_timeout"]], "set_shape_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_shape_array_mode"], [89, "ivy.container.container.Container.set_shape_array_mode"], [90, "ivy.container.container.Container.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [89, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [90, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_split_factor"], [89, "ivy.container.container.Container.set_split_factor"], [90, "ivy.container.container.Container.set_split_factor"]], "set_tmp_dir() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_tmp_dir"], [89, "ivy.container.container.Container.set_tmp_dir"], [90, "ivy.container.container.Container.set_tmp_dir"]], "set_with_grads() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.set_with_grads"], [89, "ivy.container.container.Container.set_with_grads"], [90, "ivy.container.container.Container.set_with_grads"]], "shape_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.shape_array_mode"], [89, "ivy.container.container.Container.shape_array_mode"], [90, "ivy.container.container.Container.shape_array_mode"]], "split_factor() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.split_factor"], [89, "ivy.container.container.Container.split_factor"], [90, "ivy.container.container.Container.split_factor"]], "split_func_call() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.split_func_call"], [89, "ivy.container.container.Container.split_func_call"], [90, "ivy.container.container.Container.split_func_call"]], "static_adam_step() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_adam_step"], [89, "ivy.container.container.Container.static_adam_step"], [90, "ivy.container.container.Container.static_adam_step"]], "static_adam_update() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_adam_update"], [89, "ivy.container.container.Container.static_adam_update"], [90, "ivy.container.container.Container.static_adam_update"]], "static_arg_info() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_arg_info"], [89, "ivy.container.container.Container.static_arg_info"], [90, "ivy.container.container.Container.static_arg_info"]], "static_arg_names() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_arg_names"], [89, "ivy.container.container.Container.static_arg_names"], [90, "ivy.container.container.Container.static_arg_names"]], "static_array() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_array"], [89, "ivy.container.container.Container.static_array"], [90, "ivy.container.container.Container.static_array"]], "static_as_ivy_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_as_ivy_dev"], [89, "ivy.container.container.Container.static_as_ivy_dev"], [90, "ivy.container.container.Container.static_as_ivy_dev"]], "static_as_ivy_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_as_ivy_dtype"], [89, "ivy.container.container.Container.static_as_ivy_dtype"], [90, "ivy.container.container.Container.static_as_ivy_dtype"]], "static_as_native_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_as_native_dev"], [89, "ivy.container.container.Container.static_as_native_dev"], [90, "ivy.container.container.Container.static_as_native_dev"]], "static_as_native_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_as_native_dtype"], [89, "ivy.container.container.Container.static_as_native_dtype"], [90, "ivy.container.container.Container.static_as_native_dtype"]], "static_asarray_handle_nestable() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_asarray_handle_nestable"], [89, "ivy.container.container.Container.static_asarray_handle_nestable"], [90, "ivy.container.container.Container.static_asarray_handle_nestable"]], "static_asarray_infer_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_asarray_infer_device"], [89, "ivy.container.container.Container.static_asarray_infer_device"], [90, "ivy.container.container.Container.static_asarray_infer_device"]], "static_asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [89, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [90, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"]], "static_cache_fn() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_cache_fn"], [89, "ivy.container.container.Container.static_cache_fn"], [90, "ivy.container.container.Container.static_cache_fn"]], "static_check_float() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_check_float"], [89, "ivy.container.container.Container.static_check_float"], [90, "ivy.container.container.Container.static_check_float"]], "static_clear_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_clear_mem_on_dev"], [89, "ivy.container.container.Container.static_clear_mem_on_dev"], [90, "ivy.container.container.Container.static_clear_mem_on_dev"]], "static_closest_valid_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_closest_valid_dtype"], [89, "ivy.container.container.Container.static_closest_valid_dtype"], [90, "ivy.container.container.Container.static_closest_valid_dtype"]], "static_container_types() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_container_types"], [89, "ivy.container.container.Container.static_container_types"], [90, "ivy.container.container.Container.static_container_types"]], "static_conv() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_conv"], [89, "ivy.container.container.Container.static_conv"], [90, "ivy.container.container.Container.static_conv"]], "static_conv_general_dilated() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_conv_general_dilated"], [89, "ivy.container.container.Container.static_conv_general_dilated"], [90, "ivy.container.container.Container.static_conv_general_dilated"]], "static_conv_general_transpose() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_conv_general_transpose"], [89, "ivy.container.container.Container.static_conv_general_transpose"], [90, "ivy.container.container.Container.static_conv_general_transpose"]], "static_copy_array() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_copy_array"], [89, "ivy.container.container.Container.static_copy_array"], [90, "ivy.container.container.Container.static_copy_array"]], "static_current_backend() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_current_backend"], [89, "ivy.container.container.Container.static_current_backend"], [90, "ivy.container.container.Container.static_current_backend"]], "static_current_backend_str() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_current_backend_str"], [89, "ivy.container.container.Container.static_current_backend_str"], [90, "ivy.container.container.Container.static_current_backend_str"]], "static_default() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_default"], [89, "ivy.container.container.Container.static_default"], [90, "ivy.container.container.Container.static_default"]], "static_default_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_default_device"], [89, "ivy.container.container.Container.static_default_device"], [90, "ivy.container.container.Container.static_default_device"]], "static_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_default_dtype"], [89, "ivy.container.container.Container.static_default_dtype"], [90, "ivy.container.container.Container.static_default_dtype"]], "static_default_int_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_default_int_dtype"], [89, "ivy.container.container.Container.static_default_int_dtype"], [90, "ivy.container.container.Container.static_default_int_dtype"]], "static_default_uint_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_default_uint_dtype"], [89, "ivy.container.container.Container.static_default_uint_dtype"], [90, "ivy.container.container.Container.static_default_uint_dtype"]], "static_deserialize() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_deserialize"], [89, "ivy.container.container.Container.static_deserialize"], [90, "ivy.container.container.Container.static_deserialize"]], "static_dev_util() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_dev_util"], [89, "ivy.container.container.Container.static_dev_util"], [90, "ivy.container.container.Container.static_dev_util"]], "static_dtype_bits() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_dtype_bits"], [89, "ivy.container.container.Container.static_dtype_bits"], [90, "ivy.container.container.Container.static_dtype_bits"]], "static_einsum() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_einsum"], [89, "ivy.container.container.Container.static_einsum"], [90, "ivy.container.container.Container.static_einsum"]], "static_empty() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_empty"], [89, "ivy.container.container.Container.static_empty"], [90, "ivy.container.container.Container.static_empty"]], "static_execute_with_gradients() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_execute_with_gradients"], [89, "ivy.container.container.Container.static_execute_with_gradients"], [90, "ivy.container.container.Container.static_execute_with_gradients"]], "static_exists() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_exists"], [89, "ivy.container.container.Container.static_exists"], [90, "ivy.container.container.Container.static_exists"]], "static_full() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_full"], [89, "ivy.container.container.Container.static_full"], [90, "ivy.container.container.Container.static_full"]], "static_function_supported_devices() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_function_supported_devices"], [89, "ivy.container.container.Container.static_function_supported_devices"], [90, "ivy.container.container.Container.static_function_supported_devices"]], "static_function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [89, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [90, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"]], "static_function_unsupported_devices() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_function_unsupported_devices"], [89, "ivy.container.container.Container.static_function_unsupported_devices"], [90, "ivy.container.container.Container.static_function_unsupported_devices"]], "static_function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [89, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [90, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"]], "static_get() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get"], [89, "ivy.container.container.Container.static_get"], [90, "ivy.container.container.Container.static_get"]], "static_get_all_arrays_in_memory() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [89, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [90, "ivy.container.container.Container.static_get_all_arrays_in_memory"]], "static_get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [89, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [90, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"]], "static_get_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_array_mode"], [89, "ivy.container.container.Container.static_get_array_mode"], [90, "ivy.container.container.Container.static_get_array_mode"]], "static_get_exception_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_exception_trace_mode"], [89, "ivy.container.container.Container.static_get_exception_trace_mode"], [90, "ivy.container.container.Container.static_get_exception_trace_mode"]], "static_get_item() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_item"], [89, "ivy.container.container.Container.static_get_item"], [90, "ivy.container.container.Container.static_get_item"]], "static_get_min_base() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_min_base"], [89, "ivy.container.container.Container.static_get_min_base"], [90, "ivy.container.container.Container.static_get_min_base"]], "static_get_min_denominator() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_min_denominator"], [89, "ivy.container.container.Container.static_get_min_denominator"], [90, "ivy.container.container.Container.static_get_min_denominator"]], "static_get_nestable_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_nestable_mode"], [89, "ivy.container.container.Container.static_get_nestable_mode"], [90, "ivy.container.container.Container.static_get_nestable_mode"]], "static_get_queue_timeout() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_queue_timeout"], [89, "ivy.container.container.Container.static_get_queue_timeout"], [90, "ivy.container.container.Container.static_get_queue_timeout"]], "static_get_referrers_recursive() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_referrers_recursive"], [89, "ivy.container.container.Container.static_get_referrers_recursive"], [90, "ivy.container.container.Container.static_get_referrers_recursive"]], "static_get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [89, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [90, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"]], "static_get_tmp_dir() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_get_tmp_dir"], [89, "ivy.container.container.Container.static_get_tmp_dir"], [90, "ivy.container.container.Container.static_get_tmp_dir"]], "static_gpu_is_available() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_gpu_is_available"], [89, "ivy.container.container.Container.static_gpu_is_available"], [90, "ivy.container.container.Container.static_gpu_is_available"]], "static_grad() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_grad"], [89, "ivy.container.container.Container.static_grad"], [90, "ivy.container.container.Container.static_grad"]], "static_gradient_descent_update() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_gradient_descent_update"], [89, "ivy.container.container.Container.static_gradient_descent_update"], [90, "ivy.container.container.Container.static_gradient_descent_update"]], "static_handle_array_function() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_handle_array_function"], [89, "ivy.container.container.Container.static_handle_array_function"], [90, "ivy.container.container.Container.static_handle_array_function"]], "static_handle_array_like_without_promotion() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_handle_array_like_without_promotion"], [89, "ivy.container.container.Container.static_handle_array_like_without_promotion"], [90, "ivy.container.container.Container.static_handle_array_like_without_promotion"]], "static_handle_exceptions() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_handle_exceptions"], [89, "ivy.container.container.Container.static_handle_exceptions"], [90, "ivy.container.container.Container.static_handle_exceptions"]], "static_handle_nestable() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_handle_nestable"], [89, "ivy.container.container.Container.static_handle_nestable"], [90, "ivy.container.container.Container.static_handle_nestable"]], "static_handle_out_argument() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_handle_out_argument"], [89, "ivy.container.container.Container.static_handle_out_argument"], [90, "ivy.container.container.Container.static_handle_out_argument"]], "static_infer_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_infer_default_dtype"], [89, "ivy.container.container.Container.static_infer_default_dtype"], [90, "ivy.container.container.Container.static_infer_default_dtype"]], "static_infer_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_infer_device"], [89, "ivy.container.container.Container.static_infer_device"], [90, "ivy.container.container.Container.static_infer_device"]], "static_infer_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_infer_dtype"], [89, "ivy.container.container.Container.static_infer_dtype"], [90, "ivy.container.container.Container.static_infer_dtype"]], "static_inplace_arrays_supported() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_inplace_arrays_supported"], [89, "ivy.container.container.Container.static_inplace_arrays_supported"], [90, "ivy.container.container.Container.static_inplace_arrays_supported"]], "static_inplace_variables_supported() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_inplace_variables_supported"], [89, "ivy.container.container.Container.static_inplace_variables_supported"], [90, "ivy.container.container.Container.static_inplace_variables_supported"]], "static_inputs_to_ivy_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [89, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [90, "ivy.container.container.Container.static_inputs_to_ivy_arrays"]], "static_inputs_to_native_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_inputs_to_native_arrays"], [89, "ivy.container.container.Container.static_inputs_to_native_arrays"], [90, "ivy.container.container.Container.static_inputs_to_native_arrays"]], "static_integer_arrays_to_float() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_integer_arrays_to_float"], [89, "ivy.container.container.Container.static_integer_arrays_to_float"], [90, "ivy.container.container.Container.static_integer_arrays_to_float"]], "static_invalid_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_invalid_dtype"], [89, "ivy.container.container.Container.static_invalid_dtype"], [90, "ivy.container.container.Container.static_invalid_dtype"]], "static_is_ivy_container() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_is_ivy_container"], [89, "ivy.container.container.Container.static_is_ivy_container"], [90, "ivy.container.container.Container.static_is_ivy_container"]], "static_isscalar() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_isscalar"], [89, "ivy.container.container.Container.static_isscalar"], [90, "ivy.container.container.Container.static_isscalar"]], "static_jac() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_jac"], [89, "ivy.container.container.Container.static_jac"], [90, "ivy.container.container.Container.static_jac"]], "static_lamb_update() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_lamb_update"], [89, "ivy.container.container.Container.static_lamb_update"], [90, "ivy.container.container.Container.static_lamb_update"]], "static_lars_update() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_lars_update"], [89, "ivy.container.container.Container.static_lars_update"], [90, "ivy.container.container.Container.static_lars_update"]], "static_layer_norm() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_layer_norm"], [89, "ivy.container.container.Container.static_layer_norm"], [90, "ivy.container.container.Container.static_layer_norm"]], "static_match_kwargs() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_match_kwargs"], [89, "ivy.container.container.Container.static_match_kwargs"], [90, "ivy.container.container.Container.static_match_kwargs"]], "static_max() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_max"], [89, "ivy.container.container.Container.static_max"], [90, "ivy.container.container.Container.static_max"]], "static_mean() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_mean"], [89, "ivy.container.container.Container.static_mean"], [90, "ivy.container.container.Container.static_mean"]], "static_min() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_min"], [89, "ivy.container.container.Container.static_min"], [90, "ivy.container.container.Container.static_min"]], "static_multiprocessing() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_multiprocessing"], [89, "ivy.container.container.Container.static_multiprocessing"], [90, "ivy.container.container.Container.static_multiprocessing"]], "static_normalize_axis_tuple() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_normalize_axis_tuple"], [89, "ivy.container.container.Container.static_normalize_axis_tuple"], [90, "ivy.container.container.Container.static_normalize_axis_tuple"]], "static_num_arrays_in_memory() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_num_arrays_in_memory"], [89, "ivy.container.container.Container.static_num_arrays_in_memory"], [90, "ivy.container.container.Container.static_num_arrays_in_memory"]], "static_num_cpu_cores() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_num_cpu_cores"], [89, "ivy.container.container.Container.static_num_cpu_cores"], [90, "ivy.container.container.Container.static_num_cpu_cores"]], "static_num_gpus() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_num_gpus"], [89, "ivy.container.container.Container.static_num_gpus"], [90, "ivy.container.container.Container.static_num_gpus"]], "static_num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [89, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [90, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"]], "static_optimizer_update() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_optimizer_update"], [89, "ivy.container.container.Container.static_optimizer_update"], [90, "ivy.container.container.Container.static_optimizer_update"]], "static_outputs_to_ivy_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [89, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [90, "ivy.container.container.Container.static_outputs_to_ivy_arrays"]], "static_percent_used_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [89, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [90, "ivy.container.container.Container.static_percent_used_mem_on_dev"]], "static_print_all_arrays_in_memory() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [89, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [90, "ivy.container.container.Container.static_print_all_arrays_in_memory"]], "static_print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [89, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [90, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"]], "static_promote_types() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_promote_types"], [89, "ivy.container.container.Container.static_promote_types"], [90, "ivy.container.container.Container.static_promote_types"]], "static_promote_types_of_inputs() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_promote_types_of_inputs"], [89, "ivy.container.container.Container.static_promote_types_of_inputs"], [90, "ivy.container.container.Container.static_promote_types_of_inputs"]], "static_seed() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_seed"], [89, "ivy.container.container.Container.static_seed"], [90, "ivy.container.container.Container.static_seed"]], "static_set_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_array_mode"], [89, "ivy.container.container.Container.static_set_array_mode"], [90, "ivy.container.container.Container.static_set_array_mode"]], "static_set_default_complex_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_default_complex_dtype"], [89, "ivy.container.container.Container.static_set_default_complex_dtype"], [90, "ivy.container.container.Container.static_set_default_complex_dtype"]], "static_set_default_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_default_device"], [89, "ivy.container.container.Container.static_set_default_device"], [90, "ivy.container.container.Container.static_set_default_device"]], "static_set_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_default_dtype"], [89, "ivy.container.container.Container.static_set_default_dtype"], [90, "ivy.container.container.Container.static_set_default_dtype"]], "static_set_default_float_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_default_float_dtype"], [89, "ivy.container.container.Container.static_set_default_float_dtype"], [90, "ivy.container.container.Container.static_set_default_float_dtype"]], "static_set_default_int_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_default_int_dtype"], [89, "ivy.container.container.Container.static_set_default_int_dtype"], [90, "ivy.container.container.Container.static_set_default_int_dtype"]], "static_set_default_uint_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_default_uint_dtype"], [89, "ivy.container.container.Container.static_set_default_uint_dtype"], [90, "ivy.container.container.Container.static_set_default_uint_dtype"]], "static_set_exception_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_exception_trace_mode"], [89, "ivy.container.container.Container.static_set_exception_trace_mode"], [90, "ivy.container.container.Container.static_set_exception_trace_mode"]], "static_set_min_base() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_min_base"], [89, "ivy.container.container.Container.static_set_min_base"], [90, "ivy.container.container.Container.static_set_min_base"]], "static_set_min_denominator() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_min_denominator"], [89, "ivy.container.container.Container.static_set_min_denominator"], [90, "ivy.container.container.Container.static_set_min_denominator"]], "static_set_nestable_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_nestable_mode"], [89, "ivy.container.container.Container.static_set_nestable_mode"], [90, "ivy.container.container.Container.static_set_nestable_mode"]], "static_set_queue_timeout() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_queue_timeout"], [89, "ivy.container.container.Container.static_set_queue_timeout"], [90, "ivy.container.container.Container.static_set_queue_timeout"]], "static_set_shape_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_shape_array_mode"], [89, "ivy.container.container.Container.static_set_shape_array_mode"], [90, "ivy.container.container.Container.static_set_shape_array_mode"]], "static_set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [89, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [90, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"]], "static_set_split_factor() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_split_factor"], [89, "ivy.container.container.Container.static_set_split_factor"], [90, "ivy.container.container.Container.static_set_split_factor"]], "static_set_tmp_dir() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_tmp_dir"], [89, "ivy.container.container.Container.static_set_tmp_dir"], [90, "ivy.container.container.Container.static_set_tmp_dir"]], "static_set_with_grads() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_set_with_grads"], [89, "ivy.container.container.Container.static_set_with_grads"], [90, "ivy.container.container.Container.static_set_with_grads"]], "static_shape() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_shape"], [89, "ivy.container.container.Container.static_shape"], [90, "ivy.container.container.Container.static_shape"]], "static_shape_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_shape_array_mode"], [89, "ivy.container.container.Container.static_shape_array_mode"], [90, "ivy.container.container.Container.static_shape_array_mode"]], "static_split_factor() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_split_factor"], [89, "ivy.container.container.Container.static_split_factor"], [90, "ivy.container.container.Container.static_split_factor"]], "static_split_func_call() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_split_func_call"], [89, "ivy.container.container.Container.static_split_func_call"], [90, "ivy.container.container.Container.static_split_func_call"]], "static_std() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_std"], [89, "ivy.container.container.Container.static_std"], [90, "ivy.container.container.Container.static_std"]], "static_tensorsolve() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_tensorsolve"], [89, "ivy.container.container.Container.static_tensorsolve"], [90, "ivy.container.container.Container.static_tensorsolve"]], "static_to_ivy_shape() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_to_ivy_shape"], [89, "ivy.container.container.Container.static_to_ivy_shape"], [90, "ivy.container.container.Container.static_to_ivy_shape"]], "static_to_native_arrays_and_back() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_to_native_arrays_and_back"], [89, "ivy.container.container.Container.static_to_native_arrays_and_back"], [90, "ivy.container.container.Container.static_to_native_arrays_and_back"]], "static_to_native_shape() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_to_native_shape"], [89, "ivy.container.container.Container.static_to_native_shape"], [90, "ivy.container.container.Container.static_to_native_shape"]], "static_total_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_total_mem_on_dev"], [89, "ivy.container.container.Container.static_total_mem_on_dev"], [90, "ivy.container.container.Container.static_total_mem_on_dev"]], "static_tpu_is_available() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_tpu_is_available"], [89, "ivy.container.container.Container.static_tpu_is_available"], [90, "ivy.container.container.Container.static_tpu_is_available"]], "static_try_else_none() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_try_else_none"], [89, "ivy.container.container.Container.static_try_else_none"], [90, "ivy.container.container.Container.static_try_else_none"]], "static_type_promote_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_type_promote_arrays"], [89, "ivy.container.container.Container.static_type_promote_arrays"], [90, "ivy.container.container.Container.static_type_promote_arrays"]], "static_unset_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_array_mode"], [89, "ivy.container.container.Container.static_unset_array_mode"], [90, "ivy.container.container.Container.static_unset_array_mode"]], "static_unset_default_complex_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_default_complex_dtype"], [89, "ivy.container.container.Container.static_unset_default_complex_dtype"], [90, "ivy.container.container.Container.static_unset_default_complex_dtype"]], "static_unset_default_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_default_device"], [89, "ivy.container.container.Container.static_unset_default_device"], [90, "ivy.container.container.Container.static_unset_default_device"]], "static_unset_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_default_dtype"], [89, "ivy.container.container.Container.static_unset_default_dtype"], [90, "ivy.container.container.Container.static_unset_default_dtype"]], "static_unset_default_float_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_default_float_dtype"], [89, "ivy.container.container.Container.static_unset_default_float_dtype"], [90, "ivy.container.container.Container.static_unset_default_float_dtype"]], "static_unset_default_int_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_default_int_dtype"], [89, "ivy.container.container.Container.static_unset_default_int_dtype"], [90, "ivy.container.container.Container.static_unset_default_int_dtype"]], "static_unset_default_uint_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_default_uint_dtype"], [89, "ivy.container.container.Container.static_unset_default_uint_dtype"], [90, "ivy.container.container.Container.static_unset_default_uint_dtype"]], "static_unset_exception_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_exception_trace_mode"], [89, "ivy.container.container.Container.static_unset_exception_trace_mode"], [90, "ivy.container.container.Container.static_unset_exception_trace_mode"]], "static_unset_nestable_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_nestable_mode"], [89, "ivy.container.container.Container.static_unset_nestable_mode"], [90, "ivy.container.container.Container.static_unset_nestable_mode"]], "static_unset_queue_timeout() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_queue_timeout"], [89, "ivy.container.container.Container.static_unset_queue_timeout"], [90, "ivy.container.container.Container.static_unset_queue_timeout"]], "static_unset_shape_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_shape_array_mode"], [89, "ivy.container.container.Container.static_unset_shape_array_mode"], [90, "ivy.container.container.Container.static_unset_shape_array_mode"]], "static_unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [89, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [90, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"]], "static_unset_with_grads() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_unset_with_grads"], [89, "ivy.container.container.Container.static_unset_with_grads"], [90, "ivy.container.container.Container.static_unset_with_grads"]], "static_used_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_used_mem_on_dev"], [89, "ivy.container.container.Container.static_used_mem_on_dev"], [90, "ivy.container.container.Container.static_used_mem_on_dev"]], "static_valid_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_valid_dtype"], [89, "ivy.container.container.Container.static_valid_dtype"], [90, "ivy.container.container.Container.static_valid_dtype"]], "static_value_and_grad() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_value_and_grad"], [89, "ivy.container.container.Container.static_value_and_grad"], [90, "ivy.container.container.Container.static_value_and_grad"]], "static_vmap() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_vmap"], [89, "ivy.container.container.Container.static_vmap"], [90, "ivy.container.container.Container.static_vmap"]], "static_with_grads() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_with_grads"], [89, "ivy.container.container.Container.static_with_grads"], [90, "ivy.container.container.Container.static_with_grads"]], "static_wraps() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.static_wraps"], [89, "ivy.container.container.Container.static_wraps"], [90, "ivy.container.container.Container.static_wraps"]], "to_ivy_shape() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.to_ivy_shape"], [89, "ivy.container.container.Container.to_ivy_shape"], [90, "ivy.container.container.Container.to_ivy_shape"]], "to_native_arrays_and_back() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.to_native_arrays_and_back"], [89, "ivy.container.container.Container.to_native_arrays_and_back"], [90, "ivy.container.container.Container.to_native_arrays_and_back"]], "to_native_shape() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.to_native_shape"], [89, "ivy.container.container.Container.to_native_shape"], [90, "ivy.container.container.Container.to_native_shape"]], "total_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.total_mem_on_dev"], [89, "ivy.container.container.Container.total_mem_on_dev"], [90, "ivy.container.container.Container.total_mem_on_dev"]], "tpu_is_available() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.tpu_is_available"], [89, "ivy.container.container.Container.tpu_is_available"], [90, "ivy.container.container.Container.tpu_is_available"]], "try_else_none() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.try_else_none"], [89, "ivy.container.container.Container.try_else_none"], [90, "ivy.container.container.Container.try_else_none"]], "type_promote_arrays() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.type_promote_arrays"], [89, "ivy.container.container.Container.type_promote_arrays"], [90, "ivy.container.container.Container.type_promote_arrays"]], "unset_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_array_mode"], [89, "ivy.container.container.Container.unset_array_mode"], [90, "ivy.container.container.Container.unset_array_mode"]], "unset_default_complex_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_default_complex_dtype"], [89, "ivy.container.container.Container.unset_default_complex_dtype"], [90, "ivy.container.container.Container.unset_default_complex_dtype"]], "unset_default_device() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_default_device"], [89, "ivy.container.container.Container.unset_default_device"], [90, "ivy.container.container.Container.unset_default_device"]], "unset_default_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_default_dtype"], [89, "ivy.container.container.Container.unset_default_dtype"], [90, "ivy.container.container.Container.unset_default_dtype"]], "unset_default_float_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_default_float_dtype"], [89, "ivy.container.container.Container.unset_default_float_dtype"], [90, "ivy.container.container.Container.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_default_int_dtype"], [89, "ivy.container.container.Container.unset_default_int_dtype"], [90, "ivy.container.container.Container.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_default_uint_dtype"], [89, "ivy.container.container.Container.unset_default_uint_dtype"], [90, "ivy.container.container.Container.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_exception_trace_mode"], [89, "ivy.container.container.Container.unset_exception_trace_mode"], [90, "ivy.container.container.Container.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_nestable_mode"], [89, "ivy.container.container.Container.unset_nestable_mode"], [90, "ivy.container.container.Container.unset_nestable_mode"]], "unset_queue_timeout() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_queue_timeout"], [89, "ivy.container.container.Container.unset_queue_timeout"], [90, "ivy.container.container.Container.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_shape_array_mode"], [89, "ivy.container.container.Container.unset_shape_array_mode"], [90, "ivy.container.container.Container.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [89, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [90, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.unset_with_grads"], [89, "ivy.container.container.Container.unset_with_grads"], [90, "ivy.container.container.Container.unset_with_grads"]], "used_mem_on_dev() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.used_mem_on_dev"], [89, "ivy.container.container.Container.used_mem_on_dev"], [90, "ivy.container.container.Container.used_mem_on_dev"]], "valid_dtype() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.valid_dtype"], [89, "ivy.container.container.Container.valid_dtype"], [90, "ivy.container.container.Container.valid_dtype"]], "value_and_grad() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.value_and_grad"], [89, "ivy.container.container.Container.value_and_grad"], [90, "ivy.container.container.Container.value_and_grad"]], "vmap() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.vmap"], [89, "ivy.container.container.Container.vmap"], [90, "ivy.container.container.Container.vmap"]], "with_grads() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.with_grads"], [89, "ivy.container.container.Container.with_grads"], [90, "ivy.container.container.Container.with_grads"]], "wraps() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.wraps"], [89, "ivy.container.container.Container.wraps"], [90, "ivy.container.container.Container.wraps"]], "zeros() (ivy.container.container.container method)": [[84, "ivy.container.container.Container.zeros"], [89, "ivy.container.container.Container.zeros"], [90, "ivy.container.container.Container.zeros"]], "containerwithactivations (class in ivy.container.activations)": [[85, "ivy.container.activations.ContainerWithActivations"], [86, "ivy.container.activations.ContainerWithActivations"]], "gelu() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.gelu"], [86, "ivy.container.activations.ContainerWithActivations.gelu"]], "ivy.container.activations": [[85, "module-ivy.container.activations"]], "leaky_relu() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.leaky_relu"], [86, "ivy.container.activations.ContainerWithActivations.leaky_relu"]], "log_softmax() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.log_softmax"], [86, "ivy.container.activations.ContainerWithActivations.log_softmax"]], "mish() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.mish"], [86, "ivy.container.activations.ContainerWithActivations.mish"]], "relu() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.relu"], [86, "ivy.container.activations.ContainerWithActivations.relu"]], "sigmoid() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.sigmoid"], [86, "ivy.container.activations.ContainerWithActivations.sigmoid"]], "softmax() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.softmax"], [86, "ivy.container.activations.ContainerWithActivations.softmax"]], "softplus() (ivy.container.activations.containerwithactivations method)": [[85, "ivy.container.activations.ContainerWithActivations.softplus"], [86, "ivy.container.activations.ContainerWithActivations.softplus"]], "static_gelu() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_gelu"], [86, "ivy.container.activations.ContainerWithActivations.static_gelu"]], "static_leaky_relu() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"], [86, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"]], "static_log_softmax() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_log_softmax"], [86, "ivy.container.activations.ContainerWithActivations.static_log_softmax"]], "static_mish() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_mish"], [86, "ivy.container.activations.ContainerWithActivations.static_mish"]], "static_relu() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_relu"], [86, "ivy.container.activations.ContainerWithActivations.static_relu"]], "static_sigmoid() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_sigmoid"], [86, "ivy.container.activations.ContainerWithActivations.static_sigmoid"]], "static_softmax() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_softmax"], [86, "ivy.container.activations.ContainerWithActivations.static_softmax"]], "static_softplus() (ivy.container.activations.containerwithactivations static method)": [[85, "ivy.container.activations.ContainerWithActivations.static_softplus"], [86, "ivy.container.activations.ContainerWithActivations.static_softplus"]], "containerbase (class in ivy.container.base)": [[87, "ivy.container.base.ContainerBase"], [88, "ivy.container.base.ContainerBase"]], "__getitem__() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.__getitem__"], [88, "ivy.container.base.ContainerBase.__getitem__"]], "__init__() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.__init__"], [88, "ivy.container.base.ContainerBase.__init__"]], "__setitem__() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.__setitem__"], [88, "ivy.container.base.ContainerBase.__setitem__"]], "cont_all_false() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_all_false"], [88, "ivy.container.base.ContainerBase.cont_all_false"]], "cont_all_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_all_key_chains"], [88, "ivy.container.base.ContainerBase.cont_all_key_chains"]], "cont_all_true() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_all_true"], [88, "ivy.container.base.ContainerBase.cont_all_true"]], "cont_as_bools() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_as_bools"], [88, "ivy.container.base.ContainerBase.cont_as_bools"]], "cont_assert_contains_sub_container() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"], [88, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"]], "cont_assert_contains_sub_structure() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"], [88, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"]], "cont_assert_identical() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_assert_identical"], [88, "ivy.container.base.ContainerBase.cont_assert_identical"]], "cont_assert_identical_structure() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_assert_identical_structure"], [88, "ivy.container.base.ContainerBase.cont_assert_identical_structure"]], "cont_at_key_chain() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_at_key_chain"], [88, "ivy.container.base.ContainerBase.cont_at_key_chain"]], "cont_at_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_at_key_chains"], [88, "ivy.container.base.ContainerBase.cont_at_key_chains"]], "cont_at_keys() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_at_keys"], [88, "ivy.container.base.ContainerBase.cont_at_keys"]], "cont_combine() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_combine"], [88, "ivy.container.base.ContainerBase.cont_combine"]], "cont_common_key_chains() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_common_key_chains"], [88, "ivy.container.base.ContainerBase.cont_common_key_chains"]], "cont_config (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_config"], [88, "ivy.container.base.ContainerBase.cont_config"]], "cont_contains_sub_container() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_contains_sub_container"], [88, "ivy.container.base.ContainerBase.cont_contains_sub_container"]], "cont_contains_sub_structure() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_contains_sub_structure"], [88, "ivy.container.base.ContainerBase.cont_contains_sub_structure"]], "cont_copy() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_copy"], [88, "ivy.container.base.ContainerBase.cont_copy"]], "cont_create_if_absent() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_create_if_absent"], [88, "ivy.container.base.ContainerBase.cont_create_if_absent"]], "cont_cutoff_at_depth() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"], [88, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"]], "cont_cutoff_at_height() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_cutoff_at_height"], [88, "ivy.container.base.ContainerBase.cont_cutoff_at_height"]], "cont_deep_copy() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_deep_copy"], [88, "ivy.container.base.ContainerBase.cont_deep_copy"]], "cont_dev (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_dev"], [88, "ivy.container.base.ContainerBase.cont_dev"]], "cont_dev_str (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_dev_str"], [88, "ivy.container.base.ContainerBase.cont_dev_str"]], "cont_diff() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_diff"], [88, "ivy.container.base.ContainerBase.cont_diff"]], "cont_duplicate_array_keychains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"], [88, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"]], "cont_find_sub_container() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_find_sub_container"], [88, "ivy.container.base.ContainerBase.cont_find_sub_container"]], "cont_find_sub_structure() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_find_sub_structure"], [88, "ivy.container.base.ContainerBase.cont_find_sub_structure"]], "cont_flatten_key_chain() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_flatten_key_chain"], [88, "ivy.container.base.ContainerBase.cont_flatten_key_chain"]], "cont_flatten_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_flatten_key_chains"], [88, "ivy.container.base.ContainerBase.cont_flatten_key_chains"]], "cont_format_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_format_key_chains"], [88, "ivy.container.base.ContainerBase.cont_format_key_chains"]], "cont_from_disk_as_hdf5() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"], [88, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"]], "cont_from_disk_as_json() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_from_disk_as_json"], [88, "ivy.container.base.ContainerBase.cont_from_disk_as_json"]], "cont_from_disk_as_pickled() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"], [88, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"]], "cont_from_flat_list() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_from_flat_list"], [88, "ivy.container.base.ContainerBase.cont_from_flat_list"]], "cont_handle_inplace() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_handle_inplace"], [88, "ivy.container.base.ContainerBase.cont_handle_inplace"]], "cont_has_key() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_has_key"], [88, "ivy.container.base.ContainerBase.cont_has_key"]], "cont_has_key_chain() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_has_key_chain"], [88, "ivy.container.base.ContainerBase.cont_has_key_chain"]], "cont_identical() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_identical"], [88, "ivy.container.base.ContainerBase.cont_identical"]], "cont_identical_array_shapes() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_identical_array_shapes"], [88, "ivy.container.base.ContainerBase.cont_identical_array_shapes"]], "cont_identical_configs() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_identical_configs"], [88, "ivy.container.base.ContainerBase.cont_identical_configs"]], "cont_identical_structure() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_identical_structure"], [88, "ivy.container.base.ContainerBase.cont_identical_structure"]], "cont_if_exists() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_if_exists"], [88, "ivy.container.base.ContainerBase.cont_if_exists"]], "cont_inplace_update() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_inplace_update"], [88, "ivy.container.base.ContainerBase.cont_inplace_update"]], "cont_ivy (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_ivy"], [88, "ivy.container.base.ContainerBase.cont_ivy"]], "cont_key_chains_containing() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_key_chains_containing"], [88, "ivy.container.base.ContainerBase.cont_key_chains_containing"]], "cont_list_join() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_list_join"], [88, "ivy.container.base.ContainerBase.cont_list_join"]], "cont_list_stack() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_list_stack"], [88, "ivy.container.base.ContainerBase.cont_list_stack"]], "cont_map() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_map"], [88, "ivy.container.base.ContainerBase.cont_map"]], "cont_map_sub_conts() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_map_sub_conts"], [88, "ivy.container.base.ContainerBase.cont_map_sub_conts"]], "cont_max_depth (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_max_depth"], [88, "ivy.container.base.ContainerBase.cont_max_depth"]], "cont_multi_map() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_multi_map"], [88, "ivy.container.base.ContainerBase.cont_multi_map"]], "cont_multi_map_in_function() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_multi_map_in_function"], [88, "ivy.container.base.ContainerBase.cont_multi_map_in_function"]], "cont_num_arrays() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_num_arrays"], [88, "ivy.container.base.ContainerBase.cont_num_arrays"]], "cont_overwrite_at_key_chain() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"], [88, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"]], "cont_overwrite_at_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"], [88, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"]], "cont_prune_empty() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_prune_empty"], [88, "ivy.container.base.ContainerBase.cont_prune_empty"]], "cont_prune_key_chain() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_prune_key_chain"], [88, "ivy.container.base.ContainerBase.cont_prune_key_chain"]], "cont_prune_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_prune_key_chains"], [88, "ivy.container.base.ContainerBase.cont_prune_key_chains"]], "cont_prune_key_from_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"], [88, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"]], "cont_prune_keys() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_prune_keys"], [88, "ivy.container.base.ContainerBase.cont_prune_keys"]], "cont_prune_keys_from_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"], [88, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"]], "cont_reduce() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_reduce"], [88, "ivy.container.base.ContainerBase.cont_reduce"]], "cont_remove_key_length_limit() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"], [88, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"]], "cont_remove_print_limit() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_remove_print_limit"], [88, "ivy.container.base.ContainerBase.cont_remove_print_limit"]], "cont_reshape_like() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_reshape_like"], [88, "ivy.container.base.ContainerBase.cont_reshape_like"]], "cont_restructure() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_restructure"], [88, "ivy.container.base.ContainerBase.cont_restructure"]], "cont_restructure_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_restructure_key_chains"], [88, "ivy.container.base.ContainerBase.cont_restructure_key_chains"]], "cont_set_at_key_chain() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_set_at_key_chain"], [88, "ivy.container.base.ContainerBase.cont_set_at_key_chain"]], "cont_set_at_key_chains() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_set_at_key_chains"], [88, "ivy.container.base.ContainerBase.cont_set_at_key_chains"]], "cont_set_at_keys() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_set_at_keys"], [88, "ivy.container.base.ContainerBase.cont_set_at_keys"]], "cont_shape (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_shape"], [88, "ivy.container.base.ContainerBase.cont_shape"]], "cont_shapes (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.cont_shapes"], [88, "ivy.container.base.ContainerBase.cont_shapes"]], "cont_show() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_show"], [88, "ivy.container.base.ContainerBase.cont_show"]], "cont_show_sub_container() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_show_sub_container"], [88, "ivy.container.base.ContainerBase.cont_show_sub_container"]], "cont_size_ordered_arrays() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"], [88, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"]], "cont_slice_keys() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_slice_keys"], [88, "ivy.container.base.ContainerBase.cont_slice_keys"]], "cont_slice_via_key() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_slice_via_key"], [88, "ivy.container.base.ContainerBase.cont_slice_via_key"]], "cont_sort_by_key() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_sort_by_key"], [88, "ivy.container.base.ContainerBase.cont_sort_by_key"]], "cont_structural_diff() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_structural_diff"], [88, "ivy.container.base.ContainerBase.cont_structural_diff"]], "cont_to_dict() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_dict"], [88, "ivy.container.base.ContainerBase.cont_to_dict"]], "cont_to_disk_as_hdf5() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"], [88, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"]], "cont_to_disk_as_json() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_disk_as_json"], [88, "ivy.container.base.ContainerBase.cont_to_disk_as_json"]], "cont_to_disk_as_pickled() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"], [88, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"]], "cont_to_flat_list() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_flat_list"], [88, "ivy.container.base.ContainerBase.cont_to_flat_list"]], "cont_to_iterator() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_iterator"], [88, "ivy.container.base.ContainerBase.cont_to_iterator"]], "cont_to_iterator_keys() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_iterator_keys"], [88, "ivy.container.base.ContainerBase.cont_to_iterator_keys"]], "cont_to_iterator_values() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_iterator_values"], [88, "ivy.container.base.ContainerBase.cont_to_iterator_values"]], "cont_to_jsonable() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_jsonable"], [88, "ivy.container.base.ContainerBase.cont_to_jsonable"]], "cont_to_nested_list() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_nested_list"], [88, "ivy.container.base.ContainerBase.cont_to_nested_list"]], "cont_to_raw() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_to_raw"], [88, "ivy.container.base.ContainerBase.cont_to_raw"]], "cont_trim_key() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_trim_key"], [88, "ivy.container.base.ContainerBase.cont_trim_key"]], "cont_try_kc() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_try_kc"], [88, "ivy.container.base.ContainerBase.cont_try_kc"]], "cont_unify() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.cont_unify"], [88, "ivy.container.base.ContainerBase.cont_unify"]], "cont_unstack_conts() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_unstack_conts"], [88, "ivy.container.base.ContainerBase.cont_unstack_conts"]], "cont_update_config() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_update_config"], [88, "ivy.container.base.ContainerBase.cont_update_config"]], "cont_with_default_key_color() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_default_key_color"], [88, "ivy.container.base.ContainerBase.cont_with_default_key_color"]], "cont_with_entries_as_lists() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"], [88, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"]], "cont_with_ivy_backend() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_ivy_backend"], [88, "ivy.container.base.ContainerBase.cont_with_ivy_backend"]], "cont_with_key_length_limit() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_key_length_limit"], [88, "ivy.container.base.ContainerBase.cont_with_key_length_limit"]], "cont_with_print_indent() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_print_indent"], [88, "ivy.container.base.ContainerBase.cont_with_print_indent"]], "cont_with_print_limit() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_print_limit"], [88, "ivy.container.base.ContainerBase.cont_with_print_limit"]], "cont_with_print_line_spacing() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"], [88, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"]], "dynamic_backend (ivy.container.base.containerbase property)": [[87, "ivy.container.base.ContainerBase.dynamic_backend"], [88, "ivy.container.base.ContainerBase.dynamic_backend"]], "h5_file_size() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.h5_file_size"], [88, "ivy.container.base.ContainerBase.h5_file_size"]], "ivy.container.base": [[87, "module-ivy.container.base"]], "shuffle_h5_file() (ivy.container.base.containerbase static method)": [[87, "ivy.container.base.ContainerBase.shuffle_h5_file"], [88, "ivy.container.base.ContainerBase.shuffle_h5_file"]], "split_conts() (ivy.container.base.containerbase method)": [[87, "ivy.container.base.ContainerBase.split_conts"], [88, "ivy.container.base.ContainerBase.split_conts"]], "containerwithconversions (class in ivy.container.conversions)": [[91, "ivy.container.conversions.ContainerWithConversions"], [92, "ivy.container.conversions.ContainerWithConversions"]], "ivy.container.conversions": [[91, "module-ivy.container.conversions"]], "static_to_ivy() (ivy.container.conversions.containerwithconversions static method)": [[91, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"], [92, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"]], "static_to_native() (ivy.container.conversions.containerwithconversions static method)": [[91, "ivy.container.conversions.ContainerWithConversions.static_to_native"], [92, "ivy.container.conversions.ContainerWithConversions.static_to_native"]], "to_ivy() (ivy.container.conversions.containerwithconversions method)": [[91, "ivy.container.conversions.ContainerWithConversions.to_ivy"], [92, "ivy.container.conversions.ContainerWithConversions.to_ivy"]], "to_native() (ivy.container.conversions.containerwithconversions method)": [[91, "ivy.container.conversions.ContainerWithConversions.to_native"], [92, "ivy.container.conversions.ContainerWithConversions.to_native"]], "containerwithcreation (class in ivy.container.creation)": [[93, "ivy.container.creation.ContainerWithCreation"], [94, "ivy.container.creation.ContainerWithCreation"]], "empty_like() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.empty_like"], [94, "ivy.container.creation.ContainerWithCreation.empty_like"]], "from_dlpack() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.from_dlpack"], [94, "ivy.container.creation.ContainerWithCreation.from_dlpack"]], "full_like() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.full_like"], [94, "ivy.container.creation.ContainerWithCreation.full_like"]], "ivy.container.creation": [[93, "module-ivy.container.creation"]], "linspace() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.linspace"], [94, "ivy.container.creation.ContainerWithCreation.linspace"]], "logspace() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.logspace"], [94, "ivy.container.creation.ContainerWithCreation.logspace"]], "meshgrid() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.meshgrid"], [94, "ivy.container.creation.ContainerWithCreation.meshgrid"]], "native_array() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.native_array"], [94, "ivy.container.creation.ContainerWithCreation.native_array"]], "one_hot() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.one_hot"], [94, "ivy.container.creation.ContainerWithCreation.one_hot"]], "ones_like() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.ones_like"], [94, "ivy.container.creation.ContainerWithCreation.ones_like"]], "static_arange() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_arange"], [94, "ivy.container.creation.ContainerWithCreation.static_arange"]], "static_asarray() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_asarray"], [94, "ivy.container.creation.ContainerWithCreation.static_asarray"]], "static_empty_like() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_empty_like"], [94, "ivy.container.creation.ContainerWithCreation.static_empty_like"]], "static_eye() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_eye"], [94, "ivy.container.creation.ContainerWithCreation.static_eye"]], "static_from_dlpack() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"], [94, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"]], "static_full_like() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_full_like"], [94, "ivy.container.creation.ContainerWithCreation.static_full_like"]], "static_linspace() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_linspace"], [94, "ivy.container.creation.ContainerWithCreation.static_linspace"]], "static_logspace() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_logspace"], [94, "ivy.container.creation.ContainerWithCreation.static_logspace"]], "static_meshgrid() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_meshgrid"], [94, "ivy.container.creation.ContainerWithCreation.static_meshgrid"]], "static_native_array() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_native_array"], [94, "ivy.container.creation.ContainerWithCreation.static_native_array"]], "static_one_hot() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_one_hot"], [94, "ivy.container.creation.ContainerWithCreation.static_one_hot"]], "static_ones() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_ones"], [94, "ivy.container.creation.ContainerWithCreation.static_ones"]], "static_ones_like() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_ones_like"], [94, "ivy.container.creation.ContainerWithCreation.static_ones_like"]], "static_tril() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_tril"], [94, "ivy.container.creation.ContainerWithCreation.static_tril"]], "static_triu() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_triu"], [94, "ivy.container.creation.ContainerWithCreation.static_triu"]], "static_zeros() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_zeros"], [94, "ivy.container.creation.ContainerWithCreation.static_zeros"]], "static_zeros_like() (ivy.container.creation.containerwithcreation static method)": [[93, "ivy.container.creation.ContainerWithCreation.static_zeros_like"], [94, "ivy.container.creation.ContainerWithCreation.static_zeros_like"]], "tril() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.tril"], [94, "ivy.container.creation.ContainerWithCreation.tril"]], "triu() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.triu"], [94, "ivy.container.creation.ContainerWithCreation.triu"]], "zeros_like() (ivy.container.creation.containerwithcreation method)": [[93, "ivy.container.creation.ContainerWithCreation.zeros_like"], [94, "ivy.container.creation.ContainerWithCreation.zeros_like"]], "containerwithdatatypes (class in ivy.container.data_type)": [[95, "ivy.container.data_type.ContainerWithDataTypes"], [96, "ivy.container.data_type.ContainerWithDataTypes"]], "astype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.astype"], [96, "ivy.container.data_type.ContainerWithDataTypes.astype"]], "broadcast_arrays() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"], [96, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"], [96, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"]], "can_cast() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.can_cast"], [96, "ivy.container.data_type.ContainerWithDataTypes.can_cast"]], "dtype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.dtype"]], "finfo() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.finfo"], [96, "ivy.container.data_type.ContainerWithDataTypes.finfo"]], "iinfo() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.iinfo"], [96, "ivy.container.data_type.ContainerWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"]], "is_complex_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.is_complex_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.is_complex_dtype"]], "is_float_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"]], "ivy.container.data_type": [[95, "module-ivy.container.data_type"]], "result_type() (ivy.container.data_type.containerwithdatatypes method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.result_type"], [96, "ivy.container.data_type.ContainerWithDataTypes.result_type"]], "static_astype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_astype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_astype"]], "static_broadcast_arrays() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"]], "static_broadcast_to() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"]], "static_can_cast() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"]], "static_default_complex_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_default_complex_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_default_complex_dtype"]], "static_default_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"]], "static_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"]], "static_finfo() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"]], "static_function_supported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"]], "static_iinfo() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"]], "static_is_bool_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"]], "static_is_complex_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_is_complex_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_is_complex_dtype"]], "static_is_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"]], "static_is_int_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"]], "static_is_uint_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"]], "static_result_type() (ivy.container.data_type.containerwithdatatypes static method)": [[95, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"], [96, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"]], "containerwithdevice (class in ivy.container.device)": [[97, "ivy.container.device.ContainerWithDevice"], [98, "ivy.container.device.ContainerWithDevice"]], "dev() (ivy.container.device.containerwithdevice method)": [[97, "ivy.container.device.ContainerWithDevice.dev"], [98, "ivy.container.device.ContainerWithDevice.dev"]], "ivy.container.device": [[97, "module-ivy.container.device"]], "static_dev() (ivy.container.device.containerwithdevice static method)": [[97, "ivy.container.device.ContainerWithDevice.static_dev"], [98, "ivy.container.device.ContainerWithDevice.static_dev"]], "static_to_device() (ivy.container.device.containerwithdevice static method)": [[97, "ivy.container.device.ContainerWithDevice.static_to_device"], [98, "ivy.container.device.ContainerWithDevice.static_to_device"]], "to_device() (ivy.container.device.containerwithdevice method)": [[97, "ivy.container.device.ContainerWithDevice.to_device"], [98, "ivy.container.device.ContainerWithDevice.to_device"]], "containerwithelementwise (class in ivy.container.elementwise)": [[99, "ivy.container.elementwise.ContainerWithElementwise"], [100, "ivy.container.elementwise.ContainerWithElementwise"]], "abs() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.abs"], [100, "ivy.container.elementwise.ContainerWithElementwise.abs"]], "acos() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.acos"], [100, "ivy.container.elementwise.ContainerWithElementwise.acos"]], "acosh() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.acosh"], [100, "ivy.container.elementwise.ContainerWithElementwise.acosh"]], "add() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.add"], [100, "ivy.container.elementwise.ContainerWithElementwise.add"]], "asin() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.asin"], [100, "ivy.container.elementwise.ContainerWithElementwise.asin"]], "asinh() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.asinh"], [100, "ivy.container.elementwise.ContainerWithElementwise.asinh"]], "atan() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.atan"], [100, "ivy.container.elementwise.ContainerWithElementwise.atan"]], "atan2() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.atan2"], [100, "ivy.container.elementwise.ContainerWithElementwise.atan2"]], "atanh() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.atanh"], [100, "ivy.container.elementwise.ContainerWithElementwise.atanh"]], "bitwise_and() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"], [100, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"], [100, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"], [100, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"], [100, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"], [100, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"], [100, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"]], "ceil() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.ceil"], [100, "ivy.container.elementwise.ContainerWithElementwise.ceil"]], "cos() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.cos"], [100, "ivy.container.elementwise.ContainerWithElementwise.cos"]], "cosh() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.cosh"], [100, "ivy.container.elementwise.ContainerWithElementwise.cosh"]], "deg2rad() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"], [100, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"]], "divide() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.divide"], [100, "ivy.container.elementwise.ContainerWithElementwise.divide"]], "equal() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.equal"]], "erf() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.erf"], [100, "ivy.container.elementwise.ContainerWithElementwise.erf"]], "exp() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.exp"], [100, "ivy.container.elementwise.ContainerWithElementwise.exp"]], "expm1() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.expm1"], [100, "ivy.container.elementwise.ContainerWithElementwise.expm1"]], "floor() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.floor"], [100, "ivy.container.elementwise.ContainerWithElementwise.floor"]], "floor_divide() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"], [100, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"]], "greater() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.greater"], [100, "ivy.container.elementwise.ContainerWithElementwise.greater"]], "greater_equal() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"]], "isfinite() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.isfinite"], [100, "ivy.container.elementwise.ContainerWithElementwise.isfinite"]], "isinf() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.isinf"], [100, "ivy.container.elementwise.ContainerWithElementwise.isinf"]], "isnan() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.isnan"], [100, "ivy.container.elementwise.ContainerWithElementwise.isnan"]], "isreal() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.isreal"], [100, "ivy.container.elementwise.ContainerWithElementwise.isreal"]], "ivy.container.elementwise": [[99, "module-ivy.container.elementwise"]], "less() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.less"], [100, "ivy.container.elementwise.ContainerWithElementwise.less"]], "less_equal() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.less_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.less_equal"]], "log() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.log"], [100, "ivy.container.elementwise.ContainerWithElementwise.log"]], "log10() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.log10"], [100, "ivy.container.elementwise.ContainerWithElementwise.log10"]], "log1p() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.log1p"], [100, "ivy.container.elementwise.ContainerWithElementwise.log1p"]], "log2() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.log2"], [100, "ivy.container.elementwise.ContainerWithElementwise.log2"]], "logaddexp() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"], [100, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"]], "logical_and() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.logical_and"], [100, "ivy.container.elementwise.ContainerWithElementwise.logical_and"]], "logical_not() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.logical_not"], [100, "ivy.container.elementwise.ContainerWithElementwise.logical_not"]], "logical_or() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.logical_or"], [100, "ivy.container.elementwise.ContainerWithElementwise.logical_or"]], "logical_xor() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"], [100, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"]], "maximum() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.maximum"], [100, "ivy.container.elementwise.ContainerWithElementwise.maximum"]], "minimum() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.minimum"], [100, "ivy.container.elementwise.ContainerWithElementwise.minimum"]], "multiply() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.multiply"], [100, "ivy.container.elementwise.ContainerWithElementwise.multiply"]], "negative() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.negative"], [100, "ivy.container.elementwise.ContainerWithElementwise.negative"]], "not_equal() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.not_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.not_equal"]], "positive() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.positive"], [100, "ivy.container.elementwise.ContainerWithElementwise.positive"]], "pow() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.pow"], [100, "ivy.container.elementwise.ContainerWithElementwise.pow"]], "rad2deg() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"], [100, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"]], "reciprocal() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"], [100, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"]], "remainder() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.remainder"], [100, "ivy.container.elementwise.ContainerWithElementwise.remainder"]], "round() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.round"], [100, "ivy.container.elementwise.ContainerWithElementwise.round"]], "sign() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.sign"], [100, "ivy.container.elementwise.ContainerWithElementwise.sign"]], "sin() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.sin"], [100, "ivy.container.elementwise.ContainerWithElementwise.sin"]], "sinh() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.sinh"], [100, "ivy.container.elementwise.ContainerWithElementwise.sinh"]], "sqrt() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.sqrt"], [100, "ivy.container.elementwise.ContainerWithElementwise.sqrt"]], "square() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.square"], [100, "ivy.container.elementwise.ContainerWithElementwise.square"]], "static_abs() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_abs"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_abs"]], "static_acos() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_acos"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_acos"]], "static_acosh() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"]], "static_add() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_add"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_add"]], "static_asin() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_asin"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_asin"]], "static_asinh() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"]], "static_atan() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_atan"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_atan"]], "static_atan2() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"]], "static_atanh() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"]], "static_bitwise_and() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"]], "static_bitwise_invert() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"]], "static_bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"]], "static_bitwise_or() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"]], "static_bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"]], "static_bitwise_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"]], "static_ceil() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"]], "static_cos() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_cos"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_cos"]], "static_cosh() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"]], "static_deg2rad() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"]], "static_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_divide"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_divide"]], "static_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_equal"]], "static_erf() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_erf"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_erf"]], "static_exp() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_exp"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_exp"]], "static_expm1() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"]], "static_floor() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_floor"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_floor"]], "static_floor_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"]], "static_greater() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_greater"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_greater"]], "static_greater_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"]], "static_isfinite() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"]], "static_isinf() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"]], "static_isnan() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"]], "static_isreal() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"]], "static_less() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_less"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_less"]], "static_less_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"]], "static_log() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_log"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_log"]], "static_log10() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_log10"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_log10"]], "static_log1p() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"]], "static_log2() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_log2"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_log2"]], "static_logaddexp() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"]], "static_logical_and() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"]], "static_logical_not() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"]], "static_logical_or() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"]], "static_logical_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"]], "static_maximum() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"]], "static_minimum() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"]], "static_multiply() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"]], "static_negative() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_negative"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_negative"]], "static_not_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"]], "static_positive() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_positive"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_positive"]], "static_pow() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_pow"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_pow"]], "static_rad2deg() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"]], "static_reciprocal() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"]], "static_remainder() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"]], "static_round() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_round"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_round"]], "static_sign() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_sign"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_sign"]], "static_sin() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_sin"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_sin"]], "static_sinh() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"]], "static_sqrt() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"]], "static_square() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_square"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_square"]], "static_subtract() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"]], "static_tan() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_tan"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_tan"]], "static_tanh() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"]], "static_trapz() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"]], "static_trunc() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"]], "static_trunc_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"], [100, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"]], "subtract() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.subtract"], [100, "ivy.container.elementwise.ContainerWithElementwise.subtract"]], "tan() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.tan"], [100, "ivy.container.elementwise.ContainerWithElementwise.tan"]], "tanh() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.tanh"], [100, "ivy.container.elementwise.ContainerWithElementwise.tanh"]], "trapz() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.trapz"], [100, "ivy.container.elementwise.ContainerWithElementwise.trapz"]], "trunc() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.trunc"], [100, "ivy.container.elementwise.ContainerWithElementwise.trunc"]], "trunc_divide() (ivy.container.elementwise.containerwithelementwise method)": [[99, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"], [100, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"]], "containerwithactivationexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental"]], "containerwithconversionexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithConversionExperimental"]], "containerwithcreationexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental"]], "containerwithdata_typeexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithData_typeExperimental"]], "containerwithdeviceexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithDeviceExperimental"]], "containerwithelementwiseexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental"]], "containerwithgeneralexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithGeneralExperimental"]], "containerwithgradientsexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithGradientsExperimental"]], "containerwithimageexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithImageExperimental"]], "containerwithlayersexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental"]], "containerwithlinearalgebraexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental"]], "containerwithlossesexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithLossesExperimental"]], "containerwithmanipulationexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental"]], "containerwithnormsexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental"]], "containerwithrandomexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental"]], "containerwithsearchingexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithSearchingExperimental"]], "containerwithsetexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithSetExperimental"]], "containerwithsortingexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithSortingExperimental"]], "containerwithstatisticalexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental"]], "containerwithutilityexperimental (class in ivy.container.experimental)": [[101, "ivy.container.experimental.ContainerWithUtilityExperimental"]], "adjoint() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.allclose"]], "angle() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool3d"]], "bernoulli() (ivy.container.experimental.containerwithrandomexperimental method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.bernoulli"]], "beta() (ivy.container.experimental.containerwithrandomexperimental method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.beta"]], "binarizer() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.binarizer"]], "binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental method)": [[101, "ivy.container.experimental.ContainerWithLossesExperimental.binary_cross_entropy_with_logits"]], "broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.broadcast_shapes"]], "copysign() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.dct"]], "dft() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.dft"]], "diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.diff"]], "dirichlet() (ivy.container.experimental.containerwithrandomexperimental method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.dirichlet"]], "dsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.dsplit"]], "dstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.dstack"]], "eig() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eig"]], "eigvals() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.embedding"]], "exp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.exp2"]], "expand() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.expand"]], "eye_like() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.eye_like"]], "fft() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.fft"]], "fix() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.fix"]], "flatten() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.flatten"]], "fliplr() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.fliplr"]], "flipud() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.flipud"]], "float_power() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.float_power"]], "fmax() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmax"]], "fmin() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmin"]], "fmod() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmod"]], "gcd() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.gcd"]], "gradient() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.gradient"]], "hamming_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.hamming_window"]], "hann_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.hann_window"]], "heaviside() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.heaviside"]], "hsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.hsplit"]], "hstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.hstack"]], "hypot() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.hypot"]], "i0() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.i0"]], "ifft() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.ifft"]], "imag() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.imag"]], "instance_norm() (ivy.container.experimental.containerwithnormsexperimental method)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental.instance_norm"]], "interpolate() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.interpolate"]], "isclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.isclose"]], "isin() (ivy.container.experimental.containerwithgeneralexperimental method)": [[101, "ivy.container.experimental.ContainerWithGeneralExperimental.isin"]], "kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_bessel_derived_window"]], "kaiser_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_window"]], "kron() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.container.experimental.containerwithnormsexperimental method)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental.l2_normalize"]], "lcm() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.lcm"]], "lexsort() (ivy.container.experimental.containerwithsortingexperimental method)": [[101, "ivy.container.experimental.ContainerWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.container.experimental.containerwithactivationexperimental method)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental.logit"]], "lp_normalize() (ivy.container.experimental.containerwithnormsexperimental method)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool3d"]], "median() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.median"]], "moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.moveaxis"]], "msort() (ivy.container.experimental.containerwithsortingexperimental method)": [[101, "ivy.container.experimental.ContainerWithSortingExperimental.msort"]], "nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.nansum"]], "nextafter() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.nextafter"]], "pad() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.pad"]], "poisson() (ivy.container.experimental.containerwithrandomexperimental method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.poisson"]], "prelu() (ivy.container.experimental.containerwithactivationexperimental method)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental.prelu"]], "quantile() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.quantile"]], "real() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.real"]], "rot90() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.rot90"]], "signbit() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.signbit"]], "sinc() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.sinc"]], "static_adjoint() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_adjoint"]], "static_allclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_allclose"]], "static_angle() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_angle"]], "static_atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_1d"]], "static_atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_2d"]], "static_atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_3d"]], "static_avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool1d"]], "static_avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool2d"]], "static_avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool3d"]], "static_bernoulli() (ivy.container.experimental.containerwithrandomexperimental static method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.static_bernoulli"]], "static_beta() (ivy.container.experimental.containerwithrandomexperimental static method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.static_beta"]], "static_binarizer() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_binarizer"]], "static_binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLossesExperimental.static_binary_cross_entropy_with_logits"]], "static_broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_broadcast_shapes"]], "static_copysign() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_copysign"]], "static_corrcoef() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_corrcoef"]], "static_count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_count_nonzero"]], "static_dct() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_dct"]], "static_dft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_dft"]], "static_diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_diagflat"]], "static_diff() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_diff"]], "static_dirichlet() (ivy.container.experimental.containerwithrandomexperimental static method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.static_dirichlet"]], "static_dsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dsplit"]], "static_dstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dstack"]], "static_eig() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eig"]], "static_eigvals() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eigvals"]], "static_embedding() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_embedding"]], "static_exp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_exp2"]], "static_expand() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_expand"]], "static_eye_like() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_eye_like"]], "static_fft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_fft"]], "static_fix() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fix"]], "static_flatten() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flatten"]], "static_fliplr() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_fliplr"]], "static_flipud() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flipud"]], "static_float_power() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_float_power"]], "static_fmax() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmax"]], "static_fmin() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmin"]], "static_fmod() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmod"]], "static_gcd() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gcd"]], "static_gradient() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gradient"]], "static_hamming_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_hamming_window"]], "static_hann_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_hann_window"]], "static_heaviside() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_heaviside"]], "static_hsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hsplit"]], "static_hstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hstack"]], "static_hypot() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_hypot"]], "static_i0() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_i0"]], "static_ifft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_ifft"]], "static_imag() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_imag"]], "static_instance_norm() (ivy.container.experimental.containerwithnormsexperimental static method)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental.static_instance_norm"]], "static_interpolate() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_interpolate"]], "static_isclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_isclose"]], "static_isin() (ivy.container.experimental.containerwithgeneralexperimental static method)": [[101, "ivy.container.experimental.ContainerWithGeneralExperimental.static_isin"]], "static_kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_bessel_derived_window"]], "static_kaiser_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_window"]], "static_kron() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_kron"]], "static_l2_normalize() (ivy.container.experimental.containerwithnormsexperimental static method)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental.static_l2_normalize"]], "static_lcm() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_lcm"]], "static_lexsort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[101, "ivy.container.experimental.ContainerWithSortingExperimental.static_lexsort"]], "static_logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_logaddexp2"]], "static_logit() (ivy.container.experimental.containerwithactivationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental.static_logit"]], "static_lp_normalize() (ivy.container.experimental.containerwithnormsexperimental static method)": [[101, "ivy.container.experimental.ContainerWithNormsExperimental.static_lp_normalize"]], "static_matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_matrix_exp"]], "static_max_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool1d"]], "static_max_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool2d"]], "static_max_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[101, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool3d"]], "static_median() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_median"]], "static_moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_moveaxis"]], "static_msort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[101, "ivy.container.experimental.ContainerWithSortingExperimental.static_msort"]], "static_nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nan_to_num"]], "static_nanmean() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmean"]], "static_nanmedian() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmedian"]], "static_nansum() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nansum"]], "static_nextafter() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nextafter"]], "static_pad() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_pad"]], "static_poisson() (ivy.container.experimental.containerwithrandomexperimental static method)": [[101, "ivy.container.experimental.ContainerWithRandomExperimental.static_poisson"]], "static_prelu() (ivy.container.experimental.containerwithactivationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental.static_prelu"]], "static_quantile() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_quantile"]], "static_real() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_real"]], "static_rot90() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_rot90"]], "static_signbit() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_signbit"]], "static_sinc() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_sinc"]], "static_take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_take_along_axis"]], "static_thresholded_relu() (ivy.container.experimental.containerwithactivationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental.static_thresholded_relu"]], "static_top_k() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_top_k"]], "static_tril_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_tril_indices"]], "static_triu_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_triu_indices"]], "static_unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_unravel_index"]], "static_vorbis_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.static_vorbis_window"]], "static_vsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vsplit"]], "static_vstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vstack"]], "static_xlogy() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_xlogy"]], "static_zeta() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_zeta"]], "take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.container.experimental.containerwithactivationexperimental method)": [[101, "ivy.container.experimental.ContainerWithActivationExperimental.thresholded_relu"]], "top_k() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.top_k"]], "tril_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.tril_indices"]], "triu_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.triu_indices"]], "unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[101, "ivy.container.experimental.ContainerWithStatisticalExperimental.unravel_index"]], "vorbis_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[101, "ivy.container.experimental.ContainerWithCreationExperimental.vorbis_window"]], "vsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.vsplit"]], "vstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[101, "ivy.container.experimental.ContainerWithManipulationExperimental.vstack"]], "xlogy() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.xlogy"]], "zeta() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[101, "ivy.container.experimental.ContainerWithElementWiseExperimental.zeta"]], "containerwithgeneral (class in ivy.container.general)": [[102, "ivy.container.general.ContainerWithGeneral"], [103, "ivy.container.general.ContainerWithGeneral"]], "all_equal() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.all_equal"], [103, "ivy.container.general.ContainerWithGeneral.all_equal"]], "array_equal() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.array_equal"], [103, "ivy.container.general.ContainerWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"], [103, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"], [103, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"], [103, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"]], "einops_rearrange() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.einops_rearrange"], [103, "ivy.container.general.ContainerWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.einops_reduce"], [103, "ivy.container.general.ContainerWithGeneral.einops_reduce"]], "einops_repeat() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.einops_repeat"], [103, "ivy.container.general.ContainerWithGeneral.einops_repeat"]], "fourier_encode() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.fourier_encode"], [103, "ivy.container.general.ContainerWithGeneral.fourier_encode"]], "gather() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.gather"], [103, "ivy.container.general.ContainerWithGeneral.gather"]], "gather_nd() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.gather_nd"], [103, "ivy.container.general.ContainerWithGeneral.gather_nd"]], "get_num_dims() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.get_num_dims"], [103, "ivy.container.general.ContainerWithGeneral.get_num_dims"]], "has_nans() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.has_nans"], [103, "ivy.container.general.ContainerWithGeneral.has_nans"]], "inplace_decrement() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.inplace_decrement"], [103, "ivy.container.general.ContainerWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.inplace_increment"], [103, "ivy.container.general.ContainerWithGeneral.inplace_increment"]], "inplace_update() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.inplace_update"], [103, "ivy.container.general.ContainerWithGeneral.inplace_update"]], "is_array() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.is_array"], [103, "ivy.container.general.ContainerWithGeneral.is_array"]], "is_ivy_array() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.is_ivy_array"], [103, "ivy.container.general.ContainerWithGeneral.is_ivy_array"]], "is_native_array() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.is_native_array"], [103, "ivy.container.general.ContainerWithGeneral.is_native_array"]], "ivy.container.general": [[102, "module-ivy.container.general"]], "scatter_flat() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.scatter_flat"], [103, "ivy.container.general.ContainerWithGeneral.scatter_flat"]], "scatter_nd() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.scatter_nd"], [103, "ivy.container.general.ContainerWithGeneral.scatter_nd"]], "stable_divide() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.stable_divide"], [103, "ivy.container.general.ContainerWithGeneral.stable_divide"]], "stable_pow() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.stable_pow"], [103, "ivy.container.general.ContainerWithGeneral.stable_pow"]], "static_all_equal() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_all_equal"], [103, "ivy.container.general.ContainerWithGeneral.static_all_equal"]], "static_array_equal() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_array_equal"], [103, "ivy.container.general.ContainerWithGeneral.static_array_equal"]], "static_assert_supports_inplace() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"], [103, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"]], "static_clip_matrix_norm() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"], [103, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"]], "static_clip_vector_norm() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"], [103, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"]], "static_einops_rearrange() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"], [103, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"]], "static_einops_reduce() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"], [103, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"]], "static_einops_repeat() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"], [103, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"]], "static_fourier_encode() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"], [103, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"]], "static_gather() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_gather"], [103, "ivy.container.general.ContainerWithGeneral.static_gather"]], "static_gather_nd() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_gather_nd"], [103, "ivy.container.general.ContainerWithGeneral.static_gather_nd"]], "static_get_num_dims() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"], [103, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"]], "static_has_nans() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_has_nans"], [103, "ivy.container.general.ContainerWithGeneral.static_has_nans"]], "static_inplace_decrement() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"], [103, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"]], "static_inplace_increment() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"], [103, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"]], "static_inplace_update() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_inplace_update"], [103, "ivy.container.general.ContainerWithGeneral.static_inplace_update"]], "static_is_array() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_is_array"], [103, "ivy.container.general.ContainerWithGeneral.static_is_array"]], "static_is_ivy_array() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"], [103, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"]], "static_is_native_array() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_is_native_array"], [103, "ivy.container.general.ContainerWithGeneral.static_is_native_array"]], "static_scatter_flat() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"], [103, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"]], "static_scatter_nd() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"], [103, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"]], "static_stable_divide() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_stable_divide"], [103, "ivy.container.general.ContainerWithGeneral.static_stable_divide"]], "static_stable_pow() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_stable_pow"], [103, "ivy.container.general.ContainerWithGeneral.static_stable_pow"]], "static_supports_inplace_updates() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"], [103, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"]], "static_to_list() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_to_list"], [103, "ivy.container.general.ContainerWithGeneral.static_to_list"]], "static_to_numpy() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_to_numpy"], [103, "ivy.container.general.ContainerWithGeneral.static_to_numpy"]], "static_to_scalar() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_to_scalar"], [103, "ivy.container.general.ContainerWithGeneral.static_to_scalar"]], "static_value_is_nan() (ivy.container.general.containerwithgeneral static method)": [[102, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"], [103, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"]], "supports_inplace_updates() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"], [103, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"]], "to_list() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.to_list"], [103, "ivy.container.general.ContainerWithGeneral.to_list"]], "to_numpy() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.to_numpy"], [103, "ivy.container.general.ContainerWithGeneral.to_numpy"]], "to_scalar() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.to_scalar"], [103, "ivy.container.general.ContainerWithGeneral.to_scalar"]], "value_is_nan() (ivy.container.general.containerwithgeneral method)": [[102, "ivy.container.general.ContainerWithGeneral.value_is_nan"], [103, "ivy.container.general.ContainerWithGeneral.value_is_nan"]], "containerwithgradients (class in ivy.container.gradients)": [[104, "ivy.container.gradients.ContainerWithGradients"], [105, "ivy.container.gradients.ContainerWithGradients"]], "adam_step() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.adam_step"], [105, "ivy.container.gradients.ContainerWithGradients.adam_step"]], "adam_update() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.adam_update"], [105, "ivy.container.gradients.ContainerWithGradients.adam_update"]], "gradient_descent_update() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"], [105, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"]], "ivy.container.gradients": [[104, "module-ivy.container.gradients"]], "lamb_update() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.lamb_update"], [105, "ivy.container.gradients.ContainerWithGradients.lamb_update"]], "lars_update() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.lars_update"], [105, "ivy.container.gradients.ContainerWithGradients.lars_update"]], "optimizer_update() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.optimizer_update"], [105, "ivy.container.gradients.ContainerWithGradients.optimizer_update"]], "static_stop_gradient() (ivy.container.gradients.containerwithgradients static method)": [[104, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"], [105, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"]], "stop_gradient() (ivy.container.gradients.containerwithgradients method)": [[104, "ivy.container.gradients.ContainerWithGradients.stop_gradient"], [105, "ivy.container.gradients.ContainerWithGradients.stop_gradient"]], "containerwithimage (class in ivy.container.image)": [[106, "ivy.container.image.ContainerWithImage"], [107, "ivy.container.image.ContainerWithImage"]], "ivy.container.image": [[106, "module-ivy.container.image"]], "containerwithlayers (class in ivy.container.layers)": [[108, "ivy.container.layers.ContainerWithLayers"], [109, "ivy.container.layers.ContainerWithLayers"]], "conv1d() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.conv1d"], [109, "ivy.container.layers.ContainerWithLayers.conv1d"]], "conv1d_transpose() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"], [109, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"]], "conv2d() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.conv2d"], [109, "ivy.container.layers.ContainerWithLayers.conv2d"]], "conv2d_transpose() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"], [109, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"]], "conv3d() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.conv3d"], [109, "ivy.container.layers.ContainerWithLayers.conv3d"]], "conv3d_transpose() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"], [109, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"], [109, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"]], "dropout() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.dropout"], [109, "ivy.container.layers.ContainerWithLayers.dropout"]], "dropout1d() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.dropout1d"], [109, "ivy.container.layers.ContainerWithLayers.dropout1d"]], "ivy.container.layers": [[108, "module-ivy.container.layers"]], "linear() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.linear"], [109, "ivy.container.layers.ContainerWithLayers.linear"]], "lstm_update() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.lstm_update"], [109, "ivy.container.layers.ContainerWithLayers.lstm_update"]], "multi_head_attention() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.multi_head_attention"], [109, "ivy.container.layers.ContainerWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.container.layers.containerwithlayers method)": [[108, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"], [109, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"]], "static_conv1d() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_conv1d"], [109, "ivy.container.layers.ContainerWithLayers.static_conv1d"]], "static_conv1d_transpose() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"], [109, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"]], "static_conv2d() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_conv2d"], [109, "ivy.container.layers.ContainerWithLayers.static_conv2d"]], "static_conv2d_transpose() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"], [109, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"]], "static_conv3d() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_conv3d"], [109, "ivy.container.layers.ContainerWithLayers.static_conv3d"]], "static_conv3d_transpose() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"], [109, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"]], "static_depthwise_conv2d() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"], [109, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"]], "static_dropout() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_dropout"], [109, "ivy.container.layers.ContainerWithLayers.static_dropout"]], "static_dropout1d() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_dropout1d"], [109, "ivy.container.layers.ContainerWithLayers.static_dropout1d"]], "static_linear() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_linear"], [109, "ivy.container.layers.ContainerWithLayers.static_linear"]], "static_lstm_update() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_lstm_update"], [109, "ivy.container.layers.ContainerWithLayers.static_lstm_update"]], "static_multi_head_attention() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"], [109, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"]], "static_scaled_dot_product_attention() (ivy.container.layers.containerwithlayers static method)": [[108, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"], [109, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"]], "containerwithlinearalgebra (class in ivy.container.linear_algebra)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"]], "cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"]], "cross() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"]], "det() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"]], "diag() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"]], "diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"]], "eigh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"]], "inner() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"]], "inv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"]], "ivy.container.linear_algebra": [[110, "module-ivy.container.linear_algebra"]], "matmul() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"]], "pinv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"]], "qr() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"]], "slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"]], "solve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"]], "static_cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"]], "static_cross() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"]], "static_det() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"]], "static_diag() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"]], "static_diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"]], "static_eigh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"]], "static_eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"]], "static_inner() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"]], "static_inv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"]], "static_matmul() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"]], "static_matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"]], "static_matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"]], "static_matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"]], "static_matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"]], "static_outer() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"]], "static_pinv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"]], "static_qr() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"]], "static_slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"]], "static_solve() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"]], "static_svd() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"]], "static_svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"]], "static_tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"]], "static_trace() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"]], "static_vander() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"]], "static_vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"]], "static_vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"]], "static_vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"]], "svd() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"]], "svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"]], "tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"]], "trace() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"]], "vander() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"]], "vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[110, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [111, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "containerwithlosses (class in ivy.container.losses)": [[112, "ivy.container.losses.ContainerWithLosses"], [113, "ivy.container.losses.ContainerWithLosses"]], "binary_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[112, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"], [113, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.container.losses.containerwithlosses method)": [[112, "ivy.container.losses.ContainerWithLosses.cross_entropy"], [113, "ivy.container.losses.ContainerWithLosses.cross_entropy"]], "ivy.container.losses": [[112, "module-ivy.container.losses"]], "sparse_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[112, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"], [113, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"]], "static_binary_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[112, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"], [113, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"]], "static_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[112, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"], [113, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"]], "static_sparse_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[112, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"], [113, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"]], "containerwithmanipulation (class in ivy.container.manipulation)": [[114, "ivy.container.manipulation.ContainerWithManipulation"], [115, "ivy.container.manipulation.ContainerWithManipulation"]], "clip() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.clip"], [115, "ivy.container.manipulation.ContainerWithManipulation.clip"]], "concat() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.concat"], [115, "ivy.container.manipulation.ContainerWithManipulation.concat"]], "constant_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"], [115, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"]], "expand_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"], [115, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"]], "flip() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.flip"], [115, "ivy.container.manipulation.ContainerWithManipulation.flip"]], "ivy.container.manipulation": [[114, "module-ivy.container.manipulation"]], "permute_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"], [115, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"]], "repeat() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.repeat"], [115, "ivy.container.manipulation.ContainerWithManipulation.repeat"]], "reshape() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.reshape"], [115, "ivy.container.manipulation.ContainerWithManipulation.reshape"]], "roll() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.roll"], [115, "ivy.container.manipulation.ContainerWithManipulation.roll"]], "split() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.split"], [115, "ivy.container.manipulation.ContainerWithManipulation.split"]], "squeeze() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.squeeze"], [115, "ivy.container.manipulation.ContainerWithManipulation.squeeze"]], "stack() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.stack"], [115, "ivy.container.manipulation.ContainerWithManipulation.stack"]], "static_clip() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_clip"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_clip"]], "static_concat() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_concat"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_concat"]], "static_constant_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"]], "static_expand_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"]], "static_flip() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_flip"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_flip"]], "static_permute_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"]], "static_repeat() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"]], "static_reshape() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"]], "static_roll() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_roll"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_roll"]], "static_split() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_split"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_split"]], "static_squeeze() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"]], "static_stack() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_stack"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_stack"]], "static_swapaxes() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"]], "static_tile() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_tile"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_tile"]], "static_unstack() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"]], "static_zero_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"], [115, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"]], "swapaxes() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"], [115, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"]], "tile() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.tile"], [115, "ivy.container.manipulation.ContainerWithManipulation.tile"]], "unstack() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.unstack"], [115, "ivy.container.manipulation.ContainerWithManipulation.unstack"]], "zero_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[114, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"], [115, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"]], "containerwithnorms (class in ivy.container.norms)": [[116, "ivy.container.norms.ContainerWithNorms"], [117, "ivy.container.norms.ContainerWithNorms"]], "ivy.container.norms": [[116, "module-ivy.container.norms"]], "layer_norm() (ivy.container.norms.containerwithnorms method)": [[116, "ivy.container.norms.ContainerWithNorms.layer_norm"], [117, "ivy.container.norms.ContainerWithNorms.layer_norm"]], "containerwithrandom (class in ivy.container.random)": [[118, "ivy.container.random.ContainerWithRandom"], [119, "ivy.container.random.ContainerWithRandom"]], "ivy.container.random": [[118, "module-ivy.container.random"]], "multinomial() (ivy.container.random.containerwithrandom method)": [[118, "ivy.container.random.ContainerWithRandom.multinomial"], [119, "ivy.container.random.ContainerWithRandom.multinomial"]], "randint() (ivy.container.random.containerwithrandom method)": [[118, "ivy.container.random.ContainerWithRandom.randint"], [119, "ivy.container.random.ContainerWithRandom.randint"]], "random_normal() (ivy.container.random.containerwithrandom method)": [[118, "ivy.container.random.ContainerWithRandom.random_normal"], [119, "ivy.container.random.ContainerWithRandom.random_normal"]], "random_uniform() (ivy.container.random.containerwithrandom method)": [[118, "ivy.container.random.ContainerWithRandom.random_uniform"], [119, "ivy.container.random.ContainerWithRandom.random_uniform"]], "shuffle() (ivy.container.random.containerwithrandom method)": [[118, "ivy.container.random.ContainerWithRandom.shuffle"], [119, "ivy.container.random.ContainerWithRandom.shuffle"]], "static_multinomial() (ivy.container.random.containerwithrandom static method)": [[118, "ivy.container.random.ContainerWithRandom.static_multinomial"], [119, "ivy.container.random.ContainerWithRandom.static_multinomial"]], "static_randint() (ivy.container.random.containerwithrandom static method)": [[118, "ivy.container.random.ContainerWithRandom.static_randint"], [119, "ivy.container.random.ContainerWithRandom.static_randint"]], "static_random_normal() (ivy.container.random.containerwithrandom static method)": [[118, "ivy.container.random.ContainerWithRandom.static_random_normal"], [119, "ivy.container.random.ContainerWithRandom.static_random_normal"]], "static_random_uniform() (ivy.container.random.containerwithrandom static method)": [[118, "ivy.container.random.ContainerWithRandom.static_random_uniform"], [119, "ivy.container.random.ContainerWithRandom.static_random_uniform"]], "static_shuffle() (ivy.container.random.containerwithrandom static method)": [[118, "ivy.container.random.ContainerWithRandom.static_shuffle"], [119, "ivy.container.random.ContainerWithRandom.static_shuffle"]], "containerwithsearching (class in ivy.container.searching)": [[120, "ivy.container.searching.ContainerWithSearching"], [121, "ivy.container.searching.ContainerWithSearching"]], "argmax() (ivy.container.searching.containerwithsearching method)": [[120, "ivy.container.searching.ContainerWithSearching.argmax"], [121, "ivy.container.searching.ContainerWithSearching.argmax"]], "argmin() (ivy.container.searching.containerwithsearching method)": [[120, "ivy.container.searching.ContainerWithSearching.argmin"], [121, "ivy.container.searching.ContainerWithSearching.argmin"]], "argwhere() (ivy.container.searching.containerwithsearching method)": [[120, "ivy.container.searching.ContainerWithSearching.argwhere"], [121, "ivy.container.searching.ContainerWithSearching.argwhere"]], "ivy.container.searching": [[120, "module-ivy.container.searching"]], "nonzero() (ivy.container.searching.containerwithsearching method)": [[120, "ivy.container.searching.ContainerWithSearching.nonzero"], [121, "ivy.container.searching.ContainerWithSearching.nonzero"]], "static_argmax() (ivy.container.searching.containerwithsearching static method)": [[120, "ivy.container.searching.ContainerWithSearching.static_argmax"], [121, "ivy.container.searching.ContainerWithSearching.static_argmax"]], "static_argmin() (ivy.container.searching.containerwithsearching static method)": [[120, "ivy.container.searching.ContainerWithSearching.static_argmin"], [121, "ivy.container.searching.ContainerWithSearching.static_argmin"]], "static_argwhere() (ivy.container.searching.containerwithsearching static method)": [[120, "ivy.container.searching.ContainerWithSearching.static_argwhere"], [121, "ivy.container.searching.ContainerWithSearching.static_argwhere"]], "static_nonzero() (ivy.container.searching.containerwithsearching static method)": [[120, "ivy.container.searching.ContainerWithSearching.static_nonzero"], [121, "ivy.container.searching.ContainerWithSearching.static_nonzero"]], "static_where() (ivy.container.searching.containerwithsearching static method)": [[120, "ivy.container.searching.ContainerWithSearching.static_where"], [121, "ivy.container.searching.ContainerWithSearching.static_where"]], "where() (ivy.container.searching.containerwithsearching method)": [[120, "ivy.container.searching.ContainerWithSearching.where"], [121, "ivy.container.searching.ContainerWithSearching.where"]], "containerwithset (class in ivy.container.set)": [[122, "ivy.container.set.ContainerWithSet"], [123, "ivy.container.set.ContainerWithSet"]], "ivy.container.set": [[122, "module-ivy.container.set"]], "static_unique_all() (ivy.container.set.containerwithset static method)": [[122, "ivy.container.set.ContainerWithSet.static_unique_all"], [123, "ivy.container.set.ContainerWithSet.static_unique_all"]], "static_unique_counts() (ivy.container.set.containerwithset static method)": [[122, "ivy.container.set.ContainerWithSet.static_unique_counts"], [123, "ivy.container.set.ContainerWithSet.static_unique_counts"]], "static_unique_inverse() (ivy.container.set.containerwithset static method)": [[122, "ivy.container.set.ContainerWithSet.static_unique_inverse"], [123, "ivy.container.set.ContainerWithSet.static_unique_inverse"]], "static_unique_values() (ivy.container.set.containerwithset static method)": [[122, "ivy.container.set.ContainerWithSet.static_unique_values"], [123, "ivy.container.set.ContainerWithSet.static_unique_values"]], "unique_all() (ivy.container.set.containerwithset method)": [[122, "ivy.container.set.ContainerWithSet.unique_all"], [123, "ivy.container.set.ContainerWithSet.unique_all"]], "unique_counts() (ivy.container.set.containerwithset method)": [[122, "ivy.container.set.ContainerWithSet.unique_counts"], [123, "ivy.container.set.ContainerWithSet.unique_counts"]], "unique_inverse() (ivy.container.set.containerwithset method)": [[122, "ivy.container.set.ContainerWithSet.unique_inverse"], [123, "ivy.container.set.ContainerWithSet.unique_inverse"]], "unique_values() (ivy.container.set.containerwithset method)": [[122, "ivy.container.set.ContainerWithSet.unique_values"], [123, "ivy.container.set.ContainerWithSet.unique_values"]], "containerwithsorting (class in ivy.container.sorting)": [[124, "ivy.container.sorting.ContainerWithSorting"], [125, "ivy.container.sorting.ContainerWithSorting"]], "argsort() (ivy.container.sorting.containerwithsorting method)": [[124, "ivy.container.sorting.ContainerWithSorting.argsort"], [125, "ivy.container.sorting.ContainerWithSorting.argsort"]], "ivy.container.sorting": [[124, "module-ivy.container.sorting"]], "searchsorted() (ivy.container.sorting.containerwithsorting method)": [[124, "ivy.container.sorting.ContainerWithSorting.searchsorted"], [125, "ivy.container.sorting.ContainerWithSorting.searchsorted"]], "sort() (ivy.container.sorting.containerwithsorting method)": [[124, "ivy.container.sorting.ContainerWithSorting.sort"], [125, "ivy.container.sorting.ContainerWithSorting.sort"]], "static_argsort() (ivy.container.sorting.containerwithsorting static method)": [[124, "ivy.container.sorting.ContainerWithSorting.static_argsort"], [125, "ivy.container.sorting.ContainerWithSorting.static_argsort"]], "static_searchsorted() (ivy.container.sorting.containerwithsorting static method)": [[124, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"], [125, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"]], "static_sort() (ivy.container.sorting.containerwithsorting static method)": [[124, "ivy.container.sorting.ContainerWithSorting.static_sort"], [125, "ivy.container.sorting.ContainerWithSorting.static_sort"]], "containerwithstatistical (class in ivy.container.statistical)": [[126, "ivy.container.statistical.ContainerWithStatistical"], [127, "ivy.container.statistical.ContainerWithStatistical"]], "cumprod() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.cumprod"], [127, "ivy.container.statistical.ContainerWithStatistical.cumprod"]], "cumsum() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.cumsum"], [127, "ivy.container.statistical.ContainerWithStatistical.cumsum"]], "einsum() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.einsum"], [127, "ivy.container.statistical.ContainerWithStatistical.einsum"]], "ivy.container.statistical": [[126, "module-ivy.container.statistical"]], "max() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.max"], [127, "ivy.container.statistical.ContainerWithStatistical.max"]], "mean() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.mean"], [127, "ivy.container.statistical.ContainerWithStatistical.mean"]], "min() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.min"], [127, "ivy.container.statistical.ContainerWithStatistical.min"]], "prod() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.prod"], [127, "ivy.container.statistical.ContainerWithStatistical.prod"]], "static_cumprod() (ivy.container.statistical.containerwithstatistical static method)": [[126, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"], [127, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"]], "static_cumsum() (ivy.container.statistical.containerwithstatistical static method)": [[126, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"], [127, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"]], "static_prod() (ivy.container.statistical.containerwithstatistical static method)": [[126, "ivy.container.statistical.ContainerWithStatistical.static_prod"], [127, "ivy.container.statistical.ContainerWithStatistical.static_prod"]], "static_sum() (ivy.container.statistical.containerwithstatistical static method)": [[126, "ivy.container.statistical.ContainerWithStatistical.static_sum"], [127, "ivy.container.statistical.ContainerWithStatistical.static_sum"]], "static_var() (ivy.container.statistical.containerwithstatistical static method)": [[126, "ivy.container.statistical.ContainerWithStatistical.static_var"], [127, "ivy.container.statistical.ContainerWithStatistical.static_var"]], "std() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.std"], [127, "ivy.container.statistical.ContainerWithStatistical.std"]], "sum() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.sum"], [127, "ivy.container.statistical.ContainerWithStatistical.sum"]], "var() (ivy.container.statistical.containerwithstatistical method)": [[126, "ivy.container.statistical.ContainerWithStatistical.var"], [127, "ivy.container.statistical.ContainerWithStatistical.var"]], "containerwithutility (class in ivy.container.utility)": [[128, "ivy.container.utility.ContainerWithUtility"], [129, "ivy.container.utility.ContainerWithUtility"]], "all() (ivy.container.utility.containerwithutility method)": [[128, "ivy.container.utility.ContainerWithUtility.all"], [129, "ivy.container.utility.ContainerWithUtility.all"]], "any() (ivy.container.utility.containerwithutility method)": [[128, "ivy.container.utility.ContainerWithUtility.any"], [129, "ivy.container.utility.ContainerWithUtility.any"]], "ivy.container.utility": [[128, "module-ivy.container.utility"]], "static_all() (ivy.container.utility.containerwithutility static method)": [[128, "ivy.container.utility.ContainerWithUtility.static_all"], [129, "ivy.container.utility.ContainerWithUtility.static_all"]], "static_any() (ivy.container.utility.containerwithutility static method)": [[128, "ivy.container.utility.ContainerWithUtility.static_any"], [129, "ivy.container.utility.ContainerWithUtility.static_any"]], "add_ivy_container_instance_methods() (in module ivy.container.wrapping)": [[130, "ivy.container.wrapping.add_ivy_container_instance_methods"], [131, "ivy.container.wrapping.add_ivy_container_instance_methods"]], "ivy.container.wrapping": [[130, "module-ivy.container.wrapping"]], "handle_array_function() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.handle_array_function"], [173, "ivy.func_wrapper.handle_array_function"]], "handle_array_like_without_promotion() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.handle_array_like_without_promotion"], [174, "ivy.func_wrapper.handle_array_like_without_promotion"]], "handle_nans() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.handle_nans"], [175, "ivy.func_wrapper.handle_nans"]], "handle_nestable() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.handle_nestable"], [176, "ivy.func_wrapper.handle_nestable"]], "handle_out_argument() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.handle_out_argument"], [177, "ivy.func_wrapper.handle_out_argument"]], "infer_device() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.infer_device"], [178, "ivy.func_wrapper.infer_device"]], "infer_dtype() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.infer_dtype"], [179, "ivy.func_wrapper.infer_dtype"]], "inputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.inputs_to_ivy_arrays"], [180, "ivy.func_wrapper.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.inputs_to_native_arrays"], [181, "ivy.func_wrapper.inputs_to_native_arrays"]], "integer_arrays_to_float() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.integer_arrays_to_float"], [182, "ivy.func_wrapper.integer_arrays_to_float"]], "ivy.func_wrapper": [[172, "module-ivy.func_wrapper"]], "output_to_native_arrays() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.output_to_native_arrays"], [183, "ivy.func_wrapper.output_to_native_arrays"]], "outputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.outputs_to_ivy_arrays"], [184, "ivy.func_wrapper.outputs_to_ivy_arrays"]], "to_ivy_arrays_and_back() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.to_ivy_arrays_and_back"], [185, "ivy.func_wrapper.to_ivy_arrays_and_back"]], "to_native_arrays_and_back() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.to_native_arrays_and_back"], [186, "ivy.func_wrapper.to_native_arrays_and_back"]], "try_array_function_override() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.try_array_function_override"], [187, "ivy.func_wrapper.try_array_function_override"]], "with_supported_device_and_dtypes() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.with_supported_device_and_dtypes"]], "with_supported_devices() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.with_supported_devices"]], "with_supported_dtypes() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.with_supported_dtypes"]], "with_unsupported_device_and_dtypes() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.with_unsupported_device_and_dtypes"]], "with_unsupported_devices() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.with_unsupported_devices"]], "with_unsupported_dtypes() (in module ivy.func_wrapper)": [[172, "ivy.func_wrapper.with_unsupported_dtypes"]], "deserialize() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.deserialize"], [190, "ivy.functional.ivy.activations.deserialize"]], "gelu() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.gelu"], [191, "ivy.functional.ivy.activations.gelu"], [194, "ivy.functional.ivy.activations.gelu"]], "get() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.get"], [196, "ivy.functional.ivy.activations.get"]], "ivy.functional.ivy.activations": [[189, "module-ivy.functional.ivy.activations"]], "leaky_relu() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.leaky_relu"], [197, "ivy.functional.ivy.activations.leaky_relu"], [200, "ivy.functional.ivy.activations.leaky_relu"]], "log_softmax() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.log_softmax"], [202, "ivy.functional.ivy.activations.log_softmax"], [205, "ivy.functional.ivy.activations.log_softmax"]], "mish() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.mish"], [207, "ivy.functional.ivy.activations.mish"], [210, "ivy.functional.ivy.activations.mish"]], "relu() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.relu"], [212, "ivy.functional.ivy.activations.relu"], [215, "ivy.functional.ivy.activations.relu"]], "sigmoid() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.sigmoid"], [217, "ivy.functional.ivy.activations.sigmoid"], [220, "ivy.functional.ivy.activations.sigmoid"]], "softmax() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.softmax"], [222, "ivy.functional.ivy.activations.softmax"], [225, "ivy.functional.ivy.activations.softmax"]], "softplus() (in module ivy.functional.ivy.activations)": [[189, "ivy.functional.ivy.activations.softplus"], [227, "ivy.functional.ivy.activations.softplus"], [230, "ivy.functional.ivy.activations.softplus"]], "gelu() (in module ivy.array.array_methods)": [[191, "ivy.array.array_methods.gelu"], [192, "ivy.array.array_methods.gelu"]], "gelu() (in module ivy.container.container_methods)": [[191, "ivy.container.container_methods.gelu"], [193, "ivy.container.container_methods.gelu"]], "static_gelu() (in module ivy.container.container_methods)": [[191, "ivy.container.container_methods.static_gelu"], [195, "ivy.container.container_methods.static_gelu"]], "leaky_relu() (in module ivy.array.array_methods)": [[197, "ivy.array.array_methods.leaky_relu"], [198, "ivy.array.array_methods.leaky_relu"]], "leaky_relu() (in module ivy.container.container_methods)": [[197, "ivy.container.container_methods.leaky_relu"], [199, "ivy.container.container_methods.leaky_relu"]], "static_leaky_relu() (in module ivy.container.container_methods)": [[197, "ivy.container.container_methods.static_leaky_relu"], [201, "ivy.container.container_methods.static_leaky_relu"]], "log_softmax() (in module ivy.array.array_methods)": [[202, "ivy.array.array_methods.log_softmax"], [203, "ivy.array.array_methods.log_softmax"]], "log_softmax() (in module ivy.container.container_methods)": [[202, "ivy.container.container_methods.log_softmax"], [204, "ivy.container.container_methods.log_softmax"]], "static_log_softmax() (in module ivy.container.container_methods)": [[202, "ivy.container.container_methods.static_log_softmax"], [206, "ivy.container.container_methods.static_log_softmax"]], "mish() (in module ivy.array.array_methods)": [[207, "ivy.array.array_methods.mish"], [208, "ivy.array.array_methods.mish"]], "mish() (in module ivy.container.container_methods)": [[207, "ivy.container.container_methods.mish"], [209, "ivy.container.container_methods.mish"]], "static_mish() (in module ivy.container.container_methods)": [[207, "ivy.container.container_methods.static_mish"], [211, "ivy.container.container_methods.static_mish"]], "relu() (in module ivy.array.array_methods)": [[212, "ivy.array.array_methods.relu"], [213, "ivy.array.array_methods.relu"]], "relu() (in module ivy.container.container_methods)": [[212, "ivy.container.container_methods.relu"], [214, "ivy.container.container_methods.relu"]], "static_relu() (in module ivy.container.container_methods)": [[212, "ivy.container.container_methods.static_relu"], [216, "ivy.container.container_methods.static_relu"]], "sigmoid() (in module ivy.array.array_methods)": [[217, "ivy.array.array_methods.sigmoid"], [218, "ivy.array.array_methods.sigmoid"]], "sigmoid() (in module ivy.container.container_methods)": [[217, "ivy.container.container_methods.sigmoid"], [219, "ivy.container.container_methods.sigmoid"]], "static_sigmoid() (in module ivy.container.container_methods)": [[217, "ivy.container.container_methods.static_sigmoid"], [221, "ivy.container.container_methods.static_sigmoid"]], "softmax() (in module ivy.array.array_methods)": [[222, "ivy.array.array_methods.softmax"], [223, "ivy.array.array_methods.softmax"]], "softmax() (in module ivy.container.container_methods)": [[222, "ivy.container.container_methods.softmax"], [224, "ivy.container.container_methods.softmax"]], "static_softmax() (in module ivy.container.container_methods)": [[222, "ivy.container.container_methods.static_softmax"], [226, "ivy.container.container_methods.static_softmax"]], "softplus() (in module ivy.array.array_methods)": [[227, "ivy.array.array_methods.softplus"], [228, "ivy.array.array_methods.softplus"]], "softplus() (in module ivy.container.container_methods)": [[227, "ivy.container.container_methods.softplus"], [229, "ivy.container.container_methods.softplus"]], "static_softplus() (in module ivy.container.container_methods)": [[227, "ivy.container.container_methods.static_softplus"], [231, "ivy.container.container_methods.static_softplus"]], "e (in module ivy.functional.ivy.constants)": [[233, "ivy.functional.ivy.constants.e"]], "inf (in module ivy.functional.ivy.constants)": [[233, "ivy.functional.ivy.constants.inf"]], "ivy.functional.ivy.constants": [[233, "module-ivy.functional.ivy.constants"]], "nan (in module ivy.functional.ivy.constants)": [[233, "ivy.functional.ivy.constants.nan"]], "newaxis (in module ivy.functional.ivy.constants)": [[233, "ivy.functional.ivy.constants.newaxis"]], "pi (in module ivy.functional.ivy.constants)": [[233, "ivy.functional.ivy.constants.pi"]], "ifelse() (in module ivy.functional.ivy.control_flow_ops)": [[234, "ivy.functional.ivy.control_flow_ops.IfElse"], [235, "ivy.functional.ivy.control_flow_ops.IfElse"]], "whileloop() (in module ivy.functional.ivy.control_flow_ops)": [[234, "ivy.functional.ivy.control_flow_ops.WhileLoop"], [236, "ivy.functional.ivy.control_flow_ops.WhileLoop"]], "if_else() (in module ivy.functional.ivy.control_flow_ops)": [[234, "ivy.functional.ivy.control_flow_ops.if_else"], [237, "ivy.functional.ivy.control_flow_ops.if_else"]], "ivy.functional.ivy.control_flow_ops": [[234, "module-ivy.functional.ivy.control_flow_ops"]], "while_loop() (in module ivy.functional.ivy.control_flow_ops)": [[234, "ivy.functional.ivy.control_flow_ops.while_loop"], [238, "ivy.functional.ivy.control_flow_ops.while_loop"]], "nestedsequence (class in ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.NestedSequence"], [240, "ivy.functional.ivy.creation.NestedSequence"]], "__init__() (ivy.functional.ivy.creation.nestedsequence method)": [[239, "ivy.functional.ivy.creation.NestedSequence.__init__"], [240, "ivy.functional.ivy.creation.NestedSequence.__init__"]], "arange() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.arange"], [241, "ivy.functional.ivy.creation.arange"], [242, "ivy.functional.ivy.creation.arange"]], "array() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.array"]], "asarray() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.asarray"], [244, "ivy.functional.ivy.creation.asarray"], [246, "ivy.functional.ivy.creation.asarray"]], "asarray_handle_nestable() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.asarray_handle_nestable"], [248, "ivy.functional.ivy.creation.asarray_handle_nestable"]], "asarray_infer_device() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.asarray_infer_device"], [249, "ivy.functional.ivy.creation.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"], [250, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"]], "copy_array() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.copy_array"], [251, "ivy.functional.ivy.creation.copy_array"], [253, "ivy.functional.ivy.creation.copy_array"]], "empty() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.empty"], [254, "ivy.functional.ivy.creation.empty"]], "empty_like() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.empty_like"], [255, "ivy.functional.ivy.creation.empty_like"], [258, "ivy.functional.ivy.creation.empty_like"]], "eye() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.eye"], [260, "ivy.functional.ivy.creation.eye"], [261, "ivy.functional.ivy.creation.eye"]], "from_dlpack() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.from_dlpack"], [263, "ivy.functional.ivy.creation.from_dlpack"], [266, "ivy.functional.ivy.creation.from_dlpack"]], "full() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.full"], [268, "ivy.functional.ivy.creation.full"]], "full_like() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.full_like"], [269, "ivy.functional.ivy.creation.full_like"], [272, "ivy.functional.ivy.creation.full_like"]], "ivy.functional.ivy.creation": [[239, "module-ivy.functional.ivy.creation"]], "linspace() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.linspace"], [274, "ivy.functional.ivy.creation.linspace"], [277, "ivy.functional.ivy.creation.linspace"]], "logspace() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.logspace"], [279, "ivy.functional.ivy.creation.logspace"], [282, "ivy.functional.ivy.creation.logspace"]], "meshgrid() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.meshgrid"], [284, "ivy.functional.ivy.creation.meshgrid"], [287, "ivy.functional.ivy.creation.meshgrid"]], "native_array() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.native_array"], [289, "ivy.functional.ivy.creation.native_array"], [292, "ivy.functional.ivy.creation.native_array"]], "one_hot() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.one_hot"], [294, "ivy.functional.ivy.creation.one_hot"], [297, "ivy.functional.ivy.creation.one_hot"]], "ones() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.ones"], [299, "ivy.functional.ivy.creation.ones"], [300, "ivy.functional.ivy.creation.ones"]], "ones_like() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.ones_like"], [302, "ivy.functional.ivy.creation.ones_like"], [305, "ivy.functional.ivy.creation.ones_like"]], "tril() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.tril"], [307, "ivy.functional.ivy.creation.tril"], [311, "ivy.functional.ivy.creation.tril"]], "triu() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.triu"], [312, "ivy.functional.ivy.creation.triu"], [316, "ivy.functional.ivy.creation.triu"]], "zeros() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.zeros"], [317, "ivy.functional.ivy.creation.zeros"], [319, "ivy.functional.ivy.creation.zeros"]], "zeros_like() (in module ivy.functional.ivy.creation)": [[239, "ivy.functional.ivy.creation.zeros_like"], [320, "ivy.functional.ivy.creation.zeros_like"], [324, "ivy.functional.ivy.creation.zeros_like"]], "static_arange() (in module ivy.container.container_methods)": [[241, "ivy.container.container_methods.static_arange"], [243, "ivy.container.container_methods.static_arange"]], "asarray() (in module ivy.array.array_methods)": [[244, "ivy.array.array_methods.asarray"], [245, "ivy.array.array_methods.asarray"]], "static_asarray() (in module ivy.container.container_methods)": [[244, "ivy.container.container_methods.static_asarray"], [247, "ivy.container.container_methods.static_asarray"]], "copy_array() (in module ivy.array.array_methods)": [[251, "ivy.array.array_methods.copy_array"], [252, "ivy.array.array_methods.copy_array"]], "empty_like() (in module ivy.array.array_methods)": [[255, "ivy.array.array_methods.empty_like"], [256, "ivy.array.array_methods.empty_like"]], "empty_like() (in module ivy.container.container_methods)": [[255, "ivy.container.container_methods.empty_like"], [257, "ivy.container.container_methods.empty_like"]], "static_empty_like() (in module ivy.container.container_methods)": [[255, "ivy.container.container_methods.static_empty_like"], [259, "ivy.container.container_methods.static_empty_like"]], "static_eye() (in module ivy.container.container_methods)": [[260, "ivy.container.container_methods.static_eye"], [262, "ivy.container.container_methods.static_eye"]], "from_dlpack() (in module ivy.array.array_methods)": [[263, "ivy.array.array_methods.from_dlpack"], [264, "ivy.array.array_methods.from_dlpack"]], "from_dlpack() (in module ivy.container.container_methods)": [[263, "ivy.container.container_methods.from_dlpack"], [265, "ivy.container.container_methods.from_dlpack"]], "static_from_dlpack() (in module ivy.container.container_methods)": [[263, "ivy.container.container_methods.static_from_dlpack"], [267, "ivy.container.container_methods.static_from_dlpack"]], "full_like() (in module ivy.array.array_methods)": [[269, "ivy.array.array_methods.full_like"], [270, "ivy.array.array_methods.full_like"]], "full_like() (in module ivy.container.container_methods)": [[269, "ivy.container.container_methods.full_like"], [271, "ivy.container.container_methods.full_like"]], "static_full_like() (in module ivy.container.container_methods)": [[269, "ivy.container.container_methods.static_full_like"], [273, "ivy.container.container_methods.static_full_like"]], "linspace() (in module ivy.array.array_methods)": [[274, "ivy.array.array_methods.linspace"], [275, "ivy.array.array_methods.linspace"]], "linspace() (in module ivy.container.container_methods)": [[274, "ivy.container.container_methods.linspace"], [276, "ivy.container.container_methods.linspace"]], "static_linspace() (in module ivy.container.container_methods)": [[274, "ivy.container.container_methods.static_linspace"], [278, "ivy.container.container_methods.static_linspace"]], "logspace() (in module ivy.array.array_methods)": [[279, "ivy.array.array_methods.logspace"], [280, "ivy.array.array_methods.logspace"]], "logspace() (in module ivy.container.container_methods)": [[279, "ivy.container.container_methods.logspace"], [281, "ivy.container.container_methods.logspace"]], "static_logspace() (in module ivy.container.container_methods)": [[279, "ivy.container.container_methods.static_logspace"], [283, "ivy.container.container_methods.static_logspace"]], "meshgrid() (in module ivy.array.array_methods)": [[284, "ivy.array.array_methods.meshgrid"], [285, "ivy.array.array_methods.meshgrid"]], "meshgrid() (in module ivy.container.container_methods)": [[284, "ivy.container.container_methods.meshgrid"], [286, "ivy.container.container_methods.meshgrid"]], "static_meshgrid() (in module ivy.container.container_methods)": [[284, "ivy.container.container_methods.static_meshgrid"], [288, "ivy.container.container_methods.static_meshgrid"]], "native_array() (in module ivy.array.array_methods)": [[289, "ivy.array.array_methods.native_array"], [290, "ivy.array.array_methods.native_array"]], "native_array() (in module ivy.container.container_methods)": [[289, "ivy.container.container_methods.native_array"], [291, "ivy.container.container_methods.native_array"]], "static_native_array() (in module ivy.container.container_methods)": [[289, "ivy.container.container_methods.static_native_array"], [293, "ivy.container.container_methods.static_native_array"]], "one_hot() (in module ivy.array.array_methods)": [[294, "ivy.array.array_methods.one_hot"], [295, "ivy.array.array_methods.one_hot"]], "one_hot() (in module ivy.container.container_methods)": [[294, "ivy.container.container_methods.one_hot"], [296, "ivy.container.container_methods.one_hot"]], "static_one_hot() (in module ivy.container.container_methods)": [[294, "ivy.container.container_methods.static_one_hot"], [298, "ivy.container.container_methods.static_one_hot"]], "static_ones() (in module ivy.container.container_methods)": [[299, "ivy.container.container_methods.static_ones"], [301, "ivy.container.container_methods.static_ones"]], "ones_like() (in module ivy.array.array_methods)": [[302, "ivy.array.array_methods.ones_like"], [303, "ivy.array.array_methods.ones_like"]], "ones_like() (in module ivy.container.container_methods)": [[302, "ivy.container.container_methods.ones_like"], [304, "ivy.container.container_methods.ones_like"]], "static_ones_like() (in module ivy.container.container_methods)": [[302, "ivy.container.container_methods.static_ones_like"], [306, "ivy.container.container_methods.static_ones_like"]], "static_tril() (in module ivy.container.container_methods)": [[307, "ivy.container.container_methods.static_tril"], [308, "ivy.container.container_methods.static_tril"]], "tril() (in module ivy.array.array_methods)": [[307, "ivy.array.array_methods.tril"], [309, "ivy.array.array_methods.tril"]], "tril() (in module ivy.container.container_methods)": [[307, "ivy.container.container_methods.tril"], [310, "ivy.container.container_methods.tril"]], "static_triu() (in module ivy.container.container_methods)": [[312, "ivy.container.container_methods.static_triu"], [313, "ivy.container.container_methods.static_triu"]], "triu() (in module ivy.array.array_methods)": [[312, "ivy.array.array_methods.triu"], [314, "ivy.array.array_methods.triu"]], "triu() (in module ivy.container.container_methods)": [[312, "ivy.container.container_methods.triu"], [315, "ivy.container.container_methods.triu"]], "static_zeros() (in module ivy.container.container_methods)": [[317, "ivy.container.container_methods.static_zeros"], [318, "ivy.container.container_methods.static_zeros"]], "static_zeros_like() (in module ivy.container.container_methods)": [[320, "ivy.container.container_methods.static_zeros_like"], [321, "ivy.container.container_methods.static_zeros_like"]], "zeros_like() (in module ivy.array.array_methods)": [[320, "ivy.array.array_methods.zeros_like"], [322, "ivy.array.array_methods.zeros_like"]], "zeros_like() (in module ivy.container.container_methods)": [[320, "ivy.container.container_methods.zeros_like"], [323, "ivy.container.container_methods.zeros_like"]], "defaultcomplexdtype (class in ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.DefaultComplexDtype"], [326, "ivy.functional.ivy.data_type.DefaultComplexDtype"]], "defaultdtype (class in ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.DefaultDtype"], [327, "ivy.functional.ivy.data_type.DefaultDtype"]], "defaultfloatdtype (class in ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.DefaultFloatDtype"], [328, "ivy.functional.ivy.data_type.DefaultFloatDtype"]], "defaultintdtype (class in ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.DefaultIntDtype"], [329, "ivy.functional.ivy.data_type.DefaultIntDtype"]], "defaultuintdtype (class in ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.DefaultUintDtype"], [330, "ivy.functional.ivy.data_type.DefaultUintDtype"]], "__init__() (ivy.functional.ivy.data_type.defaultcomplexdtype method)": [[325, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"], [326, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultdtype method)": [[325, "ivy.functional.ivy.data_type.DefaultDtype.__init__"], [327, "ivy.functional.ivy.data_type.DefaultDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultfloatdtype method)": [[325, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"], [328, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultintdtype method)": [[325, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"], [329, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultuintdtype method)": [[325, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"], [330, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"]], "as_ivy_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.as_ivy_dtype"], [331, "ivy.functional.ivy.data_type.as_ivy_dtype"]], "as_native_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.as_native_dtype"], [332, "ivy.functional.ivy.data_type.as_native_dtype"]], "astype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.astype"], [333, "ivy.functional.ivy.data_type.astype"], [336, "ivy.functional.ivy.data_type.astype"]], "broadcast_arrays() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.broadcast_arrays"], [338, "ivy.functional.ivy.data_type.broadcast_arrays"], [341, "ivy.functional.ivy.data_type.broadcast_arrays"]], "broadcast_to() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.broadcast_to"], [343, "ivy.functional.ivy.data_type.broadcast_to"], [346, "ivy.functional.ivy.data_type.broadcast_to"]], "can_cast() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.can_cast"], [348, "ivy.functional.ivy.data_type.can_cast"], [351, "ivy.functional.ivy.data_type.can_cast"]], "check_float() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.check_float"], [353, "ivy.functional.ivy.data_type.check_float"]], "closest_valid_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.closest_valid_dtype"], [354, "ivy.functional.ivy.data_type.closest_valid_dtype"]], "default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.default_complex_dtype"], [355, "ivy.functional.ivy.data_type.default_complex_dtype"], [356, "ivy.functional.ivy.data_type.default_complex_dtype"]], "default_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.default_dtype"], [358, "ivy.functional.ivy.data_type.default_dtype"]], "default_float_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.default_float_dtype"], [359, "ivy.functional.ivy.data_type.default_float_dtype"], [360, "ivy.functional.ivy.data_type.default_float_dtype"]], "default_int_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.default_int_dtype"], [362, "ivy.functional.ivy.data_type.default_int_dtype"]], "default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.default_uint_dtype"], [363, "ivy.functional.ivy.data_type.default_uint_dtype"]], "dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.dtype"], [364, "ivy.functional.ivy.data_type.dtype"], [366, "ivy.functional.ivy.data_type.dtype"]], "dtype_bits() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.dtype_bits"], [368, "ivy.functional.ivy.data_type.dtype_bits"]], "finfo() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.finfo"], [369, "ivy.functional.ivy.data_type.finfo"], [372, "ivy.functional.ivy.data_type.finfo"]], "function_supported_dtypes() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.function_supported_dtypes"], [374, "ivy.functional.ivy.data_type.function_supported_dtypes"], [375, "ivy.functional.ivy.data_type.function_supported_dtypes"]], "function_unsupported_dtypes() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [377, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [378, "ivy.functional.ivy.data_type.function_unsupported_dtypes"]], "iinfo() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.iinfo"], [380, "ivy.functional.ivy.data_type.iinfo"], [383, "ivy.functional.ivy.data_type.iinfo"]], "infer_default_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.infer_default_dtype"], [385, "ivy.functional.ivy.data_type.infer_default_dtype"]], "invalid_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.invalid_dtype"], [386, "ivy.functional.ivy.data_type.invalid_dtype"]], "is_bool_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.is_bool_dtype"], [387, "ivy.functional.ivy.data_type.is_bool_dtype"], [390, "ivy.functional.ivy.data_type.is_bool_dtype"]], "is_complex_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.is_complex_dtype"], [392, "ivy.functional.ivy.data_type.is_complex_dtype"], [394, "ivy.functional.ivy.data_type.is_complex_dtype"]], "is_float_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.is_float_dtype"], [396, "ivy.functional.ivy.data_type.is_float_dtype"], [399, "ivy.functional.ivy.data_type.is_float_dtype"]], "is_int_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.is_int_dtype"], [401, "ivy.functional.ivy.data_type.is_int_dtype"], [404, "ivy.functional.ivy.data_type.is_int_dtype"]], "is_uint_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.is_uint_dtype"], [406, "ivy.functional.ivy.data_type.is_uint_dtype"], [409, "ivy.functional.ivy.data_type.is_uint_dtype"]], "ivy.functional.ivy.data_type": [[325, "module-ivy.functional.ivy.data_type"]], "promote_types() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.promote_types"], [411, "ivy.functional.ivy.data_type.promote_types"]], "promote_types_of_inputs() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.promote_types_of_inputs"], [412, "ivy.functional.ivy.data_type.promote_types_of_inputs"]], "result_type() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.result_type"], [413, "ivy.functional.ivy.data_type.result_type"], [416, "ivy.functional.ivy.data_type.result_type"]], "set_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.set_default_complex_dtype"], [418, "ivy.functional.ivy.data_type.set_default_complex_dtype"]], "set_default_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.set_default_dtype"], [419, "ivy.functional.ivy.data_type.set_default_dtype"]], "set_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.set_default_float_dtype"], [420, "ivy.functional.ivy.data_type.set_default_float_dtype"]], "set_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.set_default_int_dtype"], [421, "ivy.functional.ivy.data_type.set_default_int_dtype"]], "set_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.set_default_uint_dtype"], [422, "ivy.functional.ivy.data_type.set_default_uint_dtype"]], "type_promote_arrays() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.type_promote_arrays"], [423, "ivy.functional.ivy.data_type.type_promote_arrays"]], "unset_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.unset_default_complex_dtype"], [424, "ivy.functional.ivy.data_type.unset_default_complex_dtype"]], "unset_default_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.unset_default_dtype"], [425, "ivy.functional.ivy.data_type.unset_default_dtype"]], "unset_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.unset_default_float_dtype"], [426, "ivy.functional.ivy.data_type.unset_default_float_dtype"]], "unset_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.unset_default_int_dtype"], [427, "ivy.functional.ivy.data_type.unset_default_int_dtype"]], "unset_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.unset_default_uint_dtype"], [428, "ivy.functional.ivy.data_type.unset_default_uint_dtype"]], "valid_dtype() (in module ivy.functional.ivy.data_type)": [[325, "ivy.functional.ivy.data_type.valid_dtype"], [429, "ivy.functional.ivy.data_type.valid_dtype"]], "astype() (in module ivy.array.array_methods)": [[333, "ivy.array.array_methods.astype"], [334, "ivy.array.array_methods.astype"]], "astype() (in module ivy.container.container_methods)": [[333, "ivy.container.container_methods.astype"], [335, "ivy.container.container_methods.astype"]], "static_astype() (in module ivy.container.container_methods)": [[333, "ivy.container.container_methods.static_astype"], [337, "ivy.container.container_methods.static_astype"]], "broadcast_arrays() (in module ivy.array.array_methods)": [[338, "ivy.array.array_methods.broadcast_arrays"], [339, "ivy.array.array_methods.broadcast_arrays"]], "broadcast_arrays() (in module ivy.container.container_methods)": [[338, "ivy.container.container_methods.broadcast_arrays"], [340, "ivy.container.container_methods.broadcast_arrays"]], "static_broadcast_arrays() (in module ivy.container.container_methods)": [[338, "ivy.container.container_methods.static_broadcast_arrays"], [342, "ivy.container.container_methods.static_broadcast_arrays"]], "broadcast_to() (in module ivy.array.array_methods)": [[343, "ivy.array.array_methods.broadcast_to"], [344, "ivy.array.array_methods.broadcast_to"]], "broadcast_to() (in module ivy.container.container_methods)": [[343, "ivy.container.container_methods.broadcast_to"], [345, "ivy.container.container_methods.broadcast_to"]], "static_broadcast_to() (in module ivy.container.container_methods)": [[343, "ivy.container.container_methods.static_broadcast_to"], [347, "ivy.container.container_methods.static_broadcast_to"]], "can_cast() (in module ivy.array.array_methods)": [[348, "ivy.array.array_methods.can_cast"], [349, "ivy.array.array_methods.can_cast"]], "can_cast() (in module ivy.container.container_methods)": [[348, "ivy.container.container_methods.can_cast"], [350, "ivy.container.container_methods.can_cast"]], "static_can_cast() (in module ivy.container.container_methods)": [[348, "ivy.container.container_methods.static_can_cast"], [352, "ivy.container.container_methods.static_can_cast"]], "static_default_complex_dtype() (in module ivy.container.container_methods)": [[355, "ivy.container.container_methods.static_default_complex_dtype"], [357, "ivy.container.container_methods.static_default_complex_dtype"]], "static_default_float_dtype() (in module ivy.container.container_methods)": [[359, "ivy.container.container_methods.static_default_float_dtype"], [361, "ivy.container.container_methods.static_default_float_dtype"]], "dtype() (in module ivy.container.container_methods)": [[364, "ivy.container.container_methods.dtype"], [365, "ivy.container.container_methods.dtype"]], "static_dtype() (in module ivy.container.container_methods)": [[364, "ivy.container.container_methods.static_dtype"], [367, "ivy.container.container_methods.static_dtype"]], "finfo() (in module ivy.array.array_methods)": [[369, "ivy.array.array_methods.finfo"], [370, "ivy.array.array_methods.finfo"]], "finfo() (in module ivy.container.container_methods)": [[369, "ivy.container.container_methods.finfo"], [371, "ivy.container.container_methods.finfo"]], "static_finfo() (in module ivy.container.container_methods)": [[369, "ivy.container.container_methods.static_finfo"], [373, "ivy.container.container_methods.static_finfo"]], "static_function_supported_dtypes() (in module ivy.container.container_methods)": [[374, "ivy.container.container_methods.static_function_supported_dtypes"], [376, "ivy.container.container_methods.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (in module ivy.container.container_methods)": [[377, "ivy.container.container_methods.static_function_unsupported_dtypes"], [379, "ivy.container.container_methods.static_function_unsupported_dtypes"]], "iinfo() (in module ivy.array.array_methods)": [[380, "ivy.array.array_methods.iinfo"], [381, "ivy.array.array_methods.iinfo"]], "iinfo() (in module ivy.container.container_methods)": [[380, "ivy.container.container_methods.iinfo"], [382, "ivy.container.container_methods.iinfo"]], "static_iinfo() (in module ivy.container.container_methods)": [[380, "ivy.container.container_methods.static_iinfo"], [384, "ivy.container.container_methods.static_iinfo"]], "is_bool_dtype() (in module ivy.array.array_methods)": [[387, "ivy.array.array_methods.is_bool_dtype"], [388, "ivy.array.array_methods.is_bool_dtype"]], "is_bool_dtype() (in module ivy.container.container_methods)": [[387, "ivy.container.container_methods.is_bool_dtype"], [389, "ivy.container.container_methods.is_bool_dtype"]], "static_is_bool_dtype() (in module ivy.container.container_methods)": [[387, "ivy.container.container_methods.static_is_bool_dtype"], [391, "ivy.container.container_methods.static_is_bool_dtype"]], "is_complex_dtype() (in module ivy.container.container_methods)": [[392, "ivy.container.container_methods.is_complex_dtype"], [393, "ivy.container.container_methods.is_complex_dtype"]], "static_is_complex_dtype() (in module ivy.container.container_methods)": [[392, "ivy.container.container_methods.static_is_complex_dtype"], [395, "ivy.container.container_methods.static_is_complex_dtype"]], "is_float_dtype() (in module ivy.array.array_methods)": [[396, "ivy.array.array_methods.is_float_dtype"], [397, "ivy.array.array_methods.is_float_dtype"]], "is_float_dtype() (in module ivy.container.container_methods)": [[396, "ivy.container.container_methods.is_float_dtype"], [398, "ivy.container.container_methods.is_float_dtype"]], "static_is_float_dtype() (in module ivy.container.container_methods)": [[396, "ivy.container.container_methods.static_is_float_dtype"], [400, "ivy.container.container_methods.static_is_float_dtype"]], "is_int_dtype() (in module ivy.array.array_methods)": [[401, "ivy.array.array_methods.is_int_dtype"], [402, "ivy.array.array_methods.is_int_dtype"]], "is_int_dtype() (in module ivy.container.container_methods)": [[401, "ivy.container.container_methods.is_int_dtype"], [403, "ivy.container.container_methods.is_int_dtype"]], "static_is_int_dtype() (in module ivy.container.container_methods)": [[401, "ivy.container.container_methods.static_is_int_dtype"], [405, "ivy.container.container_methods.static_is_int_dtype"]], "is_uint_dtype() (in module ivy.array.array_methods)": [[406, "ivy.array.array_methods.is_uint_dtype"], [407, "ivy.array.array_methods.is_uint_dtype"]], "is_uint_dtype() (in module ivy.container.container_methods)": [[406, "ivy.container.container_methods.is_uint_dtype"], [408, "ivy.container.container_methods.is_uint_dtype"]], "static_is_uint_dtype() (in module ivy.container.container_methods)": [[406, "ivy.container.container_methods.static_is_uint_dtype"], [410, "ivy.container.container_methods.static_is_uint_dtype"]], "result_type() (in module ivy.array.array_methods)": [[413, "ivy.array.array_methods.result_type"], [414, "ivy.array.array_methods.result_type"]], "result_type() (in module ivy.container.container_methods)": [[413, "ivy.container.container_methods.result_type"], [415, "ivy.container.container_methods.result_type"]], "static_result_type() (in module ivy.container.container_methods)": [[413, "ivy.container.container_methods.static_result_type"], [417, "ivy.container.container_methods.static_result_type"]], "defaultdevice (class in ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.DefaultDevice"], [431, "ivy.functional.ivy.device.DefaultDevice"]], "profiler (class in ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.Profiler"], [432, "ivy.functional.ivy.device.Profiler"]], "__enter__() (ivy.functional.ivy.device.defaultdevice method)": [[430, "ivy.functional.ivy.device.DefaultDevice.__enter__"], [431, "ivy.functional.ivy.device.DefaultDevice.__enter__"]], "__exit__() (ivy.functional.ivy.device.defaultdevice method)": [[430, "ivy.functional.ivy.device.DefaultDevice.__exit__"], [431, "ivy.functional.ivy.device.DefaultDevice.__exit__"]], "__init__() (ivy.functional.ivy.device.defaultdevice method)": [[430, "ivy.functional.ivy.device.DefaultDevice.__init__"], [431, "ivy.functional.ivy.device.DefaultDevice.__init__"]], "__init__() (ivy.functional.ivy.device.profiler method)": [[430, "ivy.functional.ivy.device.Profiler.__init__"], [432, "ivy.functional.ivy.device.Profiler.__init__"]], "as_ivy_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.as_ivy_dev"], [433, "ivy.functional.ivy.device.as_ivy_dev"]], "as_native_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.as_native_dev"], [434, "ivy.functional.ivy.device.as_native_dev"]], "clear_mem_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.clear_mem_on_dev"], [435, "ivy.functional.ivy.device.clear_mem_on_dev"]], "default_device() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.default_device"], [436, "ivy.functional.ivy.device.default_device"]], "dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.dev"], [437, "ivy.functional.ivy.device.dev"], [440, "ivy.functional.ivy.device.dev"]], "dev_util() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.dev_util"], [442, "ivy.functional.ivy.device.dev_util"]], "function_supported_devices() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.function_supported_devices"], [443, "ivy.functional.ivy.device.function_supported_devices"]], "function_unsupported_devices() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.function_unsupported_devices"], [444, "ivy.functional.ivy.device.function_unsupported_devices"]], "get_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"], [445, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"]], "gpu_is_available() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.gpu_is_available"], [446, "ivy.functional.ivy.device.gpu_is_available"]], "ivy.functional.ivy.device": [[430, "module-ivy.functional.ivy.device"]], "num_cpu_cores() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.num_cpu_cores"], [447, "ivy.functional.ivy.device.num_cpu_cores"]], "num_gpus() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.num_gpus"], [448, "ivy.functional.ivy.device.num_gpus"]], "num_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"], [449, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"]], "percent_used_mem_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.percent_used_mem_on_dev"], [450, "ivy.functional.ivy.device.percent_used_mem_on_dev"]], "print_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"], [451, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"]], "set_default_device() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.set_default_device"], [452, "ivy.functional.ivy.device.set_default_device"]], "set_split_factor() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.set_split_factor"], [453, "ivy.functional.ivy.device.set_split_factor"]], "split_factor() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.split_factor"], [454, "ivy.functional.ivy.device.split_factor"]], "split_func_call() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.split_func_call"], [455, "ivy.functional.ivy.device.split_func_call"]], "start() (ivy.functional.ivy.device.profiler method)": [[430, "ivy.functional.ivy.device.Profiler.start"], [432, "ivy.functional.ivy.device.Profiler.start"]], "stop() (ivy.functional.ivy.device.profiler method)": [[430, "ivy.functional.ivy.device.Profiler.stop"], [432, "ivy.functional.ivy.device.Profiler.stop"]], "to_device() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.to_device"], [456, "ivy.functional.ivy.device.to_device"], [460, "ivy.functional.ivy.device.to_device"]], "total_mem_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.total_mem_on_dev"], [461, "ivy.functional.ivy.device.total_mem_on_dev"]], "tpu_is_available() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.tpu_is_available"], [462, "ivy.functional.ivy.device.tpu_is_available"]], "unset_default_device() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.unset_default_device"], [463, "ivy.functional.ivy.device.unset_default_device"]], "used_mem_on_dev() (in module ivy.functional.ivy.device)": [[430, "ivy.functional.ivy.device.used_mem_on_dev"], [464, "ivy.functional.ivy.device.used_mem_on_dev"]], "dev() (in module ivy.array.array_methods)": [[437, "ivy.array.array_methods.dev"], [438, "ivy.array.array_methods.dev"]], "dev() (in module ivy.container.container_methods)": [[437, "ivy.container.container_methods.dev"], [439, "ivy.container.container_methods.dev"]], "static_dev() (in module ivy.container.container_methods)": [[437, "ivy.container.container_methods.static_dev"], [441, "ivy.container.container_methods.static_dev"]], "static_to_device() (in module ivy.container.container_methods)": [[456, "ivy.container.container_methods.static_to_device"], [457, "ivy.container.container_methods.static_to_device"]], "to_device() (in module ivy.array.array_methods)": [[456, "ivy.array.array_methods.to_device"], [458, "ivy.array.array_methods.to_device"]], "to_device() (in module ivy.container.container_methods)": [[456, "ivy.container.container_methods.to_device"], [459, "ivy.container.container_methods.to_device"]], "abs() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.abs"], [466, "ivy.functional.ivy.elementwise.abs"], [469, "ivy.functional.ivy.elementwise.abs"]], "acos() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.acos"], [471, "ivy.functional.ivy.elementwise.acos"], [474, "ivy.functional.ivy.elementwise.acos"]], "acosh() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.acosh"], [476, "ivy.functional.ivy.elementwise.acosh"], [479, "ivy.functional.ivy.elementwise.acosh"]], "add() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.add"], [481, "ivy.functional.ivy.elementwise.add"], [484, "ivy.functional.ivy.elementwise.add"]], "asin() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.asin"], [486, "ivy.functional.ivy.elementwise.asin"], [489, "ivy.functional.ivy.elementwise.asin"]], "asinh() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.asinh"], [491, "ivy.functional.ivy.elementwise.asinh"], [494, "ivy.functional.ivy.elementwise.asinh"]], "atan() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.atan"], [496, "ivy.functional.ivy.elementwise.atan"], [499, "ivy.functional.ivy.elementwise.atan"]], "atan2() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.atan2"], [501, "ivy.functional.ivy.elementwise.atan2"], [504, "ivy.functional.ivy.elementwise.atan2"]], "atanh() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.atanh"], [506, "ivy.functional.ivy.elementwise.atanh"], [509, "ivy.functional.ivy.elementwise.atanh"]], "bitwise_and() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.bitwise_and"], [511, "ivy.functional.ivy.elementwise.bitwise_and"], [514, "ivy.functional.ivy.elementwise.bitwise_and"]], "bitwise_invert() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.bitwise_invert"], [516, "ivy.functional.ivy.elementwise.bitwise_invert"], [519, "ivy.functional.ivy.elementwise.bitwise_invert"]], "bitwise_left_shift() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [521, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [524, "ivy.functional.ivy.elementwise.bitwise_left_shift"]], "bitwise_or() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.bitwise_or"], [526, "ivy.functional.ivy.elementwise.bitwise_or"], [529, "ivy.functional.ivy.elementwise.bitwise_or"]], "bitwise_right_shift() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [531, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [534, "ivy.functional.ivy.elementwise.bitwise_right_shift"]], "bitwise_xor() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.bitwise_xor"], [536, "ivy.functional.ivy.elementwise.bitwise_xor"], [539, "ivy.functional.ivy.elementwise.bitwise_xor"]], "ceil() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.ceil"], [541, "ivy.functional.ivy.elementwise.ceil"], [544, "ivy.functional.ivy.elementwise.ceil"]], "cos() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.cos"], [546, "ivy.functional.ivy.elementwise.cos"], [549, "ivy.functional.ivy.elementwise.cos"]], "cosh() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.cosh"], [551, "ivy.functional.ivy.elementwise.cosh"], [554, "ivy.functional.ivy.elementwise.cosh"]], "deg2rad() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.deg2rad"], [556, "ivy.functional.ivy.elementwise.deg2rad"], [559, "ivy.functional.ivy.elementwise.deg2rad"]], "divide() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.divide"], [561, "ivy.functional.ivy.elementwise.divide"], [564, "ivy.functional.ivy.elementwise.divide"]], "equal() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.equal"], [566, "ivy.functional.ivy.elementwise.equal"], [569, "ivy.functional.ivy.elementwise.equal"]], "erf() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.erf"], [571, "ivy.functional.ivy.elementwise.erf"], [574, "ivy.functional.ivy.elementwise.erf"]], "exp() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.exp"], [576, "ivy.functional.ivy.elementwise.exp"], [579, "ivy.functional.ivy.elementwise.exp"]], "expm1() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.expm1"], [581, "ivy.functional.ivy.elementwise.expm1"], [584, "ivy.functional.ivy.elementwise.expm1"]], "floor() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.floor"], [586, "ivy.functional.ivy.elementwise.floor"], [589, "ivy.functional.ivy.elementwise.floor"]], "floor_divide() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.floor_divide"], [591, "ivy.functional.ivy.elementwise.floor_divide"], [594, "ivy.functional.ivy.elementwise.floor_divide"]], "greater() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.greater"], [596, "ivy.functional.ivy.elementwise.greater"], [599, "ivy.functional.ivy.elementwise.greater"]], "greater_equal() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.greater_equal"], [601, "ivy.functional.ivy.elementwise.greater_equal"], [604, "ivy.functional.ivy.elementwise.greater_equal"]], "isfinite() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.isfinite"], [606, "ivy.functional.ivy.elementwise.isfinite"], [609, "ivy.functional.ivy.elementwise.isfinite"]], "isinf() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.isinf"], [611, "ivy.functional.ivy.elementwise.isinf"], [614, "ivy.functional.ivy.elementwise.isinf"]], "isnan() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.isnan"], [616, "ivy.functional.ivy.elementwise.isnan"], [619, "ivy.functional.ivy.elementwise.isnan"]], "isreal() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.isreal"], [621, "ivy.functional.ivy.elementwise.isreal"], [624, "ivy.functional.ivy.elementwise.isreal"]], "ivy.functional.ivy.elementwise": [[465, "module-ivy.functional.ivy.elementwise"]], "less() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.less"], [626, "ivy.functional.ivy.elementwise.less"], [629, "ivy.functional.ivy.elementwise.less"]], "less_equal() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.less_equal"], [631, "ivy.functional.ivy.elementwise.less_equal"], [634, "ivy.functional.ivy.elementwise.less_equal"]], "log() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.log"], [636, "ivy.functional.ivy.elementwise.log"], [639, "ivy.functional.ivy.elementwise.log"]], "log10() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.log10"], [641, "ivy.functional.ivy.elementwise.log10"], [644, "ivy.functional.ivy.elementwise.log10"]], "log1p() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.log1p"], [646, "ivy.functional.ivy.elementwise.log1p"], [649, "ivy.functional.ivy.elementwise.log1p"]], "log2() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.log2"], [651, "ivy.functional.ivy.elementwise.log2"], [654, "ivy.functional.ivy.elementwise.log2"]], "logaddexp() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.logaddexp"], [656, "ivy.functional.ivy.elementwise.logaddexp"], [659, "ivy.functional.ivy.elementwise.logaddexp"]], "logical_and() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.logical_and"], [661, "ivy.functional.ivy.elementwise.logical_and"], [664, "ivy.functional.ivy.elementwise.logical_and"]], "logical_not() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.logical_not"], [666, "ivy.functional.ivy.elementwise.logical_not"], [669, "ivy.functional.ivy.elementwise.logical_not"]], "logical_or() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.logical_or"], [671, "ivy.functional.ivy.elementwise.logical_or"], [674, "ivy.functional.ivy.elementwise.logical_or"]], "logical_xor() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.logical_xor"], [676, "ivy.functional.ivy.elementwise.logical_xor"], [679, "ivy.functional.ivy.elementwise.logical_xor"]], "maximum() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.maximum"], [681, "ivy.functional.ivy.elementwise.maximum"], [684, "ivy.functional.ivy.elementwise.maximum"]], "minimum() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.minimum"], [686, "ivy.functional.ivy.elementwise.minimum"], [689, "ivy.functional.ivy.elementwise.minimum"]], "multiply() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.multiply"], [691, "ivy.functional.ivy.elementwise.multiply"], [694, "ivy.functional.ivy.elementwise.multiply"]], "negative() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.negative"], [696, "ivy.functional.ivy.elementwise.negative"], [699, "ivy.functional.ivy.elementwise.negative"]], "not_equal() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.not_equal"], [701, "ivy.functional.ivy.elementwise.not_equal"], [704, "ivy.functional.ivy.elementwise.not_equal"]], "positive() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.positive"], [706, "ivy.functional.ivy.elementwise.positive"], [709, "ivy.functional.ivy.elementwise.positive"]], "pow() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.pow"], [711, "ivy.functional.ivy.elementwise.pow"], [714, "ivy.functional.ivy.elementwise.pow"]], "rad2deg() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.rad2deg"], [716, "ivy.functional.ivy.elementwise.rad2deg"], [719, "ivy.functional.ivy.elementwise.rad2deg"]], "reciprocal() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.reciprocal"], [721, "ivy.functional.ivy.elementwise.reciprocal"], [724, "ivy.functional.ivy.elementwise.reciprocal"]], "remainder() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.remainder"], [726, "ivy.functional.ivy.elementwise.remainder"], [729, "ivy.functional.ivy.elementwise.remainder"]], "round() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.round"], [731, "ivy.functional.ivy.elementwise.round"], [734, "ivy.functional.ivy.elementwise.round"]], "sign() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.sign"], [736, "ivy.functional.ivy.elementwise.sign"], [739, "ivy.functional.ivy.elementwise.sign"]], "sin() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.sin"], [741, "ivy.functional.ivy.elementwise.sin"], [744, "ivy.functional.ivy.elementwise.sin"]], "sinh() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.sinh"], [746, "ivy.functional.ivy.elementwise.sinh"], [749, "ivy.functional.ivy.elementwise.sinh"]], "sqrt() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.sqrt"], [751, "ivy.functional.ivy.elementwise.sqrt"], [754, "ivy.functional.ivy.elementwise.sqrt"]], "square() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.square"], [756, "ivy.functional.ivy.elementwise.square"], [759, "ivy.functional.ivy.elementwise.square"]], "subtract() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.subtract"], [761, "ivy.functional.ivy.elementwise.subtract"], [765, "ivy.functional.ivy.elementwise.subtract"]], "tan() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.tan"], [766, "ivy.functional.ivy.elementwise.tan"], [770, "ivy.functional.ivy.elementwise.tan"]], "tanh() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.tanh"], [771, "ivy.functional.ivy.elementwise.tanh"], [775, "ivy.functional.ivy.elementwise.tanh"]], "trunc() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.trunc"], [776, "ivy.functional.ivy.elementwise.trunc"], [780, "ivy.functional.ivy.elementwise.trunc"]], "trunc_divide() (in module ivy.functional.ivy.elementwise)": [[465, "ivy.functional.ivy.elementwise.trunc_divide"], [781, "ivy.functional.ivy.elementwise.trunc_divide"], [785, "ivy.functional.ivy.elementwise.trunc_divide"]], "abs() (in module ivy.array.array_methods)": [[466, "ivy.array.array_methods.abs"], [467, "ivy.array.array_methods.abs"]], "abs() (in module ivy.container.container_methods)": [[466, "ivy.container.container_methods.abs"], [468, "ivy.container.container_methods.abs"]], "static_abs() (in module ivy.container.container_methods)": [[466, "ivy.container.container_methods.static_abs"], [470, "ivy.container.container_methods.static_abs"]], "acos() (in module ivy.array.array_methods)": [[471, "ivy.array.array_methods.acos"], [472, "ivy.array.array_methods.acos"]], "acos() (in module ivy.container.container_methods)": [[471, "ivy.container.container_methods.acos"], [473, "ivy.container.container_methods.acos"]], "static_acos() (in module ivy.container.container_methods)": [[471, "ivy.container.container_methods.static_acos"], [475, "ivy.container.container_methods.static_acos"]], "acosh() (in module ivy.array.array_methods)": [[476, "ivy.array.array_methods.acosh"], [477, "ivy.array.array_methods.acosh"]], "acosh() (in module ivy.container.container_methods)": [[476, "ivy.container.container_methods.acosh"], [478, "ivy.container.container_methods.acosh"]], "static_acosh() (in module ivy.container.container_methods)": [[476, "ivy.container.container_methods.static_acosh"], [480, "ivy.container.container_methods.static_acosh"]], "add() (in module ivy.array.array_methods)": [[481, "ivy.array.array_methods.add"], [482, "ivy.array.array_methods.add"]], "add() (in module ivy.container.container_methods)": [[481, "ivy.container.container_methods.add"], [483, "ivy.container.container_methods.add"]], "static_add() (in module ivy.container.container_methods)": [[481, "ivy.container.container_methods.static_add"], [485, "ivy.container.container_methods.static_add"]], "asin() (in module ivy.array.array_methods)": [[486, "ivy.array.array_methods.asin"], [487, "ivy.array.array_methods.asin"]], "asin() (in module ivy.container.container_methods)": [[486, "ivy.container.container_methods.asin"], [488, "ivy.container.container_methods.asin"]], "static_asin() (in module ivy.container.container_methods)": [[486, "ivy.container.container_methods.static_asin"], [490, "ivy.container.container_methods.static_asin"]], "asinh() (in module ivy.array.array_methods)": [[491, "ivy.array.array_methods.asinh"], [492, "ivy.array.array_methods.asinh"]], "asinh() (in module ivy.container.container_methods)": [[491, "ivy.container.container_methods.asinh"], [493, "ivy.container.container_methods.asinh"]], "static_asinh() (in module ivy.container.container_methods)": [[491, "ivy.container.container_methods.static_asinh"], [495, "ivy.container.container_methods.static_asinh"]], "atan() (in module ivy.array.array_methods)": [[496, "ivy.array.array_methods.atan"], [497, "ivy.array.array_methods.atan"]], "atan() (in module ivy.container.container_methods)": [[496, "ivy.container.container_methods.atan"], [498, "ivy.container.container_methods.atan"]], "static_atan() (in module ivy.container.container_methods)": [[496, "ivy.container.container_methods.static_atan"], [500, "ivy.container.container_methods.static_atan"]], "atan2() (in module ivy.array.array_methods)": [[501, "ivy.array.array_methods.atan2"], [502, "ivy.array.array_methods.atan2"]], "atan2() (in module ivy.container.container_methods)": [[501, "ivy.container.container_methods.atan2"], [503, "ivy.container.container_methods.atan2"]], "static_atan2() (in module ivy.container.container_methods)": [[501, "ivy.container.container_methods.static_atan2"], [505, "ivy.container.container_methods.static_atan2"]], "atanh() (in module ivy.array.array_methods)": [[506, "ivy.array.array_methods.atanh"], [507, "ivy.array.array_methods.atanh"]], "atanh() (in module ivy.container.container_methods)": [[506, "ivy.container.container_methods.atanh"], [508, "ivy.container.container_methods.atanh"]], "static_atanh() (in module ivy.container.container_methods)": [[506, "ivy.container.container_methods.static_atanh"], [510, "ivy.container.container_methods.static_atanh"]], "bitwise_and() (in module ivy.array.array_methods)": [[511, "ivy.array.array_methods.bitwise_and"], [512, "ivy.array.array_methods.bitwise_and"]], "bitwise_and() (in module ivy.container.container_methods)": [[511, "ivy.container.container_methods.bitwise_and"], [513, "ivy.container.container_methods.bitwise_and"]], "static_bitwise_and() (in module ivy.container.container_methods)": [[511, "ivy.container.container_methods.static_bitwise_and"], [515, "ivy.container.container_methods.static_bitwise_and"]], "bitwise_invert() (in module ivy.array.array_methods)": [[516, "ivy.array.array_methods.bitwise_invert"], [517, "ivy.array.array_methods.bitwise_invert"]], "bitwise_invert() (in module ivy.container.container_methods)": [[516, "ivy.container.container_methods.bitwise_invert"], [518, "ivy.container.container_methods.bitwise_invert"]], "static_bitwise_invert() (in module ivy.container.container_methods)": [[516, "ivy.container.container_methods.static_bitwise_invert"], [520, "ivy.container.container_methods.static_bitwise_invert"]], "bitwise_left_shift() (in module ivy.array.array_methods)": [[521, "ivy.array.array_methods.bitwise_left_shift"], [522, "ivy.array.array_methods.bitwise_left_shift"]], "bitwise_left_shift() (in module ivy.container.container_methods)": [[521, "ivy.container.container_methods.bitwise_left_shift"], [523, "ivy.container.container_methods.bitwise_left_shift"]], "static_bitwise_left_shift() (in module ivy.container.container_methods)": [[521, "ivy.container.container_methods.static_bitwise_left_shift"], [525, "ivy.container.container_methods.static_bitwise_left_shift"]], "bitwise_or() (in module ivy.array.array_methods)": [[526, "ivy.array.array_methods.bitwise_or"], [527, "ivy.array.array_methods.bitwise_or"]], "bitwise_or() (in module ivy.container.container_methods)": [[526, "ivy.container.container_methods.bitwise_or"], [528, "ivy.container.container_methods.bitwise_or"]], "static_bitwise_or() (in module ivy.container.container_methods)": [[526, "ivy.container.container_methods.static_bitwise_or"], [530, "ivy.container.container_methods.static_bitwise_or"]], "bitwise_right_shift() (in module ivy.array.array_methods)": [[531, "ivy.array.array_methods.bitwise_right_shift"], [532, "ivy.array.array_methods.bitwise_right_shift"]], "bitwise_right_shift() (in module ivy.container.container_methods)": [[531, "ivy.container.container_methods.bitwise_right_shift"], [533, "ivy.container.container_methods.bitwise_right_shift"]], "static_bitwise_right_shift() (in module ivy.container.container_methods)": [[531, "ivy.container.container_methods.static_bitwise_right_shift"], [535, "ivy.container.container_methods.static_bitwise_right_shift"]], "bitwise_xor() (in module ivy.array.array_methods)": [[536, "ivy.array.array_methods.bitwise_xor"], [537, "ivy.array.array_methods.bitwise_xor"]], "bitwise_xor() (in module ivy.container.container_methods)": [[536, "ivy.container.container_methods.bitwise_xor"], [538, "ivy.container.container_methods.bitwise_xor"]], "static_bitwise_xor() (in module ivy.container.container_methods)": [[536, "ivy.container.container_methods.static_bitwise_xor"], [540, "ivy.container.container_methods.static_bitwise_xor"]], "ceil() (in module ivy.array.array_methods)": [[541, "ivy.array.array_methods.ceil"], [542, "ivy.array.array_methods.ceil"]], "ceil() (in module ivy.container.container_methods)": [[541, "ivy.container.container_methods.ceil"], [543, "ivy.container.container_methods.ceil"]], "static_ceil() (in module ivy.container.container_methods)": [[541, "ivy.container.container_methods.static_ceil"], [545, "ivy.container.container_methods.static_ceil"]], "cos() (in module ivy.array.array_methods)": [[546, "ivy.array.array_methods.cos"], [547, "ivy.array.array_methods.cos"]], "cos() (in module ivy.container.container_methods)": [[546, "ivy.container.container_methods.cos"], [548, "ivy.container.container_methods.cos"]], "static_cos() (in module ivy.container.container_methods)": [[546, "ivy.container.container_methods.static_cos"], [550, "ivy.container.container_methods.static_cos"]], "cosh() (in module ivy.array.array_methods)": [[551, "ivy.array.array_methods.cosh"], [552, "ivy.array.array_methods.cosh"]], "cosh() (in module ivy.container.container_methods)": [[551, "ivy.container.container_methods.cosh"], [553, "ivy.container.container_methods.cosh"]], "static_cosh() (in module ivy.container.container_methods)": [[551, "ivy.container.container_methods.static_cosh"], [555, "ivy.container.container_methods.static_cosh"]], "deg2rad() (in module ivy.array.array_methods)": [[556, "ivy.array.array_methods.deg2rad"], [557, "ivy.array.array_methods.deg2rad"]], "deg2rad() (in module ivy.container.container_methods)": [[556, "ivy.container.container_methods.deg2rad"], [558, "ivy.container.container_methods.deg2rad"]], "static_deg2rad() (in module ivy.container.container_methods)": [[556, "ivy.container.container_methods.static_deg2rad"], [560, "ivy.container.container_methods.static_deg2rad"]], "divide() (in module ivy.array.array_methods)": [[561, "ivy.array.array_methods.divide"], [562, "ivy.array.array_methods.divide"]], "divide() (in module ivy.container.container_methods)": [[561, "ivy.container.container_methods.divide"], [563, "ivy.container.container_methods.divide"]], "static_divide() (in module ivy.container.container_methods)": [[561, "ivy.container.container_methods.static_divide"], [565, "ivy.container.container_methods.static_divide"]], "equal() (in module ivy.array.array_methods)": [[566, "ivy.array.array_methods.equal"], [567, "ivy.array.array_methods.equal"]], "equal() (in module ivy.container.container_methods)": [[566, "ivy.container.container_methods.equal"], [568, "ivy.container.container_methods.equal"]], "static_equal() (in module ivy.container.container_methods)": [[566, "ivy.container.container_methods.static_equal"], [570, "ivy.container.container_methods.static_equal"]], "erf() (in module ivy.array.array_methods)": [[571, "ivy.array.array_methods.erf"], [572, "ivy.array.array_methods.erf"]], "erf() (in module ivy.container.container_methods)": [[571, "ivy.container.container_methods.erf"], [573, "ivy.container.container_methods.erf"]], "static_erf() (in module ivy.container.container_methods)": [[571, "ivy.container.container_methods.static_erf"], [575, "ivy.container.container_methods.static_erf"]], "exp() (in module ivy.array.array_methods)": [[576, "ivy.array.array_methods.exp"], [577, "ivy.array.array_methods.exp"]], "exp() (in module ivy.container.container_methods)": [[576, "ivy.container.container_methods.exp"], [578, "ivy.container.container_methods.exp"]], "static_exp() (in module ivy.container.container_methods)": [[576, "ivy.container.container_methods.static_exp"], [580, "ivy.container.container_methods.static_exp"]], "expm1() (in module ivy.array.array_methods)": [[581, "ivy.array.array_methods.expm1"], [582, "ivy.array.array_methods.expm1"]], "expm1() (in module ivy.container.container_methods)": [[581, "ivy.container.container_methods.expm1"], [583, "ivy.container.container_methods.expm1"]], "static_expm1() (in module ivy.container.container_methods)": [[581, "ivy.container.container_methods.static_expm1"], [585, "ivy.container.container_methods.static_expm1"]], "floor() (in module ivy.array.array_methods)": [[586, "ivy.array.array_methods.floor"], [587, "ivy.array.array_methods.floor"]], "floor() (in module ivy.container.container_methods)": [[586, "ivy.container.container_methods.floor"], [588, "ivy.container.container_methods.floor"]], "static_floor() (in module ivy.container.container_methods)": [[586, "ivy.container.container_methods.static_floor"], [590, "ivy.container.container_methods.static_floor"]], "floor_divide() (in module ivy.array.array_methods)": [[591, "ivy.array.array_methods.floor_divide"], [592, "ivy.array.array_methods.floor_divide"]], "floor_divide() (in module ivy.container.container_methods)": [[591, "ivy.container.container_methods.floor_divide"], [593, "ivy.container.container_methods.floor_divide"]], "static_floor_divide() (in module ivy.container.container_methods)": [[591, "ivy.container.container_methods.static_floor_divide"], [595, "ivy.container.container_methods.static_floor_divide"]], "greater() (in module ivy.array.array_methods)": [[596, "ivy.array.array_methods.greater"], [597, "ivy.array.array_methods.greater"]], "greater() (in module ivy.container.container_methods)": [[596, "ivy.container.container_methods.greater"], [598, "ivy.container.container_methods.greater"]], "static_greater() (in module ivy.container.container_methods)": [[596, "ivy.container.container_methods.static_greater"], [600, "ivy.container.container_methods.static_greater"]], "greater_equal() (in module ivy.array.array_methods)": [[601, "ivy.array.array_methods.greater_equal"], [602, "ivy.array.array_methods.greater_equal"]], "greater_equal() (in module ivy.container.container_methods)": [[601, "ivy.container.container_methods.greater_equal"], [603, "ivy.container.container_methods.greater_equal"]], "static_greater_equal() (in module ivy.container.container_methods)": [[601, "ivy.container.container_methods.static_greater_equal"], [605, "ivy.container.container_methods.static_greater_equal"]], "isfinite() (in module ivy.array.array_methods)": [[606, "ivy.array.array_methods.isfinite"], [607, "ivy.array.array_methods.isfinite"]], "isfinite() (in module ivy.container.container_methods)": [[606, "ivy.container.container_methods.isfinite"], [608, "ivy.container.container_methods.isfinite"]], "static_isfinite() (in module ivy.container.container_methods)": [[606, "ivy.container.container_methods.static_isfinite"], [610, "ivy.container.container_methods.static_isfinite"]], "isinf() (in module ivy.array.array_methods)": [[611, "ivy.array.array_methods.isinf"], [612, "ivy.array.array_methods.isinf"]], "isinf() (in module ivy.container.container_methods)": [[611, "ivy.container.container_methods.isinf"], [613, "ivy.container.container_methods.isinf"]], "static_isinf() (in module ivy.container.container_methods)": [[611, "ivy.container.container_methods.static_isinf"], [615, "ivy.container.container_methods.static_isinf"]], "isnan() (in module ivy.array.array_methods)": [[616, "ivy.array.array_methods.isnan"], [617, "ivy.array.array_methods.isnan"]], "isnan() (in module ivy.container.container_methods)": [[616, "ivy.container.container_methods.isnan"], [618, "ivy.container.container_methods.isnan"]], "static_isnan() (in module ivy.container.container_methods)": [[616, "ivy.container.container_methods.static_isnan"], [620, "ivy.container.container_methods.static_isnan"]], "isreal() (in module ivy.array.array_methods)": [[621, "ivy.array.array_methods.isreal"], [622, "ivy.array.array_methods.isreal"]], "isreal() (in module ivy.container.container_methods)": [[621, "ivy.container.container_methods.isreal"], [623, "ivy.container.container_methods.isreal"]], "static_isreal() (in module ivy.container.container_methods)": [[621, "ivy.container.container_methods.static_isreal"], [625, "ivy.container.container_methods.static_isreal"]], "less() (in module ivy.array.array_methods)": [[626, "ivy.array.array_methods.less"], [627, "ivy.array.array_methods.less"]], "less() (in module ivy.container.container_methods)": [[626, "ivy.container.container_methods.less"], [628, "ivy.container.container_methods.less"]], "static_less() (in module ivy.container.container_methods)": [[626, "ivy.container.container_methods.static_less"], [630, "ivy.container.container_methods.static_less"]], "less_equal() (in module ivy.array.array_methods)": [[631, "ivy.array.array_methods.less_equal"], [632, "ivy.array.array_methods.less_equal"]], "less_equal() (in module ivy.container.container_methods)": [[631, "ivy.container.container_methods.less_equal"], [633, "ivy.container.container_methods.less_equal"]], "static_less_equal() (in module ivy.container.container_methods)": [[631, "ivy.container.container_methods.static_less_equal"], [635, "ivy.container.container_methods.static_less_equal"]], "log() (in module ivy.array.array_methods)": [[636, "ivy.array.array_methods.log"], [637, "ivy.array.array_methods.log"]], "log() (in module ivy.container.container_methods)": [[636, "ivy.container.container_methods.log"], [638, "ivy.container.container_methods.log"]], "static_log() (in module ivy.container.container_methods)": [[636, "ivy.container.container_methods.static_log"], [640, "ivy.container.container_methods.static_log"]], "log10() (in module ivy.array.array_methods)": [[641, "ivy.array.array_methods.log10"], [642, "ivy.array.array_methods.log10"]], "log10() (in module ivy.container.container_methods)": [[641, "ivy.container.container_methods.log10"], [643, "ivy.container.container_methods.log10"]], "static_log10() (in module ivy.container.container_methods)": [[641, "ivy.container.container_methods.static_log10"], [645, "ivy.container.container_methods.static_log10"]], "log1p() (in module ivy.array.array_methods)": [[646, "ivy.array.array_methods.log1p"], [647, "ivy.array.array_methods.log1p"]], "log1p() (in module ivy.container.container_methods)": [[646, "ivy.container.container_methods.log1p"], [648, "ivy.container.container_methods.log1p"]], "static_log1p() (in module ivy.container.container_methods)": [[646, "ivy.container.container_methods.static_log1p"], [650, "ivy.container.container_methods.static_log1p"]], "log2() (in module ivy.array.array_methods)": [[651, "ivy.array.array_methods.log2"], [652, "ivy.array.array_methods.log2"]], "log2() (in module ivy.container.container_methods)": [[651, "ivy.container.container_methods.log2"], [653, "ivy.container.container_methods.log2"]], "static_log2() (in module ivy.container.container_methods)": [[651, "ivy.container.container_methods.static_log2"], [655, "ivy.container.container_methods.static_log2"]], "logaddexp() (in module ivy.array.array_methods)": [[656, "ivy.array.array_methods.logaddexp"], [657, "ivy.array.array_methods.logaddexp"]], "logaddexp() (in module ivy.container.container_methods)": [[656, "ivy.container.container_methods.logaddexp"], [658, "ivy.container.container_methods.logaddexp"]], "static_logaddexp() (in module ivy.container.container_methods)": [[656, "ivy.container.container_methods.static_logaddexp"], [660, "ivy.container.container_methods.static_logaddexp"]], "logical_and() (in module ivy.array.array_methods)": [[661, "ivy.array.array_methods.logical_and"], [662, "ivy.array.array_methods.logical_and"]], "logical_and() (in module ivy.container.container_methods)": [[661, "ivy.container.container_methods.logical_and"], [663, "ivy.container.container_methods.logical_and"]], "static_logical_and() (in module ivy.container.container_methods)": [[661, "ivy.container.container_methods.static_logical_and"], [665, "ivy.container.container_methods.static_logical_and"]], "logical_not() (in module ivy.array.array_methods)": [[666, "ivy.array.array_methods.logical_not"], [667, "ivy.array.array_methods.logical_not"]], "logical_not() (in module ivy.container.container_methods)": [[666, "ivy.container.container_methods.logical_not"], [668, "ivy.container.container_methods.logical_not"]], "static_logical_not() (in module ivy.container.container_methods)": [[666, "ivy.container.container_methods.static_logical_not"], [670, "ivy.container.container_methods.static_logical_not"]], "logical_or() (in module ivy.array.array_methods)": [[671, "ivy.array.array_methods.logical_or"], [672, "ivy.array.array_methods.logical_or"]], "logical_or() (in module ivy.container.container_methods)": [[671, "ivy.container.container_methods.logical_or"], [673, "ivy.container.container_methods.logical_or"]], "static_logical_or() (in module ivy.container.container_methods)": [[671, "ivy.container.container_methods.static_logical_or"], [675, "ivy.container.container_methods.static_logical_or"]], "logical_xor() (in module ivy.array.array_methods)": [[676, "ivy.array.array_methods.logical_xor"], [677, "ivy.array.array_methods.logical_xor"]], "logical_xor() (in module ivy.container.container_methods)": [[676, "ivy.container.container_methods.logical_xor"], [678, "ivy.container.container_methods.logical_xor"]], "static_logical_xor() (in module ivy.container.container_methods)": [[676, "ivy.container.container_methods.static_logical_xor"], [680, "ivy.container.container_methods.static_logical_xor"]], "maximum() (in module ivy.array.array_methods)": [[681, "ivy.array.array_methods.maximum"], [682, "ivy.array.array_methods.maximum"]], "maximum() (in module ivy.container.container_methods)": [[681, "ivy.container.container_methods.maximum"], [683, "ivy.container.container_methods.maximum"]], "static_maximum() (in module ivy.container.container_methods)": [[681, "ivy.container.container_methods.static_maximum"], [685, "ivy.container.container_methods.static_maximum"]], "minimum() (in module ivy.array.array_methods)": [[686, "ivy.array.array_methods.minimum"], [687, "ivy.array.array_methods.minimum"]], "minimum() (in module ivy.container.container_methods)": [[686, "ivy.container.container_methods.minimum"], [688, "ivy.container.container_methods.minimum"]], "static_minimum() (in module ivy.container.container_methods)": [[686, "ivy.container.container_methods.static_minimum"], [690, "ivy.container.container_methods.static_minimum"]], "multiply() (in module ivy.array.array_methods)": [[691, "ivy.array.array_methods.multiply"], [692, "ivy.array.array_methods.multiply"]], "multiply() (in module ivy.container.container_methods)": [[691, "ivy.container.container_methods.multiply"], [693, "ivy.container.container_methods.multiply"]], "static_multiply() (in module ivy.container.container_methods)": [[691, "ivy.container.container_methods.static_multiply"], [695, "ivy.container.container_methods.static_multiply"]], "negative() (in module ivy.array.array_methods)": [[696, "ivy.array.array_methods.negative"], [697, "ivy.array.array_methods.negative"]], "negative() (in module ivy.container.container_methods)": [[696, "ivy.container.container_methods.negative"], [698, "ivy.container.container_methods.negative"]], "static_negative() (in module ivy.container.container_methods)": [[696, "ivy.container.container_methods.static_negative"], [700, "ivy.container.container_methods.static_negative"]], "not_equal() (in module ivy.array.array_methods)": [[701, "ivy.array.array_methods.not_equal"], [702, "ivy.array.array_methods.not_equal"]], "not_equal() (in module ivy.container.container_methods)": [[701, "ivy.container.container_methods.not_equal"], [703, "ivy.container.container_methods.not_equal"]], "static_not_equal() (in module ivy.container.container_methods)": [[701, "ivy.container.container_methods.static_not_equal"], [705, "ivy.container.container_methods.static_not_equal"]], "positive() (in module ivy.array.array_methods)": [[706, "ivy.array.array_methods.positive"], [707, "ivy.array.array_methods.positive"]], "positive() (in module ivy.container.container_methods)": [[706, "ivy.container.container_methods.positive"], [708, "ivy.container.container_methods.positive"]], "static_positive() (in module ivy.container.container_methods)": [[706, "ivy.container.container_methods.static_positive"], [710, "ivy.container.container_methods.static_positive"]], "pow() (in module ivy.array.array_methods)": [[711, "ivy.array.array_methods.pow"], [712, "ivy.array.array_methods.pow"]], "pow() (in module ivy.container.container_methods)": [[711, "ivy.container.container_methods.pow"], [713, "ivy.container.container_methods.pow"]], "static_pow() (in module ivy.container.container_methods)": [[711, "ivy.container.container_methods.static_pow"], [715, "ivy.container.container_methods.static_pow"]], "rad2deg() (in module ivy.array.array_methods)": [[716, "ivy.array.array_methods.rad2deg"], [717, "ivy.array.array_methods.rad2deg"]], "rad2deg() (in module ivy.container.container_methods)": [[716, "ivy.container.container_methods.rad2deg"], [718, "ivy.container.container_methods.rad2deg"]], "static_rad2deg() (in module ivy.container.container_methods)": [[716, "ivy.container.container_methods.static_rad2deg"], [720, "ivy.container.container_methods.static_rad2deg"]], "reciprocal() (in module ivy.array.array_methods)": [[721, "ivy.array.array_methods.reciprocal"], [722, "ivy.array.array_methods.reciprocal"]], "reciprocal() (in module ivy.container.container_methods)": [[721, "ivy.container.container_methods.reciprocal"], [723, "ivy.container.container_methods.reciprocal"]], "static_reciprocal() (in module ivy.container.container_methods)": [[721, "ivy.container.container_methods.static_reciprocal"], [725, "ivy.container.container_methods.static_reciprocal"]], "remainder() (in module ivy.array.array_methods)": [[726, "ivy.array.array_methods.remainder"], [727, "ivy.array.array_methods.remainder"]], "remainder() (in module ivy.container.container_methods)": [[726, "ivy.container.container_methods.remainder"], [728, "ivy.container.container_methods.remainder"]], "static_remainder() (in module ivy.container.container_methods)": [[726, "ivy.container.container_methods.static_remainder"], [730, "ivy.container.container_methods.static_remainder"]], "round() (in module ivy.array.array_methods)": [[731, "ivy.array.array_methods.round"], [732, "ivy.array.array_methods.round"]], "round() (in module ivy.container.container_methods)": [[731, "ivy.container.container_methods.round"], [733, "ivy.container.container_methods.round"]], "static_round() (in module ivy.container.container_methods)": [[731, "ivy.container.container_methods.static_round"], [735, "ivy.container.container_methods.static_round"]], "sign() (in module ivy.array.array_methods)": [[736, "ivy.array.array_methods.sign"], [737, "ivy.array.array_methods.sign"]], "sign() (in module ivy.container.container_methods)": [[736, "ivy.container.container_methods.sign"], [738, "ivy.container.container_methods.sign"]], "static_sign() (in module ivy.container.container_methods)": [[736, "ivy.container.container_methods.static_sign"], [740, "ivy.container.container_methods.static_sign"]], "sin() (in module ivy.array.array_methods)": [[741, "ivy.array.array_methods.sin"], [742, "ivy.array.array_methods.sin"]], "sin() (in module ivy.container.container_methods)": [[741, "ivy.container.container_methods.sin"], [743, "ivy.container.container_methods.sin"]], "static_sin() (in module ivy.container.container_methods)": [[741, "ivy.container.container_methods.static_sin"], [745, "ivy.container.container_methods.static_sin"]], "sinh() (in module ivy.array.array_methods)": [[746, "ivy.array.array_methods.sinh"], [747, "ivy.array.array_methods.sinh"]], "sinh() (in module ivy.container.container_methods)": [[746, "ivy.container.container_methods.sinh"], [748, "ivy.container.container_methods.sinh"]], "static_sinh() (in module ivy.container.container_methods)": [[746, "ivy.container.container_methods.static_sinh"], [750, "ivy.container.container_methods.static_sinh"]], "sqrt() (in module ivy.array.array_methods)": [[751, "ivy.array.array_methods.sqrt"], [752, "ivy.array.array_methods.sqrt"]], "sqrt() (in module ivy.container.container_methods)": [[751, "ivy.container.container_methods.sqrt"], [753, "ivy.container.container_methods.sqrt"]], "static_sqrt() (in module ivy.container.container_methods)": [[751, "ivy.container.container_methods.static_sqrt"], [755, "ivy.container.container_methods.static_sqrt"]], "square() (in module ivy.array.array_methods)": [[756, "ivy.array.array_methods.square"], [757, "ivy.array.array_methods.square"]], "square() (in module ivy.container.container_methods)": [[756, "ivy.container.container_methods.square"], [758, "ivy.container.container_methods.square"]], "static_square() (in module ivy.container.container_methods)": [[756, "ivy.container.container_methods.static_square"], [760, "ivy.container.container_methods.static_square"]], "static_subtract() (in module ivy.container.container_methods)": [[761, "ivy.container.container_methods.static_subtract"], [762, "ivy.container.container_methods.static_subtract"]], "subtract() (in module ivy.array.array_methods)": [[761, "ivy.array.array_methods.subtract"], [763, "ivy.array.array_methods.subtract"]], "subtract() (in module ivy.container.container_methods)": [[761, "ivy.container.container_methods.subtract"], [764, "ivy.container.container_methods.subtract"]], "static_tan() (in module ivy.container.container_methods)": [[766, "ivy.container.container_methods.static_tan"], [767, "ivy.container.container_methods.static_tan"]], "tan() (in module ivy.array.array_methods)": [[766, "ivy.array.array_methods.tan"], [768, "ivy.array.array_methods.tan"]], "tan() (in module ivy.container.container_methods)": [[766, "ivy.container.container_methods.tan"], [769, "ivy.container.container_methods.tan"]], "static_tanh() (in module ivy.container.container_methods)": [[771, "ivy.container.container_methods.static_tanh"], [772, "ivy.container.container_methods.static_tanh"]], "tanh() (in module ivy.array.array_methods)": [[771, "ivy.array.array_methods.tanh"], [773, "ivy.array.array_methods.tanh"]], "tanh() (in module ivy.container.container_methods)": [[771, "ivy.container.container_methods.tanh"], [774, "ivy.container.container_methods.tanh"]], "static_trunc() (in module ivy.container.container_methods)": [[776, "ivy.container.container_methods.static_trunc"], [777, "ivy.container.container_methods.static_trunc"]], "trunc() (in module ivy.array.array_methods)": [[776, "ivy.array.array_methods.trunc"], [778, "ivy.array.array_methods.trunc"]], "trunc() (in module ivy.container.container_methods)": [[776, "ivy.container.container_methods.trunc"], [779, "ivy.container.container_methods.trunc"]], "static_trunc_divide() (in module ivy.container.container_methods)": [[781, "ivy.container.container_methods.static_trunc_divide"], [782, "ivy.container.container_methods.static_trunc_divide"]], "trunc_divide() (in module ivy.array.array_methods)": [[781, "ivy.array.array_methods.trunc_divide"], [783, "ivy.array.array_methods.trunc_divide"]], "trunc_divide() (in module ivy.container.container_methods)": [[781, "ivy.container.container_methods.trunc_divide"], [784, "ivy.container.container_methods.trunc_divide"]], "ivy.functional.ivy.experimental": [[786, "module-ivy.functional.ivy.experimental"]], "nativesparsearray (class in ivy.functional.ivy.experimental)": [[787, "ivy.functional.ivy.experimental.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental)": [[788, "ivy.functional.ivy.experimental.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparsearray method)": [[788, "ivy.functional.ivy.experimental.SparseArray.__init__"]], "ccol_indices (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.col_indices"]], "coo_indices (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.coo_indices"]], "crow_indices (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.crow_indices"]], "data (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.dense_shape"]], "row_indices (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.row_indices"]], "to_dense_array() (ivy.functional.ivy.experimental.sparsearray method)": [[788, "ivy.functional.ivy.experimental.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparsearray property)": [[788, "ivy.functional.ivy.experimental.SparseArray.values"]], "ivy.functional.ivy.experimental.activations": [[789, "module-ivy.functional.ivy.experimental.activations"]], "logit() (in module ivy.functional.ivy.experimental.activations)": [[789, "ivy.functional.ivy.experimental.activations.logit"], [790, "ivy.functional.ivy.experimental.activations.logit"]], "prelu() (in module ivy.functional.ivy.experimental.activations)": [[789, "ivy.functional.ivy.experimental.activations.prelu"], [791, "ivy.functional.ivy.experimental.activations.prelu"]], "thresholded_relu() (in module ivy.functional.ivy.experimental.activations)": [[789, "ivy.functional.ivy.experimental.activations.thresholded_relu"], [792, "ivy.functional.ivy.experimental.activations.thresholded_relu"]], "adjoint() (in module ivy.array.array_methods)": [[793, "ivy.array.array_methods.adjoint"], [794, "ivy.array.array_methods.adjoint"]], "adjoint() (in module ivy.container.container_methods)": [[793, "ivy.container.container_methods.adjoint"], [795, "ivy.container.container_methods.adjoint"]], "adjoint() (in module ivy.functional.ivy.experimental)": [[793, "ivy.functional.ivy.experimental.adjoint"], [796, "ivy.functional.ivy.experimental.adjoint"]], "static_adjoint() (in module ivy.container.container_methods)": [[793, "ivy.container.container_methods.static_adjoint"], [797, "ivy.container.container_methods.static_adjoint"]], "allclose() (in module ivy.array.array_methods)": [[798, "ivy.array.array_methods.allclose"], [799, "ivy.array.array_methods.allclose"]], "allclose() (in module ivy.container.container_methods)": [[798, "ivy.container.container_methods.allclose"], [800, "ivy.container.container_methods.allclose"]], "allclose() (in module ivy.functional.ivy.experimental)": [[798, "ivy.functional.ivy.experimental.allclose"], [801, "ivy.functional.ivy.experimental.allclose"]], "static_allclose() (in module ivy.container.container_methods)": [[798, "ivy.container.container_methods.static_allclose"], [802, "ivy.container.container_methods.static_allclose"]], "angle() (in module ivy.array.array_methods)": [[803, "ivy.array.array_methods.angle"], [804, "ivy.array.array_methods.angle"]], "angle() (in module ivy.container.container_methods)": [[803, "ivy.container.container_methods.angle"], [805, "ivy.container.container_methods.angle"]], "angle() (in module ivy.functional.ivy.experimental)": [[803, "ivy.functional.ivy.experimental.angle"], [806, "ivy.functional.ivy.experimental.angle"]], "static_angle() (in module ivy.container.container_methods)": [[803, "ivy.container.container_methods.static_angle"], [807, "ivy.container.container_methods.static_angle"]], "atleast_1d() (in module ivy.array.array_methods)": [[808, "ivy.array.array_methods.atleast_1d"], [809, "ivy.array.array_methods.atleast_1d"]], "atleast_1d() (in module ivy.container.container_methods)": [[808, "ivy.container.container_methods.atleast_1d"], [810, "ivy.container.container_methods.atleast_1d"]], "atleast_1d() (in module ivy.functional.ivy.experimental)": [[808, "ivy.functional.ivy.experimental.atleast_1d"], [811, "ivy.functional.ivy.experimental.atleast_1d"]], "static_atleast_1d() (in module ivy.container.container_methods)": [[808, "ivy.container.container_methods.static_atleast_1d"], [812, "ivy.container.container_methods.static_atleast_1d"]], "atleast_2d() (in module ivy.array.array_methods)": [[813, "ivy.array.array_methods.atleast_2d"], [814, "ivy.array.array_methods.atleast_2d"]], "atleast_2d() (in module ivy.container.container_methods)": [[813, "ivy.container.container_methods.atleast_2d"], [815, "ivy.container.container_methods.atleast_2d"]], "atleast_2d() (in module ivy.functional.ivy.experimental)": [[813, "ivy.functional.ivy.experimental.atleast_2d"], [816, "ivy.functional.ivy.experimental.atleast_2d"]], "static_atleast_2d() (in module ivy.container.container_methods)": [[813, "ivy.container.container_methods.static_atleast_2d"], [817, "ivy.container.container_methods.static_atleast_2d"]], "atleast_3d() (in module ivy.array.array_methods)": [[818, "ivy.array.array_methods.atleast_3d"], [819, "ivy.array.array_methods.atleast_3d"]], "atleast_3d() (in module ivy.container.container_methods)": [[818, "ivy.container.container_methods.atleast_3d"], [820, "ivy.container.container_methods.atleast_3d"]], "atleast_3d() (in module ivy.functional.ivy.experimental)": [[818, "ivy.functional.ivy.experimental.atleast_3d"], [821, "ivy.functional.ivy.experimental.atleast_3d"]], "static_atleast_3d() (in module ivy.container.container_methods)": [[818, "ivy.container.container_methods.static_atleast_3d"], [822, "ivy.container.container_methods.static_atleast_3d"]], "avg_pool1d() (in module ivy.array.array_methods)": [[823, "ivy.array.array_methods.avg_pool1d"], [824, "ivy.array.array_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.container.container_methods)": [[823, "ivy.container.container_methods.avg_pool1d"], [825, "ivy.container.container_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.functional.ivy.experimental)": [[823, "ivy.functional.ivy.experimental.avg_pool1d"], [826, "ivy.functional.ivy.experimental.avg_pool1d"]], "static_avg_pool1d() (in module ivy.container.container_methods)": [[823, "ivy.container.container_methods.static_avg_pool1d"], [827, "ivy.container.container_methods.static_avg_pool1d"]], "avg_pool2d() (in module ivy.array.array_methods)": [[828, "ivy.array.array_methods.avg_pool2d"], [829, "ivy.array.array_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.container.container_methods)": [[828, "ivy.container.container_methods.avg_pool2d"], [830, "ivy.container.container_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental)": [[828, "ivy.functional.ivy.experimental.avg_pool2d"], [831, "ivy.functional.ivy.experimental.avg_pool2d"]], "static_avg_pool2d() (in module ivy.container.container_methods)": [[828, "ivy.container.container_methods.static_avg_pool2d"], [832, "ivy.container.container_methods.static_avg_pool2d"]], "avg_pool3d() (in module ivy.array.array_methods)": [[833, "ivy.array.array_methods.avg_pool3d"], [834, "ivy.array.array_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.container.container_methods)": [[833, "ivy.container.container_methods.avg_pool3d"], [835, "ivy.container.container_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental)": [[833, "ivy.functional.ivy.experimental.avg_pool3d"], [836, "ivy.functional.ivy.experimental.avg_pool3d"]], "static_avg_pool3d() (in module ivy.container.container_methods)": [[833, "ivy.container.container_methods.static_avg_pool3d"], [837, "ivy.container.container_methods.static_avg_pool3d"]], "bernoulli() (in module ivy.array.array_methods)": [[838, "ivy.array.array_methods.bernoulli"], [839, "ivy.array.array_methods.bernoulli"]], "bernoulli() (in module ivy.container.container_methods)": [[838, "ivy.container.container_methods.bernoulli"], [840, "ivy.container.container_methods.bernoulli"]], "bernoulli() (in module ivy.functional.ivy.experimental)": [[838, "ivy.functional.ivy.experimental.bernoulli"], [841, "ivy.functional.ivy.experimental.bernoulli"]], "static_bernoulli() (in module ivy.container.container_methods)": [[838, "ivy.container.container_methods.static_bernoulli"], [842, "ivy.container.container_methods.static_bernoulli"]], "beta() (in module ivy.array.array_methods)": [[843, "ivy.array.array_methods.beta"], [844, "ivy.array.array_methods.beta"]], "beta() (in module ivy.container.container_methods)": [[843, "ivy.container.container_methods.beta"], [845, "ivy.container.container_methods.beta"]], "beta() (in module ivy.functional.ivy.experimental)": [[843, "ivy.functional.ivy.experimental.beta"], [846, "ivy.functional.ivy.experimental.beta"]], "static_beta() (in module ivy.container.container_methods)": [[843, "ivy.container.container_methods.static_beta"], [847, "ivy.container.container_methods.static_beta"]], "bicubic() (in module ivy.functional.ivy.experimental)": [[848, "ivy.functional.ivy.experimental.bicubic"]], "binarizer() (in module ivy.array.array_methods)": [[849, "ivy.array.array_methods.binarizer"], [850, "ivy.array.array_methods.binarizer"]], "binarizer() (in module ivy.container.container_methods)": [[849, "ivy.container.container_methods.binarizer"], [851, "ivy.container.container_methods.binarizer"]], "binarizer() (in module ivy.functional.ivy.experimental)": [[849, "ivy.functional.ivy.experimental.binarizer"], [852, "ivy.functional.ivy.experimental.binarizer"]], "static_binarizer() (in module ivy.container.container_methods)": [[849, "ivy.container.container_methods.static_binarizer"], [853, "ivy.container.container_methods.static_binarizer"]], "binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[854, "ivy.container.container_methods.binary_cross_entropy_with_logits"], [855, "ivy.container.container_methods.binary_cross_entropy_with_logits"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental)": [[854, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"], [856, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"]], "static_binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[854, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"], [857, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental)": [[858, "ivy.functional.ivy.experimental.bind_custom_gradient_function"]], "broadcast_shapes() (in module ivy.container.container_methods)": [[859, "ivy.container.container_methods.broadcast_shapes"], [860, "ivy.container.container_methods.broadcast_shapes"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental)": [[859, "ivy.functional.ivy.experimental.broadcast_shapes"], [861, "ivy.functional.ivy.experimental.broadcast_shapes"]], "static_broadcast_shapes() (in module ivy.container.container_methods)": [[859, "ivy.container.container_methods.static_broadcast_shapes"], [862, "ivy.container.container_methods.static_broadcast_shapes"]], "ivy.functional.ivy.experimental.compilation": [[863, "module-ivy.functional.ivy.experimental.compilation"]], "ivy.functional.ivy.experimental.constants": [[864, "module-ivy.functional.ivy.experimental.constants"]], "copysign() (in module ivy.array.array_methods)": [[865, "ivy.array.array_methods.copysign"], [866, "ivy.array.array_methods.copysign"]], "copysign() (in module ivy.container.container_methods)": [[865, "ivy.container.container_methods.copysign"], [867, "ivy.container.container_methods.copysign"]], "copysign() (in module ivy.functional.ivy.experimental)": [[865, "ivy.functional.ivy.experimental.copysign"], [868, "ivy.functional.ivy.experimental.copysign"]], "static_copysign() (in module ivy.container.container_methods)": [[865, "ivy.container.container_methods.static_copysign"], [869, "ivy.container.container_methods.static_copysign"]], "corrcoef() (in module ivy.array.array_methods)": [[870, "ivy.array.array_methods.corrcoef"], [871, "ivy.array.array_methods.corrcoef"]], "corrcoef() (in module ivy.container.container_methods)": [[870, "ivy.container.container_methods.corrcoef"], [872, "ivy.container.container_methods.corrcoef"]], "corrcoef() (in module ivy.functional.ivy.experimental)": [[870, "ivy.functional.ivy.experimental.corrcoef"], [873, "ivy.functional.ivy.experimental.corrcoef"]], "static_corrcoef() (in module ivy.container.container_methods)": [[870, "ivy.container.container_methods.static_corrcoef"], [874, "ivy.container.container_methods.static_corrcoef"]], "count_nonzero() (in module ivy.array.array_methods)": [[875, "ivy.array.array_methods.count_nonzero"], [876, "ivy.array.array_methods.count_nonzero"]], "count_nonzero() (in module ivy.container.container_methods)": [[875, "ivy.container.container_methods.count_nonzero"], [877, "ivy.container.container_methods.count_nonzero"]], "count_nonzero() (in module ivy.functional.ivy.experimental)": [[875, "ivy.functional.ivy.experimental.count_nonzero"], [878, "ivy.functional.ivy.experimental.count_nonzero"]], "static_count_nonzero() (in module ivy.container.container_methods)": [[875, "ivy.container.container_methods.static_count_nonzero"], [879, "ivy.container.container_methods.static_count_nonzero"]], "eye_like() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.eye_like"], [881, "ivy.functional.ivy.experimental.creation.eye_like"]], "hamming_window() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.hamming_window"], [882, "ivy.functional.ivy.experimental.creation.hamming_window"]], "hann_window() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.hann_window"], [883, "ivy.functional.ivy.experimental.creation.hann_window"]], "ivy.functional.ivy.experimental.creation": [[880, "module-ivy.functional.ivy.experimental.creation"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"], [884, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.kaiser_window"], [885, "ivy.functional.ivy.experimental.creation.kaiser_window"]], "tril_indices() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.tril_indices"], [886, "ivy.functional.ivy.experimental.creation.tril_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.triu_indices"], [887, "ivy.functional.ivy.experimental.creation.triu_indices"]], "vorbis_window() (in module ivy.functional.ivy.experimental.creation)": [[880, "ivy.functional.ivy.experimental.creation.vorbis_window"], [888, "ivy.functional.ivy.experimental.creation.vorbis_window"]], "cubic() (in module ivy.functional.ivy.experimental)": [[889, "ivy.functional.ivy.experimental.cubic"]], "is_native_dtype() (in module ivy.functional.ivy.experimental.data_type)": [[890, "ivy.functional.ivy.experimental.data_type.is_native_dtype"], [891, "ivy.functional.ivy.experimental.data_type.is_native_dtype"]], "ivy.functional.ivy.experimental.data_type": [[890, "module-ivy.functional.ivy.experimental.data_type"]], "dct() (in module ivy.array.array_methods)": [[892, "ivy.array.array_methods.dct"], [893, "ivy.array.array_methods.dct"]], "dct() (in module ivy.container.container_methods)": [[892, "ivy.container.container_methods.dct"], [894, "ivy.container.container_methods.dct"]], "dct() (in module ivy.functional.ivy.experimental)": [[892, "ivy.functional.ivy.experimental.dct"], [895, "ivy.functional.ivy.experimental.dct"]], "static_dct() (in module ivy.container.container_methods)": [[892, "ivy.container.container_methods.static_dct"], [896, "ivy.container.container_methods.static_dct"]], "ivy.functional.ivy.experimental.device": [[897, "module-ivy.functional.ivy.experimental.device"]], "dft() (in module ivy.container.container_methods)": [[898, "ivy.container.container_methods.dft"], [899, "ivy.container.container_methods.dft"]], "dft() (in module ivy.functional.ivy.experimental)": [[898, "ivy.functional.ivy.experimental.dft"], [900, "ivy.functional.ivy.experimental.dft"]], "static_dft() (in module ivy.container.container_methods)": [[898, "ivy.container.container_methods.static_dft"], [901, "ivy.container.container_methods.static_dft"]], "diagflat() (in module ivy.array.array_methods)": [[902, "ivy.array.array_methods.diagflat"], [903, "ivy.array.array_methods.diagflat"]], "diagflat() (in module ivy.container.container_methods)": [[902, "ivy.container.container_methods.diagflat"], [904, "ivy.container.container_methods.diagflat"]], "diagflat() (in module ivy.functional.ivy.experimental)": [[902, "ivy.functional.ivy.experimental.diagflat"], [905, "ivy.functional.ivy.experimental.diagflat"]], "static_diagflat() (in module ivy.container.container_methods)": [[902, "ivy.container.container_methods.static_diagflat"], [906, "ivy.container.container_methods.static_diagflat"]], "diff() (in module ivy.array.array_methods)": [[907, "ivy.array.array_methods.diff"], [908, "ivy.array.array_methods.diff"]], "diff() (in module ivy.container.container_methods)": [[907, "ivy.container.container_methods.diff"], [909, "ivy.container.container_methods.diff"]], "diff() (in module ivy.functional.ivy.experimental)": [[907, "ivy.functional.ivy.experimental.diff"], [910, "ivy.functional.ivy.experimental.diff"]], "static_diff() (in module ivy.container.container_methods)": [[907, "ivy.container.container_methods.static_diff"], [911, "ivy.container.container_methods.static_diff"]], "dirichlet() (in module ivy.array.array_methods)": [[912, "ivy.array.array_methods.dirichlet"], [913, "ivy.array.array_methods.dirichlet"]], "dirichlet() (in module ivy.container.container_methods)": [[912, "ivy.container.container_methods.dirichlet"], [914, "ivy.container.container_methods.dirichlet"]], "dirichlet() (in module ivy.functional.ivy.experimental)": [[912, "ivy.functional.ivy.experimental.dirichlet"], [915, "ivy.functional.ivy.experimental.dirichlet"]], "static_dirichlet() (in module ivy.container.container_methods)": [[912, "ivy.container.container_methods.static_dirichlet"], [916, "ivy.container.container_methods.static_dirichlet"]], "dropout1d() (in module ivy.functional.ivy.experimental)": [[917, "ivy.functional.ivy.experimental.dropout1d"]], "dsplit() (in module ivy.array.array_methods)": [[918, "ivy.array.array_methods.dsplit"], [919, "ivy.array.array_methods.dsplit"]], "dsplit() (in module ivy.container.container_methods)": [[918, "ivy.container.container_methods.dsplit"], [920, "ivy.container.container_methods.dsplit"]], "dsplit() (in module ivy.functional.ivy.experimental)": [[918, "ivy.functional.ivy.experimental.dsplit"], [921, "ivy.functional.ivy.experimental.dsplit"]], "static_dsplit() (in module ivy.container.container_methods)": [[918, "ivy.container.container_methods.static_dsplit"], [922, "ivy.container.container_methods.static_dsplit"]], "dstack() (in module ivy.array.array_methods)": [[923, "ivy.array.array_methods.dstack"], [924, "ivy.array.array_methods.dstack"]], "dstack() (in module ivy.container.container_methods)": [[923, "ivy.container.container_methods.dstack"], [925, "ivy.container.container_methods.dstack"]], "dstack() (in module ivy.functional.ivy.experimental)": [[923, "ivy.functional.ivy.experimental.dstack"], [926, "ivy.functional.ivy.experimental.dstack"]], "static_dstack() (in module ivy.container.container_methods)": [[923, "ivy.container.container_methods.static_dstack"], [927, "ivy.container.container_methods.static_dstack"]], "eig() (in module ivy.array.array_methods)": [[928, "ivy.array.array_methods.eig"], [929, "ivy.array.array_methods.eig"]], "eig() (in module ivy.container.container_methods)": [[928, "ivy.container.container_methods.eig"], [930, "ivy.container.container_methods.eig"]], "eig() (in module ivy.functional.ivy.experimental)": [[928, "ivy.functional.ivy.experimental.eig"], [931, "ivy.functional.ivy.experimental.eig"]], "static_eig() (in module ivy.container.container_methods)": [[928, "ivy.container.container_methods.static_eig"], [932, "ivy.container.container_methods.static_eig"]], "eigvals() (in module ivy.array.array_methods)": [[933, "ivy.array.array_methods.eigvals"], [934, "ivy.array.array_methods.eigvals"]], "eigvals() (in module ivy.container.container_methods)": [[933, "ivy.container.container_methods.eigvals"], [935, "ivy.container.container_methods.eigvals"]], "eigvals() (in module ivy.functional.ivy.experimental)": [[933, "ivy.functional.ivy.experimental.eigvals"], [936, "ivy.functional.ivy.experimental.eigvals"]], "static_eigvals() (in module ivy.container.container_methods)": [[933, "ivy.container.container_methods.static_eigvals"], [937, "ivy.container.container_methods.static_eigvals"]], "allclose() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.allclose"], [939, "ivy.functional.ivy.experimental.elementwise.allclose"]], "angle() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.angle"], [940, "ivy.functional.ivy.experimental.elementwise.angle"]], "binarizer() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.binarizer"], [941, "ivy.functional.ivy.experimental.elementwise.binarizer"]], "copysign() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.copysign"], [942, "ivy.functional.ivy.experimental.elementwise.copysign"]], "count_nonzero() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.count_nonzero"], [943, "ivy.functional.ivy.experimental.elementwise.count_nonzero"]], "diff() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.diff"], [944, "ivy.functional.ivy.experimental.elementwise.diff"]], "exp2() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.exp2"], [945, "ivy.functional.ivy.experimental.elementwise.exp2"]], "fix() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.fix"], [946, "ivy.functional.ivy.experimental.elementwise.fix"]], "float_power() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.float_power"], [947, "ivy.functional.ivy.experimental.elementwise.float_power"]], "fmax() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.fmax"], [948, "ivy.functional.ivy.experimental.elementwise.fmax"]], "fmin() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.fmin"], [949, "ivy.functional.ivy.experimental.elementwise.fmin"]], "fmod() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.fmod"], [950, "ivy.functional.ivy.experimental.elementwise.fmod"]], "gcd() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.gcd"], [951, "ivy.functional.ivy.experimental.elementwise.gcd"]], "gradient() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.gradient"], [952, "ivy.functional.ivy.experimental.elementwise.gradient"]], "hypot() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.hypot"], [953, "ivy.functional.ivy.experimental.elementwise.hypot"]], "imag() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.imag"], [954, "ivy.functional.ivy.experimental.elementwise.imag"]], "isclose() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.isclose"], [955, "ivy.functional.ivy.experimental.elementwise.isclose"]], "ivy.functional.ivy.experimental.elementwise": [[938, "module-ivy.functional.ivy.experimental.elementwise"]], "lcm() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.lcm"], [956, "ivy.functional.ivy.experimental.elementwise.lcm"]], "logaddexp2() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.logaddexp2"], [957, "ivy.functional.ivy.experimental.elementwise.logaddexp2"]], "nan_to_num() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.nan_to_num"], [958, "ivy.functional.ivy.experimental.elementwise.nan_to_num"]], "nansum() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.nansum"], [959, "ivy.functional.ivy.experimental.elementwise.nansum"]], "nextafter() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.nextafter"], [960, "ivy.functional.ivy.experimental.elementwise.nextafter"]], "real() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.real"], [961, "ivy.functional.ivy.experimental.elementwise.real"]], "signbit() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.signbit"], [962, "ivy.functional.ivy.experimental.elementwise.signbit"]], "sinc() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.sinc"], [963, "ivy.functional.ivy.experimental.elementwise.sinc"]], "trapz() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.trapz"], [964, "ivy.functional.ivy.experimental.elementwise.trapz"]], "xlogy() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.xlogy"], [965, "ivy.functional.ivy.experimental.elementwise.xlogy"]], "zeta() (in module ivy.functional.ivy.experimental.elementwise)": [[938, "ivy.functional.ivy.experimental.elementwise.zeta"], [966, "ivy.functional.ivy.experimental.elementwise.zeta"]], "embedding() (in module ivy.array.array_methods)": [[967, "ivy.array.array_methods.embedding"], [968, "ivy.array.array_methods.embedding"]], "embedding() (in module ivy.container.container_methods)": [[967, "ivy.container.container_methods.embedding"], [969, "ivy.container.container_methods.embedding"]], "embedding() (in module ivy.functional.ivy.experimental)": [[967, "ivy.functional.ivy.experimental.embedding"], [970, "ivy.functional.ivy.experimental.embedding"]], "static_embedding() (in module ivy.container.container_methods)": [[967, "ivy.container.container_methods.static_embedding"], [971, "ivy.container.container_methods.static_embedding"]], "exp2() (in module ivy.array.array_methods)": [[972, "ivy.array.array_methods.exp2"], [973, "ivy.array.array_methods.exp2"]], "exp2() (in module ivy.container.container_methods)": [[972, "ivy.container.container_methods.exp2"], [974, "ivy.container.container_methods.exp2"]], "exp2() (in module ivy.functional.ivy.experimental)": [[972, "ivy.functional.ivy.experimental.exp2"], [975, "ivy.functional.ivy.experimental.exp2"]], "static_exp2() (in module ivy.container.container_methods)": [[972, "ivy.container.container_methods.static_exp2"], [976, "ivy.container.container_methods.static_exp2"]], "expand() (in module ivy.array.array_methods)": [[977, "ivy.array.array_methods.expand"], [978, "ivy.array.array_methods.expand"]], "expand() (in module ivy.container.container_methods)": [[977, "ivy.container.container_methods.expand"], [979, "ivy.container.container_methods.expand"]], "expand() (in module ivy.functional.ivy.experimental)": [[977, "ivy.functional.ivy.experimental.expand"], [980, "ivy.functional.ivy.experimental.expand"]], "static_expand() (in module ivy.container.container_methods)": [[977, "ivy.container.container_methods.static_expand"], [981, "ivy.container.container_methods.static_expand"]], "eye_like() (in module ivy.array.array_methods)": [[982, "ivy.array.array_methods.eye_like"], [983, "ivy.array.array_methods.eye_like"]], "eye_like() (in module ivy.container.container_methods)": [[982, "ivy.container.container_methods.eye_like"], [984, "ivy.container.container_methods.eye_like"]], "eye_like() (in module ivy.functional.ivy.experimental)": [[982, "ivy.functional.ivy.experimental.eye_like"], [985, "ivy.functional.ivy.experimental.eye_like"]], "static_eye_like() (in module ivy.container.container_methods)": [[982, "ivy.container.container_methods.static_eye_like"], [986, "ivy.container.container_methods.static_eye_like"]], "fft() (in module ivy.array.array_methods)": [[987, "ivy.array.array_methods.fft"], [988, "ivy.array.array_methods.fft"]], "fft() (in module ivy.container.container_methods)": [[987, "ivy.container.container_methods.fft"], [989, "ivy.container.container_methods.fft"]], "fft() (in module ivy.functional.ivy.experimental)": [[987, "ivy.functional.ivy.experimental.fft"], [990, "ivy.functional.ivy.experimental.fft"]], "static_fft() (in module ivy.container.container_methods)": [[987, "ivy.container.container_methods.static_fft"], [991, "ivy.container.container_methods.static_fft"]], "fix() (in module ivy.array.array_methods)": [[992, "ivy.array.array_methods.fix"], [993, "ivy.array.array_methods.fix"]], "fix() (in module ivy.container.container_methods)": [[992, "ivy.container.container_methods.fix"], [994, "ivy.container.container_methods.fix"]], "fix() (in module ivy.functional.ivy.experimental)": [[992, "ivy.functional.ivy.experimental.fix"], [995, "ivy.functional.ivy.experimental.fix"]], "static_fix() (in module ivy.container.container_methods)": [[992, "ivy.container.container_methods.static_fix"], [996, "ivy.container.container_methods.static_fix"]], "flatten() (in module ivy.array.array_methods)": [[997, "ivy.array.array_methods.flatten"], [998, "ivy.array.array_methods.flatten"]], "flatten() (in module ivy.container.container_methods)": [[997, "ivy.container.container_methods.flatten"], [999, "ivy.container.container_methods.flatten"]], "flatten() (in module ivy.functional.ivy.experimental)": [[997, "ivy.functional.ivy.experimental.flatten"], [1000, "ivy.functional.ivy.experimental.flatten"]], "static_flatten() (in module ivy.container.container_methods)": [[997, "ivy.container.container_methods.static_flatten"], [1001, "ivy.container.container_methods.static_flatten"]], "fliplr() (in module ivy.array.array_methods)": [[1002, "ivy.array.array_methods.fliplr"], [1003, "ivy.array.array_methods.fliplr"]], "fliplr() (in module ivy.container.container_methods)": [[1002, "ivy.container.container_methods.fliplr"], [1004, "ivy.container.container_methods.fliplr"]], "fliplr() (in module ivy.functional.ivy.experimental)": [[1002, "ivy.functional.ivy.experimental.fliplr"], [1005, "ivy.functional.ivy.experimental.fliplr"]], "static_fliplr() (in module ivy.container.container_methods)": [[1002, "ivy.container.container_methods.static_fliplr"], [1006, "ivy.container.container_methods.static_fliplr"]], "flipud() (in module ivy.array.array_methods)": [[1007, "ivy.array.array_methods.flipud"], [1008, "ivy.array.array_methods.flipud"]], "flipud() (in module ivy.container.container_methods)": [[1007, "ivy.container.container_methods.flipud"], [1009, "ivy.container.container_methods.flipud"]], "flipud() (in module ivy.functional.ivy.experimental)": [[1007, "ivy.functional.ivy.experimental.flipud"], [1010, "ivy.functional.ivy.experimental.flipud"]], "static_flipud() (in module ivy.container.container_methods)": [[1007, "ivy.container.container_methods.static_flipud"], [1011, "ivy.container.container_methods.static_flipud"]], "float_power() (in module ivy.array.array_methods)": [[1012, "ivy.array.array_methods.float_power"], [1013, "ivy.array.array_methods.float_power"]], "float_power() (in module ivy.container.container_methods)": [[1012, "ivy.container.container_methods.float_power"], [1014, "ivy.container.container_methods.float_power"]], "float_power() (in module ivy.functional.ivy.experimental)": [[1012, "ivy.functional.ivy.experimental.float_power"], [1015, "ivy.functional.ivy.experimental.float_power"]], "static_float_power() (in module ivy.container.container_methods)": [[1012, "ivy.container.container_methods.static_float_power"], [1016, "ivy.container.container_methods.static_float_power"]], "fmax() (in module ivy.array.array_methods)": [[1017, "ivy.array.array_methods.fmax"], [1018, "ivy.array.array_methods.fmax"]], "fmax() (in module ivy.container.container_methods)": [[1017, "ivy.container.container_methods.fmax"], [1019, "ivy.container.container_methods.fmax"]], "fmax() (in module ivy.functional.ivy.experimental)": [[1017, "ivy.functional.ivy.experimental.fmax"], [1020, "ivy.functional.ivy.experimental.fmax"]], "static_fmax() (in module ivy.container.container_methods)": [[1017, "ivy.container.container_methods.static_fmax"], [1021, "ivy.container.container_methods.static_fmax"]], "fmin() (in module ivy.array.array_methods)": [[1022, "ivy.array.array_methods.fmin"], [1023, "ivy.array.array_methods.fmin"]], "fmin() (in module ivy.container.container_methods)": [[1022, "ivy.container.container_methods.fmin"], [1024, "ivy.container.container_methods.fmin"]], "fmin() (in module ivy.functional.ivy.experimental)": [[1022, "ivy.functional.ivy.experimental.fmin"], [1025, "ivy.functional.ivy.experimental.fmin"]], "static_fmin() (in module ivy.container.container_methods)": [[1022, "ivy.container.container_methods.static_fmin"], [1026, "ivy.container.container_methods.static_fmin"]], "fmod() (in module ivy.array.array_methods)": [[1027, "ivy.array.array_methods.fmod"], [1028, "ivy.array.array_methods.fmod"]], "fmod() (in module ivy.container.container_methods)": [[1027, "ivy.container.container_methods.fmod"], [1029, "ivy.container.container_methods.fmod"]], "fmod() (in module ivy.functional.ivy.experimental)": [[1027, "ivy.functional.ivy.experimental.fmod"], [1030, "ivy.functional.ivy.experimental.fmod"]], "static_fmod() (in module ivy.container.container_methods)": [[1027, "ivy.container.container_methods.static_fmod"], [1031, "ivy.container.container_methods.static_fmod"]], "gamma() (in module ivy.array.array_methods)": [[1032, "ivy.array.array_methods.gamma"], [1033, "ivy.array.array_methods.gamma"]], "gamma() (in module ivy.functional.ivy.experimental)": [[1032, "ivy.functional.ivy.experimental.gamma"], [1034, "ivy.functional.ivy.experimental.gamma"]], "gcd() (in module ivy.array.array_methods)": [[1035, "ivy.array.array_methods.gcd"], [1036, "ivy.array.array_methods.gcd"]], "gcd() (in module ivy.container.container_methods)": [[1035, "ivy.container.container_methods.gcd"], [1037, "ivy.container.container_methods.gcd"]], "gcd() (in module ivy.functional.ivy.experimental)": [[1035, "ivy.functional.ivy.experimental.gcd"], [1038, "ivy.functional.ivy.experimental.gcd"]], "static_gcd() (in module ivy.container.container_methods)": [[1035, "ivy.container.container_methods.static_gcd"], [1039, "ivy.container.container_methods.static_gcd"]], "isin() (in module ivy.functional.ivy.experimental.general)": [[1040, "ivy.functional.ivy.experimental.general.isin"], [1041, "ivy.functional.ivy.experimental.general.isin"]], "ivy.functional.ivy.experimental.general": [[1040, "module-ivy.functional.ivy.experimental.general"]], "gradient() (in module ivy.array.array_methods)": [[1042, "ivy.array.array_methods.gradient"], [1043, "ivy.array.array_methods.gradient"]], "gradient() (in module ivy.container.container_methods)": [[1042, "ivy.container.container_methods.gradient"], [1044, "ivy.container.container_methods.gradient"]], "gradient() (in module ivy.functional.ivy.experimental)": [[1042, "ivy.functional.ivy.experimental.gradient"], [1045, "ivy.functional.ivy.experimental.gradient"]], "static_gradient() (in module ivy.container.container_methods)": [[1042, "ivy.container.container_methods.static_gradient"], [1046, "ivy.container.container_methods.static_gradient"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental.gradients)": [[1047, "ivy.functional.ivy.experimental.gradients.bind_custom_gradient_function"], [1048, "ivy.functional.ivy.experimental.gradients.bind_custom_gradient_function"]], "ivy.functional.ivy.experimental.gradients": [[1047, "module-ivy.functional.ivy.experimental.gradients"]], "hamming_window() (in module ivy.container.container_methods)": [[1049, "ivy.container.container_methods.hamming_window"], [1050, "ivy.container.container_methods.hamming_window"]], "hamming_window() (in module ivy.functional.ivy.experimental)": [[1049, "ivy.functional.ivy.experimental.hamming_window"], [1051, "ivy.functional.ivy.experimental.hamming_window"]], "static_hamming_window() (in module ivy.container.container_methods)": [[1049, "ivy.container.container_methods.static_hamming_window"], [1052, "ivy.container.container_methods.static_hamming_window"]], "hann_window() (in module ivy.container.container_methods)": [[1053, "ivy.container.container_methods.hann_window"], [1054, "ivy.container.container_methods.hann_window"]], "hann_window() (in module ivy.functional.ivy.experimental)": [[1053, "ivy.functional.ivy.experimental.hann_window"], [1055, "ivy.functional.ivy.experimental.hann_window"]], "static_hann_window() (in module ivy.container.container_methods)": [[1053, "ivy.container.container_methods.static_hann_window"], [1056, "ivy.container.container_methods.static_hann_window"]], "heaviside() (in module ivy.array.array_methods)": [[1057, "ivy.array.array_methods.heaviside"], [1058, "ivy.array.array_methods.heaviside"]], "heaviside() (in module ivy.container.container_methods)": [[1057, "ivy.container.container_methods.heaviside"], [1059, "ivy.container.container_methods.heaviside"]], "heaviside() (in module ivy.functional.ivy.experimental)": [[1057, "ivy.functional.ivy.experimental.heaviside"], [1060, "ivy.functional.ivy.experimental.heaviside"]], "static_heaviside() (in module ivy.container.container_methods)": [[1057, "ivy.container.container_methods.static_heaviside"], [1061, "ivy.container.container_methods.static_heaviside"]], "hsplit() (in module ivy.array.array_methods)": [[1062, "ivy.array.array_methods.hsplit"], [1063, "ivy.array.array_methods.hsplit"]], "hsplit() (in module ivy.container.container_methods)": [[1062, "ivy.container.container_methods.hsplit"], [1064, "ivy.container.container_methods.hsplit"]], "hsplit() (in module ivy.functional.ivy.experimental)": [[1062, "ivy.functional.ivy.experimental.hsplit"], [1065, "ivy.functional.ivy.experimental.hsplit"]], "static_hsplit() (in module ivy.container.container_methods)": [[1062, "ivy.container.container_methods.static_hsplit"], [1066, "ivy.container.container_methods.static_hsplit"]], "hstack() (in module ivy.array.array_methods)": [[1067, "ivy.array.array_methods.hstack"], [1068, "ivy.array.array_methods.hstack"]], "hstack() (in module ivy.container.container_methods)": [[1067, "ivy.container.container_methods.hstack"], [1069, "ivy.container.container_methods.hstack"]], "hstack() (in module ivy.functional.ivy.experimental)": [[1067, "ivy.functional.ivy.experimental.hstack"], [1070, "ivy.functional.ivy.experimental.hstack"]], "static_hstack() (in module ivy.container.container_methods)": [[1067, "ivy.container.container_methods.static_hstack"], [1071, "ivy.container.container_methods.static_hstack"]], "hypot() (in module ivy.array.array_methods)": [[1072, "ivy.array.array_methods.hypot"], [1073, "ivy.array.array_methods.hypot"]], "hypot() (in module ivy.container.container_methods)": [[1072, "ivy.container.container_methods.hypot"], [1074, "ivy.container.container_methods.hypot"]], "hypot() (in module ivy.functional.ivy.experimental)": [[1072, "ivy.functional.ivy.experimental.hypot"], [1075, "ivy.functional.ivy.experimental.hypot"]], "static_hypot() (in module ivy.container.container_methods)": [[1072, "ivy.container.container_methods.static_hypot"], [1076, "ivy.container.container_methods.static_hypot"]], "i0() (in module ivy.array.array_methods)": [[1077, "ivy.array.array_methods.i0"], [1078, "ivy.array.array_methods.i0"]], "i0() (in module ivy.container.container_methods)": [[1077, "ivy.container.container_methods.i0"], [1079, "ivy.container.container_methods.i0"]], "i0() (in module ivy.functional.ivy.experimental)": [[1077, "ivy.functional.ivy.experimental.i0"], [1080, "ivy.functional.ivy.experimental.i0"]], "static_i0() (in module ivy.container.container_methods)": [[1077, "ivy.container.container_methods.static_i0"], [1081, "ivy.container.container_methods.static_i0"]], "ifft() (in module ivy.array.array_methods)": [[1082, "ivy.array.array_methods.ifft"], [1083, "ivy.array.array_methods.ifft"]], "ifft() (in module ivy.container.container_methods)": [[1082, "ivy.container.container_methods.ifft"], [1084, "ivy.container.container_methods.ifft"]], "ifft() (in module ivy.functional.ivy.experimental)": [[1082, "ivy.functional.ivy.experimental.ifft"], [1085, "ivy.functional.ivy.experimental.ifft"]], "static_ifft() (in module ivy.container.container_methods)": [[1082, "ivy.container.container_methods.static_ifft"], [1086, "ivy.container.container_methods.static_ifft"]], "imag() (in module ivy.array.array_methods)": [[1087, "ivy.array.array_methods.imag"], [1088, "ivy.array.array_methods.imag"]], "imag() (in module ivy.container.container_methods)": [[1087, "ivy.container.container_methods.imag"], [1089, "ivy.container.container_methods.imag"]], "imag() (in module ivy.functional.ivy.experimental)": [[1087, "ivy.functional.ivy.experimental.imag"], [1090, "ivy.functional.ivy.experimental.imag"]], "static_imag() (in module ivy.container.container_methods)": [[1087, "ivy.container.container_methods.static_imag"], [1091, "ivy.container.container_methods.static_imag"]], "instance_norm() (in module ivy.array.array_methods)": [[1092, "ivy.array.array_methods.instance_norm"], [1093, "ivy.array.array_methods.instance_norm"]], "instance_norm() (in module ivy.container.container_methods)": [[1092, "ivy.container.container_methods.instance_norm"], [1094, "ivy.container.container_methods.instance_norm"]], "instance_norm() (in module ivy.functional.ivy.experimental)": [[1092, "ivy.functional.ivy.experimental.instance_norm"], [1095, "ivy.functional.ivy.experimental.instance_norm"]], "static_instance_norm() (in module ivy.container.container_methods)": [[1092, "ivy.container.container_methods.static_instance_norm"], [1096, "ivy.container.container_methods.static_instance_norm"]], "interp() (in module ivy.functional.ivy.experimental)": [[1097, "ivy.functional.ivy.experimental.interp"]], "interpolate() (in module ivy.array.array_methods)": [[1098, "ivy.array.array_methods.interpolate"], [1099, "ivy.array.array_methods.interpolate"]], "interpolate() (in module ivy.container.container_methods)": [[1098, "ivy.container.container_methods.interpolate"], [1100, "ivy.container.container_methods.interpolate"]], "interpolate() (in module ivy.functional.ivy.experimental)": [[1098, "ivy.functional.ivy.experimental.interpolate"], [1101, "ivy.functional.ivy.experimental.interpolate"]], "static_interpolate() (in module ivy.container.container_methods)": [[1098, "ivy.container.container_methods.static_interpolate"], [1102, "ivy.container.container_methods.static_interpolate"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental)": [[1103, "ivy.functional.ivy.experimental.is_ivy_sparse_array"]], "is_native_dtype() (in module ivy.functional.ivy.experimental)": [[1104, "ivy.functional.ivy.experimental.is_native_dtype"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1105, "ivy.functional.ivy.experimental.is_native_sparse_array"]], "isclose() (in module ivy.array.array_methods)": [[1106, "ivy.array.array_methods.isclose"], [1107, "ivy.array.array_methods.isclose"]], "isclose() (in module ivy.container.container_methods)": [[1106, "ivy.container.container_methods.isclose"], [1108, "ivy.container.container_methods.isclose"]], "isclose() (in module ivy.functional.ivy.experimental)": [[1106, "ivy.functional.ivy.experimental.isclose"], [1109, "ivy.functional.ivy.experimental.isclose"]], "static_isclose() (in module ivy.container.container_methods)": [[1106, "ivy.container.container_methods.static_isclose"], [1110, "ivy.container.container_methods.static_isclose"]], "isin() (in module ivy.array.array_methods)": [[1111, "ivy.array.array_methods.isin"], [1112, "ivy.array.array_methods.isin"]], "isin() (in module ivy.container.container_methods)": [[1111, "ivy.container.container_methods.isin"], [1113, "ivy.container.container_methods.isin"]], "isin() (in module ivy.functional.ivy.experimental)": [[1111, "ivy.functional.ivy.experimental.isin"], [1114, "ivy.functional.ivy.experimental.isin"]], "static_isin() (in module ivy.container.container_methods)": [[1111, "ivy.container.container_methods.static_isin"], [1115, "ivy.container.container_methods.static_isin"]], "kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1116, "ivy.container.container_methods.kaiser_bessel_derived_window"], [1117, "ivy.container.container_methods.kaiser_bessel_derived_window"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental)": [[1116, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"], [1118, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"]], "static_kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1116, "ivy.container.container_methods.static_kaiser_bessel_derived_window"], [1119, "ivy.container.container_methods.static_kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.container.container_methods)": [[1120, "ivy.container.container_methods.kaiser_window"], [1121, "ivy.container.container_methods.kaiser_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental)": [[1120, "ivy.functional.ivy.experimental.kaiser_window"], [1122, "ivy.functional.ivy.experimental.kaiser_window"]], "static_kaiser_window() (in module ivy.container.container_methods)": [[1120, "ivy.container.container_methods.static_kaiser_window"], [1123, "ivy.container.container_methods.static_kaiser_window"]], "kron() (in module ivy.array.array_methods)": [[1124, "ivy.array.array_methods.kron"], [1125, "ivy.array.array_methods.kron"]], "kron() (in module ivy.container.container_methods)": [[1124, "ivy.container.container_methods.kron"], [1126, "ivy.container.container_methods.kron"]], "kron() (in module ivy.functional.ivy.experimental)": [[1124, "ivy.functional.ivy.experimental.kron"], [1127, "ivy.functional.ivy.experimental.kron"]], "static_kron() (in module ivy.container.container_methods)": [[1124, "ivy.container.container_methods.static_kron"], [1128, "ivy.container.container_methods.static_kron"]], "l2_normalize() (in module ivy.array.array_methods)": [[1129, "ivy.array.array_methods.l2_normalize"], [1130, "ivy.array.array_methods.l2_normalize"]], "l2_normalize() (in module ivy.container.container_methods)": [[1129, "ivy.container.container_methods.l2_normalize"], [1131, "ivy.container.container_methods.l2_normalize"]], "l2_normalize() (in module ivy.functional.ivy.experimental)": [[1129, "ivy.functional.ivy.experimental.l2_normalize"], [1132, "ivy.functional.ivy.experimental.l2_normalize"]], "static_l2_normalize() (in module ivy.container.container_methods)": [[1129, "ivy.container.container_methods.static_l2_normalize"], [1133, "ivy.container.container_methods.static_l2_normalize"]], "avg_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.avg_pool1d"], [1135, "ivy.functional.ivy.experimental.layers.avg_pool1d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.avg_pool2d"], [1136, "ivy.functional.ivy.experimental.layers.avg_pool2d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.avg_pool3d"], [1137, "ivy.functional.ivy.experimental.layers.avg_pool3d"]], "bicubic() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.bicubic"], [1138, "ivy.functional.ivy.experimental.layers.bicubic"]], "cubic() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.cubic"], [1139, "ivy.functional.ivy.experimental.layers.cubic"]], "dct() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.dct"], [1140, "ivy.functional.ivy.experimental.layers.dct"]], "dft() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.dft"], [1141, "ivy.functional.ivy.experimental.layers.dft"]], "dropout1d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.dropout1d"], [1142, "ivy.functional.ivy.experimental.layers.dropout1d"]], "embedding() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.embedding"], [1143, "ivy.functional.ivy.experimental.layers.embedding"]], "fft() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.fft"], [1144, "ivy.functional.ivy.experimental.layers.fft"]], "ifft() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.ifft"], [1145, "ivy.functional.ivy.experimental.layers.ifft"]], "interp() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.interp"], [1146, "ivy.functional.ivy.experimental.layers.interp"]], "interpolate() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.interpolate"], [1147, "ivy.functional.ivy.experimental.layers.interpolate"]], "ivy.functional.ivy.experimental.layers": [[1134, "module-ivy.functional.ivy.experimental.layers"]], "max_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.max_pool1d"], [1148, "ivy.functional.ivy.experimental.layers.max_pool1d"]], "max_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.max_pool2d"], [1149, "ivy.functional.ivy.experimental.layers.max_pool2d"]], "max_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.max_pool3d"], [1150, "ivy.functional.ivy.experimental.layers.max_pool3d"]], "paddedrow() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.paddedRow"], [1151, "ivy.functional.ivy.experimental.layers.paddedRow"]], "padding_ceil_mode() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.padding_ceil_mode"], [1152, "ivy.functional.ivy.experimental.layers.padding_ceil_mode"]], "polynomial_calclulation() (in module ivy.functional.ivy.experimental.layers)": [[1134, "ivy.functional.ivy.experimental.layers.polynomial_calclulation"], [1153, "ivy.functional.ivy.experimental.layers.polynomial_calclulation"]], "lcm() (in module ivy.array.array_methods)": [[1154, "ivy.array.array_methods.lcm"], [1155, "ivy.array.array_methods.lcm"]], "lcm() (in module ivy.container.container_methods)": [[1154, "ivy.container.container_methods.lcm"], [1156, "ivy.container.container_methods.lcm"]], "lcm() (in module ivy.functional.ivy.experimental)": [[1154, "ivy.functional.ivy.experimental.lcm"], [1157, "ivy.functional.ivy.experimental.lcm"]], "static_lcm() (in module ivy.container.container_methods)": [[1154, "ivy.container.container_methods.static_lcm"], [1158, "ivy.container.container_methods.static_lcm"]], "lexsort() (in module ivy.array.array_methods)": [[1159, "ivy.array.array_methods.lexsort"], [1160, "ivy.array.array_methods.lexsort"]], "lexsort() (in module ivy.container.container_methods)": [[1159, "ivy.container.container_methods.lexsort"], [1161, "ivy.container.container_methods.lexsort"]], "lexsort() (in module ivy.functional.ivy.experimental)": [[1159, "ivy.functional.ivy.experimental.lexsort"], [1162, "ivy.functional.ivy.experimental.lexsort"]], "static_lexsort() (in module ivy.container.container_methods)": [[1159, "ivy.container.container_methods.static_lexsort"], [1163, "ivy.container.container_methods.static_lexsort"]], "adjoint() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.adjoint"], [1165, "ivy.functional.ivy.experimental.linear_algebra.adjoint"]], "diagflat() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.diagflat"], [1166, "ivy.functional.ivy.experimental.linear_algebra.diagflat"]], "eig() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.eig"], [1167, "ivy.functional.ivy.experimental.linear_algebra.eig"]], "eigvals() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.eigvals"], [1168, "ivy.functional.ivy.experimental.linear_algebra.eigvals"]], "ivy.functional.ivy.experimental.linear_algebra": [[1164, "module-ivy.functional.ivy.experimental.linear_algebra"]], "kron() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.kron"], [1169, "ivy.functional.ivy.experimental.linear_algebra.kron"]], "matrix_exp() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1164, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"], [1170, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"]], "logaddexp2() (in module ivy.array.array_methods)": [[1171, "ivy.array.array_methods.logaddexp2"], [1172, "ivy.array.array_methods.logaddexp2"]], "logaddexp2() (in module ivy.container.container_methods)": [[1171, "ivy.container.container_methods.logaddexp2"], [1173, "ivy.container.container_methods.logaddexp2"]], "logaddexp2() (in module ivy.functional.ivy.experimental)": [[1171, "ivy.functional.ivy.experimental.logaddexp2"], [1174, "ivy.functional.ivy.experimental.logaddexp2"]], "static_logaddexp2() (in module ivy.container.container_methods)": [[1171, "ivy.container.container_methods.static_logaddexp2"], [1175, "ivy.container.container_methods.static_logaddexp2"]], "logit() (in module ivy.array.array_methods)": [[1176, "ivy.array.array_methods.logit"], [1177, "ivy.array.array_methods.logit"]], "logit() (in module ivy.container.container_methods)": [[1176, "ivy.container.container_methods.logit"], [1178, "ivy.container.container_methods.logit"]], "logit() (in module ivy.functional.ivy.experimental)": [[1176, "ivy.functional.ivy.experimental.logit"], [1179, "ivy.functional.ivy.experimental.logit"]], "static_logit() (in module ivy.container.container_methods)": [[1176, "ivy.container.container_methods.static_logit"], [1180, "ivy.container.container_methods.static_logit"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental.losses)": [[1181, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"], [1182, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.losses": [[1181, "module-ivy.functional.ivy.experimental.losses"]], "lp_normalize() (in module ivy.array.array_methods)": [[1183, "ivy.array.array_methods.lp_normalize"], [1184, "ivy.array.array_methods.lp_normalize"]], "lp_normalize() (in module ivy.container.container_methods)": [[1183, "ivy.container.container_methods.lp_normalize"], [1185, "ivy.container.container_methods.lp_normalize"]], "lp_normalize() (in module ivy.functional.ivy.experimental)": [[1183, "ivy.functional.ivy.experimental.lp_normalize"], [1186, "ivy.functional.ivy.experimental.lp_normalize"]], "static_lp_normalize() (in module ivy.container.container_methods)": [[1183, "ivy.container.container_methods.static_lp_normalize"], [1187, "ivy.container.container_methods.static_lp_normalize"]], "atleast_1d() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.atleast_1d"], [1189, "ivy.functional.ivy.experimental.manipulation.atleast_1d"]], "atleast_2d() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.atleast_2d"], [1190, "ivy.functional.ivy.experimental.manipulation.atleast_2d"]], "atleast_3d() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.atleast_3d"], [1191, "ivy.functional.ivy.experimental.manipulation.atleast_3d"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"], [1192, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"]], "dsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.dsplit"], [1193, "ivy.functional.ivy.experimental.manipulation.dsplit"]], "dstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.dstack"], [1194, "ivy.functional.ivy.experimental.manipulation.dstack"]], "expand() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.expand"], [1195, "ivy.functional.ivy.experimental.manipulation.expand"]], "flatten() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.flatten"], [1196, "ivy.functional.ivy.experimental.manipulation.flatten"]], "fliplr() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.fliplr"], [1197, "ivy.functional.ivy.experimental.manipulation.fliplr"]], "flipud() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.flipud"], [1198, "ivy.functional.ivy.experimental.manipulation.flipud"]], "heaviside() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.heaviside"], [1199, "ivy.functional.ivy.experimental.manipulation.heaviside"]], "hsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.hsplit"], [1200, "ivy.functional.ivy.experimental.manipulation.hsplit"]], "hstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.hstack"], [1201, "ivy.functional.ivy.experimental.manipulation.hstack"]], "i0() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.i0"], [1202, "ivy.functional.ivy.experimental.manipulation.i0"]], "ivy.functional.ivy.experimental.manipulation": [[1188, "module-ivy.functional.ivy.experimental.manipulation"]], "moveaxis() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.moveaxis"], [1203, "ivy.functional.ivy.experimental.manipulation.moveaxis"]], "ndenumerate() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.ndenumerate"], [1204, "ivy.functional.ivy.experimental.manipulation.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.ndindex"], [1205, "ivy.functional.ivy.experimental.manipulation.ndindex"]], "pad() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.pad"], [1206, "ivy.functional.ivy.experimental.manipulation.pad"]], "rot90() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.rot90"], [1207, "ivy.functional.ivy.experimental.manipulation.rot90"]], "take_along_axis() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.take_along_axis"], [1208, "ivy.functional.ivy.experimental.manipulation.take_along_axis"]], "top_k() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.top_k"], [1209, "ivy.functional.ivy.experimental.manipulation.top_k"]], "vsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.vsplit"], [1210, "ivy.functional.ivy.experimental.manipulation.vsplit"]], "vstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1188, "ivy.functional.ivy.experimental.manipulation.vstack"], [1211, "ivy.functional.ivy.experimental.manipulation.vstack"]], "matrix_exp() (in module ivy.array.array_methods)": [[1212, "ivy.array.array_methods.matrix_exp"], [1213, "ivy.array.array_methods.matrix_exp"]], "matrix_exp() (in module ivy.container.container_methods)": [[1212, "ivy.container.container_methods.matrix_exp"], [1214, "ivy.container.container_methods.matrix_exp"]], "matrix_exp() (in module ivy.functional.ivy.experimental)": [[1212, "ivy.functional.ivy.experimental.matrix_exp"], [1215, "ivy.functional.ivy.experimental.matrix_exp"]], "static_matrix_exp() (in module ivy.container.container_methods)": [[1212, "ivy.container.container_methods.static_matrix_exp"], [1216, "ivy.container.container_methods.static_matrix_exp"]], "max_pool1d() (in module ivy.array.array_methods)": [[1217, "ivy.array.array_methods.max_pool1d"], [1218, "ivy.array.array_methods.max_pool1d"]], "max_pool1d() (in module ivy.container.container_methods)": [[1217, "ivy.container.container_methods.max_pool1d"], [1219, "ivy.container.container_methods.max_pool1d"]], "max_pool1d() (in module ivy.functional.ivy.experimental)": [[1217, "ivy.functional.ivy.experimental.max_pool1d"], [1220, "ivy.functional.ivy.experimental.max_pool1d"]], "static_max_pool1d() (in module ivy.container.container_methods)": [[1217, "ivy.container.container_methods.static_max_pool1d"], [1221, "ivy.container.container_methods.static_max_pool1d"]], "max_pool2d() (in module ivy.array.array_methods)": [[1222, "ivy.array.array_methods.max_pool2d"], [1223, "ivy.array.array_methods.max_pool2d"]], "max_pool2d() (in module ivy.container.container_methods)": [[1222, "ivy.container.container_methods.max_pool2d"], [1224, "ivy.container.container_methods.max_pool2d"]], "max_pool2d() (in module ivy.functional.ivy.experimental)": [[1222, "ivy.functional.ivy.experimental.max_pool2d"], [1225, "ivy.functional.ivy.experimental.max_pool2d"]], "static_max_pool2d() (in module ivy.container.container_methods)": [[1222, "ivy.container.container_methods.static_max_pool2d"], [1226, "ivy.container.container_methods.static_max_pool2d"]], "max_pool3d() (in module ivy.array.array_methods)": [[1227, "ivy.array.array_methods.max_pool3d"], [1228, "ivy.array.array_methods.max_pool3d"]], "max_pool3d() (in module ivy.container.container_methods)": [[1227, "ivy.container.container_methods.max_pool3d"], [1229, "ivy.container.container_methods.max_pool3d"]], "max_pool3d() (in module ivy.functional.ivy.experimental)": [[1227, "ivy.functional.ivy.experimental.max_pool3d"], [1230, "ivy.functional.ivy.experimental.max_pool3d"]], "static_max_pool3d() (in module ivy.container.container_methods)": [[1227, "ivy.container.container_methods.static_max_pool3d"], [1231, "ivy.container.container_methods.static_max_pool3d"]], "median() (in module ivy.array.array_methods)": [[1232, "ivy.array.array_methods.median"], [1233, "ivy.array.array_methods.median"]], "median() (in module ivy.container.container_methods)": [[1232, "ivy.container.container_methods.median"], [1234, "ivy.container.container_methods.median"]], "median() (in module ivy.functional.ivy.experimental)": [[1232, "ivy.functional.ivy.experimental.median"], [1235, "ivy.functional.ivy.experimental.median"]], "static_median() (in module ivy.container.container_methods)": [[1232, "ivy.container.container_methods.static_median"], [1236, "ivy.container.container_methods.static_median"]], "ivy.functional.ivy.experimental.meta": [[1237, "module-ivy.functional.ivy.experimental.meta"]], "moveaxis() (in module ivy.array.array_methods)": [[1238, "ivy.array.array_methods.moveaxis"], [1239, "ivy.array.array_methods.moveaxis"]], "moveaxis() (in module ivy.container.container_methods)": [[1238, "ivy.container.container_methods.moveaxis"], [1240, "ivy.container.container_methods.moveaxis"]], "moveaxis() (in module ivy.functional.ivy.experimental)": [[1238, "ivy.functional.ivy.experimental.moveaxis"], [1241, "ivy.functional.ivy.experimental.moveaxis"]], "static_moveaxis() (in module ivy.container.container_methods)": [[1238, "ivy.container.container_methods.static_moveaxis"], [1242, "ivy.container.container_methods.static_moveaxis"]], "msort() (in module ivy.array.array_methods)": [[1243, "ivy.array.array_methods.msort"], [1244, "ivy.array.array_methods.msort"]], "msort() (in module ivy.container.container_methods)": [[1243, "ivy.container.container_methods.msort"], [1245, "ivy.container.container_methods.msort"]], "msort() (in module ivy.functional.ivy.experimental)": [[1243, "ivy.functional.ivy.experimental.msort"], [1246, "ivy.functional.ivy.experimental.msort"]], "static_msort() (in module ivy.container.container_methods)": [[1243, "ivy.container.container_methods.static_msort"], [1247, "ivy.container.container_methods.static_msort"]], "nan_to_num() (in module ivy.array.array_methods)": [[1248, "ivy.array.array_methods.nan_to_num"], [1249, "ivy.array.array_methods.nan_to_num"]], "nan_to_num() (in module ivy.container.container_methods)": [[1248, "ivy.container.container_methods.nan_to_num"], [1250, "ivy.container.container_methods.nan_to_num"]], "nan_to_num() (in module ivy.functional.ivy.experimental)": [[1248, "ivy.functional.ivy.experimental.nan_to_num"], [1251, "ivy.functional.ivy.experimental.nan_to_num"]], "static_nan_to_num() (in module ivy.container.container_methods)": [[1248, "ivy.container.container_methods.static_nan_to_num"], [1252, "ivy.container.container_methods.static_nan_to_num"]], "nanmean() (in module ivy.array.array_methods)": [[1253, "ivy.array.array_methods.nanmean"], [1254, "ivy.array.array_methods.nanmean"]], "nanmean() (in module ivy.container.container_methods)": [[1253, "ivy.container.container_methods.nanmean"], [1255, "ivy.container.container_methods.nanmean"]], "nanmean() (in module ivy.functional.ivy.experimental)": [[1253, "ivy.functional.ivy.experimental.nanmean"], [1256, "ivy.functional.ivy.experimental.nanmean"]], "static_nanmean() (in module ivy.container.container_methods)": [[1253, "ivy.container.container_methods.static_nanmean"], [1257, "ivy.container.container_methods.static_nanmean"]], "nanmedian() (in module ivy.array.array_methods)": [[1258, "ivy.array.array_methods.nanmedian"], [1259, "ivy.array.array_methods.nanmedian"]], "nanmedian() (in module ivy.container.container_methods)": [[1258, "ivy.container.container_methods.nanmedian"], [1260, "ivy.container.container_methods.nanmedian"]], "nanmedian() (in module ivy.functional.ivy.experimental)": [[1258, "ivy.functional.ivy.experimental.nanmedian"], [1261, "ivy.functional.ivy.experimental.nanmedian"]], "static_nanmedian() (in module ivy.container.container_methods)": [[1258, "ivy.container.container_methods.static_nanmedian"], [1262, "ivy.container.container_methods.static_nanmedian"]], "nansum() (in module ivy.array.array_methods)": [[1263, "ivy.array.array_methods.nansum"], [1264, "ivy.array.array_methods.nansum"]], "nansum() (in module ivy.container.container_methods)": [[1263, "ivy.container.container_methods.nansum"], [1265, "ivy.container.container_methods.nansum"]], "nansum() (in module ivy.functional.ivy.experimental)": [[1263, "ivy.functional.ivy.experimental.nansum"], [1266, "ivy.functional.ivy.experimental.nansum"]], "static_nansum() (in module ivy.container.container_methods)": [[1263, "ivy.container.container_methods.static_nansum"], [1267, "ivy.container.container_methods.static_nansum"]], "native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1268, "ivy.functional.ivy.experimental.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental)": [[1269, "ivy.functional.ivy.experimental.native_sparse_array_to_indices_values_and_shape"]], "ndenumerate() (in module ivy.functional.ivy.experimental)": [[1270, "ivy.functional.ivy.experimental.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental)": [[1271, "ivy.functional.ivy.experimental.ndindex"]], "ivy.functional.ivy.experimental.nest": [[1272, "module-ivy.functional.ivy.experimental.nest"]], "nextafter() (in module ivy.array.array_methods)": [[1273, "ivy.array.array_methods.nextafter"], [1274, "ivy.array.array_methods.nextafter"]], "nextafter() (in module ivy.container.container_methods)": [[1273, "ivy.container.container_methods.nextafter"], [1275, "ivy.container.container_methods.nextafter"]], "nextafter() (in module ivy.functional.ivy.experimental)": [[1273, "ivy.functional.ivy.experimental.nextafter"], [1276, "ivy.functional.ivy.experimental.nextafter"]], "static_nextafter() (in module ivy.container.container_methods)": [[1273, "ivy.container.container_methods.static_nextafter"], [1277, "ivy.container.container_methods.static_nextafter"]], "instance_norm() (in module ivy.functional.ivy.experimental.norms)": [[1278, "ivy.functional.ivy.experimental.norms.instance_norm"], [1279, "ivy.functional.ivy.experimental.norms.instance_norm"]], "ivy.functional.ivy.experimental.norms": [[1278, "module-ivy.functional.ivy.experimental.norms"]], "l2_normalize() (in module ivy.functional.ivy.experimental.norms)": [[1278, "ivy.functional.ivy.experimental.norms.l2_normalize"], [1280, "ivy.functional.ivy.experimental.norms.l2_normalize"]], "lp_normalize() (in module ivy.functional.ivy.experimental.norms)": [[1278, "ivy.functional.ivy.experimental.norms.lp_normalize"], [1281, "ivy.functional.ivy.experimental.norms.lp_normalize"]], "pad() (in module ivy.array.array_methods)": [[1282, "ivy.array.array_methods.pad"], [1283, "ivy.array.array_methods.pad"]], "pad() (in module ivy.container.container_methods)": [[1282, "ivy.container.container_methods.pad"], [1284, "ivy.container.container_methods.pad"]], "pad() (in module ivy.functional.ivy.experimental)": [[1282, "ivy.functional.ivy.experimental.pad"], [1285, "ivy.functional.ivy.experimental.pad"]], "static_pad() (in module ivy.container.container_methods)": [[1282, "ivy.container.container_methods.static_pad"], [1286, "ivy.container.container_methods.static_pad"]], "paddedrow() (in module ivy.functional.ivy.experimental)": [[1287, "ivy.functional.ivy.experimental.paddedRow"]], "padding_ceil_mode() (in module ivy.functional.ivy.experimental)": [[1288, "ivy.functional.ivy.experimental.padding_ceil_mode"]], "poisson() (in module ivy.array.array_methods)": [[1289, "ivy.array.array_methods.poisson"], [1290, "ivy.array.array_methods.poisson"]], "poisson() (in module ivy.container.container_methods)": [[1289, "ivy.container.container_methods.poisson"], [1291, "ivy.container.container_methods.poisson"]], "poisson() (in module ivy.functional.ivy.experimental)": [[1289, "ivy.functional.ivy.experimental.poisson"], [1292, "ivy.functional.ivy.experimental.poisson"]], "static_poisson() (in module ivy.container.container_methods)": [[1289, "ivy.container.container_methods.static_poisson"], [1293, "ivy.container.container_methods.static_poisson"]], "polynomial_calclulation() (in module ivy.functional.ivy.experimental)": [[1294, "ivy.functional.ivy.experimental.polynomial_calclulation"]], "prelu() (in module ivy.array.array_methods)": [[1295, "ivy.array.array_methods.prelu"], [1296, "ivy.array.array_methods.prelu"]], "prelu() (in module ivy.container.container_methods)": [[1295, "ivy.container.container_methods.prelu"], [1297, "ivy.container.container_methods.prelu"]], "prelu() (in module ivy.functional.ivy.experimental)": [[1295, "ivy.functional.ivy.experimental.prelu"], [1298, "ivy.functional.ivy.experimental.prelu"]], "static_prelu() (in module ivy.container.container_methods)": [[1295, "ivy.container.container_methods.static_prelu"], [1299, "ivy.container.container_methods.static_prelu"]], "quantile() (in module ivy.array.array_methods)": [[1300, "ivy.array.array_methods.quantile"], [1301, "ivy.array.array_methods.quantile"]], "quantile() (in module ivy.container.container_methods)": [[1300, "ivy.container.container_methods.quantile"], [1302, "ivy.container.container_methods.quantile"]], "quantile() (in module ivy.functional.ivy.experimental)": [[1300, "ivy.functional.ivy.experimental.quantile"], [1303, "ivy.functional.ivy.experimental.quantile"]], "static_quantile() (in module ivy.container.container_methods)": [[1300, "ivy.container.container_methods.static_quantile"], [1304, "ivy.container.container_methods.static_quantile"]], "bernoulli() (in module ivy.functional.ivy.experimental.random)": [[1305, "ivy.functional.ivy.experimental.random.bernoulli"], [1306, "ivy.functional.ivy.experimental.random.bernoulli"]], "beta() (in module ivy.functional.ivy.experimental.random)": [[1305, "ivy.functional.ivy.experimental.random.beta"], [1307, "ivy.functional.ivy.experimental.random.beta"]], "dirichlet() (in module ivy.functional.ivy.experimental.random)": [[1305, "ivy.functional.ivy.experimental.random.dirichlet"], [1308, "ivy.functional.ivy.experimental.random.dirichlet"]], "gamma() (in module ivy.functional.ivy.experimental.random)": [[1305, "ivy.functional.ivy.experimental.random.gamma"], [1309, "ivy.functional.ivy.experimental.random.gamma"]], "ivy.functional.ivy.experimental.random": [[1305, "module-ivy.functional.ivy.experimental.random"]], "poisson() (in module ivy.functional.ivy.experimental.random)": [[1305, "ivy.functional.ivy.experimental.random.poisson"], [1310, "ivy.functional.ivy.experimental.random.poisson"]], "real() (in module ivy.array.array_methods)": [[1311, "ivy.array.array_methods.real"], [1312, "ivy.array.array_methods.real"]], "real() (in module ivy.container.container_methods)": [[1311, "ivy.container.container_methods.real"], [1313, "ivy.container.container_methods.real"]], "real() (in module ivy.functional.ivy.experimental)": [[1311, "ivy.functional.ivy.experimental.real"], [1314, "ivy.functional.ivy.experimental.real"]], "static_real() (in module ivy.container.container_methods)": [[1311, "ivy.container.container_methods.static_real"], [1315, "ivy.container.container_methods.static_real"]], "rot90() (in module ivy.array.array_methods)": [[1316, "ivy.array.array_methods.rot90"], [1317, "ivy.array.array_methods.rot90"]], "rot90() (in module ivy.container.container_methods)": [[1316, "ivy.container.container_methods.rot90"], [1318, "ivy.container.container_methods.rot90"]], "rot90() (in module ivy.functional.ivy.experimental)": [[1316, "ivy.functional.ivy.experimental.rot90"], [1319, "ivy.functional.ivy.experimental.rot90"]], "static_rot90() (in module ivy.container.container_methods)": [[1316, "ivy.container.container_methods.static_rot90"], [1320, "ivy.container.container_methods.static_rot90"]], "ivy.functional.ivy.experimental.searching": [[1321, "module-ivy.functional.ivy.experimental.searching"]], "ivy.functional.ivy.experimental.set": [[1322, "module-ivy.functional.ivy.experimental.set"]], "signbit() (in module ivy.array.array_methods)": [[1323, "ivy.array.array_methods.signbit"], [1324, "ivy.array.array_methods.signbit"]], "signbit() (in module ivy.container.container_methods)": [[1323, "ivy.container.container_methods.signbit"], [1325, "ivy.container.container_methods.signbit"]], "signbit() (in module ivy.functional.ivy.experimental)": [[1323, "ivy.functional.ivy.experimental.signbit"], [1326, "ivy.functional.ivy.experimental.signbit"]], "static_signbit() (in module ivy.container.container_methods)": [[1323, "ivy.container.container_methods.static_signbit"], [1327, "ivy.container.container_methods.static_signbit"]], "sinc() (in module ivy.array.array_methods)": [[1328, "ivy.array.array_methods.sinc"], [1329, "ivy.array.array_methods.sinc"]], "sinc() (in module ivy.container.container_methods)": [[1328, "ivy.container.container_methods.sinc"], [1330, "ivy.container.container_methods.sinc"]], "sinc() (in module ivy.functional.ivy.experimental)": [[1328, "ivy.functional.ivy.experimental.sinc"], [1331, "ivy.functional.ivy.experimental.sinc"]], "static_sinc() (in module ivy.container.container_methods)": [[1328, "ivy.container.container_methods.static_sinc"], [1332, "ivy.container.container_methods.static_sinc"]], "ivy.functional.ivy.experimental.sorting": [[1333, "module-ivy.functional.ivy.experimental.sorting"]], "lexsort() (in module ivy.functional.ivy.experimental.sorting)": [[1333, "ivy.functional.ivy.experimental.sorting.lexsort"], [1334, "ivy.functional.ivy.experimental.sorting.lexsort"]], "msort() (in module ivy.functional.ivy.experimental.sorting)": [[1333, "ivy.functional.ivy.experimental.sorting.msort"], [1335, "ivy.functional.ivy.experimental.sorting.msort"]], "nativesparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1336, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"], [1337, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"]], "ccol_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.ccol_indices"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.col_indices"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.col_indices"]], "coo_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"]], "crow_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.crow_indices"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.crow_indices"]], "data (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1336, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"], [1339, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1336, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"], [1340, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"]], "ivy.functional.ivy.experimental.sparse_array": [[1336, "module-ivy.functional.ivy.experimental.sparse_array"]], "native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1336, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"], [1341, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental.sparse_array)": [[1336, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"], [1342, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"]], "row_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.row_indices"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.row_indices"]], "to_dense_array() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1336, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"], [1338, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"]], "corrcoef() (in module ivy.functional.ivy.experimental.statistical)": [[1343, "ivy.functional.ivy.experimental.statistical.corrcoef"], [1344, "ivy.functional.ivy.experimental.statistical.corrcoef"]], "ivy.functional.ivy.experimental.statistical": [[1343, "module-ivy.functional.ivy.experimental.statistical"]], "median() (in module ivy.functional.ivy.experimental.statistical)": [[1343, "ivy.functional.ivy.experimental.statistical.median"], [1345, "ivy.functional.ivy.experimental.statistical.median"]], "nanmean() (in module ivy.functional.ivy.experimental.statistical)": [[1343, "ivy.functional.ivy.experimental.statistical.nanmean"], [1346, "ivy.functional.ivy.experimental.statistical.nanmean"]], "nanmedian() (in module ivy.functional.ivy.experimental.statistical)": [[1343, "ivy.functional.ivy.experimental.statistical.nanmedian"], [1347, "ivy.functional.ivy.experimental.statistical.nanmedian"]], "quantile() (in module ivy.functional.ivy.experimental.statistical)": [[1343, "ivy.functional.ivy.experimental.statistical.quantile"], [1348, "ivy.functional.ivy.experimental.statistical.quantile"]], "unravel_index() (in module ivy.functional.ivy.experimental.statistical)": [[1343, "ivy.functional.ivy.experimental.statistical.unravel_index"], [1349, "ivy.functional.ivy.experimental.statistical.unravel_index"]], "static_take_along_axis() (in module ivy.container.container_methods)": [[1350, "ivy.container.container_methods.static_take_along_axis"], [1351, "ivy.container.container_methods.static_take_along_axis"]], "take_along_axis() (in module ivy.array.array_methods)": [[1350, "ivy.array.array_methods.take_along_axis"], [1352, "ivy.array.array_methods.take_along_axis"]], "take_along_axis() (in module ivy.container.container_methods)": [[1350, "ivy.container.container_methods.take_along_axis"], [1353, "ivy.container.container_methods.take_along_axis"]], "take_along_axis() (in module ivy.functional.ivy.experimental)": [[1350, "ivy.functional.ivy.experimental.take_along_axis"], [1354, "ivy.functional.ivy.experimental.take_along_axis"]], "static_thresholded_relu() (in module ivy.container.container_methods)": [[1355, "ivy.container.container_methods.static_thresholded_relu"], [1356, "ivy.container.container_methods.static_thresholded_relu"]], "thresholded_relu() (in module ivy.array.array_methods)": [[1355, "ivy.array.array_methods.thresholded_relu"], [1357, "ivy.array.array_methods.thresholded_relu"]], "thresholded_relu() (in module ivy.container.container_methods)": [[1355, "ivy.container.container_methods.thresholded_relu"], [1358, "ivy.container.container_methods.thresholded_relu"]], "thresholded_relu() (in module ivy.functional.ivy.experimental)": [[1355, "ivy.functional.ivy.experimental.thresholded_relu"], [1359, "ivy.functional.ivy.experimental.thresholded_relu"]], "static_top_k() (in module ivy.container.container_methods)": [[1360, "ivy.container.container_methods.static_top_k"], [1361, "ivy.container.container_methods.static_top_k"]], "top_k() (in module ivy.array.array_methods)": [[1360, "ivy.array.array_methods.top_k"], [1362, "ivy.array.array_methods.top_k"]], "top_k() (in module ivy.container.container_methods)": [[1360, "ivy.container.container_methods.top_k"], [1363, "ivy.container.container_methods.top_k"]], "top_k() (in module ivy.functional.ivy.experimental)": [[1360, "ivy.functional.ivy.experimental.top_k"], [1364, "ivy.functional.ivy.experimental.top_k"]], "trapz() (in module ivy.array.array_methods)": [[1365, "ivy.array.array_methods.trapz"], [1366, "ivy.array.array_methods.trapz"]], "trapz() (in module ivy.functional.ivy.experimental)": [[1365, "ivy.functional.ivy.experimental.trapz"], [1367, "ivy.functional.ivy.experimental.trapz"]], "static_tril_indices() (in module ivy.container.container_methods)": [[1368, "ivy.container.container_methods.static_tril_indices"], [1369, "ivy.container.container_methods.static_tril_indices"]], "tril_indices() (in module ivy.container.container_methods)": [[1368, "ivy.container.container_methods.tril_indices"], [1370, "ivy.container.container_methods.tril_indices"]], "tril_indices() (in module ivy.functional.ivy.experimental)": [[1368, "ivy.functional.ivy.experimental.tril_indices"], [1371, "ivy.functional.ivy.experimental.tril_indices"]], "static_triu_indices() (in module ivy.container.container_methods)": [[1372, "ivy.container.container_methods.static_triu_indices"], [1373, "ivy.container.container_methods.static_triu_indices"]], "triu_indices() (in module ivy.container.container_methods)": [[1372, "ivy.container.container_methods.triu_indices"], [1374, "ivy.container.container_methods.triu_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental)": [[1372, "ivy.functional.ivy.experimental.triu_indices"], [1375, "ivy.functional.ivy.experimental.triu_indices"]], "static_unravel_index() (in module ivy.container.container_methods)": [[1376, "ivy.container.container_methods.static_unravel_index"], [1377, "ivy.container.container_methods.static_unravel_index"]], "unravel_index() (in module ivy.array.array_methods)": [[1376, "ivy.array.array_methods.unravel_index"], [1378, "ivy.array.array_methods.unravel_index"]], "unravel_index() (in module ivy.container.container_methods)": [[1376, "ivy.container.container_methods.unravel_index"], [1379, "ivy.container.container_methods.unravel_index"]], "unravel_index() (in module ivy.functional.ivy.experimental)": [[1376, "ivy.functional.ivy.experimental.unravel_index"], [1380, "ivy.functional.ivy.experimental.unravel_index"]], "ivy.functional.ivy.experimental.utility": [[1381, "module-ivy.functional.ivy.experimental.utility"]], "static_vorbis_window() (in module ivy.container.container_methods)": [[1382, "ivy.container.container_methods.static_vorbis_window"], [1383, "ivy.container.container_methods.static_vorbis_window"]], "vorbis_window() (in module ivy.container.container_methods)": [[1382, "ivy.container.container_methods.vorbis_window"], [1384, "ivy.container.container_methods.vorbis_window"]], "vorbis_window() (in module ivy.functional.ivy.experimental)": [[1382, "ivy.functional.ivy.experimental.vorbis_window"], [1385, "ivy.functional.ivy.experimental.vorbis_window"]], "static_vsplit() (in module ivy.container.container_methods)": [[1386, "ivy.container.container_methods.static_vsplit"], [1387, "ivy.container.container_methods.static_vsplit"]], "vsplit() (in module ivy.array.array_methods)": [[1386, "ivy.array.array_methods.vsplit"], [1388, "ivy.array.array_methods.vsplit"]], "vsplit() (in module ivy.container.container_methods)": [[1386, "ivy.container.container_methods.vsplit"], [1389, "ivy.container.container_methods.vsplit"]], "vsplit() (in module ivy.functional.ivy.experimental)": [[1386, "ivy.functional.ivy.experimental.vsplit"], [1390, "ivy.functional.ivy.experimental.vsplit"]], "static_vstack() (in module ivy.container.container_methods)": [[1391, "ivy.container.container_methods.static_vstack"], [1392, "ivy.container.container_methods.static_vstack"]], "vstack() (in module ivy.array.array_methods)": [[1391, "ivy.array.array_methods.vstack"], [1393, "ivy.array.array_methods.vstack"]], "vstack() (in module ivy.container.container_methods)": [[1391, "ivy.container.container_methods.vstack"], [1394, "ivy.container.container_methods.vstack"]], "vstack() (in module ivy.functional.ivy.experimental)": [[1391, "ivy.functional.ivy.experimental.vstack"], [1395, "ivy.functional.ivy.experimental.vstack"]], "static_xlogy() (in module ivy.container.container_methods)": [[1396, "ivy.container.container_methods.static_xlogy"], [1397, "ivy.container.container_methods.static_xlogy"]], "xlogy() (in module ivy.array.array_methods)": [[1396, "ivy.array.array_methods.xlogy"], [1398, "ivy.array.array_methods.xlogy"]], "xlogy() (in module ivy.container.container_methods)": [[1396, "ivy.container.container_methods.xlogy"], [1399, "ivy.container.container_methods.xlogy"]], "xlogy() (in module ivy.functional.ivy.experimental)": [[1396, "ivy.functional.ivy.experimental.xlogy"], [1400, "ivy.functional.ivy.experimental.xlogy"]], "static_zeta() (in module ivy.container.container_methods)": [[1401, "ivy.container.container_methods.static_zeta"], [1402, "ivy.container.container_methods.static_zeta"]], "zeta() (in module ivy.array.array_methods)": [[1401, "ivy.array.array_methods.zeta"], [1403, "ivy.array.array_methods.zeta"]], "zeta() (in module ivy.container.container_methods)": [[1401, "ivy.container.container_methods.zeta"], [1404, "ivy.container.container_methods.zeta"]], "zeta() (in module ivy.functional.ivy.experimental)": [[1401, "ivy.functional.ivy.experimental.zeta"], [1405, "ivy.functional.ivy.experimental.zeta"]], "all_equal() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.all_equal"], [1408, "ivy.functional.ivy.general.all_equal"], [1411, "ivy.functional.ivy.general.all_equal"]], "arg_info() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.arg_info"], [1413, "ivy.functional.ivy.general.arg_info"]], "arg_names() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.arg_names"], [1414, "ivy.functional.ivy.general.arg_names"]], "array_equal() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.array_equal"], [1415, "ivy.functional.ivy.general.array_equal"], [1418, "ivy.functional.ivy.general.array_equal"]], "assert_supports_inplace() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.assert_supports_inplace"], [1420, "ivy.functional.ivy.general.assert_supports_inplace"], [1423, "ivy.functional.ivy.general.assert_supports_inplace"]], "cache_fn() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.cache_fn"], [1425, "ivy.functional.ivy.general.cache_fn"]], "clip_matrix_norm() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.clip_matrix_norm"], [1426, "ivy.functional.ivy.general.clip_matrix_norm"], [1429, "ivy.functional.ivy.general.clip_matrix_norm"]], "clip_vector_norm() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.clip_vector_norm"], [1431, "ivy.functional.ivy.general.clip_vector_norm"], [1434, "ivy.functional.ivy.general.clip_vector_norm"]], "container_types() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.container_types"], [1436, "ivy.functional.ivy.general.container_types"]], "current_backend_str() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.current_backend_str"], [1437, "ivy.functional.ivy.general.current_backend_str"]], "default() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.default"], [1438, "ivy.functional.ivy.general.default"], [1440, "ivy.functional.ivy.general.default"]], "einops_rearrange() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.einops_rearrange"], [1441, "ivy.functional.ivy.general.einops_rearrange"], [1444, "ivy.functional.ivy.general.einops_rearrange"]], "einops_reduce() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.einops_reduce"], [1446, "ivy.functional.ivy.general.einops_reduce"], [1449, "ivy.functional.ivy.general.einops_reduce"]], "einops_repeat() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.einops_repeat"], [1451, "ivy.functional.ivy.general.einops_repeat"], [1454, "ivy.functional.ivy.general.einops_repeat"]], "exists() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.exists"], [1456, "ivy.functional.ivy.general.exists"], [1458, "ivy.functional.ivy.general.exists"]], "fourier_encode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.fourier_encode"], [1459, "ivy.functional.ivy.general.fourier_encode"], [1462, "ivy.functional.ivy.general.fourier_encode"]], "function_supported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"], [1464, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"]], "function_unsupported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"], [1465, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"]], "gather() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.gather"], [1466, "ivy.functional.ivy.general.gather"], [1469, "ivy.functional.ivy.general.gather"]], "gather_nd() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.gather_nd"], [1471, "ivy.functional.ivy.general.gather_nd"], [1474, "ivy.functional.ivy.general.gather_nd"]], "get_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_all_arrays_in_memory"], [1476, "ivy.functional.ivy.general.get_all_arrays_in_memory"]], "get_array_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_array_mode"], [1477, "ivy.functional.ivy.general.get_array_mode"]], "get_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_exception_trace_mode"], [1478, "ivy.functional.ivy.general.get_exception_trace_mode"]], "get_item() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_item"], [1479, "ivy.functional.ivy.general.get_item"]], "get_min_base() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_min_base"], [1480, "ivy.functional.ivy.general.get_min_base"]], "get_min_denominator() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_min_denominator"], [1481, "ivy.functional.ivy.general.get_min_denominator"]], "get_nestable_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_nestable_mode"], [1482, "ivy.functional.ivy.general.get_nestable_mode"]], "get_num_dims() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_num_dims"], [1483, "ivy.functional.ivy.general.get_num_dims"], [1486, "ivy.functional.ivy.general.get_num_dims"]], "get_queue_timeout() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_queue_timeout"], [1488, "ivy.functional.ivy.general.get_queue_timeout"]], "get_referrers_recursive() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_referrers_recursive"], [1489, "ivy.functional.ivy.general.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"], [1490, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.get_tmp_dir"], [1491, "ivy.functional.ivy.general.get_tmp_dir"]], "has_nans() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.has_nans"], [1492, "ivy.functional.ivy.general.has_nans"], [1495, "ivy.functional.ivy.general.has_nans"]], "inplace_arrays_supported() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.inplace_arrays_supported"], [1497, "ivy.functional.ivy.general.inplace_arrays_supported"]], "inplace_decrement() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.inplace_decrement"], [1498, "ivy.functional.ivy.general.inplace_decrement"], [1501, "ivy.functional.ivy.general.inplace_decrement"]], "inplace_increment() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.inplace_increment"], [1503, "ivy.functional.ivy.general.inplace_increment"], [1506, "ivy.functional.ivy.general.inplace_increment"]], "inplace_update() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.inplace_update"], [1508, "ivy.functional.ivy.general.inplace_update"], [1511, "ivy.functional.ivy.general.inplace_update"]], "inplace_variables_supported() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.inplace_variables_supported"], [1513, "ivy.functional.ivy.general.inplace_variables_supported"]], "is_array() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.is_array"], [1514, "ivy.functional.ivy.general.is_array"], [1517, "ivy.functional.ivy.general.is_array"]], "is_ivy_array() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.is_ivy_array"], [1519, "ivy.functional.ivy.general.is_ivy_array"], [1522, "ivy.functional.ivy.general.is_ivy_array"]], "is_ivy_container() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.is_ivy_container"], [1524, "ivy.functional.ivy.general.is_ivy_container"], [1526, "ivy.functional.ivy.general.is_ivy_container"]], "is_native_array() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.is_native_array"], [1527, "ivy.functional.ivy.general.is_native_array"], [1530, "ivy.functional.ivy.general.is_native_array"]], "isscalar() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.isscalar"], [1532, "ivy.functional.ivy.general.isscalar"]], "ivy.functional.ivy.general": [[1407, "module-ivy.functional.ivy.general"]], "match_kwargs() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.match_kwargs"], [1533, "ivy.functional.ivy.general.match_kwargs"]], "multiprocessing() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.multiprocessing"], [1534, "ivy.functional.ivy.general.multiprocessing"]], "num_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.num_arrays_in_memory"], [1535, "ivy.functional.ivy.general.num_arrays_in_memory"]], "print_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.print_all_arrays_in_memory"], [1536, "ivy.functional.ivy.general.print_all_arrays_in_memory"]], "scatter_flat() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.scatter_flat"], [1537, "ivy.functional.ivy.general.scatter_flat"], [1540, "ivy.functional.ivy.general.scatter_flat"]], "scatter_nd() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.scatter_nd"], [1542, "ivy.functional.ivy.general.scatter_nd"], [1545, "ivy.functional.ivy.general.scatter_nd"]], "set_array_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_array_mode"], [1547, "ivy.functional.ivy.general.set_array_mode"]], "set_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_exception_trace_mode"], [1548, "ivy.functional.ivy.general.set_exception_trace_mode"]], "set_min_base() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_min_base"], [1549, "ivy.functional.ivy.general.set_min_base"]], "set_min_denominator() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_min_denominator"], [1550, "ivy.functional.ivy.general.set_min_denominator"]], "set_nestable_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_nestable_mode"], [1551, "ivy.functional.ivy.general.set_nestable_mode"]], "set_queue_timeout() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_queue_timeout"], [1552, "ivy.functional.ivy.general.set_queue_timeout"]], "set_shape_array_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_shape_array_mode"], [1553, "ivy.functional.ivy.general.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"], [1554, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"]], "set_tmp_dir() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.set_tmp_dir"], [1555, "ivy.functional.ivy.general.set_tmp_dir"]], "shape() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.shape"], [1556, "ivy.functional.ivy.general.shape"]], "shape_array_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.shape_array_mode"], [1557, "ivy.functional.ivy.general.shape_array_mode"]], "stable_divide() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.stable_divide"], [1558, "ivy.functional.ivy.general.stable_divide"], [1561, "ivy.functional.ivy.general.stable_divide"]], "stable_pow() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.stable_pow"], [1563, "ivy.functional.ivy.general.stable_pow"], [1566, "ivy.functional.ivy.general.stable_pow"]], "supports_inplace_updates() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.supports_inplace_updates"], [1568, "ivy.functional.ivy.general.supports_inplace_updates"], [1572, "ivy.functional.ivy.general.supports_inplace_updates"]], "to_ivy_shape() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.to_ivy_shape"], [1573, "ivy.functional.ivy.general.to_ivy_shape"]], "to_list() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.to_list"], [1574, "ivy.functional.ivy.general.to_list"], [1577, "ivy.functional.ivy.general.to_list"]], "to_native_shape() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.to_native_shape"], [1578, "ivy.functional.ivy.general.to_native_shape"]], "to_numpy() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.to_numpy"], [1579, "ivy.functional.ivy.general.to_numpy"], [1583, "ivy.functional.ivy.general.to_numpy"]], "to_scalar() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.to_scalar"], [1584, "ivy.functional.ivy.general.to_scalar"], [1588, "ivy.functional.ivy.general.to_scalar"]], "try_else_none() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.try_else_none"], [1589, "ivy.functional.ivy.general.try_else_none"]], "unset_array_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.unset_array_mode"], [1590, "ivy.functional.ivy.general.unset_array_mode"]], "unset_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.unset_exception_trace_mode"], [1591, "ivy.functional.ivy.general.unset_exception_trace_mode"]], "unset_nestable_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.unset_nestable_mode"], [1592, "ivy.functional.ivy.general.unset_nestable_mode"]], "unset_queue_timeout() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.unset_queue_timeout"], [1593, "ivy.functional.ivy.general.unset_queue_timeout"]], "unset_shape_array_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.unset_shape_array_mode"], [1594, "ivy.functional.ivy.general.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"], [1595, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"]], "value_is_nan() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.value_is_nan"], [1596, "ivy.functional.ivy.general.value_is_nan"], [1600, "ivy.functional.ivy.general.value_is_nan"]], "vmap() (in module ivy.functional.ivy.general)": [[1407, "ivy.functional.ivy.general.vmap"], [1601, "ivy.functional.ivy.general.vmap"]], "all_equal() (in module ivy.array.array_methods)": [[1408, "ivy.array.array_methods.all_equal"], [1409, "ivy.array.array_methods.all_equal"]], "all_equal() (in module ivy.container.container_methods)": [[1408, "ivy.container.container_methods.all_equal"], [1410, "ivy.container.container_methods.all_equal"]], "static_all_equal() (in module ivy.container.container_methods)": [[1408, "ivy.container.container_methods.static_all_equal"], [1412, "ivy.container.container_methods.static_all_equal"]], "array_equal() (in module ivy.array.array_methods)": [[1415, "ivy.array.array_methods.array_equal"], [1416, "ivy.array.array_methods.array_equal"]], "array_equal() (in module ivy.container.container_methods)": [[1415, "ivy.container.container_methods.array_equal"], [1417, "ivy.container.container_methods.array_equal"]], "static_array_equal() (in module ivy.container.container_methods)": [[1415, "ivy.container.container_methods.static_array_equal"], [1419, "ivy.container.container_methods.static_array_equal"]], "assert_supports_inplace() (in module ivy.array.array_methods)": [[1420, "ivy.array.array_methods.assert_supports_inplace"], [1421, "ivy.array.array_methods.assert_supports_inplace"]], "assert_supports_inplace() (in module ivy.container.container_methods)": [[1420, "ivy.container.container_methods.assert_supports_inplace"], [1422, "ivy.container.container_methods.assert_supports_inplace"]], "static_assert_supports_inplace() (in module ivy.container.container_methods)": [[1420, "ivy.container.container_methods.static_assert_supports_inplace"], [1424, "ivy.container.container_methods.static_assert_supports_inplace"]], "clip_matrix_norm() (in module ivy.array.array_methods)": [[1426, "ivy.array.array_methods.clip_matrix_norm"], [1427, "ivy.array.array_methods.clip_matrix_norm"]], "clip_matrix_norm() (in module ivy.container.container_methods)": [[1426, "ivy.container.container_methods.clip_matrix_norm"], [1428, "ivy.container.container_methods.clip_matrix_norm"]], "static_clip_matrix_norm() (in module ivy.container.container_methods)": [[1426, "ivy.container.container_methods.static_clip_matrix_norm"], [1430, "ivy.container.container_methods.static_clip_matrix_norm"]], "clip_vector_norm() (in module ivy.array.array_methods)": [[1431, "ivy.array.array_methods.clip_vector_norm"], [1432, "ivy.array.array_methods.clip_vector_norm"]], "clip_vector_norm() (in module ivy.container.container_methods)": [[1431, "ivy.container.container_methods.clip_vector_norm"], [1433, "ivy.container.container_methods.clip_vector_norm"]], "static_clip_vector_norm() (in module ivy.container.container_methods)": [[1431, "ivy.container.container_methods.static_clip_vector_norm"], [1435, "ivy.container.container_methods.static_clip_vector_norm"]], "default() (in module ivy.array.array_methods)": [[1438, "ivy.array.array_methods.default"], [1439, "ivy.array.array_methods.default"]], "einops_rearrange() (in module ivy.array.array_methods)": [[1441, "ivy.array.array_methods.einops_rearrange"], [1442, "ivy.array.array_methods.einops_rearrange"]], "einops_rearrange() (in module ivy.container.container_methods)": [[1441, "ivy.container.container_methods.einops_rearrange"], [1443, "ivy.container.container_methods.einops_rearrange"]], "static_einops_rearrange() (in module ivy.container.container_methods)": [[1441, "ivy.container.container_methods.static_einops_rearrange"], [1445, "ivy.container.container_methods.static_einops_rearrange"]], "einops_reduce() (in module ivy.array.array_methods)": [[1446, "ivy.array.array_methods.einops_reduce"], [1447, "ivy.array.array_methods.einops_reduce"]], "einops_reduce() (in module ivy.container.container_methods)": [[1446, "ivy.container.container_methods.einops_reduce"], [1448, "ivy.container.container_methods.einops_reduce"]], "static_einops_reduce() (in module ivy.container.container_methods)": [[1446, "ivy.container.container_methods.static_einops_reduce"], [1450, "ivy.container.container_methods.static_einops_reduce"]], "einops_repeat() (in module ivy.array.array_methods)": [[1451, "ivy.array.array_methods.einops_repeat"], [1452, "ivy.array.array_methods.einops_repeat"]], "einops_repeat() (in module ivy.container.container_methods)": [[1451, "ivy.container.container_methods.einops_repeat"], [1453, "ivy.container.container_methods.einops_repeat"]], "static_einops_repeat() (in module ivy.container.container_methods)": [[1451, "ivy.container.container_methods.static_einops_repeat"], [1455, "ivy.container.container_methods.static_einops_repeat"]], "exists() (in module ivy.array.array_methods)": [[1456, "ivy.array.array_methods.exists"], [1457, "ivy.array.array_methods.exists"]], "fourier_encode() (in module ivy.array.array_methods)": [[1459, "ivy.array.array_methods.fourier_encode"], [1460, "ivy.array.array_methods.fourier_encode"]], "fourier_encode() (in module ivy.container.container_methods)": [[1459, "ivy.container.container_methods.fourier_encode"], [1461, "ivy.container.container_methods.fourier_encode"]], "static_fourier_encode() (in module ivy.container.container_methods)": [[1459, "ivy.container.container_methods.static_fourier_encode"], [1463, "ivy.container.container_methods.static_fourier_encode"]], "gather() (in module ivy.array.array_methods)": [[1466, "ivy.array.array_methods.gather"], [1467, "ivy.array.array_methods.gather"]], "gather() (in module ivy.container.container_methods)": [[1466, "ivy.container.container_methods.gather"], [1468, "ivy.container.container_methods.gather"]], "static_gather() (in module ivy.container.container_methods)": [[1466, "ivy.container.container_methods.static_gather"], [1470, "ivy.container.container_methods.static_gather"]], "gather_nd() (in module ivy.array.array_methods)": [[1471, "ivy.array.array_methods.gather_nd"], [1472, "ivy.array.array_methods.gather_nd"]], "gather_nd() (in module ivy.container.container_methods)": [[1471, "ivy.container.container_methods.gather_nd"], [1473, "ivy.container.container_methods.gather_nd"]], "static_gather_nd() (in module ivy.container.container_methods)": [[1471, "ivy.container.container_methods.static_gather_nd"], [1475, "ivy.container.container_methods.static_gather_nd"]], "get_num_dims() (in module ivy.array.array_methods)": [[1483, "ivy.array.array_methods.get_num_dims"], [1484, "ivy.array.array_methods.get_num_dims"]], "get_num_dims() (in module ivy.container.container_methods)": [[1483, "ivy.container.container_methods.get_num_dims"], [1485, "ivy.container.container_methods.get_num_dims"]], "static_get_num_dims() (in module ivy.container.container_methods)": [[1483, "ivy.container.container_methods.static_get_num_dims"], [1487, "ivy.container.container_methods.static_get_num_dims"]], "has_nans() (in module ivy.array.array_methods)": [[1492, "ivy.array.array_methods.has_nans"], [1493, "ivy.array.array_methods.has_nans"]], "has_nans() (in module ivy.container.container_methods)": [[1492, "ivy.container.container_methods.has_nans"], [1494, "ivy.container.container_methods.has_nans"]], "static_has_nans() (in module ivy.container.container_methods)": [[1492, "ivy.container.container_methods.static_has_nans"], [1496, "ivy.container.container_methods.static_has_nans"]], "inplace_decrement() (in module ivy.array.array_methods)": [[1498, "ivy.array.array_methods.inplace_decrement"], [1499, "ivy.array.array_methods.inplace_decrement"]], "inplace_decrement() (in module ivy.container.container_methods)": [[1498, "ivy.container.container_methods.inplace_decrement"], [1500, "ivy.container.container_methods.inplace_decrement"]], "static_inplace_decrement() (in module ivy.container.container_methods)": [[1498, "ivy.container.container_methods.static_inplace_decrement"], [1502, "ivy.container.container_methods.static_inplace_decrement"]], "inplace_increment() (in module ivy.array.array_methods)": [[1503, "ivy.array.array_methods.inplace_increment"], [1504, "ivy.array.array_methods.inplace_increment"]], "inplace_increment() (in module ivy.container.container_methods)": [[1503, "ivy.container.container_methods.inplace_increment"], [1505, "ivy.container.container_methods.inplace_increment"]], "static_inplace_increment() (in module ivy.container.container_methods)": [[1503, "ivy.container.container_methods.static_inplace_increment"], [1507, "ivy.container.container_methods.static_inplace_increment"]], "inplace_update() (in module ivy.array.array_methods)": [[1508, "ivy.array.array_methods.inplace_update"], [1509, "ivy.array.array_methods.inplace_update"]], "inplace_update() (in module ivy.container.container_methods)": [[1508, "ivy.container.container_methods.inplace_update"], [1510, "ivy.container.container_methods.inplace_update"]], "static_inplace_update() (in module ivy.container.container_methods)": [[1508, "ivy.container.container_methods.static_inplace_update"], [1512, "ivy.container.container_methods.static_inplace_update"]], "is_array() (in module ivy.array.array_methods)": [[1514, "ivy.array.array_methods.is_array"], [1515, "ivy.array.array_methods.is_array"]], "is_array() (in module ivy.container.container_methods)": [[1514, "ivy.container.container_methods.is_array"], [1516, "ivy.container.container_methods.is_array"]], "static_is_array() (in module ivy.container.container_methods)": [[1514, "ivy.container.container_methods.static_is_array"], [1518, "ivy.container.container_methods.static_is_array"]], "is_ivy_array() (in module ivy.array.array_methods)": [[1519, "ivy.array.array_methods.is_ivy_array"], [1520, "ivy.array.array_methods.is_ivy_array"]], "is_ivy_array() (in module ivy.container.container_methods)": [[1519, "ivy.container.container_methods.is_ivy_array"], [1521, "ivy.container.container_methods.is_ivy_array"]], "static_is_ivy_array() (in module ivy.container.container_methods)": [[1519, "ivy.container.container_methods.static_is_ivy_array"], [1523, "ivy.container.container_methods.static_is_ivy_array"]], "is_ivy_container() (in module ivy.array.array_methods)": [[1524, "ivy.array.array_methods.is_ivy_container"], [1525, "ivy.array.array_methods.is_ivy_container"]], "is_native_array() (in module ivy.array.array_methods)": [[1527, "ivy.array.array_methods.is_native_array"], [1528, "ivy.array.array_methods.is_native_array"]], "is_native_array() (in module ivy.container.container_methods)": [[1527, "ivy.container.container_methods.is_native_array"], [1529, "ivy.container.container_methods.is_native_array"]], "static_is_native_array() (in module ivy.container.container_methods)": [[1527, "ivy.container.container_methods.static_is_native_array"], [1531, "ivy.container.container_methods.static_is_native_array"]], "scatter_flat() (in module ivy.array.array_methods)": [[1537, "ivy.array.array_methods.scatter_flat"], [1538, "ivy.array.array_methods.scatter_flat"]], "scatter_flat() (in module ivy.container.container_methods)": [[1537, "ivy.container.container_methods.scatter_flat"], [1539, "ivy.container.container_methods.scatter_flat"]], "static_scatter_flat() (in module ivy.container.container_methods)": [[1537, "ivy.container.container_methods.static_scatter_flat"], [1541, "ivy.container.container_methods.static_scatter_flat"]], "scatter_nd() (in module ivy.array.array_methods)": [[1542, "ivy.array.array_methods.scatter_nd"], [1543, "ivy.array.array_methods.scatter_nd"]], "scatter_nd() (in module ivy.container.container_methods)": [[1542, "ivy.container.container_methods.scatter_nd"], [1544, "ivy.container.container_methods.scatter_nd"]], "static_scatter_nd() (in module ivy.container.container_methods)": [[1542, "ivy.container.container_methods.static_scatter_nd"], [1546, "ivy.container.container_methods.static_scatter_nd"]], "stable_divide() (in module ivy.array.array_methods)": [[1558, "ivy.array.array_methods.stable_divide"], [1559, "ivy.array.array_methods.stable_divide"]], "stable_divide() (in module ivy.container.container_methods)": [[1558, "ivy.container.container_methods.stable_divide"], [1560, "ivy.container.container_methods.stable_divide"]], "static_stable_divide() (in module ivy.container.container_methods)": [[1558, "ivy.container.container_methods.static_stable_divide"], [1562, "ivy.container.container_methods.static_stable_divide"]], "stable_pow() (in module ivy.array.array_methods)": [[1563, "ivy.array.array_methods.stable_pow"], [1564, "ivy.array.array_methods.stable_pow"]], "stable_pow() (in module ivy.container.container_methods)": [[1563, "ivy.container.container_methods.stable_pow"], [1565, "ivy.container.container_methods.stable_pow"]], "static_stable_pow() (in module ivy.container.container_methods)": [[1563, "ivy.container.container_methods.static_stable_pow"], [1567, "ivy.container.container_methods.static_stable_pow"]], "static_supports_inplace_updates() (in module ivy.container.container_methods)": [[1568, "ivy.container.container_methods.static_supports_inplace_updates"], [1569, "ivy.container.container_methods.static_supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.array.array_methods)": [[1568, "ivy.array.array_methods.supports_inplace_updates"], [1570, "ivy.array.array_methods.supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.container.container_methods)": [[1568, "ivy.container.container_methods.supports_inplace_updates"], [1571, "ivy.container.container_methods.supports_inplace_updates"]], "static_to_list() (in module ivy.container.container_methods)": [[1574, "ivy.container.container_methods.static_to_list"], [1575, "ivy.container.container_methods.static_to_list"]], "to_list() (in module ivy.array.array_methods)": [[1574, "ivy.array.array_methods.to_list"], [1576, "ivy.array.array_methods.to_list"]], "static_to_numpy() (in module ivy.container.container_methods)": [[1579, "ivy.container.container_methods.static_to_numpy"], [1580, "ivy.container.container_methods.static_to_numpy"]], "to_numpy() (in module ivy.array.array_methods)": [[1579, "ivy.array.array_methods.to_numpy"], [1581, "ivy.array.array_methods.to_numpy"]], "to_numpy() (in module ivy.container.container_methods)": [[1579, "ivy.container.container_methods.to_numpy"], [1582, "ivy.container.container_methods.to_numpy"]], "static_to_scalar() (in module ivy.container.container_methods)": [[1584, "ivy.container.container_methods.static_to_scalar"], [1585, "ivy.container.container_methods.static_to_scalar"]], "to_scalar() (in module ivy.array.array_methods)": [[1584, "ivy.array.array_methods.to_scalar"], [1586, "ivy.array.array_methods.to_scalar"]], "to_scalar() (in module ivy.container.container_methods)": [[1584, "ivy.container.container_methods.to_scalar"], [1587, "ivy.container.container_methods.to_scalar"]], "static_value_is_nan() (in module ivy.container.container_methods)": [[1596, "ivy.container.container_methods.static_value_is_nan"], [1597, "ivy.container.container_methods.static_value_is_nan"]], "value_is_nan() (in module ivy.array.array_methods)": [[1596, "ivy.array.array_methods.value_is_nan"], [1598, "ivy.array.array_methods.value_is_nan"]], "value_is_nan() (in module ivy.container.container_methods)": [[1596, "ivy.container.container_methods.value_is_nan"], [1599, "ivy.container.container_methods.value_is_nan"]], "gradienttracking (class in ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.GradientTracking"], [1603, "ivy.functional.ivy.gradients.GradientTracking"]], "__init__() (ivy.functional.ivy.gradients.gradienttracking method)": [[1602, "ivy.functional.ivy.gradients.GradientTracking.__init__"], [1603, "ivy.functional.ivy.gradients.GradientTracking.__init__"]], "adam_step() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.adam_step"], [1604, "ivy.functional.ivy.gradients.adam_step"], [1607, "ivy.functional.ivy.gradients.adam_step"]], "adam_update() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.adam_update"], [1608, "ivy.functional.ivy.gradients.adam_update"], [1611, "ivy.functional.ivy.gradients.adam_update"]], "execute_with_gradients() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.execute_with_gradients"], [1612, "ivy.functional.ivy.gradients.execute_with_gradients"]], "grad() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.grad"], [1613, "ivy.functional.ivy.gradients.grad"]], "gradient_descent_update() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.gradient_descent_update"], [1614, "ivy.functional.ivy.gradients.gradient_descent_update"], [1617, "ivy.functional.ivy.gradients.gradient_descent_update"]], "ivy.functional.ivy.gradients": [[1602, "module-ivy.functional.ivy.gradients"]], "jac() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.jac"], [1618, "ivy.functional.ivy.gradients.jac"]], "lamb_update() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.lamb_update"], [1619, "ivy.functional.ivy.gradients.lamb_update"], [1622, "ivy.functional.ivy.gradients.lamb_update"]], "lars_update() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.lars_update"], [1623, "ivy.functional.ivy.gradients.lars_update"], [1626, "ivy.functional.ivy.gradients.lars_update"]], "optimizer_update() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.optimizer_update"], [1627, "ivy.functional.ivy.gradients.optimizer_update"], [1630, "ivy.functional.ivy.gradients.optimizer_update"]], "set_with_grads() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.set_with_grads"], [1631, "ivy.functional.ivy.gradients.set_with_grads"]], "stop_gradient() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.stop_gradient"], [1632, "ivy.functional.ivy.gradients.stop_gradient"], [1636, "ivy.functional.ivy.gradients.stop_gradient"]], "unset_with_grads() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.unset_with_grads"], [1637, "ivy.functional.ivy.gradients.unset_with_grads"]], "value_and_grad() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.value_and_grad"], [1638, "ivy.functional.ivy.gradients.value_and_grad"]], "with_grads() (in module ivy.functional.ivy.gradients)": [[1602, "ivy.functional.ivy.gradients.with_grads"], [1639, "ivy.functional.ivy.gradients.with_grads"]], "adam_step() (in module ivy.array.array_methods)": [[1604, "ivy.array.array_methods.adam_step"], [1605, "ivy.array.array_methods.adam_step"]], "adam_step() (in module ivy.container.container_methods)": [[1604, "ivy.container.container_methods.adam_step"], [1606, "ivy.container.container_methods.adam_step"]], "adam_update() (in module ivy.array.array_methods)": [[1608, "ivy.array.array_methods.adam_update"], [1609, "ivy.array.array_methods.adam_update"]], "adam_update() (in module ivy.container.container_methods)": [[1608, "ivy.container.container_methods.adam_update"], [1610, "ivy.container.container_methods.adam_update"]], "gradient_descent_update() (in module ivy.array.array_methods)": [[1614, "ivy.array.array_methods.gradient_descent_update"], [1615, "ivy.array.array_methods.gradient_descent_update"]], "gradient_descent_update() (in module ivy.container.container_methods)": [[1614, "ivy.container.container_methods.gradient_descent_update"], [1616, "ivy.container.container_methods.gradient_descent_update"]], "lamb_update() (in module ivy.array.array_methods)": [[1619, "ivy.array.array_methods.lamb_update"], [1620, "ivy.array.array_methods.lamb_update"]], "lamb_update() (in module ivy.container.container_methods)": [[1619, "ivy.container.container_methods.lamb_update"], [1621, "ivy.container.container_methods.lamb_update"]], "lars_update() (in module ivy.array.array_methods)": [[1623, "ivy.array.array_methods.lars_update"], [1624, "ivy.array.array_methods.lars_update"]], "lars_update() (in module ivy.container.container_methods)": [[1623, "ivy.container.container_methods.lars_update"], [1625, "ivy.container.container_methods.lars_update"]], "optimizer_update() (in module ivy.array.array_methods)": [[1627, "ivy.array.array_methods.optimizer_update"], [1628, "ivy.array.array_methods.optimizer_update"]], "optimizer_update() (in module ivy.container.container_methods)": [[1627, "ivy.container.container_methods.optimizer_update"], [1629, "ivy.container.container_methods.optimizer_update"]], "static_stop_gradient() (in module ivy.container.container_methods)": [[1632, "ivy.container.container_methods.static_stop_gradient"], [1633, "ivy.container.container_methods.static_stop_gradient"]], "stop_gradient() (in module ivy.array.array_methods)": [[1632, "ivy.array.array_methods.stop_gradient"], [1634, "ivy.array.array_methods.stop_gradient"]], "stop_gradient() (in module ivy.container.container_methods)": [[1632, "ivy.container.container_methods.stop_gradient"], [1635, "ivy.container.container_methods.stop_gradient"]], "conv() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv"], [1641, "ivy.functional.ivy.layers.conv"]], "conv1d() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv1d"], [1642, "ivy.functional.ivy.layers.conv1d"], [1645, "ivy.functional.ivy.layers.conv1d"]], "conv1d_transpose() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv1d_transpose"], [1647, "ivy.functional.ivy.layers.conv1d_transpose"], [1650, "ivy.functional.ivy.layers.conv1d_transpose"]], "conv2d() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv2d"], [1652, "ivy.functional.ivy.layers.conv2d"], [1655, "ivy.functional.ivy.layers.conv2d"]], "conv2d_transpose() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv2d_transpose"], [1657, "ivy.functional.ivy.layers.conv2d_transpose"], [1660, "ivy.functional.ivy.layers.conv2d_transpose"]], "conv3d() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv3d"], [1662, "ivy.functional.ivy.layers.conv3d"], [1665, "ivy.functional.ivy.layers.conv3d"]], "conv3d_transpose() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv3d_transpose"], [1667, "ivy.functional.ivy.layers.conv3d_transpose"], [1670, "ivy.functional.ivy.layers.conv3d_transpose"]], "conv_general_dilated() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv_general_dilated"], [1672, "ivy.functional.ivy.layers.conv_general_dilated"]], "conv_general_transpose() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.conv_general_transpose"], [1673, "ivy.functional.ivy.layers.conv_general_transpose"]], "depthwise_conv2d() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.depthwise_conv2d"], [1674, "ivy.functional.ivy.layers.depthwise_conv2d"], [1677, "ivy.functional.ivy.layers.depthwise_conv2d"]], "dropout() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.dropout"], [1679, "ivy.functional.ivy.layers.dropout"], [1682, "ivy.functional.ivy.layers.dropout"]], "ivy.functional.ivy.layers": [[1640, "module-ivy.functional.ivy.layers"]], "linear() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.linear"], [1684, "ivy.functional.ivy.layers.linear"], [1687, "ivy.functional.ivy.layers.linear"]], "lstm_update() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.lstm_update"], [1689, "ivy.functional.ivy.layers.lstm_update"], [1692, "ivy.functional.ivy.layers.lstm_update"]], "multi_head_attention() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.multi_head_attention"], [1694, "ivy.functional.ivy.layers.multi_head_attention"], [1697, "ivy.functional.ivy.layers.multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.functional.ivy.layers)": [[1640, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1699, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1702, "ivy.functional.ivy.layers.scaled_dot_product_attention"]], "conv1d() (in module ivy.array.array_methods)": [[1642, "ivy.array.array_methods.conv1d"], [1643, "ivy.array.array_methods.conv1d"]], "conv1d() (in module ivy.container.container_methods)": [[1642, "ivy.container.container_methods.conv1d"], [1644, "ivy.container.container_methods.conv1d"]], "static_conv1d() (in module ivy.container.container_methods)": [[1642, "ivy.container.container_methods.static_conv1d"], [1646, "ivy.container.container_methods.static_conv1d"]], "conv1d_transpose() (in module ivy.array.array_methods)": [[1647, "ivy.array.array_methods.conv1d_transpose"], [1648, "ivy.array.array_methods.conv1d_transpose"]], "conv1d_transpose() (in module ivy.container.container_methods)": [[1647, "ivy.container.container_methods.conv1d_transpose"], [1649, "ivy.container.container_methods.conv1d_transpose"]], "static_conv1d_transpose() (in module ivy.container.container_methods)": [[1647, "ivy.container.container_methods.static_conv1d_transpose"], [1651, "ivy.container.container_methods.static_conv1d_transpose"]], "conv2d() (in module ivy.array.array_methods)": [[1652, "ivy.array.array_methods.conv2d"], [1653, "ivy.array.array_methods.conv2d"]], "conv2d() (in module ivy.container.container_methods)": [[1652, "ivy.container.container_methods.conv2d"], [1654, "ivy.container.container_methods.conv2d"]], "static_conv2d() (in module ivy.container.container_methods)": [[1652, "ivy.container.container_methods.static_conv2d"], [1656, "ivy.container.container_methods.static_conv2d"]], "conv2d_transpose() (in module ivy.array.array_methods)": [[1657, "ivy.array.array_methods.conv2d_transpose"], [1658, "ivy.array.array_methods.conv2d_transpose"]], "conv2d_transpose() (in module ivy.container.container_methods)": [[1657, "ivy.container.container_methods.conv2d_transpose"], [1659, "ivy.container.container_methods.conv2d_transpose"]], "static_conv2d_transpose() (in module ivy.container.container_methods)": [[1657, "ivy.container.container_methods.static_conv2d_transpose"], [1661, "ivy.container.container_methods.static_conv2d_transpose"]], "conv3d() (in module ivy.array.array_methods)": [[1662, "ivy.array.array_methods.conv3d"], [1663, "ivy.array.array_methods.conv3d"]], "conv3d() (in module ivy.container.container_methods)": [[1662, "ivy.container.container_methods.conv3d"], [1664, "ivy.container.container_methods.conv3d"]], "static_conv3d() (in module ivy.container.container_methods)": [[1662, "ivy.container.container_methods.static_conv3d"], [1666, "ivy.container.container_methods.static_conv3d"]], "conv3d_transpose() (in module ivy.array.array_methods)": [[1667, "ivy.array.array_methods.conv3d_transpose"], [1668, "ivy.array.array_methods.conv3d_transpose"]], "conv3d_transpose() (in module ivy.container.container_methods)": [[1667, "ivy.container.container_methods.conv3d_transpose"], [1669, "ivy.container.container_methods.conv3d_transpose"]], "static_conv3d_transpose() (in module ivy.container.container_methods)": [[1667, "ivy.container.container_methods.static_conv3d_transpose"], [1671, "ivy.container.container_methods.static_conv3d_transpose"]], "depthwise_conv2d() (in module ivy.array.array_methods)": [[1674, "ivy.array.array_methods.depthwise_conv2d"], [1675, "ivy.array.array_methods.depthwise_conv2d"]], "depthwise_conv2d() (in module ivy.container.container_methods)": [[1674, "ivy.container.container_methods.depthwise_conv2d"], [1676, "ivy.container.container_methods.depthwise_conv2d"]], "static_depthwise_conv2d() (in module ivy.container.container_methods)": [[1674, "ivy.container.container_methods.static_depthwise_conv2d"], [1678, "ivy.container.container_methods.static_depthwise_conv2d"]], "dropout() (in module ivy.array.array_methods)": [[1679, "ivy.array.array_methods.dropout"], [1680, "ivy.array.array_methods.dropout"]], "dropout() (in module ivy.container.container_methods)": [[1679, "ivy.container.container_methods.dropout"], [1681, "ivy.container.container_methods.dropout"]], "static_dropout() (in module ivy.container.container_methods)": [[1679, "ivy.container.container_methods.static_dropout"], [1683, "ivy.container.container_methods.static_dropout"]], "linear() (in module ivy.array.array_methods)": [[1684, "ivy.array.array_methods.linear"], [1685, "ivy.array.array_methods.linear"]], "linear() (in module ivy.container.container_methods)": [[1684, "ivy.container.container_methods.linear"], [1686, "ivy.container.container_methods.linear"]], "static_linear() (in module ivy.container.container_methods)": [[1684, "ivy.container.container_methods.static_linear"], [1688, "ivy.container.container_methods.static_linear"]], "lstm_update() (in module ivy.array.array_methods)": [[1689, "ivy.array.array_methods.lstm_update"], [1690, "ivy.array.array_methods.lstm_update"]], "lstm_update() (in module ivy.container.container_methods)": [[1689, "ivy.container.container_methods.lstm_update"], [1691, "ivy.container.container_methods.lstm_update"]], "static_lstm_update() (in module ivy.container.container_methods)": [[1689, "ivy.container.container_methods.static_lstm_update"], [1693, "ivy.container.container_methods.static_lstm_update"]], "multi_head_attention() (in module ivy.array.array_methods)": [[1694, "ivy.array.array_methods.multi_head_attention"], [1695, "ivy.array.array_methods.multi_head_attention"]], "multi_head_attention() (in module ivy.container.container_methods)": [[1694, "ivy.container.container_methods.multi_head_attention"], [1696, "ivy.container.container_methods.multi_head_attention"]], "static_multi_head_attention() (in module ivy.container.container_methods)": [[1694, "ivy.container.container_methods.static_multi_head_attention"], [1698, "ivy.container.container_methods.static_multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.array.array_methods)": [[1699, "ivy.array.array_methods.scaled_dot_product_attention"], [1700, "ivy.array.array_methods.scaled_dot_product_attention"]], "scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1699, "ivy.container.container_methods.scaled_dot_product_attention"], [1701, "ivy.container.container_methods.scaled_dot_product_attention"]], "static_scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1699, "ivy.container.container_methods.static_scaled_dot_product_attention"], [1703, "ivy.container.container_methods.static_scaled_dot_product_attention"]], "cholesky() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.cholesky"], [1705, "ivy.functional.ivy.linear_algebra.cholesky"], [1708, "ivy.functional.ivy.linear_algebra.cholesky"]], "cross() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.cross"], [1710, "ivy.functional.ivy.linear_algebra.cross"], [1713, "ivy.functional.ivy.linear_algebra.cross"]], "det() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.det"], [1715, "ivy.functional.ivy.linear_algebra.det"], [1718, "ivy.functional.ivy.linear_algebra.det"]], "diag() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.diag"], [1720, "ivy.functional.ivy.linear_algebra.diag"], [1723, "ivy.functional.ivy.linear_algebra.diag"]], "diagonal() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.diagonal"], [1725, "ivy.functional.ivy.linear_algebra.diagonal"], [1728, "ivy.functional.ivy.linear_algebra.diagonal"]], "eig() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.eig"], [1730, "ivy.functional.ivy.linear_algebra.eig"]], "eigh() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.eigh"], [1731, "ivy.functional.ivy.linear_algebra.eigh"], [1734, "ivy.functional.ivy.linear_algebra.eigh"]], "eigvalsh() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1736, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1739, "ivy.functional.ivy.linear_algebra.eigvalsh"]], "inner() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.inner"], [1741, "ivy.functional.ivy.linear_algebra.inner"], [1744, "ivy.functional.ivy.linear_algebra.inner"]], "inv() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.inv"], [1746, "ivy.functional.ivy.linear_algebra.inv"], [1749, "ivy.functional.ivy.linear_algebra.inv"]], "ivy.functional.ivy.linear_algebra": [[1704, "module-ivy.functional.ivy.linear_algebra"]], "matmul() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.matmul"], [1751, "ivy.functional.ivy.linear_algebra.matmul"], [1754, "ivy.functional.ivy.linear_algebra.matmul"]], "matrix_norm() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1756, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1759, "ivy.functional.ivy.linear_algebra.matrix_norm"]], "matrix_power() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.matrix_power"], [1761, "ivy.functional.ivy.linear_algebra.matrix_power"], [1764, "ivy.functional.ivy.linear_algebra.matrix_power"]], "matrix_rank() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1766, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1769, "ivy.functional.ivy.linear_algebra.matrix_rank"]], "matrix_transpose() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1771, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1774, "ivy.functional.ivy.linear_algebra.matrix_transpose"]], "outer() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.outer"], [1776, "ivy.functional.ivy.linear_algebra.outer"], [1779, "ivy.functional.ivy.linear_algebra.outer"]], "pinv() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.pinv"], [1781, "ivy.functional.ivy.linear_algebra.pinv"], [1784, "ivy.functional.ivy.linear_algebra.pinv"]], "qr() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.qr"], [1786, "ivy.functional.ivy.linear_algebra.qr"], [1789, "ivy.functional.ivy.linear_algebra.qr"]], "slogdet() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.slogdet"], [1791, "ivy.functional.ivy.linear_algebra.slogdet"], [1794, "ivy.functional.ivy.linear_algebra.slogdet"]], "solve() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.solve"], [1796, "ivy.functional.ivy.linear_algebra.solve"], [1799, "ivy.functional.ivy.linear_algebra.solve"]], "svd() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.svd"], [1801, "ivy.functional.ivy.linear_algebra.svd"], [1805, "ivy.functional.ivy.linear_algebra.svd"]], "svdvals() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.svdvals"], [1806, "ivy.functional.ivy.linear_algebra.svdvals"], [1810, "ivy.functional.ivy.linear_algebra.svdvals"]], "tensordot() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.tensordot"], [1811, "ivy.functional.ivy.linear_algebra.tensordot"], [1814, "ivy.functional.ivy.linear_algebra.tensordot"]], "tensorsolve() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1815, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1818, "ivy.functional.ivy.linear_algebra.tensorsolve"]], "trace() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.trace"], [1819, "ivy.functional.ivy.linear_algebra.trace"], [1823, "ivy.functional.ivy.linear_algebra.trace"]], "vander() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.vander"], [1824, "ivy.functional.ivy.linear_algebra.vander"], [1828, "ivy.functional.ivy.linear_algebra.vander"]], "vecdot() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.vecdot"], [1829, "ivy.functional.ivy.linear_algebra.vecdot"], [1833, "ivy.functional.ivy.linear_algebra.vecdot"]], "vector_norm() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.vector_norm"], [1834, "ivy.functional.ivy.linear_algebra.vector_norm"], [1838, "ivy.functional.ivy.linear_algebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (in module ivy.functional.ivy.linear_algebra)": [[1704, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1839, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1843, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"]], "cholesky() (in module ivy.array.array_methods)": [[1705, "ivy.array.array_methods.cholesky"], [1706, "ivy.array.array_methods.cholesky"]], "cholesky() (in module ivy.container.container_methods)": [[1705, "ivy.container.container_methods.cholesky"], [1707, "ivy.container.container_methods.cholesky"]], "static_cholesky() (in module ivy.container.container_methods)": [[1705, "ivy.container.container_methods.static_cholesky"], [1709, "ivy.container.container_methods.static_cholesky"]], "cross() (in module ivy.array.array_methods)": [[1710, "ivy.array.array_methods.cross"], [1711, "ivy.array.array_methods.cross"]], "cross() (in module ivy.container.container_methods)": [[1710, "ivy.container.container_methods.cross"], [1712, "ivy.container.container_methods.cross"]], "static_cross() (in module ivy.container.container_methods)": [[1710, "ivy.container.container_methods.static_cross"], [1714, "ivy.container.container_methods.static_cross"]], "det() (in module ivy.array.array_methods)": [[1715, "ivy.array.array_methods.det"], [1716, "ivy.array.array_methods.det"]], "det() (in module ivy.container.container_methods)": [[1715, "ivy.container.container_methods.det"], [1717, "ivy.container.container_methods.det"]], "static_det() (in module ivy.container.container_methods)": [[1715, "ivy.container.container_methods.static_det"], [1719, "ivy.container.container_methods.static_det"]], "diag() (in module ivy.array.array_methods)": [[1720, "ivy.array.array_methods.diag"], [1721, "ivy.array.array_methods.diag"]], "diag() (in module ivy.container.container_methods)": [[1720, "ivy.container.container_methods.diag"], [1722, "ivy.container.container_methods.diag"]], "static_diag() (in module ivy.container.container_methods)": [[1720, "ivy.container.container_methods.static_diag"], [1724, "ivy.container.container_methods.static_diag"]], "diagonal() (in module ivy.array.array_methods)": [[1725, "ivy.array.array_methods.diagonal"], [1726, "ivy.array.array_methods.diagonal"]], "diagonal() (in module ivy.container.container_methods)": [[1725, "ivy.container.container_methods.diagonal"], [1727, "ivy.container.container_methods.diagonal"]], "static_diagonal() (in module ivy.container.container_methods)": [[1725, "ivy.container.container_methods.static_diagonal"], [1729, "ivy.container.container_methods.static_diagonal"]], "eigh() (in module ivy.array.array_methods)": [[1731, "ivy.array.array_methods.eigh"], [1732, "ivy.array.array_methods.eigh"]], "eigh() (in module ivy.container.container_methods)": [[1731, "ivy.container.container_methods.eigh"], [1733, "ivy.container.container_methods.eigh"]], "static_eigh() (in module ivy.container.container_methods)": [[1731, "ivy.container.container_methods.static_eigh"], [1735, "ivy.container.container_methods.static_eigh"]], "eigvalsh() (in module ivy.array.array_methods)": [[1736, "ivy.array.array_methods.eigvalsh"], [1737, "ivy.array.array_methods.eigvalsh"]], "eigvalsh() (in module ivy.container.container_methods)": [[1736, "ivy.container.container_methods.eigvalsh"], [1738, "ivy.container.container_methods.eigvalsh"]], "static_eigvalsh() (in module ivy.container.container_methods)": [[1736, "ivy.container.container_methods.static_eigvalsh"], [1740, "ivy.container.container_methods.static_eigvalsh"]], "inner() (in module ivy.array.array_methods)": [[1741, "ivy.array.array_methods.inner"], [1742, "ivy.array.array_methods.inner"]], "inner() (in module ivy.container.container_methods)": [[1741, "ivy.container.container_methods.inner"], [1743, "ivy.container.container_methods.inner"]], "static_inner() (in module ivy.container.container_methods)": [[1741, "ivy.container.container_methods.static_inner"], [1745, "ivy.container.container_methods.static_inner"]], "inv() (in module ivy.array.array_methods)": [[1746, "ivy.array.array_methods.inv"], [1747, "ivy.array.array_methods.inv"]], "inv() (in module ivy.container.container_methods)": [[1746, "ivy.container.container_methods.inv"], [1748, "ivy.container.container_methods.inv"]], "static_inv() (in module ivy.container.container_methods)": [[1746, "ivy.container.container_methods.static_inv"], [1750, "ivy.container.container_methods.static_inv"]], "matmul() (in module ivy.array.array_methods)": [[1751, "ivy.array.array_methods.matmul"], [1752, "ivy.array.array_methods.matmul"]], "matmul() (in module ivy.container.container_methods)": [[1751, "ivy.container.container_methods.matmul"], [1753, "ivy.container.container_methods.matmul"]], "static_matmul() (in module ivy.container.container_methods)": [[1751, "ivy.container.container_methods.static_matmul"], [1755, "ivy.container.container_methods.static_matmul"]], "matrix_norm() (in module ivy.array.array_methods)": [[1756, "ivy.array.array_methods.matrix_norm"], [1757, "ivy.array.array_methods.matrix_norm"]], "matrix_norm() (in module ivy.container.container_methods)": [[1756, "ivy.container.container_methods.matrix_norm"], [1758, "ivy.container.container_methods.matrix_norm"]], "static_matrix_norm() (in module ivy.container.container_methods)": [[1756, "ivy.container.container_methods.static_matrix_norm"], [1760, "ivy.container.container_methods.static_matrix_norm"]], "matrix_power() (in module ivy.array.array_methods)": [[1761, "ivy.array.array_methods.matrix_power"], [1762, "ivy.array.array_methods.matrix_power"]], "matrix_power() (in module ivy.container.container_methods)": [[1761, "ivy.container.container_methods.matrix_power"], [1763, "ivy.container.container_methods.matrix_power"]], "static_matrix_power() (in module ivy.container.container_methods)": [[1761, "ivy.container.container_methods.static_matrix_power"], [1765, "ivy.container.container_methods.static_matrix_power"]], "matrix_rank() (in module ivy.array.array_methods)": [[1766, "ivy.array.array_methods.matrix_rank"], [1767, "ivy.array.array_methods.matrix_rank"]], "matrix_rank() (in module ivy.container.container_methods)": [[1766, "ivy.container.container_methods.matrix_rank"], [1768, "ivy.container.container_methods.matrix_rank"]], "static_matrix_rank() (in module ivy.container.container_methods)": [[1766, "ivy.container.container_methods.static_matrix_rank"], [1770, "ivy.container.container_methods.static_matrix_rank"]], "matrix_transpose() (in module ivy.array.array_methods)": [[1771, "ivy.array.array_methods.matrix_transpose"], [1772, "ivy.array.array_methods.matrix_transpose"]], "matrix_transpose() (in module ivy.container.container_methods)": [[1771, "ivy.container.container_methods.matrix_transpose"], [1773, "ivy.container.container_methods.matrix_transpose"]], "static_matrix_transpose() (in module ivy.container.container_methods)": [[1771, "ivy.container.container_methods.static_matrix_transpose"], [1775, "ivy.container.container_methods.static_matrix_transpose"]], "outer() (in module ivy.array.array_methods)": [[1776, "ivy.array.array_methods.outer"], [1777, "ivy.array.array_methods.outer"]], "outer() (in module ivy.container.container_methods)": [[1776, "ivy.container.container_methods.outer"], [1778, "ivy.container.container_methods.outer"]], "static_outer() (in module ivy.container.container_methods)": [[1776, "ivy.container.container_methods.static_outer"], [1780, "ivy.container.container_methods.static_outer"]], "pinv() (in module ivy.array.array_methods)": [[1781, "ivy.array.array_methods.pinv"], [1782, "ivy.array.array_methods.pinv"]], "pinv() (in module ivy.container.container_methods)": [[1781, "ivy.container.container_methods.pinv"], [1783, "ivy.container.container_methods.pinv"]], "static_pinv() (in module ivy.container.container_methods)": [[1781, "ivy.container.container_methods.static_pinv"], [1785, "ivy.container.container_methods.static_pinv"]], "qr() (in module ivy.array.array_methods)": [[1786, "ivy.array.array_methods.qr"], [1787, "ivy.array.array_methods.qr"]], "qr() (in module ivy.container.container_methods)": [[1786, "ivy.container.container_methods.qr"], [1788, "ivy.container.container_methods.qr"]], "static_qr() (in module ivy.container.container_methods)": [[1786, "ivy.container.container_methods.static_qr"], [1790, "ivy.container.container_methods.static_qr"]], "slogdet() (in module ivy.array.array_methods)": [[1791, "ivy.array.array_methods.slogdet"], [1792, "ivy.array.array_methods.slogdet"]], "slogdet() (in module ivy.container.container_methods)": [[1791, "ivy.container.container_methods.slogdet"], [1793, "ivy.container.container_methods.slogdet"]], "static_slogdet() (in module ivy.container.container_methods)": [[1791, "ivy.container.container_methods.static_slogdet"], [1795, "ivy.container.container_methods.static_slogdet"]], "solve() (in module ivy.array.array_methods)": [[1796, "ivy.array.array_methods.solve"], [1797, "ivy.array.array_methods.solve"]], "solve() (in module ivy.container.container_methods)": [[1796, "ivy.container.container_methods.solve"], [1798, "ivy.container.container_methods.solve"]], "static_solve() (in module ivy.container.container_methods)": [[1796, "ivy.container.container_methods.static_solve"], [1800, "ivy.container.container_methods.static_solve"]], "static_svd() (in module ivy.container.container_methods)": [[1801, "ivy.container.container_methods.static_svd"], [1802, "ivy.container.container_methods.static_svd"]], "svd() (in module ivy.array.array_methods)": [[1801, "ivy.array.array_methods.svd"], [1803, "ivy.array.array_methods.svd"]], "svd() (in module ivy.container.container_methods)": [[1801, "ivy.container.container_methods.svd"], [1804, "ivy.container.container_methods.svd"]], "static_svdvals() (in module ivy.container.container_methods)": [[1806, "ivy.container.container_methods.static_svdvals"], [1807, "ivy.container.container_methods.static_svdvals"]], "svdvals() (in module ivy.array.array_methods)": [[1806, "ivy.array.array_methods.svdvals"], [1808, "ivy.array.array_methods.svdvals"]], "svdvals() (in module ivy.container.container_methods)": [[1806, "ivy.container.container_methods.svdvals"], [1809, "ivy.container.container_methods.svdvals"]], "static_tensordot() (in module ivy.container.container_methods)": [[1811, "ivy.container.container_methods.static_tensordot"], [1812, "ivy.container.container_methods.static_tensordot"]], "tensordot() (in module ivy.container.container_methods)": [[1811, "ivy.container.container_methods.tensordot"], [1813, "ivy.container.container_methods.tensordot"]], "tensorsolve() (in module ivy.array.array_methods)": [[1815, "ivy.array.array_methods.tensorsolve"], [1816, "ivy.array.array_methods.tensorsolve"]], "tensorsolve() (in module ivy.container.container_methods)": [[1815, "ivy.container.container_methods.tensorsolve"], [1817, "ivy.container.container_methods.tensorsolve"]], "static_trace() (in module ivy.container.container_methods)": [[1819, "ivy.container.container_methods.static_trace"], [1820, "ivy.container.container_methods.static_trace"]], "trace() (in module ivy.array.array_methods)": [[1819, "ivy.array.array_methods.trace"], [1821, "ivy.array.array_methods.trace"]], "trace() (in module ivy.container.container_methods)": [[1819, "ivy.container.container_methods.trace"], [1822, "ivy.container.container_methods.trace"]], "static_vander() (in module ivy.container.container_methods)": [[1824, "ivy.container.container_methods.static_vander"], [1825, "ivy.container.container_methods.static_vander"]], "vander() (in module ivy.array.array_methods)": [[1824, "ivy.array.array_methods.vander"], [1826, "ivy.array.array_methods.vander"]], "vander() (in module ivy.container.container_methods)": [[1824, "ivy.container.container_methods.vander"], [1827, "ivy.container.container_methods.vander"]], "static_vecdot() (in module ivy.container.container_methods)": [[1829, "ivy.container.container_methods.static_vecdot"], [1830, "ivy.container.container_methods.static_vecdot"]], "vecdot() (in module ivy.array.array_methods)": [[1829, "ivy.array.array_methods.vecdot"], [1831, "ivy.array.array_methods.vecdot"]], "vecdot() (in module ivy.container.container_methods)": [[1829, "ivy.container.container_methods.vecdot"], [1832, "ivy.container.container_methods.vecdot"]], "static_vector_norm() (in module ivy.container.container_methods)": [[1834, "ivy.container.container_methods.static_vector_norm"], [1835, "ivy.container.container_methods.static_vector_norm"]], "vector_norm() (in module ivy.array.array_methods)": [[1834, "ivy.array.array_methods.vector_norm"], [1836, "ivy.array.array_methods.vector_norm"]], "vector_norm() (in module ivy.container.container_methods)": [[1834, "ivy.container.container_methods.vector_norm"], [1837, "ivy.container.container_methods.vector_norm"]], "static_vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1839, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"], [1840, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.array.array_methods)": [[1839, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"], [1841, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1839, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"], [1842, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"]], "binary_cross_entropy() (in module ivy.functional.ivy.losses)": [[1844, "ivy.functional.ivy.losses.binary_cross_entropy"], [1845, "ivy.functional.ivy.losses.binary_cross_entropy"], [1848, "ivy.functional.ivy.losses.binary_cross_entropy"]], "cross_entropy() (in module ivy.functional.ivy.losses)": [[1844, "ivy.functional.ivy.losses.cross_entropy"], [1850, "ivy.functional.ivy.losses.cross_entropy"], [1853, "ivy.functional.ivy.losses.cross_entropy"]], "ivy.functional.ivy.losses": [[1844, "module-ivy.functional.ivy.losses"]], "sparse_cross_entropy() (in module ivy.functional.ivy.losses)": [[1844, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1855, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1858, "ivy.functional.ivy.losses.sparse_cross_entropy"]], "binary_cross_entropy() (in module ivy.array.array_methods)": [[1845, "ivy.array.array_methods.binary_cross_entropy"], [1846, "ivy.array.array_methods.binary_cross_entropy"]], "binary_cross_entropy() (in module ivy.container.container_methods)": [[1845, "ivy.container.container_methods.binary_cross_entropy"], [1847, "ivy.container.container_methods.binary_cross_entropy"]], "static_binary_cross_entropy() (in module ivy.container.container_methods)": [[1845, "ivy.container.container_methods.static_binary_cross_entropy"], [1849, "ivy.container.container_methods.static_binary_cross_entropy"]], "cross_entropy() (in module ivy.array.array_methods)": [[1850, "ivy.array.array_methods.cross_entropy"], [1851, "ivy.array.array_methods.cross_entropy"]], "cross_entropy() (in module ivy.container.container_methods)": [[1850, "ivy.container.container_methods.cross_entropy"], [1852, "ivy.container.container_methods.cross_entropy"]], "static_cross_entropy() (in module ivy.container.container_methods)": [[1850, "ivy.container.container_methods.static_cross_entropy"], [1854, "ivy.container.container_methods.static_cross_entropy"]], "sparse_cross_entropy() (in module ivy.array.array_methods)": [[1855, "ivy.array.array_methods.sparse_cross_entropy"], [1856, "ivy.array.array_methods.sparse_cross_entropy"]], "sparse_cross_entropy() (in module ivy.container.container_methods)": [[1855, "ivy.container.container_methods.sparse_cross_entropy"], [1857, "ivy.container.container_methods.sparse_cross_entropy"]], "static_sparse_cross_entropy() (in module ivy.container.container_methods)": [[1855, "ivy.container.container_methods.static_sparse_cross_entropy"], [1859, "ivy.container.container_methods.static_sparse_cross_entropy"]], "clip() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.clip"], [1861, "ivy.functional.ivy.manipulation.clip"], [1864, "ivy.functional.ivy.manipulation.clip"]], "concat() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.concat"], [1866, "ivy.functional.ivy.manipulation.concat"], [1869, "ivy.functional.ivy.manipulation.concat"]], "constant_pad() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.constant_pad"], [1871, "ivy.functional.ivy.manipulation.constant_pad"], [1874, "ivy.functional.ivy.manipulation.constant_pad"]], "expand_dims() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.expand_dims"], [1876, "ivy.functional.ivy.manipulation.expand_dims"], [1879, "ivy.functional.ivy.manipulation.expand_dims"]], "flip() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.flip"], [1881, "ivy.functional.ivy.manipulation.flip"], [1884, "ivy.functional.ivy.manipulation.flip"]], "ivy.functional.ivy.manipulation": [[1860, "module-ivy.functional.ivy.manipulation"]], "permute_dims() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.permute_dims"], [1886, "ivy.functional.ivy.manipulation.permute_dims"], [1889, "ivy.functional.ivy.manipulation.permute_dims"]], "repeat() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.repeat"], [1891, "ivy.functional.ivy.manipulation.repeat"], [1894, "ivy.functional.ivy.manipulation.repeat"]], "reshape() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.reshape"], [1896, "ivy.functional.ivy.manipulation.reshape"], [1899, "ivy.functional.ivy.manipulation.reshape"]], "roll() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.roll"], [1901, "ivy.functional.ivy.manipulation.roll"], [1904, "ivy.functional.ivy.manipulation.roll"]], "split() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.split"], [1906, "ivy.functional.ivy.manipulation.split"], [1909, "ivy.functional.ivy.manipulation.split"]], "squeeze() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.squeeze"], [1911, "ivy.functional.ivy.manipulation.squeeze"], [1914, "ivy.functional.ivy.manipulation.squeeze"]], "stack() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.stack"], [1916, "ivy.functional.ivy.manipulation.stack"], [1919, "ivy.functional.ivy.manipulation.stack"]], "swapaxes() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.swapaxes"], [1921, "ivy.functional.ivy.manipulation.swapaxes"], [1925, "ivy.functional.ivy.manipulation.swapaxes"]], "tile() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.tile"], [1926, "ivy.functional.ivy.manipulation.tile"], [1930, "ivy.functional.ivy.manipulation.tile"]], "unstack() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.unstack"], [1931, "ivy.functional.ivy.manipulation.unstack"], [1935, "ivy.functional.ivy.manipulation.unstack"]], "zero_pad() (in module ivy.functional.ivy.manipulation)": [[1860, "ivy.functional.ivy.manipulation.zero_pad"], [1936, "ivy.functional.ivy.manipulation.zero_pad"], [1940, "ivy.functional.ivy.manipulation.zero_pad"]], "clip() (in module ivy.array.array_methods)": [[1861, "ivy.array.array_methods.clip"], [1862, "ivy.array.array_methods.clip"]], "clip() (in module ivy.container.container_methods)": [[1861, "ivy.container.container_methods.clip"], [1863, "ivy.container.container_methods.clip"]], "static_clip() (in module ivy.container.container_methods)": [[1861, "ivy.container.container_methods.static_clip"], [1865, "ivy.container.container_methods.static_clip"]], "concat() (in module ivy.array.array_methods)": [[1866, "ivy.array.array_methods.concat"], [1867, "ivy.array.array_methods.concat"]], "concat() (in module ivy.container.container_methods)": [[1866, "ivy.container.container_methods.concat"], [1868, "ivy.container.container_methods.concat"]], "static_concat() (in module ivy.container.container_methods)": [[1866, "ivy.container.container_methods.static_concat"], [1870, "ivy.container.container_methods.static_concat"]], "constant_pad() (in module ivy.array.array_methods)": [[1871, "ivy.array.array_methods.constant_pad"], [1872, "ivy.array.array_methods.constant_pad"]], "constant_pad() (in module ivy.container.container_methods)": [[1871, "ivy.container.container_methods.constant_pad"], [1873, "ivy.container.container_methods.constant_pad"]], "static_constant_pad() (in module ivy.container.container_methods)": [[1871, "ivy.container.container_methods.static_constant_pad"], [1875, "ivy.container.container_methods.static_constant_pad"]], "expand_dims() (in module ivy.array.array_methods)": [[1876, "ivy.array.array_methods.expand_dims"], [1877, "ivy.array.array_methods.expand_dims"]], "expand_dims() (in module ivy.container.container_methods)": [[1876, "ivy.container.container_methods.expand_dims"], [1878, "ivy.container.container_methods.expand_dims"]], "static_expand_dims() (in module ivy.container.container_methods)": [[1876, "ivy.container.container_methods.static_expand_dims"], [1880, "ivy.container.container_methods.static_expand_dims"]], "flip() (in module ivy.array.array_methods)": [[1881, "ivy.array.array_methods.flip"], [1882, "ivy.array.array_methods.flip"]], "flip() (in module ivy.container.container_methods)": [[1881, "ivy.container.container_methods.flip"], [1883, "ivy.container.container_methods.flip"]], "static_flip() (in module ivy.container.container_methods)": [[1881, "ivy.container.container_methods.static_flip"], [1885, "ivy.container.container_methods.static_flip"]], "permute_dims() (in module ivy.array.array_methods)": [[1886, "ivy.array.array_methods.permute_dims"], [1887, "ivy.array.array_methods.permute_dims"]], "permute_dims() (in module ivy.container.container_methods)": [[1886, "ivy.container.container_methods.permute_dims"], [1888, "ivy.container.container_methods.permute_dims"]], "static_permute_dims() (in module ivy.container.container_methods)": [[1886, "ivy.container.container_methods.static_permute_dims"], [1890, "ivy.container.container_methods.static_permute_dims"]], "repeat() (in module ivy.array.array_methods)": [[1891, "ivy.array.array_methods.repeat"], [1892, "ivy.array.array_methods.repeat"]], "repeat() (in module ivy.container.container_methods)": [[1891, "ivy.container.container_methods.repeat"], [1893, "ivy.container.container_methods.repeat"]], "static_repeat() (in module ivy.container.container_methods)": [[1891, "ivy.container.container_methods.static_repeat"], [1895, "ivy.container.container_methods.static_repeat"]], "reshape() (in module ivy.array.array_methods)": [[1896, "ivy.array.array_methods.reshape"], [1897, "ivy.array.array_methods.reshape"]], "reshape() (in module ivy.container.container_methods)": [[1896, "ivy.container.container_methods.reshape"], [1898, "ivy.container.container_methods.reshape"]], "static_reshape() (in module ivy.container.container_methods)": [[1896, "ivy.container.container_methods.static_reshape"], [1900, "ivy.container.container_methods.static_reshape"]], "roll() (in module ivy.array.array_methods)": [[1901, "ivy.array.array_methods.roll"], [1902, "ivy.array.array_methods.roll"]], "roll() (in module ivy.container.container_methods)": [[1901, "ivy.container.container_methods.roll"], [1903, "ivy.container.container_methods.roll"]], "static_roll() (in module ivy.container.container_methods)": [[1901, "ivy.container.container_methods.static_roll"], [1905, "ivy.container.container_methods.static_roll"]], "split() (in module ivy.array.array_methods)": [[1906, "ivy.array.array_methods.split"], [1907, "ivy.array.array_methods.split"]], "split() (in module ivy.container.container_methods)": [[1906, "ivy.container.container_methods.split"], [1908, "ivy.container.container_methods.split"]], "static_split() (in module ivy.container.container_methods)": [[1906, "ivy.container.container_methods.static_split"], [1910, "ivy.container.container_methods.static_split"]], "squeeze() (in module ivy.array.array_methods)": [[1911, "ivy.array.array_methods.squeeze"], [1912, "ivy.array.array_methods.squeeze"]], "squeeze() (in module ivy.container.container_methods)": [[1911, "ivy.container.container_methods.squeeze"], [1913, "ivy.container.container_methods.squeeze"]], "static_squeeze() (in module ivy.container.container_methods)": [[1911, "ivy.container.container_methods.static_squeeze"], [1915, "ivy.container.container_methods.static_squeeze"]], "stack() (in module ivy.array.array_methods)": [[1916, "ivy.array.array_methods.stack"], [1917, "ivy.array.array_methods.stack"]], "stack() (in module ivy.container.container_methods)": [[1916, "ivy.container.container_methods.stack"], [1918, "ivy.container.container_methods.stack"]], "static_stack() (in module ivy.container.container_methods)": [[1916, "ivy.container.container_methods.static_stack"], [1920, "ivy.container.container_methods.static_stack"]], "static_swapaxes() (in module ivy.container.container_methods)": [[1921, "ivy.container.container_methods.static_swapaxes"], [1922, "ivy.container.container_methods.static_swapaxes"]], "swapaxes() (in module ivy.array.array_methods)": [[1921, "ivy.array.array_methods.swapaxes"], [1923, "ivy.array.array_methods.swapaxes"]], "swapaxes() (in module ivy.container.container_methods)": [[1921, "ivy.container.container_methods.swapaxes"], [1924, "ivy.container.container_methods.swapaxes"]], "static_tile() (in module ivy.container.container_methods)": [[1926, "ivy.container.container_methods.static_tile"], [1927, "ivy.container.container_methods.static_tile"]], "tile() (in module ivy.array.array_methods)": [[1926, "ivy.array.array_methods.tile"], [1928, "ivy.array.array_methods.tile"]], "tile() (in module ivy.container.container_methods)": [[1926, "ivy.container.container_methods.tile"], [1929, "ivy.container.container_methods.tile"]], "static_unstack() (in module ivy.container.container_methods)": [[1931, "ivy.container.container_methods.static_unstack"], [1932, "ivy.container.container_methods.static_unstack"]], "unstack() (in module ivy.array.array_methods)": [[1931, "ivy.array.array_methods.unstack"], [1933, "ivy.array.array_methods.unstack"]], "unstack() (in module ivy.container.container_methods)": [[1931, "ivy.container.container_methods.unstack"], [1934, "ivy.container.container_methods.unstack"]], "static_zero_pad() (in module ivy.container.container_methods)": [[1936, "ivy.container.container_methods.static_zero_pad"], [1937, "ivy.container.container_methods.static_zero_pad"]], "zero_pad() (in module ivy.array.array_methods)": [[1936, "ivy.array.array_methods.zero_pad"], [1938, "ivy.array.array_methods.zero_pad"]], "zero_pad() (in module ivy.container.container_methods)": [[1936, "ivy.container.container_methods.zero_pad"], [1939, "ivy.container.container_methods.zero_pad"]], "fomaml_step() (in module ivy.functional.ivy.meta)": [[1941, "ivy.functional.ivy.meta.fomaml_step"], [1942, "ivy.functional.ivy.meta.fomaml_step"]], "ivy.functional.ivy.meta": [[1941, "module-ivy.functional.ivy.meta"]], "maml_step() (in module ivy.functional.ivy.meta)": [[1941, "ivy.functional.ivy.meta.maml_step"], [1943, "ivy.functional.ivy.meta.maml_step"]], "reptile_step() (in module ivy.functional.ivy.meta)": [[1941, "ivy.functional.ivy.meta.reptile_step"], [1944, "ivy.functional.ivy.meta.reptile_step"]], "all_nested_indices() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.all_nested_indices"], [1946, "ivy.functional.ivy.nest.all_nested_indices"]], "copy_nest() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.copy_nest"], [1947, "ivy.functional.ivy.nest.copy_nest"]], "duplicate_array_index_chains() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.duplicate_array_index_chains"], [1948, "ivy.functional.ivy.nest.duplicate_array_index_chains"]], "index_nest() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.index_nest"], [1949, "ivy.functional.ivy.nest.index_nest"]], "insert_into_nest_at_index() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.insert_into_nest_at_index"], [1950, "ivy.functional.ivy.nest.insert_into_nest_at_index"]], "insert_into_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.insert_into_nest_at_indices"], [1951, "ivy.functional.ivy.nest.insert_into_nest_at_indices"]], "ivy.functional.ivy.nest": [[1945, "module-ivy.functional.ivy.nest"]], "map() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.map"], [1952, "ivy.functional.ivy.nest.map"]], "map_nest_at_index() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.map_nest_at_index"], [1953, "ivy.functional.ivy.nest.map_nest_at_index"]], "map_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.map_nest_at_indices"], [1954, "ivy.functional.ivy.nest.map_nest_at_indices"]], "multi_index_nest() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.multi_index_nest"], [1955, "ivy.functional.ivy.nest.multi_index_nest"]], "nested_any() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.nested_any"], [1956, "ivy.functional.ivy.nest.nested_any"]], "nested_argwhere() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.nested_argwhere"], [1957, "ivy.functional.ivy.nest.nested_argwhere"]], "nested_map() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.nested_map"], [1958, "ivy.functional.ivy.nest.nested_map"]], "nested_multi_map() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.nested_multi_map"], [1959, "ivy.functional.ivy.nest.nested_multi_map"]], "prune_empty() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.prune_empty"], [1960, "ivy.functional.ivy.nest.prune_empty"]], "prune_nest_at_index() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.prune_nest_at_index"], [1961, "ivy.functional.ivy.nest.prune_nest_at_index"]], "prune_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.prune_nest_at_indices"], [1962, "ivy.functional.ivy.nest.prune_nest_at_indices"]], "set_nest_at_index() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.set_nest_at_index"], [1963, "ivy.functional.ivy.nest.set_nest_at_index"]], "set_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1945, "ivy.functional.ivy.nest.set_nest_at_indices"], [1964, "ivy.functional.ivy.nest.set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1965, "module-ivy.functional.ivy.norms"]], "layer_norm() (in module ivy.functional.ivy.norms)": [[1965, "ivy.functional.ivy.norms.layer_norm"], [1966, "ivy.functional.ivy.norms.layer_norm"], [1969, "ivy.functional.ivy.norms.layer_norm"]], "layer_norm() (in module ivy.array.array_methods)": [[1966, "ivy.array.array_methods.layer_norm"], [1967, "ivy.array.array_methods.layer_norm"]], "layer_norm() (in module ivy.container.container_methods)": [[1966, "ivy.container.container_methods.layer_norm"], [1968, "ivy.container.container_methods.layer_norm"]], "ivy.functional.ivy.random": [[1970, "module-ivy.functional.ivy.random"]], "multinomial() (in module ivy.functional.ivy.random)": [[1970, "ivy.functional.ivy.random.multinomial"], [1971, "ivy.functional.ivy.random.multinomial"], [1974, "ivy.functional.ivy.random.multinomial"]], "randint() (in module ivy.functional.ivy.random)": [[1970, "ivy.functional.ivy.random.randint"], [1976, "ivy.functional.ivy.random.randint"], [1979, "ivy.functional.ivy.random.randint"]], "random_normal() (in module ivy.functional.ivy.random)": [[1970, "ivy.functional.ivy.random.random_normal"], [1981, "ivy.functional.ivy.random.random_normal"], [1984, "ivy.functional.ivy.random.random_normal"]], "random_uniform() (in module ivy.functional.ivy.random)": [[1970, "ivy.functional.ivy.random.random_uniform"], [1986, "ivy.functional.ivy.random.random_uniform"], [1989, "ivy.functional.ivy.random.random_uniform"]], "seed() (in module ivy.functional.ivy.random)": [[1970, "ivy.functional.ivy.random.seed"], [1991, "ivy.functional.ivy.random.seed"]], "shuffle() (in module ivy.functional.ivy.random)": [[1970, "ivy.functional.ivy.random.shuffle"], [1992, "ivy.functional.ivy.random.shuffle"], [1995, "ivy.functional.ivy.random.shuffle"]], "multinomial() (in module ivy.array.array_methods)": [[1971, "ivy.array.array_methods.multinomial"], [1972, "ivy.array.array_methods.multinomial"]], "multinomial() (in module ivy.container.container_methods)": [[1971, "ivy.container.container_methods.multinomial"], [1973, "ivy.container.container_methods.multinomial"]], "static_multinomial() (in module ivy.container.container_methods)": [[1971, "ivy.container.container_methods.static_multinomial"], [1975, "ivy.container.container_methods.static_multinomial"]], "randint() (in module ivy.array.array_methods)": [[1976, "ivy.array.array_methods.randint"], [1977, "ivy.array.array_methods.randint"]], "randint() (in module ivy.container.container_methods)": [[1976, "ivy.container.container_methods.randint"], [1978, "ivy.container.container_methods.randint"]], "static_randint() (in module ivy.container.container_methods)": [[1976, "ivy.container.container_methods.static_randint"], [1980, "ivy.container.container_methods.static_randint"]], "random_normal() (in module ivy.array.array_methods)": [[1981, "ivy.array.array_methods.random_normal"], [1982, "ivy.array.array_methods.random_normal"]], "random_normal() (in module ivy.container.container_methods)": [[1981, "ivy.container.container_methods.random_normal"], [1983, "ivy.container.container_methods.random_normal"]], "static_random_normal() (in module ivy.container.container_methods)": [[1981, "ivy.container.container_methods.static_random_normal"], [1985, "ivy.container.container_methods.static_random_normal"]], "random_uniform() (in module ivy.array.array_methods)": [[1986, "ivy.array.array_methods.random_uniform"], [1987, "ivy.array.array_methods.random_uniform"]], "random_uniform() (in module ivy.container.container_methods)": [[1986, "ivy.container.container_methods.random_uniform"], [1988, "ivy.container.container_methods.random_uniform"]], "static_random_uniform() (in module ivy.container.container_methods)": [[1986, "ivy.container.container_methods.static_random_uniform"], [1990, "ivy.container.container_methods.static_random_uniform"]], "shuffle() (in module ivy.array.array_methods)": [[1992, "ivy.array.array_methods.shuffle"], [1993, "ivy.array.array_methods.shuffle"]], "shuffle() (in module ivy.container.container_methods)": [[1992, "ivy.container.container_methods.shuffle"], [1994, "ivy.container.container_methods.shuffle"]], "static_shuffle() (in module ivy.container.container_methods)": [[1992, "ivy.container.container_methods.static_shuffle"], [1996, "ivy.container.container_methods.static_shuffle"]], "argmax() (in module ivy.functional.ivy.searching)": [[1997, "ivy.functional.ivy.searching.argmax"], [1998, "ivy.functional.ivy.searching.argmax"], [2001, "ivy.functional.ivy.searching.argmax"]], "argmin() (in module ivy.functional.ivy.searching)": [[1997, "ivy.functional.ivy.searching.argmin"], [2003, "ivy.functional.ivy.searching.argmin"], [2006, "ivy.functional.ivy.searching.argmin"]], "argwhere() (in module ivy.functional.ivy.searching)": [[1997, "ivy.functional.ivy.searching.argwhere"], [2008, "ivy.functional.ivy.searching.argwhere"], [2011, "ivy.functional.ivy.searching.argwhere"]], "ivy.functional.ivy.searching": [[1997, "module-ivy.functional.ivy.searching"]], "nonzero() (in module ivy.functional.ivy.searching)": [[1997, "ivy.functional.ivy.searching.nonzero"], [2013, "ivy.functional.ivy.searching.nonzero"], [2016, "ivy.functional.ivy.searching.nonzero"]], "where() (in module ivy.functional.ivy.searching)": [[1997, "ivy.functional.ivy.searching.where"], [2018, "ivy.functional.ivy.searching.where"], [2022, "ivy.functional.ivy.searching.where"]], "argmax() (in module ivy.array.array_methods)": [[1998, "ivy.array.array_methods.argmax"], [1999, "ivy.array.array_methods.argmax"]], "argmax() (in module ivy.container.container_methods)": [[1998, "ivy.container.container_methods.argmax"], [2000, "ivy.container.container_methods.argmax"]], "static_argmax() (in module ivy.container.container_methods)": [[1998, "ivy.container.container_methods.static_argmax"], [2002, "ivy.container.container_methods.static_argmax"]], "argmin() (in module ivy.array.array_methods)": [[2003, "ivy.array.array_methods.argmin"], [2004, "ivy.array.array_methods.argmin"]], "argmin() (in module ivy.container.container_methods)": [[2003, "ivy.container.container_methods.argmin"], [2005, "ivy.container.container_methods.argmin"]], "static_argmin() (in module ivy.container.container_methods)": [[2003, "ivy.container.container_methods.static_argmin"], [2007, "ivy.container.container_methods.static_argmin"]], "argwhere() (in module ivy.array.array_methods)": [[2008, "ivy.array.array_methods.argwhere"], [2009, "ivy.array.array_methods.argwhere"]], "argwhere() (in module ivy.container.container_methods)": [[2008, "ivy.container.container_methods.argwhere"], [2010, "ivy.container.container_methods.argwhere"]], "static_argwhere() (in module ivy.container.container_methods)": [[2008, "ivy.container.container_methods.static_argwhere"], [2012, "ivy.container.container_methods.static_argwhere"]], "nonzero() (in module ivy.array.array_methods)": [[2013, "ivy.array.array_methods.nonzero"], [2014, "ivy.array.array_methods.nonzero"]], "nonzero() (in module ivy.container.container_methods)": [[2013, "ivy.container.container_methods.nonzero"], [2015, "ivy.container.container_methods.nonzero"]], "static_nonzero() (in module ivy.container.container_methods)": [[2013, "ivy.container.container_methods.static_nonzero"], [2017, "ivy.container.container_methods.static_nonzero"]], "static_where() (in module ivy.container.container_methods)": [[2018, "ivy.container.container_methods.static_where"], [2019, "ivy.container.container_methods.static_where"]], "where() (in module ivy.array.array_methods)": [[2018, "ivy.array.array_methods.where"], [2020, "ivy.array.array_methods.where"]], "where() (in module ivy.container.container_methods)": [[2018, "ivy.container.container_methods.where"], [2021, "ivy.container.container_methods.where"]], "ivy.functional.ivy.set": [[2023, "module-ivy.functional.ivy.set"]], "unique_all() (in module ivy.functional.ivy.set)": [[2023, "ivy.functional.ivy.set.unique_all"], [2024, "ivy.functional.ivy.set.unique_all"], [2028, "ivy.functional.ivy.set.unique_all"]], "unique_counts() (in module ivy.functional.ivy.set)": [[2023, "ivy.functional.ivy.set.unique_counts"], [2029, "ivy.functional.ivy.set.unique_counts"], [2033, "ivy.functional.ivy.set.unique_counts"]], "unique_inverse() (in module ivy.functional.ivy.set)": [[2023, "ivy.functional.ivy.set.unique_inverse"], [2034, "ivy.functional.ivy.set.unique_inverse"], [2038, "ivy.functional.ivy.set.unique_inverse"]], "unique_values() (in module ivy.functional.ivy.set)": [[2023, "ivy.functional.ivy.set.unique_values"], [2039, "ivy.functional.ivy.set.unique_values"], [2043, "ivy.functional.ivy.set.unique_values"]], "static_unique_all() (in module ivy.container.container_methods)": [[2024, "ivy.container.container_methods.static_unique_all"], [2025, "ivy.container.container_methods.static_unique_all"]], "unique_all() (in module ivy.array.array_methods)": [[2024, "ivy.array.array_methods.unique_all"], [2026, "ivy.array.array_methods.unique_all"]], "unique_all() (in module ivy.container.container_methods)": [[2024, "ivy.container.container_methods.unique_all"], [2027, "ivy.container.container_methods.unique_all"]], "static_unique_counts() (in module ivy.container.container_methods)": [[2029, "ivy.container.container_methods.static_unique_counts"], [2030, "ivy.container.container_methods.static_unique_counts"]], "unique_counts() (in module ivy.array.array_methods)": [[2029, "ivy.array.array_methods.unique_counts"], [2031, "ivy.array.array_methods.unique_counts"]], "unique_counts() (in module ivy.container.container_methods)": [[2029, "ivy.container.container_methods.unique_counts"], [2032, "ivy.container.container_methods.unique_counts"]], "static_unique_inverse() (in module ivy.container.container_methods)": [[2034, "ivy.container.container_methods.static_unique_inverse"], [2035, "ivy.container.container_methods.static_unique_inverse"]], "unique_inverse() (in module ivy.array.array_methods)": [[2034, "ivy.array.array_methods.unique_inverse"], [2036, "ivy.array.array_methods.unique_inverse"]], "unique_inverse() (in module ivy.container.container_methods)": [[2034, "ivy.container.container_methods.unique_inverse"], [2037, "ivy.container.container_methods.unique_inverse"]], "static_unique_values() (in module ivy.container.container_methods)": [[2039, "ivy.container.container_methods.static_unique_values"], [2040, "ivy.container.container_methods.static_unique_values"]], "unique_values() (in module ivy.array.array_methods)": [[2039, "ivy.array.array_methods.unique_values"], [2041, "ivy.array.array_methods.unique_values"]], "unique_values() (in module ivy.container.container_methods)": [[2039, "ivy.container.container_methods.unique_values"], [2042, "ivy.container.container_methods.unique_values"]], "argsort() (in module ivy.functional.ivy.sorting)": [[2044, "ivy.functional.ivy.sorting.argsort"], [2045, "ivy.functional.ivy.sorting.argsort"], [2048, "ivy.functional.ivy.sorting.argsort"]], "ivy.functional.ivy.sorting": [[2044, "module-ivy.functional.ivy.sorting"]], "searchsorted() (in module ivy.functional.ivy.sorting)": [[2044, "ivy.functional.ivy.sorting.searchsorted"], [2050, "ivy.functional.ivy.sorting.searchsorted"], [2053, "ivy.functional.ivy.sorting.searchsorted"]], "sort() (in module ivy.functional.ivy.sorting)": [[2044, "ivy.functional.ivy.sorting.sort"], [2055, "ivy.functional.ivy.sorting.sort"], [2058, "ivy.functional.ivy.sorting.sort"]], "argsort() (in module ivy.array.array_methods)": [[2045, "ivy.array.array_methods.argsort"], [2046, "ivy.array.array_methods.argsort"]], "argsort() (in module ivy.container.container_methods)": [[2045, "ivy.container.container_methods.argsort"], [2047, "ivy.container.container_methods.argsort"]], "static_argsort() (in module ivy.container.container_methods)": [[2045, "ivy.container.container_methods.static_argsort"], [2049, "ivy.container.container_methods.static_argsort"]], "searchsorted() (in module ivy.array.array_methods)": [[2050, "ivy.array.array_methods.searchsorted"], [2051, "ivy.array.array_methods.searchsorted"]], "searchsorted() (in module ivy.container.container_methods)": [[2050, "ivy.container.container_methods.searchsorted"], [2052, "ivy.container.container_methods.searchsorted"]], "static_searchsorted() (in module ivy.container.container_methods)": [[2050, "ivy.container.container_methods.static_searchsorted"], [2054, "ivy.container.container_methods.static_searchsorted"]], "sort() (in module ivy.array.array_methods)": [[2055, "ivy.array.array_methods.sort"], [2056, "ivy.array.array_methods.sort"]], "sort() (in module ivy.container.container_methods)": [[2055, "ivy.container.container_methods.sort"], [2057, "ivy.container.container_methods.sort"]], "static_sort() (in module ivy.container.container_methods)": [[2055, "ivy.container.container_methods.static_sort"], [2059, "ivy.container.container_methods.static_sort"]], "cumprod() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.cumprod"], [2061, "ivy.functional.ivy.statistical.cumprod"], [2064, "ivy.functional.ivy.statistical.cumprod"]], "cumsum() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.cumsum"], [2066, "ivy.functional.ivy.statistical.cumsum"], [2069, "ivy.functional.ivy.statistical.cumsum"]], "einsum() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.einsum"], [2071, "ivy.functional.ivy.statistical.einsum"], [2074, "ivy.functional.ivy.statistical.einsum"]], "ivy.functional.ivy.statistical": [[2060, "module-ivy.functional.ivy.statistical"]], "max() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.max"], [2075, "ivy.functional.ivy.statistical.max"], [2078, "ivy.functional.ivy.statistical.max"]], "mean() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.mean"], [2079, "ivy.functional.ivy.statistical.mean"], [2082, "ivy.functional.ivy.statistical.mean"]], "min() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.min"], [2083, "ivy.functional.ivy.statistical.min"], [2086, "ivy.functional.ivy.statistical.min"]], "prod() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.prod"], [2087, "ivy.functional.ivy.statistical.prod"], [2090, "ivy.functional.ivy.statistical.prod"]], "std() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.std"], [2092, "ivy.functional.ivy.statistical.std"], [2095, "ivy.functional.ivy.statistical.std"]], "sum() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.sum"], [2096, "ivy.functional.ivy.statistical.sum"], [2100, "ivy.functional.ivy.statistical.sum"]], "var() (in module ivy.functional.ivy.statistical)": [[2060, "ivy.functional.ivy.statistical.var"], [2101, "ivy.functional.ivy.statistical.var"], [2105, "ivy.functional.ivy.statistical.var"]], "cumprod() (in module ivy.array.array_methods)": [[2061, "ivy.array.array_methods.cumprod"], [2062, "ivy.array.array_methods.cumprod"]], "cumprod() (in module ivy.container.container_methods)": [[2061, "ivy.container.container_methods.cumprod"], [2063, "ivy.container.container_methods.cumprod"]], "static_cumprod() (in module ivy.container.container_methods)": [[2061, "ivy.container.container_methods.static_cumprod"], [2065, "ivy.container.container_methods.static_cumprod"]], "cumsum() (in module ivy.array.array_methods)": [[2066, "ivy.array.array_methods.cumsum"], [2067, "ivy.array.array_methods.cumsum"]], "cumsum() (in module ivy.container.container_methods)": [[2066, "ivy.container.container_methods.cumsum"], [2068, "ivy.container.container_methods.cumsum"]], "static_cumsum() (in module ivy.container.container_methods)": [[2066, "ivy.container.container_methods.static_cumsum"], [2070, "ivy.container.container_methods.static_cumsum"]], "einsum() (in module ivy.array.array_methods)": [[2071, "ivy.array.array_methods.einsum"], [2072, "ivy.array.array_methods.einsum"]], "einsum() (in module ivy.container.container_methods)": [[2071, "ivy.container.container_methods.einsum"], [2073, "ivy.container.container_methods.einsum"]], "max() (in module ivy.array.array_methods)": [[2075, "ivy.array.array_methods.max"], [2076, "ivy.array.array_methods.max"]], "max() (in module ivy.container.container_methods)": [[2075, "ivy.container.container_methods.max"], [2077, "ivy.container.container_methods.max"]], "mean() (in module ivy.array.array_methods)": [[2079, "ivy.array.array_methods.mean"], [2080, "ivy.array.array_methods.mean"]], "mean() (in module ivy.container.container_methods)": [[2079, "ivy.container.container_methods.mean"], [2081, "ivy.container.container_methods.mean"]], "min() (in module ivy.array.array_methods)": [[2083, "ivy.array.array_methods.min"], [2084, "ivy.array.array_methods.min"]], "min() (in module ivy.container.container_methods)": [[2083, "ivy.container.container_methods.min"], [2085, "ivy.container.container_methods.min"]], "prod() (in module ivy.array.array_methods)": [[2087, "ivy.array.array_methods.prod"], [2088, "ivy.array.array_methods.prod"]], "prod() (in module ivy.container.container_methods)": [[2087, "ivy.container.container_methods.prod"], [2089, "ivy.container.container_methods.prod"]], "static_prod() (in module ivy.container.container_methods)": [[2087, "ivy.container.container_methods.static_prod"], [2091, "ivy.container.container_methods.static_prod"]], "std() (in module ivy.array.array_methods)": [[2092, "ivy.array.array_methods.std"], [2093, "ivy.array.array_methods.std"]], "std() (in module ivy.container.container_methods)": [[2092, "ivy.container.container_methods.std"], [2094, "ivy.container.container_methods.std"]], "static_sum() (in module ivy.container.container_methods)": [[2096, "ivy.container.container_methods.static_sum"], [2097, "ivy.container.container_methods.static_sum"]], "sum() (in module ivy.array.array_methods)": [[2096, "ivy.array.array_methods.sum"], [2098, "ivy.array.array_methods.sum"]], "sum() (in module ivy.container.container_methods)": [[2096, "ivy.container.container_methods.sum"], [2099, "ivy.container.container_methods.sum"]], "static_var() (in module ivy.container.container_methods)": [[2101, "ivy.container.container_methods.static_var"], [2102, "ivy.container.container_methods.static_var"]], "var() (in module ivy.array.array_methods)": [[2101, "ivy.array.array_methods.var"], [2103, "ivy.array.array_methods.var"]], "var() (in module ivy.container.container_methods)": [[2101, "ivy.container.container_methods.var"], [2104, "ivy.container.container_methods.var"]], "all() (in module ivy.functional.ivy.utility)": [[2106, "ivy.functional.ivy.utility.all"], [2107, "ivy.functional.ivy.utility.all"], [2110, "ivy.functional.ivy.utility.all"]], "any() (in module ivy.functional.ivy.utility)": [[2106, "ivy.functional.ivy.utility.any"], [2112, "ivy.functional.ivy.utility.any"], [2115, "ivy.functional.ivy.utility.any"]], "ivy.functional.ivy.utility": [[2106, "module-ivy.functional.ivy.utility"]], "all() (in module ivy.array.array_methods)": [[2107, "ivy.array.array_methods.all"], [2108, "ivy.array.array_methods.all"]], "all() (in module ivy.container.container_methods)": [[2107, "ivy.container.container_methods.all"], [2109, "ivy.container.container_methods.all"]], "static_all() (in module ivy.container.container_methods)": [[2107, "ivy.container.container_methods.static_all"], [2111, "ivy.container.container_methods.static_all"]], "any() (in module ivy.array.array_methods)": [[2112, "ivy.array.array_methods.any"], [2113, "ivy.array.array_methods.any"]], "any() (in module ivy.container.container_methods)": [[2112, "ivy.container.container_methods.any"], [2114, "ivy.container.container_methods.any"]], "static_any() (in module ivy.container.container_methods)": [[2112, "ivy.container.container_methods.static_any"], [2116, "ivy.container.container_methods.static_any"]], "applied libraries": [[2117, "term-Applied-Libraries"]], "automatic code conversions": [[2117, "term-Automatic-Code-Conversions"]], "backend handler": [[2117, "term-Backend-Handler"]], "compositional functions": [[2117, "term-Compositional-Functions"]], "convenience functions": [[2117, "term-Convenience-Functions"]], "framework": [[2117, "term-Framework"]], "framework handler": [[2117, "term-Framework-Handler"]], "graph compiler": [[2117, "term-Graph-Compiler"]], "ivy array": [[2117, "term-Ivy-Array"]], "ivy backends": [[2117, "term-Ivy-Backends"]], "ivy builder": [[2117, "term-Ivy-Builder"]], "ivy compiler": [[2117, "term-Ivy-Compiler"]], "ivy container": [[2117, "term-Ivy-Container"]], "ivy frontends": [[2117, "term-Ivy-Frontends"]], "ivy functional api": [[2117, "term-Ivy-Functional-API"]], "ivy graph compiler": [[2117, "term-Ivy-Graph-Compiler"]], "ivy transpiler": [[2117, "term-Ivy-Transpiler"]], "mixed functions": [[2117, "term-Mixed-Functions"]], "native array": [[2117, "term-Native-Array"]], "nestable functions": [[2117, "term-Nestable-Functions"]], "pipeline": [[2117, "term-Pipeline"]], "primary functions": [[2117, "term-Primary-Functions"]], "standalone functions": [[2117, "term-Standalone-Functions"]], "submodule helper functions": [[2117, "term-Submodule-Helper-Functions"]], "add_array_specs() (in module ivy.inspection)": [[2121, "ivy.inspection.add_array_specs"], [2122, "ivy.inspection.add_array_specs"]], "fn_array_spec() (in module ivy.inspection)": [[2121, "ivy.inspection.fn_array_spec"], [2123, "ivy.inspection.fn_array_spec"]], "ivy.inspection": [[2121, "module-ivy.inspection"]], "nestedarray (class in ivy.nested_array.nested_array)": [[2124, "ivy.nested_array.nested_array.NestedArray"], [2125, "ivy.nested_array.nested_array.NestedArray"]], "__init__() (ivy.nested_array.nested_array.nestedarray method)": [[2124, "ivy.nested_array.nested_array.NestedArray.__init__"], [2125, "ivy.nested_array.nested_array.NestedArray.__init__"]], "data (ivy.nested_array.nested_array.nestedarray property)": [[2124, "ivy.nested_array.nested_array.NestedArray.data"], [2125, "ivy.nested_array.nested_array.NestedArray.data"]], "device (ivy.nested_array.nested_array.nestedarray property)": [[2124, "ivy.nested_array.nested_array.NestedArray.device"], [2125, "ivy.nested_array.nested_array.NestedArray.device"]], "dtype (ivy.nested_array.nested_array.nestedarray property)": [[2124, "ivy.nested_array.nested_array.NestedArray.dtype"], [2125, "ivy.nested_array.nested_array.NestedArray.dtype"]], "from_row_lengths() (ivy.nested_array.nested_array.nestedarray class method)": [[2124, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"], [2125, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"]], "from_row_split() (ivy.nested_array.nested_array.nestedarray class method)": [[2124, "ivy.nested_array.nested_array.NestedArray.from_row_split"], [2125, "ivy.nested_array.nested_array.NestedArray.from_row_split"]], "ivy.nested_array.nested_array": [[2124, "module-ivy.nested_array.nested_array"]], "ndim (ivy.nested_array.nested_array.nestedarray property)": [[2124, "ivy.nested_array.nested_array.NestedArray.ndim"], [2125, "ivy.nested_array.nested_array.NestedArray.ndim"]], "nested_array() (ivy.nested_array.nested_array.nestedarray class method)": [[2124, "ivy.nested_array.nested_array.NestedArray.nested_array"], [2125, "ivy.nested_array.nested_array.NestedArray.nested_array"]], "reshape() (ivy.nested_array.nested_array.nestedarray method)": [[2124, "ivy.nested_array.nested_array.NestedArray.reshape"], [2125, "ivy.nested_array.nested_array.NestedArray.reshape"]], "shape (ivy.nested_array.nested_array.nestedarray property)": [[2124, "ivy.nested_array.nested_array.NestedArray.shape"], [2125, "ivy.nested_array.nested_array.NestedArray.shape"]], "unbind() (ivy.nested_array.nested_array.nestedarray method)": [[2124, "ivy.nested_array.nested_array.NestedArray.unbind"], [2125, "ivy.nested_array.nested_array.NestedArray.unbind"]], "ivy.stateful": [[2138, "module-ivy.stateful"]], "geglu (class in ivy.stateful.activations)": [[2139, "ivy.stateful.activations.GEGLU"], [2140, "ivy.stateful.activations.GEGLU"]], "gelu (class in ivy.stateful.activations)": [[2139, "ivy.stateful.activations.GELU"], [2141, "ivy.stateful.activations.GELU"]], "__init__() (ivy.stateful.activations.geglu method)": [[2139, "ivy.stateful.activations.GEGLU.__init__"], [2140, "ivy.stateful.activations.GEGLU.__init__"]], "__init__() (ivy.stateful.activations.gelu method)": [[2139, "ivy.stateful.activations.GELU.__init__"], [2141, "ivy.stateful.activations.GELU.__init__"]], "ivy.stateful.activations": [[2139, "module-ivy.stateful.activations"]], "moduleconverters (class in ivy.stateful.converters)": [[2142, "ivy.stateful.converters.ModuleConverters"], [2143, "ivy.stateful.converters.ModuleConverters"]], "mytfmodule (class in ivy.stateful.converters)": [[2142, "ivy.stateful.converters.MyTFModule"], [2144, "ivy.stateful.converters.MyTFModule"]], "mytorchmodule (class in ivy.stateful.converters)": [[2142, "ivy.stateful.converters.MyTorchModule"], [2145, "ivy.stateful.converters.MyTorchModule"]], "__init__() (ivy.stateful.converters.mytfmodule method)": [[2142, "ivy.stateful.converters.MyTFModule.__init__"], [2144, "ivy.stateful.converters.MyTFModule.__init__"]], "__init__() (ivy.stateful.converters.mytorchmodule method)": [[2142, "ivy.stateful.converters.MyTorchModule.__init__"], [2145, "ivy.stateful.converters.MyTorchModule.__init__"]], "call() (ivy.stateful.converters.mytfmodule method)": [[2142, "ivy.stateful.converters.MyTFModule.call"], [2144, "ivy.stateful.converters.MyTFModule.call"]], "forward() (ivy.stateful.converters.mytorchmodule method)": [[2142, "ivy.stateful.converters.MyTorchModule.forward"], [2145, "ivy.stateful.converters.MyTorchModule.forward"]], "from_haiku_module() (ivy.stateful.converters.moduleconverters static method)": [[2142, "ivy.stateful.converters.ModuleConverters.from_haiku_module"], [2143, "ivy.stateful.converters.ModuleConverters.from_haiku_module"]], "from_keras_module() (ivy.stateful.converters.moduleconverters static method)": [[2142, "ivy.stateful.converters.ModuleConverters.from_keras_module"], [2143, "ivy.stateful.converters.ModuleConverters.from_keras_module"]], "from_torch_module() (ivy.stateful.converters.moduleconverters static method)": [[2142, "ivy.stateful.converters.ModuleConverters.from_torch_module"], [2143, "ivy.stateful.converters.ModuleConverters.from_torch_module"]], "ivy.stateful.converters": [[2142, "module-ivy.stateful.converters"]], "to_haiku_module() (ivy.stateful.converters.moduleconverters method)": [[2142, "ivy.stateful.converters.ModuleConverters.to_haiku_module"], [2143, "ivy.stateful.converters.ModuleConverters.to_haiku_module"]], "to_ivy_module() (in module ivy.stateful.converters)": [[2142, "ivy.stateful.converters.to_ivy_module"], [2146, "ivy.stateful.converters.to_ivy_module"]], "to_keras_module() (ivy.stateful.converters.moduleconverters method)": [[2142, "ivy.stateful.converters.ModuleConverters.to_keras_module"], [2143, "ivy.stateful.converters.ModuleConverters.to_keras_module"]], "to_torch_module() (ivy.stateful.converters.moduleconverters method)": [[2142, "ivy.stateful.converters.ModuleConverters.to_torch_module"], [2143, "ivy.stateful.converters.ModuleConverters.to_torch_module"]], "training (ivy.stateful.converters.mytorchmodule attribute)": [[2142, "ivy.stateful.converters.MyTorchModule.training"], [2145, "ivy.stateful.converters.MyTorchModule.training"]], "modulehelpers (class in ivy.stateful.helpers)": [[2147, "ivy.stateful.helpers.ModuleHelpers"], [2148, "ivy.stateful.helpers.ModuleHelpers"]], "check_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"], [2148, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"]], "get_mod_key() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"], [2148, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"]], "ivy.stateful.helpers": [[2147, "module-ivy.stateful.helpers"]], "mod_depth() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.mod_depth"], [2148, "ivy.stateful.helpers.ModuleHelpers.mod_depth"]], "mod_height() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.mod_height"], [2148, "ivy.stateful.helpers.ModuleHelpers.mod_height"]], "mod_with_top_mod_key_chain() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"], [2148, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"]], "show_mod_in_top_mod() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"], [2148, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"]], "show_structure() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.show_structure"], [2148, "ivy.stateful.helpers.ModuleHelpers.show_structure"]], "show_v_in_top_v() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"], [2148, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"]], "sub_mods() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.sub_mods"], [2148, "ivy.stateful.helpers.ModuleHelpers.sub_mods"]], "track_submod_call_order() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"], [2148, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"]], "track_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"], [2148, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"]], "v_with_top_v_key_chains() (ivy.stateful.helpers.modulehelpers method)": [[2147, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"], [2148, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"]], "constant (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.Constant"], [2150, "ivy.stateful.initializers.Constant"]], "firstlayersiren (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.FirstLayerSiren"], [2151, "ivy.stateful.initializers.FirstLayerSiren"]], "glorotuniform (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.GlorotUniform"], [2152, "ivy.stateful.initializers.GlorotUniform"]], "initializer (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.Initializer"], [2153, "ivy.stateful.initializers.Initializer"]], "kaimingnormal (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.KaimingNormal"], [2154, "ivy.stateful.initializers.KaimingNormal"]], "ones (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.Ones"], [2155, "ivy.stateful.initializers.Ones"]], "siren (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.Siren"], [2156, "ivy.stateful.initializers.Siren"]], "uniform (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.Uniform"], [2157, "ivy.stateful.initializers.Uniform"]], "zeros (class in ivy.stateful.initializers)": [[2149, "ivy.stateful.initializers.Zeros"], [2158, "ivy.stateful.initializers.Zeros"]], "__init__() (ivy.stateful.initializers.constant method)": [[2149, "ivy.stateful.initializers.Constant.__init__"], [2150, "ivy.stateful.initializers.Constant.__init__"]], "__init__() (ivy.stateful.initializers.firstlayersiren method)": [[2149, "ivy.stateful.initializers.FirstLayerSiren.__init__"], [2151, "ivy.stateful.initializers.FirstLayerSiren.__init__"]], "__init__() (ivy.stateful.initializers.glorotuniform method)": [[2149, "ivy.stateful.initializers.GlorotUniform.__init__"], [2152, "ivy.stateful.initializers.GlorotUniform.__init__"]], "__init__() (ivy.stateful.initializers.kaimingnormal method)": [[2149, "ivy.stateful.initializers.KaimingNormal.__init__"], [2154, "ivy.stateful.initializers.KaimingNormal.__init__"]], "__init__() (ivy.stateful.initializers.ones method)": [[2149, "ivy.stateful.initializers.Ones.__init__"], [2155, "ivy.stateful.initializers.Ones.__init__"]], "__init__() (ivy.stateful.initializers.siren method)": [[2149, "ivy.stateful.initializers.Siren.__init__"], [2156, "ivy.stateful.initializers.Siren.__init__"]], "__init__() (ivy.stateful.initializers.uniform method)": [[2149, "ivy.stateful.initializers.Uniform.__init__"], [2157, "ivy.stateful.initializers.Uniform.__init__"]], "__init__() (ivy.stateful.initializers.zeros method)": [[2149, "ivy.stateful.initializers.Zeros.__init__"], [2158, "ivy.stateful.initializers.Zeros.__init__"]], "create_variables() (ivy.stateful.initializers.constant method)": [[2149, "ivy.stateful.initializers.Constant.create_variables"], [2150, "ivy.stateful.initializers.Constant.create_variables"]], "create_variables() (ivy.stateful.initializers.initializer method)": [[2149, "ivy.stateful.initializers.Initializer.create_variables"], [2153, "ivy.stateful.initializers.Initializer.create_variables"]], "create_variables() (ivy.stateful.initializers.kaimingnormal method)": [[2149, "ivy.stateful.initializers.KaimingNormal.create_variables"], [2154, "ivy.stateful.initializers.KaimingNormal.create_variables"]], "create_variables() (ivy.stateful.initializers.uniform method)": [[2149, "ivy.stateful.initializers.Uniform.create_variables"], [2157, "ivy.stateful.initializers.Uniform.create_variables"]], "ivy.stateful.initializers": [[2149, "module-ivy.stateful.initializers"]], "conv1d (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Conv1D"], [2160, "ivy.stateful.layers.Conv1D"]], "conv1dtranspose (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Conv1DTranspose"], [2161, "ivy.stateful.layers.Conv1DTranspose"]], "conv2d (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Conv2D"], [2162, "ivy.stateful.layers.Conv2D"]], "conv2dtranspose (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Conv2DTranspose"], [2163, "ivy.stateful.layers.Conv2DTranspose"]], "conv3d (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Conv3D"], [2164, "ivy.stateful.layers.Conv3D"]], "conv3dtranspose (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Conv3DTranspose"], [2165, "ivy.stateful.layers.Conv3DTranspose"]], "depthwiseconv2d (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.DepthwiseConv2D"], [2166, "ivy.stateful.layers.DepthwiseConv2D"]], "dropout (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Dropout"], [2167, "ivy.stateful.layers.Dropout"]], "lstm (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.LSTM"], [2168, "ivy.stateful.layers.LSTM"]], "linear (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.Linear"], [2169, "ivy.stateful.layers.Linear"]], "multiheadattention (class in ivy.stateful.layers)": [[2159, "ivy.stateful.layers.MultiHeadAttention"], [2170, "ivy.stateful.layers.MultiHeadAttention"]], "__init__() (ivy.stateful.layers.conv1d method)": [[2159, "ivy.stateful.layers.Conv1D.__init__"], [2160, "ivy.stateful.layers.Conv1D.__init__"]], "__init__() (ivy.stateful.layers.conv1dtranspose method)": [[2159, "ivy.stateful.layers.Conv1DTranspose.__init__"], [2161, "ivy.stateful.layers.Conv1DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv2d method)": [[2159, "ivy.stateful.layers.Conv2D.__init__"], [2162, "ivy.stateful.layers.Conv2D.__init__"]], "__init__() (ivy.stateful.layers.conv2dtranspose method)": [[2159, "ivy.stateful.layers.Conv2DTranspose.__init__"], [2163, "ivy.stateful.layers.Conv2DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv3d method)": [[2159, "ivy.stateful.layers.Conv3D.__init__"], [2164, "ivy.stateful.layers.Conv3D.__init__"]], "__init__() (ivy.stateful.layers.conv3dtranspose method)": [[2159, "ivy.stateful.layers.Conv3DTranspose.__init__"], [2165, "ivy.stateful.layers.Conv3DTranspose.__init__"]], "__init__() (ivy.stateful.layers.depthwiseconv2d method)": [[2159, "ivy.stateful.layers.DepthwiseConv2D.__init__"], [2166, "ivy.stateful.layers.DepthwiseConv2D.__init__"]], "__init__() (ivy.stateful.layers.dropout method)": [[2159, "ivy.stateful.layers.Dropout.__init__"], [2167, "ivy.stateful.layers.Dropout.__init__"]], "__init__() (ivy.stateful.layers.lstm method)": [[2159, "ivy.stateful.layers.LSTM.__init__"], [2168, "ivy.stateful.layers.LSTM.__init__"]], "__init__() (ivy.stateful.layers.linear method)": [[2159, "ivy.stateful.layers.Linear.__init__"], [2169, "ivy.stateful.layers.Linear.__init__"]], "__init__() (ivy.stateful.layers.multiheadattention method)": [[2159, "ivy.stateful.layers.MultiHeadAttention.__init__"], [2170, "ivy.stateful.layers.MultiHeadAttention.__init__"]], "get_initial_state() (ivy.stateful.layers.lstm method)": [[2159, "ivy.stateful.layers.LSTM.get_initial_state"], [2168, "ivy.stateful.layers.LSTM.get_initial_state"]], "ivy.stateful.layers": [[2159, "module-ivy.stateful.layers"]], "module (class in ivy.stateful.module)": [[2171, "ivy.stateful.module.Module"], [2172, "ivy.stateful.module.Module"]], "__call__() (ivy.stateful.module.module method)": [[2171, "ivy.stateful.module.Module.__call__"], [2172, "ivy.stateful.module.Module.__call__"]], "__init__() (ivy.stateful.module.module method)": [[2171, "ivy.stateful.module.Module.__init__"], [2172, "ivy.stateful.module.Module.__init__"]], "build() (ivy.stateful.module.module method)": [[2171, "ivy.stateful.module.Module.build"], [2172, "ivy.stateful.module.Module.build"]], "build_mode (ivy.stateful.module.module property)": [[2171, "ivy.stateful.module.Module.build_mode"], [2172, "ivy.stateful.module.Module.build_mode"]], "built_ (ivy.stateful.module.module property)": [[2171, "ivy.stateful.module.Module.built_"], [2172, "ivy.stateful.module.Module.built_"]], "ivy.stateful.module": [[2171, "module-ivy.stateful.module"]], "save_weights() (ivy.stateful.module.module method)": [[2171, "ivy.stateful.module.Module.save_weights"], [2172, "ivy.stateful.module.Module.save_weights"]], "layernorm (class in ivy.stateful.norms)": [[2173, "ivy.stateful.norms.LayerNorm"], [2174, "ivy.stateful.norms.LayerNorm"]], "__init__() (ivy.stateful.norms.layernorm method)": [[2173, "ivy.stateful.norms.LayerNorm.__init__"], [2174, "ivy.stateful.norms.LayerNorm.__init__"]], "ivy.stateful.norms": [[2173, "module-ivy.stateful.norms"]], "adam (class in ivy.stateful.optimizers)": [[2175, "ivy.stateful.optimizers.Adam"], [2176, "ivy.stateful.optimizers.Adam"]], "lamb (class in ivy.stateful.optimizers)": [[2175, "ivy.stateful.optimizers.LAMB"], [2177, "ivy.stateful.optimizers.LAMB"]], "lars (class in ivy.stateful.optimizers)": [[2175, "ivy.stateful.optimizers.LARS"], [2178, "ivy.stateful.optimizers.LARS"]], "optimizer (class in ivy.stateful.optimizers)": [[2175, "ivy.stateful.optimizers.Optimizer"], [2179, "ivy.stateful.optimizers.Optimizer"]], "sgd (class in ivy.stateful.optimizers)": [[2175, "ivy.stateful.optimizers.SGD"], [2180, "ivy.stateful.optimizers.SGD"]], "__init__() (ivy.stateful.optimizers.adam method)": [[2175, "ivy.stateful.optimizers.Adam.__init__"], [2176, "ivy.stateful.optimizers.Adam.__init__"]], "__init__() (ivy.stateful.optimizers.lamb method)": [[2175, "ivy.stateful.optimizers.LAMB.__init__"], [2177, "ivy.stateful.optimizers.LAMB.__init__"]], "__init__() (ivy.stateful.optimizers.lars method)": [[2175, "ivy.stateful.optimizers.LARS.__init__"], [2178, "ivy.stateful.optimizers.LARS.__init__"]], "__init__() (ivy.stateful.optimizers.optimizer method)": [[2175, "ivy.stateful.optimizers.Optimizer.__init__"], [2179, "ivy.stateful.optimizers.Optimizer.__init__"]], "__init__() (ivy.stateful.optimizers.sgd method)": [[2175, "ivy.stateful.optimizers.SGD.__init__"], [2180, "ivy.stateful.optimizers.SGD.__init__"]], "ivy.stateful.optimizers": [[2175, "module-ivy.stateful.optimizers"]], "set_state() (ivy.stateful.optimizers.adam method)": [[2175, "ivy.stateful.optimizers.Adam.set_state"], [2176, "ivy.stateful.optimizers.Adam.set_state"]], "set_state() (ivy.stateful.optimizers.lamb method)": [[2175, "ivy.stateful.optimizers.LAMB.set_state"], [2177, "ivy.stateful.optimizers.LAMB.set_state"]], "set_state() (ivy.stateful.optimizers.lars method)": [[2175, "ivy.stateful.optimizers.LARS.set_state"], [2178, "ivy.stateful.optimizers.LARS.set_state"]], "set_state() (ivy.stateful.optimizers.optimizer method)": [[2175, "ivy.stateful.optimizers.Optimizer.set_state"], [2179, "ivy.stateful.optimizers.Optimizer.set_state"]], "set_state() (ivy.stateful.optimizers.sgd method)": [[2175, "ivy.stateful.optimizers.SGD.set_state"], [2180, "ivy.stateful.optimizers.SGD.set_state"]], "state (ivy.stateful.optimizers.adam property)": [[2175, "ivy.stateful.optimizers.Adam.state"], [2176, "ivy.stateful.optimizers.Adam.state"]], "state (ivy.stateful.optimizers.lamb property)": [[2175, "ivy.stateful.optimizers.LAMB.state"], [2177, "ivy.stateful.optimizers.LAMB.state"]], "state (ivy.stateful.optimizers.lars property)": [[2175, "ivy.stateful.optimizers.LARS.state"], [2178, "ivy.stateful.optimizers.LARS.state"]], "state (ivy.stateful.optimizers.sgd property)": [[2175, "ivy.stateful.optimizers.SGD.state"], [2180, "ivy.stateful.optimizers.SGD.state"]], "step() (ivy.stateful.optimizers.optimizer method)": [[2175, "ivy.stateful.optimizers.Optimizer.step"], [2179, "ivy.stateful.optimizers.Optimizer.step"]], "sequential (class in ivy.stateful.sequential)": [[2181, "ivy.stateful.sequential.Sequential"], [2182, "ivy.stateful.sequential.Sequential"]], "__init__() (ivy.stateful.sequential.sequential method)": [[2181, "ivy.stateful.sequential.Sequential.__init__"], [2182, "ivy.stateful.sequential.Sequential.__init__"]], "ivy.stateful.sequential": [[2181, "module-ivy.stateful.sequential"]], "assert_all_close() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"], [2185, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"]], "assert_same_type_and_shape() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"], [2186, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"]], "check_unsupported_device() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"], [2187, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"]], "check_unsupported_device_and_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"], [2188, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"]], "check_unsupported_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"], [2189, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"]], "ivy_tests.test_ivy.helpers.assertions": [[2184, "module-ivy_tests.test_ivy.helpers.assertions"]], "test_unsupported_function() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"], [2190, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"]], "value_test() (in module ivy_tests.test_ivy.helpers.assertions)": [[2184, "ivy_tests.test_ivy.helpers.assertions.value_test"], [2191, "ivy_tests.test_ivy.helpers.assertions.value_test"]], "available_frameworks() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[2192, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"], [2193, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"]], "ground_truth() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[2192, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"], [2194, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2192, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "args_to_container() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"], [2196, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"]], "as_cont() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.as_cont"], [2197, "ivy_tests.test_ivy.helpers.function_testing.as_cont"]], "as_lists() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.as_lists"], [2198, "ivy_tests.test_ivy.helpers.function_testing.as_lists"]], "convtrue() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.convtrue"], [2199, "ivy_tests.test_ivy.helpers.function_testing.convtrue"]], "create_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"], [2200, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"]], "empty_func() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.empty_func"], [2201, "ivy_tests.test_ivy.helpers.function_testing.empty_func"]], "flatten() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.flatten"], [2202, "ivy_tests.test_ivy.helpers.function_testing.flatten"]], "flatten_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"], [2203, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"]], "flatten_fw_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"], [2204, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"]], "framework_comparator() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"], [2205, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"]], "get_frontend_ret() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"], [2206, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"]], "get_ret_and_flattened_np_array() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"], [2207, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"]], "gradient_incompatible_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"], [2208, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"]], "gradient_test() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"], [2209, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"]], "gradient_unsupported_dtypes() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"], [2210, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"]], "ivy_tests.test_ivy.helpers.function_testing": [[2195, "module-ivy_tests.test_ivy.helpers.function_testing"]], "kwargs_to_args_n_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"], [2211, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"]], "make_json_pickable() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"], [2212, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"]], "test_frontend_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"], [2213, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"]], "test_frontend_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"], [2214, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"]], "test_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.test_function"], [2215, "ivy_tests.test_ivy.helpers.function_testing.test_function"]], "test_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.test_method"], [2216, "ivy_tests.test_ivy.helpers.function_testing.test_method"]], "var_fn() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2195, "ivy_tests.test_ivy.helpers.function_testing.var_fn"], [2217, "ivy_tests.test_ivy.helpers.function_testing.var_fn"]], "interruptedtest": [[2218, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "testdata (class in ivy_tests.test_ivy.helpers.globals)": [[2218, "ivy_tests.test_ivy.helpers.globals.TestData"], [2220, "ivy_tests.test_ivy.helpers.globals.TestData"]], "__init__() (ivy_tests.test_ivy.helpers.globals.interruptedtest method)": [[2218, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"], [2219, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.globals.testdata method)": [[2218, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"], [2220, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"]], "fn_name (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2218, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"], [2220, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"]], "fn_tree (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2218, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"], [2220, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"]], "ivy_tests.test_ivy.helpers.globals": [[2218, "module-ivy_tests.test_ivy.helpers.globals"]], "remove_all_current_framework() (in module ivy_tests.test_ivy.helpers.globals)": [[2218, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"], [2221, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"]], "setup_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2218, "ivy_tests.test_ivy.helpers.globals.setup_api_test"], [2222, "ivy_tests.test_ivy.helpers.globals.setup_api_test"]], "setup_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2218, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"], [2223, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"]], "supported_device_dtypes (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2218, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"], [2220, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"]], "teardown_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2218, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"], [2224, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"]], "teardown_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2218, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"], [2225, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"]], "test_fn (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2218, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"], [2220, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"]], "interruptedtest (class in ivy_tests.test_ivy.helpers.globals)": [[2219, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2226, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "array_and_broadcastable_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"], [2228, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"]], "array_bools() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"], [2229, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"]], "array_indices_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"], [2230, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"]], "array_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"], [2231, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"]], "arrays_and_axes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"], [2232, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"]], "arrays_for_pooling() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"], [2233, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"]], "broadcast_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"], [2234, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"]], "dtype_and_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"], [2235, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"]], "dtype_values_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"], [2236, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2227, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "list_of_size() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_size"], [2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_size"]], "lists() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"], [2238, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"]], "mutually_broadcastable_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"], [2239, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"]], "prod() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2227, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"], [2240, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"]], "array_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2241, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"], [2242, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"]], "get_castable_dtype() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2241, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"], [2243, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"]], "get_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2241, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"], [2244, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2241, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "apply_safety_factor() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"], [2246, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"]], "embedding_helper() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.embedding_helper"], [2247, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.embedding_helper"]], "get_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"], [2248, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"]], "get_bounds() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"], [2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"]], "get_mean_std() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"], [2250, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"]], "get_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"], [2251, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2245, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "matrix_is_stable() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"], [2252, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"]], "reshape_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"], [2253, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"]], "subsets() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"], [2254, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"]], "x_and_filters() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"], [2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"]], "floats() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2256, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"], [2257, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"]], "ints() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2256, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"], [2258, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2256, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "number() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2256, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"], [2259, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"]], "frontendmethoddata (class in ivy_tests.test_ivy.helpers.structs)": [[2260, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"], [2261, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"]], "__init__() (ivy_tests.test_ivy.helpers.structs.frontendmethoddata method)": [[2260, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"], [2261, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"]], "framework_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2260, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"], [2261, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"]], "init_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2260, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"], [2261, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"]], "ivy_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2260, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"], [2261, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"]], "ivy_tests.test_ivy.helpers.structs": [[2260, "module-ivy_tests.test_ivy.helpers.structs"]], "method_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2260, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"], [2261, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"]], "frontendfunctiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"], [2263, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"]], "frontendmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"], [2264, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"]], "functiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"], [2265, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"]], "methodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"], [2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"], [2263, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"], [2264, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"], [2265, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"], [2266, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"]], "build_flag() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"], [2267, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"]], "frontend_function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"], [2268, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"]], "frontend_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"], [2269, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"]], "function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"], [2270, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2262, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2262, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"], [2271, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"]], "handle_frontend_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"], [2273, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"]], "handle_frontend_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"], [2274, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"]], "handle_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"], [2275, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"]], "handle_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"], [2276, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2272, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "num_positional_args() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"], [2277, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"]], "num_positional_args_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"], [2278, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"]], "seed() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2272, "ivy_tests.test_ivy.helpers.testing_helpers.seed"], [2279, "ivy_tests.test_ivy.helpers.testing_helpers.seed"]], "ivy.utils._importlib": [[2280, "module-ivy.utils._importlib"]], "ivy.utils.backend": [[2281, "module-ivy.utils.backend"]], "importtransformer (class in ivy.utils.backend.ast_helpers)": [[2282, "ivy.utils.backend.ast_helpers.ImportTransformer"], [2283, "ivy.utils.backend.ast_helpers.ImportTransformer"]], "ivyloader (class in ivy.utils.backend.ast_helpers)": [[2282, "ivy.utils.backend.ast_helpers.IvyLoader"], [2284, "ivy.utils.backend.ast_helpers.IvyLoader"]], "ivypathfinder (class in ivy.utils.backend.ast_helpers)": [[2282, "ivy.utils.backend.ast_helpers.IvyPathFinder"], [2285, "ivy.utils.backend.ast_helpers.IvyPathFinder"]], "__init__() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2282, "ivy.utils.backend.ast_helpers.ImportTransformer.__init__"], [2283, "ivy.utils.backend.ast_helpers.ImportTransformer.__init__"]], "__init__() (ivy.utils.backend.ast_helpers.ivyloader method)": [[2282, "ivy.utils.backend.ast_helpers.IvyLoader.__init__"], [2284, "ivy.utils.backend.ast_helpers.IvyLoader.__init__"]], "exec_module() (ivy.utils.backend.ast_helpers.ivyloader method)": [[2282, "ivy.utils.backend.ast_helpers.IvyLoader.exec_module"], [2284, "ivy.utils.backend.ast_helpers.IvyLoader.exec_module"]], "find_spec() (ivy.utils.backend.ast_helpers.ivypathfinder method)": [[2282, "ivy.utils.backend.ast_helpers.IvyPathFinder.find_spec"], [2285, "ivy.utils.backend.ast_helpers.IvyPathFinder.find_spec"]], "impersonate_import() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2282, "ivy.utils.backend.ast_helpers.ImportTransformer.impersonate_import"], [2283, "ivy.utils.backend.ast_helpers.ImportTransformer.impersonate_import"]], "ivy.utils.backend.ast_helpers": [[2282, "module-ivy.utils.backend.ast_helpers"]], "visit_import() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2282, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_Import"], [2283, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_Import"]], "visit_importfrom() (ivy.utils.backend.ast_helpers.importtransformer method)": [[2282, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_ImportFrom"], [2283, "ivy.utils.backend.ast_helpers.ImportTransformer.visit_ImportFrom"]], "contextmanager (class in ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.ContextManager"], [2287, "ivy.utils.backend.handler.ContextManager"]], "__init__() (ivy.utils.backend.handler.contextmanager method)": [[2286, "ivy.utils.backend.handler.ContextManager.__init__"], [2287, "ivy.utils.backend.handler.ContextManager.__init__"]], "choose_random_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.choose_random_backend"], [2288, "ivy.utils.backend.handler.choose_random_backend"]], "clear_backend_stack() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.clear_backend_stack"], [2289, "ivy.utils.backend.handler.clear_backend_stack"]], "convert_from_numpy_to_target_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.convert_from_numpy_to_target_backend"], [2290, "ivy.utils.backend.handler.convert_from_numpy_to_target_backend"]], "convert_from_source_backend_to_numpy() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.convert_from_source_backend_to_numpy"], [2291, "ivy.utils.backend.handler.convert_from_source_backend_to_numpy"]], "current_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.current_backend"], [2292, "ivy.utils.backend.handler.current_backend"]], "fn_name_from_version_specific_fn_name() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.fn_name_from_version_specific_fn_name"], [2293, "ivy.utils.backend.handler.fn_name_from_version_specific_fn_name"]], "get_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.get_backend"], [2294, "ivy.utils.backend.handler.get_backend"]], "ivy.utils.backend.handler": [[2286, "module-ivy.utils.backend.handler"]], "prevent_access_locally() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.prevent_access_locally"], [2295, "ivy.utils.backend.handler.prevent_access_locally"]], "set_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.set_backend"], [2296, "ivy.utils.backend.handler.set_backend"]], "set_backend_to_specific_version() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.set_backend_to_specific_version"], [2297, "ivy.utils.backend.handler.set_backend_to_specific_version"]], "set_jax_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.set_jax_backend"], [2298, "ivy.utils.backend.handler.set_jax_backend"]], "set_numpy_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.set_numpy_backend"], [2299, "ivy.utils.backend.handler.set_numpy_backend"]], "set_tensorflow_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.set_tensorflow_backend"], [2300, "ivy.utils.backend.handler.set_tensorflow_backend"]], "set_torch_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.set_torch_backend"], [2301, "ivy.utils.backend.handler.set_torch_backend"]], "unset_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.unset_backend"], [2302, "ivy.utils.backend.handler.unset_backend"]], "with_backend() (in module ivy.utils.backend.handler)": [[2286, "ivy.utils.backend.handler.with_backend"], [2303, "ivy.utils.backend.handler.with_backend"]], "import_module() (in module ivy.utils.dynamic_import)": [[2304, "ivy.utils.dynamic_import.import_module"], [2305, "ivy.utils.dynamic_import.import_module"]], "ivy.utils.dynamic_import": [[2304, "module-ivy.utils.dynamic_import"]], "cprint() (in module ivy.verbosity)": [[2306, "ivy.verbosity.cprint"], [2307, "ivy.verbosity.cprint"]], "ivy.verbosity": [[2306, "module-ivy.verbosity"]]}})