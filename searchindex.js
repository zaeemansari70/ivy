Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_container", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_container.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Activations", "ArrayWithActivations", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.Container.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 122, 123, 124, 125, 129, 130, 132, 133, 134, 144, 145, 146, 243, 285, 288, 315, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 605, 612, 649, 655, 686, 688, 690, 692, 722, 889, 891, 901, 925, 928, 994, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 176, 181, 182, 187, 190, 195, 196, 201, 204, 207, 212, 217, 220, 225, 230, 235, 238, 243, 247, 248, 249, 254, 259, 264, 269, 270, 271, 272, 273, 277, 278, 283, 284, 285, 290, 291, 296, 301, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 375, 379, 384, 388, 393, 397, 401, 405, 409, 413, 417, 421, 425, 429, 433, 437, 441, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 535, 536, 541, 545, 549, 553, 557, 561, 565, 570, 574, 578, 582, 586, 591, 596, 601, 605, 606, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685, 686, 688, 693, 697, 698, 702, 706, 710, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 743, 746, 749, 752, 755, 758, 761, 765, 768, 769, 772, 775, 778, 781, 784, 785, 788, 791, 794, 797, 800, 803, 806, 809, 810, 815, 820, 825, 826, 831, 835, 839, 843, 847, 851, 855, 859, 864, 865, 869, 873, 877, 881, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 913, 914, 915, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 937, 938, 939, 940, 945, 950, 951, 955, 959, 963, 967, 971, 975, 979, 983, 984, 989, 994, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 994], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 65, 66, 69, 70, 71, 72, 73, 110, 111, 118, 119, 120, 122, 126, 127, 129, 130, 132, 134, 145, 146, 605, 656, 913, 914, 918, 994, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1038, 1039], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 122, 123, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 998, 999, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042], "base": [0, 19, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 118, 121, 123, 129, 145, 172, 204, 205, 206, 243, 315, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 365, 454, 457, 498, 501, 502, 505, 506, 509, 510, 513, 553, 556, 605, 640, 663, 672, 686, 930, 931, 932, 936, 938, 950, 951, 954, 1002, 1003, 1004, 1007, 1009, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "object": [0, 69, 70, 71, 72, 73, 118, 131, 134, 172, 190, 193, 243, 278, 281, 315, 360, 686, 889, 892, 894, 896, 897, 898, 903, 904, 905, 906, 913, 924, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1029], "__init__": [0, 1, 4, 5, 69, 70, 71, 72, 73, 113, 120, 124, 129, 131, 132, 133, 134, 243, 244, 245, 246, 315, 316, 323, 324, 325, 326, 327, 328, 329, 330, 686, 687, 913, 914, 918, 994, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "choose_random_backend": 0, "exclud": [0, 2, 116, 129, 172, 173, 174, 913, 919, 921], "none": [0, 2, 5, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 118, 119, 123, 124, 125, 126, 127, 129, 131, 133, 134, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 275, 278, 280, 281, 282, 285, 287, 288, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 314, 315, 324, 325, 333, 334, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 617, 618, 619, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 643, 645, 646, 650, 656, 658, 661, 662, 663, 664, 666, 671, 672, 676, 677, 679, 682, 683, 686, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 784, 785, 786, 787, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 895, 900, 901, 902, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 932, 933, 935, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 1005, 1006, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "clear_backend_stack": 0, "current_backend": [0, 71, 72, 113, 119], "arg": [0, 4, 21, 24, 25, 26, 69, 70, 129, 131, 133, 315, 324, 339, 343, 347, 359, 605, 662, 1005, 1006, 1028, 1029], "kwarg": [0, 4, 24, 25, 26, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 129, 131, 133, 315, 324, 339, 343, 347, 605, 655, 1005, 1006, 1028, 1029], "return": [0, 4, 5, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 314, 315, 324, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 664, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 899, 900, 901, 902, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 999, 1005, 1006, 1016, 1025, 1026, 1032, 1036], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 69, 70, 71, 72, 73, 119, 125, 129, 134, 145, 146, 243, 283, 284, 290, 314, 315, 324, 348, 349, 353, 355, 605, 639, 646, 650, 657, 659, 669, 686, 723, 889, 890, 899, 900, 994], "prioriti": [0, 4, 19, 69, 70, 126], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 24, 25, 26, 27, 28, 69, 70, 71, 72, 73, 112, 113, 115, 116, 118, 119, 120, 122, 123, 127, 129, 131, 132, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 302, 305, 315, 324, 325, 339, 343, 347, 365, 366, 369, 379, 382, 384, 387, 388, 391, 429, 432, 462, 465, 534, 545, 548, 565, 568, 578, 581, 582, 585, 591, 595, 605, 611, 612, 616, 626, 633, 655, 662, 724, 727, 736, 737, 738, 741, 749, 751, 825, 859, 862, 889, 895, 907, 908, 911, 930, 932, 936, 950, 955, 958, 975, 978, 983, 984, 987, 997, 999, 1005, 1006, 1028, 1029], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 24, 27, 28, 69, 70, 112, 114, 115, 116, 118, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 145, 146, 171, 172, 207, 210, 225, 229, 230, 234, 243, 283, 284, 315, 334, 358, 365, 557, 560, 605, 614, 686, 693, 695, 698, 700, 706, 708, 714, 716, 737, 788, 790, 791, 793, 889, 895, 901, 950, 971, 974, 979, 982, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "paramet": [0, 4, 5, 24, 25, 26, 27, 28, 65, 66, 69, 70, 71, 72, 73, 110, 111, 113, 115, 118, 131, 132, 145, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 247, 248, 249, 252, 254, 257, 259, 262, 264, 267, 269, 270, 271, 272, 273, 276, 277, 278, 281, 283, 284, 285, 288, 290, 291, 294, 296, 299, 301, 302, 305, 307, 308, 309, 310, 314, 315, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 662, 663, 664, 665, 667, 668, 670, 671, 672, 673, 675, 676, 680, 681, 682, 684, 685, 686, 688, 691, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 997, 999, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 65, 66, 69, 70, 71, 72, 73, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 145, 146, 172, 173, 174, 176, 179, 182, 185, 190, 193, 195, 196, 199, 207, 210, 212, 215, 220, 223, 238, 242, 243, 264, 267, 302, 305, 315, 324, 325, 334, 349, 353, 358, 359, 365, 470, 473, 578, 581, 605, 626, 633, 634, 637, 675, 686, 693, 695, 706, 708, 724, 732, 735, 737, 749, 751, 788, 790, 800, 802, 825, 843, 846, 855, 858, 865, 868, 885, 886, 887, 888, 889, 891, 901, 902, 913, 914, 915, 916, 918, 919, 921, 925, 929, 930, 931, 937, 950, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1000, 1005, 1006, 1016, 1024, 1027, 1032, 1036], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 69, 70, 71, 72, 73, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 145, 146, 157, 162, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 195, 196, 199, 201, 202, 204, 205, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 269, 273, 276, 278, 281, 285, 288, 290, 314, 315, 324, 325, 335, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 355, 357, 358, 359, 365, 557, 560, 605, 611, 623, 624, 626, 633, 634, 637, 639, 645, 649, 657, 658, 659, 661, 662, 684, 686, 693, 695, 697, 698, 700, 706, 708, 710, 712, 714, 716, 719, 721, 722, 724, 735, 737, 743, 745, 749, 751, 765, 767, 785, 787, 788, 790, 800, 802, 803, 805, 809, 815, 818, 820, 823, 825, 831, 834, 843, 846, 851, 854, 859, 862, 864, 869, 872, 889, 894, 895, 896, 897, 902, 903, 904, 905, 906, 913, 914, 915, 916, 919, 921, 925, 926, 927, 928, 929, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 997, 999, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 69, 70, 122, 123, 127, 131, 146, 605, 682, 994], "infer": [0, 4, 112, 120, 124, 125, 129, 134, 169, 170, 172, 173, 174, 176, 179, 182, 185, 195, 196, 199, 212, 215, 220, 223, 238, 242, 365, 470, 473, 605, 642, 668, 825, 855, 858], "when": [0, 4, 14, 15, 18, 19, 20, 69, 70, 71, 72, 73, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 146, 243, 249, 252, 315, 365, 379, 382, 458, 461, 553, 556, 605, 616, 649, 672, 809, 810, 813, 815, 818, 820, 823, 889, 900, 925, 926, 927, 929, 950, 955, 958, 963, 966, 971, 974, 979, 982, 994, 1028, 1029], "global": [0, 4, 5, 6, 12, 69, 70, 71, 72, 73, 119, 120, 124, 125, 129, 243, 270, 271, 272, 315, 324, 325, 357, 358, 359, 605, 640, 641, 660, 663, 664, 665, 671, 672, 686, 723, 907, 908, 911, 1030, 1031], "set": [0, 4, 5, 6, 12, 14, 17, 19, 24, 27, 28, 58, 69, 70, 103, 112, 113, 118, 119, 121, 122, 123, 124, 125, 126, 129, 131, 132, 315, 334, 344, 345, 356, 357, 358, 359, 365, 397, 400, 605, 606, 609, 663, 664, 665, 666, 667, 686, 693, 695, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 737, 743, 745, 765, 767, 769, 771, 778, 780, 785, 787, 889, 890, 899, 900, 901, 905, 906, 913, 923, 925, 926, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 971, 974, 979, 982, 1016, 1025, 1032, 1033, 1034, 1035, 1036, 1037], "ret": [0, 4, 5, 12, 24, 25, 26, 27, 28, 69, 70, 76, 77, 113, 115, 129, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 247, 248, 249, 252, 254, 257, 259, 262, 264, 267, 269, 273, 276, 277, 278, 281, 283, 284, 285, 288, 290, 291, 294, 296, 299, 301, 302, 305, 314, 315, 324, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 662, 668, 671, 672, 673, 675, 676, 680, 681, 684, 685, 686, 688, 691, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 899, 900, 901, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 997, 999, 1005, 1006, 1032, 1036], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 65, 66, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 157, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 195, 196, 199, 207, 210, 217, 218, 220, 223, 235, 237, 238, 242, 243, 249, 252, 264, 265, 266, 267, 268, 283, 284, 314, 315, 334, 335, 337, 349, 350, 351, 352, 353, 356, 358, 360, 362, 363, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 401, 404, 405, 408, 409, 412, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 613, 614, 622, 623, 630, 633, 634, 635, 636, 637, 638, 641, 652, 666, 668, 669, 670, 675, 676, 677, 678, 679, 680, 681, 683, 686, 688, 689, 690, 691, 692, 723, 724, 725, 727, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 751, 758, 760, 769, 771, 775, 777, 788, 790, 794, 796, 797, 799, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 872, 873, 876, 889, 892, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 971, 974, 975, 978, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 24, 27, 28, 69, 70, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 146, 172, 173, 174, 181, 182, 185, 187, 188, 195, 196, 199, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 302, 305, 315, 334, 358, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 522, 525, 526, 529, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 605, 649, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 723, 737, 738, 741, 743, 745, 765, 767, 769, 771, 778, 780, 781, 783, 785, 787, 788, 790, 800, 802, 803, 805, 809, 810, 813, 815, 818, 820, 823, 825, 839, 842, 843, 846, 859, 862, 864, 865, 868, 869, 872, 885, 886, 887, 889, 901, 902, 913, 918, 919, 921, 925, 926, 927, 928, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994], "import": [0, 4, 15, 20, 65, 66, 110, 111, 113, 115, 116, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 146, 315, 356, 994, 1000], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 69, 70, 114, 118, 120, 124, 125, 126, 129, 131, 134, 605, 676, 680, 950, 951, 954, 994], "np": [0, 4, 114, 118, 122, 124, 125, 126, 131, 132, 134, 994], "x": [0, 4, 12, 21, 24, 27, 28, 31, 32, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 113, 114, 115, 116, 118, 119, 120, 123, 126, 127, 129, 131, 132, 133, 134, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 172, 176, 179, 180, 182, 185, 186, 190, 193, 194, 196, 199, 200, 207, 210, 212, 215, 216, 220, 223, 224, 225, 226, 229, 230, 231, 234, 235, 237, 238, 239, 242, 243, 249, 252, 253, 259, 262, 263, 264, 265, 266, 267, 268, 273, 276, 315, 334, 335, 336, 337, 340, 341, 349, 353, 358, 360, 365, 366, 367, 368, 369, 370, 371, 374, 375, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 522, 525, 534, 535, 541, 544, 549, 552, 561, 564, 565, 566, 567, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 613, 614, 615, 617, 618, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 644, 645, 647, 648, 649, 651, 652, 653, 654, 658, 668, 670, 673, 675, 676, 677, 678, 679, 680, 681, 684, 685, 686, 697, 702, 704, 705, 719, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 765, 767, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 788, 790, 791, 793, 794, 796, 797, 799, 803, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 876, 877, 880, 881, 884, 889, 890, 892, 895, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 943, 944, 945, 948, 949, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1016, 1027], "arrai": [0, 4, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 146, 147, 155, 157, 158, 159, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 209, 210, 211, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 268, 273, 276, 278, 281, 285, 288, 291, 294, 296, 299, 302, 305, 310, 315, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 355, 359, 360, 365, 366, 368, 369, 370, 371, 374, 375, 378, 379, 381, 382, 383, 384, 387, 388, 390, 391, 392, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 431, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 567, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 604, 605, 606, 608, 609, 610, 613, 614, 615, 617, 618, 620, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 647, 648, 649, 651, 652, 654, 657, 658, 659, 661, 662, 666, 668, 670, 673, 675, 676, 677, 679, 680, 681, 683, 684, 685, 686, 688, 690, 691, 692, 693, 695, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 719, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 829, 830, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 861, 862, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 891, 892, 901, 902, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 997, 999, 1016, 1024, 1027], "2": [0, 4, 18, 19, 21, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 69, 70, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 114, 116, 118, 120, 123, 128, 129, 131, 132, 133, 134, 146, 157, 159, 160, 161, 162, 168, 171, 172, 195, 196, 199, 207, 210, 217, 218, 220, 223, 238, 242, 243, 249, 252, 264, 265, 266, 267, 268, 315, 334, 335, 337, 349, 351, 353, 360, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 392, 393, 396, 397, 400, 405, 408, 409, 412, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 510, 513, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 613, 614, 617, 618, 620, 623, 630, 633, 634, 635, 636, 637, 638, 652, 668, 670, 675, 686, 688, 689, 690, 691, 692, 724, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 750, 751, 758, 760, 761, 764, 765, 767, 769, 771, 775, 777, 778, 780, 781, 783, 788, 790, 794, 795, 796, 797, 799, 803, 804, 805, 809, 810, 811, 812, 813, 814, 815, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 889, 892, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994], "0": [0, 4, 19, 29, 30, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 129, 131, 132, 133, 134, 157, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 187, 188, 189, 201, 202, 204, 205, 206, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 249, 252, 264, 266, 267, 268, 278, 281, 315, 317, 320, 324, 327, 331, 334, 335, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 356, 358, 359, 363, 365, 366, 367, 369, 370, 371, 374, 375, 378, 379, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 396, 397, 400, 401, 404, 405, 408, 413, 416, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 463, 464, 465, 474, 477, 494, 497, 498, 501, 502, 505, 510, 513, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 613, 614, 617, 618, 620, 622, 623, 624, 630, 633, 634, 637, 638, 643, 652, 658, 661, 662, 668, 675, 676, 677, 678, 679, 680, 681, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 710, 711, 712, 713, 724, 725, 727, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 750, 751, 758, 760, 788, 790, 794, 796, 797, 798, 799, 803, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 859, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 876, 881, 883, 889, 892, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 943, 950, 951, 954, 955, 958, 959, 962, 971, 972, 973, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039], "print": [0, 4, 5, 6, 12, 18, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 65, 66, 69, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 116, 118, 123, 129, 131, 132, 133, 157, 159, 160, 161, 162, 163, 166, 168, 172, 195, 196, 199, 207, 210, 217, 218, 220, 223, 235, 237, 238, 242, 243, 249, 252, 264, 265, 266, 267, 268, 283, 284, 314, 315, 335, 349, 350, 351, 352, 353, 355, 358, 362, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 401, 404, 405, 408, 409, 412, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 613, 614, 622, 623, 630, 633, 634, 635, 636, 637, 638, 641, 659, 668, 670, 675, 676, 677, 678, 679, 680, 681, 686, 688, 689, 691, 692, 723, 724, 725, 727, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 751, 758, 760, 775, 777, 788, 790, 794, 796, 797, 799, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 839, 842, 843, 846, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 889, 892, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 971, 974, 975, 978, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994], "function": [0, 4, 5, 6, 14, 19, 21, 22, 23, 24, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 122, 126, 127, 128, 130, 131, 132, 133, 144, 145, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 185, 187, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 205, 207, 210, 212, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 230, 232, 234, 235, 237, 238, 240, 242, 243, 247, 248, 249, 252, 254, 257, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 281, 283, 284, 285, 288, 290, 291, 294, 296, 299, 301, 302, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 999, 1002, 1003, 1004, 1032, 1035, 1037], "py": [0, 4, 5, 19, 113, 114, 115, 118, 119, 120, 124, 125, 127, 129, 131, 133, 134, 913, 914, 918], "noqa": [0, 4, 5, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 494, 497, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 737, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 950, 955, 958], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 69, 70, 71, 72, 73, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 145, 157, 158, 159, 162, 168, 169, 170, 172, 173, 174, 190, 193, 204, 205, 225, 229, 230, 234, 243, 247, 248, 249, 252, 269, 277, 283, 284, 290, 291, 294, 296, 299, 301, 310, 314, 315, 324, 325, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 605, 611, 613, 616, 617, 625, 626, 632, 634, 637, 647, 648, 649, 651, 652, 653, 654, 656, 661, 662, 663, 664, 665, 670, 671, 672, 685, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 719, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 809, 810, 813, 815, 818, 820, 823, 825, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 864, 877, 880, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 911, 913, 914, 918, 925, 926, 927, 928, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036], "set_backend": [0, 4, 5, 12, 119, 120, 121, 124, 243, 283, 284, 315, 356, 605, 668, 994], "ha": [0, 4, 5, 14, 15, 16, 19, 69, 70, 115, 116, 118, 119, 120, 121, 124, 125, 127, 129, 131, 133, 134, 145, 146, 172, 207, 210, 315, 334, 365, 366, 369, 536, 539, 553, 556, 686, 723, 737, 761, 764, 784, 785, 787, 788, 790, 797, 799, 825, 839, 842, 865, 868, 930, 931, 932, 936, 938, 950, 959, 962, 967, 970, 971, 974, 975, 978, 979, 982], "over": [0, 4, 14, 16, 18, 65, 66, 69, 70, 110, 111, 115, 116, 118, 120, 126, 131, 146, 737, 765, 767, 794, 796, 800, 802, 803, 805, 907, 908, 911, 913, 919, 921, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1030, 1031], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 63, 64, 65, 66, 69, 70, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 315, 360, 365, 366, 369, 379, 382, 384, 387, 388, 391, 429, 432, 446, 449, 462, 465, 474, 477, 494, 497, 534, 545, 548, 565, 568, 578, 581, 582, 585, 591, 595, 605, 606, 609, 626, 627, 628, 629, 630, 633, 644, 651, 652, 653, 654, 671, 672, 686, 697, 724, 727, 734, 736, 737, 738, 741, 749, 751, 825, 859, 862, 885, 886, 887, 888, 889, 892, 895, 899, 907, 908, 911, 913, 919, 921, 930, 932, 936, 950, 955, 958, 983, 984, 987, 993, 994], "pass": [0, 4, 20, 65, 66, 69, 70, 71, 72, 73, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 131, 146, 243, 269, 315, 324, 359, 365, 397, 400, 605, 616, 649, 686, 722, 885, 886, 887, 1005, 1006, 1028, 1029, 1032, 1036, 1038, 1039], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 114, 118, 120, 124, 125, 126, 129, 131, 134, 146, 686, 702, 704, 930, 931, 932, 936, 938, 994], "get_backend": [0, 119, 120], "specifi": [0, 5, 69, 70, 112, 114, 118, 119, 124, 125, 126, 129, 132, 133, 134, 172, 173, 174, 181, 195, 201, 202, 204, 205, 217, 218, 225, 229, 230, 234, 235, 237, 243, 249, 252, 259, 262, 315, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 353, 355, 358, 359, 360, 365, 557, 560, 605, 611, 623, 633, 634, 637, 644, 684, 737, 749, 751, 765, 767, 794, 796, 797, 799, 800, 802, 803, 805, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 843, 846, 859, 862, 865, 868, 869, 872, 881, 884, 889, 894, 896, 897, 903, 904, 905, 906, 925, 926, 927, 930, 931, 932, 936, 938, 939, 940, 943, 950, 951, 954, 967, 970, 975, 978, 983, 984, 987, 989, 992], "isn": [0, 5, 19, 132, 146], "t": [0, 5, 15, 16, 18, 19, 20, 21, 65, 66, 110, 111, 116, 118, 124, 129, 131, 132, 133, 134, 146, 605, 614, 724, 733, 734], "associ": [0, 5, 19, 118, 119, 121, 146, 365, 379, 382, 536, 539, 737, 769, 771, 778, 780, 806, 808], "option": [0, 5, 18, 19, 24, 25, 26, 27, 28, 65, 66, 69, 70, 71, 72, 110, 111, 113, 114, 115, 116, 118, 119, 123, 124, 125, 126, 127, 129, 134, 146, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 269, 270, 271, 272, 290, 314, 315, 334, 358, 359, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 611, 617, 618, 620, 623, 624, 625, 627, 628, 629, 631, 633, 634, 637, 645, 656, 658, 661, 662, 671, 672, 686, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 890, 895, 900, 901, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 927, 929, 930, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "str": [0, 5, 24, 25, 26, 69, 70, 124, 125, 127, 169, 170, 172, 207, 210, 243, 247, 269, 270, 271, 277, 278, 281, 285, 288, 290, 291, 294, 296, 299, 307, 308, 309, 314, 315, 331, 334, 335, 337, 340, 341, 342, 343, 359, 605, 611, 625, 627, 628, 629, 656, 661, 662, 724, 725, 726, 727, 728, 729, 730, 731, 737, 781, 783, 885, 886, 887, 888, 889, 895, 950, 951, 954], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 65, 66, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 145, 146, 686, 697, 994, 1000], "want": [0, 5, 15, 17, 18, 19, 65, 66, 110, 111, 118, 132, 133, 134, 146], "retriev": [0, 5, 19, 605, 611], "i": [0, 5, 19, 21, 112, 118, 129, 132, 134, 172, 173, 174, 207, 210, 365, 366, 369, 397, 400, 413, 416, 421, 424, 429, 432, 462, 465, 466, 469, 478, 481, 534, 535, 541, 544, 553, 556, 557, 560, 605, 613, 614, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 737, 743, 745, 761, 764, 769, 771, 778, 780, 785, 787, 788, 790, 797, 799, 803, 805, 825, 869, 872, 889, 892, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982], "e": [0, 5, 15, 16, 17, 19, 21, 112, 118, 123, 132, 146, 171, 172, 207, 210, 243, 248, 302, 305, 315, 331, 365, 366, 369, 397, 400, 413, 416, 421, 424, 429, 432, 454, 457, 462, 465, 466, 469, 478, 481, 498, 501, 506, 509, 534, 535, 541, 544, 553, 556, 557, 560, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 737, 743, 745, 761, 764, 769, 771, 778, 780, 785, 787, 788, 790, 803, 805, 825, 869, 872, 889, 892, 913, 918, 919, 921, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982], "one": [0, 5, 15, 16, 18, 19, 69, 70, 80, 81, 82, 83, 90, 91, 94, 95, 96, 97, 98, 99, 114, 116, 118, 119, 122, 123, 124, 126, 127, 128, 131, 132, 134, 146, 172, 173, 174, 207, 210, 243, 254, 257, 264, 267, 315, 344, 345, 346, 347, 359, 365, 366, 370, 379, 383, 388, 392, 534, 565, 569, 605, 606, 608, 609, 610, 634, 638, 655, 658, 661, 662, 676, 677, 679, 737, 738, 742, 761, 764, 765, 767, 775, 777, 781, 783, 800, 802, 803, 805, 825, 826, 830, 839, 842, 843, 846, 859, 862, 863, 865, 868, 907, 908, 910, 911, 912, 915, 917, 925, 926, 928, 930, 931, 932, 936, 937, 938, 950, 951, 954, 994], "default": [0, 5, 19, 24, 25, 26, 27, 28, 65, 66, 69, 70, 71, 72, 73, 110, 111, 114, 115, 116, 118, 119, 120, 123, 124, 125, 133, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 270, 271, 272, 273, 276, 315, 324, 325, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 356, 357, 358, 359, 360, 363, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 609, 611, 617, 618, 620, 623, 624, 627, 628, 629, 631, 632, 633, 634, 637, 642, 643, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 658, 660, 661, 662, 665, 668, 671, 672, 684, 685, 686, 688, 691, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 890, 891, 895, 899, 900, 901, 902, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "torch": [0, 5, 12, 19, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 146, 169, 170, 243, 283, 284, 315, 356, 605, 668, 825, 839, 842, 994], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 114, 118, 124, 125, 126, 129, 134, 146, 994], "mxnet": [0, 5, 15, 20, 124, 125, 126, 129, 134, 994], "either": [0, 5, 12, 18, 19, 21, 69, 70, 115, 116, 118, 119, 120, 123, 124, 125, 129, 131, 132, 146, 172, 190, 193, 365, 379, 382, 397, 400, 482, 485, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 557, 560, 565, 568, 570, 573, 591, 595, 605, 626, 651, 655, 656, 737, 761, 764, 885, 886, 887, 888, 950, 967, 970, 975, 978, 1016, 1027, 1028, 1029], "doesn": [0, 5, 18, 21, 116, 118, 124, 129, 146], "matter": [0, 5, 14, 116], "been": [0, 5, 19, 114, 115, 118, 119, 120, 123, 124, 125, 127, 129, 145, 146, 315, 334, 605, 627, 628, 629, 913, 914], "ivy_np": [0, 5, 118], "us": [0, 5, 12, 15, 16, 17, 19, 20, 35, 36, 65, 66, 69, 70, 71, 72, 73, 80, 81, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 145, 146, 157, 159, 160, 161, 162, 163, 166, 168, 171, 243, 277, 315, 324, 325, 350, 354, 357, 358, 359, 360, 362, 364, 365, 366, 367, 368, 384, 387, 388, 389, 390, 405, 408, 425, 428, 437, 440, 474, 477, 494, 497, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 578, 581, 605, 633, 640, 641, 655, 661, 662, 663, 664, 671, 672, 686, 688, 691, 693, 695, 706, 708, 710, 712, 724, 730, 732, 733, 735, 736, 737, 746, 748, 749, 751, 765, 767, 809, 810, 813, 825, 839, 842, 843, 846, 851, 854, 859, 862, 873, 876, 885, 886, 887, 888, 889, 890, 892, 898, 899, 900, 902, 907, 908, 911, 925, 926, 927, 928, 930, 931, 950, 951, 954, 983, 984, 987, 994, 1016, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 114, 116, 118, 119, 122, 126, 133], "call": [0, 6, 12, 15, 21, 71, 72, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 146, 315, 359, 605, 660, 665, 682, 686, 697, 889, 890, 895, 899, 900, 1016, 1027, 1028, 1029, 1032, 1036], "nativ": [0, 6, 24, 26, 27, 28, 69, 70, 118, 124, 126, 131, 132, 172, 212, 215, 243, 247, 248, 269, 315, 331, 332, 333, 334, 335, 354, 361, 364, 605, 649, 651, 654, 1005, 1006], "native_arrai": [0, 6, 12, 29, 30, 37, 38, 74, 75, 82, 83, 118, 157, 159, 160, 161, 162, 163, 166, 168, 172, 207, 210, 238, 242, 243, 264, 267, 315, 337, 353, 365, 366, 369, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 462, 465, 474, 477, 494, 497, 535, 541, 544, 545, 548, 565, 568, 578, 581, 582, 585, 596, 600, 605, 606, 607, 608, 609, 610, 614, 622, 623, 630, 633, 634, 637, 670, 675, 676, 677, 679, 680, 681, 686, 688, 691, 724, 727, 730, 731, 736, 737, 743, 745, 746, 748, 749, 751, 794, 796, 809, 810, 813, 820, 823, 825, 826, 829, 839, 842, 843, 846, 851, 854, 864, 873, 876, 913, 914, 925, 926, 927, 928, 929, 930, 931, 932, 936, 950, 951, 954, 955, 958, 983, 984, 987], "1": [0, 6, 12, 15, 16, 21, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 114, 116, 118, 119, 123, 126, 127, 128, 129, 131, 132, 133, 134, 146, 157, 159, 160, 161, 162, 168, 172, 173, 174, 175, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 238, 242, 243, 249, 252, 264, 265, 266, 267, 268, 278, 281, 315, 319, 322, 324, 329, 334, 335, 337, 339, 343, 347, 349, 352, 353, 360, 365, 366, 367, 368, 369, 371, 374, 375, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 397, 400, 405, 408, 409, 412, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 534, 535, 541, 544, 545, 548, 553, 556, 561, 564, 565, 566, 567, 568, 569, 570, 573, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 613, 614, 622, 623, 630, 633, 634, 635, 636, 637, 638, 652, 658, 661, 662, 668, 670, 672, 675, 676, 677, 678, 679, 680, 681, 684, 686, 688, 689, 690, 691, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 758, 760, 769, 771, 775, 777, 785, 787, 788, 790, 794, 796, 797, 799, 800, 801, 802, 803, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 872, 873, 876, 889, 892, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955, 958, 971, 974, 975, 978, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 125, 126, 127, 129, 131, 132, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 314, 315, 331, 332, 333, 334, 335, 337, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 647, 648, 649, 651, 652, 653, 654, 658, 661, 662, 663, 664, 666, 668, 669, 671, 672, 673, 675, 676, 677, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 716, 717, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027], "ndarrai": [0, 6, 114, 122, 124, 125, 126, 131, 172, 176, 179, 212, 215, 605, 676, 680], "Or": [0, 6, 132], "jaxlib": [0, 6, 18, 114, 124, 125, 131], "xla_extens": [0, 6, 114, 124, 125, 131], "devicearrai": [0, 6, 131], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 24, 25, 26, 27, 28, 31, 32, 37, 38, 45, 46, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 123, 126, 127, 132, 133, 134, 163, 165, 167, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 243, 249, 251, 252, 253, 254, 256, 258, 259, 261, 263, 264, 266, 267, 268, 273, 274, 275, 276, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 314, 315, 334, 335, 346, 350, 351, 354, 359, 362, 364, 365, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 397, 399, 401, 403, 405, 407, 408, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 525, 526, 528, 529, 530, 532, 536, 538, 540, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 605, 606, 607, 608, 609, 610, 613, 614, 618, 619, 623, 626, 630, 632, 634, 636, 638, 642, 649, 651, 652, 654, 655, 666, 668, 669, 676, 677, 679, 683, 684, 686, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 723, 737, 738, 739, 740, 741, 742, 761, 763, 765, 766, 767, 788, 790, 803, 804, 805, 810, 812, 814, 815, 817, 819, 820, 822, 824, 825, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 886, 887, 888, 889, 890, 891, 895, 899, 900, 901, 902, 908, 910, 912, 913, 914, 919, 920, 922, 925, 926, 927, 929, 930, 931, 932, 933, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 1005, 1006, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 120], "unset": [0, 12, 120, 129, 131], "adjust": [0, 12, 950, 971, 974, 979, 982], "dict": [0, 12, 24, 25, 26, 27, 28, 69, 70, 71, 72, 73, 123, 127, 132, 133, 315, 324, 325, 334, 337, 340, 341, 342, 343, 605, 611, 627, 628, 629, 889, 891, 892, 895, 898, 901, 902], "previous": [0, 12, 18, 21, 118, 119, 129, 605, 616], "otherwis": [0, 12, 24, 25, 26, 27, 28, 69, 70, 114, 118, 122, 124, 125, 129, 131, 172, 173, 174, 243, 249, 252, 264, 267, 270, 271, 272, 315, 334, 365, 478, 481, 482, 485, 486, 489, 605, 615, 682, 686, 702, 704, 719, 737, 738, 741, 746, 748, 800, 802, 803, 805, 885, 886, 887, 889, 902, 925, 926, 927, 929, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "implement": [0, 12, 20, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 243, 249, 252, 302, 305, 315, 360, 365, 366, 369, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 397, 400, 433, 436, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 536, 539, 553, 556, 557, 560, 570, 573, 574, 577, 591, 595, 596, 600, 737, 752, 754, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 994], "wa": [0, 12, 15, 69, 70, 116, 129, 131, 605, 682, 889, 902, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "last": [0, 12, 16, 19, 69, 70, 116, 118, 120, 127, 146, 157, 162, 315, 334, 686, 723, 724, 734, 737, 743, 745, 749, 751, 765, 767, 797, 799, 800, 802, 809, 815, 818, 820, 823, 825, 843, 846, 859, 862, 864, 869, 872, 939, 940, 943, 945, 948, 983, 984, 987, 989, 992, 1016, 1026], "henc": [0, 12, 118, 930, 931, 932, 936, 938], "here": [0, 12, 18, 19, 20, 113, 114, 116, 118, 123, 129, 130, 131, 132, 133, 134, 145, 146], "tensor": [0, 12, 14, 69, 70, 113, 114, 119, 120, 122, 124, 125, 126, 129, 131, 132, 133, 134, 146, 172, 201, 202, 204, 205, 243, 273, 276, 365, 405, 408, 534, 535, 605, 658, 661, 662, 724, 732, 734, 737, 794, 796, 825, 839, 842, 855, 858, 864, 913, 914, 925, 928, 994, 1016, 1024, 1026], "howev": [0, 12, 15, 18, 20, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 131, 132, 133, 134, 146], "befor": [0, 12, 18, 19, 20, 69, 70, 115, 118, 122, 124, 125, 126, 129, 132, 146, 315, 359, 365, 601, 604, 724, 735, 736, 885, 886, 887, 889, 901, 930, 931, 932, 936, 938, 950, 967, 970, 975, 978], "becom": [0, 12, 14, 16, 19, 116, 123, 129, 134, 146, 825, 826, 829], "swap": [0, 12, 825, 873, 876], "python": [0, 12, 13, 14, 15, 18, 19, 21, 118, 127, 129, 131, 132, 146, 172, 173, 174, 315, 354, 364, 365, 557, 560, 994, 1000], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 69, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 112, 114, 117, 119, 120, 121, 122, 125, 128, 131, 134, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 998, 999, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1042], "op": [0, 12, 113, 129, 146], "eagertensor": [0, 12], "def": [1, 20, 113, 114, 116, 118, 119, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 244, 245, 246, 316, 323, 326, 687, 994, 1008, 1011, 1014], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 23, 25, 26, 27, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 69, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 134, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 998, 999, 1000, 1003, 1004, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1042], "backend": [4, 5, 6, 12, 14, 19, 20, 24, 26, 28, 69, 70, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 130, 131, 134, 243, 283, 284, 290, 314, 315, 350, 352, 362, 605, 646, 649, 650, 656, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 722, 994, 1000, 1005, 1006, 1032, 1033, 1034, 1035, 1036, 1037], "ml": [13, 15, 16, 17, 128, 129, 130, 132, 133, 134, 145, 994, 1000], "explos": [13, 15, 994], "A": [13, 14, 15, 16, 21, 69, 70, 71, 72, 73, 112, 118, 119, 123, 124, 125, 129, 132, 146, 172, 187, 188, 212, 215, 315, 324, 325, 359, 365, 549, 552, 605, 641, 675, 737, 775, 777, 784, 785, 787, 788, 790, 825, 864, 869, 872, 889, 890, 892, 894, 896, 897, 898, 899, 900, 903, 904, 905, 906, 950, 951, 954, 983, 984, 987, 989, 992, 994, 1038, 1039], "huge": [13, 15, 132, 994], "number": [13, 14, 18, 69, 70, 71, 72, 73, 116, 118, 123, 125, 126, 129, 132, 134, 169, 170, 171, 172, 173, 174, 176, 179, 187, 188, 201, 202, 204, 205, 207, 210, 212, 215, 243, 254, 257, 277, 278, 281, 285, 288, 291, 294, 296, 299, 302, 305, 315, 351, 352, 353, 365, 379, 382, 397, 400, 429, 432, 462, 465, 466, 469, 534, 535, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 601, 604, 605, 606, 609, 632, 641, 642, 657, 681, 685, 724, 735, 737, 749, 751, 752, 754, 769, 771, 784, 788, 790, 800, 802, 825, 826, 829, 835, 838, 847, 850, 851, 854, 859, 862, 864, 869, 872, 877, 880, 881, 884, 885, 886, 887, 888, 913, 914, 923, 925, 928, 930, 931, 932, 936, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027], "tool": [13, 16, 19, 130, 134, 145, 146, 994], "have": [13, 14, 15, 16, 18, 19, 20, 21, 69, 70, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 145, 146, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 254, 257, 259, 262, 278, 281, 315, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 627, 628, 629, 631, 634, 637, 645, 658, 661, 662, 686, 702, 704, 719, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994], "explod": [13, 14, 994], "onto": [13, 14, 315, 344, 345, 889, 895, 901, 994], "scene": [13, 14, 112, 128, 130, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 994], "b": [13, 16, 17, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 112, 116, 119, 120, 123, 128, 129, 130, 132, 133, 134, 144, 172, 238, 242, 243, 264, 266, 267, 268, 315, 337, 365, 366, 368, 369, 370, 379, 381, 382, 383, 384, 387, 388, 390, 391, 392, 405, 408, 425, 428, 429, 431, 432, 437, 440, 462, 464, 465, 474, 477, 494, 497, 534, 541, 544, 545, 548, 561, 564, 565, 567, 568, 569, 578, 581, 582, 585, 591, 592, 594, 595, 596, 597, 599, 600, 605, 606, 608, 609, 610, 613, 614, 622, 623, 630, 633, 634, 636, 637, 638, 676, 677, 679, 680, 681, 686, 688, 690, 691, 692, 724, 727, 730, 731, 736, 737, 738, 740, 741, 742, 743, 745, 746, 748, 749, 751, 775, 777, 785, 787, 794, 796, 806, 808, 809, 810, 812, 813, 814, 815, 817, 819, 820, 822, 824, 825, 826, 828, 829, 830, 839, 842, 843, 846, 851, 854, 859, 861, 862, 863, 869, 872, 873, 876, 889, 892, 907, 908, 910, 911, 912, 913, 915, 917, 918, 919, 921, 925, 927, 928, 929, 930, 932, 933, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 986, 987, 988, 989, 991, 993, 994, 1000], "why": [13, 15, 19, 114, 123, 126, 131, 994], "unifi": [13, 15, 69, 70, 122, 129, 146, 315, 344, 345, 346, 347, 359, 994], "should": [13, 15, 18, 19, 20, 21, 69, 70, 71, 72, 73, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 169, 170, 172, 207, 210, 225, 229, 230, 234, 243, 259, 262, 315, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 454, 457, 458, 461, 462, 465, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 616, 649, 658, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 758, 760, 761, 764, 769, 771, 775, 777, 778, 780, 781, 783, 785, 787, 788, 790, 794, 796, 797, 799, 800, 802, 803, 805, 825, 855, 858, 913, 924, 925, 926, 927, 930, 931, 932, 936, 938, 950, 951, 954, 955, 958, 959, 962, 967, 970, 971, 974, 975, 978, 979, 982, 994], "them": [13, 14, 15, 16, 118, 120, 122, 123, 129, 131, 132, 133, 146, 994], "c": [13, 15, 16, 17, 80, 81, 98, 99, 112, 116, 119, 123, 128, 129, 130, 132, 146, 365, 545, 548, 565, 567, 568, 605, 613, 614, 622, 681, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 730, 825, 869, 872, 889, 892, 915, 917, 925, 928, 950, 951, 954, 971, 974, 979, 982, 994, 1000], "standard": [13, 112, 113, 114, 115, 117, 118, 122, 126, 146, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 278, 281, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 737, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 913, 918, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 971, 974, 979, 982, 983, 984, 987, 994, 1000, 1030, 1031], "re": [13, 14, 15, 17, 18, 19, 20, 21, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 134, 146, 315, 359, 605, 627, 737, 794, 796, 825, 859, 862, 925, 929, 994], "collabor": [13, 14, 15, 994], "consortium": [13, 15, 994, 1000], "data": [13, 15, 69, 70, 71, 72, 73, 112, 113, 114, 115, 119, 121, 123, 125, 126, 131, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 247, 248, 249, 252, 259, 262, 264, 267, 269, 273, 276, 277, 278, 281, 283, 284, 285, 288, 290, 291, 294, 296, 299, 301, 310, 314, 315, 317, 318, 319, 320, 321, 322, 327, 328, 329, 331, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 536, 539, 545, 548, 553, 556, 557, 560, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 613, 614, 651, 652, 654, 673, 686, 702, 704, 722, 724, 733, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 785, 787, 788, 790, 794, 796, 797, 799, 800, 802, 803, 805, 825, 839, 842, 843, 846, 847, 850, 855, 858, 859, 862, 865, 868, 869, 872, 913, 924, 925, 926, 927, 928, 939, 940, 943, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1000, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027], "api": [13, 14, 18, 19, 112, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 128, 130, 132, 146, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 737, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987, 994, 1000], "open": [14, 15, 16, 17, 18, 21, 115, 145, 172, 173, 174, 913, 915, 916, 919, 921, 994], "project": [14, 15, 16, 18, 19, 21, 113, 118, 120, 131, 133, 145, 146, 913, 914, 918], "grown": 14, "consider": [14, 114, 116], "recent": [14, 15, 18, 19, 118], "year": [14, 16, 146, 994], "especi": [14, 18], "deep": [14, 17, 19, 20, 69, 70, 128, 132, 994], "learn": [14, 15, 18, 20, 112, 119, 128, 134, 145, 365, 470, 473, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 885, 886, 887, 888, 994, 1032, 1033, 1034, 1035, 1036, 1037], "can": [14, 15, 16, 17, 18, 19, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 145, 146, 172, 176, 179, 212, 215, 243, 264, 267, 315, 357, 358, 359, 737, 758, 760, 825, 855, 858, 913, 915, 916, 994, 1000], "seen": [14, 15, 116, 118, 131, 132], "rapidli": 14, "increas": [14, 315, 339, 343, 347, 825, 835, 838, 881, 884, 889, 901], "github": [14, 19, 20, 115, 118], "repo": [14, 15, 16, 18, 19, 117, 129, 131, 132, 133, 134, 145, 994, 1000], "contain": [14, 18, 19, 20, 21, 24, 27, 28, 37, 38, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 124, 126, 128, 129, 130, 133, 134, 146, 157, 160, 161, 163, 166, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 254, 259, 264, 267, 273, 278, 285, 291, 296, 302, 315, 336, 337, 340, 349, 353, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 607, 609, 611, 614, 617, 618, 620, 622, 623, 630, 633, 634, 637, 644, 653, 675, 676, 678, 680, 681, 686, 688, 691, 693, 698, 702, 706, 710, 714, 724, 727, 730, 731, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 835, 839, 842, 843, 846, 847, 850, 851, 854, 855, 859, 862, 864, 865, 869, 873, 876, 877, 881, 885, 886, 887, 888, 889, 902, 907, 908, 911, 913, 914, 915, 918, 919, 921, 925, 926, 927, 928, 929, 930, 931, 932, 936, 938, 939, 940, 943, 945, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1036, 1038, 1039], "term": [14, 19, 123, 724, 734, 1016, 1026], "time": [14, 15, 16, 18, 19, 20, 114, 118, 119, 123, 124, 129, 132, 134, 146, 686, 693, 695, 706, 708, 724, 734, 825, 877, 880, 885, 886, 887, 888, 925, 926, 927, 930, 931, 932, 936, 1016, 1027, 1028, 1029], "These": [14, 15, 16, 19, 114, 115, 116, 118, 119, 123, 124, 126, 129, 130, 132, 133, 134, 146, 737, 752, 754, 994, 1000], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 69, 70, 71, 72, 73, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 145, 146, 147, 155, 172, 173, 174, 315, 324, 325, 349, 353, 355, 359, 365, 433, 436, 522, 525, 526, 529, 561, 564, 570, 573, 591, 595, 605, 606, 609, 613, 614, 615, 639, 645, 646, 650, 657, 659, 673, 686, 723, 724, 733, 737, 743, 745, 761, 764, 765, 767, 769, 771, 778, 780, 788, 790, 791, 793, 800, 802, 825, 826, 829, 843, 846, 859, 862, 889, 891, 895, 901, 913, 918, 919, 921, 925, 926, 927, 928, 930, 931, 994, 1038, 1039], "written": [14, 18, 113, 114, 115, 118, 122, 126, 129, 131, 134, 146], "mani": [14, 15, 16, 18, 19, 20, 69, 70, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 146, 825, 864], "differ": [14, 15, 16, 18, 19, 69, 70, 71, 72, 73, 112, 113, 114, 115, 116, 118, 119, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 146, 243, 278, 281, 315, 336, 337, 340, 341, 365, 379, 382, 536, 539, 586, 590, 724, 733, 825, 869, 872, 950, 967, 970, 975, 978, 994], "while": [14, 15, 18, 19, 69, 70, 71, 72, 73, 116, 118, 120, 126, 127, 133, 134, 146, 365, 522, 525, 526, 529, 930, 931, 950, 959, 962], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 145, 146, 163, 164, 165, 167, 172, 173, 174, 176, 177, 179, 181, 182, 183, 185, 187, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 205, 207, 210, 212, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 230, 232, 234, 235, 237, 238, 240, 242, 243, 264, 265, 266, 267, 268, 315, 339, 343, 347, 354, 359, 364, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 405, 408, 421, 424, 425, 428, 429, 430, 431, 432, 437, 440, 458, 461, 462, 463, 464, 465, 494, 497, 522, 525, 526, 529, 534, 545, 548, 557, 560, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 610, 632, 633, 634, 635, 636, 638, 649, 660, 665, 676, 677, 678, 679, 686, 688, 689, 690, 692, 693, 695, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 722, 723, 724, 727, 733, 736, 737, 738, 739, 740, 741, 742, 746, 748, 749, 751, 765, 767, 784, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 839, 842, 843, 846, 855, 858, 859, 860, 861, 862, 863, 869, 872, 889, 895, 901, 902, 907, 908, 909, 910, 911, 912, 915, 917, 925, 926, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 943, 950, 955, 958, 959, 962, 971, 974, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 1000, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037], "wonder": [14, 16, 131], "thing": [14, 15, 16, 18, 19, 20, 118, 120, 131, 132], "research": [14, 145], "develop": [14, 15, 16, 17, 18, 19, 20, 145, 146, 994], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 69, 70, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 163, 164, 165, 167, 172, 173, 174, 176, 177, 179, 181, 182, 183, 185, 187, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 205, 207, 210, 212, 213, 217, 218, 220, 221, 223, 225, 227, 229, 230, 232, 234, 235, 237, 238, 240, 242, 243, 264, 265, 266, 267, 268, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 405, 408, 425, 428, 429, 430, 431, 432, 437, 440, 462, 463, 464, 465, 534, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 610, 633, 634, 635, 636, 638, 649, 676, 677, 678, 679, 686, 688, 689, 690, 692, 693, 695, 724, 727, 733, 736, 737, 738, 739, 740, 741, 742, 746, 748, 749, 751, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 839, 842, 843, 846, 859, 860, 861, 862, 863, 885, 886, 887, 888, 889, 890, 891, 899, 900, 901, 907, 908, 909, 910, 911, 912, 915, 917, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 955, 958, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 1016, 1026], "consid": [14, 15, 69, 70, 113, 119, 130, 131, 132, 365, 522, 525, 526, 529, 930, 931, 932, 936, 938], "speed": [14, 118], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 69, 70, 71, 72, 73, 84, 85, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 146, 157, 159, 160, 161, 162, 163, 166, 168, 315, 337, 360, 365, 425, 428, 582, 585, 686, 688, 690, 691, 692, 723, 724, 730, 731, 930, 931, 932, 936, 939, 940, 943, 950, 951, 954, 994, 1000], "significantli": 14, "hinder": [14, 114], "librari": [14, 15, 16, 129, 134, 144, 146, 315, 360, 365, 458, 461, 522, 525, 526, 529, 737, 752, 754, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 994], "outdat": 14, "month": 14, "rigor": [14, 118], "maintain": [14, 19, 939, 940, 943, 945, 948], "against": [14, 69, 70, 118, 146, 243, 254, 257, 737, 761, 764, 765, 767, 769, 771, 778, 780, 925, 926], "newest": 14, "version": [14, 15, 16, 18, 115, 129, 131, 737, 752, 754, 994], "For": [14, 15, 16, 18, 19, 20, 21, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 172, 173, 174, 207, 210, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 686, 702, 704, 722, 737, 788, 790, 797, 799, 825, 826, 829, 869, 872, 930, 931, 932, 936, 938, 950, 955, 958, 963, 966, 975, 978, 1005, 1006], "softwar": [14, 15, 18, 19], "pipelin": [14, 122, 134], "where": [14, 15, 16, 17, 18, 19, 20, 21, 69, 70, 71, 72, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 146, 172, 195, 196, 199, 207, 210, 365, 397, 400, 454, 457, 506, 509, 536, 539, 553, 556, 605, 645, 649, 658, 686, 723, 737, 752, 754, 769, 771, 778, 780, 781, 783, 788, 790, 791, 793, 797, 799, 800, 802, 825, 826, 829, 835, 838, 839, 842, 847, 850, 869, 872, 881, 884, 889, 890, 900, 913, 914, 925, 928, 950, 971, 974, 979, 982, 983, 984, 987, 989, 992, 994], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 134], "signific": [14, 15, 146], "bottleneck": 14, "As": [14, 19, 65, 66, 110, 111, 114, 118, 119, 122, 123, 124, 125, 126, 129, 131, 132, 133, 146, 930, 931, 932, 936, 938], "new": [14, 15, 16, 17, 18, 19, 20, 21, 69, 70, 76, 77, 112, 113, 115, 116, 118, 121, 123, 124, 126, 128, 131, 134, 145, 172, 181, 190, 193, 195, 196, 199, 217, 218, 220, 223, 235, 237, 238, 242, 243, 310, 365, 401, 404, 506, 509, 549, 552, 605, 627, 628, 629, 632, 633, 634, 637, 661, 662, 663, 664, 671, 672, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 825, 839, 842, 855, 858, 869, 872, 889, 894, 905, 906, 907, 908, 911, 994, 1005, 1006, 1016, 1026, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037], "futur": [14, 16, 18, 19, 131, 146, 737, 752, 754], "avail": [14, 18, 19, 69, 70, 115, 125, 146, 315, 334, 350, 351, 352, 362, 605, 628], "specif": [14, 20, 69, 70, 114, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 133, 134, 145, 146, 243, 302, 305, 315, 357, 360, 365, 522, 525, 526, 529, 605, 627, 628, 629, 656, 737, 752, 754, 794, 796, 825, 869, 872, 885, 886, 887, 888, 913, 914, 950, 955, 958, 959, 962, 963, 966, 994, 997, 999, 1000, 1028, 1029], "quickli": [14, 16, 18, 19, 132, 133], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 112, 118, 120, 123, 126, 128, 146, 1016, 1027, 1028, 1029], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 65, 66, 110, 111, 116, 118, 123, 127, 128, 131, 132, 133, 134, 146, 994], "desir": [14, 69, 70, 243, 249, 252, 264, 267, 315, 360, 605, 645, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027], "provid": [14, 18, 19, 69, 70, 114, 115, 116, 118, 119, 122, 123, 124, 125, 126, 129, 133, 145, 146, 169, 170, 172, 207, 210, 243, 270, 271, 272, 290, 302, 305, 314, 315, 334, 605, 626, 658, 662, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 737, 800, 802, 825, 843, 846, 869, 872, 925, 926, 950, 971, 974, 979, 982, 983, 984, 987, 989, 992, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1032, 1033, 1034, 1035, 1036, 1037], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 63, 64, 65, 66, 69, 70, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 145, 146, 147, 155, 169, 170, 172, 173, 174, 225, 229, 230, 234, 315, 324, 349, 355, 605, 606, 609, 613, 614, 639, 659, 676, 680, 724, 734, 737, 785, 787, 794, 796, 803, 805, 825, 843, 846, 859, 862, 885, 886, 887, 888, 889, 890, 891, 900, 901, 902, 913, 914, 919, 921, 983, 988, 994, 997, 999], "modern": [14, 15], "simpl": [14, 18, 19, 113, 115, 116, 118, 119, 122, 123, 124, 125, 126, 129, 131, 133, 134, 146, 605, 630], "scalabl": [14, 129], "manner": [14, 24, 27, 28, 69, 70, 113, 115, 118, 125, 132, 145, 146, 889, 901], "must": [14, 16, 18, 19, 20, 69, 70, 71, 72, 73, 113, 114, 115, 116, 119, 122, 123, 124, 125, 129, 133, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 254, 257, 259, 262, 315, 344, 345, 346, 347, 359, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 627, 628, 629, 631, 634, 637, 645, 658, 661, 662, 686, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1032, 1036], "determin": [14, 69, 70, 115, 119, 123, 124, 125, 243, 264, 267, 269, 277, 290, 291, 294, 296, 299, 314, 315, 350, 351, 352, 362, 365, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 433, 436, 437, 440, 441, 444, 454, 457, 458, 461, 478, 481, 482, 485, 486, 489, 498, 501, 502, 505, 510, 513, 514, 517, 530, 533, 536, 539, 553, 556, 557, 560, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 605, 606, 609, 613, 614, 644, 646, 650, 651, 652, 653, 654, 673, 685, 686, 702, 704, 724, 735, 737, 738, 741, 743, 745, 746, 748, 749, 751, 758, 760, 761, 764, 769, 771, 775, 777, 778, 780, 784, 785, 787, 797, 799, 800, 802, 803, 805, 885, 886, 887, 888, 930, 931, 932, 936, 938, 983, 984, 987, 989, 992], "exactli": [14, 16, 116, 123, 125, 994, 1000], "common": [14, 20, 69, 70, 116, 119, 121, 123, 125, 127, 146], "ground": [14, 118], "li": 14, "between": [14, 69, 70, 71, 72, 73, 114, 116, 118, 119, 122, 123, 128, 130, 131, 132, 134, 145, 172, 173, 174, 243, 278, 281, 365, 397, 400, 553, 556, 809, 810, 813, 815, 818, 820, 823, 825, 839, 842, 869, 872, 889, 895, 913, 915, 916, 930, 931, 932, 936, 938, 994, 1032, 1034], "find": [14, 18, 19, 69, 70, 118, 129, 132, 930, 931, 932, 936, 938, 994], "exist": [14, 15, 18, 20, 21, 69, 70, 71, 72, 115, 116, 117, 118, 119, 120, 121, 126, 129, 146, 605, 626, 1032, 1036], "essenti": [14, 15, 20, 116, 119, 125], "order": [14, 18, 19, 21, 69, 70, 71, 72, 73, 114, 115, 116, 120, 122, 123, 124, 125, 131, 132, 134, 146, 365, 397, 400, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 737, 752, 754, 765, 767, 788, 790, 791, 793, 803, 805, 825, 843, 846, 885, 886, 887, 925, 928, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 1038, 1039], "design": [14, 15, 112, 126, 129, 131, 146], "univers": 14, "abstract": [14, 123, 133, 146, 315, 330, 1032, 1036], "In": [14, 16, 18, 19, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 145, 146, 315, 354, 360, 361, 364, 365, 379, 382, 536, 539, 557, 560, 605, 611, 649, 825, 855, 858, 913, 919, 921, 994], "search": [14, 18, 24, 27, 28, 56, 69, 70, 101, 113, 116, 118, 926, 927, 928, 929], "languag": [14, 16, 129], "first": [14, 15, 18, 19, 21, 114, 116, 118, 119, 122, 123, 129, 131, 132, 134, 169, 170, 172, 201, 202, 204, 205, 243, 301, 310, 315, 334, 346, 365, 379, 382, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 446, 449, 466, 469, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 586, 590, 605, 613, 686, 697, 737, 743, 745, 749, 751, 752, 754, 761, 764, 775, 777, 781, 783, 788, 790, 794, 796, 800, 802, 825, 831, 834, 859, 862, 869, 872, 873, 876, 885, 886, 887, 888, 889, 890, 899, 900, 913, 924, 925, 926, 927, 930, 931, 932, 936, 1016, 1027, 1028, 1029, 1032, 1036], "see": [14, 17, 18, 19, 20, 114, 117, 119, 123, 125, 131, 132, 145, 146, 172, 173, 174, 190, 193, 201, 202, 204, 205, 243, 259, 262, 302, 305, 365, 379, 382, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 458, 461, 490, 493, 514, 517, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 586, 590, 737, 769, 771, 778, 780, 785, 787, 800, 802, 803, 805, 925, 927, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994], "clear": [14, 15, 16, 19, 20, 116, 124, 125, 129, 131, 315, 333], "front": [14, 128, 129, 132, 994, 1000], "runner": 14, "look": [14, 18, 19, 21, 113, 114, 116, 118, 119, 120, 123, 124, 125, 129, 131, 133, 134, 994], "littl": [14, 131], "deeper": [14, 19, 112, 128, 315, 339, 343, 347, 889, 900, 901], "follow": [14, 15, 18, 19, 20, 21, 69, 70, 113, 115, 116, 118, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 146, 243, 285, 288, 315, 359, 365, 557, 560, 605, 647, 648, 649, 671, 672, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 735, 736, 737, 781, 783, 803, 805, 889, 895, 901, 930, 931, 932, 936, 938, 994, 1016, 1026, 1032, 1036], "same": [14, 16, 18, 19, 21, 24, 25, 26, 69, 70, 113, 114, 116, 118, 119, 122, 123, 125, 126, 127, 129, 131, 133, 134, 172, 173, 174, 182, 185, 196, 199, 207, 210, 220, 223, 225, 229, 230, 234, 238, 242, 243, 249, 252, 254, 257, 259, 262, 315, 324, 325, 359, 365, 366, 369, 379, 382, 409, 412, 429, 432, 462, 465, 536, 539, 557, 560, 561, 564, 565, 568, 601, 604, 605, 631, 633, 634, 637, 658, 661, 662, 686, 702, 704, 719, 724, 725, 726, 727, 728, 729, 730, 731, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 772, 774, 778, 780, 781, 783, 785, 787, 788, 790, 797, 799, 800, 802, 825, 831, 834, 843, 846, 847, 850, 859, 862, 865, 868, 869, 872, 885, 886, 887, 889, 902, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 975, 978, 979, 982, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "core": [14, 18, 20, 125, 129, 134, 315, 351, 994], "principl": 14, "oper": [14, 18, 20, 69, 70, 71, 72, 115, 116, 118, 119, 122, 123, 125, 126, 132, 133, 172, 201, 202, 204, 205, 243, 302, 305, 365, 379, 382, 421, 424, 425, 428, 474, 477, 541, 544, 545, 548, 557, 560, 582, 585, 605, 615, 627, 628, 629, 673, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 725, 726, 727, 728, 729, 730, 731, 733], "expos": [14, 129, 133, 605, 621], "almost": [14, 19, 123, 130, 132], "ident": [14, 16, 69, 70, 119, 121, 123, 131, 132, 146, 315, 349, 889, 902, 994], "uniqu": [14, 118, 119, 123, 146, 315, 324, 325, 885, 886, 887, 888, 889, 895, 930, 931, 932, 936, 937, 938], "syntax": [14, 15, 127], "There": [14, 18, 19, 116, 119, 122, 123, 124, 127, 129, 132, 146], "onli": [14, 17, 18, 19, 69, 70, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 144, 146, 315, 355, 365, 522, 525, 526, 529, 737, 761, 764, 781, 783, 825, 843, 846, 889, 890, 891, 899, 900, 925, 926, 927, 950, 959, 962, 994, 1032, 1033, 1034, 1035, 1036, 1037], "so": [14, 15, 18, 19, 22, 23, 24, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 69, 70, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 113, 114, 115, 116, 118, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 146, 147, 155, 163, 164, 165, 167, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 264, 265, 266, 268, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 606, 607, 608, 610, 634, 635, 636, 638, 676, 677, 678, 679, 688, 689, 690, 692, 738, 739, 740, 742, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 859, 860, 861, 863, 889, 890, 900, 908, 909, 910, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993, 994], "wai": [14, 15, 18, 118, 120, 126, 131, 132, 133, 134, 146], "manipul": [14, 50, 95, 113, 134, 145, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884], "unsurprisingli": [14, 116], "fundament": [14, 123, 129], "consist": [14, 69, 70, 122, 126, 315, 347, 737, 752, 754, 950, 951, 954, 1028, 1029], "each": [14, 15, 16, 19, 20, 69, 70, 71, 72, 73, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 145, 146, 157, 160, 161, 163, 166, 172, 207, 210, 243, 254, 257, 315, 324, 325, 336, 337, 338, 339, 340, 341, 342, 346, 359, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 609, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 738, 741, 743, 745, 746, 748, 752, 754, 761, 764, 769, 771, 772, 774, 778, 780, 785, 787, 788, 790, 825, 835, 838, 851, 854, 859, 862, 864, 869, 872, 877, 880, 881, 884, 889, 895, 902, 913, 914, 925, 928, 930, 931, 932, 936, 950, 951, 954, 994, 1000, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "veri": [14, 15, 18, 19, 113, 114, 116, 118, 119, 123, 125, 126, 130, 132, 133, 134, 146, 994], "similar": [14, 113, 118, 123, 124, 125, 132, 146, 365, 557, 560, 724, 735, 1016, 1027], "convent": [14, 145, 737, 761, 764, 950, 951, 954], "those": [14, 18, 19, 20, 69, 70, 118, 123, 129, 134, 172, 173, 174, 686, 722, 737, 781, 783, 788, 790, 825, 826, 829], "introduc": [14, 123, 132, 825, 859, 862, 930, 931], "2006": 14, "layer": [14, 44, 89, 113, 115, 129, 130, 133, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 907, 908, 911, 994, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "therefor": [14, 19, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 129, 131, 133, 146, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 429, 432, 462, 465, 534, 545, 548, 565, 568, 578, 581, 582, 585, 591, 595, 605, 633, 724, 727, 736, 737, 738, 741, 749, 751, 825, 859, 862, 907, 908, 911, 930, 932, 936, 950, 955, 958, 983, 984, 987], "present": [14, 19, 69, 70, 114, 117, 123, 124, 125, 126, 129], "itself": [14, 18, 19, 114, 123, 126, 133, 145, 146, 605, 611, 889, 901], "cut": 14, "cloth": 14, "adher": [14, 15, 115, 117, 129, 134], "semant": [14, 129, 134, 365, 557, 560], "round": [14, 15, 16, 18, 19, 20, 21, 35, 36, 80, 81, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 365, 379, 382, 429, 432, 462, 465, 466, 469, 536, 539, 578, 581, 601, 604, 994], "up": [14, 15, 16, 17, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 145, 146], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145], "paint": [14, 129], "pictur": [14, 129], "how": [14, 16, 17, 18, 19, 20, 21, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 145, 146, 994, 1000, 1016, 1027, 1028, 1029], "pleas": [14, 15, 16, 18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 994], "check": [14, 15, 16, 18, 19, 24, 25, 26, 27, 28, 69, 70, 118, 123, 128, 129, 131, 132, 133, 134, 145, 243, 269, 283, 284, 290, 291, 294, 296, 299, 314, 315, 354, 364, 605, 615, 630, 644, 651, 652, 653, 654, 673, 685, 686, 702, 704, 737, 752, 754, 889, 890, 899, 900, 901, 994], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 145, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 259, 260, 261, 262, 263, 273, 275, 315, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 617, 618, 619, 620, 622, 623, 624, 627, 628, 629, 631, 633, 634, 635, 636, 637, 638, 645, 658, 661, 662, 686, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1016, 1024], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 994], "faq": [14, 15, 16, 129, 131, 132, 133, 134, 145], "reach": [14, 15, 16, 18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 315, 339, 343, 347, 889, 901], "discord": [14, 15, 16, 18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 994], "you": [14, 15, 16, 17, 18, 19, 20, 21, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 145, 146, 994, 1000], "question": [14, 15, 16, 18, 19, 116, 118, 129, 131, 132, 133, 134, 145, 146, 994], "With": [15, 16, 18, 37, 38, 39, 40, 57, 58, 69, 70, 71, 72, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 116, 118, 129, 157, 159, 160, 161, 162, 163, 166, 168, 172, 207, 210, 238, 242, 243, 264, 267, 315, 337, 353, 365, 366, 369, 370, 379, 382, 383, 384, 387, 388, 391, 392, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 568, 569, 578, 581, 582, 585, 591, 592, 595, 596, 597, 600, 605, 606, 607, 608, 609, 610, 614, 622, 623, 630, 633, 634, 637, 638, 670, 675, 676, 677, 678, 679, 680, 681, 686, 688, 689, 691, 724, 727, 730, 731, 736, 737, 738, 741, 742, 743, 745, 746, 748, 749, 751, 765, 767, 794, 796, 809, 810, 813, 814, 815, 819, 820, 823, 824, 825, 826, 829, 830, 839, 842, 843, 846, 851, 854, 859, 862, 863, 864, 873, 876, 889, 892, 907, 908, 910, 911, 912, 913, 914, 915, 917, 918, 919, 921, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 987], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 69, 70, 114, 116, 118, 121, 122, 123, 124, 125, 126, 127, 129, 132, 145, 146, 172, 173, 174, 605, 660, 665, 930, 937, 994], "would": [15, 18, 19, 21, 112, 114, 115, 116, 118, 120, 121, 122, 123, 126, 128, 129, 131, 133, 134, 146, 157, 162, 315, 360, 994], "entir": [15, 16, 19, 69, 70, 116, 117, 118, 122, 123, 126, 131, 132, 133, 134, 146, 315, 359, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1016, 1025], "forgiven": 15, "rais": [15, 19, 69, 70, 126, 127, 129, 131, 243, 259, 262, 365, 454, 457, 553, 556, 605, 615, 640, 649, 663, 672, 682, 686, 723, 737, 761, 764, 768, 800, 802, 825, 865, 868, 869, 872, 925, 928, 950, 955, 958, 963, 966, 983, 984, 987, 989, 992, 1028, 1029, 1032, 1036], "an": [15, 16, 18, 19, 20, 21, 24, 27, 28, 65, 66, 69, 70, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 145, 146, 157, 160, 161, 163, 166, 171, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 254, 257, 259, 262, 264, 267, 278, 281, 296, 299, 302, 305, 315, 337, 341, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 616, 617, 618, 620, 622, 631, 632, 633, 645, 649, 651, 652, 653, 654, 676, 680, 681, 682, 686, 702, 704, 719, 721, 722, 723, 724, 727, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 768, 769, 771, 772, 774, 778, 780, 781, 783, 784, 785, 787, 788, 790, 797, 799, 800, 802, 803, 805, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 889, 895, 907, 908, 911, 913, 915, 916, 924, 925, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1005, 1006, 1028, 1029, 1032, 1033, 1034, 1036], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 114, 119, 124, 125, 126, 129, 131, 134, 146, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 994, 1032, 1033, 1034, 1035, 1036, 1037], "other": [15, 18, 19, 69, 70, 71, 72, 113, 115, 116, 118, 119, 122, 123, 126, 127, 129, 131, 133, 134, 144, 145, 146, 169, 170, 172, 173, 174, 365, 458, 461, 605, 606, 609, 611, 686, 697, 913, 919, 921, 930, 937, 950, 971, 974, 979, 982, 994], "strong": [15, 146], "industri": 15, "back": [15, 122, 128, 129, 131, 146, 994, 1000, 1028, 1029, 1032, 1036], "momentum": 15, "won": [15, 16, 19, 134], "ad": [15, 18, 19, 20, 110, 111, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 129, 133, 146, 605, 671, 672, 737, 752, 754, 825, 839, 842, 1038, 1039], "just": [15, 16, 18, 19, 115, 116, 118, 119, 126, 129, 131, 132, 146, 950, 951, 954, 1016, 1025], "make": [15, 16, 18, 19, 20, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 315], "problem": [15, 19, 122, 131], "even": [15, 16, 18, 19, 114, 115, 119, 124, 125, 131, 132, 133, 134, 146, 365, 553, 556, 561, 564], "wors": 15, "rather": [15, 69, 70, 113, 115, 118, 123, 134, 146, 172, 173, 174, 315, 359, 605, 651, 652, 654, 686, 702, 704], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 119, 123], "feasibl": 15, "space": [15, 172, 173, 174, 201, 202, 204, 205, 605, 632, 686, 723], "case": [15, 18, 19, 20, 24, 27, 28, 69, 70, 71, 72, 73, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 133, 134, 146, 172, 207, 210, 315, 354, 361, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 425, 428, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 605, 649, 661, 662, 737, 765, 767, 825, 855, 858, 889, 892, 898, 950, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982, 1016, 1027, 1028, 1029, 1032, 1036], "unlik": [15, 116, 123, 315], "charger": 15, "charact": [15, 127], "encod": [15, 132, 605, 632], "instant": [15, 994], "messag": [15, 19, 127, 129, 131, 1041, 1042], "much": [15, 19, 113, 122, 123, 126, 129, 131, 132], "doe": [15, 19, 21, 69, 70, 112, 113, 114, 115, 116, 118, 119, 120, 124, 126, 129, 131, 132, 146, 365, 425, 428, 605, 649, 825, 864], "mandat": [15, 118, 126], "adopt": [15, 19, 122], "continu": [15, 16, 117, 118, 127, 146], "own": [15, 16, 18, 115, 118, 127, 129, 146], "signatur": [15, 113, 114, 115, 116, 118, 123, 124, 125, 126, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 737, 749, 751, 825, 839, 842, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958], "replac": [15, 19, 21, 69, 70, 116, 118, 121, 123, 124, 125, 129, 131, 134, 146, 605, 661, 662, 825, 826, 829, 913, 914], "your": [15, 16, 17, 18, 20, 21, 113, 115, 132, 133, 146, 994], "10": [15, 18, 21, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 123, 129, 131, 132, 172, 195, 204, 205, 206, 315, 365, 405, 408, 409, 412, 437, 440, 474, 477, 494, 497, 502, 505, 578, 581, 605, 623, 633, 660, 665, 686, 706, 707, 708, 709, 724, 730, 737, 746, 748, 749, 751, 775, 777, 794, 796, 825, 843, 846, 851, 854, 864, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 925, 928, 930, 931, 950, 951, 954, 955, 958, 1032, 1034], "100": [15, 16, 98, 99, 118, 132, 133, 134, 146, 365, 578, 581, 915, 917, 994], "despit": [15, 123, 125], "distinct": [15, 115, 123, 126, 128, 930, 931, 932, 936, 938, 994], "still": [15, 69, 70, 115, 118, 124, 131, 133, 146, 994], "believ": [15, 19], "share": [15, 69, 70, 116, 118, 119, 120, 123, 129, 243, 310], "bring": [15, 118, 129, 130], "benefit": [15, 16, 18, 19, 122, 123, 126, 131, 132, 146], "unrel": [15, 19], "what": [15, 16, 19, 112, 114, 115, 116, 118, 121, 123, 127, 128, 129, 131, 132, 133, 134, 145, 146, 994], "again": [15, 16, 19, 113, 116, 118, 123, 126, 132, 134, 146], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 132], "most": [15, 18, 19, 69, 70, 113, 114, 118, 119, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 146, 737, 752, 754], "technolog": 15, "sector": [15, 365, 375, 378, 388, 391, 401, 404], "full": [15, 16, 19, 71, 72, 114, 115, 118, 124, 129, 146, 172, 243, 278, 281, 365, 474, 477, 494, 497, 724, 730, 737, 781, 783, 785, 787, 788, 790], "success": 15, "reason": [15, 19, 113, 116, 119, 122, 123, 124, 126, 129, 131, 365, 557, 560], "build": [15, 17, 18, 119, 128, 130, 133, 134, 146, 930, 931, 932, 936, 938, 994, 1016, 1027, 1028, 1029], "custom": [15, 118, 133], "comput": [15, 16, 18, 69, 70, 118, 119, 123, 129, 132, 146, 315, 359, 365, 379, 382, 405, 408, 417, 420, 425, 428, 446, 449, 450, 453, 470, 473, 474, 477, 490, 493, 494, 497, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 541, 544, 545, 548, 605, 617, 618, 620, 623, 624, 686, 688, 691, 693, 695, 697, 698, 700, 706, 708, 710, 712, 714, 716, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 735, 737, 738, 741, 743, 745, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 781, 783, 784, 785, 787, 788, 790, 800, 802, 803, 805, 809, 810, 813, 815, 818, 820, 823, 889, 895, 930, 931, 932, 936, 938, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982], "thank": [15, 132], "interoper": 15, "compon": [15, 129, 686, 723], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 69, 70, 71, 72, 73, 118, 120, 124, 125, 315, 724, 734, 1009, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1036], "pcie": 15, "interfac": [15, 134, 146], "motherboard": 15, "raid": 15, "storag": [15, 132], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 24, 25, 26, 27, 28, 69, 70, 118, 119, 133, 134, 172, 176, 179, 212, 215, 225, 229, 230, 234, 605, 611, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 769, 771, 772, 774, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799, 889, 891, 901], "factor": [15, 315, 324, 357, 358, 359, 686, 688, 691, 693, 695, 706, 708, 710, 712, 724, 725, 726, 727, 728, 729, 730, 731, 737, 738, 741, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1032, 1033, 1034, 1035], "sata": 15, "connect": [15, 18, 133, 134, 1016, 1026, 1027], "host": [15, 146], "bu": 15, "adapt": [15, 686, 710, 712, 1032, 1035], "devic": [15, 19, 29, 30, 34, 69, 70, 74, 75, 79, 98, 99, 112, 113, 119, 121, 124, 131, 132, 146, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 605, 633, 634, 637, 658, 661, 662, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 1005, 1006, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "html": [15, 21, 115, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 737, 749, 751, 825, 839, 842, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958], "enabl": [15, 18, 19, 69, 70, 71, 72, 73, 118, 119, 122, 123, 126, 128, 129, 130, 132, 134, 146, 686, 723], "anyon": [15, 17, 146], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 69, 70, 123, 889, 890, 899, 900], "commun": [15, 17, 19, 20, 146, 994, 1000], "network": [15, 119, 123, 129, 133, 145, 724, 733, 994, 1002, 1016, 1028, 1029], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 115, 116, 118, 123, 124, 126, 129, 132, 145, 146, 605, 655, 675, 950, 955, 958, 963, 966], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 171, 243, 278, 281, 365, 379, 382, 458, 461, 536, 539, 557, 560, 578, 581], "754": [15, 171, 243, 278, 281, 365, 379, 382, 458, 461, 536, 539, 557, 560, 578, 581], "allow": [15, 118, 129, 146, 172, 201, 202, 204, 205, 605, 655, 1028, 1029], "calcul": [15, 69, 70, 71, 72, 73, 115, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 433, 436, 437, 440, 441, 444, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 536, 539, 553, 556, 570, 573, 574, 577, 578, 581, 586, 590, 591, 595, 596, 600, 809, 810, 813, 815, 818, 820, 823, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982], "live": [15, 16], "depend": [15, 18, 19, 115, 118, 121, 123, 124, 129, 146, 243, 249, 252, 365, 366, 369, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 397, 400, 433, 436, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 553, 556, 570, 573, 574, 577, 591, 595, 596, 600, 737, 752, 754, 781, 783, 785, 787, 788, 790, 925, 929, 939, 940, 943, 945, 948], "did": [15, 20, 134], "aris": [15, 146], "until": [15, 19, 127, 146, 994], "substanti": [15, 19, 118, 122], "innov": 15, "growth": 15, "usag": [15, 129, 315, 359], "relev": [15, 18, 20, 116, 123, 124, 132, 1032, 1033, 1034, 1035, 1036, 1037], "area": [15, 126, 144, 365, 375, 378, 388, 391, 401, 404, 994], "necess": 15, "parti": [15, 146], "could": [15, 16, 18, 19, 116, 118, 123, 124, 126, 129, 131, 132, 133, 930, 931, 932, 936, 938], "easili": [15, 19, 132, 133, 134, 146, 994], "engag": [15, 17, 18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "regard": [15, 123, 315], "effect": [15, 114, 115, 122, 123, 146, 172, 207, 210, 686, 714, 716, 950, 971, 974, 979, 982], "2015": 15, "sinc": [15, 18, 19, 118, 146], "alongsid": 15, "machin": [15, 18, 119, 145, 243, 278, 281, 285, 288, 365, 470, 473, 737, 769, 771, 778, 780], "given": [15, 16, 18, 19, 20, 21, 69, 70, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 133, 134, 145, 172, 173, 174, 181, 201, 202, 204, 205, 315, 348, 354, 356, 357, 358, 359, 361, 364, 605, 623, 624, 634, 637, 661, 662, 666, 684, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 725, 726, 727, 728, 729, 730, 731, 737, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 839, 842, 843, 846, 851, 854, 859, 862, 864, 877, 880, 889, 896, 897, 913, 915, 916, 918, 919, 921, 924, 939, 945, 948, 1005, 1006], "frame": [15, 145], "less": [15, 19, 35, 36, 69, 70, 80, 81, 114, 116, 123, 128, 129, 365, 371, 374, 375, 378, 384, 387, 397, 400, 429, 432, 498, 501, 502, 505, 510, 513, 553, 556, 557, 560, 565, 568, 578, 581, 737, 769, 771, 778, 780, 803, 805, 913, 919, 921, 950, 979, 982], "matur": [15, 146], "state": [15, 114, 115, 118, 128, 129, 130, 132, 145, 365, 536, 539, 605, 669, 683, 724, 734, 994, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "than": [15, 19, 69, 70, 113, 116, 118, 123, 126, 129, 132, 133, 134, 146, 172, 173, 174, 243, 278, 281, 315, 359, 365, 371, 374, 375, 378, 384, 387, 397, 400, 413, 416, 421, 424, 429, 432, 462, 465, 466, 469, 498, 501, 502, 505, 510, 513, 534, 553, 556, 557, 560, 565, 568, 578, 581, 601, 604, 605, 651, 652, 654, 686, 702, 704, 737, 743, 745, 761, 764, 769, 771, 778, 780, 803, 805, 825, 826, 829, 843, 846, 865, 868, 913, 919, 921, 930, 931, 932, 936, 938, 950, 967, 970, 971, 974, 975, 978, 979, 982], "preced": [15, 133], "mention": [15, 18, 19, 114, 116, 119, 126], "aros": 15, "70": [15, 737, 775, 777, 950, 951, 954], "80": [15, 737, 775, 777, 950, 951, 954], "90": [15, 98, 99, 365, 425, 428, 561, 564, 737, 775, 777, 915, 917, 950, 951, 954], "effort": [15, 17, 146], "stage": [15, 17, 19, 21, 112, 127, 994], "complet": [15, 19, 20, 69, 70, 122, 123, 131, 132, 737, 781, 783], "natur": [15, 116, 122, 123, 145, 365, 454, 457, 498, 501, 506, 509, 737, 784], "like": [15, 18, 19, 21, 112, 113, 114, 115, 116, 118, 125, 126, 128, 129, 131, 132, 133, 134, 145, 146, 686, 702, 704, 913, 919, 921, 994], "certainli": 15, "mission": [15, 994], "creat": [15, 17, 18, 19, 21, 69, 70, 118, 124, 125, 126, 129, 130, 133, 144, 145, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 195, 196, 199, 201, 202, 204, 205, 212, 215, 217, 218, 220, 223, 235, 237, 238, 242, 315, 324, 325, 605, 633, 634, 637, 658, 661, 662, 675, 686, 721, 913, 914, 915, 916, 919, 921, 994, 1000, 1005, 1006, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 118, 119, 123, 129, 134, 315, 324, 325, 354, 364], "ourselv": 15, "lead": [15, 16, 69, 70, 71, 72, 73, 146, 737, 781, 783, 788, 790], "quansight": 15, "compani": 15, "made": [15, 19, 20, 123, 126, 129, 131], "organ": [15, 113, 119, 122, 123], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 930, 931, 932, 936, 938], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 129, 134], "sympi": 15, "rai": [15, 365, 397, 400], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 69, 70, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 145, 146, 172, 173, 174, 176, 179, 212, 215, 605, 644, 685, 737, 803, 805, 889, 890, 913, 919, 921, 925, 927, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 997, 999, 1016, 1026, 1027, 1030, 1031], "member": [15, 19], "googl": [15, 994], "octoml": 15, "einop": [15, 69, 70, 605, 627, 628, 629], "further": [15, 16, 19, 21, 116, 122, 128, 132, 133, 994], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 98, 99, 112, 123, 132, 605, 614, 622, 724, 725, 726, 727, 728, 729, 730, 731, 737, 749, 751, 775, 777, 889, 892, 915, 917, 994, 1000], "shaw": 15, "co": [15, 35, 36, 80, 81, 129, 145, 365, 605, 632, 994], "intel": 15, "togeth": [15, 69, 70, 122, 123, 127, 133, 134, 146, 1038, 1039], "major": [15, 118, 124, 125, 146, 925, 928], "involv": [15, 17, 21, 112, 124, 134, 243, 302, 305, 365, 379, 382, 536, 539, 994, 1000], "anoth": [15, 18, 19, 69, 70, 118, 119, 123, 124, 131, 134, 172, 190, 193, 243, 254, 257, 264, 267], "promis": 15, "sign": [15, 18, 35, 36, 80, 81, 130, 134, 172, 173, 174, 365, 366, 369, 379, 382, 397, 400, 421, 424, 536, 539, 557, 560, 569, 737, 784, 930, 931, 932, 936, 938, 950, 967, 970, 975, 978], "pursuit": 15, "unif": [15, 17, 131, 994, 1000], "clearli": [15, 20, 116, 118], "lot": [15, 16, 121, 131, 146], "thought": [15, 18, 19, 114], "care": [15, 19, 134], "attent": [15, 19, 122, 123, 724, 735, 736, 1016, 1027], "gone": [15, 128], "simplifi": [15, 129, 130, 131, 133], "compat": [15, 114, 146, 243, 259, 262, 365, 379, 382, 397, 400, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 446, 449, 466, 469, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 586, 590, 737, 769, 771, 778, 780, 785, 787, 794, 796, 800, 802, 803, 805, 825, 855, 858, 925, 927, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994], "excit": [15, 17, 112, 994], "complianc": 15, "hope": [15, 146], "due": [15, 18, 123, 126, 365, 536, 539], "suit": [15, 18, 112, 117, 118, 132, 145], "some": [15, 16, 18, 19, 20, 69, 70, 113, 114, 115, 116, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 145, 146, 365, 458, 461, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 722, 724, 732, 994, 1016, 1024], "motiv": [15, 131], "great": [15, 16, 118, 129, 131], "convinc": 15, "celebr": 15, "encourag": [15, 145, 146, 994, 1000], "foundat": 15, "point": [16, 19, 114, 115, 116, 118, 122, 126, 129, 131, 132, 145, 171, 172, 173, 174, 181, 187, 188, 195, 217, 218, 235, 237, 243, 249, 252, 278, 281, 291, 294, 302, 305, 365, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 737, 738, 741, 746, 748, 752, 754, 755, 757, 758, 760, 769, 771, 778, 780, 781, 783, 785, 787, 788, 790, 803, 805, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982], "mai": [16, 18, 19, 118, 123, 131, 133, 172, 173, 174, 190, 193, 315, 360, 365, 446, 449, 474, 477, 494, 497, 522, 525, 526, 529, 605, 626, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966], "ask": [16, 129, 131, 146, 994], "perfectli": 16, "happi": [16, 18, 146], "abund": 16, "better": [16, 112, 127, 128, 131, 132, 133], "ll": [16, 17, 19, 116, 123, 126, 132], "give": [16, 18, 19, 112, 114, 115, 116, 120, 131, 825, 855, 858], "two": [16, 71, 72, 115, 116, 118, 122, 123, 128, 132, 134, 172, 173, 174, 187, 188, 207, 210, 225, 229, 230, 234, 243, 301, 310, 365, 421, 424, 561, 564, 605, 613, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 797, 799, 800, 802, 825, 873, 876, 930, 931, 932, 936, 937, 938, 994], "streamlin": 16, "workflow": [16, 19, 132, 144, 994], "save": [16, 69, 70, 118, 127, 146, 605, 667, 1028, 1029], "week": [16, 19, 20, 994], "let": [16, 115, 116, 118, 123, 124, 125, 129, 131, 132, 133, 134, 950, 959, 962, 971, 974, 975, 978, 979, 982, 994], "sai": [16, 18, 121, 131], "deepmind": 16, "releas": [16, 18, 20, 994], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 126, 132, 950, 971, 974, 979, 982], "perceiverio": 16, "happen": [16, 18, 19, 118, 132], "slew": 16, "rush": 16, "f": [16, 21, 112, 118, 123, 127, 129, 132, 134, 365, 470, 473, 605, 646, 650, 889, 892], "g": [16, 112, 123, 146, 243, 248, 302, 305, 315, 331, 889, 892, 913, 918, 919, 921, 930, 931, 932, 936, 938, 950, 955, 958, 963, 966, 967, 970, 975, 978], "inevit": 16, "deviat": [16, 118, 907, 908, 911, 913, 918, 950, 971, 974, 1030, 1031], "origin": [16, 69, 70, 71, 72, 73, 120, 121, 124, 129, 131, 365, 397, 400, 737, 765, 767, 825, 855, 858, 859, 862], "often": [16, 118, 119, 127, 146], "erron": 16, "train": [16, 119, 123, 125, 132, 133, 134, 144, 145, 146, 686, 688, 691, 693, 695, 706, 708, 994], "poor": 16, "converg": 16, "perform": [16, 69, 70, 113, 114, 116, 118, 119, 120, 122, 123, 125, 126, 129, 132, 146, 157, 162, 172, 201, 202, 204, 205, 315, 605, 623, 627, 628, 629, 647, 648, 649, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 732, 734, 737, 788, 790, 885, 886, 887, 888, 889, 896, 897, 983, 984, 987, 989, 992], "issu": [16, 17, 20, 118, 129, 131, 133, 146], "etc": [16, 18, 19, 20, 65, 66, 69, 70, 110, 111, 113, 114, 116, 118, 122, 123, 124, 129, 131, 132, 146, 172, 201, 202, 204, 205, 605, 633, 634, 637, 658, 661, 662, 913, 914, 915, 916, 919, 921, 930, 931, 932, 936, 938, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "publish": [16, 146], "manag": [16, 17, 126, 146, 315], "get": [16, 17, 18, 20, 69, 70, 112, 118, 119, 124, 125, 126, 129, 130, 131, 132, 133, 243, 273, 276, 277, 278, 281, 285, 288, 315, 324, 325, 334, 335, 348, 349, 354, 358, 361, 364, 605, 612, 639, 640, 641, 660, 669, 994, 1000, 1016, 1025], "work": [16, 18, 19, 20, 112, 118, 123, 124, 125, 128, 129, 130, 131, 133, 134, 994, 1000], "repositori": [16, 18, 19, 21, 117, 127], "pull": [16, 17, 18, 21, 113, 146], "request": [16, 17, 113, 315, 351], "confus": [16, 126], "do": [16, 18, 19, 20, 69, 70, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 146, 365, 557, 560, 605, 649, 686, 702, 704, 722, 889, 890, 899, 900, 901], "don": [16, 18, 19, 20, 65, 66, 110, 111, 118, 124, 133, 146], "expect": [16, 118, 146, 605, 612, 994], "codebas": [16, 17, 112, 113, 126, 128, 315, 357, 358, 994], "total": [16, 17, 19, 69, 70, 71, 72, 73, 116, 118, 125, 132, 133, 146, 315, 361, 925, 928, 950, 971, 974, 979, 982], "hour": 16, "spent": 16, "spin": 16, "off": [16, 128, 737, 749, 751, 797, 799], "test": [16, 18, 20, 112, 116, 127, 146, 365, 478, 481, 482, 485, 486, 489, 983, 984, 987, 989, 992], "error": [16, 18, 69, 70, 114, 118, 122, 125, 127, 131, 146, 157, 158, 315, 365, 450, 453, 950, 955, 958, 963, 966, 1028, 1029, 1032, 1036], "iter": [16, 24, 25, 26, 27, 28, 65, 66, 69, 70, 71, 72, 73, 110, 111, 123, 129, 132, 169, 170, 315, 337, 338, 340, 341, 342, 343, 346, 359, 605, 606, 609, 825, 835, 838, 851, 854, 864, 877, 880, 881, 884, 889, 890, 891, 892, 895, 899, 900, 901], "address": [16, 19, 20, 122, 129], "sake": 16, "singl": [16, 19, 69, 70, 113, 114, 116, 118, 119, 121, 123, 126, 129, 132, 133, 134, 146, 315, 324, 325, 344, 345, 346, 347, 605, 681, 685, 913, 918, 919, 921, 930, 931], "multipl": [16, 19, 69, 70, 80, 81, 82, 83, 90, 91, 94, 95, 96, 97, 98, 99, 116, 119, 123, 146, 365, 379, 383, 534, 536, 539, 605, 606, 608, 609, 610, 634, 638, 655, 737, 738, 741, 742, 758, 760, 825, 826, 829, 830, 859, 862, 863, 864, 907, 908, 910, 911, 912, 915, 917, 925, 926, 927, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1016, 1026], "line": [16, 18, 116, 118, 122, 127, 130, 131, 132, 133, 144, 994, 1000], "convert": [16, 24, 25, 26, 27, 28, 69, 70, 118, 122, 129, 146, 147, 155, 172, 176, 179, 212, 215, 243, 247, 248, 315, 331, 332, 333, 334, 354, 361, 364, 605, 670, 676, 680, 681, 737, 806, 808, 889, 891, 901, 902, 1006], "directli": [16, 19, 113, 114, 115, 118, 119, 122, 123, 124, 125, 126, 129, 131, 133, 134, 145, 146, 889, 901], "graph": [16, 119, 123, 130, 146, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 930, 931, 932, 936, 938, 1028, 1029], "guarante": [16, 122, 146, 930, 931], "turn": [16, 116, 118, 123], "4": [16, 21, 35, 36, 45, 46, 49, 50, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 120, 123, 129, 131, 132, 133, 134, 157, 159, 160, 162, 172, 196, 199, 207, 210, 220, 223, 238, 242, 243, 264, 266, 267, 268, 315, 337, 353, 365, 366, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 392, 397, 400, 405, 408, 425, 428, 429, 431, 432, 437, 440, 462, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 567, 568, 578, 581, 582, 585, 591, 592, 594, 595, 596, 597, 599, 600, 605, 614, 623, 632, 633, 634, 636, 637, 638, 670, 675, 686, 688, 690, 691, 692, 724, 727, 728, 729, 731, 734, 736, 737, 738, 739, 741, 743, 745, 746, 748, 749, 751, 758, 760, 769, 771, 775, 777, 794, 796, 797, 799, 809, 820, 823, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 861, 862, 863, 864, 873, 876, 889, 892, 907, 908, 910, 911, 912, 913, 914, 915, 917, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 987, 994, 1032, 1033, 1034, 1035, 1037], "step": [16, 18, 19, 21, 39, 40, 69, 70, 74, 75, 84, 85, 116, 120, 122, 123, 124, 125, 129, 132, 133, 134, 145, 172, 173, 174, 175, 201, 202, 204, 205, 315, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 706, 707, 708, 709, 710, 712, 714, 716, 885, 886, 887, 888, 994, 1032, 1033, 1034, 1035, 1036, 1037], "take": [16, 17, 18, 19, 115, 116, 118, 123, 124, 125, 129, 131, 133, 134, 146, 365, 425, 428, 994, 1000], "few": [16, 19, 20, 118, 119, 123, 124, 125, 126, 127, 130, 131, 132, 133, 144, 994, 1000], "second": [16, 18, 116, 118, 126, 131, 243, 301, 310, 315, 346, 365, 379, 382, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 446, 449, 466, 469, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 586, 590, 605, 613, 660, 665, 686, 688, 691, 693, 695, 706, 708, 737, 743, 745, 749, 751, 752, 754, 761, 764, 775, 777, 781, 783, 788, 790, 794, 796, 800, 802, 825, 869, 872, 873, 876, 885, 887, 930, 931, 932, 936, 1032, 1033, 1034], "automat": [16, 18, 19, 112, 114, 119, 123, 128, 129, 130, 133, 134, 994], "convers": [16, 25, 26, 27, 28, 69, 70, 128, 130, 134, 145, 146, 994, 1000], "everyon": [16, 17, 19, 146], "regardless": [16, 17, 69, 70, 131, 134, 169, 170], "wouldn": 16, "nice": [16, 118], "write": [16, 19, 20, 21, 69, 70, 112, 113, 115, 116, 119, 120, 126, 129, 131, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 315, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 624, 627, 628, 629, 631, 633, 634, 637, 645, 658, 661, 662, 686, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 929, 930, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "onc": [16, 18, 19, 118, 123, 124, 125, 129, 132, 146, 315, 359, 737, 758, 760, 788, 790, 913, 914], "know": [16, 19, 118, 930, 931, 932, 936, 938], "among": [16, 69, 70, 118], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 119, 129], "understand": [16, 18, 19, 20, 21, 112, 114, 115, 116, 117, 127, 128], "pattern": [16, 69, 70, 115, 124, 605, 627, 628, 629], "hasn": 16, "chang": [16, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 115, 117, 118, 123, 129, 133, 146, 163, 164, 165, 167, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 264, 265, 266, 268, 315, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 606, 607, 608, 610, 634, 635, 636, 638, 676, 677, 678, 679, 688, 689, 690, 692, 737, 738, 739, 740, 742, 743, 745, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 855, 858, 859, 860, 861, 863, 889, 891, 901, 908, 909, 910, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993, 994, 1000], "now": [16, 18, 21, 69, 70, 113, 114, 118, 121, 123, 124, 127, 131, 132, 134, 145, 146, 172, 238, 242, 1016, 1027, 1028, 1029], "spend": 16, "torchvis": 16, "probabl": [16, 118, 724, 732, 913, 914, 1016, 1024], "sonnet": 16, "about": [16, 18, 19, 117, 118, 128, 129, 133, 134, 146, 243, 278, 281, 285, 288], "next": [16, 18, 19, 20, 21, 115, 116, 120, 121, 127, 131, 132, 243, 278, 281, 994, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037], "everyth": [16, 19, 20, 118, 130, 146], "zero": [16, 69, 70, 71, 72, 114, 116, 122, 123, 124, 125, 129, 132, 133, 157, 159, 160, 172, 181, 187, 188, 207, 210, 225, 229, 230, 234, 238, 242, 243, 249, 252, 365, 379, 382, 384, 387, 388, 391, 413, 416, 437, 440, 458, 461, 462, 465, 522, 525, 526, 529, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 578, 581, 582, 585, 591, 595, 596, 600, 605, 623, 658, 661, 662, 686, 688, 691, 693, 695, 706, 708, 710, 712, 724, 732, 737, 738, 741, 746, 748, 761, 764, 769, 771, 778, 780, 800, 802, 803, 805, 825, 839, 842, 843, 846, 851, 854, 859, 862, 881, 884, 907, 908, 911, 913, 915, 916, 925, 926, 927, 928, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1032, 1033, 1034, 1035], "need": [16, 18, 19, 20, 21, 113, 115, 116, 117, 119, 122, 123, 126, 129, 131, 132, 145, 146, 605, 617, 618, 620, 825, 826, 829, 839, 842], "said": 16, "high": [16, 20, 69, 70, 98, 99, 132, 913, 915, 916, 917, 919, 920, 921, 922], "level": [16, 17, 20, 119, 128, 129, 132, 133, 134, 146], "optim": [16, 126, 130, 132, 134, 145, 315, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 885, 886, 887, 888, 994, 1033, 1034, 1035, 1037], "trainer": [16, 144, 146, 994], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 134], "flax": [16, 134, 146], "trax": [16, 134], "objax": [16, 134], "idea": [16, 127, 145], "fulli": [16, 114, 122, 123, 129, 130, 131, 132, 133, 134, 146, 1016, 1026, 1027], "offer": [16, 133], "strongli": [17, 18, 994, 1000], "welcom": [17, 18, 19, 994, 1000], "absolut": [17, 69, 70, 365, 366, 369, 737, 784], "skill": 17, "whether": [17, 18, 24, 25, 26, 27, 28, 69, 70, 71, 72, 73, 110, 111, 114, 124, 126, 157, 158, 169, 170, 243, 249, 252, 273, 276, 290, 291, 294, 296, 299, 314, 315, 334, 335, 346, 350, 351, 354, 355, 359, 362, 364, 365, 486, 489, 605, 606, 609, 613, 614, 623, 626, 630, 632, 642, 644, 646, 649, 650, 651, 652, 653, 654, 655, 666, 668, 673, 684, 685, 686, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 719, 723, 724, 732, 737, 752, 754, 885, 886, 887, 888, 889, 890, 891, 895, 899, 900, 901, 902, 913, 914, 983, 984, 987, 989, 992, 1005, 1006, 1016, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 69, 70, 74, 75, 112, 115, 116, 124, 128, 129, 131, 132, 133, 145, 146, 172, 173, 174, 175, 201, 202, 203, 204, 205, 206, 315, 330], "aspect": [17, 132, 994], "guid": [17, 18, 19, 127, 994], "through": [17, 19, 20, 112, 116, 118, 119, 120, 123, 127, 128, 129, 131, 132, 133, 134, 145, 365, 397, 400, 889, 892], "journei": [17, 994, 1000], "inclusvi": 17, "big": [17, 146], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 128, 994], "split": [17, 19, 69, 70, 128, 129, 146, 315, 324, 340, 341, 342, 343, 357, 358, 359, 605, 655, 825, 994], "section": [17, 19, 20, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 930, 931, 932, 936, 938], "below": [17, 18, 20, 21, 112, 113, 116, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 145, 172, 225, 229, 230, 234, 365, 405, 408, 425, 428, 437, 440, 561, 564, 596, 600, 737, 746, 748, 749, 751, 797, 799, 825, 839, 842, 843, 846, 930, 931, 939, 940, 943, 994], "best": [17, 18, 19, 20, 21, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 605, 655], "go": [17, 18, 19, 20, 112, 113, 116, 123, 128, 132, 146, 889, 900], "finish": [17, 18, 112, 994], "dive": [17, 19, 20, 128, 131, 132, 146, 994], "right": [17, 18, 19, 69, 70, 112, 116, 132, 365, 413, 416, 421, 424, 737, 788, 790], "environ": [17, 19, 21, 145], "basic": [17, 20, 21], "fork": [17, 18, 605, 656], "doc": [17, 20, 114, 115, 129, 132, 133, 994], "document": [17, 19, 118, 130, 132, 134], "local": [17, 18, 21, 119], "task": [17, 19, 145, 885, 886, 887, 888, 994], "help": [17, 18, 116, 118, 120, 122, 123, 131, 132, 133, 144, 605, 611, 950, 975, 978, 994], "video": [17, 19, 114, 115, 116, 118], "realli": [18, 123, 146], "contribut": [18, 19, 20, 129, 1000], "toward": [18, 129, 825, 859, 862, 994, 1000], "page": [18, 19, 130, 134, 144, 994, 1000], "explain": [18, 19, 20, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 994, 1000], "main": [18, 21, 121, 123, 172, 187, 188, 225, 229, 230, 234, 737, 749, 751, 797, 799], "prefer": [18, 123], "mode": [18, 45, 46, 69, 70, 116, 123, 146, 169, 170, 315, 344, 345, 346, 347, 359, 365, 379, 382, 536, 539, 605, 666, 683, 737, 781, 782, 783], "git": [18, 19, 118], "recurs": [18, 21, 24, 25, 26, 27, 28, 69, 70, 119, 123, 133, 146, 889, 890, 891, 899, 900, 901], "submodul": [18, 19, 20, 21, 117, 118, 119, 125, 128, 129, 133, 994, 1030, 1031, 1038, 1039], "com": 18, "unifyai": [18, 21], "http": [18, 115, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 686, 688, 691, 693, 695, 737, 749, 751, 825, 839, 842, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958], "gh": 18, "your_fold": 18, "id": [18, 122, 123, 127, 315, 334, 1028, 1029], "cours": [18, 19, 116, 132, 146], "whatev": [18, 146], "integr": [18, 243, 249, 252], "familiar": [18, 20], "decid": [18, 69, 70, 889, 900], "sure": [18, 20, 117, 118], "elig": 18, "free": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 145, 994], "student": 18, "licenc": 18, "peopl": [18, 19, 112], "seem": [18, 133, 146], "miss": [18, 116, 118, 122, 123, 127, 1032, 1036], "add": [18, 19, 20, 35, 36, 65, 66, 69, 70, 71, 72, 80, 81, 82, 83, 110, 111, 112, 113, 114, 115, 118, 119, 120, 122, 123, 129, 131, 146, 365, 366, 369, 383, 534, 606, 610, 686, 723, 907, 908, 911, 994, 1000, 1030, 1031], "explicit": [18, 21, 123, 124, 126, 129, 146], "remind": 18, "channel": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 605, 632, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026], "pace": 18, "updat": [18, 19, 20, 21, 69, 70, 112, 114, 116, 117, 121, 122, 123, 124, 129, 131, 132, 134, 146, 315, 324, 605, 649, 661, 662, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 734, 885, 886, 887, 889, 896, 897, 905, 906, 1005, 1006, 1032, 1033, 1034, 1035, 1036, 1037], "suggest": [18, 19, 113, 118], "latest": [18, 20, 21, 115, 146, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 737, 749, 751, 825, 839, 842, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 1016, 1025], "packag": [18, 21, 127, 146], "ensur": [18, 19, 114, 118, 122, 124, 127, 605, 649], "align": [18, 69, 70, 129, 131, 994, 1000], "accord": [18, 21, 69, 70, 119, 124, 243, 264, 267, 278, 281, 365, 379, 382, 421, 424, 536, 539, 605, 633, 661, 662, 737, 800, 802, 825, 835, 838, 881, 884, 950, 971, 974, 979, 982], "stabl": [18, 59, 60, 104, 105, 129, 146, 605, 640, 641, 663, 664, 671, 672, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949], "pypi": [18, 20, 146], "mayb": [18, 24, 27, 28, 129, 131], "person": [18, 19], "experi": [18, 130, 132, 146], "avoid": [18, 19, 118, 120, 121, 123, 127, 131, 315, 365, 458, 461], "pip": [18, 145, 994], "instal": [18, 21, 127, 145, 994], "abil": [18, 130, 146], "certain": [18, 69, 70, 118, 146, 172, 173, 174, 201, 202, 204, 205], "perhap": [18, 131, 132, 133, 146], "keep": [18, 19, 69, 70, 117, 118, 123, 130, 132, 134, 605, 684], "track": [18, 19, 315, 889, 901, 1028, 1029], "termin": [18, 19, 21, 69, 70, 71, 72, 73, 123, 129, 132], "run": [18, 21, 114, 117, 118, 120, 127, 129, 130, 131, 132, 133, 134, 145, 146, 315, 324, 686, 688, 691, 693, 695, 706, 708, 885, 886, 887, 888, 1016, 1027, 1028, 1029], "command": [18, 21, 994], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 115, 118, 127, 129, 131, 132, 134, 169, 170, 605, 611, 737, 752, 754, 781, 783, 788, 790, 930, 931, 932, 936], "3": [18, 21, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 49, 50, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 116, 118, 120, 123, 129, 131, 132, 133, 134, 157, 159, 160, 161, 162, 171, 172, 196, 199, 207, 210, 220, 223, 235, 237, 238, 242, 243, 264, 265, 266, 267, 268, 315, 334, 337, 353, 360, 365, 366, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 405, 408, 421, 424, 425, 428, 429, 431, 432, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 594, 595, 596, 597, 599, 600, 605, 606, 607, 608, 613, 614, 623, 630, 633, 634, 635, 636, 637, 638, 668, 670, 675, 681, 686, 688, 689, 690, 691, 692, 724, 725, 726, 727, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 749, 751, 758, 760, 769, 771, 775, 777, 788, 790, 794, 796, 797, 799, 806, 808, 809, 810, 812, 813, 814, 815, 817, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 861, 862, 863, 864, 865, 868, 873, 876, 889, 892, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 975, 978, 983, 984, 987, 994], "8": [18, 21, 35, 36, 47, 48, 49, 50, 71, 72, 80, 81, 92, 93, 98, 99, 116, 118, 123, 128, 132, 157, 161, 172, 238, 242, 315, 337, 365, 379, 382, 383, 388, 391, 392, 405, 408, 429, 432, 437, 440, 474, 477, 494, 497, 534, 535, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 596, 600, 605, 614, 633, 686, 688, 691, 724, 731, 737, 743, 745, 746, 748, 749, 751, 775, 777, 794, 796, 809, 810, 811, 812, 813, 814, 815, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 843, 846, 851, 854, 864, 913, 914, 915, 916, 917, 925, 929, 930, 931, 950, 951, 954, 994, 1016, 1027], "activ": [18, 19, 21, 23, 65, 66, 68, 110, 111, 113, 133, 158, 159, 160, 161, 162, 163, 166, 168, 994, 1003, 1004], "setup": 18, "click": [18, 19, 115, 994], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 134, 315, 360, 365, 522, 525, 526, 529, 925, 929, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966], "left": [18, 19, 69, 70, 116, 124, 365, 413, 416, 737, 752, 754, 765, 767, 788, 790, 925, 926, 994], "panel": 18, "select": [18, 19, 118, 129, 131, 134, 146], "drop": [18, 146], "down": [18, 118, 131], "path": [18, 21], "manual": [18, 19, 118, 133, 889, 890, 899, 900], "builtin": [18, 21, 131, 133], "requir": [18, 21, 113, 114, 115, 116, 118, 121, 122, 124, 125, 131, 146, 169, 170, 365, 578, 581, 737, 752, 754, 825, 869, 872, 1005, 1006], "cmd": [18, 21], "directori": [18, 19, 21, 118, 605, 667], "folder": [18, 19, 21, 113, 117, 118, 119], "file": [18, 19, 21, 69, 70, 113, 115, 118, 119, 120, 122, 123, 127, 129, 132, 605, 667, 1028, 1029], "abov": [18, 19, 21, 114, 115, 116, 118, 119, 120, 122, 123, 126, 127, 131, 132, 133, 134, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 534, 536, 539, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 752, 754, 797, 799, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 913, 915, 916, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 967, 970, 971, 974, 975, 978, 983, 984, 987], "m": [18, 19, 21, 112, 129, 172, 207, 210, 225, 229, 230, 234, 605, 614, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799, 913, 918, 919, 921], "python3": [18, 21], "script": [18, 19, 21, 116, 129, 146], "bat": [18, 19, 21], "OR": [18, 19, 21, 365, 417, 420, 526, 529, 983, 989, 992], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 69, 70, 71, 72, 73, 115, 122, 123, 127, 315, 349], "os": 18, "note": [18, 19, 113, 115, 116, 118, 123, 365, 557, 560, 737, 752, 754, 788, 790, 825, 869, 872, 930, 932, 936, 950, 959, 962], "tick": [18, 19], "abl": [18, 19, 69, 70, 119, 124, 126, 127, 131, 134], "To": [18, 116, 118, 119, 123, 127, 132, 133, 134, 994], "ivy_test": [18, 19], "test_array_api": [18, 19, 117, 118], "cd": [18, 19, 21], "r": [18, 69, 70, 605, 614, 684, 737, 781, 783, 806, 808], "txt": 18, "visual": [18, 127, 146], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 128, 365, 458, 461], "conflict": [18, 19, 132], "addit": [18, 19, 69, 70, 113, 115, 118, 123, 124, 131, 132, 134, 315, 360, 365, 379, 382, 605, 627, 628, 629, 907, 908, 911, 1016, 1026], "yet": [18, 20, 123], "particular": [18, 19, 113, 118, 126, 365, 366, 369], "system": [18, 146, 737, 785, 787], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 42, 87, 113, 129, 130, 132, 134, 145, 724, 725, 726, 727, 728, 730, 731, 994], "profession": 18, "execut": [18, 21, 123, 126, 129, 131, 134, 146, 605, 682], "deploy": 18, "top": [18, 19, 118, 132, 133, 994], "press": [18, 132, 994], "ok": 18, "correctli": [18, 69, 70, 114, 118, 123, 124, 127, 133, 146, 737, 765, 767, 925, 926], "caus": [18, 19, 116, 118, 123, 126, 127, 146], "earlier": [18, 19], "might": [18, 19, 113, 118, 121, 129, 131, 132, 605, 626], "necessari": [18, 116, 120, 123, 126], "virtualis": 18, "detail": [18, 19, 20, 113, 114, 117, 118, 119, 120, 121, 123, 132, 133, 172, 190, 193, 930, 931, 932, 936, 938], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 69, 70, 82, 83, 172, 207, 210, 605, 617, 618, 619, 620, 724, 732, 737, 765, 767, 803, 805, 1016, 1024], "keyr": 18, "fssl": 18, "download": [18, 118], "gpg": 18, "dearmor": 18, "o": [18, 112, 129, 605, 614], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 134, 146], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 65, 66, 69, 70, 84, 85, 102, 103, 110, 111, 113, 114, 116, 118, 124, 125, 127, 129, 132, 133, 134, 146, 172, 173, 174, 176, 179, 207, 208, 210, 212, 215, 243, 254, 255, 257, 315, 324, 325, 334, 336, 337, 340, 341, 344, 345, 359, 605, 614, 670, 675, 684, 686, 688, 690, 692, 723, 724, 725, 726, 727, 728, 729, 730, 731, 737, 794, 796, 825, 831, 834, 843, 846, 864, 869, 872, 889, 890, 891, 892, 895, 900, 901, 907, 908, 911, 925, 928, 930, 932, 933, 935, 936, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "dev": [18, 69, 70, 71, 73, 119, 125, 129, 131, 133, 315, 324, 349], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 118, 123, 146], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 118, 127, 145, 315], "post": [18, 134, 907, 908, 911, 994, 1000], "It": [18, 19, 21, 112, 113, 115, 116, 118, 120, 122, 123, 126, 129, 131, 132, 133, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 315, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 627, 628, 629, 631, 634, 637, 645, 658, 661, 662, 686, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 929, 930, 938, 939, 940, 943, 945, 948, 983, 984, 987, 989, 992], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 114, 115, 116, 118, 119, 123, 126, 129, 131, 132, 146], "featur": [18, 113, 114, 132, 994], "vm": 18, "azur": 18, "cloud": [18, 145], "mean": [18, 19, 61, 62, 69, 70, 106, 107, 110, 111, 112, 116, 118, 119, 123, 124, 125, 126, 129, 131, 132, 133, 134, 145, 146, 315, 344, 345, 346, 347, 359, 605, 628, 885, 886, 887, 888, 889, 895, 913, 918, 930, 931, 950, 994, 1007], "configur": [18, 19, 21, 69, 70, 124, 315, 358, 889, 902], "defin": [18, 20, 113, 114, 115, 118, 124, 131, 133, 146, 365, 536, 539, 557, 560, 605, 658, 737, 743, 745, 752, 754, 785, 787, 913, 915, 916, 950, 955, 958, 959, 962, 963, 966], "dockerfil": [18, 21], "longer": [18, 118, 124, 126], "worri": 18, "platform": 18, "agnost": [18, 114, 122, 129, 131, 134, 146, 994], "usual": [18, 118], "studio": 18, "favourit": 18, "extens": [18, 19, 115, 118, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 737, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987], "theme": 18, "too": [18, 19, 127, 146, 365, 379, 382, 536, 539], "done": [18, 19, 116, 118, 127, 132], "unsupport": [18, 124, 127, 243, 283, 284], "old": [18, 69, 70, 126], "slow": 18, "ipad": 18, "long": [18, 19, 116, 724, 734], "browser": 18, "cool": [18, 113], "requisit": 18, "head": [18, 123, 724, 735, 994, 1016, 1027], "pane": [18, 19], "readi": [18, 20], "begin": [18, 889, 890, 900], "outlin": [18, 19, 20, 112, 115, 118, 119, 123, 126, 131], "green": [18, 19, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 1041, 1042], "dropdown": 18, "tab": [18, 132, 994], "master": [18, 19, 123], "vs": [18, 118], "view": [18, 19, 172, 190, 193, 724, 727, 731], "log": [18, 19, 35, 36, 80, 81, 119, 123, 126, 129, 132, 172, 204, 205, 365, 506, 509, 514, 517, 737, 784, 994], "built": [18, 118, 130, 172, 173, 174, 315, 1016, 1027, 1028, 1029], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 35, 36, 98, 99, 116, 118, 365, 405, 408, 561, 564, 565, 566, 724, 727, 737, 749, 751, 775, 777, 794, 796, 825, 859, 862, 913, 915, 916, 917, 925, 928, 930, 931, 950, 951, 954], "minut": 18, "launch": 18, "12": [18, 96, 97, 98, 99, 116, 118, 123, 365, 405, 408, 425, 428, 437, 440, 561, 564, 605, 623, 641, 686, 688, 691, 737, 749, 751, 775, 777, 794, 796, 825, 843, 846, 851, 854, 859, 862, 907, 908, 910, 911, 912, 913, 915, 916, 917, 925, 929, 930, 931, 950, 951, 954], "output": [18, 69, 70, 112, 113, 114, 115, 116, 118, 119, 122, 123, 125, 126, 129, 131, 133, 134, 146, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 315, 324, 325, 359, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 616, 617, 618, 620, 623, 624, 627, 628, 629, 631, 633, 634, 637, 645, 658, 661, 662, 686, 697, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 889, 902, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 929, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027], "That": [18, 19, 118, 131, 132, 133, 365, 557, 560], "alreadi": [18, 19, 69, 70, 114, 120, 123, 131, 146, 315, 365, 429, 432, 462, 465, 536, 539, 561, 564, 601, 604, 737, 775, 777, 994], "refer": [18, 19, 114, 118, 119, 124, 146, 172, 187, 188, 365, 458, 461, 506, 509, 686, 688, 691, 693, 695, 737, 800, 802, 806, 808, 950, 971, 974, 979, 982, 983, 984, 987, 989, 992, 1016, 1026], "approach": [18, 19, 118, 119, 123, 131, 132, 146], "colour": 18, "applic": [18, 124, 125, 133, 724, 735, 736, 889, 895, 901], "good": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 133], "chanc": 18, "vscode": 18, "show": [18, 19, 69, 70, 116, 118, 126, 145, 146, 994], "explor": [18, 130, 134, 145], "troubleshoot": 18, "sometim": [18, 19, 118], "ever": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "64": [18, 118, 132, 133, 365, 578, 581, 582, 585, 724, 730, 731, 737, 775, 777, 950, 951, 954, 994, 1016, 1027], "bit": [18, 116, 118, 119, 123, 131, 243, 277, 278, 281, 285, 288, 365, 409, 412, 413, 416, 421, 424, 950, 967, 970, 975, 978], "usr": 18, "more": [18, 19, 20, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 145, 146, 172, 173, 174, 243, 254, 257, 365, 458, 461, 737, 761, 764, 825, 843, 846, 930, 931, 932, 936, 938, 994], "nutshel": [18, 114], "hook": 18, "lint": 18, "accept": [18, 19, 24, 114, 115, 116, 118, 119, 122, 123, 125, 126, 131, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 522, 525, 526, 529, 534, 545, 548, 557, 560, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 959, 962, 983, 984, 987, 994], "fix": [18, 19], "fail": [18, 20, 117, 118, 127, 129, 131], "attempt": [18, 127, 146], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 69, 70, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 129, 131, 132, 133, 134, 144, 146, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 243, 264, 265, 266, 268, 302, 305, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 605, 606, 607, 608, 610, 627, 628, 629, 634, 635, 636, 638, 676, 677, 678, 679, 686, 688, 689, 690, 692, 706, 708, 710, 712, 724, 733, 735, 736, 737, 738, 739, 740, 742, 769, 771, 778, 780, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 859, 860, 861, 863, 869, 872, 885, 886, 887, 889, 895, 898, 901, 902, 907, 908, 909, 910, 911, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993, 994, 1002, 1003, 1004, 1030, 1031], "proce": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "modifi": [18, 19, 115, 119, 124, 125, 127, 129], "properli": [18, 112], "enter": [18, 19, 114, 122, 124, 125, 315, 686, 723], "unsur": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "feel": [18, 19, 20, 21, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 994], "server": [19, 994], "appropri": [19, 65, 66, 110, 111, 118, 121, 365, 379, 382, 536, 539, 925, 926], "context": [19, 116, 118, 123, 124, 125, 315, 605, 656, 724, 735, 1016, 1027], "suitabl": [19, 113, 123], "quick": [19, 112, 133], "alwai": [19, 20, 69, 70, 113, 114, 115, 118, 119, 120, 122, 123, 126, 127, 129, 131, 146, 243, 249, 252, 365, 379, 382, 536, 539, 605, 649, 686, 702, 704, 719], "correct": [19, 20, 61, 62, 106, 107, 112, 114, 119, 123, 124, 125, 127, 243, 310, 825, 826, 829, 950, 971, 972, 973, 974, 979, 980, 981, 982, 994], "tendenc": 19, "gener": [19, 20, 21, 38, 65, 66, 69, 70, 83, 110, 111, 112, 113, 114, 115, 116, 119, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 145, 146, 169, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 557, 560, 578, 581, 582, 585, 606, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685, 686, 702, 704, 737, 749, 751, 825, 839, 842, 859, 862, 913, 914, 915, 916, 919, 921, 923, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 994, 1032, 1036], "land": 19, "end": [19, 123, 126, 128, 145, 146, 172, 173, 174, 365, 397, 400, 994, 1000], "world": 19, "come": [19, 20, 118, 133, 144, 994, 1000], "fly": 19, "hard": [19, 131], "receiv": [19, 118, 124, 125, 315, 324, 325, 605, 612, 655, 1016, 1026], "respons": [19, 21], "internship": 19, "comment": [19, 127], "trigger": 19, "unansw": 19, "label": [19, 129, 130, 134, 809, 810, 813, 815, 818, 820, 823], "respond": 19, "remov": [19, 20, 21, 69, 70, 115, 118, 119, 124, 126, 134, 737, 749, 751, 761, 764, 797, 799, 825, 865, 868, 885, 886, 887], "someon": [19, 146], "els": [19, 20, 113, 119, 120, 126, 129, 131, 133, 134, 146, 605, 615, 626, 630, 889, 899], "strive": [19, 118, 146], "repli": 19, "newli": [19, 118, 126, 169, 170, 243, 249, 252, 605, 616], "place": [19, 69, 70, 112, 113, 114, 115, 116, 118, 119, 123, 125, 127, 134, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 315, 360, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 647, 648, 649, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987, 1032, 1033, 1034, 1035, 1036, 1037], "bug": [19, 118], "serv": [19, 114, 118, 119, 122, 123, 128, 994], "suspect": 19, "behaviour": [19, 114, 115, 118, 122, 123, 126, 131], "observ": 19, "confid": 19, "noth": [19, 69, 70], "wrong": 19, "someth": [19, 113, 132, 133, 146], "bet": 19, "act": [19, 116, 146], "placehold": [19, 114, 122, 127, 889, 901], "sub": [19, 20, 69, 70, 112, 118, 123, 131, 132, 133, 315, 340, 341, 344, 345, 346, 347, 737, 749, 751, 825, 864, 885, 886, 887, 888, 994], "mark": [19, 118], "ii": [19, 950, 951, 954], "iii": 19, "titl": [19, 994], "issue_numb": 19, "delet": [19, 21], "No": [19, 129], "wait": [19, 69, 70, 71, 72, 73], "progress": [19, 123, 130, 134], "pr": 19, "soon": [19, 123, 144, 146, 994, 1000], "partial": [19, 69, 70, 1028, 1029], "solut": [19, 118, 123, 737, 785, 787], "review": [19, 113], "merg": 19, "everi": [19, 20, 21, 114, 116, 117, 118, 119, 120, 121, 123, 126, 129, 131, 133, 172, 195, 196, 199, 605, 606, 609], "shape": [19, 31, 32, 49, 50, 69, 70, 74, 75, 76, 77, 84, 85, 94, 95, 98, 99, 102, 103, 113, 114, 115, 116, 118, 124, 125, 126, 129, 131, 132, 133, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 219, 220, 223, 225, 229, 230, 234, 235, 236, 237, 238, 242, 243, 249, 252, 254, 257, 259, 260, 261, 262, 263, 315, 327, 355, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 627, 628, 629, 631, 634, 637, 642, 645, 658, 661, 662, 666, 670, 683, 686, 688, 690, 692, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 907, 908, 911, 913, 914, 915, 916, 917, 918, 919, 921, 922, 924, 925, 926, 928, 929, 933, 935, 939, 940, 943, 945, 948, 950, 951, 954, 983, 984, 987, 989, 992, 994, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1030, 1031], "move": [19, 69, 70, 113, 315, 360], "within": [19, 24, 27, 28, 118, 133, 146, 172, 173, 174, 913, 919, 921], "7": [19, 21, 35, 36, 47, 48, 49, 50, 71, 72, 80, 81, 92, 93, 96, 97, 98, 99, 116, 118, 119, 123, 126, 157, 159, 160, 315, 337, 365, 366, 369, 379, 380, 381, 382, 383, 388, 390, 405, 408, 409, 412, 425, 428, 429, 432, 437, 440, 454, 457, 462, 465, 474, 477, 494, 497, 534, 535, 561, 564, 565, 566, 567, 568, 578, 581, 591, 595, 596, 600, 605, 614, 623, 633, 686, 688, 691, 693, 695, 706, 708, 724, 730, 731, 736, 737, 743, 745, 746, 748, 749, 751, 775, 777, 794, 796, 809, 810, 811, 813, 814, 815, 818, 820, 821, 823, 824, 825, 826, 827, 829, 839, 842, 843, 846, 851, 854, 864, 873, 876, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 925, 929, 930, 931, 950, 951, 954], "dai": 19, "close": [19, 115, 365, 458, 461, 561, 564, 737, 788, 790], "likewis": [19, 114, 115, 119, 123, 124, 132], "freed": 19, "flag": [19, 69, 70, 126, 131, 315, 334, 686, 702, 704], "purpos": [19, 21, 114, 116, 118, 119, 121, 122, 123, 128, 131, 365, 458, 461, 994], "remain": [19, 116, 146, 365, 379, 382, 536, 539, 557, 560, 825, 855, 858, 889, 895], "access": [19, 21, 69, 70, 124], "short": [19, 133, 724, 734], "basi": [19, 117, 132], "situat": [19, 134], "alloc": [19, 146, 172, 225, 229, 230, 234, 243, 249, 252, 315], "upon": [19, 116, 118, 126, 146], "period": 19, "prevent": [19, 126, 127, 131, 686, 688, 691, 693, 695, 706, 708, 950, 975, 978, 1032, 1033, 1034], "unabl": 19, "obvious": 19, "never": [19, 118, 123], "reflect": [19, 122], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 131, 134], "becaus": [19, 114, 115, 118, 119, 120, 122, 124, 125, 126, 129, 133, 134, 146], "inact": 19, "limit": [19, 69, 70, 71, 72, 73, 116, 118, 127, 129, 132, 134, 146, 243, 278, 281, 285, 288, 605, 617, 618, 620, 825, 826, 829], "me": 19, "unfairli": 19, "definit": [19, 119, 124, 131, 737, 738, 741, 743, 745], "investig": 19, "Then": [19, 21, 131, 146], "practic": 19, "separ": [19, 118, 122, 127, 129, 131, 132], "branch": [19, 123, 146, 169, 170, 365, 397, 400], "simpli": [19, 22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 69, 70, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 114, 115, 116, 118, 119, 122, 123, 125, 126, 129, 133, 134, 163, 164, 165, 167, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 264, 265, 266, 268, 365, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 458, 461, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 606, 607, 608, 610, 634, 635, 636, 638, 676, 677, 678, 679, 688, 689, 690, 692, 738, 739, 740, 742, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 859, 860, 861, 863, 908, 909, 910, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993], "role": [19, 130], "kept": [19, 69, 70, 71, 72, 73, 126, 885, 886, 887], "date": 19, "upstream": [19, 117], "complic": [19, 129], "root": [19, 21, 132, 365, 578, 581, 913, 914, 918], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 950, 967, 970, 975, 978], "clone": [19, 21, 69, 70, 315, 336, 337, 338, 339], "push": [19, 117, 127], "both": [19, 114, 115, 116, 118, 119, 123, 125, 126, 129, 131, 132, 133, 134, 145, 146, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 301, 365, 366, 369, 379, 382, 384, 387, 388, 391, 429, 432, 462, 465, 534, 545, 548, 553, 556, 565, 568, 578, 581, 582, 585, 591, 595, 605, 633, 686, 688, 691, 724, 727, 736, 737, 738, 741, 743, 745, 749, 751, 761, 764, 800, 802, 825, 859, 862, 907, 908, 911, 930, 932, 936, 950, 955, 958, 983, 984, 987], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 69, 70, 71, 72, 114, 115, 116, 117, 118, 119, 122, 123, 124, 243, 254, 257, 365, 397, 400, 553, 556, 737, 743, 745, 752, 754, 785, 787, 825, 831, 834, 859, 862, 913, 914, 925, 926, 927, 930, 931, 932, 936, 938, 950, 967, 970, 971, 974, 975, 978, 979, 982], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 114, 115, 123, 131], "atlassian": 19, "tutori": 19, "wrote": 19, "piec": [19, 119, 121, 122, 129], "inform": [19, 118, 127, 243, 278, 281, 285, 288, 605, 611, 686, 719], "tag": 19, "usu": 19, "describ": [19, 118, 130, 134, 950, 951, 954, 967, 970, 971, 974, 975, 978], "navig": [19, 112], "blame": 19, "revis": 19, "author": [19, 994], "eg": [19, 118], "16": [19, 45, 46, 80, 81, 98, 99, 116, 118, 132, 365, 591, 592, 594, 595, 724, 730, 737, 738, 739, 741, 749, 751, 775, 777, 915, 917, 925, 929, 950, 951, 954], "5": [19, 21, 35, 36, 37, 38, 45, 46, 49, 50, 51, 52, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 94, 95, 96, 97, 98, 99, 114, 116, 118, 120, 131, 132, 133, 157, 159, 160, 162, 172, 196, 199, 207, 210, 220, 223, 235, 237, 238, 242, 243, 264, 266, 267, 268, 315, 337, 353, 365, 366, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 392, 401, 404, 405, 408, 421, 424, 425, 428, 429, 430, 431, 432, 437, 440, 462, 463, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 578, 581, 582, 585, 591, 592, 594, 595, 596, 597, 599, 600, 605, 606, 607, 614, 623, 633, 634, 637, 638, 670, 675, 686, 688, 690, 691, 692, 724, 727, 729, 730, 736, 737, 738, 739, 741, 743, 745, 746, 748, 749, 751, 758, 760, 775, 777, 794, 796, 797, 799, 809, 820, 823, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 861, 862, 863, 864, 873, 876, 889, 892, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 924, 925, 927, 928, 929, 930, 931, 932, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 987, 1016, 1027], "past": 19, "l": [19, 112, 737, 738, 741, 752, 754, 761, 764, 797, 799], "filepath": [19, 69, 70], "grep": 19, "v": [19, 129, 132, 133, 134, 724, 736, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1036, 1038, 1039], "commit_id": 19, "handi": [19, 118], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 116], "previou": [19, 114, 118, 134, 146, 605, 683, 686, 693, 695, 706, 708], "shown": [19, 65, 66, 69, 70, 110, 111, 114, 116, 118, 127, 129, 131, 146, 365, 405, 408, 425, 428, 437, 440, 561, 564, 596, 600, 737, 746, 748, 825, 839, 842, 843, 846, 930, 931, 939, 940, 943], "whenev": [19, 118, 131, 132], "think": [19, 116], "interact": [19, 118, 994], "gain": [19, 128, 133, 1007], "quit": [19, 20, 115, 118, 119, 121, 122], "repeat": [19, 49, 50, 69, 70, 94, 95, 115, 116, 118, 120, 122, 123, 127, 605, 629, 825, 877, 880], "yourself": [19, 20, 118, 145], "simpler": [19, 131], "cannot": [19, 120, 124, 134], "least": [19, 116, 118, 119, 122, 737, 761, 764], "final": [19, 115, 116, 119, 122, 124, 126, 127, 129, 131, 132, 172, 201, 202, 204, 205, 605, 632, 1016, 1027], "tickbox": 19, "lower": [19, 69, 70, 116, 118, 129, 146, 172, 187, 188, 225, 229, 365, 534, 737, 738, 741, 913, 919, 921], "corner": 19, "without": [19, 69, 70, 113, 114, 119, 122, 123, 125, 127, 129, 131, 132, 133, 145, 146, 605, 660, 665, 825, 855, 858, 889, 891, 930, 931, 932, 936, 938], "span": 19, "intent": [19, 126], "larg": [19, 132, 365, 379, 382, 536, 539], "discourag": 19, "philosophi": 19, "increment": [19, 605, 648], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 994], "wast": 19, "spot": [19, 119], "mistak": [19, 127], "propos": 19, "mountain": 19, "around": [19, 69, 70, 71, 72, 73, 114, 119, 122, 131, 146], "advoc": [19, 146], "individu": [19, 20, 119], "per": [19, 118, 132, 315, 724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "style": [19, 925, 928], "ve": [19, 128, 131, 913, 914, 994], "were": [19, 69, 70, 113, 118, 123, 127], "actual": [19, 112, 119, 126, 128, 131, 133, 146], "aim": [19, 128], "part": [19, 113, 117, 118, 119, 129, 130, 134, 145, 146, 172, 225, 229, 230, 234, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 1028, 1029], "subsect": 19, "session": [19, 994], "block": [19, 118, 119, 127, 128, 130, 134, 146, 315, 686, 723, 994], "smaller": [19, 129, 134, 825, 826, 829, 859, 862, 950, 967, 970, 975, 978], "edit": 19, "exact": [19, 69, 70, 129, 930, 931], "beauti": 19, "particularli": [19, 132, 146], "concern": [19, 112, 116, 123, 126, 128], "effici": [19, 114, 118, 119, 123, 126, 127, 129, 132, 146], "difficult": [19, 118, 146, 930, 931, 932, 936, 938], "undo": 19, "stress": 19, "frequenc": [19, 605, 632], "pycharm": 19, "pytest": [19, 118], "button": 19, "declar": 19, "insid": [19, 21, 113, 118, 124], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 118], "test_funct": [19, 118], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 69, 70, 76, 77, 118, 243, 270, 271, 272, 307, 308, 309, 315, 328, 329, 605, 621, 625, 643, 686, 718], "q": [19, 146, 724, 736, 737, 752, 754, 781, 783], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "variou": [19, 114, 115, 121, 145], "valu": [19, 49, 50, 57, 58, 69, 70, 71, 72, 73, 94, 95, 114, 116, 118, 119, 123, 124, 125, 126, 127, 129, 131, 134, 146, 172, 173, 174, 187, 188, 195, 196, 199, 201, 202, 204, 205, 243, 249, 252, 270, 271, 272, 315, 327, 358, 359, 365, 366, 369, 371, 374, 379, 382, 384, 387, 393, 396, 429, 432, 446, 449, 450, 453, 462, 465, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 536, 539, 545, 548, 549, 552, 553, 556, 561, 564, 596, 600, 601, 604, 605, 617, 618, 620, 621, 626, 632, 633, 634, 637, 643, 646, 650, 660, 661, 662, 663, 664, 665, 685, 686, 688, 691, 693, 695, 697, 706, 708, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 769, 771, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 803, 805, 825, 826, 829, 835, 836, 837, 838, 851, 854, 855, 858, 881, 883, 884, 885, 886, 887, 889, 893, 894, 895, 896, 897, 902, 905, 906, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 923, 925, 926, 927, 929, 930, 931, 932, 934, 936, 937, 938, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036], "cpu": [19, 69, 70, 125, 146, 172, 201, 202, 204, 205, 238, 242, 315, 334, 335, 337, 351, 354, 356, 360, 361, 363, 364, 605, 633, 634, 637, 658, 661, 662, 913, 914, 915, 916, 918, 919, 921, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "gpu": [19, 98, 99, 125, 131, 146, 315, 334, 337, 350, 352, 356, 358, 363, 915, 917], "combin": [19, 69, 70, 71, 72, 73, 116, 118, 119, 122, 123, 134, 737, 743, 745], "wherebi": [20, 123, 889, 901], "broad": 20, "distribut": [20, 69, 70, 118, 125, 146, 315, 336, 340, 341, 342, 343, 724, 732, 809, 810, 813, 815, 818, 820, 823, 913, 914, 915, 916, 918, 919, 921, 1016, 1024, 1028, 1029], "across": [20, 69, 70, 114, 116, 118, 119, 123, 124, 315, 324, 325, 336, 337, 339, 340, 341, 342, 343, 347, 357, 358, 605, 613, 614, 889, 895, 925, 927], "todo": 20, "commit": [20, 118], "NOT": [20, 365, 522, 525], "static": [20, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 115, 116, 119, 146, 163, 167, 169, 170, 264, 268, 366, 370, 379, 383, 388, 392, 565, 569, 591, 592, 596, 597, 606, 610, 634, 638, 676, 677, 738, 742, 810, 814, 815, 819, 820, 824, 826, 830, 859, 863, 908, 912, 915, 917, 932, 933, 984, 988, 989, 993], "method": [20, 22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 122, 127, 129, 130, 133, 134, 146, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 176, 177, 182, 183, 190, 191, 193, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 242, 264, 265, 266, 268, 365, 366, 367, 368, 370, 379, 380, 381, 383, 384, 387, 388, 389, 390, 392, 405, 408, 425, 428, 429, 430, 431, 432, 437, 440, 462, 463, 464, 465, 474, 477, 494, 497, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 569, 578, 581, 582, 585, 591, 592, 593, 594, 596, 597, 598, 599, 600, 605, 606, 607, 608, 610, 621, 622, 633, 634, 635, 636, 638, 661, 662, 675, 676, 677, 678, 679, 680, 681, 686, 688, 689, 690, 692, 706, 708, 710, 712, 723, 724, 730, 736, 737, 738, 739, 740, 742, 743, 745, 746, 748, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 839, 842, 843, 846, 851, 854, 859, 860, 861, 863, 864, 873, 876, 889, 890, 900, 901, 902, 908, 909, 910, 912, 913, 915, 917, 918, 919, 921, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 1016, 1027, 1028, 1029], "instanc": [20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 108, 109, 110, 111, 114, 115, 116, 118, 119, 122, 124, 126, 132, 133, 134, 147, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 176, 177, 179, 181, 182, 183, 185, 187, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 205, 207, 210, 212, 213, 217, 218, 220, 221, 223, 225, 227, 229, 230, 232, 234, 235, 237, 238, 240, 242, 243, 264, 265, 266, 267, 315, 324, 356, 365, 366, 367, 368, 369, 379, 380, 381, 382, 384, 387, 388, 389, 390, 391, 405, 408, 425, 428, 429, 430, 431, 432, 437, 440, 462, 463, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 578, 581, 582, 585, 591, 593, 594, 595, 596, 598, 599, 600, 605, 606, 607, 608, 622, 633, 634, 635, 636, 649, 666, 675, 676, 678, 679, 680, 681, 688, 689, 690, 692, 724, 727, 730, 736, 737, 738, 739, 740, 741, 743, 745, 746, 748, 749, 751, 809, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 825, 826, 827, 828, 839, 842, 843, 846, 851, 854, 859, 860, 861, 862, 864, 873, 876, 907, 908, 909, 910, 911, 913, 918, 919, 921, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 983, 984, 985, 986, 987, 989, 990, 991, 1005, 1006], "revers": [20, 71, 72, 115, 116, 134, 146, 605, 626, 825, 843, 846], "resourc": 20, "content": [20, 21, 69, 70, 126, 129, 132], "thei": [20, 69, 70, 112, 113, 116, 118, 119, 121, 123, 124, 125, 126, 127, 131, 132, 133, 134, 146, 243, 301, 885, 886, 887, 913, 914, 994, 1038, 1039], "hypothesi": 20, "cover": [20, 115, 116, 118, 119, 121, 128], "lambda": [20, 129, 132, 1032, 1035, 1037], "direct": [20, 133, 134, 145, 939, 945, 948], "bind": [20, 123], "special": [20, 71, 72, 113, 114, 115, 116, 122, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 425, 428, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 950, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982], "aforement": 20, "categori": [20, 113, 122, 123, 124, 128, 994], "parent": [20, 131, 686, 723], "arraywithelementwis": [20, 35, 122], "containerwithmanipul": [20, 71, 72, 94], "hint": [20, 113, 114, 115, 119, 122, 126, 127, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987], "its": [20, 21, 115, 118, 127, 243, 254, 257, 315, 359, 737, 761, 764, 825, 839, 842, 855, 858, 859, 862, 873, 876], "docstr": [20, 21, 22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 112, 113, 114, 119, 123, 127, 163, 164, 165, 167, 172, 173, 174, 176, 177, 179, 181, 182, 183, 185, 187, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 207, 210, 212, 213, 217, 218, 220, 221, 223, 225, 227, 229, 230, 232, 234, 235, 237, 238, 240, 242, 243, 264, 265, 266, 267, 268, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 405, 408, 425, 428, 429, 430, 431, 432, 437, 440, 462, 463, 464, 465, 494, 497, 534, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 606, 607, 608, 610, 634, 635, 636, 638, 676, 677, 678, 679, 688, 689, 690, 692, 737, 738, 739, 740, 742, 746, 748, 749, 751, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 830, 839, 842, 843, 846, 859, 860, 861, 862, 863, 908, 909, 910, 912, 915, 917, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 950, 955, 958, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993], "thorough": [20, 114, 115, 118], "transpil": [20, 128, 130, 994, 1000], "builder": [21, 144, 146, 994], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 737, 749, 751, 769, 771, 778, 780, 797, 799, 825, 843, 846, 859, 862, 939, 940, 943, 945, 948, 994], "synchron": 21, "rest": [21, 130, 134], "remove_doc": 21, "_": [21, 115, 123, 126, 131, 132, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 686, 688, 691, 693, 695, 737, 749, 751, 806, 808, 825, 839, 842, 859, 862, 930, 931, 939, 940, 943, 950, 955, 958], "indic": [21, 37, 38, 69, 70, 82, 83, 127, 130, 134, 157, 162, 365, 565, 568, 605, 633, 634, 635, 636, 637, 638, 645, 658, 661, 662, 724, 725, 726, 727, 728, 729, 730, 731, 737, 803, 805, 825, 859, 862, 889, 890, 892, 894, 896, 897, 898, 900, 903, 904, 905, 906, 907, 908, 911, 913, 914, 925, 926, 927, 928, 930, 931, 937, 939, 940, 943, 945, 948, 994, 997, 999, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1028, 1029], "privat": [21, 118, 1032, 1036], "fulfil": [21, 128, 994], "autogenerated_sourc": 21, "format": [21, 69, 70, 112, 115, 124, 125, 129, 131, 132, 243, 273, 276, 315, 335, 950, 951, 954, 994], "png": [21, 132], "_imag": 21, "lastli": 21, "structur": [21, 69, 70, 71, 72, 73, 113, 119, 122, 123, 132, 133, 605, 621, 889, 902], "rst": 21, "skip": [21, 69, 70, 118, 889, 902], "read": [21, 69, 70, 994], "partial_sourc": 21, "conf": 21, "copi": [21, 29, 30, 31, 32, 69, 70, 74, 75, 76, 77, 115, 120, 124, 129, 131, 132, 145, 146, 172, 176, 177, 178, 179, 180, 190, 193, 243, 249, 250, 251, 252, 253, 315, 360, 605, 622, 676, 680, 681, 825, 855, 858, 889, 891, 939, 945, 948], "create_rst_fil": 21, "filter": [21, 118, 724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "repres": [21, 118, 131, 172, 207, 210, 243, 277, 365, 375, 378, 379, 382, 388, 391, 401, 404, 437, 440, 536, 539, 574, 577, 596, 600, 686, 723, 724, 733, 737, 784, 785, 787], "overal": [21, 115, 123, 124, 125, 134], "markup": 21, "6": [21, 35, 36, 39, 40, 49, 50, 71, 72, 80, 81, 82, 83, 92, 93, 96, 97, 98, 99, 116, 118, 120, 123, 131, 132, 133, 157, 159, 160, 162, 172, 196, 199, 238, 242, 315, 337, 353, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 391, 405, 408, 409, 412, 425, 428, 429, 430, 431, 432, 437, 440, 462, 465, 474, 477, 494, 497, 534, 535, 541, 544, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 595, 596, 600, 605, 614, 623, 633, 634, 637, 638, 670, 675, 686, 688, 689, 691, 724, 727, 730, 731, 736, 737, 743, 745, 746, 748, 749, 751, 775, 777, 788, 790, 794, 796, 809, 810, 812, 813, 814, 815, 817, 819, 820, 822, 823, 824, 825, 826, 827, 829, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 862, 864, 873, 876, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 925, 926, 929, 930, 931, 932, 936, 950, 951, 954, 955, 958], "extract": [21, 113], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 146], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 69, 70, 118, 129, 132, 365, 413, 416, 737, 749, 751, 761, 764], "append_toctree_to_rst": 21, "9": [21, 35, 36, 39, 40, 49, 50, 71, 72, 80, 81, 84, 85, 98, 99, 116, 118, 132, 133, 365, 379, 380, 381, 382, 383, 388, 391, 405, 408, 409, 412, 534, 535, 561, 564, 565, 568, 578, 581, 582, 585, 605, 633, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 724, 727, 730, 731, 737, 743, 745, 746, 748, 749, 751, 775, 777, 788, 790, 794, 796, 825, 826, 827, 829, 843, 846, 851, 854, 859, 862, 864, 913, 914, 915, 916, 917, 925, 929, 930, 931, 950, 951, 954, 1032, 1033, 1034], "index": [21, 29, 30, 69, 70, 74, 75, 119, 123, 131, 171, 172, 187, 188, 207, 208, 209, 210, 211, 315, 356, 605, 611, 633, 634, 637, 825, 869, 872, 889, 892, 893, 896, 897, 898, 903, 905, 925, 926, 927, 928, 930, 931, 932, 936, 939, 940, 943, 997, 999], "create_index_rst": 21, "14": [21, 80, 81, 96, 97, 98, 99, 116, 118, 123, 365, 388, 391, 425, 428, 565, 569, 686, 688, 691, 724, 736, 737, 749, 751, 775, 777, 908, 910, 912, 915, 917, 930, 931, 950, 951, 954], "\u03c0": [21, 365, 371, 374, 384, 387, 393, 396, 397, 400], "namespac": [21, 113, 124, 129, 134], "arraywithactiv": 22, "abc": [22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 131, 315, 324, 330, 605, 630, 1028, 1029, 1032, 1036], "softplu": [22, 23, 67, 68, 157, 167, 994], "variant": [22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 115, 116, 163, 164, 165, 167, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 264, 265, 266, 268, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 606, 607, 608, 610, 634, 635, 636, 638, 676, 677, 678, 679, 688, 689, 690, 692, 738, 739, 740, 742, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 859, 860, 861, 863, 908, 909, 910, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993], "wrap": [22, 23, 24, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 111, 112, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 134, 146, 147, 155, 163, 164, 165, 167, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 264, 265, 266, 268, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 605, 606, 607, 608, 610, 616, 634, 635, 636, 638, 676, 677, 678, 679, 686, 688, 689, 690, 692, 722, 738, 739, 740, 742, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 859, 860, 861, 863, 908, 909, 910, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993], "minim": [22, 23, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 63, 64, 67, 68, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 115, 126, 129, 163, 164, 165, 167, 176, 177, 182, 183, 190, 191, 196, 197, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 264, 265, 266, 268, 366, 367, 368, 370, 379, 380, 381, 383, 388, 389, 390, 392, 429, 430, 431, 462, 463, 464, 565, 566, 567, 569, 591, 592, 593, 594, 596, 597, 598, 599, 606, 607, 608, 610, 634, 635, 636, 638, 676, 677, 678, 679, 688, 689, 690, 692, 738, 739, 740, 742, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 859, 860, 861, 863, 908, 909, 910, 912, 915, 917, 932, 933, 934, 935, 984, 985, 986, 988, 989, 990, 991, 993], "collect": [24, 69, 70, 118, 145, 157, 169, 315, 605, 686, 724, 809, 889, 902, 907, 913, 1002, 1016, 1030, 1032], "args_to_ivi": 24, "include_deriv": [24, 25, 26, 27, 28, 889, 891, 901], "keyword": [24, 25, 26, 69, 70, 71, 72, 73, 113, 114, 118, 124, 125, 126, 132, 172, 207, 210, 315, 324, 325, 339, 343, 347, 605, 612, 655, 889, 895, 950, 975, 978, 1028, 1029], "variabl": [24, 25, 26, 27, 28, 69, 70, 71, 72, 114, 115, 118, 120, 123, 124, 126, 127, 132, 133, 134, 146, 605, 615, 647, 648, 649, 650, 651, 652, 654, 673, 686, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 719, 722, 724, 735, 737, 785, 787, 885, 886, 887, 888, 907, 908, 911, 994, 1005, 1006, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "nest": [24, 25, 26, 27, 28, 69, 70, 71, 72, 73, 113, 118, 119, 122, 123, 131, 132, 133, 146, 315, 339, 343, 347, 605, 675, 686, 723, 885, 886, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037], "unchang": [24, 25, 26, 27, 28], "posit": [24, 25, 26, 35, 36, 80, 81, 114, 118, 132, 145, 171, 172, 187, 188, 243, 278, 281, 315, 339, 343, 347, 365, 366, 369, 478, 481, 482, 485, 536, 539, 557, 560, 605, 632, 737, 738, 741, 825, 839, 842, 859, 862, 913, 923, 925, 928, 983, 984, 987, 989, 992, 1005, 1006], "bool": [24, 25, 26, 27, 28, 31, 32, 69, 70, 110, 111, 116, 123, 124, 126, 127, 134, 169, 170, 172, 195, 243, 249, 252, 264, 265, 267, 270, 271, 272, 273, 276, 283, 290, 291, 292, 294, 296, 297, 299, 314, 315, 334, 335, 350, 359, 362, 365, 405, 408, 409, 412, 417, 420, 425, 428, 446, 449, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 518, 521, 522, 525, 526, 529, 545, 548, 605, 606, 609, 613, 614, 623, 626, 630, 632, 642, 644, 649, 651, 652, 653, 654, 668, 669, 684, 685, 686, 719, 723, 737, 738, 741, 765, 767, 788, 790, 803, 805, 825, 864, 885, 886, 887, 888, 889, 890, 891, 895, 899, 900, 901, 913, 914, 925, 926, 927, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "deriv": [24, 25, 26, 27, 28, 124, 125, 131, 133, 172, 182, 185, 196, 199, 220, 223, 238, 242, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 889, 891, 901, 1028, 1032, 1036, 1038], "tupl": [24, 25, 26, 27, 28, 45, 46, 57, 58, 69, 70, 113, 114, 118, 123, 124, 125, 127, 131, 132, 133, 146, 172, 176, 179, 212, 215, 243, 259, 262, 284, 310, 315, 334, 605, 632, 670, 724, 727, 730, 731, 734, 737, 769, 771, 778, 780, 788, 789, 790, 794, 796, 803, 805, 825, 831, 834, 835, 838, 843, 846, 847, 850, 859, 862, 865, 868, 869, 872, 881, 884, 885, 886, 887, 888, 889, 891, 892, 894, 896, 897, 898, 900, 901, 903, 904, 905, 906, 925, 928, 930, 931, 932, 934, 936, 937, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "kei": [24, 25, 26, 69, 70, 71, 72, 73, 118, 123, 127, 132, 315, 327, 605, 611, 621, 724, 735, 736, 885, 886, 887, 889, 892, 898, 902, 1005, 1006, 1016, 1027, 1032, 1036], "word": [24, 25, 26, 172, 173, 174, 913, 919, 921, 1005, 1006], "args_to_n": [24, 126, 131], "to_ivi": [24, 69, 70, 131, 889, 902], "input": [24, 27, 28, 39, 40, 69, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 146, 147, 155, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 254, 257, 259, 262, 264, 267, 269, 270, 271, 272, 273, 276, 277, 291, 294, 296, 299, 301, 302, 305, 310, 314, 315, 324, 325, 334, 335, 336, 337, 339, 340, 343, 347, 353, 359, 360, 365, 366, 369, 370, 371, 374, 375, 378, 379, 382, 383, 384, 387, 388, 391, 392, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 592, 595, 596, 597, 600, 601, 604, 605, 606, 609, 610, 611, 613, 614, 615, 617, 618, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 642, 644, 645, 647, 648, 649, 651, 652, 653, 654, 658, 661, 662, 668, 670, 673, 675, 676, 677, 680, 681, 684, 685, 686, 688, 689, 690, 691, 692, 697, 702, 704, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 814, 815, 818, 819, 820, 823, 824, 825, 826, 829, 830, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 892, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1031], "leaf": [24, 27, 28, 69, 70, 119, 123, 132, 889, 890, 899, 900], "union": [24, 27, 28, 37, 38, 45, 46, 69, 70, 113, 114, 116, 119, 122, 123, 124, 125, 126, 127, 129, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 247, 248, 249, 252, 254, 257, 259, 262, 269, 270, 271, 272, 273, 276, 277, 278, 281, 285, 288, 290, 291, 294, 296, 299, 301, 302, 305, 307, 308, 309, 310, 314, 315, 331, 332, 333, 334, 335, 337, 340, 341, 342, 343, 348, 354, 356, 358, 359, 360, 361, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 609, 613, 614, 617, 618, 620, 623, 624, 627, 628, 629, 631, 632, 633, 634, 635, 637, 642, 644, 645, 647, 648, 649, 658, 661, 662, 668, 670, 675, 676, 680, 681, 684, 685, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 719, 721, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 900, 901, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "nativearrai": [24, 27, 28, 29, 30, 37, 38, 113, 114, 116, 119, 122, 123, 126, 127, 129, 131, 134, 147, 155, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 182, 185, 196, 199, 201, 202, 204, 205, 207, 210, 212, 213, 215, 220, 223, 225, 229, 230, 234, 238, 242, 243, 249, 252, 254, 257, 259, 262, 264, 267, 273, 276, 278, 281, 285, 288, 291, 294, 296, 299, 302, 305, 310, 315, 334, 335, 337, 353, 359, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 606, 607, 609, 613, 614, 617, 618, 620, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 635, 637, 642, 644, 645, 647, 648, 649, 658, 661, 662, 668, 670, 675, 676, 680, 681, 684, 685, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 719, 721, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 889, 891, 892, 901, 907, 908, 911, 913, 914, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "travers": [24, 27, 28, 69, 70, 123, 129, 131, 889, 901], "lowest": [24, 27, 28, 69, 70, 119, 146, 889, 901, 913, 915, 916], "leav": [24, 27, 28, 69, 70, 71, 72, 114, 115, 116, 118, 119, 123, 124, 126, 132, 133, 825, 869, 872, 889, 890, 891, 899, 900, 901], "to_n": [24, 69, 70], "item": [24, 28, 65, 66, 69, 70, 124, 129, 131, 132, 134, 243, 270, 315, 324, 325, 327, 334, 336, 338, 340, 342, 346, 605, 621, 643, 671, 672, 889, 894, 895, 896, 897, 901, 905, 906, 994, 1028, 1029], "arraywithcr": 29, "asarrai": [29, 30, 74, 75, 118, 126, 172, 724, 725, 930, 932, 936], "dtype": [29, 30, 31, 32, 61, 62, 69, 70, 74, 75, 76, 77, 82, 83, 106, 107, 113, 116, 118, 119, 124, 125, 127, 131, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 257, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 281, 283, 284, 285, 288, 290, 291, 294, 296, 299, 301, 302, 303, 305, 307, 308, 309, 314, 315, 355, 365, 421, 424, 605, 613, 614, 658, 676, 677, 679, 680, 724, 732, 825, 839, 842, 913, 919, 921, 925, 926, 927, 939, 945, 948, 950, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 983, 984, 987, 994, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1038, 1039], "empty_lik": [29, 30, 74, 75, 172], "from_dlpack": [29, 30, 74, 75, 172], "full_lik": [29, 30, 74, 75, 172], "fill_valu": [29, 30, 74, 75, 124, 172, 195, 196, 197, 198, 199, 200, 365, 474, 477, 494, 497], "meshgrid": [29, 30, 74, 75, 172], "xy": [29, 30, 74, 75, 172, 207, 208, 209, 210, 211], "ones_lik": [29, 30, 74, 75, 134, 172, 994], "tril": [29, 30, 74, 75, 172], "k": [29, 30, 74, 75, 112, 129, 172, 187, 188, 189, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 605, 613, 724, 736, 737, 761, 764, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799, 913, 918, 919, 921, 925, 928], "triu": [29, 30, 74, 75, 172], "zeros_lik": [29, 30, 74, 75, 172, 825, 826, 829, 994], "creation": [30, 69, 70, 71, 72, 73, 75, 113, 118, 124, 125, 129, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 212, 215, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242], "data_typ": [31, 32, 76, 77, 113, 118, 124, 243, 247, 248, 249, 252, 254, 257, 259, 262, 264, 267, 269, 270, 271, 272, 273, 276, 277, 278, 281, 283, 284, 285, 288, 290, 291, 294, 296, 299, 301, 302, 305, 307, 308, 309, 310, 311, 312, 313, 314], "arraywithdatatyp": 31, "astyp": [31, 32, 76, 77, 124, 126, 243], "true": [31, 32, 37, 38, 45, 46, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 123, 124, 126, 127, 129, 131, 132, 133, 134, 157, 158, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 243, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 273, 275, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 314, 315, 334, 351, 355, 356, 365, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 397, 399, 401, 403, 405, 407, 408, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 428, 429, 431, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 525, 526, 528, 529, 530, 532, 536, 538, 540, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 605, 606, 607, 608, 609, 610, 613, 614, 615, 616, 618, 619, 623, 630, 632, 634, 636, 638, 644, 645, 652, 666, 668, 669, 675, 676, 677, 679, 681, 683, 685, 686, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 732, 737, 738, 740, 741, 742, 761, 763, 765, 767, 788, 789, 790, 803, 805, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 886, 887, 888, 889, 890, 899, 900, 902, 908, 910, 912, 913, 914, 919, 920, 922, 925, 926, 927, 929, 930, 931, 932, 933, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 955, 957, 958, 959, 961, 962, 963, 965, 966, 967, 969, 970, 971, 973, 974, 975, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1016, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037], "broadcast_arrai": [31, 32, 76, 77, 243], "broadcast_to": [31, 32, 76, 77, 124, 243], "can_cast": [31, 32, 76, 77, 119, 124, 243, 268], "float32": [31, 32, 76, 77, 82, 83, 116, 118, 124, 172, 238, 242, 243, 247, 248, 264, 265, 266, 268, 283, 314, 605, 676, 677, 680], "float64": [31, 32, 118, 124, 243, 249, 252, 264, 265, 267, 283, 314], "as_n": [31, 32, 76, 77, 124, 243, 270, 271, 272, 273, 274, 275, 276, 315, 334, 335, 356], "finfo": [31, 32, 76, 77, 243], "iinfo": [31, 32, 76, 77, 127, 243], "is_float_dtyp": [31, 32, 76, 77, 243], "is_int_dtyp": [31, 32, 76, 77, 243, 605, 681], "result_typ": [31, 32, 76, 77, 124, 243], "arrays_and_dtyp": [31, 32, 76, 77, 243, 302, 303, 304, 305, 306], "arraywithdevic": [33, 131], "ab": [35, 36, 80, 81, 118, 121, 365, 370, 553, 556, 737, 803, 805, 994], "y": [35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 57, 58, 63, 64, 71, 72, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 108, 109, 113, 116, 120, 123, 129, 131, 157, 159, 160, 161, 162, 163, 166, 168, 172, 195, 196, 199, 207, 210, 217, 218, 220, 223, 238, 242, 243, 249, 252, 315, 335, 349, 353, 358, 365, 366, 367, 368, 369, 370, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 397, 400, 405, 408, 409, 412, 421, 424, 425, 428, 429, 430, 431, 432, 433, 436, 437, 440, 454, 457, 462, 463, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 578, 581, 582, 585, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 613, 614, 622, 623, 630, 631, 633, 634, 635, 636, 637, 638, 668, 675, 676, 677, 678, 679, 680, 681, 686, 697, 724, 730, 731, 733, 737, 738, 739, 740, 741, 742, 743, 745, 746, 748, 758, 760, 775, 777, 794, 796, 797, 799, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 839, 842, 843, 846, 851, 854, 855, 858, 859, 860, 861, 862, 863, 864, 873, 876, 889, 892, 913, 914, 915, 916, 917, 918, 919, 921, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 939, 940, 943, 950, 951, 954, 955, 958, 971, 974, 975, 978, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993], "aco": [35, 36, 80, 81, 365, 994], "acosh": [35, 36, 80, 81, 243, 283, 284, 365, 994], "x2": [35, 36, 37, 38, 45, 46, 69, 70, 80, 81, 82, 83, 90, 91, 114, 116, 172, 238, 242, 243, 310, 315, 353, 365, 379, 380, 381, 382, 383, 397, 398, 399, 400, 405, 406, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 441, 442, 443, 444, 445, 446, 447, 448, 449, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 490, 491, 492, 493, 494, 495, 496, 497, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 545, 546, 547, 548, 553, 554, 555, 556, 557, 558, 559, 560, 586, 587, 588, 589, 590, 605, 606, 607, 608, 609, 610, 724, 729, 737, 743, 744, 745, 761, 762, 763, 764, 775, 776, 777, 785, 786, 787, 794, 795, 796, 800, 801, 802, 925, 929], "z": [35, 36, 37, 38, 47, 48, 71, 72, 80, 81, 82, 83, 92, 93, 116, 120, 123, 129, 131, 315, 349, 365, 379, 380, 381, 382, 383, 405, 408, 425, 428, 474, 477, 494, 497, 534, 535, 605, 613, 614, 633, 634, 635, 636, 638, 668, 737, 743, 745, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 829, 889, 892, 925, 926, 950, 951, 954, 955, 958], "asin": [35, 36, 80, 81, 365, 994], "asinh": [35, 36, 80, 81, 365, 392, 994], "881": [35, 36, 80, 81, 157, 161, 365, 388, 389, 390, 391], "82": [35, 36, 388, 389], "atan": [35, 36, 80, 81, 365, 994], "atan2": [35, 36, 80, 81, 365, 994], "atanh": [35, 36, 80, 81, 365, 994], "bitwise_and": [35, 36, 80, 81, 365], "bitwise_invert": [35, 36, 80, 81, 365], "bitwise_left_shift": [35, 36, 80, 81, 365], "bitwise_or": [35, 36, 80, 81, 365], "bitwise_right_shift": [35, 36, 80, 81, 365], "bitwise_xor": [35, 36, 80, 81, 365], "ceil": [35, 36, 80, 81, 172, 173, 174, 365, 994], "cosh": [35, 36, 80, 81, 365, 994], "divid": [35, 36, 69, 70, 80, 81, 116, 122, 365, 466, 469, 605, 671, 825, 864], "equal": [35, 36, 69, 70, 80, 81, 116, 123, 124, 172, 187, 188, 195, 196, 199, 243, 249, 252, 365, 413, 416, 421, 424, 478, 481, 482, 485, 553, 556, 561, 564, 605, 606, 609, 613, 614, 737, 749, 751, 769, 771, 778, 780, 825, 826, 829, 835, 838, 864, 881, 884, 913, 919, 921, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948, 950, 959, 962, 971, 974, 975, 978, 979, 982], "erf": [35, 36, 80, 81, 365], "exp": [35, 36, 80, 81, 365, 458, 461, 514, 517, 994], "expm1": [35, 36, 80, 81, 365], "floor": [35, 36, 80, 81, 365, 421, 424, 605, 631, 994], "floor_divid": [35, 36, 80, 81, 365], "greater": [35, 36, 69, 70, 80, 81, 365, 371, 374, 384, 387, 397, 400, 413, 416, 421, 424, 462, 465, 466, 469, 553, 556, 557, 560, 565, 568, 601, 604, 737, 743, 745, 825, 865, 868, 913, 919, 921], "greater_equ": [35, 36, 80, 81, 365], "isfinit": [35, 36, 80, 81, 118, 365], "isinf": [35, 36, 80, 81, 365], "isnan": [35, 36, 80, 81, 365], "less_equ": [35, 36, 80, 81, 365], "log10": [35, 36, 80, 81, 365], "log1p": [35, 36, 80, 81, 365], "log2": [35, 36, 80, 81, 365], "logaddexp": [35, 36, 80, 81, 365], "logical_and": [35, 36, 80, 81, 365, 994], "logical_not": [35, 36, 80, 81, 365, 994], "logical_or": [35, 36, 80, 81, 365, 994], "logical_xor": [35, 36, 80, 81, 365], "multipli": [35, 36, 80, 81, 116, 120, 122, 365, 605, 623], "neg": [35, 36, 80, 81, 119, 123, 126, 157, 159, 172, 173, 174, 187, 188, 365, 478, 481, 482, 485, 536, 539, 553, 556, 557, 560, 737, 788, 790, 800, 802, 803, 805, 825, 843, 846, 859, 862, 983, 984, 987, 989, 992], "not_equ": [35, 36, 80, 81, 365], "pow": [35, 36, 80, 81, 365], "remaind": [35, 36, 69, 70, 80, 81, 365, 605, 631, 825, 864], "94": [35, 36, 80, 81, 388, 392, 565, 566], "256": [35, 36, 565, 566, 724, 730], "0001": [35, 36, 565, 566, 1032, 1033, 1034], "36": [35, 36, 565, 566, 737, 775, 777, 950, 951, 954], "67": [35, 36, 123, 365, 425, 428, 437, 440, 565, 566], "45": [35, 36, 118, 565, 566, 686, 688, 691, 737, 775, 777, 825, 864, 907, 908, 911, 950, 951, 954], "24": [35, 36, 96, 97, 365, 425, 428, 565, 566, 578, 581, 605, 623, 686, 688, 691, 737, 749, 751, 775, 777, 907, 908, 910, 911, 912, 950, 951, 954], "678": [35, 36, 565, 566], "32": [35, 36, 39, 40, 118, 132, 157, 159, 365, 425, 428, 565, 566, 688, 689, 724, 727, 730, 737, 775, 777, 925, 929, 950, 951, 954], "sin": [35, 36, 80, 81, 122, 129, 365, 605, 632, 994], "sinh": [35, 36, 80, 81, 365, 994], "sqrt": [35, 36, 80, 81, 365, 737, 803, 805], "squar": [35, 36, 80, 81, 118, 365, 578, 581, 724, 727, 737, 738, 741, 746, 748, 752, 754, 755, 757, 758, 760, 768, 784, 785, 787, 788, 790], "subtract": [35, 36, 80, 81, 116, 122, 365], "tan": [35, 36, 80, 81, 114, 115, 119, 123, 126, 129, 365, 384, 387, 388, 391, 592, 737, 749, 751, 930, 931, 939, 940, 943, 994], "56": [35, 36, 80, 81, 116, 365, 578, 581, 591, 592, 593, 594, 595, 686, 688, 691, 737, 775, 777, 950, 951, 954], "19": [35, 36, 80, 81, 116, 365, 388, 390, 392, 425, 428, 591, 592, 593, 594, 595, 737, 749, 751], "tanh": [35, 36, 80, 81, 129, 157, 365, 597, 994], "762": [35, 36, 80, 81, 157, 168, 365, 596, 598, 599, 600], "964": [35, 36, 80, 81, 157, 168, 365, 596, 598, 599, 600], "trunc": [35, 36, 80, 81, 365], "elementwis": [36, 69, 70, 81, 113, 119, 129, 134, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604], "arraywithgener": [37, 131], "all_equ": [37, 38, 82, 83, 605, 610], "equality_matrix": [37, 38, 82, 83, 605, 606, 607, 608, 609, 610], "x1": [37, 38, 80, 81, 82, 83, 114, 116, 172, 238, 242, 243, 310, 315, 353, 365, 379, 382, 383, 397, 400, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 445, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 534, 535, 536, 539, 540, 545, 548, 553, 556, 557, 560, 586, 587, 590, 605, 606, 607, 608, 609, 610, 613, 724, 729, 737, 743, 745, 761, 764, 775, 777, 785, 787, 794, 796, 800, 802, 925, 929], "mix": [37, 38, 71, 72, 92, 93, 112, 116, 118, 129, 243, 302, 305, 315, 353, 365, 379, 382, 405, 408, 425, 428, 474, 477, 494, 497, 535, 545, 548, 605, 606, 607, 622, 630, 633, 634, 637, 675, 676, 680, 681, 724, 727, 730, 731, 736, 737, 738, 741, 794, 796, 809, 810, 813, 814, 815, 819, 820, 823, 824, 825, 826, 829, 907, 908, 911, 925, 929, 950, 951, 954, 959, 962], "gather_nd": [37, 38, 69, 70, 82, 83, 605, 638, 994], "to_numpi": [37, 38, 69, 70, 82, 83, 132, 605, 677, 994], "arraywithgradi": [39, 131], "adam_step": [39, 40, 84, 85, 686, 692], "mw": [39, 40, 84, 85, 133, 686, 688, 689, 690, 691, 692, 693, 695], "vw": [39, 40, 84, 85, 133, 686, 688, 689, 690, 691, 692, 693, 695], "beta1": [39, 40, 84, 85, 133, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 1032, 1033, 1034], "beta2": [39, 40, 84, 85, 133, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 1032, 1033, 1034], "999": [39, 40, 80, 81, 84, 85, 133, 365, 596, 597, 599, 600, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 1032, 1033, 1034], "epsilon": [39, 40, 47, 48, 51, 52, 84, 85, 92, 93, 96, 97, 119, 123, 126, 133, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 737, 769, 771, 778, 780, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 907, 908, 909, 910, 911, 912, 1030, 1031, 1032, 1033, 1034], "1e": [39, 40, 47, 48, 51, 52, 84, 85, 92, 93, 96, 97, 119, 123, 126, 133, 134, 605, 641, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 737, 788, 790, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 907, 908, 909, 910, 911, 912, 994, 1032, 1033, 1034, 1035, 1037], "07": [39, 40, 47, 48, 84, 85, 92, 93, 133, 365, 565, 568, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 706, 707, 708, 709, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1032, 1033, 1034], "dcdw": [39, 40, 84, 85, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713], "adam_step_delta": [39, 40, 84, 85, 686, 688, 689, 690, 691, 692], "639": [39, 40, 686, 688, 689, 691], "11": [39, 40, 71, 72, 80, 81, 98, 99, 116, 118, 123, 365, 379, 381, 382, 383, 405, 408, 561, 564, 605, 623, 633, 688, 689, 737, 749, 751, 775, 777, 809, 820, 823, 825, 843, 846, 851, 854, 913, 915, 916, 917, 925, 929, 930, 931, 950, 951, 954], "63": [39, 40, 90, 91, 365, 578, 581, 688, 689, 737, 738, 740, 741, 742, 775, 777, 950, 951, 954], "00121": [39, 40, 688, 689], "0102": [39, 40, 688, 689], "0397": [39, 40, 688, 689], "gradient": [40, 69, 70, 85, 113, 123, 132, 133, 145, 146, 315, 359, 688, 691, 693, 695, 697, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 719, 720, 721, 722, 723, 885, 886, 887, 888, 994, 1032, 1033, 1034, 1035, 1036, 1037], "arraywithimag": [41, 131], "arraywithlay": 43, "linear_algebra": [45, 46, 90, 91, 113, 131, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808], "arraywithlinearalgebra": 45, "choleski": [45, 46, 90, 91, 737, 742], "upper": [45, 46, 69, 70, 90, 91, 118, 172, 187, 188, 230, 234, 737, 738, 739, 740, 741, 742, 781, 783, 913, 919, 921], "625": [45, 46, 737, 738, 739, 741], "25": [45, 46, 47, 48, 96, 97, 123, 365, 578, 581, 582, 585, 737, 738, 739, 741, 749, 751, 758, 760, 809, 815, 816, 818, 907, 908, 910, 911, 912, 950, 951, 954], "cross": [45, 46, 71, 72, 737, 809, 810, 813, 815, 818, 820, 823, 994], "axi": [45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 64, 69, 70, 74, 75, 92, 93, 94, 95, 104, 105, 106, 107, 108, 109, 114, 116, 118, 119, 123, 124, 126, 127, 129, 131, 134, 145, 157, 162, 172, 201, 202, 203, 204, 205, 206, 315, 317, 320, 327, 340, 341, 342, 343, 344, 345, 346, 347, 359, 605, 623, 624, 633, 684, 737, 743, 744, 745, 749, 751, 800, 801, 802, 803, 804, 805, 809, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 831, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 846, 851, 852, 853, 854, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 876, 877, 880, 881, 884, 913, 924, 925, 926, 927, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993], "det": [45, 46, 71, 72, 737], "diagon": [45, 46, 71, 72, 172, 187, 188, 225, 229, 230, 234, 737, 797, 799], "offset": [45, 46, 51, 52, 96, 97, 737, 749, 750, 751, 797, 798, 799, 907, 908, 909, 910, 911, 912], "axis1": [45, 46, 49, 50, 94, 95, 737, 749, 750, 751, 825, 873, 874, 875, 876], "axis2": [45, 46, 737, 749, 750, 751], "eigh": [45, 46, 71, 72, 737], "namedtupl": [45, 46, 737, 752, 753, 754, 781, 782, 783, 788, 790, 930, 931, 932, 936], "eigvalsh": [45, 46, 71, 72, 737], "inv": [45, 46, 71, 72, 131, 737, 994], "matmul": [45, 46, 90, 91, 113, 118, 120, 129, 737, 788, 790, 994], "matrix_norm": [45, 46, 69, 70, 737], "ord": [45, 46, 69, 70, 737, 765, 766, 767, 803, 804, 805], "fro": [45, 46, 737, 765, 766, 767], "keepdim": [45, 46, 61, 62, 63, 64, 69, 70, 106, 107, 108, 109, 127, 605, 684, 737, 765, 766, 767, 803, 804, 805, 925, 926, 927, 950, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993], "matrix_rank": [45, 46, 71, 72, 737], "rtol": [45, 46, 737, 769, 770, 771, 778, 779, 780], "matrix_transpos": [45, 46, 71, 72, 131, 737], "outer": [45, 46, 71, 72, 737, 885, 886, 887, 888], "pinv": [45, 46, 71, 72, 737, 994], "qr": [45, 46, 71, 72, 737], "reduc": [45, 46, 69, 70, 131, 315, 359, 605, 628, 737, 781, 782, 783, 925, 926, 927, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "solv": [45, 46, 71, 72, 130, 145, 737], "svd": [45, 46, 71, 72, 737, 994], "full_matric": [45, 46, 737, 788, 789, 790], "svdval": [45, 46, 71, 72, 737], "tensordot": [45, 46, 71, 72, 737], "ax": [45, 46, 49, 50, 69, 70, 94, 95, 113, 116, 118, 124, 131, 315, 359, 605, 623, 737, 765, 767, 785, 787, 794, 795, 796, 803, 805, 825, 835, 838, 843, 846, 847, 848, 849, 850, 859, 862, 865, 868, 873, 876, 881, 884, 925, 926, 927, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "trace": [45, 46, 69, 70, 71, 72, 129, 146, 605, 651, 652, 654, 737], "vecdot": [45, 46, 71, 72, 737], "vector_norm": [45, 46, 69, 70, 737], "vector_to_skew_symmetric_matrix": [45, 46, 71, 72, 737, 994], "arraywithloss": 47, "binary_cross_entropi": [47, 48, 92, 93, 809, 814], "pred": [47, 48, 92, 93, 119, 123, 126, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824], "357": [47, 48, 92, 93, 809, 810, 811, 812, 813, 814, 820, 821, 823, 824], "223": [47, 48, 92, 93, 809, 810, 811, 812, 813, 814, 820, 821, 822, 824], "cross_entropi": [47, 48, 92, 93, 119, 123, 126, 809, 819, 820, 823], "3862944": [47, 48, 809, 815, 816, 818], "sparse_cross_entropi": [47, 48, 92, 93, 809, 824], "loss": [48, 93, 113, 119, 132, 133, 134, 810, 813, 815, 818, 820, 823, 994], "arraywithmanipul": 49, "clip": [49, 50, 69, 70, 94, 95, 119, 123, 126, 129, 132, 134, 365, 534, 535, 605, 617, 618, 620, 825, 830, 994], "x_min": [49, 50, 69, 70, 94, 95, 129, 134, 825, 826, 827, 828, 829, 830], "x_max": [49, 50, 69, 70, 94, 95, 129, 134, 825, 826, 827, 828, 829, 830], "roll": [49, 50, 94, 95, 114, 123, 825, 826, 827, 863], "concat": [49, 50, 69, 70, 94, 95, 315, 344, 345, 346, 347, 359, 605, 632, 825, 994], "xs": [49, 50, 94, 95, 123, 315, 338, 342, 344, 345, 346, 605, 606, 609, 614, 686, 697, 825, 831, 832, 833, 834], "constant_pad": [49, 50, 94, 95, 825], "pad_width": [49, 50, 94, 95, 825, 835, 836, 837, 838, 881, 882, 883, 884], "expand_dim": [49, 50, 94, 95, 129, 132, 825, 994], "flip": [49, 50, 94, 95, 131, 132, 134, 365, 409, 412, 825, 851, 854, 994], "permute_dim": [49, 50, 94, 95, 825], "reshap": [49, 50, 69, 70, 94, 95, 118, 126, 129, 131, 134, 825, 994], "shift": [49, 50, 94, 95, 114, 116, 365, 413, 416, 421, 424, 825, 859, 860, 861, 862, 863], "squeez": [49, 50, 94, 95, 825, 994], "stack": [49, 50, 69, 70, 94, 95, 129, 172, 225, 229, 230, 234, 737, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 768, 769, 771, 772, 774, 778, 780, 781, 783, 788, 790, 791, 793, 797, 799, 825, 889, 890, 899, 900, 994, 1016, 1025], "swapax": [49, 50, 94, 95, 825], "axis0": [49, 50, 94, 95, 825, 873, 874, 875, 876], "tile": [49, 50, 94, 95, 825, 994], "rep": [49, 50, 94, 95, 825, 877, 878, 879, 880], "zero_pad": [49, 50, 94, 95, 825, 994], "arraywithnorm": 51, "layer_norm": [51, 52, 96, 97, 907, 912], "normalized_idx": [51, 52, 96, 97, 907, 908, 909, 910, 911, 912], "05": [51, 52, 96, 97, 118, 315, 686, 688, 691, 907, 908, 909, 910, 911, 912], "scale": [51, 52, 96, 97, 123, 315, 357, 358, 686, 710, 712, 724, 732, 735, 736, 907, 908, 909, 910, 911, 912, 1016, 1024, 1027, 1032, 1035], "new_std": [51, 52, 96, 97, 907, 908, 909, 910, 911, 912, 1030, 1031], "0976": [51, 52, 907, 908, 909, 911], "3452": [51, 52, 907, 908, 909, 911], "2740": [51, 52, 907, 908, 909, 911], "1047": [51, 52, 907, 908, 909, 911], "5886": [51, 52, 907, 908, 909, 911], "2732": [51, 52, 907, 908, 909, 911], "7696": [51, 52, 907, 908, 909, 911], "7024": [51, 52, 907, 908, 909, 911], "2518": [51, 52, 907, 908, 909, 911], "001": [51, 52, 132, 133, 365, 565, 568, 686, 688, 691, 907, 908, 909, 911], "576": [51, 52, 907, 908, 909, 911], "292": [51, 52, 907, 908, 909, 911], "33": [51, 52, 80, 81, 388, 390, 737, 775, 777, 907, 908, 909, 911, 950, 951, 954], "581": [51, 52, 686, 688, 691, 907, 908, 909, 911], "891": [51, 52, 157, 161, 907, 908, 909, 911], "01": [51, 52, 134, 365, 561, 564, 565, 568, 907, 908, 909, 911], "579": [51, 52, 907, 908, 909, 911], "931": [51, 52, 907, 908, 909, 911], "norm": [52, 69, 70, 97, 113, 605, 617, 618, 620, 737, 765, 767, 803, 805, 908, 909, 910, 911, 912, 994, 1031, 1032, 1034], "arraywithrandom": [53, 131], "random": [54, 69, 70, 99, 113, 125, 134, 145, 914, 915, 916, 918, 919, 921, 923, 924, 994], "arraywithsearch": 55, "arraywithset": 57, "unique_count": [57, 58, 102, 103, 930, 933], "uc": [57, 58, 932, 934], "count": [57, 58, 116, 132, 315, 353, 737, 800, 802, 825, 843, 846, 930, 931, 932, 934, 936, 983, 984, 987, 989, 992], "arraywithsort": 59, "argsort": [59, 60, 104, 105, 939], "descend": [59, 60, 104, 105, 737, 788, 790, 791, 793, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949], "sort": [60, 69, 70, 71, 72, 73, 105, 113, 737, 752, 754, 788, 790, 791, 793, 940, 943], "arraywithstatist": 61, "einsum": [61, 62, 106, 107, 950], "equat": [61, 62, 106, 107, 737, 785, 787, 950, 951, 952, 953, 954], "max": [61, 62, 69, 70, 106, 107, 243, 278, 281, 285, 288, 365, 534, 605, 617, 618, 620, 628, 661, 662, 737, 769, 771, 778, 780, 950, 1032, 1034], "min": [61, 62, 69, 70, 106, 107, 243, 278, 281, 285, 288, 365, 535, 605, 628, 661, 662, 671, 737, 781, 783, 788, 790, 791, 793, 803, 805, 950], "prod": [61, 62, 69, 70, 106, 107, 116, 124, 605, 628, 950], "std": [61, 62, 106, 107, 116, 913, 918, 930, 931, 950], "sum": [61, 62, 69, 70, 106, 107, 119, 123, 124, 126, 129, 315, 344, 345, 346, 347, 359, 365, 379, 382, 514, 517, 605, 624, 628, 661, 662, 724, 736, 737, 788, 790, 797, 799, 803, 805, 950, 951, 954, 971, 974], "var": [61, 62, 106, 107, 110, 111, 116, 129, 885, 886, 887, 950], "statist": [62, 107, 110, 111, 113, 118, 124, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982], "arraywithutil": 63, "util": [64, 109, 113, 125, 315, 348, 984, 987, 989, 992], "add_ivy_array_instance_method": 65, "cl": [65, 66, 110, 111], "to_ignor": [65, 66, 110, 111, 889, 900], "loop": [65, 66, 110, 111, 120, 127, 146, 885, 886, 887, 888], "_wrap_funct": [65, 66, 110, 111, 119, 121], "toi": [65, 66, 110, 111], "arrayexampl": [65, 66], "hasattr": [65, 66, 110, 111, 131], "relu": [65, 66, 71, 72, 132, 133, 157, 158, 159, 994], "softmax": [65, 66, 71, 72, 157, 724, 735, 736, 994], "containerwithactiv": [67, 71, 72], "dict_in": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "queue": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 132, 315, 324, 325, 605, 660, 665], "queue_load_s": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "container_combine_method": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "list_join": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "queue_timeout": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 605], "print_limit": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "key_length_limit": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "print_ind": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "print_line_spac": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "ivyh": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "default_key_color": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "keyword_color_dict": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "rebuild_child_contain": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "types_to_iteratively_nest": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "alphabetical_kei": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "containerbas": [67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 123], "key_chain": [67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 163, 165, 167, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 273, 275, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 606, 608, 610, 618, 619, 634, 636, 638, 676, 677, 679, 693, 694, 696, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 738, 740, 742, 761, 763, 810, 812, 814, 815, 817, 819, 820, 822, 824, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 889, 902, 908, 910, 912, 915, 917, 919, 920, 922, 932, 933, 935, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 984, 986, 988, 989, 991, 993], "to_appli": [67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 163, 165, 167, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 273, 275, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 606, 608, 610, 618, 619, 634, 636, 638, 676, 677, 679, 693, 694, 696, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 738, 740, 742, 761, 763, 810, 812, 814, 815, 817, 819, 820, 822, 824, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 889, 902, 908, 910, 912, 919, 920, 922, 932, 933, 935, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 984, 986, 988, 989, 991, 993], "prune_unappli": [67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 163, 165, 167, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 273, 275, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 606, 608, 610, 618, 619, 634, 636, 638, 676, 677, 679, 693, 694, 696, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 738, 740, 742, 761, 763, 810, 812, 814, 815, 817, 819, 820, 822, 824, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 889, 902, 908, 910, 912, 919, 920, 922, 932, 933, 935, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 984, 986, 988, 989, 991, 993], "map_sequ": [67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 163, 165, 167, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 273, 275, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 401, 403, 409, 411, 429, 431, 433, 435, 437, 439, 441, 443, 445, 450, 452, 454, 456, 458, 460, 462, 464, 478, 480, 482, 484, 486, 488, 498, 500, 502, 504, 506, 508, 510, 512, 522, 524, 536, 538, 540, 541, 543, 549, 551, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 606, 608, 610, 618, 619, 634, 636, 638, 676, 677, 679, 693, 694, 696, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 738, 740, 742, 810, 812, 814, 815, 817, 819, 820, 822, 824, 826, 828, 830, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 867, 873, 875, 877, 879, 881, 883, 908, 910, 912, 919, 920, 922, 932, 933, 935, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 984, 986, 988, 989, 991, 993], "static_softplu": [67, 68, 163], "__getitem__": [69, 70, 123], "queri": [69, 70, 123, 124, 131, 315, 348, 358, 724, 735, 736, 1016, 1027], "slice": [69, 70, 605, 633, 634, 637, 889, 898], "chain": [69, 70, 122, 123, 133, 134, 146, 885, 886, 887, 889, 902, 1038, 1039], "element": [69, 70, 115, 118, 129, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 195, 196, 199, 225, 229, 230, 234, 315, 338, 342, 346, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 613, 614, 617, 618, 620, 623, 624, 631, 645, 676, 680, 681, 686, 723, 724, 732, 737, 743, 745, 752, 754, 761, 764, 781, 783, 788, 790, 825, 826, 829, 843, 846, 851, 854, 859, 862, 864, 865, 868, 889, 892, 913, 914, 925, 928, 929, 930, 931, 932, 936, 937, 938, 939, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1016, 1024], "represent": [69, 70, 71, 72, 73, 145, 171, 243, 247, 248, 278, 281, 285, 288, 315, 331, 332, 365, 366, 369, 379, 382, 405, 408, 417, 420, 425, 428, 530, 533, 536, 539, 605, 611, 670, 675], "dictionari": [69, 70, 71, 72, 73, 132, 146, 315, 358], "sequenc": [69, 70, 71, 72, 73, 116, 118, 124, 127, 145, 169, 170, 315, 324, 325, 605, 614, 655, 825, 864, 869, 872, 913, 915, 916, 950, 955, 958, 983, 984, 987, 989, 992, 1016, 1025, 1030, 1031, 1038, 1039], "multiprocess": [69, 70, 71, 72, 73, 132, 146, 315, 324, 605], "asynchron": [69, 70, 71, 72, 73], "size": [69, 70, 71, 72, 73, 118, 131, 132, 172, 201, 202, 204, 205, 315, 357, 358, 359, 605, 661, 668, 724, 736, 737, 749, 751, 765, 767, 775, 777, 781, 783, 788, 790, 800, 802, 825, 839, 842, 859, 862, 864, 865, 868, 913, 914, 918, 919, 921, 925, 926, 928, 983, 984, 987, 989, 992, 1016, 1017, 1018], "dimens": [69, 70, 71, 72, 73, 116, 118, 129, 132, 157, 162, 172, 225, 229, 230, 234, 315, 346, 605, 627, 628, 629, 632, 642, 658, 684, 724, 725, 726, 727, 728, 729, 730, 731, 734, 737, 738, 741, 743, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799, 800, 802, 803, 805, 809, 815, 818, 820, 823, 825, 831, 834, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 864, 865, 868, 869, 872, 885, 886, 887, 888, 913, 924, 925, 926, 927, 928, 930, 931, 932, 936, 938, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027], "arriv": [69, 70, 71, 72, 73], "timeout": [69, 70, 71, 72, 73, 315, 324, 325, 605, 660, 665], "maximum": [69, 70, 71, 72, 73, 116, 129, 132, 134, 315, 339, 343, 347, 359, 365, 605, 617, 618, 620, 632, 686, 706, 708, 825, 826, 829, 889, 901, 925, 926, 950, 955, 958, 963, 966, 994], "length": [69, 70, 71, 72, 73, 118, 127, 132, 172, 173, 174, 207, 210, 737, 788, 790, 791, 793, 825, 855, 858], "whitespac": [69, 70, 71, 72, 73], "indent": [69, 70, 71, 72, 73, 132], "extra": [69, 70, 71, 72, 73, 116, 121, 122, 129, 686, 697], "newlin": [69, 70, 71, 72, 73, 115], "handl": [69, 70, 71, 72, 73, 112, 114, 118, 119, 121, 123, 124, 125, 126, 133, 146, 169, 170, 315, 331, 332, 333, 334, 335, 349, 353, 354, 361, 364, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 1032, 1033, 1034, 1035, 1036, 1037], "result": [69, 70, 71, 72, 73, 113, 114, 115, 116, 118, 122, 123, 124, 126, 132, 146, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 259, 262, 302, 305, 315, 324, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 624, 627, 628, 629, 631, 633, 634, 637, 645, 658, 661, 662, 686, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 889, 892, 902, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 927, 929, 930, 931, 938, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992, 994], "color": [69, 70, 71, 72, 73, 1041, 1042], "map": [69, 70, 71, 72, 73, 114, 118, 119, 123, 132, 145, 146, 315, 324, 889, 896, 897, 901, 902, 1016, 1027], "termcolor": [69, 70, 71, 72, 73], "rebuild": [69, 70, 71, 72, 73], "constructor": [69, 70, 71, 72, 73, 124, 125, 131, 605, 612, 1038, 1039], "param": [69, 70, 71, 72, 73, 82, 83, 129, 134, 605, 611, 633, 634, 637, 638], "alphabet": [69, 70, 71, 72, 73], "preserv": [69, 70, 71, 72, 73, 118, 134, 146, 686, 719, 825, 843, 846], "__setitem__": [69, 70, 122, 123, 131], "val": [69, 70, 126, 131, 605, 647, 648, 649, 663, 664], "after": [69, 70, 116, 118, 123, 124, 128, 243, 310, 315, 365, 578, 581, 686, 693, 695, 697, 698, 700, 706, 708, 710, 712, 714, 716, 907, 908, 911, 1032, 1033, 1034, 1035, 1036, 1037], "all_fals": [69, 70], "assert_is_bool": [69, 70], "entri": [69, 70, 172, 201, 202, 204, 205, 825, 864, 889, 902], "boolean": [69, 70, 118, 123, 172, 195, 243, 249, 252, 290, 314, 315, 350, 362, 365, 405, 408, 409, 412, 417, 420, 425, 428, 518, 521, 522, 525, 526, 529, 530, 533, 605, 606, 609, 613, 614, 644, 645, 646, 650, 651, 652, 653, 654, 666, 673, 685, 686, 702, 704, 723, 885, 886, 887, 889, 899, 950, 963, 966], "evalu": [69, 70, 123, 365, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 541, 544, 565, 568, 582, 585, 889, 890, 899, 900, 983, 984, 987, 989, 992], "assert": [69, 70, 118, 127, 131, 132, 605, 615], "prune": [69, 70, 889, 902, 903, 904], "all_key_chain": [69, 70], "include_empti": [69, 70], "all_tru": [69, 70, 123, 132], "arrays_as_list": [69, 70], "intermedi": [69, 70], "as_arrai": [69, 70, 605, 642, 668], "as_bool": [69, 70], "as_on": [69, 70], "ones": [69, 70, 71, 72, 118, 129, 131, 132, 172, 187, 188, 220, 223, 238, 242, 365, 429, 432, 605, 658, 994], "fill": [69, 70, 172, 181, 195, 196, 199, 217, 218, 220, 223, 235, 237, 238, 242, 913, 915, 916], "as_random_uniform": [69, 70], "low": [69, 70, 98, 99, 129, 913, 915, 916, 917, 919, 920, 921, 922], "uniform": [69, 70, 133, 913, 914, 915, 916, 919, 921, 1007, 1009, 1010, 1013, 1014], "boundari": [69, 70, 913, 919, 921], "interv": [69, 70, 129, 134, 172, 173, 174, 201, 202, 204, 205, 737, 800, 802, 825, 826, 829, 869, 872, 913, 915, 916, 919, 921, 983, 984, 987, 989, 992], "as_vari": [69, 70, 118], "as_zero": [69, 70], "assert_contains_sub_contain": [69, 70], "sub_cont": [69, 70], "except": [69, 70, 115, 122, 126, 127, 131, 146, 243, 259, 262, 605, 615, 626, 649, 682, 737, 778, 780, 825, 831, 834, 869, 872, 925, 928, 983, 984, 987, 989, 992], "diff": [69, 70, 123, 132], "screen": [69, 70, 132], "assert_contains_sub_structur": [69, 70], "check_shap": [69, 70], "assert_ident": [69, 70], "check_typ": [69, 70], "same_arrai": [69, 70, 132], "arrays_equ": [69, 70, 71, 72, 605], "datatyp": [69, 70, 76, 77, 172, 176, 179, 212, 215, 243, 269, 301], "assert_identical_structur": [69, 70], "at_key_chain": [69, 70], "ignore_key_error": [69, 70], "ignore_non": [69, 70], "at_kei": [69, 70], "ignor": [69, 70, 116, 118, 146, 172, 207, 210, 889, 900, 1032, 1036], "substr": [69, 70], "clip_min": [69, 70], "clip_max": [69, 70], "minimum": [69, 70, 129, 134, 315, 365, 366, 369, 605, 640, 641, 663, 664, 671, 672, 825, 826, 829, 925, 927, 950, 955, 958, 963, 966, 994], "config": [69, 70, 132, 889, 902], "duplic": [69, 70, 115, 120, 121, 127, 131, 133], "compar": [69, 70, 118, 127, 132, 605, 606, 609, 613, 614, 930, 931, 932, 936, 938, 939, 940, 943, 945, 948], "container_rightmost": [69, 70], "common_key_chain": [69, 70, 123], "properti": [69, 70, 116, 118, 119, 123, 131, 132, 133, 315, 327, 1028, 1029, 1032, 1033, 1034, 1035, 1037], "contains_sub_contain": [69, 70], "match": [69, 70, 123, 243, 249, 252, 365, 557, 560, 605, 655], "contains_sub_structur": [69, 70], "create_if_abs": [69, 70], "inplac": [69, 70, 84, 85, 112, 114, 116, 121, 122, 131, 133, 605, 615, 646, 649, 650, 673, 686, 693, 694, 695, 696, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 1005, 1006, 1032, 1033, 1034, 1035, 1036, 1037], "cutoff_at_depth": [69, 70], "depth_cutoff": [69, 70], "cutoff_at_height": [69, 70], "height_cutoff": [69, 70], "deep_copi": [69, 70, 132], "intern": [69, 70, 115, 118, 122, 123, 125, 126, 315, 686, 722, 889, 890, 899, 900, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1038, 1039], "belong": [69, 70, 133], "dev_clon": [69, 70, 315], "dev_dist": [69, 70, 315], "along": [69, 70, 113, 126, 172, 201, 202, 204, 205, 315, 340, 341, 342, 343, 344, 345, 346, 347, 359, 605, 623, 624, 633, 684, 737, 765, 767, 797, 799, 800, 802, 803, 805, 809, 815, 818, 820, 823, 825, 831, 834, 843, 846, 851, 854, 859, 862, 864, 869, 872, 877, 880, 885, 886, 887, 888, 913, 924, 925, 926, 927, 939, 940, 943, 945, 948, 950, 951, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "dev_str": [69, 70], "diff_kei": [69, 70], "detect_key_diff": [69, 70], "detect_value_diff": [69, 70], "detect_shape_diff": [69, 70], "treat": [69, 70, 118, 130, 134, 169, 170], "detect": [69, 70, 114, 118, 127, 132, 133, 889, 890, 900], "container0": [69, 70], "einops_rearrang": [69, 70, 605], "axes_length": [69, 70, 605, 627, 628, 629], "rearrang": [69, 70, 605, 627, 629], "einops_reduc": [69, 70, 605], "reduct": [69, 70, 118, 124, 131, 605, 628, 661, 662, 983, 984, 987, 989, 992, 994], "One": [69, 70, 118, 124, 129, 131, 132, 605, 628, 825, 855, 858, 913, 915, 916], "callabl": [69, 70, 118, 123, 129, 147, 148, 149, 150, 151, 152, 153, 154, 155, 169, 170, 243, 283, 284, 315, 359, 605, 611, 616, 626, 628, 885, 886, 887, 888, 889, 895, 899, 900, 901], "einops_repeat": [69, 70, 605], "find_sub_contain": [69, 70], "sub_cont_to_find": [69, 70], "exsit": [69, 70], "find_sub_structur": [69, 70], "sub_struc_to_find": [69, 70], "flatten_key_chain": [69, 70, 132, 1028, 1029], "__": [69, 70, 116, 132], "above_height": [69, 70, 132], "below_depth": [69, 70, 132], "format_key_chain": [69, 70], "format_fn": [69, 70], "string": [69, 70, 120, 124, 125, 127, 129, 132, 243, 247, 248, 273, 276, 290, 314, 315, 331, 332, 333, 334, 348, 354, 360, 361, 364, 605, 625], "from_disk_as_hdf5": [69, 70, 132], "h5_obj_or_filepath": [69, 70], "slice_obj": [69, 70], "load": [69, 70, 146], "disk": [69, 70, 132], "h5py": [69, 70], "hdf5": [69, 70, 132, 1028, 1029], "h5": [69, 70], "from_disk_as_json": [69, 70, 132], "json_filepath": [69, 70], "json": [69, 70, 132], "dure": [69, 70, 119, 123, 124, 125, 126, 146, 169, 170, 315, 360, 605, 682, 686, 688, 691, 693, 695, 706, 708, 737, 761, 764, 885, 886, 887, 888, 950, 971, 974, 979, 982, 1028, 1029, 1032, 1033, 1034, 1036], "from_disk_as_pickl": [69, 70, 132], "pickle_filepath": [69, 70], "pickl": [69, 70, 123, 132], "from_flat_list": [69, 70], "flat_list": [69, 70], "hierarchi": [69, 70, 132], "flat": [69, 70, 605, 661, 825, 851, 854], "popul": [69, 70, 118, 124, 125, 129, 913, 914, 950, 971, 974, 979, 982], "from_numpi": [69, 70, 132], "gather": [69, 70, 605, 634, 637], "h5_file_s": [69, 70], "batch": [69, 70, 119, 123, 132, 315, 357, 358, 605, 632, 724, 733, 737, 803, 805, 885, 886, 887, 888, 907, 908, 911, 1030, 1031], "handle_inplac": [69, 70], "prime": [69, 70], "overwritten": [69, 70, 120, 122], "has_kei": [69, 70], "query_kei": [69, 70], "somewher": [69, 70], "has_key_chain": [69, 70], "has_nan": [69, 70, 605], "include_inf": [69, 70, 605, 644, 685], "leafwis": [69, 70], "nan": [69, 70, 113, 115, 118, 171, 243, 249, 252, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 478, 481, 486, 489, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 605, 644, 685, 724, 736, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "well": [69, 70, 118, 126, 133, 134, 145, 605, 644, 737, 785, 787], "inf": [69, 70, 118, 171, 605, 644, 685, 737, 803, 805], "wise": [69, 70, 129, 134, 157, 158, 159, 160, 161, 162, 163, 166, 168, 365, 366, 369, 371, 374, 379, 382, 384, 387, 393, 396, 397, 400, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 446, 449, 450, 453, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 545, 548, 553, 556, 557, 560, 586, 590, 605, 631, 825, 826, 829], "identical_array_shap": [69, 70], "exclus": [69, 70, 84, 85, 118, 119, 123, 134, 172, 173, 174, 605, 623, 651, 652, 654, 686, 702, 703, 704, 705, 913, 915, 916], "identical_config": [69, 70], "identical_structur": [69, 70], "if_exist": [69, 70], "inplace_upd": [69, 70, 126, 605, 1005, 1006], "key_chains_contain": [69, 70], "sub_str": [69, 70], "join": [69, 70, 825, 831, 834, 869, 872, 994], "list_stack": [69, 70, 132], "dim": [69, 70, 124, 605, 658, 1016, 1027], "func": [69, 70, 123, 169, 170, 315, 359, 605, 616, 686, 697, 889, 902], "map_cont": [69, 70], "include_self": [69, 70], "possibi": [69, 70], "matrix": [69, 70, 172, 207, 210, 225, 229, 230, 234, 605, 606, 609, 617, 724, 733, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 768, 769, 771, 772, 774, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799, 806, 808, 1016, 1026], "integ": [69, 70, 118, 123, 124, 131, 172, 173, 174, 195, 243, 285, 288, 296, 299, 302, 305, 365, 366, 369, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 462, 465, 466, 469, 530, 533, 553, 556, 557, 560, 561, 564, 601, 604, 737, 768, 800, 802, 803, 805, 825, 864, 913, 915, 916, 923, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "flatten": [69, 70, 605, 632, 737, 775, 777, 803, 805, 825, 851, 854, 859, 862, 925, 926, 927, 930, 931, 932, 936, 938], "broadcast": [69, 70, 113, 115, 116, 118, 123, 124, 157, 158, 159, 160, 161, 162, 163, 166, 168, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 249, 252, 254, 257, 259, 262, 315, 360, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 623, 627, 628, 629, 631, 634, 637, 645, 658, 661, 662, 686, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 743, 745, 746, 748, 749, 751, 755, 757, 758, 760, 761, 764, 765, 767, 769, 771, 772, 774, 775, 777, 778, 780, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 810, 813, 815, 818, 820, 823, 825, 826, 829, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 907, 908, 911, 913, 914, 915, 916, 918, 919, 921, 924, 925, 926, 927, 929, 930, 938, 939, 945, 948, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "max_depth": [69, 70, 315, 319, 322, 329, 339, 343, 347, 605, 643, 889, 901], "multi_map": [69, 70, 123], "map_nest": [69, 70, 80, 81, 90, 91, 94, 95, 397, 399, 405, 407, 413, 415, 417, 419, 421, 423, 425, 427, 446, 448, 466, 468, 470, 472, 474, 476, 490, 492, 494, 496, 514, 516, 518, 520, 526, 528, 530, 532, 545, 547, 553, 555, 557, 559, 761, 763, 831, 833, 869, 871], "leftmost": [69, 70, 889, 902], "multi_map_in_static_method": [69, 70, 123], "fn_name": [69, 70], "num_arrai": [69, 70, 118], "overwrite_at_key_chain": [69, 70], "overwrit": [69, 70, 126, 129, 315, 359], "target_dict": [69, 70], "return_dict": [69, 70], "prune_empti": [69, 70], "keep_non": [69, 70], "empti": [69, 70, 71, 72, 122, 124, 125, 172, 173, 174, 686, 723, 950, 971, 974, 975, 978, 983, 984, 987, 989, 992], "prune_key_chain": [69, 70], "key1": [69, 70, 133], "key2": [69, 70], "key3": [69, 70], "prune_key_from_key_chain": [69, 70], "prune_kei": [69, 70], "prune_keys_from_key_chain": [69, 70], "remove_key_length_limit": [69, 70], "remove_print_limit": [69, 70], "reshape_lik": [69, 70], "leading_shap": [69, 70], "return_cont": [69, 70], "restructur": [69, 70], "keep_orig": [69, 70], "transpos": [69, 70, 131, 134, 315, 346, 724, 726, 728, 730, 737, 772, 774, 778, 780, 994, 1016, 1018, 1020, 1022], "restructure_key_chain": [69, 70], "keychain_map": [69, 70], "set_at_key_chain": [69, 70], "set_at_kei": [69, 70], "set_framework": [69, 70, 129, 131, 132, 134], "set_ivy_backend": [69, 70], "ivy_backend": [69, 70], "attribut": [69, 70, 115, 123, 124, 130, 131, 132, 133, 243, 278, 281, 283, 284, 285, 288, 315, 355], "show_sub_contain": [69, 70], "sub_cont_or_keychain": [69, 70], "shuffl": [69, 70, 913, 994], "seed_valu": [69, 70, 913, 923], "seed": [69, 70, 71, 72, 913, 994], "shuffle_h5_fil": [69, 70], "dataset": [69, 70, 132, 144, 994], "size_ordered_arrai": [69, 70], "keychain": [69, 70], "smallest": [69, 70, 243, 278, 281, 285, 288, 365, 429, 432], "largest": [69, 70, 145, 243, 278, 281, 285, 288, 737, 788, 790], "slice_kei": [69, 70], "key_slic": [69, 70], "all_depth": [69, 70], "slice_via_kei": [69, 70], "sort_by_kei": [69, 70], "num_or_size_split": [69, 70, 129, 825, 864], "with_remaind": [69, 70, 825, 864], "constitu": [69, 70, 134], "dimension": [69, 70, 172, 173, 174, 187, 188, 207, 210, 737, 743, 745, 746, 748, 761, 764, 769, 771, 775, 777, 778, 780, 800, 802, 803, 805, 825, 864, 925, 926, 927, 928, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "evenli": [69, 70, 172, 173, 174, 201, 202, 204, 205, 825, 864], "store": [69, 70, 115, 120, 122, 123, 129, 131, 132, 133, 172, 238, 242, 605, 632, 686, 722, 737, 797, 799, 825, 864, 1028, 1029], "stop_gradi": [69, 70, 71, 72, 84, 85, 133, 315, 359, 686, 693, 694, 695, 696, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 885, 886, 887, 888, 994, 1032, 1033, 1034, 1035, 1036, 1037], "preserve_typ": [69, 70, 686, 719], "stop": [69, 70, 74, 75, 129, 146, 172, 173, 174, 175, 201, 202, 203, 204, 205, 206, 315, 330, 359, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 719, 885, 886, 887, 888, 1032, 1033, 1034, 1035, 1036, 1037], "structural_diff": [69, 70], "to_devic": [69, 70, 315, 334], "cuda": [69, 70, 129, 132, 146, 172, 201, 202, 204, 205, 315, 324, 331, 356, 605, 633, 634, 637, 658, 661, 662, 913, 914, 915, 916, 919, 921, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039], "target": [69, 70, 112, 128, 132, 133, 134, 315, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 994], "to_dict": [69, 70], "to_disk_as_hdf5": [69, 70, 132], "starting_index": [69, 70], "max_batch_s": [69, 70], "w": [69, 70, 84, 85, 129, 132, 133, 605, 614, 686, 688, 691, 693, 695, 696, 698, 700, 701, 706, 708, 709, 710, 712, 713, 714, 716, 717, 724, 725, 726, 727, 728, 729, 730, 731], "later": [69, 70, 118, 605, 616], "to_disk_as_json": [69, 70, 132], "to_disk_as_pickl": [69, 70, 132], "to_flat_list": [69, 70], "to_iter": [69, 70, 123], "leaf_keys_onli": [69, 70], "to_iterator_kei": [69, 70], "to_iterator_valu": [69, 70], "to_json": [69, 70], "to_list": [69, 70, 605, 994], "to_multi_dev": [69, 70], "multidevcontain": [69, 70, 71], "distributedarrai": [69, 70], "update_backend": [69, 70], "to_raw": [69, 70], "raw": [69, 70, 115], "trim_kei": [69, 70], "max_length": [69, 70], "try_kc": [69, 70], "tri": [69, 70], "self": [69, 70, 122, 123, 129, 131, 132, 133, 134, 163, 164, 165, 176, 177, 178, 182, 183, 184, 190, 191, 192, 196, 197, 198, 207, 208, 209, 212, 213, 214, 220, 221, 222, 225, 227, 228, 230, 232, 233, 238, 240, 241, 249, 250, 251, 254, 255, 256, 259, 260, 261, 264, 265, 266, 273, 274, 275, 278, 279, 280, 285, 286, 287, 291, 292, 293, 296, 297, 298, 302, 303, 304, 315, 366, 367, 368, 371, 372, 373, 375, 376, 377, 379, 380, 381, 384, 385, 386, 388, 389, 390, 393, 394, 395, 397, 398, 399, 401, 402, 403, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 523, 524, 526, 527, 528, 530, 531, 532, 536, 537, 538, 541, 542, 543, 545, 546, 547, 549, 550, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 565, 566, 567, 570, 571, 572, 574, 575, 576, 578, 579, 580, 582, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 602, 603, 606, 607, 608, 618, 619, 634, 635, 636, 676, 678, 679, 688, 689, 690, 693, 694, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 738, 739, 740, 743, 744, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 769, 770, 772, 773, 775, 776, 778, 779, 781, 782, 785, 786, 788, 789, 791, 792, 794, 795, 797, 798, 800, 801, 803, 804, 806, 807, 810, 811, 812, 815, 816, 817, 820, 821, 822, 826, 827, 828, 831, 832, 833, 835, 836, 837, 839, 840, 841, 843, 844, 845, 847, 848, 849, 851, 852, 853, 855, 856, 857, 859, 860, 861, 865, 866, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 908, 909, 910, 919, 920, 932, 934, 935, 940, 941, 942, 945, 946, 947, 951, 952, 953, 955, 956, 957, 959, 960, 961, 963, 964, 965, 967, 968, 969, 971, 972, 973, 975, 976, 977, 979, 980, 981, 984, 985, 986, 989, 990, 991, 994, 1032, 1036], "arbitrari": [69, 70, 114, 118, 119, 123, 126, 133, 146, 172, 207, 210, 243, 254, 257, 302, 305, 315, 344, 345, 347], "concatten": [69, 70, 315, 344, 345, 346, 347, 359], "unstack": [69, 70, 129, 132, 605, 994], "dim_siz": [69, 70, 315], "update_config": [69, 70], "global_norm": [69, 70, 82, 83, 618, 619], "vector": [69, 70, 145, 172, 207, 210, 605, 618, 620, 724, 733, 737, 743, 745, 752, 754, 761, 764, 775, 777, 788, 790, 791, 793, 800, 802, 803, 805, 806, 808, 1016, 1026], "with_default_key_color": [69, 70], "with_entries_as_list": [69, 70], "with_ivy_backend": [69, 70], "with_key_length_limit": [69, 70, 132], "with_print_ind": [69, 70, 132], "with_print_limit": [69, 70, 132], "with_print_line_spac": [69, 70], "containerwithcr": [71, 72, 74], "containerwithdatatyp": [71, 72, 76], "containerwithdevic": [71, 72, 78], "containerwithelementwis": [71, 72, 80, 123], "containerwithgener": [71, 72, 82], "containerwithgradi": [71, 72, 84], "containerwithimag": [71, 72, 86], "containerwithlay": [71, 72, 88], "containerwithlinearalgebra": [71, 72, 90], "containerwithloss": [71, 72, 92], "containerwithnorm": [71, 72, 96], "containerwithrandom": [71, 72, 98], "containerwithsearch": [71, 72, 100], "containerwithset": [71, 72, 102], "containerwithsort": [71, 72, 104], "containerwithstatist": [71, 72, 106], "containerwithutil": [71, 72, 108], "__add__": [71, 72, 114, 115, 116, 122, 123, 131], "__radd__": [71, 72, 115, 116], "arang": [71, 72, 124, 172, 201, 202, 204, 205, 950, 951, 954, 994], "arg_info": [71, 72, 605], "arg_nam": [71, 72, 605], "argmax": [71, 72, 925, 994], "argmin": [71, 72, 925, 994], "array_equ": [71, 72, 605], "as_ivy_dev": [71, 72, 131, 315], "as_ivy_dtyp": [71, 72, 243], "as_native_dev": [71, 72, 315], "as_native_dtyp": [71, 72, 243], "assert_supports_inplac": [71, 72, 605], "cache_fn": [71, 72, 119, 605], "clear_mem_on_dev": [71, 72, 315], "clip_matrix_norm": [71, 72, 605], "closest_valid_dtyp": [71, 72, 243], "container_typ": [71, 72, 605], "conv1d": [71, 72, 724, 1016], "conv1d_transpos": [71, 72, 724], "conv2d": [71, 72, 724, 994, 1016], "conv2d_transpos": [71, 72, 724], "conv3d": [71, 72, 724, 1016], "conv3d_transpos": [71, 72, 724], "copy_arrai": [71, 72, 605], "cumprod": [71, 72, 134, 605], "cumsum": [71, 72, 605, 994], "current_backend_str": [71, 72, 605], "default_devic": [71, 72, 125, 129, 315, 353, 356, 363], "default_dtyp": [71, 72, 119, 124, 243], "default_float_dtyp": [71, 72, 124, 243], "default_int_dtyp": [71, 72, 124, 243], "depthwise_conv2d": [71, 72, 724, 994], "dev_clone_arrai": [71, 72, 315], "dev_clone_it": [71, 72, 315], "dev_clone_nest": [71, 72, 315], "dev_dist_arrai": [71, 72, 315], "dev_dist_it": [71, 72, 315], "dev_dist_nest": [71, 72, 315], "dev_unifi": [71, 72, 315], "dev_unify_arrai": [71, 72, 315], "dev_unify_it": [71, 72, 315], "dev_unify_nest": [71, 72, 315], "dev_util": [71, 72, 125, 315], "dropout": [71, 72, 132, 724, 1016, 1027], "dtype_bit": [71, 72, 243], "execute_with_gradi": [71, 72, 123, 132, 133, 134, 146, 686, 994], "ey": [71, 72, 134, 172, 724, 727, 731], "floormod": [71, 72, 605, 994], "fourier_encod": [71, 72, 605], "function_supported_dtyp": [71, 72, 243], "function_unsupported_dtyp": [71, 72, 243], "gelu": [71, 72, 157, 1002], "get_all_arrays_in_memori": [71, 72, 605], "get_all_ivy_arrays_on_dev": [71, 72, 125, 315], "get_min_bas": [71, 72, 605], "get_min_denomin": [71, 72, 605], "get_num_dim": [71, 72, 605, 994], "get_referrers_recurs": [71, 72, 605], "gpu_is_avail": [71, 72, 315], "handle_nest": [71, 72, 119, 123, 147], "handle_out_argu": [71, 72, 114, 121, 124, 125, 126, 147], "indices_wher": [71, 72, 127, 605, 994], "infer_devic": [71, 72, 114, 124, 125, 147], "infer_dtyp": [71, 72, 114, 124, 125, 147], "inplace_arrays_support": [71, 72, 605], "inplace_decr": [71, 72, 605], "inplace_incr": [71, 72, 605], "inplace_variables_support": [71, 72, 605], "inputs_to_native_arrai": [71, 72, 122, 147], "invalid_dtyp": [71, 72, 243], "is_ivy_contain": [71, 72, 605], "leaky_relu": [71, 72, 118, 157, 994], "linear": [71, 72, 115, 129, 132, 133, 134, 157, 158, 159, 160, 605, 632, 724, 732, 785, 787, 994, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "linspac": [71, 72, 129, 172, 173, 174, 994], "logspac": [71, 72, 129, 172], "lstm_updat": [71, 72, 129, 724], "match_kwarg": [71, 72, 605], "matrix_pow": [71, 72, 737], "multi_head_attent": [71, 72, 123, 126, 724], "multinomi": [71, 72, 913], "nonzero": [71, 72, 365, 379, 382, 536, 539, 925], "num_arrays_in_memori": [71, 72, 605], "num_cpu_cor": [71, 72, 125, 315], "num_gpu": [71, 72, 118, 125, 315], "num_ivy_arrays_on_dev": [71, 72, 315], "one_hot": [71, 72, 134, 605, 994], "outputs_to_ivy_arrai": [71, 72, 114, 122, 124, 125, 147], "percent_used_mem_on_dev": [71, 72, 315], "print_all_arrays_in_memori": [71, 72, 605], "print_all_ivy_arrays_on_dev": [71, 72, 315], "promote_typ": [71, 72, 243], "randint": [71, 72, 98, 99, 913, 917, 994], "random_norm": [71, 72, 118, 724, 727, 730, 731, 737, 788, 790, 913, 930, 931], "scaled_dot_product_attent": [71, 72, 724], "scatter_flat": [71, 72, 605], "scatter_nd": [71, 72, 131, 605, 994], "set_default_devic": [71, 72, 125, 315, 363], "set_default_dtyp": [71, 72, 119, 124, 243], "set_default_float_dtyp": [71, 72, 124, 243], "set_default_int_dtyp": [71, 72, 124, 243], "set_min_bas": [71, 72, 605], "set_min_denomin": [71, 72, 605], "set_queue_timeout": [71, 72, 605], "set_shape_array_mod": [71, 72, 605, 669, 683], "set_split_factor": [71, 72, 315], "set_tmp_dir": [71, 72, 605], "set_with_grad": [71, 72, 686, 723], "shape_array_mod": [71, 72, 605, 666, 683], "shape_to_tupl": [71, 72, 124, 605], "sigmoid": [71, 72, 129, 132, 133, 157, 994], "slogdet": [71, 72, 737], "split_factor": [71, 72, 315, 324], "split_func_cal": [71, 72, 315], "stable_divid": [71, 72, 119, 605], "stable_pow": [71, 72, 605], "static_aco": [71, 72], "static_acosh": [71, 72], "static_arg_info": [71, 72], "static_arg_nam": [71, 72], "static_argmax": [71, 72], "static_argmin": [71, 72], "static_arrai": [71, 72], "static_array_equ": [71, 72], "static_arrays_equ": [71, 72], "static_as_ivy_dev": [71, 72], "static_as_ivy_dtyp": [71, 72], "static_as_native_dev": [71, 72], "static_as_native_dtyp": [71, 72], "static_asin": [71, 72], "static_assert_supports_inplac": [71, 72], "static_atan": [71, 72], "static_atan2": [71, 72], "static_atanh": [71, 72], "static_bitwise_and": [71, 72], "static_bitwise_invert": [71, 72], "static_bitwise_left_shift": [71, 72], "static_bitwise_or": [71, 72], "static_bitwise_right_shift": [71, 72], "static_bitwise_xor": [71, 72], "static_cache_fn": [71, 72], "static_ceil": [71, 72], "static_clear_mem_on_dev": [71, 72], "static_clip_matrix_norm": [71, 72], "static_clip_vector_norm": [71, 72], "static_closest_valid_dtyp": [71, 72], "static_concat": [71, 72], "static_constant_pad": [71, 72], "static_container_typ": [71, 72], "static_conv1d": [71, 72], "static_conv1d_transpos": [71, 72], "static_conv2d": [71, 72], "static_conv2d_transpos": [71, 72], "static_conv3d": [71, 72], "static_conv3d_transpos": [71, 72], "static_copy_arrai": [71, 72], "static_co": [71, 72], "static_cosh": [71, 72], "static_cross": [71, 72], "static_cumprod": [71, 72], "static_cumsum": [71, 72], "static_current_backend": [71, 72], "static_current_backend_str": [71, 72], "static_default": [71, 72], "static_default_devic": [71, 72], "static_default_dtyp": [71, 72], "static_default_float_dtyp": [71, 72], "static_default_int_dtyp": [71, 72], "static_depthwise_conv2d": [71, 72], "static_det": [71, 72], "static_dev": [71, 72], "static_dev_clon": [71, 72], "static_dev_clone_arrai": [71, 72], "static_dev_clone_it": [71, 72], "static_dev_clone_nest": [71, 72], "static_dev_dist": [71, 72], "static_dev_dist_arrai": [71, 72], "static_dev_dist_it": [71, 72], "static_dev_dist_nest": [71, 72], "static_dev_unifi": [71, 72], "static_dev_unify_arrai": [71, 72], "static_dev_unify_it": [71, 72], "static_dev_unify_nest": [71, 72], "static_dev_util": [71, 72], "static_diagon": [71, 72], "static_dropout": [71, 72], "static_dtyp": [71, 72], "static_dtype_bit": [71, 72], "static_eigh": [71, 72], "static_eigvalsh": [71, 72], "static_einops_rearrang": [71, 72], "static_einops_reduc": [71, 72], "static_einops_repeat": [71, 72], "static_einsum": [71, 72], "static_empti": [71, 72], "static_equ": [71, 72], "static_erf": [71, 72], "static_execute_with_gradi": [71, 72], "static_exist": [71, 72], "static_exp": [71, 72], "static_expand_dim": [71, 72], "static_expm1": [71, 72], "static_flip": [71, 72], "static_floor": [71, 72], "static_floor_divid": [71, 72], "static_floormod": [71, 72], "static_fourier_encod": [71, 72], "static_ful": [71, 72], "static_function_supported_dtyp": [71, 72], "static_function_unsupported_dtyp": [71, 72], "static_gath": [71, 72], "static_gelu": [71, 72], "static_get_all_arrays_in_memori": [71, 72], "static_get_all_ivy_arrays_on_dev": [71, 72], "static_get_min_bas": [71, 72], "static_get_min_denomin": [71, 72], "static_get_num_dim": [71, 72], "static_get_referrers_recurs": [71, 72], "static_gpu_is_avail": [71, 72], "static_great": [71, 72], "static_greater_equ": [71, 72], "static_handle_nest": [71, 72], "static_handle_out_argu": [71, 72], "static_has_nan": [71, 72], "static_indices_wher": [71, 72], "static_infer_devic": [71, 72], "static_infer_dtyp": [71, 72], "static_inplace_arrays_support": [71, 72], "static_inplace_decr": [71, 72], "static_inplace_incr": [71, 72], "static_inplace_upd": [71, 72], "static_inplace_variables_support": [71, 72], "static_inputs_to_native_arrai": [71, 72], "static_inv": [71, 72], "static_invalid_dtyp": [71, 72], "static_is_arrai": [71, 72], "static_is_ivy_arrai": [71, 72], "static_is_ivy_contain": [71, 72], "static_is_native_arrai": [71, 72], "static_isfinit": [71, 72], "static_isinf": [71, 72], "static_isnan": [71, 72], "static_leaky_relu": [71, 72], "static_less": [71, 72], "static_less_equ": [71, 72], "static_linear": [71, 72], "static_log": [71, 72], "static_log10": [71, 72], "static_log1p": [71, 72], "static_log2": [71, 72], "static_logaddexp": [71, 72], "static_logical_and": [71, 72], "static_logical_not": [71, 72], "static_logical_or": [71, 72], "static_logical_xor": [71, 72], "static_lstm_upd": [71, 72], "static_match_kwarg": [71, 72], "static_matmul": [71, 72], "static_matrix_norm": [71, 72], "static_matrix_pow": [71, 72], "static_matrix_rank": [71, 72], "static_matrix_transpos": [71, 72], "static_max": [71, 72], "static_maximum": [71, 72], "static_mean": [71, 72], "static_min": [71, 72], "static_minimum": [71, 72], "static_multi_head_attent": [71, 72], "static_multinomi": [71, 72], "static_multiprocess": [71, 72], "static_neg": [71, 72], "static_nonzero": [71, 72], "static_not_equ": [71, 72], "static_num_arrays_in_memori": [71, 72], "static_num_cpu_cor": [71, 72], "static_num_gpu": [71, 72], "static_num_ivy_arrays_on_dev": [71, 72], "static_one_hot": [71, 72], "static_out": [71, 72], "static_outputs_to_ivy_arrai": [71, 72], "static_percent_used_mem_on_dev": [71, 72], "static_permute_dim": [71, 72], "static_pinv": [71, 72], "static_posit": [71, 72], "static_pow": [71, 72], "static_print_all_arrays_in_memori": [71, 72], "static_print_all_ivy_arrays_on_dev": [71, 72], "static_prod": [71, 72], "static_promote_typ": [71, 72], "static_qr": [71, 72], "static_queue_timeout": [71, 72], "static_random_norm": [71, 72], "static_relu": [71, 72], "static_remaind": [71, 72], "static_repeat": [71, 72], "static_reshap": [71, 72], "static_round": [71, 72], "static_scaled_dot_product_attent": [71, 72], "static_scatter_flat": [71, 72], "static_scatter_nd": [71, 72], "static_se": [71, 72], "static_set_default_devic": [71, 72], "static_set_default_dtyp": [71, 72], "static_set_default_float_dtyp": [71, 72], "static_set_default_int_dtyp": [71, 72], "static_set_min_bas": [71, 72], "static_set_min_denomin": [71, 72], "static_set_queue_timeout": [71, 72], "static_set_shape_array_mod": [71, 72], "static_set_split_factor": [71, 72], "static_set_tmp_dir": [71, 72], "static_set_with_grad": [71, 72], "static_shap": [71, 72], "static_shape_array_mod": [71, 72], "static_shape_to_tupl": [71, 72], "static_shuffl": [71, 72], "static_sigmoid": [71, 72], "static_sin": [71, 72], "static_sinh": [71, 72], "static_slogdet": [71, 72], "static_softmax": [71, 72], "static_solv": [71, 72], "static_split": [71, 72], "static_split_factor": [71, 72], "static_split_func_cal": [71, 72], "static_sqrt": [71, 72], "static_squar": [71, 72], "static_squeez": [71, 72], "static_stable_divid": [71, 72], "static_stable_pow": [71, 72], "static_stack": [71, 72], "static_std": [71, 72], "static_stop_gradi": [71, 72], "static_sum": [71, 72], "static_supports_inplac": [71, 72], "static_svd": [71, 72], "static_svdv": [71, 72], "static_swapax": [71, 72], "static_tensordot": [71, 72], "static_til": [71, 72], "static_tmp_dir": [71, 72], "static_to_devic": [71, 72], "static_to_list": [71, 72], "static_to_native_arrays_and_back": [71, 72], "static_to_scalar": [71, 72], "static_total_mem_on_dev": [71, 72], "static_tpu_is_avail": [71, 72], "static_trac": [71, 72], "static_trunc": [71, 72], "static_try_else_non": [71, 72], "static_type_promote_arrai": [71, 72], "static_unique_al": [71, 72], "static_unique_invers": [71, 72], "static_unique_valu": [71, 72], "static_unset_default_devic": [71, 72], "static_unset_default_dtyp": [71, 72], "static_unset_default_float_dtyp": [71, 72], "static_unset_default_int_dtyp": [71, 72], "static_unset_shape_array_mod": [71, 72], "static_unset_with_grad": [71, 72], "static_unstack": [71, 72], "static_used_mem_on_dev": [71, 72], "static_valid_dtyp": [71, 72], "static_value_is_nan": [71, 72], "static_var": [71, 72], "static_vari": [71, 72], "static_variable_data": [71, 72], "static_vecdot": [71, 72], "static_vector_norm": [71, 72], "static_vector_to_skew_symmetric_matrix": [71, 72], "static_wher": [71, 72], "static_with_grad": [71, 72], "static_zero_pad": [71, 72], "supports_inplac": [71, 72, 605], "tmp_dir": [71, 72, 605], "to_native_arrays_and_back": [71, 72, 114, 121, 147], "to_scalar": [71, 72, 605], "total_mem_on_dev": [71, 72, 125, 315], "tpu_is_avail": [71, 72, 315], "try_else_non": [71, 72, 605], "type_promote_arrai": [71, 72, 243], "unique_al": [71, 72, 930], "unique_invers": [71, 72, 930], "unique_valu": [71, 72, 930], "unset_default_devic": [71, 72, 315], "unset_default_dtyp": [71, 72, 243], "unset_default_float_dtyp": [71, 72, 243], "unset_default_int_dtyp": [71, 72, 243], "unset_shape_array_mod": [71, 72, 605], "unset_with_grad": [71, 72, 686], "used_mem_on_dev": [71, 72, 315], "valid_dtyp": [71, 72, 243], "value_is_nan": [71, 72, 605], "variable_data": [71, 72, 686], "with_grad": [71, 72, 686, 718], "at_dev": [71, 73, 315, 328, 329], "static_arang": [74, 75, 173], "static_asarrai": [74, 75, 176], "static_empty_lik": [74, 75, 182], "static_ey": [74, 75, 187], "n_row": [74, 75, 172, 187, 188, 189], "n_col": [74, 75, 172, 187, 188, 189], "static_from_dlpack": [74, 75, 190], "static_full_lik": [74, 75, 196], "static_linspac": [74, 75, 201], "num": [74, 75, 129, 172, 201, 202, 203, 204, 205, 206], "endpoint": [74, 75, 172, 201, 202, 203, 204, 206], "static_logspac": [74, 75, 204], "static_meshgrid": [74, 75, 207], "static_native_arrai": [74, 75, 212], "static_on": [74, 75, 217], "static_ones_lik": [74, 75, 220], "static_tril": [74, 75, 225], "static_triu": [74, 75, 230], "static_zero": [74, 75, 235], "static_zeros_lik": [74, 75, 238], "int32": [76, 77, 82, 83, 118, 124, 172, 238, 242, 243, 264, 266, 267, 268, 283, 605, 676, 677, 679, 680, 825, 839, 842, 950, 967, 970, 975, 978], "int64": [76, 77, 118, 124, 243, 264, 266, 267, 268, 283, 314, 365, 421, 424, 925, 926, 927, 950, 967, 970, 975, 978], "static_astyp": [76, 77, 249], "static_broadcast_arrai": [76, 77, 254], "static_broadcast_to": [76, 77, 259], "static_can_cast": [76, 77, 264], "from_": [76, 77, 243, 264, 267, 268], "static_finfo": [76, 77, 278], "static_iinfo": [76, 77, 285], "static_is_float_dtyp": [76, 77, 291], "dtype_in": [76, 77, 243, 247, 248, 277, 290, 291, 294, 295, 296, 299, 300, 314], "static_is_int_dtyp": [76, 77, 296], "static_result_typ": [76, 77, 302], "02": [80, 81, 388, 390, 686, 688, 691], "21": [80, 81, 365, 388, 390, 425, 428, 605, 623, 737, 749, 751, 775, 777, 809, 820, 823, 950, 951, 954], "61": [80, 81, 92, 93, 365, 388, 390, 582, 585, 809, 810, 812, 813, 814, 820, 822, 824], "static_ab": [80, 81, 366], "static_add": [80, 81, 115, 116, 123, 379], "static_asinh": [80, 81, 388], "97": [80, 81, 365, 388, 391, 392], "37": [80, 81, 98, 99, 365, 388, 391, 392, 591, 595, 915, 917], "75": [80, 81, 365, 388, 391, 392, 737, 758, 760, 775, 777], "static_divid": [80, 81, 123, 441], "static_multipli": [80, 81, 123, 536], "static_sign": [80, 81, 565], "static_subtract": [80, 81, 123, 586], "static_tan": [80, 81, 116, 123, 591], "143": [80, 81, 116, 365, 591, 592, 594, 595], "38": [80, 81, 116, 365, 591, 592, 594, 595], "static_tanh": [80, 81, 596], "76": [80, 81, 365, 437, 440, 596, 597, 686, 688, 691, 737, 794, 796, 950, 951, 954], "96": [80, 81, 365, 591, 595, 596, 597, 686, 688, 691, 737, 775, 777, 950, 951, 954], "995": [80, 81, 365, 596, 597, 599, 600], "9999": [80, 81, 596, 597], "static_all_equ": [82, 83, 606, 608], "clip_vector_norm": [82, 83, 605], "max_norm": [82, 83, 605, 617, 618, 619, 620], "static_gather_nd": [82, 83, 634], "static_to_numpi": [82, 83, 676, 679], "adam_upd": [84, 85, 133, 686], "lr": [84, 85, 132, 133, 686, 693, 694, 695, 696, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 1032, 1033, 1034, 1035, 1036, 1037], "mw_tm1": [84, 85, 686, 693, 694, 695, 696, 706, 707, 708, 709], "vw_tm1": [84, 85, 686, 693, 694, 695, 696, 706, 707, 708, 709], "gradient_descent_upd": [84, 85, 686, 885, 886, 887, 888, 994], "is_vari": [84, 85, 126, 686], "lamb_upd": [84, 85, 686], "max_trust_ratio": [84, 85, 686, 706, 707, 708, 709, 1032, 1034], "decay_lambda": [84, 85, 686, 706, 707, 708, 709, 710, 711, 712, 713, 1032, 1034, 1035], "lars_upd": [84, 85, 686], "optimizer_upd": [84, 85, 686], "effective_grad": [84, 85, 686, 714, 715, 716, 717], "static_adam_step": [84, 85, 688], "87": [84, 85, 98, 99, 686, 688, 691, 692, 915, 917], "976": [84, 85, 365, 596, 600, 686, 688, 691, 692], "static_adam_upd": [84, 85, 693], "static_gradient_descent_upd": [84, 85, 698], "static_is_vari": [84, 85, 702], "static_lamb_upd": [84, 85, 706], "static_lars_upd": [84, 85, 710], "static_optimizer_upd": [84, 85, 714], "73": [90, 91, 118, 365, 578, 581, 737, 738, 740, 741, 742, 907, 908, 911], "577": [90, 91, 737, 738, 740, 741, 742], "41": [90, 91, 131, 365, 425, 428, 578, 581, 737, 738, 740, 741, 742, 950, 975, 978], "707": [90, 91, 737, 738, 740, 741, 742], "static_choleski": [90, 91, 738], "static_rol": [90, 91, 94, 95, 116, 123, 738, 742, 826, 830, 859], "511": [92, 93, 809, 810, 812, 813, 814, 820, 822, 824], "5108256": [92, 93, 815, 817], "609438": [92, 93, 815, 817], "static_binary_cross_entropi": [92, 93, 810], "static_cross_entropi": [92, 93, 815], "20397282": [92, 93, 815, 819], "83258148": [92, 93, 815, 819], "60943794": [92, 93, 815, 819], "static_sparse_cross_entropi": [92, 93, 820], "static_clip": [94, 95, 826], "658": [96, 97, 907, 908, 910, 911, 912], "04": [96, 97, 724, 736, 907, 908, 910, 911, 912], "759": [96, 97, 907, 908, 910, 911, 912], "42": [96, 97, 98, 99, 134, 157, 163, 166, 686, 688, 691, 737, 775, 777, 908, 910, 912, 913, 915, 917, 923, 950, 951, 954], "403": [96, 97, 908, 910, 912], "62": [96, 97, 98, 99, 908, 910, 912, 915, 917], "54": [96, 97, 116, 365, 433, 436, 437, 440, 578, 581, 724, 736, 737, 775, 777, 908, 910, 912, 913, 918, 950, 951, 954], "static_layer_norm": [96, 97, 908], "random_uniform": [98, 99, 118, 125, 133, 913, 994], "static_randint": [98, 99, 915], "20": [98, 99, 131, 365, 425, 428, 454, 457, 561, 564, 578, 581, 737, 749, 751, 775, 777, 794, 796, 913, 915, 916, 917, 925, 928, 929, 950, 951, 954], "40": [98, 99, 365, 437, 440, 578, 581, 737, 775, 777, 915, 917, 950, 951, 954], "52": [98, 99, 686, 688, 691, 737, 775, 777, 915, 917, 930, 931, 950, 951, 954], "95": [98, 99, 365, 565, 568, 686, 688, 691, 915, 917], "13": [98, 99, 116, 118, 123, 365, 405, 408, 425, 428, 437, 440, 578, 581, 605, 623, 686, 688, 691, 724, 736, 737, 749, 751, 775, 777, 915, 917, 925, 929, 930, 931, 950, 951, 954], "static_random_uniform": [98, 99, 919], "static_unique_count": [102, 103, 932], "classivi": [102, 103, 825, 864, 930, 932, 933, 935, 936], "static_argsort": [104, 105, 940], "static_sort": [104, 105, 945], "static_al": [108, 109, 984], "static_ani": [108, 109, 989], "add_ivy_container_instance_method": 110, "containerexampl": [110, 111], "who": [112, 128, 146], "mainli": [112, 130, 132], "under": [112, 115, 116, 117, 118, 119, 123, 128, 129, 132, 134], "hood": [112, 116, 118, 119, 123, 128, 129, 132, 134], "weed": [112, 128], "behind": [112, 118, 128, 130, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716], "tour": 112, "primari": [112, 118, 120, 126, 146], "composit": [112, 118, 120, 122, 123, 126, 129, 133, 134, 146], "nestabl": [112, 115, 116, 118, 126, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 429, 432, 462, 465, 534, 545, 548, 565, 568, 578, 581, 582, 585, 591, 595, 605, 633, 724, 727, 736, 737, 738, 741, 749, 751, 825, 859, 862, 907, 908, 911, 930, 932, 936, 950, 955, 958, 983, 984, 987], "dynam": [112, 124, 125, 126, 129, 169, 170], "runtim": [112, 118, 315], "h": [112, 123, 724, 727, 728, 729, 730, 731, 889, 892], "j": [112, 605, 613, 614, 737, 797, 799, 950, 951, 954], "n": [112, 118, 172, 207, 210, 225, 229, 230, 234, 605, 614, 724, 732, 737, 749, 751, 761, 764, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 788, 790, 791, 793, 797, 799, 800, 802, 803, 805, 806, 808, 825, 835, 838, 839, 842, 847, 850, 869, 872, 881, 884, 913, 918, 919, 921, 925, 928, 950, 959, 962, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "borrow": 112, "taken": [113, 127, 134, 737, 749, 751], "constant": [113, 119, 133, 134, 146, 315, 324, 325, 825, 835, 838, 889, 895, 907, 908, 911, 1007, 1008, 1012, 1015, 1028, 1029, 1030, 1031], "compil": [113, 123, 128, 130, 146, 994, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037], "meta": [113, 122, 886, 887, 888], "overlap": 113, "sever": [113, 146, 737, 758, 760], "judgement": 113, "locat": [113, 118, 120, 125, 913, 914], "some_namespac": 113, "some_backend": 113, "another_backend": 113, "break": [113, 114, 127, 131, 146, 994], "anyth": [113, 118, 994], "refactor": 113, "ongo": 113, "subfold": [113, 118], "via": [113, 123, 124, 125, 126, 129, 131, 132, 145, 889, 890, 899, 900], "file_nam": [113, 118], "my_func": [113, 116], "int": [113, 114, 116, 119, 123, 124, 125, 126, 127, 134, 157, 162, 169, 170, 172, 187, 188, 195, 196, 199, 201, 202, 204, 205, 225, 229, 230, 234, 243, 259, 262, 272, 277, 278, 281, 285, 288, 296, 299, 315, 337, 340, 341, 342, 343, 351, 352, 353, 359, 360, 365, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 605, 611, 623, 624, 627, 628, 629, 632, 633, 642, 658, 661, 670, 684, 686, 688, 691, 693, 695, 706, 708, 724, 725, 727, 729, 730, 731, 737, 743, 745, 749, 751, 794, 796, 797, 799, 800, 802, 803, 805, 809, 815, 818, 820, 823, 825, 831, 834, 835, 838, 839, 842, 843, 846, 847, 850, 851, 854, 859, 862, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 886, 887, 888, 889, 892, 901, 907, 908, 911, 913, 914, 915, 916, 923, 925, 926, 927, 939, 940, 943, 945, 948, 950, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "nativedtyp": [113, 114, 124, 125, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 195, 196, 199, 212, 215, 217, 218, 220, 223, 235, 237, 238, 242, 243, 248, 249, 252, 271, 272, 273, 276, 301, 314, 950, 975, 978], "nativedevic": [113, 114, 124, 125, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 195, 196, 199, 201, 202, 204, 205, 212, 215, 217, 218, 220, 223, 235, 237, 238, 242, 315, 332, 333, 334, 348, 354, 356, 358, 360, 361, 364, 605, 658, 913, 914, 915, 916, 918, 919, 921], "my": 113, "numer": [113, 133, 172, 207, 210, 243, 249, 252, 365, 366, 369, 379, 382, 429, 432, 441, 444, 458, 461, 462, 465, 466, 469, 478, 481, 482, 485, 486, 489, 490, 493, 522, 525, 526, 529, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 565, 568, 582, 585, 586, 590, 601, 604, 605, 640, 641, 663, 664, 671, 672, 737, 743, 745, 761, 764, 775, 777, 788, 790, 794, 796, 797, 799, 800, 802, 913, 924, 925, 926, 927, 950, 955, 958, 967, 970, 975, 978, 1007], "cooler": 113, "produc": [113, 118, 315, 324, 325, 724, 736], "something_cool": 113, "category_nam": [114, 115, 119, 124, 125], "backend_nam": [114, 115, 119, 120, 121, 124, 125], "adress": 114, "conveni": [114, 124, 125, 130, 132, 133], "revisit": [114, 134], "dedic": [114, 131, 133, 686, 722, 1005, 1006], "four": [114, 116, 119, 124, 132], "float": [114, 115, 118, 119, 123, 124, 126, 131, 133, 157, 159, 171, 172, 173, 174, 181, 187, 188, 195, 196, 199, 201, 202, 204, 205, 217, 218, 235, 237, 243, 249, 252, 271, 278, 281, 291, 294, 302, 305, 315, 348, 354, 358, 361, 364, 365, 366, 369, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 490, 493, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 586, 590, 591, 595, 596, 600, 601, 604, 605, 617, 618, 620, 632, 640, 641, 663, 664, 671, 672, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 727, 731, 736, 737, 738, 741, 746, 748, 752, 754, 755, 757, 758, 760, 769, 771, 778, 780, 781, 783, 785, 787, 788, 790, 803, 805, 809, 810, 813, 815, 818, 820, 823, 885, 886, 887, 888, 907, 908, 911, 913, 918, 919, 921, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982], "tf": [114, 122, 124, 125, 126, 129, 134, 146, 994], "jnp": [114, 124, 125, 126, 134, 994], "jaxarrai": [114, 124, 125, 126], "wherea": [114, 116, 118, 119, 122, 124, 125, 134], "__sub__": [114, 116, 122, 123, 131], "__mul__": [114, 116, 122, 123, 131], "__div__": 114, "permit": [114, 118, 122], "dicat": 114, "addition": [114, 126], "omit": [114, 126, 930, 931, 932, 936, 938], "wrapper": [114, 121, 122, 123, 124, 126, 131], "contrast": [114, 115], "futher": 114, "respect": [114, 116, 118, 122, 123, 124, 127, 172, 207, 210, 365, 366, 369, 379, 382, 397, 400, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 557, 560, 586, 590, 686, 688, 691, 693, 695, 697, 698, 700, 706, 708, 710, 712, 714, 716, 737, 781, 783, 885, 886, 887, 888], "absenc": 114, "pep": 114, "484": 114, "annot": [114, 127], "dictat": [114, 116, 122, 126], "brittl": 114, "intend": [114, 950, 975, 978], "subset": [114, 115, 118, 129], "freeli": 114, "extend": [114, 115, 120], "consum": [114, 118, 123, 315], "inde": [114, 146], "flexibl": 114, "technic": [114, 123, 126, 146], "original_typ": 114, "cumbersom": 114, "readabl": [114, 122, 123, 131, 132], "account": 115, "instanti": 115, "firstli": [115, 116, 119, 122, 124, 126, 132], "templat": [115, 118, 994], "spec": [115, 116], "api_specif": [115, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 737, 749, 751, 825, 839, 842, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958], "array_api": 115, "preview": 115, "render": 115, "incorrectli": [115, 127], "onlin": [115, 994], "approxim": [115, 157, 158, 365, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 397, 400, 433, 436, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 553, 556, 570, 573, 574, 577, 591, 595, 596, 600, 737, 769, 771, 778, 780], "tangent": [115, 157, 168, 365, 393, 396, 397, 400, 401, 404, 591, 595, 596, 600], "domain": [115, 365, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 397, 400, 433, 436, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 510, 513, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600], "infin": [115, 171, 243, 249, 252, 365, 366, 369, 375, 378, 379, 382, 388, 391, 393, 396, 397, 400, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 466, 469, 478, 481, 482, 485, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 737, 803, 805, 950, 955, 958, 963, 966, 983, 984, 987, 989, 992], "codomain": [115, 365, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 397, 400, 433, 436, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 510, 513, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600], "x_i": [115, 365, 366, 369, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 409, 412, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 478, 481, 482, 485, 486, 489, 498, 501, 502, 505, 510, 513, 522, 525, 541, 544, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 591, 595, 596, 600, 601, 604, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982], "assum": [115, 118, 120, 124, 131, 132, 146, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 433, 436, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 570, 573, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987], "express": [115, 127, 129, 134, 365, 371, 374, 384, 387, 393, 396, 397, 400, 433, 436, 570, 573, 591, 595], "radian": [115, 365, 371, 374, 384, 387, 393, 396, 397, 400, 433, 436, 570, 573, 591, 595], "operand": [115, 365, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 397, 400, 425, 428, 429, 432, 433, 436, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 601, 604, 950, 951, 954, 955, 958, 963, 966, 975, 978], "whose": [115, 118, 172, 225, 229, 230, 234, 365, 375, 378, 388, 391, 401, 404, 433, 436, 437, 440, 553, 556, 570, 573, 574, 577, 591, 595, 596, 600, 605, 616, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799, 825, 843, 846, 859, 862, 930, 931, 932, 936, 950, 951, 954], "ref": [115, 365, 421, 424, 490, 493, 536, 539, 545, 548, 557, 560, 586, 590, 825, 869, 872], "promot": [115, 119, 124, 243, 249, 252, 264, 267, 301, 302, 305, 310, 365, 371, 374, 375, 378, 379, 382, 384, 387, 388, 391, 393, 396, 401, 404, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 433, 436, 437, 440, 441, 444, 454, 457, 458, 461, 498, 501, 502, 505, 510, 513, 514, 517, 530, 533, 536, 539, 553, 556, 557, 560, 570, 573, 574, 577, 578, 581, 591, 595, 596, 600, 737, 738, 741, 743, 745, 758, 760, 761, 764, 769, 771, 775, 777, 778, 780, 785, 787, 800, 802, 803, 805, 825, 869, 872, 950, 959, 962], "But": [115, 123, 134], "needless": 115, "info": [115, 994], "renam": 115, "conform": [115, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 458, 461, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 737, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987], "org": [115, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 686, 688, 691, 693, 695, 737, 749, 751, 825, 839, 842, 859, 862, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958], "elementwise_funct": [115, 365, 366, 369, 384, 387, 388, 391, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 578, 581, 582, 585, 737, 749, 751, 825, 859, 862, 930, 931, 939, 940, 943, 950, 955, 958], "descript": [115, 118, 123, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 803, 805, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958, 983, 984, 987], "simplic": [115, 133, 145, 172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 204, 205, 207, 210, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242, 243, 264, 267, 365, 366, 369, 379, 382, 384, 387, 388, 391, 405, 408, 425, 428, 429, 432, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 578, 581, 582, 585, 591, 595, 596, 600, 605, 633, 724, 727, 736, 737, 738, 741, 746, 748, 749, 751, 825, 839, 842, 843, 846, 859, 862, 907, 908, 911, 930, 931, 932, 936, 939, 940, 943, 950, 955, 958], "judgment": 115, "beyond": [115, 825, 859, 862], "text": 115, "func_nam": [115, 116, 119], "pure": [115, 131, 134, 146], "themselv": [115, 119, 123, 124, 125, 133, 889, 890], "operator_nam": 115, "succinct": 115, "contstructor": 115, "though": [115, 119, 124, 132, 146], "forward": [115, 118, 134, 145, 146, 1028, 1029, 1032, 1036], "_forward": [115, 129, 132, 133, 994], "former": 115, "trainabl": [115, 130, 132, 133, 686, 702, 704, 1005, 1006, 1028, 1029, 1038], "explicitli": [115, 119, 120, 122, 123, 126, 129, 146, 737, 752, 754, 1016, 1025, 1027, 1028, 1029], "latter": [115, 120], "implicit": [115, 118, 123, 129], "docst": 115, "eight": 116, "static_": 116, "op_nam": 116, "__r": 116, "__truediv__": [116, 122, 123], "recap": [116, 123, 133], "independ": [116, 117, 121, 123, 129, 134, 737, 743, 745, 785, 787, 913, 914], "combinatorili": 116, "variat": [116, 118], "grid": [116, 118, 145, 172, 207, 210], "vari": [116, 118, 123, 131, 930, 931, 932, 936, 938], "simplest": [116, 118], "small": [116, 119, 129, 133, 146, 365, 536, 539, 737, 769, 771, 778, 780, 907, 908, 911, 1030, 1031], "unus": [116, 126, 127, 169, 170], "18": [116, 123, 365, 425, 428, 737, 749, 751, 775, 777, 950, 951, 954], "excess": [116, 120, 131], "okai": [116, 129], "showcas": [116, 145], "demonstr": [116, 131], "replic": [116, 124], "meant": 116, "imaginari": 116, "some_flag": 116, "another_flag": 116, "jointli": 116, "three": [116, 118, 123, 128, 172, 207, 210, 994], "x0": [116, 605, 613], "procedur": 116, "sens": [116, 123, 131], "5574077": 116, "1850398": 116, "5463025": 116, "8422884": 116, "91601413": 116, "9647598": 116, "3738229": 116, "1597457": 116, "0963247": 116, "9955841": 116, "3278579": 116, "multi": [116, 123, 128, 146, 724, 735, 737, 743, 745, 994, 1000, 1016, 1027], "seper": [116, 605, 632], "pars": [116, 146], "satisfi": [116, 737, 806, 808], "far": [116, 125, 130, 131, 889, 890, 900], "asid": [116, 145], "irrelev": [116, 124], "increasingli": 116, "complex": [116, 132, 133, 134, 146, 737, 752, 754, 788, 790], "rule": [116, 118, 119, 122, 123, 124, 127, 243, 249, 252, 264, 267, 302, 305, 365, 401, 404, 421, 424, 441, 444, 536, 539, 557, 560, 737, 738, 741, 743, 745, 775, 777, 785, 787], "14254655": 116, "1578213": 116, "380515": 116, "17": [116, 123, 157, 159, 737, 749, 751, 913, 918], "trivial": 116, "By": [116, 119, 123, 126, 133, 134, 605, 623, 624, 737, 800, 802, 825, 851, 854, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "non": [116, 123, 124, 129, 169, 170, 243, 249, 252, 290, 365, 522, 525, 526, 529, 724, 727, 737, 746, 748, 769, 771, 788, 790, 794, 796, 800, 802, 803, 805, 925, 926, 927, 928, 950, 955, 958, 959, 962, 963, 966, 967, 970, 979, 982, 983, 984, 987, 989, 992, 1028, 1029, 1032, 1036], "exlud": 116, "unit": [117, 118, 146, 157, 158, 159, 160, 315], "thoroughli": 117, "ci": [117, 118, 146], "failur": 117, "On": [118, 127, 130, 134], "fixtur": 118, "300": [118, 365, 561, 564], "hit": [118, 129], "action": 118, "eleg": 118, "intellig": 118, "sampl": [118, 724, 732, 913, 914, 918, 919, 921, 950, 971, 974, 979, 982, 1016, 1024], "rang": [118, 132, 133, 134, 172, 173, 174, 201, 202, 204, 205, 930, 931, 950, 967, 970, 975, 978, 994], "cach": [118, 119, 315, 333, 605, 616], "unexplor": 118, "known": 118, "repeatedli": [118, 123, 889, 898], "upload": 118, "artifact": 118, "parametr": 118, "statement": [118, 127, 146], "plai": [118, 134], "varieti": [118, 124, 125], "wide": 118, "valid_int_dtyp": 118, "int8": [118, 124, 243, 283, 314], "int16": [118, 124, 243, 264, 267, 283, 950, 967, 970, 975, 978], "uint8": [118, 124, 243, 264, 267, 283, 314], "uint16": [118, 124, 243, 284, 950, 967, 970, 975, 978], "uint32": [118, 124, 243, 284, 950, 967, 970, 975, 978], "uint64": [118, 124, 243, 284, 950, 967, 970, 975, 978], "custom_strategi": 118, "st": 118, "sampled_from": 118, "min_siz": 118, "max_siz": 118, "wherein": 118, "referenc": 118, "print_hypothesis_exampl": 118, "searchstrategi": 118, "randomis": 118, "simplist": 118, "intricaci": 118, "briefli": [118, 119, 132], "bound": [118, 129], "mechan": [118, 144, 146, 994], "power": [118, 131, 132, 133, 365, 421, 424, 454, 457, 553, 556, 605, 640, 663, 672, 737, 768, 1007], "math": [118, 126, 134, 994], "inclus": [118, 126, 172, 173, 174, 913, 915, 916], "width": 118, "losslessli": 118, "mostli": 118, "drawn": [118, 913, 914, 915, 916, 918, 919, 921], "one_of": 118, "datum": 118, "pipe": 118, "overload": 118, "shorthand": 118, "ndim": [118, 131, 737, 781, 783, 788, 790], "draw": [118, 913, 914, 918, 919, 921], "dtype_and_x": 118, "num_positional_arg": 118, "reject": 118, "flatmap": 118, "suppos": 118, "valid": [118, 124, 129, 243, 269, 724, 725, 726, 727, 728, 729, 730, 731, 825, 869, 872, 983, 984, 987, 989, 992, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "dataobject": 118, "test_argsort": 118, "decor": [118, 119, 121, 123, 124, 125, 126], "initialis": [118, 315], "snippet": 118, "dtype_and_valu": 118, "valid_float_dtyp": 118, "list_of_length": 118, "instance_method": 118, "alpha": [118, 157, 159], "test_leaky_relu": 118, "fw": [118, 724, 725, 726, 727, 728, 729, 730, 731], "float16": [118, 124, 243, 284, 314], "exhaust": 118, "num_posit": 118, "indirectli": 118, "advis": 118, "seri": 118, "9433925": 118, "401298464324817e": 118, "574352379": 118, "99999": 118, "2250738585072014e": 118, "308": 118, "103515625e": 118, "unpack": [118, 127, 605, 684], "seamlessli": 118, "edg": [118, 129, 134, 825, 826, 829, 835, 838, 881, 884, 994], "encount": 118, "criterion": 118, "straight": [118, 131, 994], "array_valu": 118, "valid_ax": 118, "hand": [118, 119, 127, 146], "craft": 118, "polici": [118, 145], "hoc": 118, "overview": [118, 128, 145], "array_dtyp": 118, "array_bool": 118, "na": 118, "test_concat": 118, "test_devic": 118, "array_shap": 118, "test_manipul": 118, "common_shap": 118, "test_lay": 118, "size_bound": 118, "precis": [118, 243, 278, 281, 365, 536, 539, 578, 581], "283405296074752": 118, "564049465049088": 118, "0417876997507982e": 118, "min_valu": 118, "max_valu": 118, "allow_inf": 118, "min_num_dim": 118, "wherev": 118, "reshape_shap": 118, "larger": [118, 129, 134, 243, 278, 281, 825, 826, 829, 859, 862, 950, 971, 974, 979, 982], "stand": 118, "alon": [118, 315, 354, 364], "fashion": 118, "some_sequ": 118, "06": [118, 686, 688, 691], "input_dtyp": 118, "allow_subnorm": 118, "exclude_min": 118, "960464477539063e": 118, "08": [118, 365, 388, 391, 724, 736], "coverag": 118, "allow_nan": 118, "Such": 118, "kind": [118, 146, 243, 278, 281, 285, 288, 365, 553, 556, 950, 967, 970, 975, 978], "get_shap": 118, "allow_non": 118, "max_num_dim": 118, "min_dim_s": 118, "none_or_list_of_float": 118, "200": 118, "199": [118, 365, 388, 391], "99999999999997": 118, "000000000000002": 118, "125": 118, "43759670925832": 118, "get_mean_std": 118, "probabilist": 118, "811428143185347e": 118, "89": [118, 365, 425, 428, 737, 794, 796, 950, 975, 978], "none_or_list_float": 118, "get_bound": 118, "arrays_valu": 118, "put": [118, 146], "36418": 118, "213": 118, "21716926": 118, "get_prob": 118, "unnorm": [118, 913, 914], "099609375": 118, "get_axi": 118, "number_positional_argu": 118, "mind": [118, 122, 123], "bodi": 118, "test_valu": 118, "logic": [118, 121, 122, 124, 125, 131, 315, 351, 365, 518, 521, 522, 525, 526, 529, 983, 984, 987, 989, 992, 994], "enough": [118, 131, 132, 133], "autom": [118, 994], "report": 118, "test_demo": 118, "falsifi": 118, "failing_test": 118, "traceback": 118, "123": [118, 605, 630], "assertionerror": [118, 686, 723], "shrink": 118, "prescrib": 118, "behavior": [118, 129, 146, 365, 553, 556, 557, 560, 930, 931, 932, 936, 938], "identifi": 118, "closest": [118, 243, 269, 365, 429, 432, 462, 465, 466, 469, 561, 564, 601, 604], "checkout": 118, "scratch": 118, "databas": 118, "therebi": 118, "debug": [118, 123, 132], "event": [118, 994], "test_gelu": 118, "test_fil": 118, "brief": 118, "phase": [118, 146], "reus": 118, "notabl": 118, "displai": [118, 123, 132], "verbos": [118, 129, 994, 1042], "newer": 118, "max_exampl": 118, "impact": [118, 133], "deadlin": 118, "weird": 118, "verifi": [118, 124, 125, 131, 994, 1000], "truth": [118, 365, 446, 449, 470, 473, 474, 477, 490, 493, 494, 497, 545, 548], "opt": [118, 120, 126, 131], "defer": [118, 119, 122, 123, 124, 125, 126], "suffic": [118, 121], "catch": [118, 605, 626], "systemat": 118, "safeguard": 118, "inabl": 118, "fact": [118, 132], "categor": [119, 125], "mutual": [119, 123], "constitut": [119, 129, 950, 971, 974, 979, 982], "venn": 119, "diagram": 119, "light": [119, 146], "log_pr": [119, 123, 126], "array_arg": 119, "typic": 119, "whatsoev": [119, 123], "commonli": [119, 950, 971, 974, 979, 982], "outsid": [119, 125, 127, 129, 131, 134, 825, 826, 829, 869, 872], "denomin": [119, 146, 605, 631, 641, 664, 671, 672, 907, 908, 911, 1030, 1031], "divis": [119, 365, 421, 424, 441, 444, 466, 469, 557, 560, 605, 631, 641, 664, 671, 672, 686, 688, 691, 693, 695, 706, 708, 1032, 1033, 1034], "deal": [119, 146], "concurr": [119, 123], "weight": [119, 123, 133, 134, 686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 724, 733, 734, 736, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1032, 1034, 1035], "modif": 119, "group": [119, 123], "cast": [119, 124, 243, 249, 252, 264, 267, 825, 831, 834, 950, 967, 970, 975, 978, 994], "get_all_arrays_on_dev": 119, "nested_map": [119, 889], "index_nest": [119, 889], "implicit_backend": 120, "unless": [120, 125, 126, 146, 365, 536, 539, 605, 658], "__dict__": [120, 129, 131], "ivy_original_dict": [120, 129], "unmodifi": [120, 124], "moment": [120, 146, 686, 688, 691, 693, 695, 706, 708, 1032, 1033, 1034], "fallback": 120, "freedom": [120, 950, 971, 974, 979, 982], "recommend": [120, 365, 522, 525, 526, 529, 557, 560, 950, 959, 962], "achiev": [121, 127, 132, 134], "topic": [121, 131], "_data": [122, 131], "organiz": [122, 123], "inherit": [122, 123, 131], "bear": [122, 123, 124], "necessarili": [122, 123], "although": [122, 123], "underpin": [122, 123, 129], "programmat": [122, 123], "backup": [122, 123], "accident": [122, 123], "absent": [122, 123], "perk": [122, 123], "auto": [122, 123, 132], "throw": [122, 131], "imposs": 122, "coupl": [122, 123, 131, 133], "anywai": 122, "secondli": [122, 124], "easier": 122, "five": [123, 132], "decis": [123, 129, 131], "arbitrarili": [123, 132], "__repr__": 123, "control": [123, 124, 126, 131, 132, 145], "__getattr__": 123, "underli": [123, 365, 405, 408, 417, 420, 425, 428, 530, 533], "__setattr__": 123, "__contains__": 123, "__getstate__": 123, "__setstate__": 123, "unpickl": 123, "expand": [123, 605, 632, 825, 839, 842], "children": 123, "shallowest": 123, "deepest": 123, "22": [123, 365, 425, 428, 737, 749, 751, 775, 777, 925, 929, 950, 951, 954], "retain_grad": [123, 686, 697], "dy": [123, 686, 697], "dx": [123, 686, 697], "autograd": [123, 146], "grad": [123, 132, 133, 134, 994, 1032, 1036], "redund": 123, "num_head": [123, 724, 735, 1016, 1027], "mask": [123, 724, 735, 736], "to_q_fn": [123, 724, 735], "to_kv_fn": [123, 724, 735], "to_out_fn": [123, 126, 724, 735], "to_q_v": [123, 724, 735], "to_kv_v": [123, 724, 735], "to_out_v": [123, 724, 735], "measur": [123, 724, 735, 1016, 1027], "dot": [123, 724, 735, 736, 737, 794, 796, 800, 802, 1016, 1027], "product": [123, 365, 536, 539, 605, 623, 724, 735, 736, 737, 743, 745, 761, 764, 775, 777, 794, 796, 800, 802, 950, 951, 954, 967, 970, 1016, 1027], "implicitli": 123, "intuit": [123, 132, 133], "chronolog": 123, "had": [123, 126], "sequenti": [123, 133], "flow": [123, 145], "implic": 123, "slightli": [123, 129, 133], "eager": [123, 146], "bfloat16": [124, 243, 283], "all_dtyp": 124, "all_numeric_dtyp": 124, "all_int_dtyp": 124, "all_float_dtyp": 124, "fall": [124, 128, 994, 1028, 1029, 1032, 1036], "invalid": [124, 127, 737, 800, 802, 983, 984, 987, 989, 992], "thirdli": 124, "native_float32": [124, 243, 314], "importantli": [124, 131, 134, 145], "arguabl": [124, 125], "compound": 124, "overflow": [124, 365, 379, 382, 950, 975, 978], "arr": [124, 125], "scalar": [124, 129, 134, 146, 172, 196, 199, 605, 658, 681, 685, 737, 803, 805], "settabl": [124, 125], "mx": [124, 125, 126, 994], "nd": [124, 125, 126, 129, 134, 994], "deleg": 124, "idx": [125, 131, 605, 611], "tpu": [125, 315, 337, 362], "aliv": [125, 315, 349, 353, 355, 605, 639, 657, 659], "amount": [125, 315, 361, 809, 810, 813, 815, 818, 820, 823], "memori": [125, 126, 144, 146, 315, 333, 354, 359, 361, 364, 724, 734, 994], "dual": 125, "thrown": [125, 146, 605, 649], "rare": [125, 146], "program": 126, "strictli": 126, "ration": 126, "speak": 126, "subtli": 126, "ensure_in_backend": [126, 605, 649], "x_nativ": 126, "val_n": 126, "is_ivy_arrai": [126, 131, 605], "assign": [126, 127, 131], "elif": 126, "irrespect": [126, 131, 243, 249, 252], "unspecifi": [126, 365, 553, 556, 557, 560, 737, 752, 754, 825, 869, 872], "predominantli": [126, 145], "presenc": 126, "altern": [126, 132], "_wrap_fn": 126, "maxim": [126, 129], "inner": [126, 131, 737, 752, 754, 761, 764, 885, 886, 887, 888], "third": [126, 146, 737, 788, 790, 930, 931], "leverag": 126, "equival": [126, 132, 134, 172, 173, 174, 365, 421, 424, 522, 525, 526, 529, 557, 560, 737, 769, 771, 778, 780, 785, 787, 803, 805], "input_arrai": 126, "clean": [127, 129, 130, 132], "flake8": 127, "undefin": 127, "yield": [127, 925, 929], "handler": [127, 128, 130, 134, 994], "liter": [127, 737, 803, 805], "carri": 127, "star": 127, "byte": 127, "notimpl": 127, "notimplementederror": 127, "unsuccess": 127, "exce": [127, 365, 535], "black": 127, "disobei": 127, "successfulli": 127, "accordingli": [127, 172, 207, 210, 365, 458, 461, 737, 803, 805, 925, 927, 930, 931, 932, 936, 938, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "comparison": 127, "sound": 128, "higher": [128, 129, 134, 146, 686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716], "fledg": [129, 130], "syntact": [129, 134], "clip_by_valu": [129, 134], "clamp": [129, 134], "fit": [129, 825, 851, 854], "construct": [129, 130, 133, 134, 825, 877, 880, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "power_seq": 129, "resid": [129, 133], "ml_framework": [129, 134, 172, 173, 174], "current_framework": [129, 134], "furthermor": 129, "concaten": [129, 132, 315, 344, 605, 632, 825, 831, 834, 994], "framework_handl": 129, "face": 129, "cprint": [129, 1041], "framework_stack": 129, "_determine_framework_from_arg": 129, "valueerror": [129, 825, 865, 868], "get_framework": 129, "neither": [129, 365, 379, 382, 536, 539, 686, 723], "illustr": [129, 145], "un": [129, 243, 290], "nn": [129, 134, 172, 207, 210, 994], "init_h": [129, 724, 734], "init_c": [129, 724, 734], "kernel": [129, 146, 724, 734], "recurrent_kernel": [129, 724, 734], "bia": [129, 133, 724, 733, 734, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026], "recurrent_bia": [129, 724, 734], "x_shape": 129, "batch_shap": [129, 131, 134, 605, 658, 724, 734, 735, 736, 737, 806, 808, 913, 914, 1016, 1025], "timestep": [129, 724, 734, 1016, 1025], "input_channel": [129, 133, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026], "x_flat": 129, "wi": 129, "wi_x": 129, "wii_x": 129, "wif_x": 129, "wig_x": 129, "wio_x": 129, "recurr": [129, 724, 734], "wh": 129, "lstm": [129, 724, 734, 1016], "ht": 129, "ct": 129, "hts_list": 129, "unrol": [129, 132, 724, 734], "wii_xt": 129, "wif_xt": 129, "wig_xt": 129, "wio_xt": 129, "zip": 129, "htm1": 129, "ctm1": 129, "wh_htm1": 129, "whi_htm1": 129, "whf_htm1": 129, "whg_htm1": 129, "who_htm1": 129, "ft": 129, "gt": 129, "ot": 129, "offici": 129, "reliabl": 129, "sacrific": 129, "hear": 129, "virtu": 129, "pure_ivi": 129, "reduce_mean": [129, 132, 133, 134, 994], "reduce_sum": [129, 994], "reduce_var": 129, "compile_graph": [129, 134], "pure_torch": 129, "cat": [129, 134], "backbon": [129, 132], "_layer": 129, "super": [129, 132, 133, 134], "random_unifrom": 129, "unclean": 129, "wx": 129, "temp": 129, "torchscript": 129, "fn": [129, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 243, 283, 284, 315, 324, 325, 605, 611, 682, 889, 890, 895, 896, 897, 899, 900, 901, 997, 999], "example_input": [129, 169, 170], "static_argnum": [129, 169, 170], "static_argnam": [129, 169, 170], "jit": [129, 146], "frontend": 130, "primit": [130, 146], "hierarch": [130, 132, 133], "arraywithlinalg": 131, "arraywithlog": 131, "arraywithmath": 131, "arraywithmeta": 131, "arraywithreduct": 131, "is_native_arrai": [131, 605], "_shape": 131, "_size": 131, "functool": 131, "mul": 131, "len": [131, 134, 172, 207, 210], "_dtype": 131, "_devic": 131, "_dev_str": 131, "_pre_repr": 131, "_post_repr": 131, "mt": 131, "answer": [131, 146], "consol": 131, "typeerror": 131, "immut": 131, "behav": 131, "claim": 131, "truli": 131, "_native_wrapp": 131, "attributeerror": 131, "genuin": 131, "some_method": 131, "similarli": [131, 172, 207, 210], "rewritten": 131, "__pow__": 131, "strang": 131, "enforc": 131, "notic": 131, "appear": [131, 825, 839, 842], "invers": [131, 145, 365, 371, 374, 375, 378, 384, 387, 388, 391, 393, 396, 397, 400, 401, 404, 737, 758, 760, 778, 780], "_wrap_method": 131, "func_wrapp": [131, 147, 148, 149, 150, 151, 152, 153, 154, 155], "__name__": 131, "non_wrapped_method": 131, "_method_wrap": 131, "native_arg": 131, "native_kwarg": 131, "inner_fn": 131, "whist": 131, "unwrap": 131, "transit": 131, "needlessli": 131, "randn": 131, "_unwrap_method": 131, "method_wrap": 131, "compartment": 131, "public": [131, 605, 621], "newshap": 131, "new_shap": 131, "tidi": 131, "shorter": 131, "crystal": 131, "ton": 132, "ado": [132, 133], "incred": [132, 146], "hash": 132, "soup": 132, "walk": [132, 133], "dct": 132, "cnt": 132, "combo": [132, 994, 1000], "hold": [132, 605, 661, 662], "1000": [132, 365, 578, 581], "uda": 132, "3333": 132, "6667": 132, "178": 132, "new_weight": 132, "0600": 132, "3100": 132, "2400": 132, "6900": 132, "delimit": 132, "autocomplet": 132, "midwai": 132, "agent": 132, "total_spe": 132, "total_height": 132, "total_width": 132, "ag": 132, "tot": 132, "total_": 132, "total_h": 132, "batch_siz": [132, 724, 725, 726, 727, 728, 729, 730, 731, 913, 914], "dir": 132, "adam": [132, 133, 134, 686, 688, 691, 693, 695, 706, 708, 994, 1032, 1034], "cnt0": 132, "cnt1": 132, "diff_0": 132, "diff_1": 132, "config0": 132, "config1": 132, "Not": [132, 133, 146, 171], "helper": 132, "decod": 132, "l0": 132, "l1": [132, 737, 803, 805], "depth": [132, 133, 134, 145, 315, 339, 343, 347, 605, 643, 658, 889, 901, 1028, 1029], "clearer": 132, "truncat": 132, "decoder__l0": 132, "decoder__l1": 132, "encoder__l0": 132, "encoder__l1": 132, "height": 132, "l0__b": 132, "l0__w": 132, "l1__b": 132, "l1__w": 132, "printabl": 132, "obviou": 132, "foresight": 132, "untidili": 132, "update_ag": 132, "normalize_img": 132, "img": 132, "img_max": 132, "reduce_max": [132, 994], "img_min": 132, "reduce_min": [132, 994], "img_rang": 132, "agent_posit": 132, "agent_veloc": 132, "agent_cam_front_rgb": 132, "agent_cam_front_depth": 132, "agent_cam_rear_rgb": 132, "agent_cam_rear_depth": 132, "agent_cam_lidar": 132, "normal": [132, 825, 869, 872, 907, 908, 911, 913, 918, 1030, 1031], "cleaner": 132, "camera": 132, "front_rgb": 132, "front_depth": 132, "rear_rgb": 132, "rear_depth": 132, "lidar": 132, "rgb": 132, "rear": 132, "veloc": 132, "cam": 132, "cam_max": 132, "cam_min": 132, "cam_rang": 132, "Of": 132, "ideal": 132, "perman": 132, "afterward": 132, "thread": 132, "incorpor": 132, "pretti": 132, "straightforward": 132, "dataload": [132, 144, 994], "_cnt": 132, "img_": 132, "_dataset_s": 132, "_batch_siz": 132, "_count": [132, 133], "__next__": 132, "filenam": 132, "img_fnam": 132, "fname": 132, "loaded_img": 132, "cv2": 132, "imread": 132, "loader": [132, 146], "batch_slic": 132, "model": [132, 133, 994], "mymodel": [132, 994], "linear0": [132, 133, 994], "linear1": [132, 133, 994], "x_in": [132, 133, 134, 994], "loss_fn": [132, 133, 134, 994], "0145": 132, "grad_fn": 132, "addbackward0": 132, "_create_vari": 133, "output_channel": [133, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026], "with_bia": [133, 1016, 1026], "_input_channel": 133, "_output_channel": 133, "_w_shape": 133, "_b_shape": 133, "_with_bia": 133, "8979": 133, "3198": 133, "0196": 133, "3126": 133, "3717": 133, "9687": 133, "6958": 133, "5122": 133, "3902": 133, "8800": 133, "5613": 133, "1982": 133, "nightmar": 133, "overcom": 133, "fc": 133, "9563": 133, "v0": 133, "v1": 133, "6440": 133, "key0": 133, "1823": 133, "8075": 133, "linear3": 133, "v2": 133, "2346": 133, "counter": 133, "hidden": [133, 724, 734, 1016, 1025], "fed": [133, 315, 359], "1300": 133, "decoupl": 133, "scheme": 133, "weight_initi": [133, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026], "glorotuniform": [133, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026], "bias_initi": [133, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026], "_w_init": 133, "_b_init": 133, "create_vari": [133, 1007], "var_shap": [133, 1007], "fan_out": [133, 1007], "fan_in": [133, 1007], "fan_mod": [133, 1007], "fan_sum": 133, "slight": 133, "misnom": 133, "saw": 133, "vanilla": [133, 885, 887], "descent": [133, 686, 698, 700, 1032, 1037], "lar": [133, 686, 706, 708, 710, 712, 1032], "lamb": [133, 686, 706, 708, 1032], "compile_on_next_step": [133, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037], "_beta1": 133, "_beta2": 133, "_epsilon": 133, "_mw": 133, "_vw": 133, "_first_pass": 133, "_should_compil": 133, "_step": [133, 1032, 1036], "new_v": 133, "_lr": 133, "isinst": [133, 134, 605, 675], "_inplac": 133, "_stop_gradi": 133, "set_stat": [133, 1032, 1033, 1034, 1035, 1036, 1037], "pre": [134, 146, 315], "captur": 134, "sparse_funct": 134, "num_class": [134, 913, 914], "num_dim": 134, "new_axi": 134, "_linear": 134, "to_backend": 134, "jax_graph": 134, "learnabl": [134, 907, 908, 911, 1030, 1031], "to_ivy_modul": [134, 1005], "thinli": 134, "whilst": 134, "to_haiku_modul": 134, "hk": 134, "loss_fn_t": 134, "transform": [134, 145, 724, 732, 733], "without_apply_rng": 134, "rng": 134, "prngkei": 134, "init": 134, "update_rul": 134, "tree_multimap": 134, "vision": [144, 994], "robot": [144, 994], "focus": 145, "field": [145, 737, 752, 754, 781, 783, 788, 790, 930, 931, 932, 936], "perfect": 145, "3d": [145, 1016, 1021, 1022], "differenti": 145, "demo": [145, 994], "orient": 145, "pose": 145, "euler": [145, 171], "quaternion": 145, "rotat": 145, "matric": [145, 172, 207, 210, 225, 229, 230, 234, 724, 733, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 768, 769, 771, 772, 774, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799], "angl": [145, 365, 397, 400, 437, 440, 574, 577, 596, 600], "ivy_mech": 145, "target_facing_rotation_matrix": 145, "polar_to_cartesian_coord": 145, "ordin": [145, 737, 785, 787], "warp": 145, "optic": 145, "voxel": 145, "ivy_vis": 145, "coords_to_voxel_grid": 145, "render_pixel_coord": 145, "neural": [145, 724, 994, 1002, 1016], "radianc": 145, "nerf": 145, "trajectori": 145, "motion": 145, "plan": [145, 994], "mobil": 145, "ivy_robot": 145, "sample_spline_path": 145, "rigidmobil": 145, "sample_bodi": 145, "drone": 145, "sample_link": 145, "openai": 145, "swimmer": 145, "cumul": [145, 605, 623, 624], "reward": 145, "supervis": 145, "reinforc": 145, "door": [145, 146], "intersect": 145, "cartpol": 145, "mountain_car": 145, "pendulum": 145, "reacher": 145, "condit": [145, 169, 170, 889, 899, 900, 925, 929], "learnt": 145, "ture": 145, "ntm": 145, "egospher": 145, "spatial": 145, "esm": 145, "ivy_memori": 145, "egocentr": 145, "room": 145, "inspir": 145, "doubt": 146, "grate": 146, "probe": 146, "undergo": 146, "remark": 146, "surpris": 146, "backward": [146, 365, 557, 560, 737, 800, 802, 983, 984, 987, 989, 992], "lock": 146, "contunu": 146, "minor": 146, "xla": 146, "buffer": 146, "gold": 146, "dex": 146, "lax": 146, "scan": 146, "tricki": 146, "predictor": 146, "tight": 146, "driver": 146, "schedul": 146, "algorithm": [146, 724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "dispatch": 146, "Will": 146, "ast": 146, "dynamic": 146, "cond": 146, "jacobian": 146, "checkpoint": 146, "autodiff": 146, "shine": 146, "merci": 146, "superset": 146, "cluster": 146, "compet": 146, "paradigm": 146, "parallelis": [146, 315, 324, 325], "spmd": 146, "mixtur": [146, 686, 688, 691], "expert": 146, "sophist": 146, "depart": 146, "routin": 146, "hundr": 146, "thousand": 146, "deepli": [146, 889, 891], "broadli": 146, "heavili": 146, "supplementari": 146, "Is": 146, "reusabl": 146, "fanci": 146, "fusion": 146, "lose": 146, "vmap": 146, "pmap": 146, "overhead": 146, "ineffici": 146, "eventu": 146, "supplement": 146, "backdoor": 146, "callback": 146, "record": 146, "metric": 146, "somewhat": 146, "outsourc": 146, "inputs_to_ivy_arrai": 147, "gaussian": [157, 158], "leaki": [157, 158, 159], "rectifi": [157, 159, 160], "slope": [157, 159], "39": [157, 159, 365, 388, 391, 454, 457, 686, 688, 691, 737, 775, 777, 950, 951, 954], "85": [157, 159, 365, 425, 428], "48": [157, 159, 365, 578, 581, 686, 688, 691, 737, 775, 777, 950, 951, 954], "88": [157, 159, 365, 425, 428, 737, 775, 777, 950, 951, 954], "269": [157, 161], "731": [157, 161], "214": [157, 161], "978": [157, 161], "422": [157, 162], "155": [157, 162], "0768": [157, 162], "231": [157, 162], "693": [157, 162, 365, 388, 391, 809, 820, 823], "49": [157, 162, 365, 578, 581, 950, 951, 954], "147": [157, 162], "363": [157, 162], "3461": [157, 163, 166], "6491": [157, 163, 166], "535": [157, 163, 166], "hyperbol": [157, 168, 365, 375, 378, 388, 391, 401, 404, 437, 440, 574, 577, 596, 600], "55": [157, 168, 724, 730, 737, 775, 777, 950, 951, 954], "501": [157, 168], "array_method": [163, 164, 176, 177, 182, 183, 190, 191, 196, 197, 207, 208, 212, 213, 220, 221, 225, 227, 230, 232, 238, 240, 249, 250, 254, 255, 259, 260, 264, 265, 273, 274, 278, 279, 285, 286, 291, 292, 296, 297, 302, 303, 366, 367, 371, 372, 375, 376, 379, 380, 384, 385, 388, 389, 393, 394, 397, 398, 401, 402, 405, 406, 409, 410, 413, 414, 417, 418, 421, 422, 425, 426, 429, 430, 433, 434, 437, 438, 441, 442, 446, 447, 450, 451, 454, 455, 458, 459, 462, 463, 466, 467, 470, 471, 474, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 522, 523, 526, 527, 530, 531, 536, 537, 541, 542, 545, 546, 549, 550, 553, 554, 557, 558, 561, 562, 565, 566, 570, 571, 574, 575, 578, 579, 582, 583, 586, 588, 591, 593, 596, 598, 601, 602, 606, 607, 634, 635, 676, 678, 688, 689, 738, 739, 743, 744, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 765, 766, 769, 770, 772, 773, 775, 776, 778, 779, 781, 782, 785, 786, 788, 789, 791, 792, 794, 795, 797, 798, 800, 801, 803, 804, 806, 807, 810, 811, 815, 816, 820, 821, 826, 827, 831, 832, 835, 836, 839, 840, 843, 844, 847, 848, 851, 852, 855, 856, 859, 860, 865, 866, 869, 870, 873, 874, 877, 878, 881, 882, 908, 909, 932, 934, 940, 941, 945, 946, 951, 952, 955, 956, 959, 960, 963, 964, 967, 968, 971, 972, 975, 976, 979, 980, 984, 985, 989, 990], "container_method": [163, 165, 167, 173, 175, 176, 178, 180, 182, 184, 186, 187, 189, 190, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 235, 236, 238, 239, 241, 249, 251, 253, 254, 256, 258, 259, 261, 263, 264, 266, 268, 273, 275, 278, 280, 282, 285, 287, 289, 291, 293, 295, 296, 298, 300, 302, 304, 306, 366, 368, 370, 371, 373, 375, 377, 379, 381, 383, 384, 386, 388, 390, 392, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 576, 578, 580, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 603, 606, 608, 610, 618, 619, 634, 636, 638, 676, 677, 679, 688, 690, 692, 693, 694, 696, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 738, 740, 742, 761, 763, 810, 812, 814, 815, 817, 819, 820, 822, 824, 826, 828, 830, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 908, 910, 912, 915, 917, 919, 920, 922, 932, 933, 935, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 984, 986, 988, 989, 991, 993], "faster": [169, 170], "invoc": [169, 170], "718281828459045": 171, "newaxi": 171, "alia": 171, "pi": 171, "141592653589793": 171, "mathemat": [171, 365, 379, 382, 397, 400, 458, 461, 536, 539, 737, 803, 805], "half": [172, 173, 174, 913, 915, 916, 919, 921], "chosen": [172, 173, 174, 365, 397, 400, 925, 929], "distanc": [172, 173, 174], "adjac": [172, 173, 174], "creation_funct": [172, 173, 174, 176, 179, 181, 182, 185, 187, 188, 190, 193, 195, 196, 199, 201, 202, 217, 218, 220, 223, 225, 229, 230, 234, 235, 237, 238, 242], "interpret": [172, 176, 179, 212, 215], "nativeshap": [172, 181, 195, 217, 218, 235, 237, 605, 662, 668, 670, 724, 726, 728, 730, 825, 855, 858, 913, 915, 916, 918, 919, 921], "uniniti": [172, 181, 182, 185], "elsewher": [172, 187, 188, 925, 929], "row": [172, 187, 188, 737, 785, 787, 788, 790, 913, 914, 925, 928], "column": [172, 187, 188, 737, 752, 754, 781, 783, 785, 787, 788, 790], "__dlpack__": [172, 190, 193, 315, 360], "interchang": [172, 190, 193, 825, 873, 876], "coordin": [172, 207, 210, 365, 397, 400], "cartesian": [172, 207, 210], "ij": [172, 207, 210, 950, 951, 954], "rank": [172, 207, 210, 605, 684, 737, 743, 745, 769, 771, 781, 783, 785, 787, 797, 799, 800, 802, 803, 805, 825, 835, 838, 839, 842, 869, 872, 881, 884, 925, 928, 983, 984, 987, 989, 992], "ni": [172, 207, 210], "xi": [172, 207, 210], "n1": [172, 207, 210], "n2": [172, 207, 210], "n3": [172, 207, 210], "xv": [172, 207, 210], "yv": [172, 207, 210], "triangular": [172, 225, 229, 230, 234, 737, 738, 741, 781, 783], "innermost": [172, 225, 229, 230, 234, 737, 738, 741, 746, 748, 749, 751, 752, 754, 755, 757, 758, 760, 769, 771, 772, 774, 778, 780, 781, 783, 785, 787, 788, 790, 791, 793, 797, 799], "mxn": [172, 225, 229, 230, 234, 737, 749, 751, 769, 771, 772, 774, 778, 780, 781, 783, 791, 793, 797, 799], "y1": [172, 238, 242], "y2": [172, 238, 242], "x3": [172, 238, 242, 315, 353], "y3": [172, 238, 242], "defaultdtyp": [243, 244], "defaultfloatdtyp": [243, 245], "float_dtyp": [243, 271, 308], "defaultintdtyp": [243, 246], "incompat": [243, 259, 262], "occur": [243, 264, 267, 925, 926, 927, 930, 931, 932, 936, 938], "data_type_funct": [243, 264, 267], "floatdtyp": [243, 271], "int_dtyp": [243, 272, 309], "intdtyp": [243, 272], "followng": [243, 278, 281], "occupi": [243, 278, 281, 285, 288, 605, 661, 662], "ep": [243, 278, 281, 737, 769, 771, 778, 780], "smallest_norm": [243, 278, 281], "encapsul": [243, 285, 288], "type1": [243, 301], "type2": [243, 301], "ret1": [243, 310], "ret2": [243, 310], "native_bool": [243, 314], "native_float16": [243, 314], "native_float64": [243, 314], "native_int8": [243, 314], "native_int16": [243, 314], "native_int32": [243, 314], "native_int64": [243, 314], "native_uint8": [243, 314], "native_uint64": [243, 314], "noinspect": [244, 245, 246, 316, 687], "pyshadowingnam": [244, 245, 246, 316, 687], "defaultdevic": [315, 316], "__enter__": 315, "_dev": 315, "__exit__": 315, "exc_typ": 315, "exc_val": 315, "exc_tb": 315, "exit": 315, "devcloneditem": [315, 337], "multidevitem": [315, 317, 320], "devclonedit": 315, "multidevit": [315, 318, 321, 324, 325, 329], "devclonednest": 315, "multidevnest": [315, 319, 322], "devdistitem": 315, "devdistit": 315, "devdistnest": 315, "devmanag": [315, 323], "dev_mapp": 315, "da_dim_s": 315, "safety_factor": 315, "min_dev_dim_s": 315, "max_dev_dim_step_ratio": 315, "min_unit_dev_tune_step": 315, "min_sf_tune_step": 315, "starting_split_factor": 315, "max_split_factor_step_s": 315, "tune_dev_alloc": 315, "tune_dev_split": 315, "mapper": [315, 324, 325], "receivess": 315, "ratio": [315, 686, 706, 708, 1032, 1034], "safe": [315, 324], "oom": 315, "tune": 315, "da_tune_step": 315, "ds_tune_step": 315, "to_clon": 315, "to_distribut": 315, "multidevic": [315, 324], "parallel": [315, 324, 325], "mutlidevic": [315, 324], "repeated_config_check": 315, "tune_step": 315, "devmapp": [315, 325], "ret_fn": [315, 324, 325], "queue_class": [315, 324, 325], "worker_class": [315, 324, 325], "worker": [315, 324, 325], "used_dev": [315, 324], "sf": [315, 324], "devmappermultiproc": 315, "multidev": [315, 326, 327, 328, 347], "profil": 315, "save_dir": [315, 330], "deviceic": [315, 336], "spread": [315, 347], "139740789224448": [315, 349], "physic": [315, 351], "x4": [315, 353], "process_specif": [315, 354, 364], "percentag": [315, 354], "ram": [315, 354, 361, 364], "attr_onli": [315, 355], "chunk": [315, 357, 358, 359], "max_chunk_s": [315, 359], "chunk_siz": [315, 359], "input_ax": [315, 359], "output_ax": [315, 359], "feed": [315, 359], "fist": [315, 359], "stream": [315, 360], "caveat": [315, 360], "portabl": [315, 360, 994], "gb": [315, 361, 364], "reset": [315, 363, 605, 683], "magnitud": [365, 366, 369, 379, 382, 536, 539, 737, 788, 790, 791, 793], "princip": [365, 371, 374, 384, 387, 393, 396], "cosin": [365, 371, 374, 375, 378, 433, 436, 437, 440], "x1_i": [365, 379, 382, 397, 400, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 586, 590], "x2_i": [365, 379, 382, 397, 400, 405, 408, 413, 416, 417, 420, 421, 424, 425, 428, 441, 444, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 586, 590], "finit": [365, 379, 382, 397, 400, 478, 481, 536, 539, 553, 556, 557, 560], "nor": [365, 379, 382, 536, 539, 686, 723], "nearest": [365, 379, 382, 536, 539, 561, 564], "2019": [365, 379, 382, 458, 461, 536, 539], "commut": [365, 379, 382], "sine": [365, 384, 387, 388, 391, 570, 573, 574, 577], "57": [365, 384, 387, 388, 391, 425, 428, 437, 440], "524": [365, 384, 387], "644": [365, 384, 387], "201": [365, 384, 387, 561, 564], "305": [365, 384, 387], "412": [365, 384, 387], "44": [365, 388, 391, 561, 564, 578, 581, 582, 585, 737, 775, 777, 925, 929, 950, 951, 954], "809": [365, 388, 391], "569": [365, 388, 391], "733": [365, 388, 391], "68": [365, 388, 391, 907, 908, 911], "99": [365, 388, 391, 950, 951, 954], "quotient": [365, 397, 400], "notat": [365, 397, 400, 950, 951, 954], "denot": [365, 397, 400, 686, 723], "pair": [365, 397, 400, 724, 736, 737, 743, 745], "quadrant": [365, 397, 400], "3\u03c0": [365, 397, 400], "549": [365, 401, 404], "bitwis": [365, 405, 408, 417, 420, 425, 428, 530, 533], "AND": [365, 405, 408, 518, 521, 983, 984, 987], "binari": [365, 405, 408, 417, 420, 425, 428, 530, 533, 809, 810, 813], "invert": [365, 409, 412], "arithmet": [365, 421, 424, 950, 959, 962], "propag": [365, 421, 424, 950, 955, 958, 959, 962, 963, 966, 971, 974, 975, 978, 979, 982], "thu": [365, 421, 424, 553, 556, 557, 560, 737, 752, 754], "lh": [365, 421, 424], "rh": [365, 421, 424], "xor": [365, 425, 428, 530, 533], "78": [365, 425, 428, 565, 568, 737, 775, 777, 950, 951, 954], "91": [365, 425, 428, 737, 775, 777, 950, 951, 954], "23": [365, 425, 428, 565, 568, 724, 730, 737, 749, 751, 925, 929], "66": [365, 425, 428, 737, 775, 777, 950, 951, 954], "77": [365, 425, 428, 737, 775, 777, 950, 951, 954], "79": [365, 425, 428], "98": [365, 425, 428, 737, 775, 777, 925, 929, 950, 951, 954], "26": [365, 425, 428, 686, 688, 691, 724, 731, 737, 749, 751, 775, 777, 794, 796, 950, 951, 954], "34": [365, 425, 428, 578, 581], "51": [365, 425, 428], "27": [365, 425, 428, 437, 440, 578, 581, 724, 736, 737, 775, 777, 950, 951, 954], "74": [365, 425, 428], "59": [365, 425, 428], "416": [365, 433, 436], "122": [365, 437, 440], "368": [365, 437, 440], "670": [365, 437, 440], "202": [365, 437, 440, 561, 564], "548": [365, 437, 440], "1490": [365, 437, 440], "dividend": [365, 441, 444, 557, 560], "divisor": [365, 441, 444, 557, 560, 686, 688, 691, 693, 695, 706, 708, 950, 971, 974, 979, 982, 1032, 1033, 1034], "gauss": [365, 450, 453], "exponenti": [365, 450, 453, 454, 457, 514, 517, 553, 556], "logarithm": [365, 454, 457, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 737, 784], "72": [365, 454, 457, 686, 688, 691, 737, 775, 777, 950, 951, 954], "accur": [365, 458, 461], "fdlibm": [365, 458, 461], "compliant": [365, 458, 461, 522, 525, 526, 529, 950, 955, 958, 959, 962, 963, 966], "greatest": [365, 462, 465, 466, 469], "out_i": [365, 478, 481, 482, 485, 486, 489], "threshold": [365, 534, 535], "y_i": [365, 541, 544], "expon": [365, 553, 556, 605, 672], "versu": [365, 553, 556], "odd": [365, 553, 556], "modulu": [365, 557, 560], "primarili": [365, 557, 560], "5654": [365, 561, 564], "034": [365, 561, 564], "433": [365, 561, 564], "343": [365, 561, 564], "30": [365, 561, 564, 737, 775, 777, 950, 951, 954, 1007, 1013], "81": [365, 561, 564, 582, 585, 950, 951, 954], "527": [365, 561, 564], "301": [365, 561, 564], "124": [365, 565, 568], "46": [365, 565, 568], "indistinguish": [365, 578, 581], "infinit": [365, 578, 581], "83": [365, 578, 581], "32455532": [365, 578, 581], "89897949": [365, 578, 581], "50": [365, 578, 581, 737, 775, 777, 925, 928, 950, 951, 954], "31": [365, 578, 581], "169": [365, 578, 581], "47": [365, 578, 581], "93": [365, 578, 581], "35": [365, 578, 581, 724, 736, 737, 743, 745, 925, 929, 950, 951, 954], "09": [365, 582, 585, 724, 736], "546": [365, 591, 595], "842": [365, 591, 595], "916": [365, 591, 595, 809, 810, 813], "996": [365, 591, 595], "328": [365, 591, 595], "real": [365, 596, 600], "462": [365, 596, 600], "604": [365, 596, 600], "984": [365, 596, 600], "997": [365, 596, 600], "decim": [365, 601, 604], "inspect": [605, 611, 998, 999], "downscal": [605, 617, 618, 620], "60": [605, 623, 737, 775, 777, 950, 951, 954], "default_v": [605, 626], "catch_except": [605, 626], "rev": [605, 626], "with_cal": [605, 626], "arrang": [605, 627], "mod": [605, 631], "max_freq": [605, 632], "num_band": [605, 632], "pad": [605, 632, 724, 725, 726, 727, 728, 729, 730, 731, 825, 835, 838, 881, 884, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "fourier": [605, 632], "band": [605, 632], "linearli": [605, 632, 737, 785, 787], "oppos": [605, 632], "geometr": [605, 632], "seen_set": [605, 643], "local_set": [605, 643], "decrement": [605, 647], "is_arrai": 605, "allow_dupl": [605, 655], "forkserv": [605, 656], "spawn": [605, 656], "hot": [605, 658], "scatter": [605, 658, 661, 662], "overrid": [605, 658], "tmp_dr": [605, 667], "temporari": [605, 667], "min_denomin": [605, 671], "stabil": [605, 671, 672, 939, 940, 943, 945, 948], "_min_denomin": [605, 671], "min_bas": [605, 672], "_min_bas": [605, 672, 907, 908, 911, 1030, 1031], "100000023841858": [605, 675], "200000047683716": [605, 675], "299999952316284": [605, 675], "400000095367432": [605, 675], "599999904632568": [605, 675], "gradienttrack": [686, 687], "delta": [686, 688, 691], "cost": [686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 885, 886, 887, 888], "ws": [686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716], "en": [686, 688, 691, 693, 695], "wikipedia": [686, 688, 691, 693, 695], "wiki": [686, 688, 691, 693, 695], "stochastic_gradient_desc": [686, 688, 691, 693, 695], "dc": [686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716], "dw": [686, 688, 691, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716], "averag": [686, 688, 691, 693, 695, 706, 708, 885, 886, 887], "forget": [686, 688, 691, 693, 695, 706, 708, 1032, 1033, 1034], "004": [686, 688, 691], "009": [686, 688, 691], "86": [686, 688, 691], "28": [686, 688, 691, 724, 727, 730, 731, 737, 775, 777, 950, 951, 954], "0125": [686, 688, 691], "601": [686, 688, 691], "025": [686, 688, 691], "992": [686, 688, 691], "209": [686, 688, 691, 930, 931], "271": [686, 688, 691], "0717": [686, 688, 691], "142": [686, 688, 691], "182": [686, 688, 691], "624": [686, 688, 691, 913, 919, 921], "744": [686, 688, 691], "626": [686, 688, 691], "65": [686, 688, 691, 737, 775, 777, 950, 951, 954], "024": [686, 688, 691], "096": [686, 688, 691], "216": [686, 688, 691], "384": [686, 688, 691], "rate": [686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716, 885, 886, 887, 888, 1016, 1027, 1032, 1033, 1034, 1035, 1036, 1037], "ws_new": [686, 693, 695, 698, 700, 706, 708, 710, 712, 714, 716], "retain": [686, 697], "trust": [686, 706, 708, 1032, 1034], "decai": [686, 706, 708, 710, 712, 1032, 1034, 1035], "layerwis": [686, 710, 712, 1032, 1035], "with_grads_stack": [686, 723], "stride": [724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "data_format": [724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "nwc": [724, 725, 726, 1016, 1017, 1018], "dilat": [724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "convolut": [724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "d_in": [724, 725, 726, 727, 728, 729, 730], "d_out": [724, 725, 726, 727, 728, 729, 730], "slide": [724, 725, 726, 727, 728, 729, 730, 731, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "ncw": [724, 725, 726, 1016, 1017, 1018], "wio": [724, 725], "output_shap": [724, 726, 728, 730, 1016, 1018, 1020, 1022], "nhwc": [724, 727, 728, 731, 1016, 1019, 1020, 1023], "fh": [724, 727, 728, 729, 730, 731], "nchw": [724, 727, 728, 731, 1016, 1019, 1020, 1023], "hwio": [724, 727], "unequ": [724, 727], "unsqueez": [724, 727, 731], "ndhwc": [724, 729, 730, 1016, 1021, 1022], "volum": [724, 729], "fd": [724, 729, 730], "ncdhw": [724, 729, 730, 1016, 1021, 1022], "dhwio": [724, 729], "258": [724, 730], "128": [724, 730, 737, 775, 777], "depthwis": [724, 731, 1016, 1023], "333": [724, 731], "inp": [724, 731], "prob": [724, 732, 913, 914, 1016, 1024], "randomli": [724, 732, 1016, 1024], "bernoulli": [724, 732], "out_featur": [724, 732, 733], "incom": [724, 733], "outer_batch_shap": [724, 733], "inner_batch_shap": [724, 733], "in_featur": [724, 733], "cell": [724, 734, 1016, 1025], "num_queri": [724, 735, 736], "x_feat_dim": [724, 735], "num_kei": [724, 735, 736], "cont_feat_dim": [724, 735], "numhead": [724, 735], "feat_dim": [724, 735, 736], "out_feat_dim": [724, 735], "score": [724, 736], "03": [724, 736, 907, 908, 911], "decomposit": [737, 738, 741, 781, 783, 788, 790], "symmetr": [737, 738, 741, 752, 754, 755, 757, 806, 808], "u": [737, 738, 741, 788, 790], "vif": [737, 743, 745], "92": [737, 746, 748], "293": [737, 746, 748], "46997": [737, 746, 748], "eigendecomposit": [737, 752, 754], "qlq\u1d40": [737, 752, 754], "orthogon": [737, 752, 754], "eig": [737, 752, 754], "eigenvalu": [737, 752, 754, 755, 757], "eigenvector": [737, 752, 754], "prepend": [737, 761, 764], "singular": [737, 769, 771, 778, 780, 788, 790, 791, 793], "toler": [737, 769, 771, 778, 780], "largest_singular_valu": [737, 769, 771, 778, 780], "array_lik": [737, 775, 777], "84": [737, 775, 777, 950, 951, 954], "105": [737, 775, 777, 809, 810, 813], "112": [737, 775, 777, 950, 951, 954], "104": [737, 775, 777, 950, 951, 954], "120": [737, 775, 777], "moor": [737, 778, 780], "penros": [737, 778, 780], "pseudo": [737, 778, 780], "orthonorm": [737, 781, 783, 788, 790], "2d": [737, 784, 1016, 1019, 1020, 1023], "logdet": [737, 784], "coeffici": [737, 785, 787], "usvh": [737, 788, 790], "vh": [737, 788, 790], "hermitian": [737, 788, 790], "et": [737, 788, 790], "cetera": [737, 788, 790], "adjoint": [737, 788, 790], "reconstruct": [737, 788, 790, 930, 931, 937], "reconstructed_x": [737, 788, 790], "contract": [737, 794, 796, 950, 951, 954], "doubl": [737, 794, 796], "singleton": [737, 803, 805, 825, 865, 868, 925, 927, 950, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 982, 983, 984, 987, 989, 992], "manhattan": [737, 803, 805], "l2": [737, 803, 805], "euclidean": [737, 803, 805], "mathbf": [737, 806, 808], "mathbb": [737, 806, 808], "skew": [737, 806, 808], "entropi": [809, 810, 813, 815, 818, 820, 823], "predict": [809, 810, 813, 815, 818, 820, 823], "smooth": [809, 810, 813, 815, 818, 820, 823], "discret": [809, 815, 818], "35667497": [809, 815, 818], "spars": [809, 820, 823], "logit": [809, 820, 823], "793291": [809, 820, 823], "512926": [809, 820, 823], "before_1": [825, 835, 838, 881, 884], "after_1": [825, 835, 838, 881, 884], "before_n": [825, 835, 838, 881, 884], "after_n": [825, 835, 838, 881, 884], "insert": [825, 839, 842, 889, 894, 925, 926], "manipulation_funct": [825, 839, 842], "reorder": [825, 843, 846], "permut": [825, 847, 850, 873, 876], "repetit": [825, 851, 854, 877, 880], "restor": [825, 859, 862], "famili": [825, 869, 872], "intxx": [825, 869, 872], "floatxx": [825, 869, 872], "fomaml_step": 885, "inner_cost_fn": [885, 886, 887], "outer_cost_fn": [885, 886, 887], "inner_grad_step": [885, 886, 887, 888], "inner_learning_r": [885, 886, 887, 888], "inner_optimization_step": [885, 886, 887, 888], "inner_batch_fn": [885, 886, 887], "outer_batch_fn": [885, 886, 887], "average_across_step": [885, 886, 887], "inner_v": [885, 886, 887], "keep_inner_v": [885, 886, 887], "outer_v": [885, 886, 887], "keep_outer_v": [885, 886, 887], "return_inner_v": [885, 886, 887, 888], "num_task": [885, 886, 887, 888], "maml": [885, 886, 887], "recev": [885, 886, 887], "0x7f7b4003b940": [885, 886, 887, 888], "maml_step": 885, "rece": [885, 887], "reptile_step": 885, "cost_fn": [885, 888], "reptil": [885, 888], "receivng": [885, 888], "all_nested_indic": 889, "include_nest": [889, 890], "_index": [889, 890, 900], "_base": [889, 890, 899, 900], "copy_nest": 889, "to_mut": [889, 891, 901], "mutabl": [889, 891, 901], "insert_into_nest_at_index": 889, "insert_into_nest_at_indic": 889, "map_nest_at_index": 889, "map_nest_at_indic": 889, "multi_index_nest": 889, "nested_ani": 889, "check_nest": [889, 899, 900], "conditon": [889, 899, 900], "nested_indices_wher": 889, "stop_after_n_found": [889, 900], "_depth": [889, 901], "_tuple_check_fn": [889, 901], "_list_check_fn": [889, 901], "_dict_check_fn": [889, 901], "nested_multi_map": 889, "nest0": [889, 902], "ivy_arrai": [889, 902], "funciton": [889, 902], "prune_nest_at_index": 889, "prune_nest_at_indic": 889, "set_nest_at_index": 889, "set_nest_at_indic": 889, "mini": [907, 908, 911, 1030, 1031], "gamma": [907, 908, 911], "beta": [907, 908, 911], "894": [907, 908, 911], "772": [907, 908, 911], "796": [907, 908, 911], "population_s": [913, 914], "num_sampl": [913, 914], "home": [913, 914, 918], "uniformli": [913, 915, 916, 919, 921], "highest": [913, 915, 916], "parameter": [913, 918, 919, 921], "6444774682897879": [913, 918], "811": [913, 918], "508": [913, 918], "564": [913, 918], "7268672": [913, 918], "968": [913, 918], "175": [913, 918, 930, 931], "064": [913, 918], "40935726": [913, 918], "556": [913, 918], "26431865": [913, 919, 921], "475": [913, 919, 921], "878": [913, 919, 921], "861": [913, 919, 921], "89150229": [913, 919, 921], "89629126": [913, 919, 921], "94198485": [913, 919, 921], "91405606": [913, 919, 921], "72848724": [913, 919, 921], "7550739": [913, 919, 921], "00109": [913, 919, 921], "occurr": [925, 926, 927, 930, 931], "43": [925, 929], "x_j": [930, 931, 932, 936, 938], "impli": [930, 931, 932, 936, 938], "inverse_indic": [930, 931, 937], "aggreg": [930, 931], "fourth": [930, 931], "607": [930, 931], "735": [930, 931], "667": [930, 931], "381": [930, 931], "857": [930, 931], "0396": [930, 931], "166": [930, 931], "58": [930, 931], "828": [930, 931], "144": [930, 931], "40501155": [930, 931], "77361575": [930, 931], "97776199": [930, 931], "36831157": [930, 931], "89148434": [930, 931], "9512272": [930, 931], "67542176": [930, 931], "41985657": [930, 931], "23478023": [930, 931], "1141": [930, 931], "8101": [930, 931], "9298": [930, 931], "8460": [930, 931], "2119": [930, 931], "3519": [930, 931], "6252": [930, 931], "4033": [930, 931], "7443": [930, 931], "2577": [930, 931], "3707": [930, 931], "0545": [930, 931], "3238": [930, 931], "5944": [930, 931], "0775": [930, 931], "4327": [930, 931], "176": [930, 931], "889": [930, 931], "763": [930, 931], "071": [930, 931], "262": [930, 931], "456": [930, 931], "114": [930, 931], "349": [930, 931], "615": [930, 931], "594": [930, 931], "335": [930, 931], "212": [930, 931], "457": [930, 931], "827": [930, 931], "set_funct": [930, 932, 936], "ascend": [939, 940, 943], "einstein": [950, 951, 954], "summat": [950, 951, 954], "seq": [950, 951, 954], "jk": [950, 951, 954], "ik": [950, 951, 954], "126": [950, 951, 954], "510": [950, 951, 954], "108": [950, 951, 954], "117": [950, 951, 954], "sentinel": [950, 955, 958, 963, 966], "unsign": [950, 967, 970, 975, 978], "degre": [950, 971, 974, 979, 982], "bessel": [950, 971, 974, 979, 982], "8164966": [950, 971, 974], "varianc": [950, 979, 982], "unbias": [950, 979, 982], "simplicit": [983, 984, 987], "grow": 994, "ai": 994, "got": 994, "colab": 994, "sharp": 994, "weekli": 994, "immedi": 994, "favorit": 994, "jax_concat": 994, "tf_concat": 994, "np_concat": 994, "mx_concat": 994, "torch_concat": 994, "prompt": 994, "get_devic": 994, "reduce_prod": 994, "gradient_imag": 994, "linalg": 994, "bilinear_resampl": 994, "stack_imag": 994, "neural_net": 994, "ecosystem": [994, 1000], "popular": [994, 1000], "acceler": 994, "articl": 994, "lenton2021ivi": 994, "inter": 994, "lenton": 994, "daniel": 994, "pardo": 994, "fabio": 994, "falck": 994, "fabian": 994, "jame": 994, "stephen": 994, "clark": 994, "ronald": 994, "journal": 994, "arxiv": 994, "preprint": 994, "2102": 994, "02886": 994, "2021": 994, "add_array_spec": 997, "fn_array_spec": 997, "geglu": 1002, "native_modul": [1005, 1006], "native_module_class": [1005, 1006], "firstlayersiren": 1007, "kaimingnorm": [1007, 1011], "negative_slop": 1007, "Ones": 1007, "siren": 1007, "w0": [1007, 1013], "filter_s": [1016, 1017, 1018], "1d": [1016, 1017, 1018], "conv1dtranspos": 1016, "filter_shap": [1016, 1019, 1020, 1021, 1022, 1023], "conv2dtranspos": 1016, "conv3dtranspos": 1016, "depthwiseconv2d": 1016, "num_channel": [1016, 1023], "bernoul": [1016, 1024], "num_lay": [1016, 1025], "return_sequ": [1016, 1025], "return_st": [1016, 1025], "get_initial_st": [1016, 1025], "dens": [1016, 1026], "multiheadattent": 1016, "query_dim": [1016, 1027], "head_dim": [1016, 1027], "dropout_r": [1016, 1027], "context_dim": [1016, 1027], "with_to_q_fn": [1016, 1027], "with_to_kv_fn": [1016, 1027], "with_to_out_fn": [1016, 1027], "build_mod": [1016, 1027, 1028, 1029], "on_init": [1016, 1027, 1028, 1029], "__call__": [1016, 1027, 1028, 1029], "store_var": [1028, 1029], "arg_stateful_idx": [1028, 1029], "kwarg_stateful_idx": [1028, 1029], "fallback_to_non_compil": [1028, 1029, 1032, 1036], "with_partial_v": [1028, 1029], "initialz": [1028, 1029], "from_cal": [1028, 1029], "check_submod_ret": [1028, 1029], "get_mod_kei": [1028, 1029], "top_mod": [1028, 1029], "mod_depth": [1028, 1029], "mod_height": [1028, 1029], "mod_with_top_mod_key_chain": [1028, 1029], "save_weight": [1028, 1029], "weights_path": [1028, 1029], "show_mod_in_top_mod": [1028, 1029], "upper_depth": [1028, 1029], "lower_depth": [1028, 1029], "show_structur": [1028, 1029], "show_v_in_top_v": [1028, 1029], "sub_mod": [1028, 1029], "show_v": [1028, 1029], "track_submod_call_ord": [1028, 1029], "track_submod_ret": [1028, 1029], "v_with_top_v_key_chain": [1028, 1029], "layernorm": 1030, "normalized_shap": [1030, 1031], "elementwise_affin": [1030, 1031], "trail": [1030, 1031], "affin": [1030, 1031], "init_on_first_step": [1032, 1036], "ignore_miss": [1032, 1036], "overriden": [1032, 1036], "sgd": 1032, "stochast": [1032, 1037], "sub_modul": [1038, 1039]}, "objects": {"ivy.array": [[22, 0, 0, "-", "activations"], [24, 0, 0, "-", "conversions"], [29, 0, 0, "-", "creation"], [31, 0, 0, "-", "data_type"], [33, 0, 0, "-", "device"], [35, 0, 0, "-", "elementwise"], [37, 0, 0, "-", "general"], [39, 0, 0, "-", "gradients"], [41, 0, 0, "-", "image"], [43, 0, 0, "-", "layers"], [45, 0, 0, "-", "linear_algebra"], [47, 0, 0, "-", "losses"], [49, 0, 0, "-", "manipulation"], [51, 0, 0, "-", "norms"], [53, 0, 0, "-", "random"], [55, 0, 0, "-", "searching"], [57, 0, 0, "-", "set"], [59, 0, 0, "-", "sorting"], [61, 0, 0, "-", "statistical"], [63, 0, 0, "-", "utility"], [65, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[23, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[23, 2, 1, "", "softplus"]], "ivy.array.array_methods": [[367, 3, 1, "", "abs"], [372, 3, 1, "", "acos"], [376, 3, 1, "", "acosh"], [689, 3, 1, "", "adam_step"], [380, 3, 1, "", "add"], [985, 3, 1, "", "all"], [607, 3, 1, "", "all_equal"], [990, 3, 1, "", "any"], [941, 3, 1, "", "argsort"], [177, 3, 1, "", "asarray"], [385, 3, 1, "", "asin"], [389, 3, 1, "", "asinh"], [250, 3, 1, "", "astype"], [394, 3, 1, "", "atan"], [398, 3, 1, "", "atan2"], [402, 3, 1, "", "atanh"], [811, 3, 1, "", "binary_cross_entropy"], [406, 3, 1, "", "bitwise_and"], [410, 3, 1, "", "bitwise_invert"], [414, 3, 1, "", "bitwise_left_shift"], [418, 3, 1, "", "bitwise_or"], [422, 3, 1, "", "bitwise_right_shift"], [426, 3, 1, "", "bitwise_xor"], [255, 3, 1, "", "broadcast_arrays"], [260, 3, 1, "", "broadcast_to"], [265, 3, 1, "", "can_cast"], [430, 3, 1, "", "ceil"], [739, 3, 1, "", "cholesky"], [827, 3, 1, "", "clip"], [832, 3, 1, "", "concat"], [836, 3, 1, "", "constant_pad"], [434, 3, 1, "", "cos"], [438, 3, 1, "", "cosh"], [744, 3, 1, "", "cross"], [816, 3, 1, "", "cross_entropy"], [747, 3, 1, "", "det"], [750, 3, 1, "", "diagonal"], [442, 3, 1, "", "divide"], [274, 3, 1, "", "dtype"], [753, 3, 1, "", "eigh"], [756, 3, 1, "", "eigvalsh"], [952, 3, 1, "", "einsum"], [183, 3, 1, "", "empty_like"], [447, 3, 1, "", "equal"], [451, 3, 1, "", "erf"], [455, 3, 1, "", "exp"], [840, 3, 1, "", "expand_dims"], [459, 3, 1, "", "expm1"], [279, 3, 1, "", "finfo"], [844, 3, 1, "", "flip"], [463, 3, 1, "", "floor"], [467, 3, 1, "", "floor_divide"], [191, 3, 1, "", "from_dlpack"], [197, 3, 1, "", "full_like"], [635, 3, 1, "", "gather_nd"], [471, 3, 1, "", "greater"], [475, 3, 1, "", "greater_equal"], [286, 3, 1, "", "iinfo"], [759, 3, 1, "", "inv"], [292, 3, 1, "", "is_float_dtype"], [297, 3, 1, "", "is_int_dtype"], [479, 3, 1, "", "isfinite"], [483, 3, 1, "", "isinf"], [487, 3, 1, "", "isnan"], [909, 3, 1, "", "layer_norm"], [491, 3, 1, "", "less"], [495, 3, 1, "", "less_equal"], [499, 3, 1, "", "log"], [503, 3, 1, "", "log10"], [507, 3, 1, "", "log1p"], [511, 3, 1, "", "log2"], [515, 3, 1, "", "logaddexp"], [519, 3, 1, "", "logical_and"], [523, 3, 1, "", "logical_not"], [527, 3, 1, "", "logical_or"], [531, 3, 1, "", "logical_xor"], [762, 3, 1, "", "matmul"], [766, 3, 1, "", "matrix_norm"], [770, 3, 1, "", "matrix_rank"], [773, 3, 1, "", "matrix_transpose"], [956, 3, 1, "", "max"], [960, 3, 1, "", "mean"], [208, 3, 1, "", "meshgrid"], [964, 3, 1, "", "min"], [537, 3, 1, "", "multiply"], [213, 3, 1, "", "native_array"], [542, 3, 1, "", "negative"], [546, 3, 1, "", "not_equal"], [221, 3, 1, "", "ones_like"], [776, 3, 1, "", "outer"], [848, 3, 1, "", "permute_dims"], [779, 3, 1, "", "pinv"], [550, 3, 1, "", "positive"], [554, 3, 1, "", "pow"], [968, 3, 1, "", "prod"], [782, 3, 1, "", "qr"], [558, 3, 1, "", "remainder"], [852, 3, 1, "", "repeat"], [856, 3, 1, "", "reshape"], [303, 3, 1, "", "result_type"], [860, 3, 1, "", "roll"], [562, 3, 1, "", "round"], [566, 3, 1, "", "sign"], [571, 3, 1, "", "sin"], [575, 3, 1, "", "sinh"], [164, 3, 1, "", "softplus"], [786, 3, 1, "", "solve"], [946, 3, 1, "", "sort"], [821, 3, 1, "", "sparse_cross_entropy"], [579, 3, 1, "", "sqrt"], [583, 3, 1, "", "square"], [866, 3, 1, "", "squeeze"], [870, 3, 1, "", "stack"], [972, 3, 1, "", "std"], [588, 3, 1, "", "subtract"], [976, 3, 1, "", "sum"], [789, 3, 1, "", "svd"], [792, 3, 1, "", "svdvals"], [874, 3, 1, "", "swapaxes"], [593, 3, 1, "", "tan"], [598, 3, 1, "", "tanh"], [795, 3, 1, "", "tensordot"], [878, 3, 1, "", "tile"], [678, 3, 1, "", "to_numpy"], [798, 3, 1, "", "trace"], [227, 3, 1, "", "tril"], [232, 3, 1, "", "triu"], [602, 3, 1, "", "trunc"], [934, 3, 1, "", "unique_counts"], [980, 3, 1, "", "var"], [801, 3, 1, "", "vecdot"], [804, 3, 1, "", "vector_norm"], [807, 3, 1, "", "vector_to_skew_symmetric_matrix"], [882, 3, 1, "", "zero_pad"], [240, 3, 1, "", "zeros_like"]], "ivy.array.conversions": [[25, 3, 1, "", "args_to_ivy"], [26, 3, 1, "", "args_to_native"], [27, 3, 1, "", "to_ivy"], [28, 3, 1, "", "to_native"]], "ivy.array.creation": [[30, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[30, 2, 1, "", "asarray"], [30, 2, 1, "", "empty_like"], [30, 2, 1, "", "from_dlpack"], [30, 2, 1, "", "full_like"], [30, 2, 1, "", "meshgrid"], [30, 2, 1, "", "native_array"], [30, 2, 1, "", "ones_like"], [30, 2, 1, "", "tril"], [30, 2, 1, "", "triu"], [30, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[32, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[32, 2, 1, "", "astype"], [32, 2, 1, "", "broadcast_arrays"], [32, 2, 1, "", "broadcast_to"], [32, 2, 1, "", "can_cast"], [32, 2, 1, "", "dtype"], [32, 2, 1, "", "finfo"], [32, 2, 1, "", "iinfo"], [32, 2, 1, "", "is_float_dtype"], [32, 2, 1, "", "is_int_dtype"], [32, 2, 1, "", "result_type"]], "ivy.array.device": [[34, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[36, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[36, 2, 1, "", "abs"], [36, 2, 1, "", "acos"], [36, 2, 1, "", "acosh"], [36, 2, 1, "", "add"], [36, 2, 1, "", "asin"], [36, 2, 1, "", "asinh"], [36, 2, 1, "", "atan"], [36, 2, 1, "", "atan2"], [36, 2, 1, "", "atanh"], [36, 2, 1, "", "bitwise_and"], [36, 2, 1, "", "bitwise_invert"], [36, 2, 1, "", "bitwise_left_shift"], [36, 2, 1, "", "bitwise_or"], [36, 2, 1, "", "bitwise_right_shift"], [36, 2, 1, "", "bitwise_xor"], [36, 2, 1, "", "ceil"], [36, 2, 1, "", "cos"], [36, 2, 1, "", "cosh"], [36, 2, 1, "", "divide"], [36, 2, 1, "", "equal"], [36, 2, 1, "", "erf"], [36, 2, 1, "", "exp"], [36, 2, 1, "", "expm1"], [36, 2, 1, "", "floor"], [36, 2, 1, "", "floor_divide"], [36, 2, 1, "", "greater"], [36, 2, 1, "", "greater_equal"], [36, 2, 1, "", "isfinite"], [36, 2, 1, "", "isinf"], [36, 2, 1, "", "isnan"], [36, 2, 1, "", "less"], [36, 2, 1, "", "less_equal"], [36, 2, 1, "", "log"], [36, 2, 1, "", "log10"], [36, 2, 1, "", "log1p"], [36, 2, 1, "", "log2"], [36, 2, 1, "", "logaddexp"], [36, 2, 1, "", "logical_and"], [36, 2, 1, "", "logical_not"], [36, 2, 1, "", "logical_or"], [36, 2, 1, "", "logical_xor"], [36, 2, 1, "", "multiply"], [36, 2, 1, "", "negative"], [36, 2, 1, "", "not_equal"], [36, 2, 1, "", "positive"], [36, 2, 1, "", "pow"], [36, 2, 1, "", "remainder"], [36, 2, 1, "", "round"], [36, 2, 1, "", "sign"], [36, 2, 1, "", "sin"], [36, 2, 1, "", "sinh"], [36, 2, 1, "", "sqrt"], [36, 2, 1, "", "square"], [36, 2, 1, "", "subtract"], [36, 2, 1, "", "tan"], [36, 2, 1, "", "tanh"], [36, 2, 1, "", "trunc"]], "ivy.array.general": [[38, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[38, 2, 1, "", "all_equal"], [38, 2, 1, "", "gather_nd"], [38, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[40, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[40, 2, 1, "", "adam_step"]], "ivy.array.image": [[42, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[44, 1, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[46, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[46, 2, 1, "", "cholesky"], [46, 2, 1, "", "cross"], [46, 2, 1, "", "det"], [46, 2, 1, "", "diagonal"], [46, 2, 1, "", "eigh"], [46, 2, 1, "", "eigvalsh"], [46, 2, 1, "", "inv"], [46, 2, 1, "", "matmul"], [46, 2, 1, "", "matrix_norm"], [46, 2, 1, "", "matrix_rank"], [46, 2, 1, "", "matrix_transpose"], [46, 2, 1, "", "outer"], [46, 2, 1, "", "pinv"], [46, 2, 1, "", "qr"], [46, 2, 1, "", "solve"], [46, 2, 1, "", "svd"], [46, 2, 1, "", "svdvals"], [46, 2, 1, "", "tensordot"], [46, 2, 1, "", "trace"], [46, 2, 1, "", "vecdot"], [46, 2, 1, "", "vector_norm"], [46, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[48, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[48, 2, 1, "", "binary_cross_entropy"], [48, 2, 1, "", "cross_entropy"], [48, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[50, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[50, 2, 1, "", "clip"], [50, 2, 1, "", "concat"], [50, 2, 1, "", "constant_pad"], [50, 2, 1, "", "expand_dims"], [50, 2, 1, "", "flip"], [50, 2, 1, "", "permute_dims"], [50, 2, 1, "", "repeat"], [50, 2, 1, "", "reshape"], [50, 2, 1, "", "roll"], [50, 2, 1, "", "squeeze"], [50, 2, 1, "", "stack"], [50, 2, 1, "", "swapaxes"], [50, 2, 1, "", "tile"], [50, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[52, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[52, 2, 1, "", "layer_norm"]], "ivy.array.random": [[54, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[56, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[58, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[58, 2, 1, "", "unique_counts"]], "ivy.array.sorting": [[60, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[60, 2, 1, "", "argsort"], [60, 2, 1, "", "sort"]], "ivy.array.statistical": [[62, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[62, 2, 1, "", "einsum"], [62, 2, 1, "", "max"], [62, 2, 1, "", "mean"], [62, 2, 1, "", "min"], [62, 2, 1, "", "prod"], [62, 2, 1, "", "std"], [62, 2, 1, "", "sum"], [62, 2, 1, "", "var"]], "ivy.array.utility": [[64, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[64, 2, 1, "", "all"], [64, 2, 1, "", "any"]], "ivy.array.wrapping": [[66, 3, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [147, 0, 0, "-", "func_wrapper"], [997, 0, 0, "-", "inspection"], [1001, 0, 0, "-", "stateful"], [1041, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[67, 0, 0, "-", "activations"], [69, 0, 0, "-", "base"], [71, 0, 0, "-", "container"], [74, 0, 0, "-", "creation"], [76, 0, 0, "-", "data_type"], [78, 0, 0, "-", "device"], [80, 0, 0, "-", "elementwise"], [82, 0, 0, "-", "general"], [84, 0, 0, "-", "gradients"], [86, 0, 0, "-", "image"], [88, 0, 0, "-", "layers"], [90, 0, 0, "-", "linear_algebra"], [92, 0, 0, "-", "losses"], [94, 0, 0, "-", "manipulation"], [96, 0, 0, "-", "norms"], [98, 0, 0, "-", "random"], [100, 0, 0, "-", "searching"], [102, 0, 0, "-", "set"], [104, 0, 0, "-", "sorting"], [106, 0, 0, "-", "statistical"], [108, 0, 0, "-", "utility"], [110, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[68, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[68, 2, 1, "", "softplus"], [68, 2, 1, "", "static_softplus"]], "ivy.container.base": [[70, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[70, 2, 1, "", "__getitem__"], [70, 2, 1, "", "__init__"], [70, 2, 1, "", "__setitem__"], [70, 2, 1, "", "all_false"], [70, 2, 1, "", "all_key_chains"], [70, 2, 1, "", "all_true"], [70, 2, 1, "", "arrays_as_lists"], [70, 2, 1, "", "as_arrays"], [70, 2, 1, "", "as_bools"], [70, 2, 1, "", "as_ones"], [70, 2, 1, "", "as_random_uniform"], [70, 2, 1, "", "as_variables"], [70, 2, 1, "", "as_zeros"], [70, 2, 1, "", "assert_contains_sub_container"], [70, 2, 1, "", "assert_contains_sub_structure"], [70, 2, 1, "", "assert_identical"], [70, 2, 1, "", "assert_identical_structure"], [70, 2, 1, "", "at_key_chain"], [70, 2, 1, "", "at_key_chains"], [70, 2, 1, "", "at_keys"], [70, 2, 1, "", "clip"], [70, 2, 1, "", "combine"], [70, 2, 1, "", "common_key_chains"], [70, 4, 1, "", "config"], [70, 2, 1, "", "contains_sub_container"], [70, 2, 1, "", "contains_sub_structure"], [70, 2, 1, "", "copy"], [70, 2, 1, "", "create_if_absent"], [70, 2, 1, "", "cutoff_at_depth"], [70, 2, 1, "", "cutoff_at_height"], [70, 2, 1, "", "deep_copy"], [70, 4, 1, "", "dev"], [70, 2, 1, "", "dev_clone"], [70, 2, 1, "", "dev_dist"], [70, 4, 1, "", "dev_str"], [70, 2, 1, "", "diff"], [70, 2, 1, "", "dtype"], [70, 2, 1, "", "einops_rearrange"], [70, 2, 1, "", "einops_reduce"], [70, 2, 1, "", "einops_repeat"], [70, 2, 1, "", "find_sub_container"], [70, 2, 1, "", "find_sub_structure"], [70, 2, 1, "", "flatten_key_chain"], [70, 2, 1, "", "flatten_key_chains"], [70, 2, 1, "", "format_key_chains"], [70, 2, 1, "", "from_disk_as_hdf5"], [70, 2, 1, "", "from_disk_as_json"], [70, 2, 1, "", "from_disk_as_pickled"], [70, 2, 1, "", "from_flat_list"], [70, 2, 1, "", "from_numpy"], [70, 2, 1, "", "gather"], [70, 2, 1, "", "gather_nd"], [70, 2, 1, "", "h5_file_size"], [70, 2, 1, "", "handle_inplace"], [70, 2, 1, "", "has_key"], [70, 2, 1, "", "has_key_chain"], [70, 2, 1, "", "has_nans"], [70, 2, 1, "", "identical"], [70, 2, 1, "", "identical_array_shapes"], [70, 2, 1, "", "identical_configs"], [70, 2, 1, "", "identical_structure"], [70, 2, 1, "", "if_exists"], [70, 2, 1, "", "inplace_update"], [70, 4, 1, "", "ivy"], [70, 2, 1, "", "key_chains_containing"], [70, 2, 1, "", "list_join"], [70, 2, 1, "", "list_stack"], [70, 2, 1, "", "map"], [70, 2, 1, "", "map_conts"], [70, 2, 1, "", "matrix_norm"], [70, 4, 1, "", "max_depth"], [70, 2, 1, "", "maximum"], [70, 2, 1, "", "minimum"], [70, 2, 1, "", "multi_map"], [70, 2, 1, "", "multi_map_in_static_method"], [70, 2, 1, "", "num_arrays"], [70, 2, 1, "", "overwrite_at_key_chain"], [70, 2, 1, "", "overwrite_at_key_chains"], [70, 2, 1, "", "prune_empty"], [70, 2, 1, "", "prune_key_chain"], [70, 2, 1, "", "prune_key_chains"], [70, 2, 1, "", "prune_key_from_key_chains"], [70, 2, 1, "", "prune_keys"], [70, 2, 1, "", "prune_keys_from_key_chains"], [70, 2, 1, "", "reduce"], [70, 2, 1, "", "remove_key_length_limit"], [70, 2, 1, "", "remove_print_limit"], [70, 2, 1, "", "reshape_like"], [70, 2, 1, "", "restructure"], [70, 2, 1, "", "restructure_key_chains"], [70, 2, 1, "", "set_at_key_chain"], [70, 2, 1, "", "set_at_key_chains"], [70, 2, 1, "", "set_at_keys"], [70, 2, 1, "", "set_framework"], [70, 2, 1, "", "set_ivy_backend"], [70, 4, 1, "", "shape"], [70, 4, 1, "", "shapes"], [70, 2, 1, "", "show"], [70, 2, 1, "", "show_sub_container"], [70, 2, 1, "", "shuffle"], [70, 2, 1, "", "shuffle_h5_file"], [70, 2, 1, "", "size_ordered_arrays"], [70, 2, 1, "", "slice_keys"], [70, 2, 1, "", "slice_via_key"], [70, 2, 1, "", "sort_by_key"], [70, 2, 1, "", "split"], [70, 2, 1, "", "stop_gradients"], [70, 2, 1, "", "structural_diff"], [70, 2, 1, "", "to_device"], [70, 2, 1, "", "to_dict"], [70, 2, 1, "", "to_disk_as_hdf5"], [70, 2, 1, "", "to_disk_as_json"], [70, 2, 1, "", "to_disk_as_pickled"], [70, 2, 1, "", "to_flat_list"], [70, 2, 1, "", "to_iterator"], [70, 2, 1, "", "to_iterator_keys"], [70, 2, 1, "", "to_iterator_values"], [70, 2, 1, "", "to_ivy"], [70, 2, 1, "", "to_jsonable"], [70, 2, 1, "", "to_list"], [70, 2, 1, "", "to_multi_dev"], [70, 2, 1, "", "to_native"], [70, 2, 1, "", "to_numpy"], [70, 2, 1, "", "to_raw"], [70, 2, 1, "", "trim_key"], [70, 2, 1, "", "try_kc"], [70, 2, 1, "", "unify"], [70, 2, 1, "", "unstack"], [70, 2, 1, "", "update_config"], [70, 2, 1, "", "vector_norm"], [70, 2, 1, "", "with_default_key_color"], [70, 2, 1, "", "with_entries_as_lists"], [70, 2, 1, "", "with_ivy_backend"], [70, 2, 1, "", "with_key_length_limit"], [70, 2, 1, "", "with_print_indent"], [70, 2, 1, "", "with_print_limit"], [70, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[72, 1, 1, "", "Container"], [73, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[72, 2, 1, "", "__add__"], [72, 2, 1, "", "__init__"], [72, 2, 1, "", "__radd__"], [72, 2, 1, "", "arange"], [72, 2, 1, "", "arg_info"], [72, 2, 1, "", "arg_names"], [72, 2, 1, "", "argmax"], [72, 2, 1, "", "argmin"], [72, 2, 1, "", "array"], [72, 2, 1, "", "array_equal"], [72, 2, 1, "", "arrays_equal"], [72, 2, 1, "", "as_ivy_dev"], [72, 2, 1, "", "as_ivy_dtype"], [72, 2, 1, "", "as_native_dev"], [72, 2, 1, "", "as_native_dtype"], [72, 2, 1, "", "assert_supports_inplace"], [72, 2, 1, "", "cache_fn"], [72, 2, 1, "", "clear_mem_on_dev"], [72, 2, 1, "", "clip_matrix_norm"], [72, 2, 1, "", "closest_valid_dtype"], [72, 2, 1, "", "container_types"], [72, 2, 1, "", "conv1d"], [72, 2, 1, "", "conv1d_transpose"], [72, 2, 1, "", "conv2d"], [72, 2, 1, "", "conv2d_transpose"], [72, 2, 1, "", "conv3d"], [72, 2, 1, "", "conv3d_transpose"], [72, 2, 1, "", "copy_array"], [72, 2, 1, "", "cross"], [72, 2, 1, "", "cumprod"], [72, 2, 1, "", "cumsum"], [72, 2, 1, "", "current_backend"], [72, 2, 1, "", "current_backend_str"], [72, 2, 1, "", "default"], [72, 2, 1, "", "default_device"], [72, 2, 1, "", "default_dtype"], [72, 2, 1, "", "default_float_dtype"], [72, 2, 1, "", "default_int_dtype"], [72, 2, 1, "", "depthwise_conv2d"], [72, 2, 1, "", "det"], [72, 2, 1, "", "dev_clone_array"], [72, 2, 1, "", "dev_clone_iter"], [72, 2, 1, "", "dev_clone_nest"], [72, 2, 1, "", "dev_dist_array"], [72, 2, 1, "", "dev_dist_iter"], [72, 2, 1, "", "dev_dist_nest"], [72, 2, 1, "", "dev_unify"], [72, 2, 1, "", "dev_unify_array"], [72, 2, 1, "", "dev_unify_iter"], [72, 2, 1, "", "dev_unify_nest"], [72, 2, 1, "", "dev_util"], [72, 2, 1, "", "diagonal"], [72, 2, 1, "", "dropout"], [72, 2, 1, "", "dtype_bits"], [72, 2, 1, "", "eigh"], [72, 2, 1, "", "eigvalsh"], [72, 2, 1, "", "empty"], [72, 2, 1, "", "execute_with_gradients"], [72, 2, 1, "", "exists"], [72, 2, 1, "", "eye"], [72, 2, 1, "", "floormod"], [72, 2, 1, "", "fourier_encode"], [72, 2, 1, "", "full"], [72, 2, 1, "", "function_supported_dtypes"], [72, 2, 1, "", "function_unsupported_dtypes"], [72, 2, 1, "", "gelu"], [72, 2, 1, "", "get_all_arrays_in_memory"], [72, 2, 1, "", "get_all_ivy_arrays_on_dev"], [72, 2, 1, "", "get_min_base"], [72, 2, 1, "", "get_min_denominator"], [72, 2, 1, "", "get_num_dims"], [72, 2, 1, "", "get_referrers_recursive"], [72, 2, 1, "", "gpu_is_available"], [72, 2, 1, "", "handle_nestable"], [72, 2, 1, "", "handle_out_argument"], [72, 2, 1, "", "indices_where"], [72, 2, 1, "", "infer_device"], [72, 2, 1, "", "infer_dtype"], [72, 2, 1, "", "inplace_arrays_supported"], [72, 2, 1, "", "inplace_decrement"], [72, 2, 1, "", "inplace_increment"], [72, 2, 1, "", "inplace_variables_supported"], [72, 2, 1, "", "inputs_to_native_arrays"], [72, 2, 1, "", "inv"], [72, 2, 1, "", "invalid_dtype"], [72, 2, 1, "", "is_ivy_container"], [72, 2, 1, "", "leaky_relu"], [72, 2, 1, "", "linear"], [72, 2, 1, "", "linspace"], [72, 2, 1, "", "logspace"], [72, 2, 1, "", "lstm_update"], [72, 2, 1, "", "match_kwargs"], [72, 2, 1, "", "matrix_power"], [72, 2, 1, "", "matrix_rank"], [72, 2, 1, "", "matrix_transpose"], [72, 2, 1, "", "multi_head_attention"], [72, 2, 1, "", "multinomial"], [72, 2, 1, "", "multiprocessing"], [72, 2, 1, "", "nonzero"], [72, 2, 1, "", "num_arrays_in_memory"], [72, 2, 1, "", "num_cpu_cores"], [72, 2, 1, "", "num_gpus"], [72, 2, 1, "", "num_ivy_arrays_on_dev"], [72, 2, 1, "", "one_hot"], [72, 2, 1, "", "ones"], [72, 2, 1, "", "outer"], [72, 2, 1, "", "outputs_to_ivy_arrays"], [72, 2, 1, "", "percent_used_mem_on_dev"], [72, 2, 1, "", "pinv"], [72, 2, 1, "", "print_all_arrays_in_memory"], [72, 2, 1, "", "print_all_ivy_arrays_on_dev"], [72, 2, 1, "", "promote_types"], [72, 2, 1, "", "qr"], [72, 2, 1, "", "queue_timeout"], [72, 2, 1, "", "randint"], [72, 2, 1, "", "random_normal"], [72, 2, 1, "", "relu"], [72, 2, 1, "", "scaled_dot_product_attention"], [72, 2, 1, "", "scatter_flat"], [72, 2, 1, "", "scatter_nd"], [72, 2, 1, "", "seed"], [72, 2, 1, "", "set_default_device"], [72, 2, 1, "", "set_default_dtype"], [72, 2, 1, "", "set_default_float_dtype"], [72, 2, 1, "", "set_default_int_dtype"], [72, 2, 1, "", "set_min_base"], [72, 2, 1, "", "set_min_denominator"], [72, 2, 1, "", "set_queue_timeout"], [72, 2, 1, "", "set_shape_array_mode"], [72, 2, 1, "", "set_split_factor"], [72, 2, 1, "", "set_tmp_dir"], [72, 2, 1, "", "set_with_grads"], [72, 2, 1, "", "shape_array_mode"], [72, 2, 1, "", "shape_to_tuple"], [72, 2, 1, "", "sigmoid"], [72, 2, 1, "", "slogdet"], [72, 2, 1, "", "softmax"], [72, 2, 1, "", "solve"], [72, 2, 1, "", "split_factor"], [72, 2, 1, "", "split_func_call"], [72, 2, 1, "", "stable_divide"], [72, 2, 1, "", "stable_pow"], [72, 2, 1, "", "static_acos"], [72, 2, 1, "", "static_acosh"], [72, 2, 1, "", "static_arg_info"], [72, 2, 1, "", "static_arg_names"], [72, 2, 1, "", "static_argmax"], [72, 2, 1, "", "static_argmin"], [72, 2, 1, "", "static_array"], [72, 2, 1, "", "static_array_equal"], [72, 2, 1, "", "static_arrays_equal"], [72, 2, 1, "", "static_as_ivy_dev"], [72, 2, 1, "", "static_as_ivy_dtype"], [72, 2, 1, "", "static_as_native_dev"], [72, 2, 1, "", "static_as_native_dtype"], [72, 2, 1, "", "static_asin"], [72, 2, 1, "", "static_assert_supports_inplace"], [72, 2, 1, "", "static_atan"], [72, 2, 1, "", "static_atan2"], [72, 2, 1, "", "static_atanh"], [72, 2, 1, "", "static_bitwise_and"], [72, 2, 1, "", "static_bitwise_invert"], [72, 2, 1, "", "static_bitwise_left_shift"], [72, 2, 1, "", "static_bitwise_or"], [72, 2, 1, "", "static_bitwise_right_shift"], [72, 2, 1, "", "static_bitwise_xor"], [72, 2, 1, "", "static_cache_fn"], [72, 2, 1, "", "static_ceil"], [72, 2, 1, "", "static_clear_mem_on_dev"], [72, 2, 1, "", "static_clip_matrix_norm"], [72, 2, 1, "", "static_clip_vector_norm"], [72, 2, 1, "", "static_closest_valid_dtype"], [72, 2, 1, "", "static_concat"], [72, 2, 1, "", "static_constant_pad"], [72, 2, 1, "", "static_container_types"], [72, 2, 1, "", "static_conv1d"], [72, 2, 1, "", "static_conv1d_transpose"], [72, 2, 1, "", "static_conv2d"], [72, 2, 1, "", "static_conv2d_transpose"], [72, 2, 1, "", "static_conv3d"], [72, 2, 1, "", "static_conv3d_transpose"], [72, 2, 1, "", "static_copy_array"], [72, 2, 1, "", "static_cos"], [72, 2, 1, "", "static_cosh"], [72, 2, 1, "", "static_cross"], [72, 2, 1, "", "static_cumprod"], [72, 2, 1, "", "static_cumsum"], [72, 2, 1, "", "static_current_backend"], [72, 2, 1, "", "static_current_backend_str"], [72, 2, 1, "", "static_default"], [72, 2, 1, "", "static_default_device"], [72, 2, 1, "", "static_default_dtype"], [72, 2, 1, "", "static_default_float_dtype"], [72, 2, 1, "", "static_default_int_dtype"], [72, 2, 1, "", "static_depthwise_conv2d"], [72, 2, 1, "", "static_det"], [72, 2, 1, "", "static_dev"], [72, 2, 1, "", "static_dev_clone"], [72, 2, 1, "", "static_dev_clone_array"], [72, 2, 1, "", "static_dev_clone_iter"], [72, 2, 1, "", "static_dev_clone_nest"], [72, 2, 1, "", "static_dev_dist"], [72, 2, 1, "", "static_dev_dist_array"], [72, 2, 1, "", "static_dev_dist_iter"], [72, 2, 1, "", "static_dev_dist_nest"], [72, 2, 1, "", "static_dev_unify"], [72, 2, 1, "", "static_dev_unify_array"], [72, 2, 1, "", "static_dev_unify_iter"], [72, 2, 1, "", "static_dev_unify_nest"], [72, 2, 1, "", "static_dev_util"], [72, 2, 1, "", "static_diagonal"], [72, 2, 1, "", "static_dropout"], [72, 2, 1, "", "static_dtype"], [72, 2, 1, "", "static_dtype_bits"], [72, 2, 1, "", "static_eigh"], [72, 2, 1, "", "static_eigvalsh"], [72, 2, 1, "", "static_einops_rearrange"], [72, 2, 1, "", "static_einops_reduce"], [72, 2, 1, "", "static_einops_repeat"], [72, 2, 1, "", "static_einsum"], [72, 2, 1, "", "static_empty"], [72, 2, 1, "", "static_equal"], [72, 2, 1, "", "static_erf"], [72, 2, 1, "", "static_execute_with_gradients"], [72, 2, 1, "", "static_exists"], [72, 2, 1, "", "static_exp"], [72, 2, 1, "", "static_expand_dims"], [72, 2, 1, "", "static_expm1"], [72, 2, 1, "", "static_flip"], [72, 2, 1, "", "static_floor"], [72, 2, 1, "", "static_floor_divide"], [72, 2, 1, "", "static_floormod"], [72, 2, 1, "", "static_fourier_encode"], [72, 2, 1, "", "static_full"], [72, 2, 1, "", "static_function_supported_dtypes"], [72, 2, 1, "", "static_function_unsupported_dtypes"], [72, 2, 1, "", "static_gather"], [72, 2, 1, "", "static_gelu"], [72, 2, 1, "", "static_get_all_arrays_in_memory"], [72, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [72, 2, 1, "", "static_get_min_base"], [72, 2, 1, "", "static_get_min_denominator"], [72, 2, 1, "", "static_get_num_dims"], [72, 2, 1, "", "static_get_referrers_recursive"], [72, 2, 1, "", "static_gpu_is_available"], [72, 2, 1, "", "static_greater"], [72, 2, 1, "", "static_greater_equal"], [72, 2, 1, "", "static_handle_nestable"], [72, 2, 1, "", "static_handle_out_argument"], [72, 2, 1, "", "static_has_nans"], [72, 2, 1, "", "static_indices_where"], [72, 2, 1, "", "static_infer_device"], [72, 2, 1, "", "static_infer_dtype"], [72, 2, 1, "", "static_inplace_arrays_supported"], [72, 2, 1, "", "static_inplace_decrement"], [72, 2, 1, "", "static_inplace_increment"], [72, 2, 1, "", "static_inplace_update"], [72, 2, 1, "", "static_inplace_variables_supported"], [72, 2, 1, "", "static_inputs_to_native_arrays"], [72, 2, 1, "", "static_inv"], [72, 2, 1, "", "static_invalid_dtype"], [72, 2, 1, "", "static_is_array"], [72, 2, 1, "", "static_is_ivy_array"], [72, 2, 1, "", "static_is_ivy_container"], [72, 2, 1, "", "static_is_native_array"], [72, 2, 1, "", "static_isfinite"], [72, 2, 1, "", "static_isinf"], [72, 2, 1, "", "static_isnan"], [72, 2, 1, "", "static_leaky_relu"], [72, 2, 1, "", "static_less"], [72, 2, 1, "", "static_less_equal"], [72, 2, 1, "", "static_linear"], [72, 2, 1, "", "static_log"], [72, 2, 1, "", "static_log10"], [72, 2, 1, "", "static_log1p"], [72, 2, 1, "", "static_log2"], [72, 2, 1, "", "static_logaddexp"], [72, 2, 1, "", "static_logical_and"], [72, 2, 1, "", "static_logical_not"], [72, 2, 1, "", "static_logical_or"], [72, 2, 1, "", "static_logical_xor"], [72, 2, 1, "", "static_lstm_update"], [72, 2, 1, "", "static_match_kwargs"], [72, 2, 1, "", "static_matmul"], [72, 2, 1, "", "static_matrix_norm"], [72, 2, 1, "", "static_matrix_power"], [72, 2, 1, "", "static_matrix_rank"], [72, 2, 1, "", "static_matrix_transpose"], [72, 2, 1, "", "static_max"], [72, 2, 1, "", "static_maximum"], [72, 2, 1, "", "static_mean"], [72, 2, 1, "", "static_min"], [72, 2, 1, "", "static_minimum"], [72, 2, 1, "", "static_multi_head_attention"], [72, 2, 1, "", "static_multinomial"], [72, 2, 1, "", "static_multiprocessing"], [72, 2, 1, "", "static_negative"], [72, 2, 1, "", "static_nonzero"], [72, 2, 1, "", "static_not_equal"], [72, 2, 1, "", "static_num_arrays_in_memory"], [72, 2, 1, "", "static_num_cpu_cores"], [72, 2, 1, "", "static_num_gpus"], [72, 2, 1, "", "static_num_ivy_arrays_on_dev"], [72, 2, 1, "", "static_one_hot"], [72, 2, 1, "", "static_outer"], [72, 2, 1, "", "static_outputs_to_ivy_arrays"], [72, 2, 1, "", "static_percent_used_mem_on_dev"], [72, 2, 1, "", "static_permute_dims"], [72, 2, 1, "", "static_pinv"], [72, 2, 1, "", "static_positive"], [72, 2, 1, "", "static_pow"], [72, 2, 1, "", "static_print_all_arrays_in_memory"], [72, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [72, 2, 1, "", "static_prod"], [72, 2, 1, "", "static_promote_types"], [72, 2, 1, "", "static_qr"], [72, 2, 1, "", "static_queue_timeout"], [72, 2, 1, "", "static_random_normal"], [72, 2, 1, "", "static_relu"], [72, 2, 1, "", "static_remainder"], [72, 2, 1, "", "static_repeat"], [72, 2, 1, "", "static_reshape"], [72, 2, 1, "", "static_round"], [72, 2, 1, "", "static_scaled_dot_product_attention"], [72, 2, 1, "", "static_scatter_flat"], [72, 2, 1, "", "static_scatter_nd"], [72, 2, 1, "", "static_seed"], [72, 2, 1, "", "static_set_default_device"], [72, 2, 1, "", "static_set_default_dtype"], [72, 2, 1, "", "static_set_default_float_dtype"], [72, 2, 1, "", "static_set_default_int_dtype"], [72, 2, 1, "", "static_set_min_base"], [72, 2, 1, "", "static_set_min_denominator"], [72, 2, 1, "", "static_set_queue_timeout"], [72, 2, 1, "", "static_set_shape_array_mode"], [72, 2, 1, "", "static_set_split_factor"], [72, 2, 1, "", "static_set_tmp_dir"], [72, 2, 1, "", "static_set_with_grads"], [72, 2, 1, "", "static_shape"], [72, 2, 1, "", "static_shape_array_mode"], [72, 2, 1, "", "static_shape_to_tuple"], [72, 2, 1, "", "static_shuffle"], [72, 2, 1, "", "static_sigmoid"], [72, 2, 1, "", "static_sin"], [72, 2, 1, "", "static_sinh"], [72, 2, 1, "", "static_slogdet"], [72, 2, 1, "", "static_softmax"], [72, 2, 1, "", "static_solve"], [72, 2, 1, "", "static_split"], [72, 2, 1, "", "static_split_factor"], [72, 2, 1, "", "static_split_func_call"], [72, 2, 1, "", "static_sqrt"], [72, 2, 1, "", "static_square"], [72, 2, 1, "", "static_squeeze"], [72, 2, 1, "", "static_stable_divide"], [72, 2, 1, "", "static_stable_pow"], [72, 2, 1, "", "static_stack"], [72, 2, 1, "", "static_std"], [72, 2, 1, "", "static_stop_gradient"], [72, 2, 1, "", "static_sum"], [72, 2, 1, "", "static_supports_inplace"], [72, 2, 1, "", "static_svd"], [72, 2, 1, "", "static_svdvals"], [72, 2, 1, "", "static_swapaxes"], [72, 2, 1, "", "static_tensordot"], [72, 2, 1, "", "static_tile"], [72, 2, 1, "", "static_tmp_dir"], [72, 2, 1, "", "static_to_device"], [72, 2, 1, "", "static_to_list"], [72, 2, 1, "", "static_to_native_arrays_and_back"], [72, 2, 1, "", "static_to_scalar"], [72, 2, 1, "", "static_total_mem_on_dev"], [72, 2, 1, "", "static_tpu_is_available"], [72, 2, 1, "", "static_trace"], [72, 2, 1, "", "static_trunc"], [72, 2, 1, "", "static_try_else_none"], [72, 2, 1, "", "static_type_promote_arrays"], [72, 2, 1, "", "static_unique_all"], [72, 2, 1, "", "static_unique_inverse"], [72, 2, 1, "", "static_unique_values"], [72, 2, 1, "", "static_unset_default_device"], [72, 2, 1, "", "static_unset_default_dtype"], [72, 2, 1, "", "static_unset_default_float_dtype"], [72, 2, 1, "", "static_unset_default_int_dtype"], [72, 2, 1, "", "static_unset_shape_array_mode"], [72, 2, 1, "", "static_unset_with_grads"], [72, 2, 1, "", "static_unstack"], [72, 2, 1, "", "static_used_mem_on_dev"], [72, 2, 1, "", "static_valid_dtype"], [72, 2, 1, "", "static_value_is_nan"], [72, 2, 1, "", "static_var"], [72, 2, 1, "", "static_variable"], [72, 2, 1, "", "static_variable_data"], [72, 2, 1, "", "static_vecdot"], [72, 2, 1, "", "static_vector_norm"], [72, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [72, 2, 1, "", "static_where"], [72, 2, 1, "", "static_with_grads"], [72, 2, 1, "", "static_zero_pad"], [72, 2, 1, "", "stop_gradient"], [72, 2, 1, "", "supports_inplace"], [72, 2, 1, "", "svd"], [72, 2, 1, "", "svdvals"], [72, 2, 1, "", "tensordot"], [72, 2, 1, "", "tmp_dir"], [72, 2, 1, "", "to_native_arrays_and_back"], [72, 2, 1, "", "to_scalar"], [72, 2, 1, "", "total_mem_on_dev"], [72, 2, 1, "", "tpu_is_available"], [72, 2, 1, "", "trace"], [72, 2, 1, "", "try_else_none"], [72, 2, 1, "", "type_promote_arrays"], [72, 2, 1, "", "unique_all"], [72, 2, 1, "", "unique_inverse"], [72, 2, 1, "", "unique_values"], [72, 2, 1, "", "unset_default_device"], [72, 2, 1, "", "unset_default_dtype"], [72, 2, 1, "", "unset_default_float_dtype"], [72, 2, 1, "", "unset_default_int_dtype"], [72, 2, 1, "", "unset_shape_array_mode"], [72, 2, 1, "", "unset_with_grads"], [72, 2, 1, "", "used_mem_on_dev"], [72, 2, 1, "", "valid_dtype"], [72, 2, 1, "", "value_is_nan"], [72, 2, 1, "", "variable"], [72, 2, 1, "", "variable_data"], [72, 2, 1, "", "vecdot"], [72, 2, 1, "", "vector_to_skew_symmetric_matrix"], [72, 2, 1, "", "where"], [72, 2, 1, "", "with_grads"], [72, 2, 1, "", "zeros"]], "ivy.container.container.MultiDevContainer": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "at_dev"], [73, 2, 1, "", "at_devs"]], "ivy.container.container_methods": [[368, 3, 1, "", "abs"], [373, 3, 1, "", "acos"], [377, 3, 1, "", "acosh"], [690, 3, 1, "", "adam_step"], [694, 3, 1, "", "adam_update"], [381, 3, 1, "", "add"], [986, 3, 1, "", "all"], [608, 3, 1, "", "all_equal"], [991, 3, 1, "", "any"], [942, 3, 1, "", "argsort"], [178, 3, 1, "", "asarray"], [386, 3, 1, "", "asin"], [390, 3, 1, "", "asinh"], [251, 3, 1, "", "astype"], [395, 3, 1, "", "atan"], [399, 3, 1, "", "atan2"], [403, 3, 1, "", "atanh"], [812, 3, 1, "", "binary_cross_entropy"], [407, 3, 1, "", "bitwise_and"], [411, 3, 1, "", "bitwise_invert"], [415, 3, 1, "", "bitwise_left_shift"], [419, 3, 1, "", "bitwise_or"], [423, 3, 1, "", "bitwise_right_shift"], [427, 3, 1, "", "bitwise_xor"], [256, 3, 1, "", "broadcast_arrays"], [261, 3, 1, "", "broadcast_to"], [266, 3, 1, "", "can_cast"], [431, 3, 1, "", "ceil"], [740, 3, 1, "", "cholesky"], [828, 3, 1, "", "clip"], [619, 3, 1, "", "clip_vector_norm"], [833, 3, 1, "", "concat"], [837, 3, 1, "", "constant_pad"], [435, 3, 1, "", "cos"], [439, 3, 1, "", "cosh"], [817, 3, 1, "", "cross_entropy"], [443, 3, 1, "", "divide"], [275, 3, 1, "", "dtype"], [953, 3, 1, "", "einsum"], [184, 3, 1, "", "empty_like"], [448, 3, 1, "", "equal"], [452, 3, 1, "", "erf"], [456, 3, 1, "", "exp"], [841, 3, 1, "", "expand_dims"], [460, 3, 1, "", "expm1"], [280, 3, 1, "", "finfo"], [845, 3, 1, "", "flip"], [464, 3, 1, "", "floor"], [468, 3, 1, "", "floor_divide"], [192, 3, 1, "", "from_dlpack"], [198, 3, 1, "", "full_like"], [636, 3, 1, "", "gather_nd"], [699, 3, 1, "", "gradient_descent_update"], [472, 3, 1, "", "greater"], [476, 3, 1, "", "greater_equal"], [287, 3, 1, "", "iinfo"], [293, 3, 1, "", "is_float_dtype"], [298, 3, 1, "", "is_int_dtype"], [703, 3, 1, "", "is_variable"], [480, 3, 1, "", "isfinite"], [484, 3, 1, "", "isinf"], [488, 3, 1, "", "isnan"], [707, 3, 1, "", "lamb_update"], [711, 3, 1, "", "lars_update"], [910, 3, 1, "", "layer_norm"], [492, 3, 1, "", "less"], [496, 3, 1, "", "less_equal"], [500, 3, 1, "", "log"], [504, 3, 1, "", "log10"], [508, 3, 1, "", "log1p"], [512, 3, 1, "", "log2"], [516, 3, 1, "", "logaddexp"], [520, 3, 1, "", "logical_and"], [524, 3, 1, "", "logical_not"], [528, 3, 1, "", "logical_or"], [532, 3, 1, "", "logical_xor"], [763, 3, 1, "", "matmul"], [957, 3, 1, "", "max"], [961, 3, 1, "", "mean"], [209, 3, 1, "", "meshgrid"], [965, 3, 1, "", "min"], [538, 3, 1, "", "multiply"], [214, 3, 1, "", "native_array"], [543, 3, 1, "", "negative"], [547, 3, 1, "", "not_equal"], [222, 3, 1, "", "ones_like"], [715, 3, 1, "", "optimizer_update"], [849, 3, 1, "", "permute_dims"], [551, 3, 1, "", "positive"], [555, 3, 1, "", "pow"], [969, 3, 1, "", "prod"], [920, 3, 1, "", "random_uniform"], [559, 3, 1, "", "remainder"], [853, 3, 1, "", "repeat"], [857, 3, 1, "", "reshape"], [304, 3, 1, "", "result_type"], [861, 3, 1, "", "roll"], [563, 3, 1, "", "round"], [567, 3, 1, "", "sign"], [572, 3, 1, "", "sin"], [576, 3, 1, "", "sinh"], [165, 3, 1, "", "softplus"], [947, 3, 1, "", "sort"], [822, 3, 1, "", "sparse_cross_entropy"], [580, 3, 1, "", "sqrt"], [584, 3, 1, "", "square"], [867, 3, 1, "", "squeeze"], [871, 3, 1, "", "stack"], [370, 3, 1, "", "static_abs"], [692, 3, 1, "", "static_adam_step"], [696, 3, 1, "", "static_adam_update"], [383, 3, 1, "", "static_add"], [988, 3, 1, "", "static_all"], [610, 3, 1, "", "static_all_equal"], [993, 3, 1, "", "static_any"], [175, 3, 1, "", "static_arange"], [944, 3, 1, "", "static_argsort"], [180, 3, 1, "", "static_asarray"], [392, 3, 1, "", "static_asinh"], [253, 3, 1, "", "static_astype"], [814, 3, 1, "", "static_binary_cross_entropy"], [258, 3, 1, "", "static_broadcast_arrays"], [263, 3, 1, "", "static_broadcast_to"], [268, 3, 1, "", "static_can_cast"], [742, 3, 1, "", "static_cholesky"], [830, 3, 1, "", "static_clip"], [819, 3, 1, "", "static_cross_entropy"], [445, 3, 1, "", "static_divide"], [186, 3, 1, "", "static_empty_like"], [189, 3, 1, "", "static_eye"], [282, 3, 1, "", "static_finfo"], [194, 3, 1, "", "static_from_dlpack"], [200, 3, 1, "", "static_full_like"], [638, 3, 1, "", "static_gather_nd"], [701, 3, 1, "", "static_gradient_descent_update"], [289, 3, 1, "", "static_iinfo"], [295, 3, 1, "", "static_is_float_dtype"], [300, 3, 1, "", "static_is_int_dtype"], [705, 3, 1, "", "static_is_variable"], [709, 3, 1, "", "static_lamb_update"], [713, 3, 1, "", "static_lars_update"], [912, 3, 1, "", "static_layer_norm"], [203, 3, 1, "", "static_linspace"], [206, 3, 1, "", "static_logspace"], [211, 3, 1, "", "static_meshgrid"], [540, 3, 1, "", "static_multiply"], [216, 3, 1, "", "static_native_array"], [219, 3, 1, "", "static_ones"], [224, 3, 1, "", "static_ones_like"], [717, 3, 1, "", "static_optimizer_update"], [917, 3, 1, "", "static_randint"], [922, 3, 1, "", "static_random_uniform"], [306, 3, 1, "", "static_result_type"], [863, 3, 1, "", "static_roll"], [569, 3, 1, "", "static_sign"], [167, 3, 1, "", "static_softplus"], [949, 3, 1, "", "static_sort"], [824, 3, 1, "", "static_sparse_cross_entropy"], [587, 3, 1, "", "static_subtract"], [592, 3, 1, "", "static_tan"], [597, 3, 1, "", "static_tanh"], [677, 3, 1, "", "static_to_numpy"], [226, 3, 1, "", "static_tril"], [231, 3, 1, "", "static_triu"], [933, 3, 1, "", "static_unique_counts"], [236, 3, 1, "", "static_zeros"], [239, 3, 1, "", "static_zeros_like"], [973, 3, 1, "", "std"], [589, 3, 1, "", "subtract"], [977, 3, 1, "", "sum"], [875, 3, 1, "", "swapaxes"], [594, 3, 1, "", "tan"], [599, 3, 1, "", "tanh"], [879, 3, 1, "", "tile"], [679, 3, 1, "", "to_numpy"], [228, 3, 1, "", "tril"], [233, 3, 1, "", "triu"], [603, 3, 1, "", "trunc"], [935, 3, 1, "", "unique_counts"], [981, 3, 1, "", "var"], [883, 3, 1, "", "zero_pad"], [241, 3, 1, "", "zeros_like"]], "ivy.container.creation": [[75, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[75, 2, 1, "", "asarray"], [75, 2, 1, "", "empty_like"], [75, 2, 1, "", "from_dlpack"], [75, 2, 1, "", "full_like"], [75, 2, 1, "", "meshgrid"], [75, 2, 1, "", "native_array"], [75, 2, 1, "", "ones_like"], [75, 2, 1, "", "static_arange"], [75, 2, 1, "", "static_asarray"], [75, 2, 1, "", "static_empty_like"], [75, 2, 1, "", "static_eye"], [75, 2, 1, "", "static_from_dlpack"], [75, 2, 1, "", "static_full_like"], [75, 2, 1, "", "static_linspace"], [75, 2, 1, "", "static_logspace"], [75, 2, 1, "", "static_meshgrid"], [75, 2, 1, "", "static_native_array"], [75, 2, 1, "", "static_ones"], [75, 2, 1, "", "static_ones_like"], [75, 2, 1, "", "static_tril"], [75, 2, 1, "", "static_triu"], [75, 2, 1, "", "static_zeros"], [75, 2, 1, "", "static_zeros_like"], [75, 2, 1, "", "tril"], [75, 2, 1, "", "triu"], [75, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[77, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[77, 2, 1, "", "astype"], [77, 2, 1, "", "broadcast_arrays"], [77, 2, 1, "", "broadcast_to"], [77, 2, 1, "", "can_cast"], [77, 2, 1, "", "dtype"], [77, 2, 1, "", "finfo"], [77, 2, 1, "", "iinfo"], [77, 2, 1, "", "is_float_dtype"], [77, 2, 1, "", "is_int_dtype"], [77, 2, 1, "", "result_type"], [77, 2, 1, "", "static_astype"], [77, 2, 1, "", "static_broadcast_arrays"], [77, 2, 1, "", "static_broadcast_to"], [77, 2, 1, "", "static_can_cast"], [77, 2, 1, "", "static_finfo"], [77, 2, 1, "", "static_iinfo"], [77, 2, 1, "", "static_is_float_dtype"], [77, 2, 1, "", "static_is_int_dtype"], [77, 2, 1, "", "static_result_type"]], "ivy.container.device": [[79, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[81, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[81, 2, 1, "", "abs"], [81, 2, 1, "", "acos"], [81, 2, 1, "", "acosh"], [81, 2, 1, "", "add"], [81, 2, 1, "", "asin"], [81, 2, 1, "", "asinh"], [81, 2, 1, "", "atan"], [81, 2, 1, "", "atan2"], [81, 2, 1, "", "atanh"], [81, 2, 1, "", "bitwise_and"], [81, 2, 1, "", "bitwise_invert"], [81, 2, 1, "", "bitwise_left_shift"], [81, 2, 1, "", "bitwise_or"], [81, 2, 1, "", "bitwise_right_shift"], [81, 2, 1, "", "bitwise_xor"], [81, 2, 1, "", "ceil"], [81, 2, 1, "", "cos"], [81, 2, 1, "", "cosh"], [81, 2, 1, "", "divide"], [81, 2, 1, "", "equal"], [81, 2, 1, "", "erf"], [81, 2, 1, "", "exp"], [81, 2, 1, "", "expm1"], [81, 2, 1, "", "floor"], [81, 2, 1, "", "floor_divide"], [81, 2, 1, "", "greater"], [81, 2, 1, "", "greater_equal"], [81, 2, 1, "", "isfinite"], [81, 2, 1, "", "isinf"], [81, 2, 1, "", "isnan"], [81, 2, 1, "", "less"], [81, 2, 1, "", "less_equal"], [81, 2, 1, "", "log"], [81, 2, 1, "", "log10"], [81, 2, 1, "", "log1p"], [81, 2, 1, "", "log2"], [81, 2, 1, "", "logaddexp"], [81, 2, 1, "", "logical_and"], [81, 2, 1, "", "logical_not"], [81, 2, 1, "", "logical_or"], [81, 2, 1, "", "logical_xor"], [81, 2, 1, "", "multiply"], [81, 2, 1, "", "negative"], [81, 2, 1, "", "not_equal"], [81, 2, 1, "", "positive"], [81, 2, 1, "", "pow"], [81, 2, 1, "", "remainder"], [81, 2, 1, "", "round"], [81, 2, 1, "", "sign"], [81, 2, 1, "", "sin"], [81, 2, 1, "", "sinh"], [81, 2, 1, "", "sqrt"], [81, 2, 1, "", "square"], [81, 2, 1, "", "static_abs"], [81, 2, 1, "", "static_add"], [81, 2, 1, "", "static_asinh"], [81, 2, 1, "", "static_divide"], [81, 2, 1, "", "static_multiply"], [81, 2, 1, "", "static_sign"], [81, 2, 1, "", "static_subtract"], [81, 2, 1, "", "static_tan"], [81, 2, 1, "", "static_tanh"], [81, 2, 1, "", "subtract"], [81, 2, 1, "", "tan"], [81, 2, 1, "", "tanh"], [81, 2, 1, "", "trunc"]], "ivy.container.general": [[83, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[83, 2, 1, "", "all_equal"], [83, 2, 1, "", "clip_vector_norm"], [83, 2, 1, "", "gather_nd"], [83, 2, 1, "", "static_all_equal"], [83, 2, 1, "", "static_gather_nd"], [83, 2, 1, "", "static_to_numpy"], [83, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[85, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[85, 2, 1, "", "adam_step"], [85, 2, 1, "", "adam_update"], [85, 2, 1, "", "gradient_descent_update"], [85, 2, 1, "", "is_variable"], [85, 2, 1, "", "lamb_update"], [85, 2, 1, "", "lars_update"], [85, 2, 1, "", "optimizer_update"], [85, 2, 1, "", "static_adam_step"], [85, 2, 1, "", "static_adam_update"], [85, 2, 1, "", "static_gradient_descent_update"], [85, 2, 1, "", "static_is_variable"], [85, 2, 1, "", "static_lamb_update"], [85, 2, 1, "", "static_lars_update"], [85, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[87, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[89, 1, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[91, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[91, 2, 1, "", "cholesky"], [91, 2, 1, "", "matmul"], [91, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[93, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[93, 2, 1, "", "binary_cross_entropy"], [93, 2, 1, "", "cross_entropy"], [93, 2, 1, "", "sparse_cross_entropy"], [93, 2, 1, "", "static_binary_cross_entropy"], [93, 2, 1, "", "static_cross_entropy"], [93, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[95, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[95, 2, 1, "", "clip"], [95, 2, 1, "", "concat"], [95, 2, 1, "", "constant_pad"], [95, 2, 1, "", "expand_dims"], [95, 2, 1, "", "flip"], [95, 2, 1, "", "permute_dims"], [95, 2, 1, "", "repeat"], [95, 2, 1, "", "reshape"], [95, 2, 1, "", "roll"], [95, 2, 1, "", "squeeze"], [95, 2, 1, "", "stack"], [95, 2, 1, "", "static_clip"], [95, 2, 1, "", "static_roll"], [95, 2, 1, "", "swapaxes"], [95, 2, 1, "", "tile"], [95, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[97, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[97, 2, 1, "", "layer_norm"], [97, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[99, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[99, 2, 1, "", "random_uniform"], [99, 2, 1, "", "static_randint"], [99, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[101, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[103, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[103, 2, 1, "", "static_unique_counts"], [103, 2, 1, "", "unique_counts"]], "ivy.container.sorting": [[105, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[105, 2, 1, "", "argsort"], [105, 2, 1, "", "sort"], [105, 2, 1, "", "static_argsort"], [105, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[107, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[107, 2, 1, "", "einsum"], [107, 2, 1, "", "max"], [107, 2, 1, "", "mean"], [107, 2, 1, "", "min"], [107, 2, 1, "", "prod"], [107, 2, 1, "", "std"], [107, 2, 1, "", "sum"], [107, 2, 1, "", "var"]], "ivy.container.utility": [[109, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[109, 2, 1, "", "all"], [109, 2, 1, "", "any"], [109, 2, 1, "", "static_all"], [109, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[111, 3, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[148, 3, 1, "", "handle_nestable"], [149, 3, 1, "", "handle_out_argument"], [150, 3, 1, "", "infer_device"], [151, 3, 1, "", "infer_dtype"], [152, 3, 1, "", "inputs_to_ivy_arrays"], [153, 3, 1, "", "inputs_to_native_arrays"], [154, 3, 1, "", "outputs_to_ivy_arrays"], [155, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[157, 0, 0, "-", "activations"], [169, 0, 0, "-", "compilation"], [171, 0, 0, "-", "constants"], [172, 0, 0, "-", "creation"], [243, 0, 0, "-", "data_type"], [315, 0, 0, "-", "device"], [365, 0, 0, "-", "elementwise"], [605, 0, 0, "-", "general"], [686, 0, 0, "-", "gradients"], [724, 0, 0, "-", "layers"], [737, 0, 0, "-", "linear_algebra"], [809, 0, 0, "-", "losses"], [825, 0, 0, "-", "manipulation"], [885, 0, 0, "-", "meta"], [889, 0, 0, "-", "nest"], [907, 0, 0, "-", "norms"], [913, 0, 0, "-", "random"], [925, 0, 0, "-", "searching"], [930, 0, 0, "-", "set"], [939, 0, 0, "-", "sorting"], [950, 0, 0, "-", "statistical"], [983, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[158, 3, 1, "", "gelu"], [159, 3, 1, "", "leaky_relu"], [160, 3, 1, "", "relu"], [161, 3, 1, "", "sigmoid"], [162, 3, 1, "", "softmax"], [166, 3, 1, "", "softplus"], [168, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[170, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[171, 5, 1, "", "e"], [171, 5, 1, "", "inf"], [171, 5, 1, "", "nan"], [171, 5, 1, "", "newaxis"], [171, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[174, 3, 1, "", "arange"], [172, 3, 1, "", "array"], [179, 3, 1, "", "asarray"], [181, 3, 1, "", "empty"], [185, 3, 1, "", "empty_like"], [188, 3, 1, "", "eye"], [193, 3, 1, "", "from_dlpack"], [195, 3, 1, "", "full"], [199, 3, 1, "", "full_like"], [202, 3, 1, "", "linspace"], [205, 3, 1, "", "logspace"], [210, 3, 1, "", "meshgrid"], [215, 3, 1, "", "native_array"], [218, 3, 1, "", "ones"], [223, 3, 1, "", "ones_like"], [229, 3, 1, "", "tril"], [234, 3, 1, "", "triu"], [237, 3, 1, "", "zeros"], [242, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[243, 1, 1, "", "DefaultDtype"], [243, 1, 1, "", "DefaultFloatDtype"], [243, 1, 1, "", "DefaultIntDtype"], [247, 3, 1, "", "as_ivy_dtype"], [248, 3, 1, "", "as_native_dtype"], [252, 3, 1, "", "astype"], [257, 3, 1, "", "broadcast_arrays"], [262, 3, 1, "", "broadcast_to"], [267, 3, 1, "", "can_cast"], [269, 3, 1, "", "closest_valid_dtype"], [270, 3, 1, "", "default_dtype"], [271, 3, 1, "", "default_float_dtype"], [272, 3, 1, "", "default_int_dtype"], [276, 3, 1, "", "dtype"], [277, 3, 1, "", "dtype_bits"], [281, 3, 1, "", "finfo"], [283, 3, 1, "", "function_supported_dtypes"], [284, 3, 1, "", "function_unsupported_dtypes"], [288, 3, 1, "", "iinfo"], [290, 3, 1, "", "invalid_dtype"], [294, 3, 1, "", "is_float_dtype"], [299, 3, 1, "", "is_int_dtype"], [301, 3, 1, "", "promote_types"], [305, 3, 1, "", "result_type"], [307, 3, 1, "", "set_default_dtype"], [308, 3, 1, "", "set_default_float_dtype"], [309, 3, 1, "", "set_default_int_dtype"], [310, 3, 1, "", "type_promote_arrays"], [311, 3, 1, "", "unset_default_dtype"], [312, 3, 1, "", "unset_default_float_dtype"], [313, 3, 1, "", "unset_default_int_dtype"], [314, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[243, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[243, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[243, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[315, 1, 1, "", "DefaultDevice"], [317, 1, 1, "", "DevClonedItem"], [318, 1, 1, "", "DevClonedIter"], [319, 1, 1, "", "DevClonedNest"], [320, 1, 1, "", "DevDistItem"], [321, 1, 1, "", "DevDistIter"], [322, 1, 1, "", "DevDistNest"], [315, 1, 1, "", "DevManager"], [324, 1, 1, "", "DevMapper"], [325, 1, 1, "", "DevMapperMultiProc"], [315, 1, 1, "", "MultiDev"], [327, 1, 1, "", "MultiDevItem"], [328, 1, 1, "", "MultiDevIter"], [329, 1, 1, "", "MultiDevNest"], [330, 1, 1, "", "Profiler"], [331, 3, 1, "", "as_ivy_dev"], [332, 3, 1, "", "as_native_dev"], [333, 3, 1, "", "clear_mem_on_dev"], [334, 3, 1, "", "default_device"], [335, 3, 1, "", "dev"], [336, 3, 1, "", "dev_clone"], [337, 3, 1, "", "dev_clone_array"], [338, 3, 1, "", "dev_clone_iter"], [339, 3, 1, "", "dev_clone_nest"], [340, 3, 1, "", "dev_dist"], [341, 3, 1, "", "dev_dist_array"], [342, 3, 1, "", "dev_dist_iter"], [343, 3, 1, "", "dev_dist_nest"], [344, 3, 1, "", "dev_unify"], [345, 3, 1, "", "dev_unify_array"], [346, 3, 1, "", "dev_unify_iter"], [347, 3, 1, "", "dev_unify_nest"], [348, 3, 1, "", "dev_util"], [349, 3, 1, "", "get_all_ivy_arrays_on_dev"], [350, 3, 1, "", "gpu_is_available"], [351, 3, 1, "", "num_cpu_cores"], [352, 3, 1, "", "num_gpus"], [353, 3, 1, "", "num_ivy_arrays_on_dev"], [354, 3, 1, "", "percent_used_mem_on_dev"], [355, 3, 1, "", "print_all_ivy_arrays_on_dev"], [356, 3, 1, "", "set_default_device"], [357, 3, 1, "", "set_split_factor"], [358, 3, 1, "", "split_factor"], [359, 3, 1, "", "split_func_call"], [360, 3, 1, "", "to_device"], [361, 3, 1, "", "total_mem_on_dev"], [362, 3, 1, "", "tpu_is_available"], [363, 3, 1, "", "unset_default_device"], [364, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[315, 2, 1, "", "__enter__"], [315, 2, 1, "", "__exit__"], [315, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[315, 2, 1, "", "__init__"], [315, 2, 1, "", "da_tune_step"], [315, 4, 1, "", "dim_size"], [315, 2, 1, "", "ds_tune_step"], [315, 2, 1, "", "map"], [315, 2, 1, "", "repeated_config_check"], [315, 4, 1, "", "tune_step"], [315, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[324, 2, 1, "", "__init__"], [324, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[325, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[315, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "items"], [327, 2, 1, "", "keys"], [327, 4, 1, "", "shape"], [327, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[328, 2, 1, "", "__init__"], [328, 2, 1, "", "at_dev"], [328, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[329, 2, 1, "", "__init__"], [329, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[330, 2, 1, "", "__init__"], [330, 2, 1, "", "start"], [330, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[369, 3, 1, "", "abs"], [374, 3, 1, "", "acos"], [378, 3, 1, "", "acosh"], [382, 3, 1, "", "add"], [387, 3, 1, "", "asin"], [391, 3, 1, "", "asinh"], [396, 3, 1, "", "atan"], [400, 3, 1, "", "atan2"], [404, 3, 1, "", "atanh"], [408, 3, 1, "", "bitwise_and"], [412, 3, 1, "", "bitwise_invert"], [416, 3, 1, "", "bitwise_left_shift"], [420, 3, 1, "", "bitwise_or"], [424, 3, 1, "", "bitwise_right_shift"], [428, 3, 1, "", "bitwise_xor"], [432, 3, 1, "", "ceil"], [436, 3, 1, "", "cos"], [440, 3, 1, "", "cosh"], [444, 3, 1, "", "divide"], [449, 3, 1, "", "equal"], [453, 3, 1, "", "erf"], [457, 3, 1, "", "exp"], [461, 3, 1, "", "expm1"], [465, 3, 1, "", "floor"], [469, 3, 1, "", "floor_divide"], [473, 3, 1, "", "greater"], [477, 3, 1, "", "greater_equal"], [481, 3, 1, "", "isfinite"], [485, 3, 1, "", "isinf"], [489, 3, 1, "", "isnan"], [493, 3, 1, "", "less"], [497, 3, 1, "", "less_equal"], [501, 3, 1, "", "log"], [505, 3, 1, "", "log10"], [509, 3, 1, "", "log1p"], [513, 3, 1, "", "log2"], [517, 3, 1, "", "logaddexp"], [521, 3, 1, "", "logical_and"], [525, 3, 1, "", "logical_not"], [529, 3, 1, "", "logical_or"], [533, 3, 1, "", "logical_xor"], [534, 3, 1, "", "maximum"], [535, 3, 1, "", "minimum"], [539, 3, 1, "", "multiply"], [544, 3, 1, "", "negative"], [548, 3, 1, "", "not_equal"], [552, 3, 1, "", "positive"], [556, 3, 1, "", "pow"], [560, 3, 1, "", "remainder"], [564, 3, 1, "", "round"], [568, 3, 1, "", "sign"], [573, 3, 1, "", "sin"], [577, 3, 1, "", "sinh"], [581, 3, 1, "", "sqrt"], [585, 3, 1, "", "square"], [590, 3, 1, "", "subtract"], [595, 3, 1, "", "tan"], [600, 3, 1, "", "tanh"], [604, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[609, 3, 1, "", "all_equal"], [611, 3, 1, "", "arg_info"], [612, 3, 1, "", "arg_names"], [613, 3, 1, "", "array_equal"], [614, 3, 1, "", "arrays_equal"], [615, 3, 1, "", "assert_supports_inplace"], [616, 3, 1, "", "cache_fn"], [617, 3, 1, "", "clip_matrix_norm"], [620, 3, 1, "", "clip_vector_norm"], [621, 3, 1, "", "container_types"], [622, 3, 1, "", "copy_array"], [623, 3, 1, "", "cumprod"], [624, 3, 1, "", "cumsum"], [625, 3, 1, "", "current_backend_str"], [626, 3, 1, "", "default"], [627, 3, 1, "", "einops_rearrange"], [628, 3, 1, "", "einops_reduce"], [629, 3, 1, "", "einops_repeat"], [630, 3, 1, "", "exists"], [631, 3, 1, "", "floormod"], [632, 3, 1, "", "fourier_encode"], [633, 3, 1, "", "gather"], [637, 3, 1, "", "gather_nd"], [639, 3, 1, "", "get_all_arrays_in_memory"], [640, 3, 1, "", "get_min_base"], [641, 3, 1, "", "get_min_denominator"], [642, 3, 1, "", "get_num_dims"], [643, 3, 1, "", "get_referrers_recursive"], [644, 3, 1, "", "has_nans"], [645, 3, 1, "", "indices_where"], [646, 3, 1, "", "inplace_arrays_supported"], [647, 3, 1, "", "inplace_decrement"], [648, 3, 1, "", "inplace_increment"], [649, 3, 1, "", "inplace_update"], [650, 3, 1, "", "inplace_variables_supported"], [651, 3, 1, "", "is_array"], [652, 3, 1, "", "is_ivy_array"], [653, 3, 1, "", "is_ivy_container"], [654, 3, 1, "", "is_native_array"], [655, 3, 1, "", "match_kwargs"], [656, 3, 1, "", "multiprocessing"], [657, 3, 1, "", "num_arrays_in_memory"], [658, 3, 1, "", "one_hot"], [659, 3, 1, "", "print_all_arrays_in_memory"], [660, 3, 1, "", "queue_timeout"], [661, 3, 1, "", "scatter_flat"], [662, 3, 1, "", "scatter_nd"], [663, 3, 1, "", "set_min_base"], [664, 3, 1, "", "set_min_denominator"], [665, 3, 1, "", "set_queue_timeout"], [666, 3, 1, "", "set_shape_array_mode"], [667, 3, 1, "", "set_tmp_dir"], [668, 3, 1, "", "shape"], [669, 3, 1, "", "shape_array_mode"], [670, 3, 1, "", "shape_to_tuple"], [671, 3, 1, "", "stable_divide"], [672, 3, 1, "", "stable_pow"], [673, 3, 1, "", "supports_inplace"], [674, 3, 1, "", "tmp_dir"], [675, 3, 1, "", "to_list"], [680, 3, 1, "", "to_numpy"], [681, 3, 1, "", "to_scalar"], [682, 3, 1, "", "try_else_none"], [683, 3, 1, "", "unset_shape_array_mode"], [684, 3, 1, "", "unstack"], [685, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[686, 1, 1, "", "GradientTracking"], [691, 3, 1, "", "adam_step"], [695, 3, 1, "", "adam_update"], [697, 3, 1, "", "execute_with_gradients"], [700, 3, 1, "", "gradient_descent_update"], [704, 3, 1, "", "is_variable"], [708, 3, 1, "", "lamb_update"], [712, 3, 1, "", "lars_update"], [716, 3, 1, "", "optimizer_update"], [718, 3, 1, "", "set_with_grads"], [719, 3, 1, "", "stop_gradient"], [720, 3, 1, "", "unset_with_grads"], [721, 3, 1, "", "variable"], [722, 3, 1, "", "variable_data"], [723, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[686, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[725, 3, 1, "", "conv1d"], [726, 3, 1, "", "conv1d_transpose"], [727, 3, 1, "", "conv2d"], [728, 3, 1, "", "conv2d_transpose"], [729, 3, 1, "", "conv3d"], [730, 3, 1, "", "conv3d_transpose"], [731, 3, 1, "", "depthwise_conv2d"], [732, 3, 1, "", "dropout"], [733, 3, 1, "", "linear"], [734, 3, 1, "", "lstm_update"], [735, 3, 1, "", "multi_head_attention"], [736, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[741, 3, 1, "", "cholesky"], [745, 3, 1, "", "cross"], [748, 3, 1, "", "det"], [751, 3, 1, "", "diagonal"], [754, 3, 1, "", "eigh"], [757, 3, 1, "", "eigvalsh"], [760, 3, 1, "", "inv"], [764, 3, 1, "", "matmul"], [767, 3, 1, "", "matrix_norm"], [768, 3, 1, "", "matrix_power"], [771, 3, 1, "", "matrix_rank"], [774, 3, 1, "", "matrix_transpose"], [777, 3, 1, "", "outer"], [780, 3, 1, "", "pinv"], [783, 3, 1, "", "qr"], [784, 3, 1, "", "slogdet"], [787, 3, 1, "", "solve"], [790, 3, 1, "", "svd"], [793, 3, 1, "", "svdvals"], [796, 3, 1, "", "tensordot"], [799, 3, 1, "", "trace"], [802, 3, 1, "", "vecdot"], [805, 3, 1, "", "vector_norm"], [808, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[813, 3, 1, "", "binary_cross_entropy"], [818, 3, 1, "", "cross_entropy"], [823, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[829, 3, 1, "", "clip"], [834, 3, 1, "", "concat"], [838, 3, 1, "", "constant_pad"], [842, 3, 1, "", "expand_dims"], [846, 3, 1, "", "flip"], [850, 3, 1, "", "permute_dims"], [854, 3, 1, "", "repeat"], [858, 3, 1, "", "reshape"], [862, 3, 1, "", "roll"], [864, 3, 1, "", "split"], [868, 3, 1, "", "squeeze"], [872, 3, 1, "", "stack"], [876, 3, 1, "", "swapaxes"], [880, 3, 1, "", "tile"], [884, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[886, 3, 1, "", "fomaml_step"], [887, 3, 1, "", "maml_step"], [888, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[890, 3, 1, "", "all_nested_indices"], [891, 3, 1, "", "copy_nest"], [892, 3, 1, "", "index_nest"], [893, 3, 1, "", "insert_into_nest_at_index"], [894, 3, 1, "", "insert_into_nest_at_indices"], [895, 3, 1, "", "map"], [896, 3, 1, "", "map_nest_at_index"], [897, 3, 1, "", "map_nest_at_indices"], [898, 3, 1, "", "multi_index_nest"], [899, 3, 1, "", "nested_any"], [900, 3, 1, "", "nested_indices_where"], [901, 3, 1, "", "nested_map"], [902, 3, 1, "", "nested_multi_map"], [903, 3, 1, "", "prune_nest_at_index"], [904, 3, 1, "", "prune_nest_at_indices"], [905, 3, 1, "", "set_nest_at_index"], [906, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[911, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[914, 3, 1, "", "multinomial"], [916, 3, 1, "", "randint"], [918, 3, 1, "", "random_normal"], [921, 3, 1, "", "random_uniform"], [923, 3, 1, "", "seed"], [924, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[926, 3, 1, "", "argmax"], [927, 3, 1, "", "argmin"], [928, 3, 1, "", "nonzero"], [929, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[931, 3, 1, "", "unique_all"], [936, 3, 1, "", "unique_counts"], [937, 3, 1, "", "unique_inverse"], [938, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[943, 3, 1, "", "argsort"], [948, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[954, 3, 1, "", "einsum"], [958, 3, 1, "", "max"], [962, 3, 1, "", "mean"], [966, 3, 1, "", "min"], [970, 3, 1, "", "prod"], [974, 3, 1, "", "std"], [978, 3, 1, "", "sum"], [982, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[987, 3, 1, "", "all"], [992, 3, 1, "", "any"]], "ivy.inspection": [[998, 3, 1, "", "add_array_specs"], [999, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[1002, 0, 0, "-", "activations"], [1005, 0, 0, "-", "converters"], [1007, 0, 0, "-", "initializers"], [1016, 0, 0, "-", "layers"], [1028, 0, 0, "-", "module"], [1030, 0, 0, "-", "norms"], [1032, 0, 0, "-", "optimizers"], [1038, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1003, 1, 1, "", "GEGLU"], [1004, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1003, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1004, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1006, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1007, 1, 1, "", "Constant"], [1009, 1, 1, "", "FirstLayerSiren"], [1010, 1, 1, "", "GlorotUniform"], [1007, 1, 1, "", "KaimingNormal"], [1012, 1, 1, "", "Ones"], [1013, 1, 1, "", "Siren"], [1007, 1, 1, "", "Uniform"], [1015, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1007, 2, 1, "", "__init__"], [1007, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1009, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1010, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1007, 2, 1, "", "__init__"], [1007, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1012, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1013, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1007, 2, 1, "", "__init__"], [1007, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1015, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1017, 1, 1, "", "Conv1D"], [1018, 1, 1, "", "Conv1DTranspose"], [1019, 1, 1, "", "Conv2D"], [1020, 1, 1, "", "Conv2DTranspose"], [1021, 1, 1, "", "Conv3D"], [1022, 1, 1, "", "Conv3DTranspose"], [1023, 1, 1, "", "DepthwiseConv2D"], [1024, 1, 1, "", "Dropout"], [1025, 1, 1, "", "LSTM"], [1026, 1, 1, "", "Linear"], [1027, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1017, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1018, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1019, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1020, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1021, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1022, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1023, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1024, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1025, 2, 1, "", "__init__"], [1025, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1026, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1027, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1029, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1029, 2, 1, "", "__init__"], [1029, 2, 1, "", "build"], [1029, 4, 1, "", "build_mode"], [1029, 4, 1, "", "built"], [1029, 2, 1, "", "check_submod_rets"], [1029, 2, 1, "", "get_mod_key"], [1029, 2, 1, "", "mod_depth"], [1029, 2, 1, "", "mod_height"], [1029, 2, 1, "", "mod_with_top_mod_key_chain"], [1029, 2, 1, "", "save_weights"], [1029, 2, 1, "", "show_mod_in_top_mod"], [1029, 2, 1, "", "show_structure"], [1029, 2, 1, "", "show_v_in_top_v"], [1029, 2, 1, "", "sub_mods"], [1029, 2, 1, "", "track_submod_call_order"], [1029, 2, 1, "", "track_submod_rets"], [1029, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1031, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1031, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1033, 1, 1, "", "Adam"], [1034, 1, 1, "", "LAMB"], [1035, 1, 1, "", "LARS"], [1036, 1, 1, "", "Optimizer"], [1037, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1033, 2, 1, "", "__init__"], [1033, 2, 1, "", "set_state"], [1033, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1034, 2, 1, "", "__init__"], [1034, 2, 1, "", "set_state"], [1034, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1035, 2, 1, "", "__init__"], [1035, 2, 1, "", "set_state"], [1035, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1036, 2, 1, "", "__init__"], [1036, 2, 1, "", "set_state"], [1036, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1037, 2, 1, "", "__init__"], [1037, 2, 1, "", "set_state"], [1037, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1039, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1039, 2, 1, "", "__init__"]], "ivy.verbosity": [[1042, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 113, 120, 129, 146], "handler": [0, 129], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 994], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 146], "competit": 15, "do": [15, 118], "work": [15, 21], "The": [15, 19, 131, 146], "arrai": [15, 114, 117, 122, 131, 164, 177, 183, 191, 197, 208, 213, 221, 227, 232, 240, 250, 255, 260, 265, 274, 279, 286, 292, 297, 303, 367, 372, 376, 380, 385, 389, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 438, 442, 447, 451, 455, 459, 463, 467, 471, 475, 479, 483, 487, 491, 495, 499, 503, 507, 511, 515, 519, 523, 527, 531, 537, 542, 546, 550, 554, 558, 562, 566, 571, 575, 579, 583, 588, 593, 598, 602, 607, 635, 678, 689, 739, 744, 747, 750, 753, 756, 759, 762, 766, 770, 773, 776, 779, 782, 786, 789, 792, 795, 798, 801, 804, 807, 811, 816, 821, 827, 832, 836, 840, 844, 848, 852, 856, 860, 866, 870, 874, 878, 882, 909, 934, 941, 946, 952, 956, 960, 964, 968, 972, 976, 980, 985, 990], "api": [15, 20, 113, 117, 123, 129, 131, 133, 134], "why": [16, 118], "unifi": [16, 131], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 994], "set": [18, 57, 102, 120, 930], "up": 18, "clone": 18, "ivi": [18, 113, 116, 118, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 164, 165, 166, 167, 174, 175, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 274, 275, 276, 279, 280, 281, 282, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 303, 304, 305, 306, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 402, 403, 404, 406, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 479, 480, 481, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 501, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 528, 529, 531, 532, 533, 537, 538, 539, 540, 542, 543, 544, 546, 547, 548, 550, 551, 552, 554, 555, 556, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 607, 608, 609, 610, 619, 620, 635, 636, 637, 638, 677, 678, 679, 680, 689, 690, 691, 692, 694, 695, 696, 699, 700, 701, 703, 704, 705, 707, 708, 709, 711, 712, 713, 715, 716, 717, 739, 740, 741, 742, 744, 745, 747, 748, 750, 751, 753, 754, 756, 757, 759, 760, 762, 763, 764, 766, 767, 770, 771, 773, 774, 776, 777, 779, 780, 782, 783, 786, 787, 789, 790, 792, 793, 795, 796, 798, 799, 801, 802, 804, 805, 807, 808, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 827, 828, 829, 830, 832, 833, 834, 836, 837, 838, 840, 841, 842, 844, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 863, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 909, 910, 911, 912, 916, 917, 920, 921, 922, 933, 934, 935, 936, 941, 942, 943, 944, 946, 947, 948, 949, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 965, 966, 968, 969, 970, 972, 973, 974, 976, 977, 978, 980, 981, 982, 985, 986, 987, 988, 990, 991, 992, 993], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 132], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 127], "commit": [18, 19, 127], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 117, 118], "local": 19, "open": 20, "task": 20, "function": [20, 114, 118, 119, 121, 123, 124, 125, 129, 134, 146], "format": [20, 127], "frontend": [20, 134], "build": [21, 129], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 146], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "activ": [22, 67, 157, 1002], "arraywithactiv": 23, "convers": 24, "args_to_ivi": 25, "args_to_n": 26, "to_ivi": 27, "to_n": 28, "creation": [29, 74, 172], "arraywithcr": 30, "data": [31, 76, 118, 124, 132, 146, 243, 930, 931, 932, 936, 938], "type": [31, 76, 119, 124, 146, 243], "arraywithdatatyp": 32, "devic": [33, 78, 114, 125, 315], "arraywithdevic": 34, "elementwis": [35, 80, 365], "arraywithelementwis": 36, "gener": [37, 82, 118, 605], "arraywithgener": 38, "gradient": [39, 84, 686], "arraywithgradi": 40, "imag": [41, 86], "arraywithimag": 42, "layer": [43, 88, 724, 1016], "arraywithlay": 44, "linear": [45, 90, 733, 737, 1026], "algebra": [45, 90, 737], "arraywithlinearalgebra": 46, "loss": [47, 92, 809], "arraywithloss": 48, "manipul": [49, 94, 825], "arraywithmanipul": 50, "norm": [51, 96, 907, 1030], "arraywithnorm": 52, "random": [53, 98, 913], "arraywithrandom": 54, "search": [55, 100, 925], "arraywithsearch": 56, "arraywithset": 58, "sort": [59, 104, 939, 945, 946, 947, 948], "arraywithsort": 60, "statist": [61, 106, 950], "arraywithstatist": 62, "util": [63, 108, 983], "arraywithutil": 64, "wrap": [65, 110, 121], "add_ivy_array_instance_method": 66, "containerwithactiv": 68, "base": 69, "containerbas": 70, "contain": [71, 72, 123, 132, 165, 167, 175, 178, 180, 184, 186, 189, 192, 194, 198, 200, 203, 206, 209, 211, 214, 216, 219, 222, 224, 226, 228, 231, 233, 236, 239, 241, 251, 253, 256, 258, 261, 263, 266, 268, 275, 280, 282, 287, 289, 293, 295, 298, 300, 304, 306, 368, 370, 373, 377, 381, 383, 386, 390, 392, 395, 399, 403, 407, 411, 415, 419, 423, 427, 431, 435, 439, 443, 445, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 538, 540, 543, 547, 551, 555, 559, 563, 567, 569, 572, 576, 580, 584, 587, 589, 592, 594, 597, 599, 603, 608, 610, 619, 636, 638, 677, 679, 690, 692, 694, 696, 699, 701, 703, 705, 707, 709, 711, 713, 715, 717, 740, 742, 763, 812, 814, 817, 819, 822, 824, 828, 830, 833, 837, 841, 845, 849, 853, 857, 861, 863, 867, 871, 875, 879, 883, 910, 912, 917, 920, 922, 933, 935, 942, 944, 947, 949, 953, 957, 961, 965, 969, 973, 977, 981, 986, 988, 991, 993], "multidevcontain": 73, "containerwithcr": 75, "containerwithdatatyp": 77, "containerwithdevic": 79, "containerwithelementwis": 81, "containerwithgener": 83, "containerwithgradi": 85, "containerwithimag": 87, "containerwithlay": 89, "containerwithlinearalgebra": 91, "containerwithloss": 93, "containerwithmanipul": 95, "containerwithnorm": 97, "containerwithrandom": 99, "containerwithsearch": 101, "containerwithset": 103, "containerwithsort": 105, "containerwithstatist": 107, "containerwithutil": 109, "add_ivy_container_instance_method": 111, "deep": 112, "dive": 112, "navig": 113, "code": 113, "categor": 113, "submodul": 113, "design": [113, 128, 994], "argument": [114, 124, 125, 126], "exampl": [114, 116, 127], "out": [114, 126], "dtype": [114, 273, 274, 275, 276], "number": 114, "oper": [114, 131, 146], "integ": 114, "sequenc": 114, "nestabl": [114, 119, 123], "docstr": [115, 116], "tan": [116, 591, 593, 594, 595], "roll": [116, 859, 860, 861, 862], "add": [116, 379, 380, 381, 382], "hypothesi": 118, "import": 118, "strategi": 118, "integr": 118, "we": 118, "need": 118, "helper": 118, "how": 118, "write": 118, "effect": 118, "bonu": 118, "extend": 118, "featur": 118, "self": 118, "consist": 118, "explicit": 118, "test_array_funct": 118, "primari": 119, "composit": 119, "mix": 119, "standalon": 119, "conveni": 119, "nativ": 122, "handl": 122, "instanc": [123, 131], "method": [123, 131, 132], "static": 123, "special": 123, "modul": [124, 125, 133, 1028, 1029], "other": [124, 125], "inplac": 126, "updat": 126, "copi": 126, "lint": 127, "check": [127, 146], "hook": 127, "automat": 127, "reformat": 127, "befor": 127, "block": 129, "framework": [129, 130, 1001], "graph": [129, 134], "compil": [129, 134, 169, 170], "class": [131, 1001], "monkei": 131, "patch": 131, "construct": 132, "represent": 132, "recurs": 132, "built": 132, "ins": 132, "access": 132, "save": 132, "load": 132, "comparison": 132, "custom": [132, 146], "case": 132, "compartment": 132, "configur": 132, "network": [132, 134], "weight": 132, "state": [133, 146], "initi": [133, 1007], "optim": [133, 1032, 1036], "transpil": 134, "role": 134, "convert": [134, 1005], "model": [134, 141, 146], "builder": 136, "ecosystem": 137, "gym": [138, 145], "mech": 139, "memori": [140, 145], "robot": [142, 145], "vision": [143, 145], "extens": [144, 994], "appli": 145, "librari": 145, "mechan": 145, "faq": 146, "maintain": 146, "version": 146, "dynam": 146, "size": 146, "shape": [146, 668, 930, 931, 932, 936, 938], "control": 146, "flow": 146, "auto": 146, "differenti": 146, "replica": 146, "parallel": 146, "support": 146, "altern": 146, "structur": 146, "func": 147, "wrapper": 147, "handle_nest": 148, "handle_out_argu": 149, "infer_devic": 150, "infer_dtyp": 151, "inputs_to_ivy_arrai": 152, "inputs_to_native_arrai": 153, "outputs_to_ivy_arrai": 154, "to_native_arrays_and_back": 155, "gelu": [158, 1004], "leaky_relu": 159, "relu": 160, "sigmoid": 161, "softmax": 162, "softplu": [163, 164, 165, 166], "static_softplu": 167, "tanh": [168, 596, 598, 599, 600], "constant": 171, "note": [172, 190, 193], "arang": [173, 174], "static_arang": 175, "asarrai": [176, 177, 178, 179], "static_asarrai": 180, "empti": 181, "empty_lik": [182, 183, 184, 185], "static_empty_lik": 186, "ey": [187, 188], "static_ey": 189, "from_dlpack": [190, 191, 192, 193], "static_from_dlpack": 194, "full": 195, "full_lik": [196, 197, 198, 199], "static_full_lik": 200, "linspac": [201, 202], "static_linspac": 203, "logspac": [204, 205], "static_logspac": 206, "meshgrid": [207, 208, 209, 210], "static_meshgrid": 211, "native_arrai": [212, 213, 214, 215], "static_native_arrai": 216, "ones": [217, 218], "static_on": 219, "ones_lik": [220, 221, 222, 223], "static_ones_lik": 224, "tril": [225, 227, 228, 229], "static_tril": 226, "triu": [230, 232, 233, 234], "static_triu": 231, "zero": [235, 237, 1015], "static_zero": 236, "zeros_lik": [238, 240, 241, 242], "static_zeros_lik": 239, "as_ivy_dtyp": 247, "as_native_dtyp": 248, "astyp": [249, 250, 251, 252], "static_astyp": 253, "broadcast_arrai": [254, 255, 256, 257], "static_broadcast_arrai": 258, "broadcast_to": [259, 260, 261, 262], "static_broadcast_to": 263, "can_cast": [264, 265, 266, 267], "static_can_cast": 268, "closest_valid_dtyp": 269, "default_dtyp": 270, "default_float_dtyp": 271, "default_int_dtyp": 272, "dtype_bit": 277, "finfo": [278, 279, 280, 281], "static_finfo": 282, "function_supported_dtyp": 283, "function_unsupported_dtyp": 284, "iinfo": [285, 286, 287, 288], "static_iinfo": 289, "invalid_dtyp": 290, "is_float_dtyp": [291, 292, 293, 294], "static_is_float_dtyp": 295, "is_int_dtyp": [296, 297, 298, 299], "static_is_int_dtyp": 300, "promote_typ": 301, "result_typ": [302, 303, 304, 305], "static_result_typ": 306, "set_default_dtyp": 307, "set_default_float_dtyp": 308, "set_default_int_dtyp": 309, "type_promote_arrai": 310, "unset_default_dtyp": 311, "unset_default_float_dtyp": 312, "unset_default_int_dtyp": 313, "valid_dtyp": 314, "devcloneditem": 317, "devclonedit": 318, "devclonednest": 319, "devdistitem": 320, "devdistit": 321, "devdistnest": 322, "devmapp": 324, "devmappermultiproc": 325, "multidevitem": 327, "multidevit": 328, "multidevnest": 329, "profil": 330, "as_ivy_dev": 331, "as_native_dev": 332, "clear_mem_on_dev": 333, "default_devic": 334, "dev": 335, "dev_clon": 336, "dev_clone_arrai": 337, "dev_clone_it": 338, "dev_clone_nest": 339, "dev_dist": 340, "dev_dist_arrai": 341, "dev_dist_it": 342, "dev_dist_nest": 343, "dev_unifi": 344, "dev_unify_arrai": 345, "dev_unify_it": 346, "dev_unify_nest": 347, "dev_util": 348, "get_all_ivy_arrays_on_dev": 349, "gpu_is_avail": 350, "num_cpu_cor": 351, "num_gpu": 352, "num_ivy_arrays_on_dev": 353, "percent_used_mem_on_dev": 354, "print_all_ivy_arrays_on_dev": 355, "set_default_devic": 356, "set_split_factor": 357, "split_factor": 358, "split_func_cal": 359, "to_devic": 360, "total_mem_on_dev": 361, "tpu_is_avail": 362, "unset_default_devic": 363, "used_mem_on_dev": 364, "ab": [366, 367, 368, 369], "static_ab": 370, "aco": [371, 372, 373, 374], "acosh": [375, 376, 377, 378], "static_add": 383, "asin": [384, 385, 386, 387], "asinh": [388, 389, 390, 391], "static_asinh": 392, "atan": [393, 394, 395, 396], "atan2": [397, 398, 399, 400], "atanh": [401, 402, 403, 404], "bitwise_and": [405, 406, 407, 408], "bitwise_invert": [409, 410, 411, 412], "bitwise_left_shift": [413, 414, 415, 416], "bitwise_or": [417, 418, 419, 420], "bitwise_right_shift": [421, 422, 423, 424], "bitwise_xor": [425, 426, 427, 428], "ceil": [429, 430, 431, 432], "co": [433, 434, 435, 436], "cosh": [437, 438, 439, 440], "divid": [441, 442, 443, 444], "static_divid": 445, "equal": [446, 447, 448, 449], "erf": [450, 451, 452, 453], "exp": [454, 455, 456, 457], "expm1": [458, 459, 460, 461], "floor": [462, 463, 464, 465], "floor_divid": [466, 467, 468, 469], "greater": [470, 471, 472, 473], "greater_equ": [474, 475, 476, 477], "isfinit": [478, 479, 480, 481], "isinf": [482, 483, 484, 485], "isnan": [486, 487, 488, 489], "less": [490, 491, 492, 493], "less_equ": [494, 495, 496, 497], "log": [498, 499, 500, 501], "log10": [502, 503, 504, 505], "log1p": [506, 507, 508, 509], "log2": [510, 511, 512, 513], "logaddexp": [514, 515, 516, 517], "logical_and": [518, 519, 520, 521], "logical_not": [522, 523, 524, 525], "logical_or": [526, 527, 528, 529], "logical_xor": [530, 531, 532, 533], "maximum": 534, "minimum": 535, "multipli": [536, 537, 538, 539], "static_multipli": 540, "neg": [541, 542, 543, 544], "not_equ": [545, 546, 547, 548], "posit": [549, 550, 551, 552], "pow": [553, 554, 555, 556], "remaind": [557, 558, 559, 560], "round": [561, 562, 563, 564], "sign": [565, 566, 567, 568], "static_sign": 569, "sin": [570, 571, 572, 573], "sinh": [574, 575, 576, 577], "sqrt": [578, 579, 580, 581], "squar": [582, 583, 584, 585], "subtract": [586, 588, 589, 590], "static_subtract": 587, "static_tan": 592, "static_tanh": 597, "trunc": [601, 602, 603, 604], "all_equ": [606, 607, 608, 609], "static_all_equ": 610, "arg_info": 611, "arg_nam": 612, "array_equ": 613, "arrays_equ": 614, "assert_supports_inplac": 615, "cache_fn": 616, "clip_matrix_norm": 617, "clip_vector_norm": [618, 619, 620], "container_typ": 621, "copy_arrai": 622, "cumprod": 623, "cumsum": 624, "current_backend_str": 625, "default": 626, "einops_rearrang": 627, "einops_reduc": 628, "einops_repeat": 629, "exist": 630, "floormod": 631, "fourier_encod": 632, "gather": 633, "gather_nd": [634, 635, 636, 637], "static_gather_nd": 638, "get_all_arrays_in_memori": 639, "get_min_bas": 640, "get_min_denomin": 641, "get_num_dim": 642, "get_referrers_recurs": 643, "has_nan": 644, "indices_wher": 645, "inplace_arrays_support": 646, "inplace_decr": 647, "inplace_incr": 648, "inplace_upd": 649, "inplace_variables_support": 650, "is_arrai": 651, "is_ivy_arrai": 652, "is_ivy_contain": 653, "is_native_arrai": 654, "match_kwarg": 655, "multiprocess": 656, "num_arrays_in_memori": 657, "one_hot": 658, "print_all_arrays_in_memori": 659, "queue_timeout": 660, "scatter_flat": 661, "scatter_nd": 662, "set_min_bas": 663, "set_min_denomin": 664, "set_queue_timeout": 665, "set_shape_array_mod": 666, "set_tmp_dir": 667, "shape_array_mod": 669, "shape_to_tupl": 670, "stable_divid": 671, "stable_pow": 672, "supports_inplac": 673, "tmp_dir": 674, "to_list": 675, "to_numpi": [676, 678, 679, 680], "static_to_numpi": 677, "to_scalar": 681, "try_else_non": 682, "unset_shape_array_mod": 683, "unstack": 684, "value_is_nan": 685, "adam_step": [688, 689, 690, 691], "static_adam_step": 692, "adam_upd": [693, 694, 695], "static_adam_upd": 696, "execute_with_gradi": 697, "gradient_descent_upd": [698, 699, 700], "static_gradient_descent_upd": 701, "is_vari": [702, 703, 704], "static_is_vari": 705, "lamb_upd": [706, 707, 708], "static_lamb_upd": 709, "lars_upd": [710, 711, 712], "static_lars_upd": 713, "optimizer_upd": [714, 715, 716], "static_optimizer_upd": 717, "set_with_grad": 718, "stop_gradi": 719, "unset_with_grad": 720, "variabl": 721, "variable_data": 722, "with_grad": 723, "conv1d": [725, 1017], "conv1d_transpos": 726, "conv2d": [727, 1019], "conv2d_transpos": 728, "conv3d": [729, 1021], "conv3d_transpos": 730, "depthwise_conv2d": 731, "dropout": [732, 1024], "lstm_updat": 734, "multi_head_attent": 735, "scaled_dot_product_attent": 736, "choleski": [738, 739, 740, 741], "static_choleski": 742, "cross": [743, 744, 745], "det": [746, 747, 748], "diagon": [749, 750, 751], "eigh": [752, 753, 754], "eigvalsh": [755, 756, 757], "inv": [758, 759, 760], "matmul": [761, 762, 763, 764], "matrix_norm": [765, 766, 767], "matrix_pow": 768, "matrix_rank": [769, 770, 771], "matrix_transpos": [772, 773, 774], "outer": [775, 776, 777], "pinv": [778, 779, 780], "qr": [781, 782, 783], "slogdet": 784, "solv": [785, 786, 787], "svd": [788, 789, 790], "svdval": [791, 792, 793], "tensordot": [794, 795, 796], "trace": [797, 798, 799], "vecdot": [800, 801, 802], "vector_norm": [803, 804, 805], "vector_to_skew_symmetric_matrix": [806, 807, 808], "binary_cross_entropi": [810, 811, 812, 813], "static_binary_cross_entropi": 814, "cross_entropi": [815, 816, 817, 818], "static_cross_entropi": 819, "sparse_cross_entropi": [820, 821, 822, 823], "static_sparse_cross_entropi": 824, "clip": [826, 827, 828, 829], "static_clip": 830, "concat": [831, 832, 833, 834], "constant_pad": [835, 836, 837, 838], "expand_dim": [839, 840, 841, 842], "flip": [843, 844, 845, 846], "permute_dim": [847, 848, 849, 850], "repeat": [851, 852, 853, 854], "reshap": [855, 856, 857, 858], "static_rol": 863, "split": 864, "squeez": [865, 866, 867, 868], "stack": [869, 870, 871, 872], "swapax": [873, 874, 875, 876], "tile": [877, 878, 879, 880], "zero_pad": [881, 882, 883, 884], "meta": 885, "fomaml_step": 886, "maml_step": 887, "reptile_step": 888, "nest": 889, "all_nested_indic": 890, "copy_nest": 891, "index_nest": 892, "insert_into_nest_at_index": 893, "insert_into_nest_at_indic": 894, "map": 895, "map_nest_at_index": 896, "map_nest_at_indic": 897, "multi_index_nest": 898, "nested_ani": 899, "nested_indices_wher": 900, "nested_map": 901, "nested_multi_map": 902, "prune_nest_at_index": 903, "prune_nest_at_indic": 904, "set_nest_at_index": 905, "set_nest_at_indic": 906, "layer_norm": [908, 909, 910, 911], "static_layer_norm": 912, "multinomi": 914, "randint": [915, 916], "static_randint": 917, "random_norm": 918, "random_uniform": [919, 920, 921], "static_random_uniform": 922, "seed": 923, "shuffl": 924, "argmax": 926, "argmin": 927, "nonzero": 928, "where": 929, "depend": [930, 931, 932, 936, 938], "output": [930, 931, 932, 936, 938], "unique_al": 931, "unique_count": [932, 934, 935, 936], "static_unique_count": 933, "unique_invers": 937, "unique_valu": 938, "argsort": [940, 941, 942, 943], "static_argsort": 944, "static_sort": 949, "einsum": [951, 952, 953, 954], "max": [955, 956, 957, 958], "mean": [959, 960, 961, 962], "min": [963, 964, 965, 966], "prod": [967, 968, 969, 970], "std": [971, 972, 973, 974], "sum": [975, 976, 977, 978], "var": [979, 980, 981, 982], "all": [984, 985, 986, 987], "static_al": 988, "ani": [989, 990, 991, 992], "static_ani": 993, "content": 994, "overview": 994, "quick": 994, "start": 994, "roadmap": [994, 1000], "citat": 994, "inspect": 997, "add_array_spec": 998, "fn_array_spec": 999, "geglu": 1003, "to_ivy_modul": 1006, "firstlayersiren": 1009, "glorotuniform": 1010, "Ones": 1012, "siren": 1013, "conv1dtranspos": 1018, "conv2dtranspos": 1020, "conv3dtranspos": 1022, "depthwiseconv2d": 1023, "lstm": 1025, "multiheadattent": 1027, "layernorm": 1031, "adam": 1033, "lamb": 1034, "lar": 1035, "sgd": 1037, "sequenti": [1038, 1039], "verbos": 1041, "cprint": 1042}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})