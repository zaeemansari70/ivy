Search.setIndex({"docnames": ["array/activations", "array/activations/ArrayWithActivations", "array/array_methods", "array/array_methods/abs", "array/array_methods/acos", "array/array_methods/acosh", "array/array_methods/adam_step", "array/array_methods/add", "array/array_methods/add_ivy_array_instance_methods", "array/array_methods/all", "array/array_methods/all_equal", "array/array_methods/any", "array/array_methods/argsort", "array/array_methods/asarray", "array/array_methods/asin", "array/array_methods/asinh", "array/array_methods/atan", "array/array_methods/atan2", "array/array_methods/atanh", "array/array_methods/binary_cross_entropy", "array/array_methods/bitwise_and", "array/array_methods/bitwise_invert", "array/array_methods/bitwise_left_shift", "array/array_methods/bitwise_or", "array/array_methods/bitwise_right_shift", "array/array_methods/bitwise_xor", "array/array_methods/can_cast", "array/array_methods/ceil", "array/array_methods/cholesky", "array/array_methods/clip", "array/array_methods/concat", "array/array_methods/constant_pad", "array/array_methods/cos", "array/array_methods/cosh", "array/array_methods/cross", "array/array_methods/cross_entropy", "array/array_methods/det", "array/array_methods/diagonal", "array/array_methods/divide", "array/array_methods/eigh", "array/array_methods/eigvalsh", "array/array_methods/einsum", "array/array_methods/empty_like", "array/array_methods/equal", "array/array_methods/erf", "array/array_methods/exp", "array/array_methods/expand_dims", "array/array_methods/expm1", "array/array_methods/flip", "array/array_methods/floor", "array/array_methods/floor_divide", "array/array_methods/from_dlpack", "array/array_methods/full_like", "array/array_methods/gather_nd", "array/array_methods/greater", "array/array_methods/greater_equal", "array/array_methods/inv", "array/array_methods/isfinite", "array/array_methods/isinf", "array/array_methods/isnan", "array/array_methods/layer_norm", "array/array_methods/less", "array/array_methods/less_equal", "array/array_methods/log", "array/array_methods/log10", "array/array_methods/log1p", "array/array_methods/log2", "array/array_methods/logaddexp", "array/array_methods/logical_and", "array/array_methods/logical_not", "array/array_methods/logical_or", "array/array_methods/logical_xor", "array/array_methods/matmul", "array/array_methods/matrix_norm", "array/array_methods/matrix_rank", "array/array_methods/matrix_transpose", "array/array_methods/max", "array/array_methods/mean", "array/array_methods/meshgrid", "array/array_methods/min", "array/array_methods/multiply", "array/array_methods/native_array", "array/array_methods/negative", "array/array_methods/not_equal", "array/array_methods/ones_like", "array/array_methods/outer", "array/array_methods/permute_dims", "array/array_methods/pinv", "array/array_methods/positive", "array/array_methods/pow", "array/array_methods/prod", "array/array_methods/qr", "array/array_methods/remainder", "array/array_methods/repeat", "array/array_methods/reshape", "array/array_methods/roll", "array/array_methods/round", "array/array_methods/sign", "array/array_methods/sin", "array/array_methods/sinh", "array/array_methods/softplus", "array/array_methods/solve", "array/array_methods/sort", "array/array_methods/sparse_cross_entropy", "array/array_methods/sqrt", "array/array_methods/square", "array/array_methods/squeeze", "array/array_methods/stack", "array/array_methods/std", "array/array_methods/subtract", "array/array_methods/sum", "array/array_methods/svd", "array/array_methods/svdvals", "array/array_methods/swapaxes", "array/array_methods/tan", "array/array_methods/tanh", "array/array_methods/tensordot", "array/array_methods/tile", "array/array_methods/trace", "array/array_methods/tril", "array/array_methods/triu", "array/array_methods/trunc", "array/array_methods/unique_counts", "array/array_methods/var", "array/array_methods/vecdot", "array/array_methods/vector_norm", "array/array_methods/vector_to_skew_symmetric_matrix", "array/array_methods/zero_pad", "array/array_methods/zeros_like", "array/conversions", "array/conversions/args_to_ivy", "array/conversions/args_to_native", "array/conversions/to_ivy", "array/conversions/to_native", "array/creation", "array/creation/ArrayWithCreation", "array/data_type", "array/data_type/ArrayWithDataTypes", "array/device", "array/device/ArrayWithDevice", "array/elementwise", "array/elementwise/ArrayWithElementwise", "array/general", "array/general/ArrayWithGeneral", "array/gradients", "array/gradients/ArrayWithGradients", "array/image", "array/image/ArrayWithImage", "array/layers", "array/layers/ArrayWithLayers", "array/linear_algebra", "array/linear_algebra/ArrayWithLinearAlgebra", "array/losses", "array/losses/ArrayWithLosses", "array/manipulation", "array/manipulation/ArrayWithManipulation", "array/norms", "array/norms/ArrayWithNorms", "array/random", "array/random/ArrayWithRandom", "array/searching", "array/searching/ArrayWithSearching", "array/set", "array/set/ArrayWithSet", "array/sorting", "array/sorting/ArrayWithSorting", "array/statistical", "array/statistical/ArrayWithStatistical", "array/utility", "array/utility/ArrayWithUtility", "array/wrapping", "array/wrapping/add_ivy_array_instance_methods", "backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "container/activations", "container/activations/ContainerWithActivations", "container/base", "container/base/ContainerBase", "container/container", "container/container/Container", "container/container/MultiDevContainer", "container/container_methods", "container/container_methods/abs", "container/container_methods/acos", "container/container_methods/acosh", "container/container_methods/adam_step", "container/container_methods/adam_update", "container/container_methods/add", "container/container_methods/add_ivy_container_instance_methods", "container/container_methods/all", "container/container_methods/all_equal", "container/container_methods/any", "container/container_methods/argsort", "container/container_methods/asin", "container/container_methods/asinh", "container/container_methods/at_dev", "container/container_methods/at_devs", "container/container_methods/atan", "container/container_methods/atan2", "container/container_methods/atanh", "container/container_methods/binary_cross_entropy", "container/container_methods/bitwise_and", "container/container_methods/bitwise_invert", "container/container_methods/bitwise_left_shift", "container/container_methods/bitwise_or", "container/container_methods/bitwise_right_shift", "container/container_methods/bitwise_xor", "container/container_methods/can_cast", "container/container_methods/ceil", "container/container_methods/cholesky", "container/container_methods/clip", "container/container_methods/clip_vector_norm", "container/container_methods/concat", "container/container_methods/constant_pad", "container/container_methods/cos", "container/container_methods/cosh", "container/container_methods/cross_entropy", "container/container_methods/divide", "container/container_methods/einsum", "container/container_methods/equal", "container/container_methods/erf", "container/container_methods/exp", "container/container_methods/expand_dims", "container/container_methods/expm1", "container/container_methods/flip", "container/container_methods/floor", "container/container_methods/floor_divide", "container/container_methods/gather_nd", "container/container_methods/gradient_descent_update", "container/container_methods/greater", "container/container_methods/greater_equal", "container/container_methods/is_variable", "container/container_methods/isfinite", "container/container_methods/isinf", "container/container_methods/isnan", "container/container_methods/lamb_update", "container/container_methods/lars_update", "container/container_methods/layer_norm", "container/container_methods/less", "container/container_methods/less_equal", "container/container_methods/log", "container/container_methods/log10", "container/container_methods/log1p", "container/container_methods/log2", "container/container_methods/logaddexp", "container/container_methods/logical_and", "container/container_methods/logical_not", "container/container_methods/logical_or", "container/container_methods/logical_xor", "container/container_methods/matmul", "container/container_methods/max", "container/container_methods/mean", "container/container_methods/min", "container/container_methods/multiply", "container/container_methods/negative", "container/container_methods/not_equal", "container/container_methods/optimizer_update", "container/container_methods/permute_dims", "container/container_methods/positive", "container/container_methods/pow", "container/container_methods/prod", "container/container_methods/random_uniform", "container/container_methods/remainder", "container/container_methods/repeat", "container/container_methods/reshape", "container/container_methods/roll", "container/container_methods/round", "container/container_methods/sign", "container/container_methods/sin", "container/container_methods/sinh", "container/container_methods/softplus", "container/container_methods/sort", "container/container_methods/sparse_cross_entropy", "container/container_methods/sqrt", "container/container_methods/square", "container/container_methods/squeeze", "container/container_methods/stack", "container/container_methods/static_abs", "container/container_methods/static_adam_step", "container/container_methods/static_adam_update", "container/container_methods/static_add", "container/container_methods/static_all_equal", "container/container_methods/static_argsort", "container/container_methods/static_binary_cross_entropy", "container/container_methods/static_can_cast", "container/container_methods/static_cholesky", "container/container_methods/static_clip", "container/container_methods/static_cross_entropy", "container/container_methods/static_divide", "container/container_methods/static_gather_nd", "container/container_methods/static_gradient_descent_update", "container/container_methods/static_is_variable", "container/container_methods/static_lamb_update", "container/container_methods/static_lars_update", "container/container_methods/static_multiply", "container/container_methods/static_optimizer_update", "container/container_methods/static_randint", "container/container_methods/static_random_uniform", "container/container_methods/static_roll", "container/container_methods/static_softplus", "container/container_methods/static_sort", "container/container_methods/static_sparse_cross_entropy", "container/container_methods/static_subtract", "container/container_methods/static_tan", "container/container_methods/static_tanh", "container/container_methods/static_unique_counts", "container/container_methods/std", "container/container_methods/subtract", "container/container_methods/sum", "container/container_methods/swapaxes", "container/container_methods/tan", "container/container_methods/tanh", "container/container_methods/tile", "container/container_methods/trunc", "container/container_methods/unique_counts", "container/container_methods/var", "container/container_methods/zero_pad", "container/creation", "container/creation/ContainerWithCreation", "container/data_type", "container/data_type/ContainerWithDataTypes", "container/device", "container/device/ContainerWithDevice", "container/elementwise", "container/elementwise/ContainerWithElementwise", "container/general", "container/general/ContainerWithGeneral", "container/gradients", "container/gradients/ContainerWithGradients", "container/image", "container/image/ContainerWithImage", "container/layers", "container/layers/ContainerWithLayers", "container/linear_algebra", "container/linear_algebra/ContainerWithLinearAlgebra", "container/losses", "container/losses/ContainerWithLosses", "container/manipulation", "container/manipulation/ContainerWithManipulation", "container/norms", "container/norms/ContainerWithNorms", "container/random", "container/random/ContainerWithRandom", "container/searching", "container/searching/ContainerWithSearching", "container/set", "container/set/ContainerWithSet", "container/sorting", "container/sorting/ContainerWithSorting", "container/statistical", "container/statistical/ContainerWithStatistical", "container/utility", "container/utility/ContainerWithUtility", "container/wrapping", "container/wrapping/add_ivy_container_instance_methods", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/tril", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["array/activations.rst", "array/activations/ArrayWithActivations.rst", "array/array_methods.rst", "array/array_methods/abs.rst", "array/array_methods/acos.rst", "array/array_methods/acosh.rst", "array/array_methods/adam_step.rst", "array/array_methods/add.rst", "array/array_methods/add_ivy_array_instance_methods.rst", "array/array_methods/all.rst", "array/array_methods/all_equal.rst", "array/array_methods/any.rst", "array/array_methods/argsort.rst", "array/array_methods/asarray.rst", "array/array_methods/asin.rst", "array/array_methods/asinh.rst", "array/array_methods/atan.rst", "array/array_methods/atan2.rst", "array/array_methods/atanh.rst", "array/array_methods/binary_cross_entropy.rst", "array/array_methods/bitwise_and.rst", "array/array_methods/bitwise_invert.rst", "array/array_methods/bitwise_left_shift.rst", "array/array_methods/bitwise_or.rst", "array/array_methods/bitwise_right_shift.rst", "array/array_methods/bitwise_xor.rst", "array/array_methods/can_cast.rst", "array/array_methods/ceil.rst", "array/array_methods/cholesky.rst", "array/array_methods/clip.rst", "array/array_methods/concat.rst", "array/array_methods/constant_pad.rst", "array/array_methods/cos.rst", "array/array_methods/cosh.rst", "array/array_methods/cross.rst", "array/array_methods/cross_entropy.rst", "array/array_methods/det.rst", "array/array_methods/diagonal.rst", "array/array_methods/divide.rst", "array/array_methods/eigh.rst", "array/array_methods/eigvalsh.rst", "array/array_methods/einsum.rst", "array/array_methods/empty_like.rst", "array/array_methods/equal.rst", "array/array_methods/erf.rst", "array/array_methods/exp.rst", "array/array_methods/expand_dims.rst", "array/array_methods/expm1.rst", "array/array_methods/flip.rst", "array/array_methods/floor.rst", "array/array_methods/floor_divide.rst", "array/array_methods/from_dlpack.rst", "array/array_methods/full_like.rst", "array/array_methods/gather_nd.rst", "array/array_methods/greater.rst", "array/array_methods/greater_equal.rst", "array/array_methods/inv.rst", "array/array_methods/isfinite.rst", "array/array_methods/isinf.rst", "array/array_methods/isnan.rst", "array/array_methods/layer_norm.rst", "array/array_methods/less.rst", "array/array_methods/less_equal.rst", "array/array_methods/log.rst", "array/array_methods/log10.rst", "array/array_methods/log1p.rst", "array/array_methods/log2.rst", "array/array_methods/logaddexp.rst", "array/array_methods/logical_and.rst", "array/array_methods/logical_not.rst", "array/array_methods/logical_or.rst", "array/array_methods/logical_xor.rst", "array/array_methods/matmul.rst", "array/array_methods/matrix_norm.rst", "array/array_methods/matrix_rank.rst", "array/array_methods/matrix_transpose.rst", "array/array_methods/max.rst", "array/array_methods/mean.rst", "array/array_methods/meshgrid.rst", "array/array_methods/min.rst", "array/array_methods/multiply.rst", "array/array_methods/native_array.rst", "array/array_methods/negative.rst", "array/array_methods/not_equal.rst", "array/array_methods/ones_like.rst", "array/array_methods/outer.rst", "array/array_methods/permute_dims.rst", "array/array_methods/pinv.rst", "array/array_methods/positive.rst", "array/array_methods/pow.rst", "array/array_methods/prod.rst", "array/array_methods/qr.rst", "array/array_methods/remainder.rst", "array/array_methods/repeat.rst", "array/array_methods/reshape.rst", "array/array_methods/roll.rst", "array/array_methods/round.rst", "array/array_methods/sign.rst", "array/array_methods/sin.rst", "array/array_methods/sinh.rst", "array/array_methods/softplus.rst", "array/array_methods/solve.rst", "array/array_methods/sort.rst", "array/array_methods/sparse_cross_entropy.rst", "array/array_methods/sqrt.rst", "array/array_methods/square.rst", "array/array_methods/squeeze.rst", "array/array_methods/stack.rst", "array/array_methods/std.rst", "array/array_methods/subtract.rst", "array/array_methods/sum.rst", "array/array_methods/svd.rst", "array/array_methods/svdvals.rst", "array/array_methods/swapaxes.rst", "array/array_methods/tan.rst", "array/array_methods/tanh.rst", "array/array_methods/tensordot.rst", "array/array_methods/tile.rst", "array/array_methods/trace.rst", "array/array_methods/tril.rst", "array/array_methods/triu.rst", "array/array_methods/trunc.rst", "array/array_methods/unique_counts.rst", "array/array_methods/var.rst", "array/array_methods/vecdot.rst", "array/array_methods/vector_norm.rst", "array/array_methods/vector_to_skew_symmetric_matrix.rst", "array/array_methods/zero_pad.rst", "array/array_methods/zeros_like.rst", "array/conversions.rst", "array/conversions/args_to_ivy.rst", "array/conversions/args_to_native.rst", "array/conversions/to_ivy.rst", "array/conversions/to_native.rst", "array/creation.rst", "array/creation/ArrayWithCreation.rst", "array/data_type.rst", "array/data_type/ArrayWithDataTypes.rst", "array/device.rst", "array/device/ArrayWithDevice.rst", "array/elementwise.rst", "array/elementwise/ArrayWithElementwise.rst", "array/general.rst", "array/general/ArrayWithGeneral.rst", "array/gradients.rst", "array/gradients/ArrayWithGradients.rst", "array/image.rst", "array/image/ArrayWithImage.rst", "array/layers.rst", "array/layers/ArrayWithLayers.rst", "array/linear_algebra.rst", "array/linear_algebra/ArrayWithLinearAlgebra.rst", "array/losses.rst", "array/losses/ArrayWithLosses.rst", "array/manipulation.rst", "array/manipulation/ArrayWithManipulation.rst", "array/norms.rst", "array/norms/ArrayWithNorms.rst", "array/random.rst", "array/random/ArrayWithRandom.rst", "array/searching.rst", "array/searching/ArrayWithSearching.rst", "array/set.rst", "array/set/ArrayWithSet.rst", "array/sorting.rst", "array/sorting/ArrayWithSorting.rst", "array/statistical.rst", "array/statistical/ArrayWithStatistical.rst", "array/utility.rst", "array/utility/ArrayWithUtility.rst", "array/wrapping.rst", "array/wrapping/add_ivy_array_instance_methods.rst", "backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "container/activations.rst", "container/activations/ContainerWithActivations.rst", "container/base.rst", "container/base/ContainerBase.rst", "container/container.rst", "container/container/Container.rst", "container/container/MultiDevContainer.rst", "container/container_methods.rst", "container/container_methods/abs.rst", "container/container_methods/acos.rst", "container/container_methods/acosh.rst", "container/container_methods/adam_step.rst", "container/container_methods/adam_update.rst", "container/container_methods/add.rst", "container/container_methods/add_ivy_container_instance_methods.rst", "container/container_methods/all.rst", "container/container_methods/all_equal.rst", "container/container_methods/any.rst", "container/container_methods/argsort.rst", "container/container_methods/asin.rst", "container/container_methods/asinh.rst", "container/container_methods/at_dev.rst", "container/container_methods/at_devs.rst", "container/container_methods/atan.rst", "container/container_methods/atan2.rst", "container/container_methods/atanh.rst", "container/container_methods/binary_cross_entropy.rst", "container/container_methods/bitwise_and.rst", "container/container_methods/bitwise_invert.rst", "container/container_methods/bitwise_left_shift.rst", "container/container_methods/bitwise_or.rst", "container/container_methods/bitwise_right_shift.rst", "container/container_methods/bitwise_xor.rst", "container/container_methods/can_cast.rst", "container/container_methods/ceil.rst", "container/container_methods/cholesky.rst", "container/container_methods/clip.rst", "container/container_methods/clip_vector_norm.rst", "container/container_methods/concat.rst", "container/container_methods/constant_pad.rst", "container/container_methods/cos.rst", "container/container_methods/cosh.rst", "container/container_methods/cross_entropy.rst", "container/container_methods/divide.rst", "container/container_methods/einsum.rst", "container/container_methods/equal.rst", "container/container_methods/erf.rst", "container/container_methods/exp.rst", "container/container_methods/expand_dims.rst", "container/container_methods/expm1.rst", "container/container_methods/flip.rst", "container/container_methods/floor.rst", "container/container_methods/floor_divide.rst", "container/container_methods/gather_nd.rst", "container/container_methods/gradient_descent_update.rst", "container/container_methods/greater.rst", "container/container_methods/greater_equal.rst", "container/container_methods/is_variable.rst", "container/container_methods/isfinite.rst", "container/container_methods/isinf.rst", "container/container_methods/isnan.rst", "container/container_methods/lamb_update.rst", "container/container_methods/lars_update.rst", "container/container_methods/layer_norm.rst", "container/container_methods/less.rst", "container/container_methods/less_equal.rst", "container/container_methods/log.rst", "container/container_methods/log10.rst", "container/container_methods/log1p.rst", "container/container_methods/log2.rst", "container/container_methods/logaddexp.rst", "container/container_methods/logical_and.rst", "container/container_methods/logical_not.rst", "container/container_methods/logical_or.rst", "container/container_methods/logical_xor.rst", "container/container_methods/matmul.rst", "container/container_methods/max.rst", "container/container_methods/mean.rst", "container/container_methods/min.rst", "container/container_methods/multiply.rst", "container/container_methods/negative.rst", "container/container_methods/not_equal.rst", "container/container_methods/optimizer_update.rst", "container/container_methods/permute_dims.rst", "container/container_methods/positive.rst", "container/container_methods/pow.rst", "container/container_methods/prod.rst", "container/container_methods/random_uniform.rst", "container/container_methods/remainder.rst", "container/container_methods/repeat.rst", "container/container_methods/reshape.rst", "container/container_methods/roll.rst", "container/container_methods/round.rst", "container/container_methods/sign.rst", "container/container_methods/sin.rst", "container/container_methods/sinh.rst", "container/container_methods/softplus.rst", "container/container_methods/sort.rst", "container/container_methods/sparse_cross_entropy.rst", "container/container_methods/sqrt.rst", "container/container_methods/square.rst", "container/container_methods/squeeze.rst", "container/container_methods/stack.rst", "container/container_methods/static_abs.rst", "container/container_methods/static_adam_step.rst", "container/container_methods/static_adam_update.rst", "container/container_methods/static_add.rst", "container/container_methods/static_all_equal.rst", "container/container_methods/static_argsort.rst", "container/container_methods/static_binary_cross_entropy.rst", "container/container_methods/static_can_cast.rst", "container/container_methods/static_cholesky.rst", "container/container_methods/static_clip.rst", "container/container_methods/static_cross_entropy.rst", "container/container_methods/static_divide.rst", "container/container_methods/static_gather_nd.rst", "container/container_methods/static_gradient_descent_update.rst", "container/container_methods/static_is_variable.rst", "container/container_methods/static_lamb_update.rst", "container/container_methods/static_lars_update.rst", "container/container_methods/static_multiply.rst", "container/container_methods/static_optimizer_update.rst", "container/container_methods/static_randint.rst", "container/container_methods/static_random_uniform.rst", "container/container_methods/static_roll.rst", "container/container_methods/static_softplus.rst", "container/container_methods/static_sort.rst", "container/container_methods/static_sparse_cross_entropy.rst", "container/container_methods/static_subtract.rst", "container/container_methods/static_tan.rst", "container/container_methods/static_tanh.rst", "container/container_methods/static_unique_counts.rst", "container/container_methods/std.rst", "container/container_methods/subtract.rst", "container/container_methods/sum.rst", "container/container_methods/swapaxes.rst", "container/container_methods/tan.rst", "container/container_methods/tanh.rst", "container/container_methods/tile.rst", "container/container_methods/trunc.rst", "container/container_methods/unique_counts.rst", "container/container_methods/var.rst", "container/container_methods/zero_pad.rst", "container/creation.rst", "container/creation/ContainerWithCreation.rst", "container/data_type.rst", "container/data_type/ContainerWithDataTypes.rst", "container/device.rst", "container/device/ContainerWithDevice.rst", "container/elementwise.rst", "container/elementwise/ContainerWithElementwise.rst", "container/general.rst", "container/general/ContainerWithGeneral.rst", "container/gradients.rst", "container/gradients/ContainerWithGradients.rst", "container/image.rst", "container/image/ContainerWithImage.rst", "container/layers.rst", "container/layers/ContainerWithLayers.rst", "container/linear_algebra.rst", "container/linear_algebra/ContainerWithLinearAlgebra.rst", "container/losses.rst", "container/losses/ContainerWithLosses.rst", "container/manipulation.rst", "container/manipulation/ContainerWithManipulation.rst", "container/norms.rst", "container/norms/ContainerWithNorms.rst", "container/random.rst", "container/random/ContainerWithRandom.rst", "container/searching.rst", "container/searching/ContainerWithSearching.rst", "container/set.rst", "container/set/ContainerWithSet.rst", "container/sorting.rst", "container/sorting/ContainerWithSorting.rst", "container/statistical.rst", "container/statistical/ContainerWithStatistical.rst", "container/utility.rst", "container/utility/ContainerWithUtility.rst", "container/wrapping.rst", "container/wrapping/add_ivy_container_instance_methods.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Activations", "ArrayWithActivations", "Array methods", "abs array", "acos array", "acosh array", "adam_step array", "add array", "add_ivy_array_instance_methods array", "all array", "all_equal array", "any array", "argsort array", "asarray array", "asin array", "asinh array", "atan array", "atan2 array", "atanh array", "binary_cross_entropy array", "bitwise_and array", "bitwise_invert array", "bitwise_left_shift array", "bitwise_or array", "bitwise_right_shift array", "bitwise_xor array", "can_cast array", "ceil array", "cholesky array", "clip array", "concat array", "constant_pad array", "cos array", "cosh array", "cross array", "cross_entropy array", "det array", "diagonal array", "divide array", "eigh array", "eigvalsh array", "einsum array", "empty_like array", "equal array", "erf array", "exp array", "expand_dims array", "expm1 array", "flip array", "floor array", "floor_divide array", "from_dlpack array", "full_like array", "gather_nd array", "greater array", "greater_equal array", "inv array", "isfinite array", "isinf array", "isnan array", "layer_norm array", "less array", "less_equal array", "log array", "log10 array", "log1p array", "log2 array", "logaddexp array", "logical_and array", "logical_not array", "logical_or array", "logical_xor array", "matmul array", "matrix_norm array", "matrix_rank array", "matrix_transpose array", "max array", "mean array", "meshgrid array", "min array", "multiply array", "native_array array", "negative array", "not_equal array", "ones_like array", "outer array", "permute_dims array", "pinv array", "positive array", "pow array", "prod array", "qr array", "remainder array", "repeat array", "reshape array", "roll array", "round array", "sign array", "sin array", "sinh array", "softplus array", "solve array", "sort array", "sparse_cross_entropy array", "sqrt array", "square array", "squeeze array", "stack array", "std array", "subtract array", "sum array", "svd array", "svdvals array", "swapaxes array", "tan array", "tanh array", "tensordot array", "tile array", "trace array", "tril array", "triu array", "trunc array", "unique_counts array", "var array", "vecdot array", "vector_norm array", "vector_to_skew_symmetric_matrix array", "zero_pad array", "zeros_like array", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Container methods", "abs container", "acos container", "acosh container", "adam_step container", "adam_update container", "add container", "add_ivy_container_instance_methods container", "all container", "all_equal container", "any container", "argsort container", "asin container", "asinh container", "at_dev container", "at_devs container", "atan container", "atan2 container", "atanh container", "binary_cross_entropy container", "bitwise_and container", "bitwise_invert container", "bitwise_left_shift container", "bitwise_or container", "bitwise_right_shift container", "bitwise_xor container", "can_cast container", "ceil container", "cholesky container", "clip container", "clip_vector_norm container", "concat container", "constant_pad container", "cos container", "cosh container", "cross_entropy container", "divide container", "einsum container", "equal container", "erf container", "exp container", "expand_dims container", "expm1 container", "flip container", "floor container", "floor_divide container", "gather_nd container", "gradient_descent_update container", "greater container", "greater_equal container", "is_variable container", "isfinite container", "isinf container", "isnan container", "lamb_update container", "lars_update container", "layer_norm container", "less container", "less_equal container", "log container", "log10 container", "log1p container", "log2 container", "logaddexp container", "logical_and container", "logical_not container", "logical_or container", "logical_xor container", "matmul container", "max container", "mean container", "min container", "multiply container", "negative container", "not_equal container", "optimizer_update container", "permute_dims container", "positive container", "pow container", "prod container", "random_uniform container", "remainder container", "repeat container", "reshape container", "roll container", "round container", "sign container", "sin container", "sinh container", "softplus container", "sort container", "sparse_cross_entropy container", "sqrt container", "square container", "squeeze container", "stack container", "static_abs container", "static_adam_step container", "static_adam_update container", "static_add container", "static_all_equal container", "static_argsort container", "static_binary_cross_entropy container", "static_can_cast container", "static_cholesky container", "static_clip container", "static_cross_entropy container", "static_divide container", "static_gather_nd container", "static_gradient_descent_update container", "static_is_variable container", "static_lamb_update container", "static_lars_update container", "static_multiply container", "static_optimizer_update container", "static_randint container", "static_random_uniform container", "static_roll container", "static_softplus container", "static_sort container", "static_sparse_cross_entropy container", "static_subtract container", "static_tan container", "static_tanh container", "static_unique_counts container", "std container", "subtract container", "sum container", "swapaxes container", "tan container", "tanh container", "tile container", "trunc container", "unique_counts container", "var container", "zero_pad container", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.empty_like", "eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.full_like", "linspace", "logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.meshgrid", "native_array", "ivy.Array.native_array", "ivy.native_array", "ones", "ones_like", "ivy.Array.ones_like", "ivy.ones_like", "tril", "ivy.Array.tril", "ivy.tril", "triu", "ivy.Array.triu", "ivy.triu", "zeros", "zeros_like", "ivy.Array.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 1, 2, 8, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 184, 189, 190, 191, 192, 193, 194, 195, 196, 200, 203, 293, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 374, 377, 378, 380, 384, 385, 386, 387, 389, 391, 392, 394, 395, 396, 406, 407, 408, 473, 496, 510, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 798, 805, 842, 848, 867, 872, 874, 876, 878, 908, 1075, 1077, 1087, 1110, 1113, 1177, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 377, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 453, 456, 459, 460, 463, 466, 469, 470, 473, 477, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 566, 570, 574, 579, 583, 587, 591, 595, 599, 603, 607, 611, 615, 619, 623, 627, 631, 635, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 729, 730, 735, 739, 743, 747, 751, 755, 759, 763, 767, 771, 775, 779, 784, 789, 794, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 879, 883, 884, 888, 892, 896, 900, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 929, 932, 935, 938, 941, 944, 947, 951, 954, 955, 958, 961, 964, 967, 970, 971, 974, 977, 980, 983, 986, 989, 992, 995, 996, 1001, 1006, 1011, 1012, 1017, 1021, 1025, 1029, 1033, 1037, 1041, 1045, 1050, 1051, 1055, 1059, 1063, 1067, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1098, 1099, 1100, 1103, 1104, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1130, 1135, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1168, 1169, 1173, 1177, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1223, 1224], "arrai": [0, 1, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 408, 409, 417, 419, 420, 421, 422, 423, 424, 425, 428, 430, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 482, 484, 485, 486, 491, 493, 496, 498, 499, 501, 505, 510, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 544, 548, 550, 554, 555, 560, 561, 563, 564, 565, 566, 569, 570, 573, 574, 576, 577, 578, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 625, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 658, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 797, 798, 799, 801, 802, 803, 806, 807, 808, 810, 811, 813, 815, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 835, 837, 838, 839, 840, 841, 842, 844, 845, 847, 850, 851, 852, 854, 855, 860, 861, 864, 866, 867, 868, 870, 871, 872, 874, 876, 877, 878, 879, 881, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 905, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1014, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1087, 1088, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1180, 1182, 1198, 1206, 1209], "arraywithactiv": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 384, 385, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1223, 1224], "base": [0, 1, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 189, 190, 192, 193, 194, 195, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 380, 383, 385, 391, 407, 434, 452, 473, 510, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 560, 648, 692, 695, 696, 699, 700, 703, 704, 707, 747, 750, 798, 833, 856, 863, 872, 1115, 1116, 1117, 1121, 1123, 1135, 1136, 1139, 1163, 1184, 1185, 1186, 1189, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "abc": [0, 1, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 191, 192, 393, 510, 519, 525, 798, 823, 1210, 1211, 1214, 1218], "softplu": [0, 1, 2, 189, 190, 196, 314, 419, 429, 1177], "out": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 134, 135, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 297, 298, 300, 301, 302, 303, 304, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 396, 407, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 479, 481, 510, 555, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 824, 826, 827, 828, 829, 830, 831, 838, 851, 854, 855, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1114, 1115, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1198, 1206], "none": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 172, 174, 177, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 376, 378, 381, 385, 386, 387, 388, 389, 391, 393, 395, 396, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 479, 481, 482, 484, 486, 488, 489, 490, 493, 496, 510, 519, 520, 528, 529, 552, 553, 554, 555, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 810, 811, 812, 813, 815, 816, 817, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 836, 838, 839, 843, 849, 851, 854, 855, 856, 857, 862, 863, 869, 872, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1081, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1187, 1188, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "instanc": [0, 1, 2, 3, 6, 7, 8, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 170, 171, 189, 190, 191, 192, 193, 194, 196, 197, 200, 202, 203, 205, 222, 223, 224, 225, 240, 242, 280, 285, 293, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 360, 361, 368, 369, 373, 377, 378, 380, 381, 384, 386, 388, 389, 394, 395, 396, 409, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 482, 483, 484, 485, 510, 519, 551, 560, 561, 562, 563, 564, 574, 575, 576, 579, 582, 590, 595, 599, 602, 619, 622, 623, 624, 625, 626, 631, 643, 656, 657, 658, 660, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 786, 787, 789, 791, 792, 793, 798, 799, 800, 801, 815, 826, 827, 828, 829, 842, 866, 868, 874, 875, 876, 878, 910, 913, 916, 922, 923, 924, 925, 926, 929, 931, 932, 935, 937, 995, 996, 999, 1011, 1012, 1013, 1014, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1046, 1047, 1048, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172, 1187, 1188], "method": [0, 1, 3, 6, 7, 8, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 170, 171, 189, 190, 191, 192, 193, 194, 195, 197, 200, 202, 203, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 368, 369, 373, 376, 377, 378, 380, 381, 384, 389, 391, 392, 395, 396, 408, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 436, 437, 440, 441, 444, 445, 446, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 560, 561, 562, 563, 565, 575, 576, 578, 579, 582, 590, 595, 599, 602, 619, 622, 623, 624, 625, 626, 631, 643, 656, 657, 658, 660, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 785, 786, 787, 789, 790, 791, 792, 793, 798, 799, 800, 801, 803, 814, 815, 826, 827, 828, 829, 831, 854, 855, 866, 868, 872, 874, 875, 876, 878, 892, 894, 896, 898, 910, 916, 922, 923, 924, 925, 926, 928, 929, 931, 932, 995, 996, 999, 1011, 1012, 1013, 1014, 1016, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1046, 1047, 1049, 1050, 1059, 1062, 1075, 1076, 1086, 1087, 1088, 1093, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172, 1177, 1198, 1209, 1210, 1211], "variant": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 377, 378, 425, 426, 427, 429, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 799, 800, 801, 803, 827, 828, 829, 831, 874, 875, 876, 878, 924, 925, 926, 928, 1012, 1013, 1014, 1016, 1045, 1046, 1047, 1049, 1100, 1102, 1117, 1118, 1119, 1120], "thi": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 407, 408, 425, 426, 427, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 482, 483, 484, 485, 486, 510, 534, 538, 542, 549, 554, 559, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 599, 602, 615, 618, 619, 622, 623, 624, 625, 626, 631, 652, 655, 656, 657, 658, 660, 688, 691, 708, 716, 719, 720, 723, 739, 742, 751, 754, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 789, 790, 791, 792, 793, 798, 799, 800, 801, 803, 825, 826, 827, 828, 829, 831, 842, 853, 858, 872, 874, 875, 876, 878, 879, 881, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 908, 910, 913, 919, 922, 923, 924, 925, 926, 928, 932, 934, 935, 937, 951, 953, 970, 1011, 1012, 1013, 1014, 1016, 1025, 1028, 1029, 1032, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1055, 1058, 1075, 1081, 1087, 1088, 1093, 1094, 1097, 1100, 1102, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1128, 1135, 1140, 1143, 1144, 1147, 1156, 1159, 1164, 1167, 1168, 1169, 1172, 1177, 1183, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1219], "simpli": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 372, 377, 378, 380, 381, 384, 385, 387, 388, 389, 391, 395, 396, 425, 426, 427, 429, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 560, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 652, 655, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 799, 800, 801, 803, 827, 828, 829, 831, 874, 875, 876, 878, 924, 925, 926, 928, 1012, 1013, 1014, 1016, 1045, 1046, 1047, 1049, 1100, 1102, 1117, 1118, 1119, 1120], "wrap": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 369, 375, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 396, 408, 409, 417, 425, 426, 427, 429, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 798, 799, 800, 801, 803, 809, 827, 828, 829, 831, 872, 874, 875, 876, 878, 908, 924, 925, 926, 928, 1012, 1013, 1014, 1016, 1045, 1046, 1047, 1049, 1100, 1102, 1117, 1118, 1119, 1120], "function": [0, 1, 2, 3, 6, 7, 8, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 170, 171, 172, 176, 177, 178, 186, 189, 190, 191, 192, 196, 197, 200, 202, 203, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 382, 384, 388, 390, 392, 393, 394, 395, 406, 407, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 573, 574, 575, 576, 577, 578, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 624, 625, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 657, 658, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1180, 1182, 1184, 1185, 1186, 1214, 1217, 1219], "so": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 186, 187, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 371, 372, 376, 377, 378, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 417, 425, 426, 427, 429, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 799, 800, 801, 803, 827, 828, 829, 831, 874, 875, 876, 878, 924, 925, 926, 928, 1012, 1013, 1014, 1016, 1045, 1046, 1047, 1049, 1075, 1076, 1086, 1100, 1102, 1117, 1118, 1119, 1120, 1177], "docstr": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 373, 374, 375, 376, 381, 385, 389, 425, 426, 427, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 482, 483, 484, 485, 486, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 599, 602, 619, 622, 623, 624, 625, 626, 631, 656, 657, 658, 660, 688, 691, 708, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 789, 790, 791, 792, 793, 799, 800, 801, 803, 827, 828, 829, 831, 874, 875, 876, 878, 923, 924, 925, 926, 928, 932, 935, 937, 1011, 1012, 1013, 1014, 1016, 1025, 1028, 1029, 1032, 1045, 1046, 1047, 1048, 1049, 1100, 1102, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172], "also": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 186, 187, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 370, 371, 372, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 425, 426, 427, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 482, 483, 484, 485, 486, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 599, 602, 619, 622, 623, 624, 625, 626, 631, 656, 657, 658, 660, 708, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 789, 790, 791, 792, 793, 798, 799, 800, 801, 803, 826, 827, 828, 829, 831, 842, 872, 874, 875, 876, 878, 879, 881, 910, 913, 919, 922, 923, 924, 925, 926, 928, 932, 935, 937, 1011, 1012, 1013, 1014, 1016, 1025, 1028, 1029, 1032, 1045, 1046, 1047, 1048, 1049, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1087, 1093, 1094, 1097, 1100, 1102, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172, 1198, 1208], "appli": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 371, 372, 373, 377, 378, 380, 381, 383, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 406, 408, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 473, 482, 483, 484, 486, 501, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 798, 799, 800, 801, 803, 820, 821, 822, 827, 828, 829, 831, 872, 874, 875, 876, 878, 892, 894, 896, 898, 910, 919, 921, 922, 923, 924, 925, 926, 928, 946, 955, 957, 964, 966, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1016, 1045, 1046, 1047, 1049, 1055, 1058, 1071, 1072, 1073, 1075, 1081, 1084, 1087, 1088, 1093, 1094, 1097, 1100, 1102, 1117, 1118, 1119, 1120, 1177, 1184, 1185, 1186, 1212, 1213], "minim": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 377, 388, 391, 425, 426, 427, 429, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 799, 800, 801, 803, 827, 828, 829, 831, 874, 875, 876, 878, 924, 925, 926, 928, 1012, 1013, 1014, 1016, 1045, 1046, 1047, 1049, 1100, 1102, 1117, 1118, 1119, 1120], "chang": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 28, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 188, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 285, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 371, 372, 373, 374, 377, 379, 380, 385, 391, 395, 408, 425, 426, 427, 429, 436, 437, 440, 441, 444, 445, 448, 449, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 486, 510, 561, 562, 563, 565, 575, 576, 578, 590, 595, 623, 624, 625, 657, 658, 660, 708, 785, 786, 787, 790, 791, 792, 793, 799, 800, 801, 803, 827, 828, 829, 831, 874, 875, 876, 878, 923, 924, 925, 926, 928, 929, 931, 1011, 1012, 1013, 1014, 1016, 1041, 1044, 1045, 1046, 1047, 1049, 1075, 1077, 1087, 1100, 1102, 1117, 1118, 1119, 1120, 1177, 1183], "return": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 172, 176, 177, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 505, 509, 510, 519, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1182, 1187, 1188, 1198, 1207, 1208, 1214, 1218], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 375, 376, 377, 378, 383, 384, 385, 387, 388, 389, 391, 393, 394, 396, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 505, 509, 510, 526, 527, 528, 529, 530, 532, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 809, 810, 811, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 837, 838, 840, 841, 842, 844, 845, 846, 847, 851, 854, 855, 856, 857, 860, 862, 863, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 877, 878, 879, 881, 882, 884, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 901, 902, 903, 905, 907, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209], "activ": [1, 2, 8, 170, 171, 190, 196, 203, 368, 369, 371, 372, 374, 376, 395, 420, 421, 422, 423, 424, 425, 428, 430, 1177, 1185, 1186], "support": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1181, 1182, 1183, 1185, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1224], "framework": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 375, 379, 381, 382, 383, 384, 387, 389, 390, 393, 396, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1224], "array_method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 425, 426, 436, 437, 440, 441, 444, 445, 448, 449, 453, 454, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 561, 562, 567, 570, 571, 575, 579, 580, 583, 584, 588, 591, 592, 595, 596, 599, 600, 603, 604, 607, 608, 611, 612, 615, 616, 619, 620, 623, 624, 628, 632, 636, 641, 644, 645, 649, 652, 653, 657, 660, 661, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 704, 705, 708, 709, 712, 713, 716, 717, 720, 721, 724, 725, 730, 731, 735, 736, 739, 740, 743, 744, 747, 748, 751, 752, 755, 756, 759, 760, 763, 764, 767, 768, 771, 772, 775, 776, 779, 781, 786, 791, 794, 795, 799, 800, 827, 828, 874, 875, 924, 925, 929, 930, 933, 935, 936, 938, 939, 941, 942, 945, 946, 947, 948, 951, 952, 955, 956, 958, 959, 961, 962, 964, 965, 967, 968, 970, 971, 972, 975, 976, 977, 978, 980, 981, 983, 984, 986, 987, 989, 990, 992, 993, 996, 997, 1001, 1002, 1006, 1007, 1012, 1013, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1038, 1041, 1042, 1045, 1046, 1051, 1052, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1094, 1095, 1117, 1119, 1125, 1126, 1130, 1131, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1161, 1164, 1165, 1169, 1170, 1173, 1174], "ab": [2, 140, 141, 196, 292, 338, 339, 380, 383, 560, 565, 747, 750, 923, 989, 991, 1177], "self": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 191, 192, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 384, 385, 391, 393, 394, 395, 396, 425, 426, 427, 436, 437, 440, 441, 444, 445, 448, 449, 453, 454, 456, 457, 460, 461, 463, 464, 466, 467, 470, 471, 482, 483, 484, 510, 561, 562, 563, 567, 568, 569, 570, 571, 572, 575, 576, 577, 579, 580, 581, 583, 584, 585, 588, 589, 590, 591, 592, 593, 595, 596, 597, 599, 600, 601, 603, 604, 605, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 623, 624, 625, 628, 629, 630, 632, 633, 634, 636, 637, 638, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 718, 720, 721, 722, 724, 725, 726, 730, 731, 732, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 748, 749, 751, 752, 753, 755, 756, 757, 759, 760, 761, 763, 764, 765, 767, 768, 769, 771, 772, 773, 775, 776, 777, 779, 781, 782, 786, 787, 788, 791, 792, 793, 794, 795, 796, 799, 800, 801, 811, 812, 827, 828, 829, 874, 875, 876, 879, 880, 884, 885, 888, 889, 892, 893, 896, 897, 900, 901, 924, 925, 926, 929, 930, 933, 935, 936, 938, 939, 941, 942, 945, 946, 947, 948, 949, 951, 952, 955, 956, 958, 959, 961, 962, 964, 965, 967, 968, 970, 971, 972, 975, 976, 977, 978, 980, 981, 983, 984, 986, 987, 989, 990, 992, 993, 996, 997, 998, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1013, 1014, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1045, 1046, 1047, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1094, 1095, 1096, 1104, 1105, 1117, 1119, 1120, 1125, 1126, 1127, 1130, 1131, 1132, 1136, 1137, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1173, 1174, 1175, 1177, 1214, 1218], "exampl": [2, 3, 6, 7, 8, 10, 26, 27, 28, 29, 49, 53, 95, 114, 115, 122, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 170, 171, 172, 176, 177, 178, 184, 188, 193, 194, 196, 197, 200, 202, 203, 205, 222, 223, 224, 225, 240, 242, 280, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 368, 369, 371, 372, 373, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 396, 407, 408, 419, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 447, 448, 450, 453, 455, 459, 460, 462, 469, 470, 472, 473, 479, 482, 483, 484, 485, 486, 494, 495, 510, 529, 530, 532, 544, 545, 546, 547, 548, 551, 553, 555, 557, 558, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 598, 599, 602, 603, 606, 615, 618, 619, 622, 623, 624, 625, 626, 627, 631, 643, 648, 656, 657, 658, 660, 664, 667, 668, 671, 684, 687, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 798, 799, 800, 801, 802, 803, 806, 807, 815, 816, 823, 826, 827, 828, 829, 830, 831, 834, 845, 860, 861, 866, 867, 868, 872, 874, 875, 876, 877, 878, 910, 911, 913, 915, 916, 917, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 935, 937, 944, 955, 957, 961, 963, 974, 980, 982, 983, 985, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1156, 1159, 1160, 1163, 1168, 1169, 1172, 1177], "us": [2, 3, 8, 140, 141, 170, 171, 172, 177, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 338, 339, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 407, 408, 419, 421, 422, 423, 424, 425, 428, 430, 433, 473, 492, 510, 519, 520, 545, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 579, 582, 599, 602, 619, 622, 631, 643, 667, 668, 671, 688, 691, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 798, 826, 833, 834, 848, 854, 855, 856, 857, 862, 863, 872, 874, 877, 879, 881, 892, 894, 896, 898, 910, 916, 918, 919, 921, 922, 923, 932, 935, 937, 951, 953, 995, 996, 999, 1011, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1048, 1059, 1062, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1084, 1085, 1086, 1088, 1093, 1094, 1097, 1110, 1111, 1112, 1113, 1115, 1116, 1135, 1136, 1139, 1163, 1168, 1169, 1172, 1177, 1198, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217], "x": [2, 3, 7, 26, 27, 28, 29, 49, 53, 95, 107, 114, 115, 122, 129, 132, 133, 136, 137, 140, 141, 142, 143, 150, 151, 154, 155, 162, 163, 172, 176, 184, 189, 190, 191, 192, 193, 194, 196, 197, 202, 222, 223, 224, 225, 240, 242, 280, 291, 292, 295, 297, 299, 300, 301, 304, 306, 311, 313, 314, 315, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 362, 363, 374, 376, 377, 378, 381, 382, 385, 388, 389, 391, 393, 394, 395, 396, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 453, 455, 456, 458, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 482, 483, 484, 485, 486, 491, 510, 529, 530, 531, 532, 535, 536, 544, 548, 553, 555, 560, 561, 562, 563, 564, 565, 566, 569, 570, 573, 574, 575, 576, 578, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 619, 622, 623, 624, 625, 626, 627, 630, 631, 634, 643, 644, 647, 648, 652, 655, 656, 657, 658, 660, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 716, 719, 728, 729, 735, 738, 743, 746, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 806, 807, 808, 810, 811, 813, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 837, 838, 840, 841, 842, 844, 845, 846, 847, 851, 860, 861, 864, 866, 867, 868, 870, 871, 872, 883, 888, 890, 891, 905, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 951, 953, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 974, 976, 977, 979, 980, 982, 983, 985, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1075, 1076, 1081, 1085, 1086, 1087, 1093, 1094, 1097, 1098, 1100, 1101, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1209], "2": [2, 3, 6, 7, 10, 26, 27, 28, 29, 37, 49, 53, 95, 114, 115, 116, 122, 125, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 172, 176, 191, 192, 193, 194, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 292, 293, 295, 299, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 371, 372, 374, 378, 382, 385, 389, 390, 391, 393, 394, 395, 396, 408, 419, 421, 422, 423, 424, 430, 433, 434, 447, 448, 450, 453, 455, 459, 460, 462, 470, 472, 473, 479, 482, 483, 484, 485, 486, 510, 529, 530, 532, 544, 546, 548, 555, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 587, 590, 591, 594, 595, 599, 602, 603, 606, 615, 618, 619, 622, 623, 624, 625, 626, 627, 631, 643, 648, 656, 657, 658, 660, 664, 667, 668, 671, 684, 687, 688, 691, 704, 707, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 789, 790, 791, 792, 793, 798, 799, 800, 801, 802, 806, 807, 810, 811, 813, 816, 823, 826, 827, 828, 829, 830, 831, 845, 860, 861, 866, 872, 874, 875, 876, 877, 878, 910, 913, 914, 915, 916, 917, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 935, 936, 937, 944, 946, 947, 950, 951, 953, 955, 957, 961, 963, 964, 966, 967, 969, 974, 980, 981, 982, 983, 985, 989, 990, 991, 995, 996, 999, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172, 1177], "6": [2, 3, 6, 7, 27, 29, 140, 141, 144, 145, 154, 155, 193, 194, 196, 197, 202, 223, 292, 295, 304, 311, 338, 339, 340, 341, 356, 357, 374, 378, 382, 385, 393, 394, 395, 419, 421, 422, 424, 434, 448, 450, 510, 532, 548, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 599, 602, 603, 606, 619, 622, 623, 624, 625, 626, 631, 643, 656, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 755, 758, 771, 774, 775, 778, 784, 789, 798, 807, 816, 826, 827, 830, 831, 861, 866, 872, 874, 875, 877, 910, 913, 916, 917, 922, 923, 929, 931, 932, 935, 937, 961, 963, 974, 980, 982, 995, 996, 999, 1006, 1009, 1011, 1012, 1013, 1015, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1110, 1111, 1114, 1115, 1116, 1117, 1121, 1135, 1136, 1139, 1140, 1143, 1163], "1": [2, 3, 6, 7, 10, 12, 26, 27, 28, 29, 34, 35, 37, 49, 53, 60, 95, 102, 103, 114, 115, 122, 124, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 172, 178, 184, 187, 188, 191, 192, 193, 194, 196, 197, 200, 202, 205, 207, 222, 223, 224, 225, 231, 240, 242, 252, 276, 280, 286, 287, 293, 295, 296, 297, 299, 300, 301, 302, 304, 311, 312, 313, 315, 316, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 374, 378, 381, 385, 388, 389, 390, 391, 393, 394, 395, 396, 408, 419, 421, 422, 423, 424, 430, 434, 435, 448, 450, 451, 452, 453, 455, 459, 460, 462, 470, 472, 473, 479, 482, 483, 484, 485, 486, 493, 510, 514, 517, 519, 524, 529, 530, 532, 534, 538, 542, 544, 547, 548, 555, 560, 561, 562, 563, 564, 566, 569, 570, 573, 574, 575, 576, 578, 579, 582, 590, 591, 594, 595, 599, 602, 603, 606, 615, 618, 619, 622, 623, 624, 625, 626, 627, 630, 631, 634, 643, 648, 652, 655, 656, 657, 658, 660, 664, 667, 668, 671, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 728, 729, 735, 738, 739, 742, 747, 750, 755, 758, 759, 762, 763, 766, 771, 774, 775, 778, 784, 785, 786, 787, 789, 790, 791, 792, 793, 798, 799, 800, 801, 802, 803, 806, 807, 815, 816, 823, 826, 827, 828, 829, 830, 831, 845, 851, 854, 855, 860, 861, 863, 866, 867, 868, 870, 872, 874, 875, 876, 877, 878, 910, 911, 912, 913, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 935, 936, 937, 944, 955, 957, 961, 963, 971, 973, 974, 980, 982, 983, 985, 986, 987, 988, 989, 991, 995, 996, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1075, 1087, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1139, 1140, 1143, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "0": [2, 3, 6, 10, 27, 28, 29, 30, 31, 37, 46, 49, 60, 95, 107, 108, 114, 115, 118, 119, 120, 122, 123, 134, 135, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 156, 157, 162, 163, 166, 167, 172, 176, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 205, 222, 223, 224, 225, 227, 228, 237, 240, 250, 251, 252, 276, 280, 291, 292, 293, 294, 295, 296, 299, 300, 301, 304, 307, 308, 311, 312, 313, 318, 319, 320, 321, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 376, 377, 378, 391, 393, 394, 395, 396, 419, 421, 422, 423, 424, 425, 428, 430, 434, 435, 443, 451, 452, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 479, 482, 484, 485, 486, 493, 510, 512, 515, 519, 522, 526, 529, 530, 532, 535, 536, 537, 538, 539, 540, 541, 542, 544, 548, 551, 553, 554, 558, 560, 561, 562, 564, 565, 566, 569, 570, 573, 574, 578, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 607, 610, 615, 618, 619, 622, 623, 624, 625, 626, 627, 630, 631, 634, 643, 648, 652, 655, 656, 657, 658, 660, 667, 668, 671, 688, 691, 692, 695, 696, 699, 704, 707, 708, 728, 729, 730, 733, 735, 738, 739, 742, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 803, 806, 807, 810, 811, 813, 815, 816, 817, 823, 826, 827, 830, 831, 836, 845, 851, 854, 855, 860, 866, 867, 868, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 896, 897, 898, 899, 910, 911, 913, 915, 916, 917, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 935, 936, 937, 944, 974, 980, 982, 983, 984, 985, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1062, 1067, 1069, 1075, 1087, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1172, 1177, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221], "y": [2, 3, 7, 10, 27, 28, 29, 49, 53, 95, 114, 115, 122, 140, 141, 142, 143, 150, 151, 154, 155, 162, 163, 193, 194, 196, 197, 202, 205, 223, 224, 225, 240, 242, 280, 292, 295, 296, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 338, 339, 340, 341, 348, 349, 352, 353, 356, 357, 360, 361, 376, 378, 382, 385, 391, 393, 419, 421, 422, 423, 424, 425, 428, 430, 434, 447, 448, 450, 453, 455, 459, 460, 462, 470, 472, 473, 479, 510, 530, 544, 548, 553, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 591, 594, 595, 599, 602, 603, 606, 615, 618, 619, 622, 623, 624, 625, 626, 627, 631, 643, 648, 656, 657, 658, 660, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 789, 790, 791, 792, 793, 798, 799, 800, 801, 802, 803, 806, 807, 815, 816, 823, 824, 826, 827, 828, 829, 830, 831, 860, 866, 867, 868, 872, 883, 910, 916, 917, 919, 923, 924, 925, 926, 927, 928, 929, 931, 932, 944, 961, 963, 980, 982, 983, 985, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1059, 1062, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1156, 1159, 1160, 1163, 1168, 1169, 1172], "print": [2, 3, 6, 7, 8, 10, 26, 27, 28, 29, 49, 53, 95, 114, 115, 122, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 170, 171, 172, 176, 177, 178, 184, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 222, 223, 224, 225, 240, 242, 280, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 368, 369, 371, 378, 385, 391, 393, 394, 395, 419, 421, 422, 423, 424, 425, 428, 430, 434, 447, 448, 450, 453, 455, 459, 460, 462, 469, 470, 472, 473, 479, 482, 483, 484, 485, 486, 494, 495, 510, 530, 544, 545, 546, 547, 548, 550, 553, 557, 560, 561, 562, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 598, 599, 602, 603, 606, 615, 618, 619, 622, 623, 624, 625, 626, 627, 631, 643, 648, 656, 657, 658, 660, 664, 667, 668, 671, 684, 687, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 798, 799, 800, 801, 802, 803, 806, 807, 815, 816, 823, 826, 827, 828, 829, 830, 831, 834, 852, 860, 861, 866, 867, 868, 872, 874, 875, 877, 878, 910, 911, 913, 915, 916, 917, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 935, 937, 944, 961, 963, 974, 980, 982, 983, 985, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1156, 1159, 1160, 1163, 1168, 1169, 1172, 1177], "aco": [2, 140, 141, 196, 338, 339, 560, 570, 1177], "acosh": [2, 140, 141, 196, 338, 339, 473, 494, 495, 560, 569, 630, 634, 1177], "adam_step": [2, 144, 145, 196, 293, 342, 343, 872, 878], "mw": [2, 6, 144, 145, 196, 200, 293, 342, 343, 395, 872, 874, 875, 876, 877, 878, 879, 881], "vw": [2, 6, 144, 145, 196, 200, 293, 342, 343, 395, 872, 874, 875, 876, 877, 878, 879, 881], "step": [2, 6, 144, 145, 188, 191, 192, 196, 200, 201, 250, 293, 294, 307, 342, 343, 371, 372, 374, 378, 382, 384, 385, 386, 387, 391, 394, 395, 396, 407, 434, 435, 451, 452, 510, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 886, 892, 893, 894, 895, 896, 898, 900, 902, 1071, 1072, 1073, 1074, 1177, 1214, 1215, 1216, 1217, 1218, 1219], "beta1": [2, 6, 144, 145, 196, 200, 201, 250, 293, 294, 307, 342, 343, 395, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 1214, 1215, 1216], "9": [2, 6, 7, 29, 140, 141, 144, 145, 154, 155, 193, 194, 196, 200, 201, 202, 250, 293, 294, 295, 307, 311, 338, 339, 342, 343, 356, 357, 374, 378, 394, 395, 560, 574, 575, 576, 578, 599, 602, 603, 606, 708, 728, 729, 755, 758, 771, 774, 775, 778, 798, 826, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 910, 913, 916, 917, 923, 924, 927, 929, 931, 932, 935, 937, 961, 963, 974, 980, 982, 1011, 1012, 1013, 1015, 1029, 1032, 1037, 1040, 1045, 1048, 1050, 1098, 1099, 1100, 1101, 1102, 1110, 1114, 1115, 1116, 1135, 1136, 1139, 1163, 1214, 1215, 1216], "beta2": [2, 6, 144, 145, 196, 200, 201, 250, 293, 294, 307, 342, 343, 395, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 1214, 1215, 1216], "999": [2, 6, 144, 145, 196, 200, 201, 250, 293, 294, 307, 319, 326, 338, 339, 342, 343, 395, 560, 590, 595, 789, 790, 792, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 1214, 1215, 1216], "epsilon": [2, 6, 19, 35, 60, 103, 144, 145, 152, 153, 156, 157, 196, 200, 201, 215, 231, 250, 252, 287, 293, 294, 298, 302, 307, 316, 342, 343, 350, 351, 354, 355, 381, 385, 388, 395, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 923, 946, 955, 957, 964, 966, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1093, 1094, 1095, 1096, 1097, 1212, 1213, 1214, 1215, 1216], "1e": [2, 6, 19, 35, 60, 103, 144, 145, 152, 153, 156, 157, 196, 200, 201, 215, 231, 250, 252, 287, 293, 294, 298, 302, 307, 316, 342, 343, 350, 351, 354, 355, 381, 385, 388, 395, 396, 798, 834, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 923, 974, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1093, 1094, 1095, 1096, 1097, 1177, 1214, 1215, 1216, 1217, 1219], "07": [2, 6, 19, 35, 103, 144, 145, 152, 153, 196, 200, 201, 215, 231, 250, 287, 293, 294, 298, 302, 307, 316, 342, 343, 350, 351, 395, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 892, 893, 894, 895, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1214, 1215, 1216], "With": [2, 6, 10, 122, 142, 143, 144, 145, 162, 163, 187, 188, 191, 192, 193, 194, 196, 205, 292, 295, 296, 300, 301, 304, 311, 313, 318, 319, 320, 329, 338, 339, 340, 341, 348, 349, 352, 353, 356, 357, 360, 361, 371, 378, 380, 391, 419, 421, 422, 423, 424, 425, 428, 430, 434, 453, 455, 473, 482, 485, 510, 532, 548, 560, 561, 564, 565, 574, 578, 579, 582, 590, 595, 599, 602, 619, 622, 623, 626, 631, 643, 656, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 789, 790, 793, 798, 799, 800, 801, 802, 803, 807, 815, 816, 823, 826, 827, 830, 831, 861, 866, 867, 868, 872, 874, 875, 877, 910, 913, 916, 917, 922, 923, 924, 927, 928, 929, 931, 932, 935, 937, 951, 953, 980, 982, 995, 996, 999, 1006, 1009, 1011, 1012, 1015, 1016, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1048, 1049, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1163, 1168, 1169, 1172], "input": [2, 6, 129, 132, 133, 144, 145, 191, 192, 193, 194, 195, 196, 200, 292, 293, 295, 296, 300, 301, 304, 311, 313, 318, 319, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 408, 409, 417, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 482, 485, 487, 488, 489, 490, 491, 492, 498, 499, 500, 501, 505, 510, 519, 520, 529, 530, 531, 532, 534, 535, 538, 542, 548, 554, 555, 560, 561, 564, 565, 566, 569, 570, 573, 574, 577, 578, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 785, 788, 789, 790, 793, 794, 797, 798, 799, 802, 803, 804, 806, 807, 808, 810, 811, 813, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 835, 837, 838, 840, 841, 842, 844, 845, 846, 847, 851, 854, 855, 860, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 877, 878, 883, 888, 890, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213], "dcdw": [2, 6, 144, 145, 196, 200, 201, 243, 250, 251, 293, 294, 305, 307, 308, 342, 343, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 892, 893, 894, 895, 896, 897, 898, 899], "3": [2, 6, 7, 10, 26, 29, 49, 53, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 193, 194, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 292, 293, 295, 299, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 371, 374, 378, 382, 385, 391, 393, 394, 395, 396, 419, 421, 422, 423, 424, 433, 434, 448, 450, 453, 455, 460, 462, 469, 470, 472, 473, 482, 483, 484, 485, 486, 510, 529, 532, 548, 555, 560, 561, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 599, 602, 615, 618, 619, 622, 623, 625, 626, 631, 643, 648, 656, 657, 658, 660, 664, 667, 668, 671, 684, 687, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 787, 789, 790, 792, 793, 798, 799, 800, 801, 806, 807, 816, 823, 826, 827, 828, 829, 830, 831, 860, 861, 866, 868, 872, 874, 875, 876, 877, 878, 910, 911, 912, 913, 915, 916, 917, 922, 923, 924, 926, 927, 928, 929, 931, 932, 935, 937, 944, 955, 957, 961, 963, 974, 980, 982, 983, 985, 992, 994, 995, 996, 999, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1160, 1163, 1168, 1169, 1172, 1177], "adam_step_delta": [2, 6, 144, 145, 196, 200, 293, 342, 343, 872, 874, 875, 876, 877, 878], "639": [2, 6, 144, 145, 872, 874, 875, 877], "11": [2, 6, 144, 145, 193, 194, 196, 202, 295, 311, 338, 339, 356, 357, 378, 385, 560, 574, 576, 578, 599, 602, 708, 755, 758, 798, 816, 826, 874, 875, 923, 935, 937, 961, 963, 995, 1006, 1009, 1011, 1029, 1032, 1037, 1040, 1098, 1100, 1101, 1102, 1110, 1114, 1115, 1116, 1135, 1136, 1139, 1163], "32": [2, 6, 144, 145, 394, 419, 421, 560, 619, 622, 874, 875, 910, 913, 916, 923, 961, 963, 1110, 1114, 1135, 1136, 1139, 1163], "63": [2, 6, 144, 145, 196, 224, 300, 348, 349, 560, 771, 774, 874, 875, 923, 924, 926, 927, 928, 961, 963, 1135, 1136, 1139, 1163], "00121": [2, 6, 144, 145, 874, 875], "0102": [2, 6, 144, 145, 874, 875], "0397": [2, 6, 144, 145, 874, 875], "add": [2, 8, 140, 141, 170, 171, 191, 192, 193, 194, 196, 203, 295, 296, 338, 339, 340, 341, 368, 369, 371, 372, 373, 375, 376, 377, 381, 382, 384, 385, 389, 391, 393, 408, 560, 561, 564, 578, 708, 799, 803, 1093, 1094, 1097, 1177, 1183, 1212, 1213], "x2": [2, 7, 10, 17, 20, 22, 23, 24, 25, 34, 38, 43, 50, 54, 55, 61, 62, 67, 68, 70, 71, 72, 80, 83, 85, 89, 92, 101, 109, 116, 124, 140, 141, 142, 143, 150, 151, 191, 192, 196, 202, 205, 213, 216, 218, 219, 220, 221, 232, 234, 241, 244, 245, 253, 254, 259, 260, 262, 263, 264, 268, 270, 274, 277, 295, 296, 303, 309, 317, 322, 338, 339, 340, 341, 348, 349, 378, 389, 473, 505, 510, 548, 560, 574, 575, 576, 577, 578, 591, 592, 593, 594, 599, 600, 601, 602, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 684, 685, 686, 687, 688, 689, 690, 691, 708, 709, 710, 711, 712, 713, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 739, 740, 741, 742, 747, 748, 749, 750, 751, 752, 753, 754, 779, 780, 781, 782, 783, 798, 799, 800, 801, 802, 803, 910, 915, 923, 929, 930, 931, 947, 948, 949, 950, 961, 962, 963, 971, 972, 973, 980, 981, 982, 986, 987, 988, 1110, 1114], "4": [2, 7, 29, 140, 141, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 222, 223, 225, 240, 242, 280, 292, 293, 295, 299, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 374, 378, 382, 385, 391, 393, 394, 395, 396, 419, 421, 422, 424, 434, 448, 450, 453, 455, 460, 462, 470, 472, 473, 482, 484, 485, 486, 510, 532, 548, 560, 561, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 591, 594, 595, 599, 602, 619, 622, 623, 625, 626, 631, 643, 656, 658, 660, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 787, 789, 790, 792, 793, 798, 807, 816, 825, 826, 827, 829, 830, 831, 861, 866, 872, 874, 876, 877, 878, 910, 913, 914, 915, 917, 920, 922, 923, 924, 927, 929, 931, 932, 935, 937, 944, 955, 957, 961, 963, 980, 982, 983, 985, 995, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1047, 1048, 1049, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172, 1177, 1214, 1215, 1216, 1217, 1219], "5": [2, 7, 10, 27, 28, 29, 49, 140, 141, 142, 143, 150, 151, 154, 155, 193, 194, 196, 197, 200, 202, 222, 223, 225, 240, 280, 292, 293, 295, 299, 301, 304, 311, 313, 318, 319, 325, 326, 334, 335, 338, 339, 340, 341, 342, 343, 352, 353, 356, 357, 372, 374, 378, 382, 389, 393, 394, 395, 419, 421, 422, 424, 434, 448, 450, 453, 455, 460, 462, 469, 470, 472, 473, 482, 484, 485, 486, 510, 532, 548, 560, 561, 563, 564, 565, 574, 575, 576, 578, 579, 582, 590, 595, 598, 599, 602, 615, 618, 619, 622, 623, 624, 625, 626, 631, 643, 656, 657, 658, 660, 667, 668, 671, 688, 691, 708, 728, 729, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 787, 788, 789, 790, 792, 793, 798, 799, 800, 807, 816, 826, 827, 830, 831, 861, 866, 872, 874, 876, 877, 878, 910, 913, 915, 916, 922, 923, 924, 925, 927, 929, 931, 932, 935, 937, 944, 961, 963, 980, 982, 983, 985, 995, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1045, 1047, 1048, 1049, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172, 1198, 1209], "z": [2, 7, 53, 140, 141, 142, 143, 193, 194, 196, 202, 242, 295, 304, 338, 339, 340, 341, 378, 382, 385, 391, 393, 510, 544, 560, 574, 575, 576, 578, 599, 602, 619, 622, 643, 667, 668, 671, 688, 691, 708, 728, 729, 798, 806, 807, 826, 827, 828, 829, 831, 860, 923, 929, 931, 995, 996, 999, 1001, 1004, 1011, 1012, 1015, 1110, 1111, 1135, 1136, 1139, 1140, 1143, 1163], "7": [2, 7, 29, 140, 141, 154, 155, 193, 194, 196, 202, 295, 311, 338, 339, 356, 357, 372, 374, 378, 381, 385, 388, 419, 421, 422, 510, 532, 560, 561, 564, 574, 575, 576, 578, 599, 602, 603, 606, 619, 622, 623, 626, 631, 643, 648, 656, 667, 668, 671, 688, 691, 708, 728, 729, 755, 758, 771, 774, 784, 789, 798, 807, 816, 826, 872, 874, 877, 879, 881, 892, 894, 910, 916, 917, 922, 923, 924, 927, 929, 931, 932, 935, 937, 961, 963, 980, 982, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1013, 1015, 1025, 1028, 1029, 1032, 1037, 1040, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1110, 1114, 1115, 1116, 1135, 1136, 1139, 1163], "add_ivy_array_instance_method": [2, 170], "cl": [2, 8, 170, 171, 196, 203, 368, 369], "modul": [2, 8, 170, 171, 172, 176, 177, 188, 191, 192, 193, 194, 195, 196, 203, 368, 369, 371, 374, 380, 381, 382, 384, 388, 391, 392, 394, 396, 407, 408, 798, 849, 1098, 1099, 1103, 1177, 1184, 1185, 1186, 1187, 1188, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1220, 1221], "to_ignor": [2, 8, 170, 171, 196, 203, 368, 369, 1075, 1086], "loop": [2, 8, 170, 171, 196, 203, 368, 369, 382, 408, 1071, 1072, 1073, 1074], "over": [2, 8, 170, 171, 172, 176, 186, 188, 191, 192, 196, 203, 368, 369, 371, 377, 378, 382, 388, 393, 408, 923, 951, 953, 980, 982, 986, 988, 989, 991, 1093, 1094, 1097, 1098, 1104, 1106, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1212, 1213], "all": [2, 8, 129, 130, 131, 132, 133, 168, 169, 170, 171, 186, 187, 188, 191, 192, 196, 203, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 407, 408, 409, 417, 431, 432, 434, 435, 463, 465, 466, 468, 510, 519, 544, 550, 798, 799, 802, 806, 807, 832, 852, 867, 910, 920, 923, 971, 973, 980, 982, 989, 991, 1011, 1029, 1032, 1045, 1048, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1086, 1087, 1088, 1098, 1099, 1104, 1106, 1168, 1177, 1180, 1182], "gener": [2, 8, 143, 170, 171, 191, 192, 196, 203, 341, 368, 369, 372, 373, 374, 375, 376, 377, 378, 381, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 407, 408, 431, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 751, 754, 771, 774, 775, 778, 799, 802, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 888, 890, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1098, 1099, 1100, 1101, 1104, 1106, 1108, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1177, 1214, 1218], "etc": [2, 8, 170, 171, 188, 191, 192, 196, 203, 368, 369, 371, 372, 373, 376, 378, 380, 384, 385, 386, 389, 391, 393, 394, 408, 434, 451, 452, 798, 826, 827, 830, 851, 854, 855, 1098, 1099, 1100, 1101, 1104, 1106, 1115, 1116, 1117, 1121, 1123, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "_wrap_funct": [2, 8, 170, 171, 196, 203, 368, 369, 381, 383], "paramet": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 176, 177, 191, 192, 193, 194, 195, 196, 203, 368, 369, 376, 377, 380, 393, 394, 407, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 509, 510, 519, 520, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 802, 804, 805, 806, 807, 808, 809, 810, 811, 813, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 874, 877, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1180, 1182, 1187, 1188, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "we": [2, 8, 170, 171, 172, 177, 178, 184, 185, 186, 187, 188, 196, 203, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 407, 408, 872, 883, 1177, 1183], "want": [2, 8, 170, 171, 172, 177, 187, 196, 203, 368, 369, 370, 371, 372, 380, 394, 395, 396, 408], "list": [2, 8, 78, 129, 130, 131, 132, 133, 134, 135, 170, 171, 191, 192, 196, 200, 203, 293, 320, 329, 342, 343, 360, 361, 368, 369, 371, 373, 374, 376, 378, 386, 387, 389, 391, 394, 395, 396, 408, 434, 435, 436, 438, 439, 453, 454, 455, 456, 458, 459, 469, 473, 480, 510, 519, 520, 529, 531, 532, 535, 536, 539, 540, 554, 798, 807, 861, 866, 870, 874, 876, 878, 910, 911, 912, 913, 914, 915, 916, 917, 923, 980, 982, 1011, 1017, 1020, 1029, 1032, 1050, 1055, 1058, 1075, 1076, 1077, 1081, 1086, 1087, 1093, 1094, 1097, 1110, 1113, 1115, 1117, 1118, 1120, 1121, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "option": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 177, 191, 192, 193, 194, 196, 203, 368, 369, 371, 372, 376, 377, 378, 381, 385, 386, 387, 388, 389, 391, 396, 408, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 487, 488, 489, 490, 497, 509, 510, 529, 553, 554, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 804, 810, 811, 813, 816, 817, 818, 820, 821, 822, 824, 826, 827, 830, 838, 849, 851, 854, 855, 862, 863, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1081, 1086, 1087, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1114, 1115, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "iter": [2, 8, 129, 130, 131, 132, 133, 170, 171, 188, 191, 192, 193, 194, 195, 196, 203, 368, 369, 385, 391, 394, 431, 432, 510, 532, 533, 535, 536, 537, 538, 541, 554, 798, 799, 802, 855, 860, 1011, 1021, 1024, 1037, 1040, 1050, 1063, 1066, 1067, 1070, 1075, 1076, 1077, 1081, 1085, 1086, 1087], "ani": [2, 8, 129, 130, 131, 168, 169, 170, 171, 172, 176, 184, 186, 187, 188, 191, 192, 196, 203, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 510, 555, 560, 561, 564, 574, 579, 582, 623, 626, 640, 643, 656, 667, 668, 671, 688, 691, 739, 742, 771, 774, 775, 778, 784, 798, 799, 802, 819, 820, 821, 822, 823, 826, 837, 844, 845, 846, 847, 862, 863, 872, 883, 910, 913, 920, 922, 923, 935, 937, 1011, 1045, 1048, 1071, 1072, 1073, 1074, 1075, 1081, 1085, 1093, 1094, 1097, 1098, 1104, 1106, 1115, 1117, 1121, 1135, 1140, 1143, 1168, 1169, 1172, 1177], "item": [2, 8, 129, 133, 170, 171, 191, 192, 386, 391, 393, 394, 396, 473, 488, 510, 519, 520, 522, 529, 531, 533, 535, 537, 541, 798, 814, 836, 862, 863, 1075, 1080, 1081, 1082, 1083, 1087, 1091, 1092, 1177, 1210, 1211], "don": [2, 8, 170, 171, 188, 196, 203, 368, 369, 371, 372, 373, 386, 395, 408], "t": [2, 8, 170, 171, 172, 177, 187, 188, 196, 203, 368, 369, 371, 372, 373, 374, 378, 386, 391, 393, 394, 395, 396, 408, 798, 807, 910, 919, 920], "an": [2, 8, 129, 132, 133, 170, 171, 187, 188, 191, 192, 196, 203, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 419, 422, 423, 425, 428, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 482, 485, 493, 498, 499, 501, 510, 532, 536, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 809, 810, 811, 813, 815, 824, 825, 826, 838, 842, 844, 845, 846, 847, 867, 868, 869, 872, 888, 890, 905, 907, 908, 910, 913, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 954, 955, 957, 958, 960, 964, 966, 967, 969, 970, 971, 973, 974, 983, 985, 986, 988, 989, 991, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1075, 1081, 1093, 1094, 1097, 1098, 1100, 1101, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1187, 1188, 1210, 1211, 1214, 1215, 1216, 1218], "default": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 177, 191, 192, 193, 194, 195, 196, 203, 368, 369, 372, 377, 378, 381, 382, 385, 386, 387, 389, 395, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 488, 489, 490, 491, 510, 519, 520, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 549, 551, 552, 553, 554, 555, 558, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 802, 804, 810, 811, 813, 816, 817, 820, 821, 822, 824, 825, 826, 827, 830, 835, 836, 837, 838, 839, 842, 843, 844, 845, 847, 848, 849, 851, 853, 854, 855, 858, 860, 862, 863, 870, 871, 872, 874, 877, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 905, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1088, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1187, 1188, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "As": [2, 8, 170, 171, 186, 196, 203, 368, 369, 372, 380, 381, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 408, 1115, 1116, 1117, 1121, 1123], "shown": [2, 8, 170, 171, 191, 192, 196, 203, 368, 369, 372, 378, 389, 391, 393, 408, 560, 599, 602, 619, 622, 631, 755, 758, 789, 923, 932, 1011, 1025, 1028, 1029, 1032, 1115, 1116, 1124, 1125, 1128], "appropri": [2, 8, 170, 171, 196, 203, 368, 369, 372, 383, 560, 574, 730, 733, 1110, 1111], "from": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 176, 177, 178, 186, 187, 188, 191, 192, 193, 194, 195, 196, 203, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 434, 435, 436, 438, 440, 442, 444, 446, 447, 448, 450, 453, 455, 456, 458, 460, 462, 470, 472, 473, 482, 485, 501, 510, 519, 520, 529, 544, 548, 553, 554, 560, 664, 771, 774, 798, 819, 826, 827, 830, 866, 872, 879, 881, 892, 894, 910, 918, 921, 923, 935, 937, 974, 986, 988, 1011, 1029, 1032, 1041, 1044, 1051, 1054, 1071, 1072, 1073, 1074, 1075, 1077, 1087, 1088, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1110, 1114, 1115, 1116, 1122, 1135, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1183, 1187, 1188, 1198, 1206, 1209, 1214, 1218], "our": [2, 8, 170, 171, 186, 187, 196, 203, 368, 369, 370, 371, 372, 378, 385, 390, 393, 394, 395, 396, 408, 1177], "toi": [2, 8, 170, 171, 196, 203, 368, 369], "arrayexampl": [2, 8, 170, 171], "import": [2, 8, 170, 171, 172, 176, 187, 196, 203, 368, 369, 373, 376, 377, 378, 382, 384, 385, 386, 387, 388, 391, 393, 394, 396, 408, 510, 551, 1177, 1183], "pass": [2, 8, 170, 171, 172, 176, 191, 192, 193, 194, 195, 196, 203, 368, 369, 373, 377, 378, 379, 380, 381, 382, 384, 385, 388, 389, 393, 408, 473, 487, 510, 519, 554, 560, 591, 594, 798, 809, 842, 872, 908, 1071, 1072, 1073, 1187, 1188, 1210, 1211, 1214, 1218, 1220, 1221], "hasattr": [2, 8, 170, 171, 196, 203, 368, 369, 393], "relu": [2, 8, 170, 171, 193, 194, 394, 395, 419, 420, 421, 1177], "softmax": [2, 8, 170, 171, 193, 194, 419, 910, 921, 922, 1177], "true": [2, 8, 10, 12, 26, 102, 111, 136, 137, 142, 143, 150, 151, 164, 165, 170, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 378, 380, 381, 385, 386, 388, 391, 393, 394, 395, 396, 419, 420, 425, 427, 429, 431, 432, 434, 451, 473, 479, 482, 483, 484, 485, 486, 510, 529, 546, 550, 551, 560, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 591, 593, 595, 597, 599, 601, 602, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 622, 623, 625, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 646, 650, 651, 652, 654, 658, 659, 660, 662, 664, 666, 667, 668, 670, 671, 672, 674, 675, 676, 678, 679, 680, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 719, 720, 722, 723, 724, 726, 730, 732, 734, 735, 737, 739, 741, 742, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 806, 807, 808, 809, 811, 812, 816, 823, 825, 827, 829, 831, 837, 838, 845, 860, 866, 868, 871, 872, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 910, 918, 923, 924, 926, 927, 928, 947, 949, 951, 953, 974, 975, 977, 989, 991, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1085, 1086, 1088, 1094, 1096, 1098, 1099, 1104, 1105, 1107, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1198, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219], "axi": [2, 9, 11, 12, 30, 34, 35, 46, 48, 76, 77, 79, 90, 93, 95, 102, 103, 106, 107, 108, 110, 123, 124, 125, 150, 151, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 191, 192, 196, 204, 206, 207, 227, 231, 237, 239, 265, 266, 267, 275, 278, 280, 286, 287, 290, 291, 297, 302, 313, 315, 316, 321, 323, 330, 350, 351, 352, 353, 362, 363, 364, 365, 366, 367, 378, 381, 385, 386, 388, 389, 391, 393, 396, 407, 419, 424, 434, 451, 452, 510, 512, 515, 522, 535, 536, 537, 538, 539, 540, 541, 542, 554, 798, 816, 817, 826, 870, 923, 929, 930, 931, 935, 937, 986, 987, 988, 989, 990, 991, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1037, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1098, 1109, 1110, 1111, 1112, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "keepdim": [2, 9, 11, 73, 76, 77, 79, 90, 108, 110, 123, 125, 150, 151, 166, 167, 168, 169, 191, 192, 196, 204, 206, 265, 266, 267, 275, 321, 323, 330, 364, 365, 366, 367, 798, 870, 923, 951, 952, 953, 989, 990, 991, 1110, 1111, 1112, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "fals": [2, 9, 10, 11, 12, 28, 73, 76, 77, 79, 90, 102, 108, 110, 123, 125, 129, 130, 131, 132, 133, 142, 143, 150, 151, 164, 165, 166, 167, 168, 169, 172, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 378, 385, 388, 394, 395, 396, 425, 427, 429, 473, 479, 482, 484, 485, 486, 491, 510, 529, 530, 541, 545, 546, 549, 554, 557, 559, 560, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 591, 593, 595, 597, 599, 601, 602, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 625, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 646, 650, 651, 652, 654, 658, 659, 660, 662, 664, 666, 667, 668, 670, 671, 672, 674, 675, 676, 678, 679, 680, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 719, 720, 722, 723, 724, 726, 730, 732, 734, 735, 737, 739, 741, 742, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 806, 807, 811, 812, 816, 819, 823, 825, 827, 829, 831, 835, 842, 844, 845, 847, 848, 860, 870, 872, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 923, 924, 925, 926, 927, 928, 947, 949, 951, 952, 953, 974, 989, 990, 991, 996, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1088, 1094, 1096, 1098, 1099, 1104, 1105, 1107, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1187, 1188, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1219], "all_equ": [2, 142, 143, 196, 296, 340, 341, 798, 803], "equality_matrix": [2, 10, 142, 143, 196, 205, 296, 340, 341, 798, 799, 800, 801, 802, 803], "contain": [2, 10, 129, 132, 133, 142, 143, 186, 189, 190, 191, 192, 195, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 380, 381, 386, 388, 389, 390, 391, 392, 395, 396, 408, 419, 422, 423, 425, 428, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 510, 531, 532, 535, 544, 548, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 800, 802, 804, 807, 810, 811, 813, 815, 816, 823, 826, 827, 830, 837, 846, 866, 867, 868, 872, 874, 877, 879, 884, 888, 892, 896, 900, 910, 913, 916, 917, 922, 923, 924, 927, 929, 931, 932, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1021, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1045, 1048, 1050, 1051, 1055, 1059, 1062, 1063, 1067, 1071, 1072, 1073, 1074, 1075, 1088, 1093, 1094, 1097, 1098, 1099, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1214, 1218, 1220, 1221], "x1": [2, 10, 142, 143, 196, 205, 295, 296, 303, 309, 317, 338, 339, 340, 341, 378, 389, 473, 505, 510, 548, 560, 574, 577, 578, 591, 594, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 635, 638, 639, 640, 643, 651, 659, 660, 663, 664, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 728, 729, 730, 733, 734, 739, 742, 747, 750, 751, 754, 779, 780, 783, 798, 799, 800, 801, 802, 803, 806, 910, 915, 923, 929, 931, 947, 950, 961, 963, 971, 973, 980, 982, 986, 988, 1110, 1114], "mix": [2, 10, 142, 143, 193, 194, 196, 375, 378, 380, 391, 473, 501, 510, 548, 560, 574, 599, 602, 619, 622, 643, 667, 668, 671, 688, 691, 728, 729, 739, 742, 798, 799, 800, 815, 823, 826, 827, 830, 866, 867, 868, 910, 913, 916, 917, 922, 923, 924, 927, 980, 982, 995, 996, 999, 1006, 1009, 1011, 1012, 1015, 1093, 1094, 1097, 1110, 1114, 1135, 1136, 1139, 1144, 1147, 1163], "nativearrai": [2, 10, 53, 81, 129, 132, 133, 134, 135, 142, 143, 376, 378, 381, 384, 385, 388, 389, 391, 393, 396, 409, 417, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 440, 442, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462, 463, 465, 466, 468, 470, 472, 473, 479, 480, 481, 482, 485, 491, 493, 496, 498, 499, 501, 505, 510, 529, 530, 532, 548, 554, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 800, 802, 806, 807, 810, 811, 813, 815, 816, 817, 820, 821, 822, 824, 825, 826, 827, 828, 830, 835, 837, 838, 840, 841, 842, 851, 854, 855, 860, 861, 866, 867, 868, 870, 871, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 905, 907, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1075, 1077, 1087, 1093, 1094, 1097, 1098, 1099, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "native_arrai": [2, 10, 134, 135, 142, 143, 172, 178, 184, 193, 194, 196, 205, 296, 340, 341, 419, 421, 422, 423, 424, 425, 428, 430, 434, 453, 455, 473, 482, 485, 510, 532, 548, 560, 561, 564, 579, 582, 599, 602, 619, 622, 623, 626, 643, 656, 667, 668, 671, 688, 691, 728, 729, 735, 738, 739, 742, 771, 774, 775, 778, 789, 798, 799, 800, 801, 802, 803, 807, 815, 816, 823, 826, 827, 830, 861, 866, 867, 868, 872, 874, 877, 910, 913, 916, 917, 922, 923, 929, 931, 932, 935, 937, 980, 982, 995, 996, 999, 1006, 1009, 1011, 1012, 1015, 1025, 1028, 1029, 1032, 1037, 1040, 1050, 1059, 1062, 1093, 1094, 1097, 1098, 1099, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172], "argsort": [2, 164, 165, 196, 362, 363, 1124], "descend": [2, 12, 102, 164, 165, 196, 207, 286, 297, 315, 362, 363, 923, 974, 976, 977, 979, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "stabl": [2, 12, 102, 164, 165, 196, 207, 286, 297, 315, 362, 363, 371, 391, 408, 798, 833, 834, 856, 857, 862, 863, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "asarrai": [2, 134, 135, 193, 194, 388, 434, 910, 911, 1115, 1117, 1121], "copi": [2, 13, 134, 135, 191, 192, 374, 377, 382, 386, 391, 393, 394, 407, 408, 434, 436, 437, 438, 444, 446, 473, 479, 510, 555, 798, 815, 867, 868, 1011, 1041, 1044, 1075, 1077, 1124, 1130, 1133], "dtype": [2, 13, 26, 42, 52, 81, 84, 90, 110, 128, 134, 135, 136, 137, 166, 167, 191, 192, 196, 222, 275, 299, 323, 334, 335, 364, 365, 376, 378, 381, 386, 387, 393, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 456, 457, 458, 459, 460, 461, 462, 469, 470, 471, 472, 473, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 509, 510, 550, 560, 615, 618, 798, 806, 807, 851, 867, 910, 918, 1011, 1025, 1028, 1093, 1094, 1097, 1098, 1104, 1106, 1110, 1111, 1112, 1124, 1130, 1133, 1135, 1136, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1168, 1169, 1172, 1177, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1220, 1221], "devic": [2, 13, 42, 52, 81, 84, 128, 134, 135, 139, 187, 191, 192, 196, 276, 311, 312, 337, 356, 357, 372, 375, 376, 381, 383, 386, 393, 394, 408, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 798, 826, 827, 830, 851, 854, 855, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1187, 1188, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "asin": [2, 140, 141, 196, 338, 339, 560, 1177], "asinh": [2, 140, 141, 196, 338, 339, 560, 1177], "atan": [2, 140, 141, 196, 338, 339, 560, 595, 1177], "atan2": [2, 140, 141, 196, 338, 339, 560, 1177], "atanh": [2, 140, 141, 196, 338, 339, 560, 590, 788, 793, 1177], "binary_cross_entropi": [2, 152, 153, 196, 350, 351, 995], "pred": [2, 19, 35, 103, 152, 153, 196, 215, 231, 287, 298, 302, 316, 350, 351, 381, 385, 388, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "bitwise_and": [2, 140, 141, 196, 338, 339, 560], "bitwise_invert": [2, 140, 141, 196, 338, 339, 560], "bitwise_left_shift": [2, 140, 141, 196, 338, 339, 560], "bitwise_or": [2, 140, 141, 196, 338, 339, 560], "bitwise_right_shift": [2, 140, 141, 196, 338, 339, 560], "bitwise_xor": [2, 140, 141, 196, 338, 339, 560], "can_cast": [2, 136, 137, 196, 299, 334, 335, 381, 386, 473, 486], "float32": [2, 26, 136, 137, 196, 222, 299, 334, 335, 378, 386, 473, 477, 478, 482, 483, 484, 485, 486, 494, 1093, 1094, 1097], "float64": [2, 26, 136, 137, 386, 473, 479, 482, 483, 485, 494], "bool": [2, 26, 129, 130, 131, 132, 133, 136, 137, 191, 192, 196, 203, 368, 369, 378, 385, 386, 388, 396, 431, 432, 434, 447, 473, 479, 482, 483, 485, 488, 489, 490, 491, 494, 497, 498, 499, 509, 510, 529, 530, 545, 554, 557, 560, 599, 602, 603, 606, 611, 614, 619, 622, 640, 643, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 712, 715, 716, 719, 720, 723, 739, 742, 798, 799, 802, 806, 807, 816, 819, 823, 825, 835, 837, 842, 844, 845, 846, 847, 860, 870, 871, 872, 905, 923, 924, 927, 951, 953, 974, 989, 991, 1011, 1050, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1098, 1099, 1110, 1111, 1112, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "ceil": [2, 140, 141, 196, 338, 339, 434, 435, 560, 1177], "choleski": [2, 150, 151, 196, 300, 348, 349, 923, 928], "upper": [2, 28, 150, 151, 191, 192, 196, 224, 300, 348, 349, 434, 443, 466, 468, 923, 924, 925, 926, 927, 928, 967, 969, 1098, 1104, 1106], "clip": [2, 154, 155, 191, 192, 196, 301, 352, 353, 381, 385, 388, 391, 394, 396, 560, 728, 729, 798, 810, 811, 813, 1011, 1016, 1177], "x_min": [2, 29, 154, 155, 191, 192, 196, 225, 301, 352, 353, 391, 396, 1011, 1012, 1013, 1014, 1015, 1016], "x_max": [2, 29, 154, 155, 191, 192, 196, 225, 301, 352, 353, 391, 396, 1011, 1012, 1013, 1014, 1015, 1016], "roll": [2, 29, 154, 155, 196, 313, 352, 353, 385, 389, 1011, 1012, 1013, 1049], "8": [2, 29, 154, 155, 193, 194, 196, 295, 311, 338, 339, 356, 357, 371, 374, 378, 385, 390, 394, 419, 423, 510, 532, 560, 574, 578, 599, 602, 623, 626, 631, 643, 667, 668, 671, 688, 691, 708, 728, 729, 755, 758, 771, 774, 775, 778, 789, 798, 807, 826, 872, 874, 877, 910, 917, 923, 929, 931, 932, 935, 937, 961, 963, 980, 982, 995, 996, 999, 1011, 1012, 1013, 1015, 1029, 1032, 1037, 1040, 1050, 1098, 1099, 1100, 1101, 1102, 1110, 1114, 1115, 1116, 1135, 1136, 1139, 1163, 1177, 1198, 1209], "concat": [2, 154, 155, 191, 192, 196, 352, 353, 510, 539, 540, 541, 542, 554, 798, 825, 1011, 1177], "xs": [2, 30, 154, 155, 196, 227, 352, 353, 385, 510, 533, 537, 539, 540, 541, 798, 799, 802, 807, 872, 883, 1011, 1017, 1018, 1019, 1020], "constant_pad": [2, 154, 155, 196, 352, 353, 1011], "pad_width": [2, 31, 127, 154, 155, 196, 228, 331, 352, 353, 1011, 1021, 1022, 1023, 1024, 1067, 1068, 1069, 1070], "valu": [2, 31, 122, 154, 155, 162, 163, 191, 192, 193, 194, 195, 196, 228, 331, 352, 353, 372, 378, 380, 381, 385, 386, 387, 388, 389, 391, 393, 396, 408, 434, 435, 443, 447, 448, 450, 451, 452, 473, 479, 488, 489, 490, 510, 522, 553, 554, 560, 561, 564, 566, 574, 579, 582, 587, 623, 626, 638, 640, 643, 644, 647, 656, 659, 660, 663, 664, 667, 668, 671, 684, 687, 688, 691, 728, 729, 730, 733, 739, 742, 743, 746, 747, 750, 755, 758, 789, 794, 797, 798, 810, 811, 813, 814, 819, 825, 826, 827, 830, 836, 839, 843, 853, 854, 855, 856, 857, 858, 871, 872, 874, 877, 879, 881, 883, 892, 894, 905, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 921, 922, 923, 934, 946, 955, 957, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 989, 991, 1011, 1012, 1015, 1021, 1022, 1023, 1024, 1037, 1040, 1041, 1044, 1067, 1069, 1070, 1071, 1072, 1073, 1075, 1079, 1080, 1081, 1082, 1083, 1088, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218], "co": [2, 140, 141, 187, 196, 338, 339, 391, 407, 560, 569, 570, 634, 798, 825, 1177], "cosh": [2, 140, 141, 196, 338, 339, 560, 569, 570, 1177], "cross": [2, 150, 151, 193, 194, 923, 995, 996, 999, 1001, 1004, 1006, 1009, 1177], "cross_entropi": [2, 152, 153, 196, 350, 351, 381, 385, 388, 995, 1006, 1009], "det": [2, 150, 151, 193, 194, 923, 970], "diagon": [2, 150, 151, 193, 194, 434, 443, 463, 465, 466, 468, 923, 983, 985], "offset": [2, 37, 60, 118, 150, 151, 156, 157, 196, 252, 354, 355, 923, 935, 936, 937, 983, 984, 985, 1093, 1094, 1095, 1096, 1097], "axis1": [2, 37, 113, 150, 151, 154, 155, 196, 324, 352, 353, 923, 935, 936, 937, 1011, 1059, 1060, 1061, 1062], "axis2": [2, 37, 150, 151, 923, 935, 936, 937], "divid": [2, 140, 141, 191, 192, 196, 338, 339, 378, 384, 560, 659, 660, 663, 798, 862, 1011, 1050], "eigh": [2, 150, 151, 193, 194, 923], "namedtupl": [2, 39, 91, 150, 151, 923, 938, 939, 940, 967, 968, 969, 974, 1115, 1116, 1117, 1121], "eigvalsh": [2, 150, 151, 193, 194, 923], "einsum": [2, 166, 167, 196, 364, 365, 1135, 1163], "equat": [2, 41, 166, 167, 196, 233, 364, 365, 923, 971, 973, 1135, 1136, 1137, 1138, 1139, 1163], "empty_lik": [2, 134, 135, 193, 194, 434], "equal": [2, 140, 141, 191, 192, 196, 338, 339, 378, 385, 386, 434, 443, 447, 448, 450, 473, 479, 560, 607, 610, 615, 618, 668, 672, 675, 676, 679, 747, 750, 755, 758, 798, 799, 802, 806, 807, 923, 935, 937, 946, 955, 957, 964, 966, 1011, 1012, 1015, 1021, 1024, 1050, 1067, 1070, 1098, 1104, 1106, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1144, 1147, 1156, 1159, 1160, 1164, 1167], "erf": [2, 140, 141, 196, 338, 339, 560], "exp": [2, 140, 141, 196, 338, 339, 560, 577, 652, 655, 708, 711, 1177], "expand_dim": [2, 154, 155, 196, 352, 353, 391, 394, 1011, 1177], "expm1": [2, 140, 141, 196, 338, 339, 560], "flip": [2, 154, 155, 196, 352, 353, 393, 394, 396, 560, 603, 606, 1011, 1037, 1040, 1177], "floor": [2, 140, 141, 196, 338, 339, 560, 615, 618, 660, 798, 824, 1177], "floor_divid": [2, 140, 141, 196, 338, 339, 560, 638, 659], "from_dlpack": [2, 134, 135, 193, 194, 434], "full_lik": [2, 134, 135, 193, 194, 434], "fill_valu": [2, 52, 134, 135, 386, 434, 447, 448, 449, 450, 560, 643, 667, 668, 671, 688, 691], "gather_nd": [2, 142, 143, 191, 192, 196, 304, 340, 341, 798, 831, 1177], "indic": [2, 53, 142, 143, 191, 192, 196, 242, 304, 340, 341, 374, 392, 396, 419, 424, 560, 759, 762, 798, 826, 827, 828, 829, 830, 831, 838, 851, 854, 855, 910, 911, 912, 913, 914, 915, 916, 917, 923, 989, 991, 1011, 1045, 1048, 1075, 1076, 1078, 1080, 1082, 1083, 1084, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1110, 1111, 1112, 1113, 1115, 1116, 1122, 1124, 1125, 1128, 1130, 1133, 1177, 1180, 1182, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1210, 1211], "union": [2, 53, 111, 129, 132, 133, 142, 143, 150, 151, 191, 192, 376, 378, 381, 384, 385, 386, 387, 388, 389, 391, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 487, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 509, 510, 526, 527, 528, 529, 530, 532, 535, 536, 537, 538, 543, 549, 551, 553, 554, 555, 556, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 802, 806, 807, 810, 811, 813, 816, 817, 820, 821, 822, 824, 825, 826, 827, 828, 830, 835, 837, 838, 840, 841, 842, 851, 854, 855, 860, 861, 866, 867, 868, 870, 871, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 905, 907, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 975, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1086, 1087, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "greater": [2, 140, 141, 191, 192, 196, 338, 339, 560, 566, 579, 582, 591, 594, 607, 610, 615, 618, 638, 643, 656, 659, 660, 663, 668, 747, 750, 751, 754, 759, 762, 794, 797, 923, 929, 931, 1011, 1051, 1054, 1098, 1104, 1106], "greater_equ": [2, 140, 141, 196, 338, 339, 560, 643, 667], "inv": [2, 150, 151, 193, 194, 393, 923, 964, 1177], "isfinit": [2, 140, 141, 196, 338, 339, 560], "isinf": [2, 140, 141, 196, 338, 339, 560], "isnan": [2, 140, 141, 196, 338, 339, 560], "layer_norm": [2, 156, 157, 196, 354, 355, 1093], "normalized_idx": [2, 60, 156, 157, 196, 252, 354, 355, 1093, 1094, 1095, 1096, 1097], "05": [2, 60, 156, 157, 196, 252, 354, 355, 510, 872, 874, 877, 1093, 1094, 1095, 1096, 1097], "scale": [2, 60, 156, 157, 196, 252, 354, 355, 385, 510, 552, 553, 872, 896, 898, 910, 918, 921, 922, 1093, 1094, 1095, 1096, 1097, 1198, 1206, 1209, 1214, 1217], "new_std": [2, 60, 156, 157, 196, 252, 354, 355, 1093, 1094, 1095, 1096, 1097, 1212, 1213], "less": [2, 140, 141, 187, 191, 192, 196, 338, 339, 372, 378, 385, 389, 390, 391, 560, 566, 569, 570, 573, 579, 582, 591, 594, 623, 626, 630, 634, 692, 695, 696, 699, 704, 707, 747, 750, 751, 754, 759, 762, 771, 774, 923, 946, 955, 957, 964, 966, 989, 991, 1098, 1104, 1106, 1135, 1164, 1167], "less_equ": [2, 140, 141, 196, 338, 339, 560], "log": [2, 140, 141, 196, 338, 339, 371, 372, 381, 385, 388, 391, 394, 434, 452, 560, 577, 651, 700, 703, 708, 711, 923, 934, 970, 1177], "log10": [2, 140, 141, 196, 338, 339, 560], "log1p": [2, 140, 141, 196, 338, 339, 560], "log2": [2, 140, 141, 196, 338, 339, 560], "logaddexp": [2, 140, 141, 196, 338, 339, 560, 577, 651], "logical_and": [2, 140, 141, 196, 338, 339, 560, 1177], "logical_not": [2, 140, 141, 196, 338, 339, 560, 1177], "logical_or": [2, 140, 141, 196, 338, 339, 560, 1177], "logical_xor": [2, 140, 141, 196, 338, 339, 560], "matmul": [2, 150, 151, 196, 348, 349, 376, 382, 391, 923, 974, 1177], "matrix_norm": [2, 150, 151, 191, 192, 923], "ord": [2, 73, 125, 150, 151, 191, 192, 923, 951, 952, 953, 989, 990, 991], "fro": [2, 73, 150, 151, 923, 951, 952, 953], "matrix_rank": [2, 150, 151, 193, 194, 923], "rtol": [2, 74, 87, 150, 151, 923, 946, 955, 956, 957, 964, 965, 966], "matrix_transpos": [2, 150, 151, 193, 194, 393, 923], "max": [2, 166, 167, 191, 192, 196, 364, 365, 473, 493, 496, 560, 728, 798, 810, 811, 813, 821, 854, 855, 923, 946, 955, 957, 964, 966, 1135, 1214, 1216], "mean": [2, 166, 167, 191, 192, 196, 203, 364, 365, 368, 369, 371, 372, 375, 378, 381, 385, 386, 387, 388, 391, 393, 394, 395, 396, 407, 408, 510, 539, 540, 541, 542, 554, 798, 821, 1071, 1072, 1073, 1074, 1075, 1081, 1098, 1103, 1115, 1116, 1135, 1177, 1189], "meshgrid": [2, 134, 135, 193, 194, 434], "index": [2, 78, 134, 135, 191, 192, 374, 381, 385, 393, 433, 434, 443, 453, 454, 455, 510, 551, 798, 804, 826, 827, 830, 1011, 1055, 1058, 1075, 1078, 1079, 1082, 1083, 1084, 1089, 1091, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1180, 1182], "xy": [2, 78, 134, 135, 434, 453, 454, 455], "min": [2, 166, 167, 191, 192, 196, 364, 365, 473, 493, 496, 560, 729, 798, 821, 854, 855, 862, 923, 967, 969, 974, 976, 977, 979, 989, 991, 1135], "multipli": [2, 140, 141, 196, 338, 339, 378, 382, 384, 560, 798, 816], "neg": [2, 140, 141, 196, 338, 339, 381, 385, 388, 419, 421, 434, 435, 443, 560, 672, 675, 676, 679, 730, 733, 747, 750, 751, 754, 923, 974, 986, 988, 989, 991, 1011, 1029, 1032, 1045, 1048, 1168, 1169, 1172, 1173, 1176], "not_equ": [2, 140, 141, 196, 338, 339, 560], "ones_lik": [2, 134, 135, 193, 194, 396, 434, 1177], "outer": [2, 150, 151, 193, 194, 923, 1071, 1072, 1073, 1074], "permute_dim": [2, 154, 155, 196, 352, 353, 1011], "ax": [2, 86, 116, 150, 151, 154, 155, 191, 192, 196, 272, 352, 353, 376, 378, 386, 393, 510, 554, 798, 816, 923, 951, 953, 971, 973, 980, 981, 982, 989, 991, 1011, 1021, 1024, 1029, 1032, 1033, 1034, 1035, 1036, 1045, 1048, 1051, 1054, 1059, 1062, 1067, 1070, 1110, 1111, 1112, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "pinv": [2, 150, 151, 193, 194, 923, 946, 1177], "posit": [2, 129, 130, 131, 140, 141, 196, 338, 339, 389, 394, 407, 433, 434, 443, 473, 493, 510, 534, 538, 542, 560, 561, 564, 672, 675, 676, 679, 730, 733, 751, 754, 798, 825, 923, 924, 927, 1011, 1025, 1028, 1045, 1048, 1098, 1108, 1110, 1113, 1168, 1169, 1172, 1173, 1176, 1187, 1188], "pow": [2, 140, 141, 196, 338, 339, 560], "prod": [2, 166, 167, 191, 192, 196, 364, 365, 378, 386, 798, 821, 1135], "qr": [2, 150, 151, 193, 194, 923], "mode": [2, 91, 150, 151, 191, 192, 371, 378, 385, 408, 431, 432, 510, 539, 540, 541, 542, 554, 560, 574, 730, 733, 923, 967, 968, 969], "reduc": [2, 91, 150, 151, 191, 192, 393, 510, 554, 798, 821, 923, 967, 968, 969, 1110, 1111, 1112, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "remaind": [2, 140, 141, 191, 192, 196, 338, 339, 560, 798, 824, 1011, 1050], "repeat": [2, 154, 155, 191, 192, 196, 352, 353, 372, 377, 378, 382, 384, 385, 798, 822, 1011, 1063, 1066], "reshap": [2, 154, 155, 191, 192, 196, 352, 353, 388, 391, 393, 396, 1011, 1177], "shape": [2, 94, 154, 155, 191, 192, 196, 200, 279, 293, 311, 312, 320, 329, 342, 343, 352, 353, 356, 357, 360, 361, 372, 376, 377, 378, 386, 387, 388, 389, 391, 393, 394, 395, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 510, 522, 550, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 820, 821, 822, 824, 827, 830, 835, 838, 851, 854, 855, 861, 872, 874, 876, 878, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1110, 1111, 1113, 1114, 1118, 1120, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1163, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1212, 1213], "shift": [2, 95, 154, 155, 196, 280, 313, 352, 353, 378, 389, 560, 607, 610, 615, 618, 1011, 1045, 1046, 1047, 1048, 1049], "round": [2, 140, 141, 186, 187, 188, 196, 338, 339, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 560, 574, 623, 626, 638, 656, 659, 660, 663, 730, 733, 771, 774, 794, 797, 1177], "sign": [2, 140, 141, 187, 196, 338, 339, 371, 392, 396, 434, 435, 560, 561, 564, 574, 591, 594, 615, 618, 730, 733, 751, 754, 923, 934, 970, 1115, 1116, 1117, 1121, 1123, 1135, 1152, 1155, 1160], "sin": [2, 140, 141, 196, 338, 339, 384, 391, 560, 798, 825, 1177], "sinh": [2, 140, 141, 196, 338, 339, 560, 1177], "solv": [2, 150, 151, 193, 194, 392, 407, 923], "sort": [2, 165, 191, 192, 193, 194, 195, 196, 363, 376, 923, 938, 940, 974, 976, 977, 979, 1125, 1128], "sparse_cross_entropi": [2, 152, 153, 196, 350, 351, 995], "sqrt": [2, 140, 141, 196, 338, 339, 560, 923, 989, 991], "squar": [2, 140, 141, 196, 338, 339, 560, 771, 774, 910, 913, 923, 924, 927, 932, 934, 938, 940, 941, 943, 944, 954, 970, 971, 973, 974], "squeez": [2, 154, 155, 196, 352, 353, 1011, 1177], "stack": [2, 154, 155, 191, 192, 196, 352, 353, 391, 434, 463, 465, 466, 468, 923, 932, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 954, 955, 957, 958, 960, 964, 966, 967, 969, 974, 976, 977, 979, 983, 985, 1011, 1075, 1076, 1085, 1086, 1177, 1198, 1207], "std": [2, 166, 167, 196, 364, 365, 378, 1098, 1103, 1115, 1116, 1135], "correct": [2, 108, 123, 166, 167, 196, 321, 330, 364, 365, 372, 373, 375, 381, 385, 386, 387, 389, 473, 505, 1011, 1012, 1015, 1135, 1156, 1157, 1158, 1159, 1164, 1165, 1166, 1167, 1177], "subtract": [2, 140, 141, 196, 338, 339, 378, 384, 560], "sum": [2, 166, 167, 191, 192, 196, 364, 365, 381, 385, 386, 388, 391, 510, 539, 540, 541, 542, 554, 560, 574, 577, 651, 708, 711, 798, 817, 821, 854, 855, 910, 922, 923, 974, 983, 985, 989, 991, 1135, 1136, 1139, 1156, 1159], "svd": [2, 150, 151, 193, 194, 923, 977, 1177], "full_matric": [2, 111, 150, 151, 923, 974, 975, 977], "tupl": [2, 111, 122, 129, 130, 131, 132, 133, 150, 151, 162, 163, 191, 192, 376, 385, 386, 387, 389, 393, 394, 395, 408, 434, 436, 438, 439, 447, 456, 458, 459, 469, 473, 481, 495, 510, 529, 798, 825, 861, 910, 913, 916, 917, 920, 923, 946, 955, 957, 964, 966, 974, 975, 977, 980, 982, 989, 991, 1011, 1017, 1020, 1021, 1024, 1029, 1032, 1033, 1036, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1080, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1091, 1092, 1098, 1103, 1104, 1106, 1110, 1113, 1115, 1116, 1117, 1119, 1121, 1122, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "svdval": [2, 150, 151, 193, 194, 923, 976], "swapax": [2, 154, 155, 196, 352, 353, 1011], "axis0": [2, 113, 154, 155, 196, 324, 352, 353, 1011, 1059, 1060, 1061, 1062], "tan": [2, 140, 141, 196, 318, 338, 339, 377, 381, 385, 388, 389, 391, 560, 579, 582, 590, 595, 785, 793, 923, 935, 937, 1115, 1116, 1124, 1125, 1128, 1177], "56": [2, 114, 140, 141, 196, 318, 325, 338, 339, 378, 560, 590, 595, 771, 774, 784, 785, 786, 787, 793, 872, 874, 877, 923, 961, 963, 1135, 1136, 1139, 1163], "19": [2, 114, 140, 141, 196, 318, 325, 338, 339, 378, 560, 590, 595, 619, 622, 784, 785, 786, 787, 793, 923, 935, 937], "tanh": [2, 140, 141, 196, 319, 338, 339, 391, 419, 560, 590, 595, 790, 1177], "762": [2, 115, 140, 141, 196, 326, 338, 339, 419, 430, 560, 590, 595, 789, 791, 792], "964": [2, 115, 140, 141, 196, 326, 338, 339, 419, 430, 560, 590, 595, 789, 791, 792], "tensordot": [2, 150, 151, 193, 194, 923], "tile": [2, 154, 155, 196, 352, 353, 1011, 1177], "rep": [2, 117, 154, 155, 196, 327, 352, 353, 1011, 1063, 1064, 1065, 1066], "trace": [2, 150, 151, 191, 192, 193, 194, 391, 408, 798, 844, 845, 847, 923], "tril": [2, 134, 135, 193, 194, 434], "k": [2, 119, 120, 134, 135, 375, 391, 434, 443, 463, 464, 465, 466, 467, 468, 798, 806, 910, 922, 923, 947, 950, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985, 1098, 1103, 1104, 1106, 1110, 1113], "triu": [2, 134, 135, 193, 194, 434], "trunc": [2, 140, 141, 196, 338, 339, 560], "unique_count": [2, 162, 163, 196, 320, 360, 361, 1115, 1118], "uc": [2, 122, 162, 163, 1117, 1119], "count": [2, 122, 162, 163, 378, 394, 510, 548, 923, 986, 988, 1011, 1029, 1032, 1115, 1116, 1117, 1119, 1121, 1168, 1169, 1172, 1173, 1176], "var": [2, 166, 167, 196, 203, 364, 365, 368, 369, 378, 391, 1071, 1072, 1073, 1135], "vecdot": [2, 150, 151, 193, 194, 923], "vector_norm": [2, 150, 151, 191, 192, 923], "vector_to_skew_symmetric_matrix": [2, 150, 151, 193, 194, 923, 1177], "zero_pad": [2, 154, 155, 196, 352, 353, 1011, 1177], "zeros_lik": [2, 134, 135, 193, 194, 434, 1011, 1012, 1015, 1177], "collect": [129, 191, 192, 380, 407, 419, 431, 510, 798, 872, 910, 995, 1075, 1088, 1093, 1098, 1184, 1198, 1212, 1214], "accept": [129, 371, 372, 377, 378, 380, 381, 384, 385, 387, 388, 389, 393, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 716, 719, 720, 723, 739, 742, 751, 754, 755, 758, 771, 774, 775, 778, 784, 789, 798, 826, 910, 913, 922, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1144, 1147, 1168, 1169, 1172, 1177], "args_to_ivi": 129, "arg": [129, 130, 131, 172, 176, 191, 192, 374, 391, 393, 395, 510, 519, 534, 538, 542, 554, 798, 855, 1187, 1188, 1210, 1211], "include_deriv": [129, 130, 131, 132, 133, 1075, 1077, 1087], "kwarg": [129, 130, 131, 172, 176, 189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 391, 393, 395, 510, 519, 534, 538, 542, 798, 848, 1187, 1188, 1210, 1211], "keyword": [129, 130, 131, 191, 192, 193, 194, 195, 376, 386, 387, 388, 389, 394, 434, 453, 455, 510, 519, 520, 534, 538, 542, 798, 805, 848, 1075, 1081, 1135, 1160, 1210, 1211], "variabl": [129, 130, 131, 132, 133, 191, 192, 193, 194, 377, 382, 385, 386, 388, 389, 394, 395, 396, 408, 798, 808, 840, 841, 842, 843, 844, 845, 847, 864, 872, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 905, 908, 910, 921, 923, 971, 973, 1071, 1072, 1073, 1074, 1093, 1094, 1097, 1177, 1187, 1188, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "form": [129, 130, 131, 132, 133, 187, 191, 192, 370, 381, 395, 396, 434, 436, 438, 456, 458, 463, 465, 466, 468, 798, 804, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 923, 924, 927, 932, 935, 937, 938, 940, 941, 943, 944, 946, 955, 957, 958, 960, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985, 1075, 1077, 1087], "nest": [129, 130, 131, 132, 133, 191, 192, 193, 194, 195, 376, 381, 384, 385, 393, 394, 395, 408, 510, 534, 538, 542, 798, 866, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1219], "otherwis": [129, 130, 131, 132, 133, 172, 184, 191, 192, 384, 386, 387, 389, 391, 393, 434, 435, 473, 479, 482, 485, 488, 489, 490, 510, 529, 560, 672, 675, 676, 679, 680, 683, 798, 808, 869, 872, 888, 890, 905, 923, 924, 927, 932, 986, 988, 989, 991, 1071, 1072, 1073, 1075, 1088, 1110, 1111, 1112, 1114, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "argument": [129, 130, 131, 132, 133, 172, 176, 177, 186, 191, 192, 193, 194, 195, 373, 375, 376, 377, 378, 380, 381, 382, 384, 385, 391, 393, 394, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 501, 510, 519, 520, 534, 538, 542, 560, 561, 564, 574, 579, 582, 623, 626, 656, 739, 742, 771, 774, 775, 778, 784, 798, 804, 805, 809, 819, 826, 848, 855, 910, 913, 922, 923, 935, 937, 1011, 1045, 1048, 1075, 1081, 1093, 1094, 1097, 1115, 1117, 1121, 1135, 1140, 1143, 1160, 1168, 1169, 1172, 1180, 1182, 1187, 1188, 1210, 1211], "ar": [129, 130, 131, 186, 187, 188, 191, 192, 193, 194, 195, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 407, 408, 409, 417, 434, 435, 510, 519, 520, 544, 548, 550, 554, 560, 627, 716, 719, 720, 723, 755, 758, 763, 766, 784, 798, 799, 802, 806, 807, 808, 832, 838, 839, 843, 850, 852, 864, 910, 919, 923, 929, 931, 946, 947, 950, 951, 953, 955, 957, 964, 966, 974, 976, 977, 979, 986, 988, 1011, 1012, 1015, 1029, 1032, 1045, 1048, 1075, 1077, 1081, 1087, 1098, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1115, 1116, 1177, 1220, 1221], "unchang": [129, 130, 131, 132, 133], "The": [129, 130, 131, 132, 133, 172, 176, 177, 185, 186, 188, 191, 192, 193, 194, 195, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 407, 419, 420, 421, 424, 430, 431, 432, 434, 435, 444, 446, 452, 463, 465, 466, 468, 473, 477, 478, 479, 487, 492, 494, 495, 497, 500, 505, 509, 510, 519, 520, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 553, 554, 556, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 784, 788, 789, 793, 794, 797, 798, 804, 806, 809, 810, 818, 819, 825, 827, 830, 840, 841, 842, 844, 845, 846, 847, 849, 854, 855, 856, 857, 858, 861, 862, 863, 871, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 905, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1050, 1063, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1103, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1187, 1188, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218], "check": [129, 130, 131, 132, 133, 186, 187, 188, 191, 192, 371, 372, 385, 390, 391, 393, 394, 395, 396, 407, 473, 487, 494, 495, 497, 509, 510, 549, 559, 798, 808, 823, 837, 844, 845, 846, 847, 864, 871, 872, 888, 890, 923, 938, 940, 1075, 1076, 1085, 1086, 1087, 1177], "dict": [129, 130, 131, 132, 133, 172, 184, 191, 192, 193, 194, 195, 385, 394, 395, 510, 519, 520, 529, 532, 535, 536, 537, 538, 798, 804, 820, 821, 822, 1075, 1077, 1078, 1081, 1084, 1087, 1088], "whether": [129, 130, 131, 132, 133, 191, 192, 193, 194, 195, 196, 203, 368, 369, 370, 371, 386, 388, 389, 419, 420, 431, 432, 473, 479, 491, 497, 498, 499, 509, 510, 529, 530, 541, 545, 546, 549, 550, 554, 557, 559, 560, 680, 683, 798, 799, 802, 806, 807, 816, 819, 823, 825, 835, 837, 839, 842, 843, 844, 845, 846, 847, 848, 860, 864, 870, 871, 872, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 905, 910, 918, 923, 938, 940, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1088, 1098, 1099, 1168, 1169, 1172, 1173, 1176, 1187, 1188, 1198, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219], "recurs": [129, 130, 131, 132, 133, 191, 192, 371, 374, 381, 385, 395, 408, 1075, 1076, 1077, 1085, 1086, 1087], "deriv": [129, 130, 131, 132, 133, 386, 387, 393, 395, 434, 440, 442, 448, 450, 460, 462, 470, 472, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1075, 1077, 1087, 1210, 1214, 1218, 1220], "str": [129, 130, 131, 172, 177, 191, 192, 386, 387, 431, 432, 434, 453, 455, 473, 477, 487, 488, 489, 492, 493, 496, 497, 498, 499, 502, 503, 504, 509, 510, 526, 529, 530, 532, 535, 536, 537, 538, 554, 798, 804, 818, 820, 821, 822, 849, 854, 855, 910, 911, 913, 915, 916, 917, 923, 967, 969, 1071, 1072, 1073, 1074, 1075, 1081, 1135, 1136, 1139, 1163], "kei": [129, 130, 131, 191, 192, 193, 194, 195, 385, 394, 510, 522, 798, 804, 814, 910, 921, 922, 1071, 1072, 1073, 1075, 1078, 1084, 1088, 1187, 1188, 1198, 1209, 1214, 1218], "word": [129, 130, 131, 434, 435, 1098, 1104, 1106, 1187, 1188], "ret": [129, 130, 131, 132, 133, 172, 176, 177, 184, 191, 192, 376, 377, 391, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 485, 487, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 509, 510, 519, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 556, 557, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 802, 804, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 854, 855, 860, 862, 863, 864, 866, 867, 868, 870, 871, 872, 874, 877, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1180, 1182, 1187, 1188, 1214, 1218], "same": [129, 130, 131, 186, 188, 191, 192, 371, 372, 374, 376, 378, 380, 381, 384, 385, 387, 388, 389, 391, 393, 395, 396, 434, 435, 440, 442, 448, 450, 453, 455, 460, 462, 463, 465, 466, 468, 470, 472, 473, 479, 480, 481, 510, 519, 520, 554, 560, 561, 564, 574, 603, 606, 623, 626, 656, 730, 733, 751, 754, 755, 758, 759, 762, 794, 797, 798, 824, 826, 827, 830, 851, 854, 855, 872, 888, 890, 905, 910, 911, 912, 913, 914, 915, 916, 917, 922, 923, 924, 927, 929, 931, 932, 935, 937, 938, 940, 941, 943, 944, 946, 958, 960, 964, 966, 967, 969, 971, 973, 974, 983, 985, 986, 988, 1011, 1017, 1020, 1029, 1032, 1033, 1036, 1045, 1048, 1051, 1054, 1055, 1058, 1071, 1072, 1073, 1075, 1088, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1160, 1163, 1164, 1167, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "convert": [129, 130, 131, 132, 133, 188, 191, 192, 384, 391, 408, 409, 417, 434, 436, 438, 456, 458, 473, 477, 478, 510, 526, 527, 528, 529, 549, 556, 559, 798, 861, 867, 868, 923, 992, 994, 1075, 1077, 1087, 1088, 1188], "args_to_n": [129, 388, 393], "nativ": [129, 131, 132, 133, 172, 178, 191, 192, 386, 388, 393, 394, 434, 456, 458, 473, 477, 478, 487, 510, 526, 527, 528, 529, 530, 549, 556, 559, 798, 842, 844, 847, 1187, 1188], "backend": [129, 131, 133, 176, 177, 178, 184, 186, 191, 192, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 392, 393, 396, 473, 494, 495, 497, 509, 510, 545, 547, 557, 798, 839, 842, 843, 849, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 908, 1177, 1183, 1187, 1188, 1214, 1215, 1216, 1217, 1218, 1219], "to_ivi": [129, 191, 192, 393, 1075, 1088], "If": [129, 132, 133, 172, 176, 177, 178, 186, 191, 192, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 408, 434, 435, 439, 440, 442, 443, 447, 448, 450, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 501, 510, 529, 553, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 623, 626, 627, 630, 631, 634, 648, 651, 652, 655, 656, 692, 695, 696, 699, 704, 707, 708, 711, 716, 719, 720, 723, 730, 733, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 798, 842, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 923, 924, 927, 929, 931, 946, 951, 953, 955, 957, 964, 966, 967, 969, 971, 973, 974, 986, 988, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1071, 1072, 1073, 1075, 1087, 1088, 1098, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177], "set": [129, 132, 133, 163, 172, 176, 177, 178, 184, 186, 191, 192, 361, 370, 372, 375, 376, 381, 383, 384, 385, 386, 387, 388, 391, 393, 394, 510, 529, 539, 540, 551, 552, 553, 554, 560, 591, 594, 798, 799, 802, 856, 857, 858, 859, 872, 879, 881, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 923, 929, 931, 946, 951, 953, 955, 957, 964, 966, 971, 973, 1075, 1076, 1085, 1086, 1087, 1091, 1092, 1098, 1108, 1110, 1111, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1156, 1159, 1164, 1167, 1198, 1207, 1214, 1215, 1216, 1217, 1218, 1219], "leaf": [129, 132, 133, 191, 192, 381, 385, 394, 1075, 1076, 1085, 1086], "within": [129, 132, 133, 372, 380, 395, 408, 434, 435, 1098, 1104, 1106], "mayb": [129, 132, 133, 371, 391, 393], "manner": [129, 132, 133, 186, 191, 192, 376, 377, 387, 394, 407, 408, 1075, 1087], "travers": [129, 132, 133, 191, 192, 385, 391, 393, 1075, 1087], "lowest": [129, 132, 133, 191, 192, 381, 408, 1075, 1087, 1098, 1100, 1101], "leav": [129, 132, 133, 191, 192, 193, 194, 196, 377, 378, 380, 381, 385, 386, 388, 389, 394, 395, 1011, 1055, 1058, 1075, 1076, 1077, 1085, 1086, 1087], "search": [129, 132, 133, 161, 186, 191, 192, 359, 371, 376, 378, 380, 1111, 1112, 1113, 1114], "s": [129, 132, 133, 172, 176, 177, 178, 184, 187, 188, 191, 192, 370, 371, 372, 374, 375, 377, 378, 380, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 433, 434, 453, 455, 463, 465, 466, 468, 473, 494, 495, 510, 529, 553, 560, 751, 754, 798, 807, 872, 879, 881, 884, 886, 892, 894, 900, 902, 923, 974, 976, 977, 979, 1075, 1081, 1087, 1135, 1156, 1159, 1164, 1167, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "case": [129, 132, 133, 187, 191, 192, 193, 194, 195, 371, 372, 373, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 395, 396, 408, 434, 453, 455, 510, 549, 556, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 619, 622, 623, 626, 627, 630, 631, 634, 648, 651, 652, 655, 656, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 798, 842, 854, 855, 923, 951, 953, 1011, 1041, 1044, 1075, 1078, 1084, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1164, 1167, 1198, 1209, 1210, 1211, 1214, 1218], "to_n": [129, 191, 192], "convers": [130, 131, 132, 133, 188, 191, 192, 390, 392, 396, 407, 408, 1177, 1183], "arraywithcr": 134, "creation": [135, 191, 192, 193, 194, 195, 333, 376, 386, 387, 391, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472], "data_typ": [136, 137, 334, 335, 376, 386, 473, 477, 478, 479, 480, 481, 482, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "arraywithdatatyp": 136, "arraywithdevic": [138, 393], "arraywithelementwis": [140, 373, 384], "elementwis": [141, 191, 192, 339, 376, 381, 391, 396, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797], "arraywithgener": [142, 393], "arraywithgradi": [144, 393], "gradient": [145, 191, 192, 343, 376, 385, 394, 395, 407, 408, 510, 554, 874, 877, 879, 881, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 905, 906, 907, 908, 909, 1071, 1072, 1073, 1074, 1177, 1214, 1215, 1216, 1217, 1218, 1219], "arraywithimag": [146, 393], "imag": [147, 345, 371, 374, 376, 391, 392, 394, 396, 407, 910, 911, 912, 913, 914, 916, 917, 1177], "arraywithlay": 148, "layer": [149, 186, 347, 376, 377, 391, 392, 395, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 1093, 1094, 1097, 1177, 1189, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "linear_algebra": [150, 151, 348, 349, 376, 393, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994], "arraywithlinearalgebra": 150, "arraywithloss": 152, "loss": [153, 351, 376, 381, 394, 395, 396, 996, 999, 1001, 1004, 1006, 1009, 1177], "arraywithmanipul": 154, "manipul": [155, 186, 353, 376, 396, 407, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070], "arraywithnorm": 156, "norm": [157, 191, 192, 355, 376, 798, 810, 811, 813, 923, 951, 953, 989, 991, 1094, 1097, 1177, 1213, 1214, 1216], "arraywithrandom": [158, 393], "random": [159, 191, 192, 357, 376, 387, 396, 407, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1177], "arraywithsearch": 160, "arraywithset": 162, "arraywithsort": 164, "arraywithstatist": 166, "statist": [167, 196, 203, 365, 368, 369, 376, 386, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167], "arraywithutil": 168, "util": [169, 367, 376, 387, 510, 543, 1169, 1172, 1173, 1176], "backend_handl": [172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 1177], "contextmanag": [172, 173], "object": [172, 191, 192, 193, 194, 195, 393, 396, 434, 444, 446, 473, 493, 510, 555, 872, 1075, 1078, 1080, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1098, 1109, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1210, 1211], "__init__": [172, 173, 176, 177, 191, 192, 193, 194, 195, 196, 376, 382, 386, 391, 393, 394, 395, 396, 473, 474, 475, 476, 510, 511, 518, 519, 520, 521, 522, 523, 524, 525, 872, 873, 1098, 1099, 1103, 1177, 1184, 1185, 1186, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "choose_random_backend": 172, "exclud": [172, 174, 378, 391, 434, 435, 1098, 1104, 1106], "clear_backend_stack": 172, "current_backend": [172, 193, 194, 376, 381], "current": [172, 176, 177, 184, 188, 191, 192, 193, 194, 195, 371, 372, 373, 374, 381, 387, 391, 396, 407, 408, 473, 494, 495, 497, 509, 510, 519, 543, 544, 548, 550, 798, 832, 839, 843, 850, 852, 1075, 1076, 1085, 1086, 1177], "prioriti": [172, 176, 191, 192, 372, 388], "global_backend": [172, 176], "which": [172, 176, 177, 186, 187, 188, 191, 192, 193, 194, 195, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 407, 408, 419, 424, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 447, 448, 450, 451, 452, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 487, 491, 493, 496, 497, 509, 510, 519, 520, 530, 535, 536, 537, 538, 539, 540, 541, 542, 544, 548, 550, 552, 553, 554, 560, 751, 754, 798, 804, 816, 817, 819, 826, 827, 830, 832, 838, 842, 850, 851, 852, 854, 855, 870, 872, 879, 881, 883, 884, 886, 892, 894, 896, 898, 900, 902, 905, 907, 908, 910, 921, 923, 929, 931, 935, 937, 951, 953, 971, 973, 974, 986, 988, 989, 991, 995, 1001, 1004, 1006, 1009, 1011, 1017, 1020, 1029, 1032, 1037, 1040, 1045, 1048, 1050, 1055, 1058, 1075, 1080, 1081, 1082, 1083, 1088, 1089, 1090, 1091, 1092, 1098, 1099, 1100, 1101, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1180, 1182, 1187, 1188, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "try": [172, 176, 185, 187, 188, 191, 192, 371, 372, 373, 374, 384, 385, 393, 408, 798, 869, 1177], "infer": [172, 176, 375, 382, 386, 387, 391, 396, 431, 432, 434, 435, 436, 438, 440, 442, 447, 448, 450, 456, 458, 460, 462, 470, 472, 560, 664, 798, 835, 860, 1011, 1041, 1044], "when": [172, 176, 186, 187, 191, 192, 193, 194, 195, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 396, 408, 473, 479, 510, 560, 574, 652, 655, 747, 750, 798, 809, 842, 863, 995, 996, 999, 1001, 1004, 1006, 1009, 1075, 1086, 1110, 1111, 1112, 1114, 1135, 1140, 1143, 1148, 1151, 1156, 1159, 1164, 1167, 1177, 1210, 1211], "global": [172, 176, 177, 178, 184, 191, 192, 193, 194, 195, 381, 382, 386, 387, 391, 473, 488, 489, 490, 510, 519, 520, 552, 553, 554, 798, 833, 834, 853, 856, 857, 858, 862, 863, 1093, 1094, 1097, 1212, 1213], "numpi": [172, 176, 177, 178, 186, 187, 191, 192, 372, 373, 380, 382, 386, 387, 388, 389, 391, 393, 396, 798, 867, 1135, 1136, 1139, 1163, 1177], "np": [172, 176, 384, 386, 387, 388, 389, 393, 394, 396, 1177], "py": [172, 176, 177, 372, 376, 377, 381, 382, 386, 387, 389, 391, 393, 395, 396, 1098, 1099, 1103], "noqa": [172, 176, 177, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 599, 602, 619, 622, 623, 626, 631, 688, 691, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1135, 1140, 1143], "set_backend": [172, 176, 177, 184, 381, 382, 383, 386, 473, 494, 495, 510, 551, 798, 860, 1177], "ha": [172, 176, 177, 186, 187, 188, 191, 192, 372, 377, 378, 381, 382, 383, 386, 387, 391, 393, 395, 396, 407, 408, 434, 453, 455, 510, 529, 560, 561, 564, 730, 733, 747, 750, 923, 934, 947, 950, 970, 971, 973, 974, 983, 985, 1011, 1025, 1028, 1051, 1054, 1115, 1116, 1117, 1121, 1123, 1135, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "jax": [172, 176, 177, 178, 187, 188, 372, 373, 382, 386, 387, 388, 389, 391, 393, 396, 408, 872, 888, 890, 1115, 1116, 1117, 1121, 1123, 1177], "get_backend": [172, 381, 382], "specifi": [172, 177, 191, 192, 375, 380, 381, 386, 387, 388, 389, 391, 394, 395, 396, 434, 435, 439, 447, 451, 452, 459, 463, 465, 466, 468, 469, 473, 479, 481, 510, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 544, 548, 550, 553, 554, 555, 560, 751, 754, 798, 804, 816, 826, 827, 830, 837, 870, 923, 935, 937, 951, 953, 980, 982, 983, 985, 986, 988, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1029, 1032, 1045, 1048, 1051, 1054, 1055, 1058, 1067, 1070, 1075, 1080, 1082, 1083, 1089, 1090, 1091, 1092, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1135, 1136, 1139, 1152, 1155, 1160, 1163, 1168, 1169, 1172, 1173, 1176], "isn": [172, 177, 372, 394, 408], "associ": [172, 177, 372, 381, 383, 408, 560, 574, 730, 733, 923, 946, 955, 957, 964, 966, 992, 994], "retriev": [172, 177, 372, 798, 804], "i": [172, 177, 372, 374, 375, 391, 394, 396, 434, 435, 453, 455, 560, 561, 564, 591, 594, 607, 610, 615, 618, 623, 626, 638, 656, 659, 660, 663, 672, 675, 728, 729, 735, 738, 747, 750, 751, 754, 798, 806, 807, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 923, 929, 931, 946, 947, 950, 955, 957, 964, 966, 971, 973, 974, 983, 985, 989, 991, 1011, 1055, 1058, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1163, 1164, 1167], "e": [172, 177, 187, 188, 370, 372, 374, 375, 385, 394, 408, 433, 434, 453, 455, 473, 478, 501, 510, 526, 560, 561, 564, 591, 594, 607, 610, 615, 618, 623, 626, 638, 648, 656, 659, 660, 663, 672, 675, 692, 695, 700, 703, 728, 729, 735, 738, 747, 750, 751, 754, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 923, 929, 931, 946, 947, 950, 955, 957, 964, 966, 971, 973, 974, 989, 991, 1011, 1055, 1058, 1098, 1103, 1104, 1106, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "one": [172, 177, 187, 188, 191, 192, 196, 205, 292, 295, 296, 300, 301, 304, 311, 313, 338, 339, 340, 341, 348, 349, 352, 353, 356, 357, 371, 372, 378, 381, 384, 385, 386, 388, 389, 390, 393, 394, 396, 408, 434, 435, 453, 455, 473, 480, 482, 485, 510, 539, 540, 541, 542, 554, 561, 565, 578, 708, 798, 799, 801, 802, 803, 827, 831, 848, 851, 854, 855, 923, 924, 928, 947, 950, 951, 953, 961, 963, 967, 969, 986, 988, 989, 991, 1011, 1012, 1016, 1025, 1028, 1029, 1032, 1045, 1048, 1049, 1051, 1054, 1100, 1102, 1110, 1111, 1113, 1115, 1116, 1117, 1121, 1122, 1123, 1135, 1136, 1139, 1163, 1177], "torch": [172, 177, 184, 372, 376, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 408, 431, 432, 473, 494, 495, 510, 551, 798, 860, 1011, 1025, 1028, 1177], "tensorflow": [172, 177, 184, 187, 188, 372, 373, 386, 387, 388, 389, 391, 396, 408, 1177], "mxnet": [172, 177, 187, 373, 386, 387, 388, 391, 396, 1177], "either": [172, 177, 184, 191, 192, 371, 372, 374, 377, 378, 381, 382, 385, 386, 387, 391, 393, 394, 408, 434, 444, 446, 560, 574, 577, 591, 594, 651, 676, 679, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 751, 754, 759, 762, 763, 766, 784, 798, 819, 844, 848, 849, 923, 947, 950, 1071, 1072, 1073, 1074, 1135, 1152, 1155, 1160, 1198, 1209, 1210, 1211], "doesn": [172, 177, 371, 374, 378, 386, 391, 408], "matter": [172, 177, 186, 378], "been": [172, 177, 372, 377, 381, 382, 385, 386, 387, 389, 391, 407, 408, 510, 529, 798, 820, 821, 822, 1098, 1099], "ivy_np": [172, 177], "ivy_jax": [172, 177], "subsequ": [172, 178, 371, 378, 380, 381, 384, 388, 389, 395], "call": [172, 178, 184, 187, 193, 194, 196, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 408, 510, 554, 798, 853, 858, 869, 872, 883, 1075, 1076, 1081, 1085, 1086, 1198, 1209, 1210, 1211, 1214, 1218], "ndarrai": [172, 178, 384, 386, 387, 388, 389, 393, 434, 436, 438, 456, 458, 798, 867], "Or": [172, 178, 394], "jaxlib": [172, 178, 371, 386, 387, 389, 393], "xla_extens": [172, 178, 386, 387, 389, 393], "devicearrai": [172, 178, 393], "try_import_ivy_jax": 172, "warn": [172, 179, 180, 181, 182, 183], "try_import_ivy_mxnet": 172, "try_import_ivy_numpi": 172, "try_import_ivy_tf": 172, "try_import_ivy_torch": 172, "unset_backend": [172, 382], "unset": [172, 184, 382, 391, 393], "adjust": [172, 184, 1135, 1156, 1159, 1164, 1167], "previous": [172, 184, 371, 374, 380, 381, 391, 798, 809], "implement": [172, 184, 373, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 473, 479, 501, 510, 555, 560, 561, 564, 566, 569, 570, 573, 579, 582, 583, 586, 587, 591, 594, 627, 630, 631, 634, 648, 652, 655, 692, 695, 696, 699, 700, 703, 704, 707, 730, 733, 747, 750, 751, 754, 763, 766, 767, 770, 784, 789, 923, 938, 940, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1177], "wa": [172, 184, 187, 191, 192, 378, 391, 393, 798, 869, 1075, 1088, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "last": [172, 184, 188, 191, 192, 372, 378, 382, 408, 419, 424, 510, 529, 910, 920, 923, 929, 931, 935, 937, 951, 953, 983, 985, 986, 988, 995, 1001, 1004, 1006, 1009, 1011, 1029, 1032, 1045, 1048, 1050, 1055, 1058, 1124, 1125, 1128, 1130, 1133, 1168, 1169, 1172, 1173, 1176, 1198, 1208], "henc": [172, 184, 1115, 1116, 1117, 1121, 1123], "here": [172, 184, 371, 372, 373, 376, 378, 385, 389, 391, 392, 393, 394, 395, 396, 407, 408], "tensor": [172, 184, 186, 191, 192, 376, 381, 382, 384, 386, 387, 388, 389, 391, 393, 394, 395, 396, 408, 434, 451, 452, 473, 491, 560, 599, 602, 728, 729, 798, 851, 854, 855, 910, 918, 920, 923, 980, 982, 1011, 1025, 1028, 1041, 1044, 1050, 1098, 1099, 1110, 1113, 1177, 1198, 1206, 1208], "howev": [172, 184, 187, 371, 373, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 393, 394, 395, 396, 408], "befor": [172, 184, 191, 192, 371, 372, 373, 377, 380, 384, 386, 387, 388, 391, 394, 408, 510, 554, 560, 794, 797, 910, 921, 922, 1071, 1072, 1073, 1075, 1087, 1115, 1116, 1117, 1121, 1123, 1135, 1152, 1155, 1160], "becom": [172, 184, 186, 188, 372, 378, 385, 391, 396, 408, 1011, 1012, 1015], "swap": [172, 184, 1011, 1059, 1062], "python": [172, 184, 185, 186, 187, 371, 372, 374, 391, 393, 394, 408, 434, 435, 510, 549, 559, 560, 751, 754, 1177, 1183], "op": [172, 184, 376, 391, 408], "eagertensor": [172, 184], "def": [173, 373, 376, 378, 381, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 474, 475, 476, 511, 518, 521, 873, 1177, 1190, 1193, 1196], "ml": [185, 187, 188, 370, 390, 391, 392, 394, 395, 396, 407, 1177, 1183], "explos": [185, 187, 1177], "A": [185, 186, 187, 188, 191, 192, 193, 194, 195, 374, 375, 380, 381, 385, 386, 387, 391, 394, 408, 434, 443, 456, 458, 510, 519, 520, 554, 560, 743, 746, 798, 834, 866, 923, 934, 961, 963, 970, 971, 973, 974, 1011, 1050, 1055, 1058, 1075, 1076, 1078, 1080, 1082, 1083, 1084, 1085, 1086, 1089, 1090, 1091, 1092, 1135, 1136, 1139, 1163, 1168, 1169, 1172, 1173, 1176, 1177, 1220, 1221], "huge": [185, 187, 394, 1177], "number": [185, 186, 191, 192, 193, 194, 195, 196, 371, 378, 385, 387, 388, 391, 394, 396, 431, 432, 433, 434, 435, 436, 438, 443, 451, 452, 453, 455, 456, 458, 473, 480, 492, 493, 496, 498, 499, 501, 510, 546, 547, 548, 560, 574, 591, 594, 623, 626, 638, 656, 659, 660, 663, 728, 729, 730, 733, 747, 750, 751, 754, 755, 758, 759, 762, 794, 797, 798, 799, 802, 825, 834, 835, 850, 868, 871, 910, 921, 923, 934, 935, 937, 938, 940, 955, 957, 970, 974, 986, 988, 1011, 1012, 1015, 1021, 1024, 1033, 1036, 1037, 1040, 1045, 1048, 1050, 1055, 1058, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1098, 1099, 1108, 1110, 1113, 1115, 1116, 1117, 1121, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209], "tool": [185, 188, 372, 392, 396, 407, 408, 1177], "have": [185, 186, 187, 188, 191, 192, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 407, 408, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 493, 510, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 820, 821, 822, 824, 827, 830, 838, 851, 854, 855, 872, 888, 890, 905, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177], "explod": [185, 186, 1177], "onto": [185, 186, 510, 539, 540, 1075, 1081, 1087, 1177], "scene": [185, 186, 375, 390, 392, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1177], "b": [185, 188, 193, 194, 196, 197, 200, 202, 205, 222, 223, 224, 225, 240, 242, 280, 292, 293, 295, 296, 299, 300, 301, 304, 311, 313, 318, 319, 320, 325, 326, 329, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 356, 357, 360, 361, 370, 375, 378, 381, 382, 385, 390, 391, 392, 394, 395, 396, 406, 473, 482, 484, 485, 486, 510, 532, 560, 561, 563, 564, 565, 574, 576, 578, 579, 582, 590, 595, 599, 602, 619, 622, 623, 625, 626, 631, 643, 656, 658, 660, 667, 668, 671, 688, 691, 708, 735, 738, 739, 742, 755, 758, 771, 774, 775, 778, 784, 785, 787, 789, 790, 792, 793, 798, 799, 801, 802, 803, 806, 807, 815, 816, 823, 826, 827, 829, 830, 831, 868, 872, 874, 876, 877, 878, 910, 913, 916, 917, 922, 923, 924, 926, 927, 928, 929, 931, 932, 935, 937, 961, 963, 971, 973, 980, 982, 992, 994, 995, 996, 999, 1011, 1012, 1014, 1015, 1016, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1047, 1048, 1049, 1055, 1058, 1059, 1062, 1093, 1094, 1097, 1098, 1100, 1102, 1103, 1104, 1106, 1110, 1112, 1113, 1114, 1115, 1117, 1118, 1120, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1140, 1143, 1163, 1168, 1169, 1172, 1177, 1183], "why": [185, 187, 372, 385, 388, 389, 393, 1177], "unifi": [185, 187, 191, 192, 384, 391, 408, 510, 539, 540, 541, 542, 554, 1177], "should": [185, 187, 191, 192, 193, 194, 195, 196, 203, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 431, 432, 434, 453, 455, 463, 465, 466, 468, 473, 481, 510, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 648, 651, 652, 655, 656, 672, 675, 676, 679, 680, 683, 684, 687, 692, 695, 696, 699, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 809, 842, 851, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 922, 923, 924, 927, 929, 931, 932, 935, 937, 944, 946, 947, 950, 955, 957, 961, 963, 964, 966, 967, 969, 971, 973, 974, 980, 982, 983, 985, 986, 988, 989, 991, 1011, 1041, 1044, 1098, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1123, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1177], "them": [185, 186, 187, 188, 380, 382, 384, 385, 391, 393, 394, 395, 408, 1177], "c": [185, 187, 188, 196, 311, 356, 357, 370, 375, 378, 381, 385, 390, 391, 392, 394, 408, 560, 739, 742, 798, 806, 807, 815, 868, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 916, 1011, 1055, 1058, 1100, 1102, 1110, 1113, 1135, 1136, 1139, 1156, 1159, 1163, 1164, 1167, 1177, 1183], "standard": [185, 375, 376, 377, 379, 380, 384, 388, 389, 408, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 493, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 688, 691, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1098, 1103, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1156, 1159, 1164, 1167, 1168, 1169, 1172, 1177, 1183, 1212, 1213], "re": [185, 186, 187, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 396, 408, 510, 554, 798, 820, 923, 980, 982, 1011, 1045, 1048, 1110, 1114, 1177], "collabor": [185, 186, 187, 1177], "consortium": [185, 187, 1177, 1183], "data": [185, 187, 191, 192, 193, 194, 195, 375, 376, 377, 381, 383, 385, 387, 388, 389, 393, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 477, 478, 479, 481, 482, 485, 487, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 505, 509, 510, 512, 513, 514, 515, 516, 517, 522, 523, 524, 526, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 806, 807, 844, 845, 847, 864, 872, 888, 890, 908, 910, 919, 923, 924, 927, 929, 931, 932, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 971, 973, 974, 980, 982, 983, 985, 986, 988, 989, 991, 1011, 1025, 1028, 1029, 1032, 1033, 1036, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1098, 1109, 1110, 1111, 1112, 1113, 1124, 1125, 1128, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1183, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209], "api": [185, 186, 371, 372, 375, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 390, 392, 394, 408, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 688, 691, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172, 1177, 1183], "open": [186, 187, 188, 370, 371, 374, 377, 407, 434, 435, 1098, 1100, 1101, 1104, 1106, 1177], "project": [186, 187, 188, 371, 372, 374, 376, 382, 393, 395, 407, 408, 1098, 1099, 1103], "grown": 186, "consider": [186, 378, 389], "recent": [186, 187, 371, 372], "year": [186, 188, 408, 1177], "especi": [186, 371], "deep": [186, 191, 192, 370, 372, 373, 390, 394, 1177], "learn": [186, 187, 371, 373, 375, 381, 390, 396, 407, 560, 664, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1071, 1072, 1073, 1074, 1177, 1214, 1215, 1216, 1217, 1218, 1219], "can": [186, 187, 188, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 407, 408, 434, 436, 438, 456, 458, 473, 482, 485, 510, 552, 553, 554, 923, 944, 1011, 1041, 1044, 1098, 1100, 1101, 1177, 1183], "seen": [186, 187, 378, 393, 394], "rapidli": 186, "increas": [186, 510, 534, 538, 542, 1011, 1021, 1024, 1067, 1070, 1075, 1087], "github": [186, 372, 373, 377, 380], "repo": [186, 187, 188, 371, 372, 379, 391, 393, 394, 395, 396, 407, 1177, 1183], "term": [186, 372, 385, 910, 920, 1198, 1208], "time": [186, 187, 188, 371, 372, 373, 380, 381, 385, 386, 389, 391, 394, 396, 408, 872, 879, 881, 892, 894, 910, 920, 1011, 1063, 1066, 1071, 1072, 1073, 1074, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1198, 1209, 1210, 1211], "These": [186, 187, 188, 372, 377, 378, 380, 381, 385, 386, 388, 389, 391, 392, 394, 395, 396, 408, 923, 938, 940, 1177, 1183], "written": [186, 371, 376, 377, 384, 388, 389, 391, 393, 396, 408], "mani": [186, 187, 188, 191, 192, 371, 372, 373, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 408, 1011, 1050], "differ": [186, 187, 188, 191, 192, 193, 194, 195, 371, 372, 375, 376, 377, 378, 380, 381, 384, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 408, 473, 493, 510, 531, 532, 535, 536, 560, 574, 730, 733, 779, 783, 910, 919, 1011, 1055, 1058, 1135, 1152, 1155, 1160, 1177], "while": [186, 187, 191, 192, 193, 194, 195, 371, 372, 378, 382, 388, 395, 396, 408, 560, 716, 719, 720, 723, 1115, 1116, 1135, 1144, 1147], "wonder": [186, 188, 393], "thing": [186, 187, 188, 371, 372, 373, 382, 393, 394], "research": [186, 407], "develop": [186, 187, 188, 370, 371, 372, 373, 407, 408, 1177], "consid": [186, 187, 191, 192, 376, 381, 392, 393, 394, 560, 716, 719, 720, 723, 1115, 1116, 1117, 1121, 1123], "speed": 186, "evolv": 186, "sharabl": 186, "code": [186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 293, 342, 343, 371, 372, 373, 374, 375, 377, 378, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 406, 408, 419, 421, 422, 423, 424, 425, 428, 430, 510, 532, 555, 560, 619, 622, 775, 778, 872, 874, 876, 877, 878, 910, 916, 917, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1136, 1139, 1163, 1177, 1183], "significantli": 186, "hinder": [186, 389], "librari": [186, 187, 188, 391, 396, 406, 408, 510, 555, 560, 652, 655, 716, 719, 720, 723, 923, 938, 940, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1177], "outdat": 186, "month": 186, "rigor": 186, "maintain": [186, 372, 1124, 1125, 1128, 1130, 1133], "against": [186, 191, 192, 380, 408, 473, 480, 923, 946, 947, 950, 951, 953, 955, 957, 964, 966, 1110, 1111], "newest": 186, "version": [186, 187, 188, 371, 377, 391, 393, 923, 938, 940, 1177], "For": [186, 187, 188, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 434, 435, 453, 455, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 623, 626, 627, 630, 631, 634, 648, 651, 652, 655, 656, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 872, 888, 890, 908, 923, 974, 983, 985, 1011, 1012, 1015, 1055, 1058, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1148, 1151, 1160, 1187, 1188], "softwar": [186, 187, 371, 372], "pipelin": [186, 384, 396], "where": [186, 187, 188, 191, 192, 193, 194, 370, 371, 372, 373, 374, 377, 381, 382, 384, 385, 386, 387, 388, 391, 394, 395, 396, 408, 434, 447, 448, 450, 453, 455, 560, 591, 594, 648, 700, 703, 730, 733, 747, 750, 798, 838, 842, 851, 923, 938, 940, 946, 955, 957, 964, 966, 967, 969, 974, 976, 977, 979, 983, 985, 986, 988, 1011, 1012, 1015, 1021, 1024, 1025, 1028, 1033, 1036, 1055, 1058, 1067, 1070, 1075, 1076, 1086, 1098, 1099, 1110, 1113, 1135, 1156, 1159, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177], "rapid": [186, 187, 371], "prototyp": 186, "vital": [186, 396], "signific": [186, 187, 408], "bottleneck": 186, "new": [186, 187, 188, 191, 192, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 385, 386, 388, 390, 393, 396, 407, 434, 439, 444, 446, 447, 448, 450, 459, 460, 462, 469, 470, 472, 473, 505, 560, 590, 595, 598, 700, 703, 743, 746, 788, 793, 798, 820, 821, 822, 825, 826, 827, 830, 854, 855, 856, 857, 862, 863, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1011, 1025, 1028, 1041, 1044, 1055, 1058, 1075, 1080, 1091, 1092, 1093, 1094, 1097, 1177, 1187, 1188, 1198, 1208, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219], "futur": [186, 188, 371, 372, 393, 408, 923, 938, 940], "avail": [186, 191, 192, 371, 372, 377, 387, 408, 510, 529, 545, 546, 547, 557, 798, 821], "specif": [186, 191, 192, 373, 381, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 407, 408, 473, 501, 510, 552, 555, 560, 716, 719, 720, 723, 798, 820, 821, 822, 849, 923, 938, 940, 980, 982, 1011, 1055, 1058, 1071, 1072, 1073, 1074, 1098, 1099, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1177, 1180, 1182, 1183, 1210, 1211], "quickli": [186, 188, 371, 372, 394, 395], "obsolet": [186, 188], "user": [186, 187, 371, 372, 374, 375, 380, 382, 385, 388, 390, 408, 1198, 1209, 1210, 1211], "constantli": 186, "invent": 186, "wheel": 186, "desir": [186, 191, 192, 473, 479, 482, 485, 510, 555, 798, 838, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209], "provid": [186, 191, 192, 371, 372, 377, 378, 381, 384, 385, 386, 387, 388, 389, 391, 395, 407, 408, 431, 432, 434, 453, 455, 473, 488, 489, 490, 497, 501, 509, 510, 529, 798, 819, 851, 855, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 923, 986, 988, 1011, 1029, 1032, 1055, 1058, 1110, 1111, 1135, 1156, 1159, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1214, 1215, 1216, 1217, 1218, 1219], "simultan": [186, 188], "modern": [186, 187], "simpl": [186, 371, 372, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 391, 393, 395, 396, 408, 798, 823], "scalabl": [186, 391], "must": [186, 188, 191, 192, 193, 194, 195, 371, 372, 373, 376, 377, 378, 381, 384, 385, 386, 387, 389, 391, 395, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 510, 539, 540, 541, 542, 554, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 820, 821, 822, 824, 827, 830, 838, 851, 854, 855, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1214, 1218], "determin": [186, 191, 192, 377, 381, 385, 386, 387, 473, 482, 485, 487, 492, 497, 498, 499, 509, 510, 545, 546, 547, 557, 560, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 627, 630, 631, 634, 635, 648, 651, 652, 655, 672, 675, 676, 679, 680, 683, 692, 695, 696, 699, 704, 707, 708, 711, 724, 727, 730, 733, 747, 750, 751, 754, 763, 766, 767, 770, 771, 774, 784, 788, 789, 793, 798, 799, 802, 806, 807, 837, 839, 843, 844, 845, 846, 847, 864, 871, 872, 888, 890, 910, 921, 923, 924, 927, 929, 931, 932, 934, 935, 937, 944, 946, 947, 950, 955, 957, 961, 963, 964, 966, 970, 971, 973, 983, 985, 986, 988, 989, 991, 1071, 1072, 1073, 1074, 1115, 1116, 1117, 1121, 1123, 1168, 1169, 1172, 1173, 1176], "exactli": [186, 188, 378, 385, 387, 1177, 1183], "common": [186, 191, 192, 373, 378, 381, 383, 385, 387, 408], "ground": [186, 380], "li": 186, "between": [186, 191, 192, 193, 194, 195, 378, 380, 381, 384, 385, 389, 390, 392, 393, 394, 396, 407, 434, 435, 473, 493, 560, 591, 594, 747, 750, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1025, 1028, 1055, 1058, 1075, 1081, 1098, 1100, 1101, 1115, 1116, 1117, 1121, 1123, 1177, 1214, 1216], "find": [186, 191, 192, 371, 372, 391, 394, 1115, 1116, 1117, 1121, 1123, 1177], "exist": [186, 187, 191, 192, 193, 194, 371, 373, 374, 377, 378, 379, 380, 381, 382, 383, 388, 391, 408, 798, 819, 1214, 1218], "essenti": [186, 187, 373, 378, 381, 387], "order": [186, 191, 192, 193, 194, 195, 371, 372, 374, 377, 378, 382, 384, 385, 386, 387, 389, 393, 394, 396, 408, 560, 591, 594, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 923, 938, 940, 951, 953, 974, 976, 977, 979, 989, 991, 1011, 1029, 1032, 1071, 1072, 1073, 1110, 1113, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1220, 1221], "design": [186, 187, 375, 388, 391, 393, 408], "univers": 186, "abstract": [186, 385, 395, 408, 510, 525, 1214, 1218], "In": [186, 188, 371, 372, 376, 377, 378, 381, 382, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 510, 549, 555, 556, 559, 560, 574, 730, 733, 751, 754, 798, 804, 842, 1011, 1041, 1044, 1098, 1104, 1106, 1177], "languag": [186, 188, 391], "first": [186, 187, 371, 372, 374, 378, 381, 384, 385, 389, 391, 393, 394, 396, 431, 432, 434, 451, 452, 473, 500, 505, 510, 529, 541, 560, 574, 577, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 638, 640, 643, 651, 659, 660, 663, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 779, 783, 798, 806, 872, 883, 923, 929, 931, 935, 937, 938, 940, 947, 950, 961, 963, 967, 969, 974, 980, 982, 986, 988, 1011, 1017, 1020, 1045, 1048, 1055, 1058, 1059, 1062, 1071, 1072, 1073, 1074, 1075, 1076, 1085, 1086, 1098, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1198, 1209, 1210, 1211, 1214, 1218], "see": [186, 370, 371, 372, 373, 379, 381, 385, 387, 389, 393, 394, 407, 408, 434, 435, 444, 446, 451, 452, 473, 481, 501, 560, 574, 577, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 635, 651, 652, 655, 684, 687, 708, 711, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 779, 783, 923, 946, 955, 957, 964, 966, 971, 973, 986, 988, 989, 991, 1110, 1112, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177], "clear": [186, 187, 188, 372, 373, 378, 380, 386, 387, 391, 393, 510, 528], "front": [186, 390, 391, 394, 1177, 1183], "runner": 186, "look": [186, 371, 372, 374, 376, 378, 381, 382, 385, 386, 387, 389, 391, 393, 395, 396, 1177], "littl": [186, 393], "deeper": [186, 372, 375, 390, 510, 534, 538, 542, 1075, 1086, 1087], "follow": [186, 187, 191, 192, 371, 372, 373, 374, 376, 377, 378, 380, 382, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 408, 473, 496, 510, 554, 560, 751, 754, 798, 840, 841, 842, 862, 863, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 921, 922, 923, 967, 969, 989, 991, 1075, 1081, 1087, 1115, 1116, 1117, 1121, 1123, 1177, 1198, 1208, 1214, 1218], "core": [186, 371, 373, 387, 391, 396, 510, 546, 1177], "principl": 186, "oper": [186, 191, 192, 193, 194, 196, 371, 373, 377, 378, 381, 384, 385, 387, 388, 394, 395, 434, 451, 452, 473, 501, 560, 574, 615, 618, 619, 622, 643, 667, 668, 671, 735, 738, 739, 742, 751, 754, 775, 778, 798, 808, 820, 821, 822, 864, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 911, 912, 913, 914, 915, 916, 917, 919], "expos": [186, 391, 395, 798, 814], "almost": [186, 372, 385, 392, 394], "ident": [186, 188, 191, 192, 381, 383, 385, 393, 394, 408, 510, 544, 1075, 1088, 1177], "uniqu": [186, 381, 385, 408, 510, 519, 520, 1071, 1072, 1073, 1074, 1075, 1081, 1115, 1116, 1117, 1121, 1122, 1123], "syntax": [186, 187], "There": [186, 371, 372, 378, 381, 384, 385, 386, 391, 394, 408], "onli": [186, 191, 192, 370, 371, 372, 376, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 406, 408, 510, 550, 560, 716, 719, 720, 723, 923, 947, 950, 967, 969, 1011, 1029, 1032, 1075, 1076, 1077, 1085, 1086, 1110, 1111, 1112, 1135, 1144, 1147, 1177, 1214, 1215, 1216, 1217, 1218, 1219], "wai": [186, 187, 371, 382, 388, 393, 394, 395, 396, 408], "unsurprisingli": [186, 378], "fundament": [186, 385, 391], "consist": [186, 191, 192, 384, 388, 510, 542, 923, 938, 940, 1135, 1136, 1139, 1163, 1210, 1211], "each": [186, 187, 188, 191, 192, 193, 194, 195, 196, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 396, 407, 408, 419, 422, 423, 425, 428, 434, 453, 455, 473, 480, 510, 519, 520, 531, 532, 533, 534, 535, 536, 537, 541, 554, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 799, 802, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 911, 912, 913, 914, 915, 916, 917, 918, 923, 924, 927, 929, 931, 932, 938, 940, 946, 947, 950, 955, 957, 958, 960, 964, 966, 971, 973, 974, 1011, 1021, 1024, 1037, 1040, 1045, 1048, 1050, 1055, 1058, 1063, 1066, 1067, 1070, 1075, 1081, 1088, 1098, 1099, 1110, 1113, 1115, 1116, 1117, 1121, 1135, 1136, 1139, 1163, 1177, 1183, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "veri": [186, 187, 371, 372, 376, 378, 380, 381, 385, 387, 388, 389, 392, 394, 395, 396, 408, 1177], "similar": [186, 376, 385, 386, 387, 394, 408, 560, 751, 754, 910, 921, 1198, 1209], "convent": [186, 407, 923, 947, 950, 1135, 1136, 1139, 1163], "those": [186, 191, 192, 371, 372, 373, 385, 391, 396, 434, 435, 872, 908, 923, 967, 969, 974, 1011, 1012, 1015], "introduc": [186, 385, 394, 1011, 1045, 1048, 1115, 1116], "2006": 186, "therefor": [186, 372, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 393, 395, 408, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 623, 626, 656, 739, 742, 771, 774, 775, 778, 784, 798, 826, 910, 913, 922, 923, 935, 937, 1011, 1045, 1048, 1093, 1094, 1097, 1115, 1117, 1121, 1135, 1140, 1143, 1168, 1169, 1172], "present": [186, 191, 192, 372, 379, 385, 386, 387, 388, 389, 391], "itself": [186, 371, 372, 385, 388, 389, 395, 407, 408, 798, 804, 1075, 1087], "cut": 186, "cloth": 186, "adher": [186, 187, 377, 379, 391, 396], "semant": [186, 391, 396, 560, 751, 754], "up": [186, 187, 188, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 407, 408], "hopefulli": [186, 187, 188, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407], "paint": [186, 391], "pictur": [186, 391], "how": [186, 188, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 407, 408, 1177, 1183, 1198, 1209, 1210, 1211], "pleas": [186, 187, 188, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 1177], "discuss": [186, 187, 188, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 1177], "faq": [186, 187, 188, 391, 393, 394, 395, 396, 407], "reach": [186, 187, 188, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 510, 534, 538, 542, 1075, 1087], "discord": [186, 187, 188, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 407, 1177], "you": [186, 187, 188, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 407, 408, 1177, 1183], "question": [186, 187, 188, 371, 372, 378, 380, 391, 393, 394, 395, 396, 407, 408, 1177], "central": 187, "goal": [187, 373], "being": [187, 188, 191, 192, 371, 372, 378, 380, 383, 384, 385, 386, 387, 388, 389, 391, 394, 407, 408, 434, 435, 798, 853, 858, 1115, 1122, 1177], "would": [187, 371, 372, 374, 375, 377, 378, 380, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 408, 419, 424, 510, 555, 1177], "entir": [187, 188, 191, 192, 372, 378, 379, 380, 384, 385, 388, 393, 394, 395, 396, 408, 510, 554, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1207], "forgiven": 187, "rais": [187, 191, 192, 372, 388, 391, 393, 473, 481, 560, 648, 747, 750, 798, 808, 833, 842, 856, 863, 869, 923, 947, 950, 954, 986, 988, 1011, 1051, 1054, 1055, 1058, 1110, 1113, 1135, 1140, 1143, 1148, 1151, 1168, 1169, 1172, 1173, 1176, 1210, 1211, 1214, 1218], "eyebrow": 187, "somehow": 187, "pytorch": [187, 188, 373, 381, 386, 387, 388, 389, 391, 393, 396, 408, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1177, 1214, 1215, 1216, 1217, 1218, 1219], "other": [187, 191, 192, 193, 194, 196, 371, 372, 376, 377, 378, 380, 381, 384, 385, 388, 391, 393, 395, 396, 406, 407, 408, 431, 432, 434, 435, 560, 652, 655, 798, 799, 802, 804, 872, 883, 1098, 1104, 1106, 1115, 1122, 1135, 1156, 1159, 1164, 1167, 1177], "strong": [187, 408], "industri": 187, "back": [187, 384, 390, 391, 393, 408, 1177, 1183, 1210, 1211, 1214, 1218], "momentum": 187, "won": [187, 188, 372, 396], "ad": [187, 196, 203, 368, 369, 371, 372, 373, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 391, 395, 408, 798, 862, 863, 923, 938, 940, 1011, 1025, 1028, 1220, 1221], "just": [187, 188, 371, 372, 377, 378, 380, 381, 388, 391, 393, 394, 408, 1135, 1136, 1139, 1163, 1198, 1207], "make": [187, 188, 371, 372, 373, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 393, 394, 396, 510], "problem": [187, 372, 384, 393], "even": [187, 188, 371, 372, 377, 381, 386, 387, 389, 393, 394, 395, 396, 408, 560, 747, 750, 755, 758], "wors": 187, "rather": [187, 191, 192, 376, 377, 380, 385, 396, 408, 434, 435, 510, 554, 798, 844, 845, 847, 872, 888, 890], "funni": 187, "comic": 187, "strip": 187, "easi": [187, 371, 372, 381, 385], "feasibl": 187, "space": [187, 434, 435, 451, 452, 798, 825], "unlik": [187, 378, 385, 510], "charger": 187, "charact": 187, "encod": [187, 394, 798, 825], "instant": [187, 1177], "messag": [187, 372, 391, 393, 1223, 1224], "much": [187, 372, 376, 384, 385, 388, 391, 393, 394], "doe": [187, 191, 192, 372, 374, 375, 376, 377, 378, 380, 381, 382, 386, 388, 389, 391, 393, 394, 408, 560, 619, 622, 798, 842, 1011, 1050], "mandat": [187, 380, 388], "adopt": [187, 372, 384], "continu": [187, 188, 379, 380, 408], "own": [187, 188, 371, 377, 391, 408], "signatur": [187, 376, 377, 378, 385, 386, 387, 388, 389, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143], "replac": [187, 191, 192, 372, 374, 378, 380, 383, 385, 386, 387, 391, 393, 396, 408, 798, 854, 855, 1011, 1012, 1015, 1098, 1099], "your": [187, 188, 370, 371, 373, 374, 376, 377, 394, 395, 408, 1177], "10": [187, 189, 190, 191, 192, 193, 194, 195, 196, 250, 307, 311, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 378, 385, 391, 393, 394, 434, 447, 452, 510, 560, 599, 602, 603, 606, 631, 643, 667, 668, 671, 688, 691, 696, 699, 771, 774, 798, 816, 826, 853, 858, 872, 892, 893, 894, 895, 910, 916, 923, 932, 935, 937, 961, 963, 980, 982, 1011, 1029, 1032, 1037, 1040, 1050, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1110, 1113, 1115, 1116, 1135, 1136, 1139, 1140, 1143, 1163, 1214, 1216], "100": [187, 188, 196, 311, 356, 357, 394, 395, 396, 408, 560, 771, 774, 1100, 1102, 1177], "despit": [187, 385, 387], "distinct": [187, 377, 385, 388, 390, 1115, 1116, 1117, 1121, 1123, 1177], "still": [187, 191, 192, 377, 380, 386, 393, 395, 408, 1177], "believ": [187, 372], "share": [187, 191, 192, 378, 380, 381, 382, 385, 391, 473, 505], "bring": [187, 391, 392], "benefit": [187, 188, 371, 372, 384, 385, 388, 393, 394, 408], "unrel": [187, 372], "what": [187, 188, 372, 375, 377, 378, 383, 385, 389, 390, 391, 393, 394, 395, 396, 407, 408, 1177], "again": [187, 188, 372, 376, 378, 385, 388, 394, 396, 408], "contrari": 187, "bumpi": 187, "road": 187, "allud": [187, 394], "most": [187, 191, 192, 371, 372, 376, 380, 381, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 408, 923, 938, 940], "technolog": 187, "sector": [187, 560, 569, 570, 573, 583, 586, 590, 595, 598, 630, 634, 788, 793], "full": [187, 188, 193, 194, 372, 377, 386, 389, 391, 408, 434, 473, 493, 560, 643, 667, 668, 671, 688, 691, 910, 916, 923, 967, 969, 971, 973, 974, 1093, 1094, 1097], "success": 187, "reason": [187, 372, 376, 378, 381, 384, 385, 386, 388, 391, 393, 560, 751, 754], "build": [187, 370, 371, 381, 390, 392, 395, 396, 408, 1115, 1116, 1117, 1121, 1123, 1177, 1198, 1209, 1210, 1211], "custom": [187, 395], "comput": [187, 188, 191, 192, 371, 381, 385, 391, 394, 408, 510, 554, 560, 574, 599, 602, 611, 614, 619, 622, 640, 643, 644, 647, 664, 667, 668, 671, 684, 687, 688, 691, 712, 715, 716, 719, 720, 723, 724, 727, 730, 733, 735, 738, 739, 742, 798, 810, 811, 813, 816, 817, 872, 874, 877, 879, 881, 883, 884, 886, 892, 894, 896, 898, 900, 902, 905, 907, 910, 911, 912, 913, 914, 915, 916, 917, 919, 921, 923, 924, 927, 929, 931, 934, 938, 940, 941, 943, 944, 947, 950, 951, 953, 967, 969, 970, 971, 973, 974, 986, 988, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1075, 1081, 1115, 1116, 1117, 1121, 1123, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167], "thank": [187, 394], "interoper": 187, "compon": [187, 391], "bio": [187, 371], "hardwar": [187, 371], "initi": [187, 191, 192, 193, 194, 195, 372, 382, 386, 387, 510, 910, 920, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1214, 1218], "pcie": 187, "interfac": [187, 396, 408], "motherboard": 187, "raid": 187, "storag": [187, 394], "virtual": [187, 372, 374], "bluetooth": 187, "wireless": 187, "exchang": 187, "btx": 187, "factor": [187, 510, 519, 552, 553, 554, 872, 874, 877, 879, 881, 892, 894, 896, 898, 910, 911, 912, 913, 914, 915, 916, 917, 923, 924, 927, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1214, 1215, 1216, 1217], "sata": 187, "connect": [187, 371, 395, 396, 1198, 1208, 1209], "host": [187, 408], "bu": 187, "adapt": [187, 872, 896, 898, 1214, 1217], "html": [187, 374, 377, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143], "enabl": [187, 191, 192, 193, 194, 195, 371, 372, 380, 381, 384, 385, 388, 390, 391, 392, 394, 396, 408], "anyon": [187, 370, 408], "websit": 187, "tcp": 187, "ip": 187, "node": [187, 191, 192, 385, 1075, 1076, 1085, 1086], "commun": [187, 370, 372, 373, 408, 1177, 1183], "network": [187, 381, 385, 391, 395, 407, 910, 919, 1177, 1184, 1198, 1210, 1211], "smtp": 187, "possibl": [187, 370, 371, 372, 373, 377, 378, 380, 385, 386, 388, 391, 394, 407, 408, 798, 848, 866, 1135, 1140, 1143, 1148, 1151], "send": 187, "gmail": 187, "outlook": 187, "pop": 187, "email": 187, "ieee": [187, 433, 473, 493, 560, 574, 652, 655, 730, 733, 751, 754, 771, 774], "754": [187, 433, 473, 493, 560, 574, 652, 655, 730, 733, 751, 754, 771, 774], "allow": [187, 391, 408, 434, 451, 452, 798, 848, 1210, 1211], "calcul": [187, 191, 192, 193, 194, 195, 377, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 627, 630, 631, 634, 635, 648, 651, 652, 655, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 730, 733, 747, 750, 763, 766, 767, 770, 771, 774, 779, 783, 784, 789, 995, 996, 999, 1001, 1004, 1006, 1009, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "live": [187, 188], "depend": [187, 371, 372, 377, 383, 385, 386, 391, 408, 473, 479, 560, 561, 564, 566, 569, 570, 573, 579, 582, 583, 586, 587, 591, 594, 627, 630, 631, 634, 648, 652, 655, 692, 695, 696, 699, 700, 703, 704, 707, 747, 750, 763, 766, 767, 770, 784, 789, 923, 938, 940, 967, 969, 971, 973, 974, 1110, 1114, 1124, 1125, 1128, 1130, 1133], "did": [187, 373, 396], "aris": [187, 408], "until": [187, 372, 408, 1177], "substanti": [187, 372, 380, 384], "innov": 187, "growth": 187, "usag": [187, 391, 510, 554], "relev": [187, 371, 373, 378, 385, 386, 394, 1214, 1215, 1216, 1217, 1218, 1219], "area": [187, 388, 406, 560, 569, 570, 573, 583, 586, 590, 595, 598, 630, 634, 788, 793, 1177], "necess": 187, "parti": [187, 408], "could": [187, 188, 371, 372, 378, 380, 385, 386, 388, 391, 393, 394, 395, 1115, 1116, 1117, 1121, 1123], "easili": [187, 372, 394, 395, 396, 408, 1177], "engag": [187, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "regard": [187, 385, 510], "effect": [187, 377, 384, 385, 389, 408, 434, 453, 455, 872, 900, 902, 1135, 1156, 1159, 1164, 1167], "2015": 187, "sinc": [187, 371, 372, 408], "alongsid": 187, "machin": [187, 371, 381, 407, 473, 493, 496, 560, 664, 923, 946, 955, 957, 964, 966], "given": [187, 188, 191, 192, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 395, 396, 407, 434, 435, 439, 451, 452, 510, 543, 549, 551, 552, 553, 554, 556, 559, 798, 816, 817, 827, 830, 854, 855, 870, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 911, 912, 913, 914, 915, 916, 917, 923, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1048, 1050, 1063, 1066, 1075, 1082, 1083, 1098, 1100, 1101, 1103, 1104, 1106, 1109, 1124, 1130, 1133, 1187, 1188], "frame": [187, 407], "matur": [187, 408], "state": [187, 377, 389, 390, 391, 392, 394, 407, 560, 730, 733, 910, 920, 1177, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "than": [187, 191, 192, 372, 376, 378, 380, 385, 388, 391, 394, 395, 396, 408, 434, 435, 473, 493, 510, 554, 560, 566, 569, 570, 573, 579, 582, 591, 594, 607, 610, 615, 618, 623, 626, 630, 634, 638, 656, 659, 660, 663, 692, 695, 696, 699, 704, 707, 728, 747, 750, 751, 754, 759, 762, 771, 774, 794, 797, 798, 844, 845, 847, 872, 888, 890, 923, 929, 931, 946, 947, 950, 955, 957, 964, 966, 989, 991, 1011, 1012, 1015, 1029, 1032, 1051, 1054, 1098, 1104, 1106, 1115, 1116, 1117, 1121, 1123, 1135, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "preced": [187, 395], "mention": [187, 371, 372, 378, 381, 388, 389], "aros": 187, "70": [187, 923, 961, 963, 1135, 1136, 1139, 1163], "80": [187, 923, 961, 963, 1135, 1136, 1139, 1163], "90": [187, 196, 311, 356, 357, 560, 619, 622, 755, 758, 923, 961, 963, 1100, 1102, 1135, 1136, 1139, 1163], "effort": [187, 370, 408], "stage": [187, 370, 372, 374, 375, 1177], "complet": [187, 191, 192, 372, 373, 384, 385, 393, 394, 923, 967, 969], "natur": [187, 378, 384, 385, 407, 560, 648, 692, 695, 700, 703, 923, 934, 970], "like": [187, 371, 372, 374, 375, 376, 377, 378, 380, 387, 388, 389, 390, 391, 393, 394, 395, 396, 407, 408, 872, 888, 890, 1098, 1104, 1106, 1177], "certainli": 187, "mission": [187, 1177], "creat": [187, 191, 192, 370, 371, 372, 374, 386, 387, 388, 391, 392, 395, 406, 407, 434, 435, 436, 438, 439, 440, 442, 443, 447, 448, 450, 451, 452, 456, 458, 459, 460, 462, 469, 470, 472, 510, 519, 520, 798, 826, 827, 830, 851, 854, 855, 866, 872, 907, 1098, 1099, 1100, 1101, 1104, 1106, 1177, 1183, 1187, 1188, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "At": [187, 373], "process": [187, 188, 370, 371, 372, 374, 381, 385, 391, 396, 510, 519, 520, 549, 559], "ourselv": 187, "lead": [187, 188, 191, 192, 193, 194, 195, 408, 923, 967, 969, 974], "quansight": 187, "compani": 187, "made": [187, 372, 373, 385, 388, 391, 393], "organ": [187, 376, 381, 384, 385], "panda": 187, "scipi": 187, "conda": [187, 371, 374], "dask": [187, 1115, 1116, 1117, 1121, 1123], "apach": 187, "onnx": 187, "scikit": 187, "jupyt": 187, "aw": 187, "cupi": 187, "net": [187, 188, 391, 396], "sympi": 187, "rai": [187, 560, 591, 594], "modin": 187, "spyder": 187, "includ": [187, 191, 192, 372, 373, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 407, 408, 434, 435, 436, 438, 456, 458, 798, 837, 871, 923, 989, 991, 1075, 1076, 1098, 1104, 1106, 1110, 1112, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1180, 1182, 1198, 1208, 1209, 1212, 1213], "member": [187, 372], "googl": [187, 1177], "octoml": 187, "einop": [187, 191, 192, 798, 820, 821, 822], "further": [187, 188, 372, 374, 378, 384, 390, 394, 395, 1177], "sponsor": 187, "lg": 187, "electron": 187, "microsoft": 187, "d": [187, 188, 196, 311, 356, 357, 370, 371, 375, 385, 394, 798, 807, 815, 910, 911, 912, 913, 914, 915, 916, 917, 923, 935, 937, 961, 963, 1100, 1102, 1177, 1183], "shaw": 187, "intel": 187, "togeth": [187, 191, 192, 384, 385, 395, 396, 408, 1220, 1221], "major": [187, 386, 387, 408, 1110, 1113], "involv": [187, 370, 374, 375, 386, 396, 473, 501, 560, 574, 730, 733, 1177, 1183], "anoth": [187, 191, 192, 371, 372, 381, 385, 386, 393, 396, 434, 444, 446, 473, 480, 482, 485], "promis": 187, "pursuit": 187, "unif": [187, 370, 393, 1177, 1183], "clearli": [187, 373, 378], "lot": [187, 188, 383, 393, 408], "thought": [187, 371, 372, 389], "care": [187, 372, 396], "attent": [187, 372, 384, 385, 910, 921, 922, 1198, 1209], "gone": [187, 390], "simplifi": [187, 391, 392, 393, 395], "compat": [187, 389, 408, 473, 481, 560, 574, 577, 591, 594, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 635, 638, 640, 643, 651, 659, 660, 663, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 779, 783, 923, 946, 955, 957, 964, 966, 971, 973, 980, 982, 986, 988, 989, 991, 1011, 1041, 1044, 1110, 1112, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177], "excit": [187, 370, 375, 1177], "complianc": 187, "hope": [187, 408], "due": [187, 371, 385, 388, 560, 730, 733], "suit": [187, 371, 375, 379, 380, 394, 407], "some": [187, 188, 191, 192, 371, 372, 373, 376, 377, 378, 381, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 407, 408, 560, 652, 655, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 908, 910, 918, 1177, 1198, 1206], "motiv": [187, 393], "great": [187, 188, 380, 391, 393], "convinc": 187, "celebr": 187, "encourag": [187, 407, 408, 1177, 1183], "foundat": 187, "point": [188, 372, 377, 378, 384, 388, 389, 391, 393, 394, 407, 433, 434, 435, 439, 443, 447, 459, 469, 473, 479, 493, 498, 501, 560, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 619, 622, 623, 626, 627, 630, 631, 634, 635, 648, 651, 652, 655, 656, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 763, 766, 767, 770, 771, 774, 784, 788, 789, 793, 794, 797, 923, 924, 927, 932, 938, 940, 941, 943, 944, 946, 955, 957, 964, 966, 967, 969, 971, 973, 974, 989, 991, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "mai": [188, 371, 372, 385, 393, 395, 434, 435, 444, 446, 510, 555, 560, 640, 643, 667, 668, 671, 688, 691, 716, 719, 720, 723, 798, 819, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151], "ask": [188, 391, 393, 408, 1177], "perfectli": 188, "happi": [188, 371, 408], "abund": 188, "better": [188, 375, 390, 393, 394, 395], "ll": [188, 370, 372, 378, 385, 388, 394], "give": [188, 371, 372, 375, 377, 378, 382, 389, 393, 1011, 1041, 1044], "two": [188, 193, 194, 196, 377, 378, 380, 384, 385, 390, 394, 396, 434, 435, 443, 453, 455, 463, 465, 466, 468, 473, 500, 505, 560, 615, 618, 755, 758, 798, 806, 923, 924, 927, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 971, 973, 974, 976, 977, 979, 983, 985, 986, 988, 1011, 1059, 1062, 1115, 1116, 1117, 1121, 1122, 1123, 1177], "streamlin": 188, "workflow": [188, 372, 394, 406, 1177], "save": [188, 191, 192, 408, 798, 859, 1210, 1211], "week": [188, 372, 373, 1177], "let": [188, 377, 378, 385, 386, 387, 391, 393, 394, 395, 396, 1135, 1144, 1147, 1156, 1159, 1160, 1164, 1167, 1177], "sai": [188, 371, 383, 393], "deepmind": 188, "releas": [188, 371, 373, 1177], "awesom": 188, "paper": 188, "love": 188, "choic": [188, 371, 388, 394, 1135, 1156, 1159, 1164, 1167], "perceiverio": 188, "happen": [188, 371, 372, 394], "slew": 188, "rush": 188, "f": [188, 374, 375, 385, 391, 394, 396, 560, 664, 798, 839, 843], "g": [188, 375, 385, 408, 473, 478, 501, 510, 526, 1098, 1103, 1104, 1106, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1148, 1151, 1152, 1155, 1160], "inevit": 188, "deviat": [188, 1093, 1094, 1097, 1098, 1103, 1135, 1156, 1159, 1212, 1213], "origin": [188, 191, 192, 193, 194, 195, 382, 383, 386, 391, 393, 560, 591, 594, 923, 951, 953, 1011, 1041, 1044, 1045, 1048], "often": [188, 381, 408], "erron": 188, "train": [188, 381, 385, 387, 394, 395, 396, 406, 407, 408, 872, 874, 877, 879, 881, 892, 894, 1177], "poor": 188, "converg": 188, "perform": [188, 191, 192, 376, 378, 380, 381, 382, 384, 385, 387, 388, 389, 391, 394, 408, 419, 424, 434, 451, 452, 510, 798, 816, 820, 821, 822, 840, 841, 842, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 918, 920, 923, 974, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1168, 1169, 1172, 1173, 1176], "issu": [188, 370, 373, 391, 393, 395, 408], "publish": [188, 408], "manag": [188, 370, 388, 408, 510], "get": [188, 191, 192, 370, 371, 373, 375, 381, 386, 387, 388, 391, 392, 393, 394, 395, 473, 491, 492, 493, 496, 510, 519, 520, 529, 530, 543, 544, 549, 553, 556, 559, 798, 805, 832, 833, 834, 853, 1177, 1183, 1198, 1207], "work": [188, 371, 372, 373, 375, 380, 385, 386, 387, 390, 391, 392, 393, 395, 396, 1177, 1183], "repositori": [188, 371, 372, 374, 379], "pull": [188, 370, 371, 374, 376, 408], "request": [188, 370, 376, 510, 546], "confus": [188, 388], "do": [188, 191, 192, 371, 372, 373, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 408, 560, 751, 754, 798, 842, 872, 888, 890, 908, 1075, 1076, 1085, 1086, 1087], "expect": [188, 408, 798, 805, 1177], "codebas": [188, 370, 375, 376, 388, 390, 510, 552, 553, 1177], "total": [188, 191, 192, 193, 194, 195, 370, 372, 378, 380, 387, 394, 395, 408, 510, 556, 1110, 1113, 1135, 1156, 1159, 1164, 1167], "hour": 188, "spent": 188, "spin": 188, "off": [188, 390, 923, 935, 937, 983, 985], "test": [188, 371, 373, 375, 378, 408, 473, 498, 499, 560, 672, 675, 676, 679, 680, 683, 1168, 1169, 1172, 1173, 1176], "error": [188, 191, 192, 371, 380, 384, 387, 389, 393, 408, 419, 420, 510, 560, 644, 647, 1135, 1140, 1143, 1148, 1151, 1210, 1211, 1214, 1218], "address": [188, 372, 373, 384, 391], "sake": 188, "singl": [188, 191, 192, 372, 376, 378, 380, 381, 383, 385, 388, 389, 391, 394, 395, 396, 408, 510, 519, 520, 539, 540, 541, 542, 798, 868, 871, 1098, 1103, 1104, 1106, 1115, 1116], "multipl": [188, 191, 192, 196, 205, 295, 296, 300, 301, 304, 311, 313, 338, 339, 340, 341, 348, 349, 352, 353, 356, 357, 372, 378, 381, 385, 408, 560, 578, 708, 730, 733, 798, 799, 801, 802, 803, 827, 831, 848, 923, 924, 927, 928, 944, 1011, 1012, 1015, 1016, 1045, 1048, 1049, 1050, 1093, 1094, 1097, 1100, 1102, 1110, 1111, 1112, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1208], "line": [188, 371, 378, 384, 392, 393, 394, 395, 406, 1177, 1183], "directli": [188, 372, 376, 377, 381, 384, 385, 386, 387, 388, 389, 391, 393, 395, 396, 407, 408, 1075, 1087], "graph": [188, 381, 385, 392, 408, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1115, 1116, 1117, 1121, 1123, 1210, 1211], "guarante": [188, 384, 408, 1115, 1116], "turn": [188, 378, 385], "take": [188, 370, 371, 372, 377, 378, 380, 385, 386, 387, 391, 393, 395, 396, 408, 560, 619, 622, 1177, 1183], "few": [188, 372, 373, 381, 385, 386, 387, 388, 392, 393, 394, 395, 406, 1177, 1183], "second": [188, 371, 378, 388, 393, 473, 500, 505, 510, 541, 560, 574, 577, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 638, 640, 643, 651, 659, 660, 663, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 779, 783, 798, 806, 853, 858, 872, 874, 877, 879, 881, 892, 894, 923, 929, 931, 935, 937, 938, 940, 947, 950, 961, 963, 967, 969, 974, 980, 982, 986, 988, 1011, 1055, 1058, 1059, 1062, 1071, 1073, 1115, 1116, 1117, 1121, 1214, 1215, 1216], "automat": [188, 371, 372, 381, 385, 389, 390, 391, 392, 395, 396, 1177], "everyon": [188, 370, 372, 408], "regardless": [188, 191, 192, 370, 393, 396, 431, 432], "wouldn": 188, "nice": [188, 380], "write": [188, 191, 192, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 388, 391, 393, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 510, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 817, 820, 821, 822, 824, 826, 827, 830, 838, 851, 854, 855, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1114, 1115, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "onc": [188, 371, 372, 385, 386, 387, 391, 394, 408, 510, 554, 923, 944, 974, 1098, 1099], "know": [188, 372, 1115, 1116, 1117, 1121, 1123], "among": [188, 191, 192, 380], "frantic": 188, "port": 188, "lucid": 188, "honk": 188, "improv": [188, 372, 381, 391], "understand": [188, 371, 372, 373, 374, 375, 377, 378, 379, 389, 390], "pattern": [188, 191, 192, 377, 386, 798, 820, 821, 822], "hasn": 188, "now": [188, 191, 192, 371, 374, 376, 383, 385, 386, 389, 393, 394, 396, 407, 408, 1198, 1209, 1210, 1211], "spend": 188, "torchvis": 188, "probabl": [188, 910, 918, 1098, 1099, 1198, 1206], "sonnet": 188, "about": [188, 371, 372, 379, 390, 391, 395, 396, 408, 473, 493, 496], "next": [188, 371, 372, 373, 374, 377, 378, 382, 383, 393, 394, 473, 493, 1177, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1219], "everyth": [188, 372, 373, 392, 408], "zero": [188, 191, 192, 193, 194, 378, 384, 385, 386, 387, 389, 391, 394, 395, 419, 421, 422, 434, 439, 443, 453, 455, 463, 465, 466, 468, 470, 472, 473, 479, 560, 574, 579, 582, 607, 610, 631, 652, 655, 656, 716, 719, 720, 723, 728, 729, 730, 733, 735, 738, 739, 742, 747, 750, 751, 754, 755, 758, 771, 774, 775, 778, 784, 789, 798, 816, 851, 854, 855, 872, 874, 877, 879, 881, 892, 894, 896, 898, 910, 918, 923, 924, 927, 932, 946, 947, 950, 955, 957, 964, 966, 986, 988, 989, 991, 1011, 1025, 1028, 1029, 1032, 1037, 1040, 1045, 1048, 1067, 1070, 1093, 1094, 1097, 1098, 1100, 1101, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1214, 1215, 1216, 1217], "need": [188, 371, 372, 373, 374, 376, 377, 378, 379, 381, 384, 385, 388, 391, 393, 394, 407, 408, 798, 810, 811, 813, 1011, 1012, 1015, 1025, 1028], "said": 188, "high": [188, 191, 192, 196, 276, 311, 312, 356, 357, 373, 394, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107], "level": [188, 370, 373, 381, 390, 391, 394, 395, 396, 408], "optim": [188, 388, 392, 394, 396, 407, 510, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1071, 1072, 1073, 1074, 1177, 1215, 1216, 1217, 1219], "trainer": [188, 406, 408, 1177], "statu": 188, "quo": 188, "kera": 188, "dopamin": 188, "ignit": 188, "catalyst": 188, "lightn": 188, "fastai": 188, "haiku": [188, 396], "flax": [188, 396, 408], "trax": [188, 396], "objax": [188, 396], "idea": [188, 407], "fulli": [188, 384, 385, 389, 391, 392, 393, 394, 395, 396, 408, 1198, 1208, 1209], "offer": [188, 395], "containerwithactiv": [189, 193, 194], "dict_in": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "queue": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 394, 510, 519, 520, 798, 853, 858], "queue_load_s": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "container_combine_method": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "list_join": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "queue_timeout": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 798], "print_limit": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "key_length_limit": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "print_ind": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "print_line_spac": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "ivyh": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "default_key_color": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "green": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 1223, 1224], "keyword_color_dict": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "rebuild_child_contain": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "types_to_iteratively_nest": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "alphabetical_kei": [189, 190, 191, 192, 193, 194, 195, 196, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "containerbas": [189, 190, 191, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 385], "key_chain": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 425, 427, 429, 482, 484, 486, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 625, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 646, 650, 651, 652, 654, 658, 659, 660, 662, 666, 667, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 730, 732, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 799, 801, 803, 811, 812, 827, 829, 831, 879, 880, 882, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 903, 924, 926, 928, 947, 949, 996, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1075, 1088, 1094, 1096, 1100, 1102, 1104, 1105, 1107, 1117, 1118, 1120, 1125, 1127, 1129, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1162, 1163, 1164, 1166, 1169, 1171, 1173, 1175], "to_appli": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 425, 427, 429, 482, 484, 486, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 625, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 646, 650, 651, 652, 654, 658, 659, 660, 662, 666, 667, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 730, 732, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 799, 801, 803, 811, 812, 827, 829, 831, 879, 880, 882, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 903, 924, 926, 928, 947, 949, 996, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1075, 1088, 1094, 1096, 1104, 1105, 1107, 1117, 1118, 1120, 1125, 1127, 1129, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1162, 1163, 1164, 1166, 1169, 1171, 1173, 1175], "prune_unappli": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 425, 427, 429, 482, 484, 486, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 625, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 646, 650, 651, 652, 654, 658, 659, 660, 662, 666, 667, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 730, 732, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 799, 801, 803, 811, 812, 827, 829, 831, 879, 880, 882, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 903, 924, 926, 928, 947, 949, 996, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1075, 1088, 1094, 1096, 1104, 1105, 1107, 1117, 1118, 1120, 1125, 1127, 1129, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1162, 1163, 1164, 1166, 1169, 1171, 1173, 1175], "map_sequ": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 214, 215, 217, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 261, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 425, 427, 429, 482, 484, 486, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 595, 597, 603, 605, 623, 625, 629, 630, 633, 634, 637, 639, 644, 646, 650, 652, 654, 658, 659, 660, 672, 674, 676, 678, 680, 682, 692, 694, 696, 698, 700, 702, 704, 706, 708, 716, 718, 730, 732, 734, 735, 737, 743, 745, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 799, 801, 803, 811, 812, 827, 829, 831, 879, 880, 882, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 903, 924, 926, 928, 996, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1063, 1065, 1067, 1069, 1094, 1096, 1104, 1105, 1107, 1117, 1118, 1120, 1125, 1127, 1129, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1162, 1163, 1164, 1166, 1169, 1171, 1173, 1175], "static": [189, 190, 191, 192, 196, 203, 292, 295, 296, 299, 300, 301, 304, 311, 313, 314, 318, 319, 320, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 356, 357, 360, 361, 362, 363, 368, 369, 373, 377, 378, 381, 408, 425, 429, 431, 432, 482, 486, 561, 565, 578, 590, 595, 708, 785, 790, 793, 799, 803, 827, 831, 924, 928, 1012, 1016, 1045, 1049, 1100, 1102, 1117, 1118], "static_softplu": [189, 190, 196, 425], "__getitem__": [191, 192, 385], "queri": [191, 192, 385, 386, 393, 510, 543, 553, 910, 921, 922, 1198, 1209], "slice": [191, 192, 798, 826, 827, 830, 1075, 1084], "chain": [191, 192, 384, 385, 395, 396, 408, 1071, 1072, 1073, 1075, 1088, 1220, 1221], "element": [191, 192, 377, 391, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 447, 448, 450, 463, 465, 466, 468, 510, 533, 537, 541, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 806, 807, 810, 811, 813, 816, 817, 824, 838, 867, 868, 910, 918, 923, 929, 931, 938, 940, 947, 950, 967, 969, 974, 1011, 1012, 1015, 1029, 1032, 1037, 1040, 1045, 1048, 1050, 1051, 1054, 1098, 1099, 1110, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1206], "represent": [191, 192, 193, 194, 195, 407, 433, 473, 477, 478, 493, 496, 510, 526, 527, 560, 561, 564, 574, 599, 602, 611, 614, 619, 622, 724, 727, 730, 733, 798, 804, 861, 866], "dictionari": [191, 192, 193, 194, 195, 394, 408, 510, 553], "around": [191, 192, 193, 194, 195, 372, 381, 384, 389, 393, 408], "sequenc": [191, 192, 193, 194, 195, 378, 386, 407, 431, 432, 510, 519, 520, 798, 807, 848, 1011, 1050, 1055, 1058, 1098, 1100, 1101, 1135, 1140, 1143, 1198, 1207, 1212, 1213, 1220, 1221], "multiprocess": [191, 192, 193, 194, 195, 394, 408, 510, 519, 798], "asynchron": [191, 192, 193, 194, 195], "wait": [191, 192, 193, 194, 195, 372], "size": [191, 192, 193, 194, 195, 393, 394, 434, 451, 452, 510, 552, 553, 554, 798, 854, 860, 910, 922, 923, 935, 937, 951, 953, 961, 963, 967, 969, 974, 986, 988, 1011, 1025, 1028, 1045, 1048, 1050, 1051, 1054, 1098, 1099, 1103, 1104, 1106, 1110, 1111, 1113, 1168, 1169, 1172, 1173, 1176, 1198, 1199, 1200], "dimens": [191, 192, 193, 194, 195, 378, 391, 394, 419, 424, 434, 463, 465, 466, 468, 510, 541, 798, 820, 821, 822, 825, 835, 851, 870, 910, 911, 912, 913, 914, 915, 916, 917, 920, 923, 924, 927, 929, 931, 932, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985, 986, 988, 989, 991, 995, 1001, 1004, 1006, 1009, 1011, 1017, 1020, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1071, 1072, 1073, 1074, 1098, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1121, 1123, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1209], "combin": [191, 192, 193, 194, 195, 372, 378, 380, 381, 384, 385, 396, 923, 929, 931], "arriv": [191, 192, 193, 194, 195], "timeout": [191, 192, 193, 194, 195, 510, 519, 520, 798, 853, 858], "limit": [191, 192, 193, 194, 195, 372, 378, 380, 391, 394, 396, 408, 473, 493, 496, 798, 810, 811, 813, 1011, 1012, 1015], "maximum": [191, 192, 193, 194, 195, 378, 391, 394, 396, 510, 534, 538, 542, 554, 560, 798, 810, 811, 813, 825, 872, 892, 894, 1011, 1012, 1015, 1075, 1087, 1110, 1111, 1135, 1140, 1143, 1148, 1151, 1177], "length": [191, 192, 193, 194, 195, 394, 434, 435, 453, 455, 923, 974, 976, 977, 979, 1011, 1041, 1044], "whitespac": [191, 192, 193, 194, 195], "indent": [191, 192, 193, 194, 195, 394], "extra": [191, 192, 193, 194, 195, 378, 383, 384, 391, 872, 883], "newlin": [191, 192, 193, 194, 195, 377], "handl": [191, 192, 193, 194, 195, 375, 380, 381, 383, 385, 386, 387, 388, 389, 395, 408, 431, 432, 510, 526, 527, 528, 529, 530, 544, 548, 549, 556, 559, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1214, 1215, 1216, 1217, 1218, 1219], "result": [191, 192, 193, 194, 195, 376, 377, 378, 380, 384, 385, 386, 388, 389, 394, 408, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 501, 510, 519, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 817, 820, 821, 822, 824, 826, 827, 830, 838, 851, 854, 855, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1075, 1088, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1123, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177], "color": [191, 192, 193, 194, 195, 1223, 1224], "termin": [191, 192, 193, 194, 195, 371, 372, 374, 385, 391, 394], "map": [191, 192, 193, 194, 195, 380, 381, 385, 389, 394, 407, 408, 510, 519, 1075, 1082, 1083, 1087, 1088, 1198, 1209], "termcolor": [191, 192, 193, 194, 195], "rebuild": [191, 192, 193, 194, 195], "found": [191, 192, 193, 194, 195, 371, 372, 377, 384, 385, 510, 544], "constructor": [191, 192, 193, 194, 195, 386, 387, 393, 798, 805, 1220, 1221], "param": [191, 192, 193, 194, 195, 196, 304, 340, 341, 391, 396, 798, 804, 826, 827, 830, 831], "kept": [191, 192, 193, 194, 195, 372, 388, 1071, 1072, 1073], "structur": [191, 192, 193, 194, 195, 374, 376, 381, 384, 385, 394, 395, 798, 814, 1075, 1088], "alphabet": [191, 192, 193, 194, 195], "preserv": [191, 192, 193, 194, 195, 396, 408, 872, 905, 1011, 1029, 1032], "__setitem__": [191, 192, 384, 385, 393], "val": [191, 192, 388, 393, 798, 840, 841, 842, 856, 857], "after": [191, 192, 378, 385, 386, 390, 473, 505, 560, 771, 774, 872, 879, 881, 883, 884, 886, 892, 894, 896, 898, 900, 902, 1093, 1094, 1097, 1214, 1215, 1216, 1217, 1218, 1219], "updat": [191, 192, 371, 372, 373, 374, 375, 378, 379, 383, 384, 385, 386, 389, 391, 393, 394, 396, 408, 510, 519, 798, 842, 854, 855, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 920, 1071, 1072, 1073, 1075, 1082, 1083, 1091, 1092, 1187, 1188, 1214, 1215, 1216, 1217, 1218, 1219], "all_fals": [191, 192], "assert_is_bool": [191, 192], "entri": [191, 192, 434, 451, 452, 1011, 1050, 1075, 1088], "boolean": [191, 192, 385, 434, 447, 473, 479, 497, 509, 510, 545, 557, 560, 599, 602, 603, 606, 611, 614, 619, 622, 712, 715, 716, 719, 720, 723, 724, 727, 798, 799, 802, 806, 807, 837, 838, 839, 843, 844, 845, 846, 847, 864, 871, 872, 888, 890, 1071, 1072, 1073, 1075, 1085, 1135, 1148, 1151], "evalu": [191, 192, 385, 560, 648, 652, 655, 692, 695, 696, 699, 700, 703, 704, 707, 735, 738, 759, 762, 775, 778, 1075, 1076, 1085, 1086, 1168, 1169, 1172, 1173, 1176], "assert": [191, 192, 393, 394, 798, 808], "skip": [191, 192, 374, 380, 1075, 1088], "prune": [191, 192, 1075, 1088, 1089, 1090], "all_key_chain": [191, 192], "include_empti": [191, 192], "all_tru": [191, 192, 385, 394], "arrays_as_list": [191, 192], "intermedi": [191, 192], "as_arrai": [191, 192, 798, 835, 860], "as_bool": [191, 192], "as_on": [191, 192], "ones": [191, 192, 193, 194, 380, 391, 393, 394, 434, 443, 460, 462, 560, 623, 626, 798, 851, 1177], "sub": [191, 192, 372, 373, 375, 380, 385, 393, 394, 395, 510, 535, 536, 539, 540, 541, 542, 923, 935, 937, 1011, 1050, 1071, 1072, 1073, 1074, 1177], "fill": [191, 192, 434, 439, 447, 448, 450, 459, 460, 462, 469, 470, 472, 1098, 1100, 1101], "as_random_uniform": [191, 192], "low": [191, 192, 196, 276, 311, 312, 356, 357, 391, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107], "uniform": [191, 192, 395, 1098, 1099, 1100, 1101, 1104, 1106, 1189, 1191, 1192, 1195, 1196], "lower": [191, 192, 372, 378, 391, 408, 434, 443, 463, 465, 560, 728, 923, 924, 927, 1098, 1104, 1106], "boundari": [191, 192, 1098, 1104, 1106], "output": [191, 192, 371, 375, 376, 377, 378, 380, 381, 384, 385, 387, 388, 389, 391, 393, 395, 396, 408, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 510, 519, 520, 554, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 809, 810, 811, 813, 816, 817, 820, 821, 822, 824, 826, 827, 830, 838, 851, 854, 855, 872, 883, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1075, 1088, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1114, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209], "interv": [191, 192, 391, 396, 434, 435, 451, 452, 923, 986, 988, 1011, 1012, 1015, 1055, 1058, 1098, 1100, 1101, 1104, 1106, 1168, 1169, 1172, 1173, 1176], "as_vari": [191, 192], "as_zero": [191, 192], "assert_contains_sub_contain": [191, 192], "sub_cont": [191, 192], "partial": [191, 192, 372, 1210, 1211], "except": [191, 192, 377, 384, 388, 393, 408, 473, 481, 798, 808, 819, 842, 869, 923, 946, 964, 966, 1011, 1017, 1020, 1055, 1058, 1110, 1113, 1168, 1169, 1172, 1173, 1176], "diff": [191, 192, 385, 394], "screen": [191, 192, 394], "assert_contains_sub_structur": [191, 192], "check_shap": [191, 192], "assert_ident": [191, 192], "check_typ": [191, 192], "same_arrai": [191, 192, 394], "arrays_equ": [191, 192, 193, 194, 798], "datatyp": [191, 192, 434, 436, 438, 456, 458, 473, 487, 498, 499, 500], "exact": [191, 192, 372, 391, 1115, 1116], "assert_identical_structur": [191, 192], "at_key_chain": [191, 192], "ignore_key_error": [191, 192], "ignore_non": [191, 192], "at_kei": [191, 192], "ignor": [191, 192, 378, 408, 434, 453, 455, 1075, 1086, 1214, 1218], "substr": [191, 192], "access": [191, 192, 372, 374, 386], "clip_min": [191, 192], "clip_max": [191, 192], "minimum": [191, 192, 391, 396, 510, 560, 561, 564, 798, 833, 834, 856, 857, 862, 863, 1011, 1012, 1015, 1110, 1112, 1135, 1140, 1143, 1148, 1151, 1177], "config": [191, 192, 394, 1075, 1088], "right": [191, 192, 370, 371, 372, 375, 378, 394, 560, 607, 610, 615, 618, 923, 974], "duplic": [191, 192, 377, 382, 383, 393, 395], "compar": [191, 192, 380, 394, 798, 799, 802, 806, 807, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1128, 1130, 1133], "configur": [191, 192, 371, 372, 374, 386, 510, 553, 1075, 1088], "container_rightmost": [191, 192], "common_key_chain": [191, 192, 385], "across": [191, 192, 373, 378, 380, 381, 385, 386, 389, 510, 519, 520, 531, 532, 534, 535, 536, 537, 538, 542, 552, 553, 798, 806, 807, 1075, 1081, 1110, 1112], "properti": [191, 192, 378, 380, 381, 385, 393, 394, 395, 510, 522, 1210, 1211, 1214, 1215, 1216, 1217, 1219], "contains_sub_contain": [191, 192], "match": [191, 192, 385, 473, 479, 560, 751, 754, 798, 848], "contains_sub_structur": [191, 192], "create_if_abs": [191, 192], "inplac": [191, 192, 196, 201, 243, 250, 251, 271, 294, 305, 307, 308, 310, 342, 343, 375, 378, 383, 384, 389, 393, 395, 798, 808, 839, 842, 843, 864, 872, 879, 880, 881, 882, 884, 885, 886, 887, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 1187, 1188, 1214, 1215, 1216, 1217, 1218, 1219], "correspond": [191, 192, 193, 194, 196, 372, 377, 378, 379, 381, 384, 385, 386, 389, 473, 480, 560, 591, 594, 747, 750, 923, 929, 931, 938, 940, 971, 973, 1011, 1017, 1020, 1045, 1048, 1098, 1099, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1123, 1135, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "alreadi": [191, 192, 371, 372, 382, 385, 389, 393, 408, 510, 560, 623, 626, 656, 730, 733, 755, 758, 794, 797, 923, 961, 963, 1177], "noth": [191, 192, 372], "cutoff_at_depth": [191, 192], "depth_cutoff": [191, 192], "summari": [191, 192, 372, 473, 488, 489, 490, 502, 503, 504, 510, 523, 524, 798, 814, 818, 836, 872, 904, 909], "cutoff_at_height": [191, 192], "height_cutoff": [191, 192], "deep_copi": [191, 192, 394], "intern": [191, 192, 377, 384, 385, 387, 388, 510, 872, 908, 1075, 1076, 1085, 1086, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1220, 1221], "dev": [191, 192, 193, 195, 196, 210, 371, 381, 387, 391, 393, 395, 510, 519, 544], "belong": [191, 192, 395], "dev_clon": [191, 192, 510], "clone": [191, 192, 372, 374, 510, 531, 532, 533, 534], "dev_dist": [191, 192, 510], "distribut": [191, 192, 373, 387, 408, 510, 531, 535, 536, 537, 538, 910, 918, 995, 996, 999, 1001, 1004, 1006, 1009, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1198, 1206, 1210, 1211], "along": [191, 192, 376, 388, 434, 451, 452, 510, 535, 536, 537, 538, 539, 540, 541, 542, 554, 798, 816, 817, 826, 870, 923, 951, 953, 983, 985, 986, 988, 989, 991, 995, 1001, 1004, 1006, 1009, 1011, 1017, 1020, 1029, 1032, 1037, 1040, 1045, 1048, 1050, 1055, 1058, 1063, 1066, 1071, 1072, 1073, 1074, 1098, 1109, 1110, 1111, 1112, 1124, 1125, 1128, 1130, 1133, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "split": [191, 192, 370, 372, 390, 391, 408, 510, 519, 535, 536, 537, 538, 552, 553, 554, 798, 848, 1011, 1177], "dev_str": [191, 192], "diff_kei": [191, 192], "detect_key_diff": [191, 192], "detect_value_diff": [191, 192], "detect_shape_diff": [191, 192], "thei": [191, 192, 373, 375, 376, 378, 381, 383, 385, 386, 387, 388, 393, 394, 395, 396, 408, 473, 500, 1071, 1072, 1073, 1098, 1099, 1177, 1220, 1221], "treat": [191, 192, 392, 396, 431, 432], "detect": [191, 192, 389, 394, 395, 1075, 1076, 1086], "without": [191, 192, 372, 376, 381, 384, 385, 387, 389, 391, 393, 394, 395, 407, 408, 798, 853, 858, 1011, 1041, 1044, 1075, 1077, 1115, 1116, 1117, 1121, 1123], "flag": [191, 192, 372, 388, 393, 510, 529, 872, 888, 890], "container0": [191, 192], "einops_rearrang": [191, 192, 798], "axes_length": [191, 192, 798, 820, 821, 822], "rearrang": [191, 192, 798, 820, 822], "addit": [191, 192, 371, 372, 376, 377, 380, 385, 386, 393, 394, 396, 510, 555, 560, 574, 798, 820, 821, 822, 1093, 1094, 1097, 1198, 1208], "einops_reduc": [191, 192, 798], "reduct": [191, 192, 386, 393, 798, 821, 854, 855, 1168, 1169, 1172, 1173, 1176, 1177], "One": [191, 192, 386, 391, 393, 394, 798, 821, 1011, 1041, 1044, 1098, 1100, 1101], "callabl": [191, 192, 385, 391, 409, 410, 411, 412, 413, 414, 415, 416, 417, 431, 432, 473, 494, 495, 510, 554, 798, 804, 809, 819, 821, 1071, 1072, 1073, 1074, 1075, 1081, 1085, 1086, 1087], "einops_repeat": [191, 192, 798], "find_sub_contain": [191, 192], "sub_cont_to_find": [191, 192], "exsit": [191, 192], "find_sub_structur": [191, 192], "sub_struc_to_find": [191, 192], "flatten_key_chain": [191, 192, 394, 1210, 1211], "__": [191, 192, 378, 394], "above_height": [191, 192, 394], "below_depth": [191, 192, 394], "format_key_chain": [191, 192], "format_fn": [191, 192], "format": [191, 192, 374, 377, 386, 387, 391, 393, 394, 473, 491, 510, 530, 1135, 1136, 1139, 1163, 1177], "string": [191, 192, 382, 386, 387, 391, 394, 473, 477, 478, 491, 497, 509, 510, 526, 527, 528, 529, 543, 549, 555, 556, 559, 798, 818], "from_disk_as_hdf5": [191, 192, 394], "h5_obj_or_filepath": [191, 192], "slice_obj": [191, 192], "load": [191, 192, 408], "disk": [191, 192, 394], "h5py": [191, 192], "file": [191, 192, 371, 372, 374, 376, 377, 381, 382, 384, 385, 391, 394, 798, 859, 1210, 1211], "hdf5": [191, 192, 394, 1210, 1211], "filepath": [191, 192, 372], "h5": [191, 192], "from_disk_as_json": [191, 192, 394], "json_filepath": [191, 192], "json": [191, 192, 394], "were": [191, 192, 372, 376, 380, 385], "abl": [191, 192, 371, 372, 381, 386, 388, 393, 396], "dure": [191, 192, 381, 385, 386, 387, 388, 408, 431, 432, 510, 555, 798, 869, 872, 874, 877, 879, 881, 892, 894, 923, 947, 950, 1071, 1072, 1073, 1074, 1135, 1156, 1159, 1164, 1167, 1210, 1211, 1214, 1215, 1216, 1218], "from_disk_as_pickl": [191, 192, 394], "pickle_filepath": [191, 192], "pickl": [191, 192, 385, 394], "from_flat_list": [191, 192], "flat_list": [191, 192], "hierarchi": [191, 192, 394], "flat": [191, 192, 798, 854, 1011, 1037, 1040], "popul": [191, 192, 386, 387, 391, 1098, 1099, 1135, 1156, 1159, 1164, 1167], "from_numpi": [191, 192, 394], "gather": [191, 192, 798, 827, 830], "accord": [191, 192, 371, 374, 381, 386, 473, 482, 485, 493, 560, 574, 615, 618, 730, 733, 798, 826, 854, 855, 923, 986, 988, 1011, 1021, 1024, 1067, 1070, 1135, 1156, 1159, 1164, 1167], "h5_file_s": [191, 192], "content": [191, 192, 373, 374, 388, 391, 394], "batch": [191, 192, 381, 385, 394, 510, 552, 553, 798, 825, 910, 919, 923, 989, 991, 1071, 1072, 1073, 1074, 1093, 1094, 1097, 1212, 1213], "handle_inplac": [191, 192], "prime": [191, 192], "overwritten": [191, 192, 382, 384], "has_kei": [191, 192], "query_kei": [191, 192], "somewher": [191, 192], "has_key_chain": [191, 192], "has_nan": [191, 192, 798], "include_inf": [191, 192, 798, 837, 871], "leafwis": [191, 192], "nan": [191, 192, 376, 377, 433, 473, 479, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 623, 626, 627, 630, 631, 634, 648, 651, 652, 655, 656, 672, 675, 680, 683, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 798, 837, 871, 910, 922, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "well": [191, 192, 380, 388, 395, 396, 407, 798, 837, 923, 971, 973], "inf": [191, 192, 433, 798, 837, 871, 923, 989, 991], "wise": [191, 192, 391, 396, 419, 420, 421, 422, 423, 424, 425, 428, 430, 560, 561, 564, 566, 574, 577, 579, 582, 587, 591, 594, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 635, 638, 640, 643, 644, 647, 651, 659, 660, 663, 664, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 739, 742, 747, 750, 751, 754, 779, 783, 798, 824, 1011, 1012, 1015], "identical_array_shap": [191, 192], "exclus": [191, 192, 196, 246, 306, 342, 343, 381, 385, 396, 434, 435, 798, 816, 844, 845, 847, 872, 888, 889, 890, 891, 1098, 1100, 1101], "identical_config": [191, 192], "identical_structur": [191, 192], "if_exist": [191, 192], "inplace_upd": [191, 192, 388, 798, 1187, 1188], "key_chains_contain": [191, 192], "sub_str": [191, 192], "join": [191, 192, 1011, 1017, 1020, 1055, 1058, 1177], "list_stack": [191, 192, 394], "dim": [191, 192, 386, 798, 851, 1198, 1209], "func": [191, 192, 385, 431, 432, 510, 554, 798, 809, 872, 883, 1075, 1088], "map_cont": [191, 192], "include_self": [191, 192], "possibi": [191, 192], "place": [191, 192, 372, 375, 376, 377, 378, 380, 381, 385, 387, 389, 396, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 510, 555, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 798, 826, 840, 841, 842, 910, 913, 922, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172, 1214, 1215, 1216, 1217, 1218, 1219], "matrix": [191, 192, 434, 453, 455, 463, 465, 466, 468, 798, 799, 802, 810, 910, 919, 923, 924, 927, 932, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 951, 953, 954, 955, 957, 958, 960, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985, 992, 994, 1198, 1208], "p": [191, 192, 196, 226, 340, 341, 371, 372, 434, 453, 455, 798, 810, 811, 812, 813, 910, 918, 923, 951, 953, 989, 991, 1198, 1206], "integ": [191, 192, 385, 386, 393, 434, 435, 447, 473, 496, 499, 501, 560, 561, 564, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 638, 656, 659, 660, 663, 724, 727, 747, 750, 751, 754, 755, 758, 794, 797, 923, 954, 986, 988, 989, 991, 1011, 1050, 1098, 1100, 1101, 1108, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "flatten": [191, 192, 798, 825, 923, 961, 963, 989, 991, 1011, 1037, 1040, 1045, 1048, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1123], "left": [191, 192, 371, 372, 378, 386, 560, 607, 610, 923, 938, 940, 951, 953, 974, 1110, 1111, 1177], "broadcast": [191, 192, 376, 377, 378, 385, 386, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 480, 481, 510, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 820, 821, 822, 824, 827, 830, 838, 851, 854, 855, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1112, 1114, 1115, 1123, 1124, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "correctli": [191, 192, 371, 380, 385, 386, 389, 395, 408, 923, 951, 953, 1110, 1111], "max_depth": [191, 192, 510, 514, 517, 524, 534, 538, 542, 798, 836, 1075, 1087], "multi_map": [191, 192, 385], "map_nest": [191, 192, 196, 213, 216, 218, 219, 220, 221, 227, 234, 241, 244, 245, 253, 254, 259, 260, 262, 263, 264, 270, 274, 277, 291, 338, 339, 348, 349, 352, 353, 577, 591, 593, 599, 601, 607, 609, 611, 613, 615, 617, 619, 621, 638, 642, 643, 651, 659, 660, 662, 666, 667, 668, 670, 684, 686, 688, 690, 708, 710, 712, 714, 720, 722, 724, 726, 739, 741, 747, 749, 751, 753, 947, 949, 1017, 1019, 1055, 1057], "leftmost": [191, 192, 1075, 1088], "multi_map_in_static_method": [191, 192, 385], "fn_name": [191, 192], "num_arrai": [191, 192], "overwrite_at_key_chain": [191, 192], "overwrit": [191, 192, 388, 391, 510, 554], "target_dict": [191, 192], "return_dict": [191, 192], "prune_empti": [191, 192], "keep_non": [191, 192], "empti": [191, 192, 193, 194, 384, 386, 387, 434, 435, 1135, 1156, 1159, 1160, 1168, 1169, 1172, 1173, 1176], "prune_key_chain": [191, 192], "key1": [191, 192, 395], "key2": [191, 192], "key3": [191, 192], "prune_key_from_key_chain": [191, 192], "absolut": [191, 192, 370, 560, 561, 564, 923, 934, 970], "certain": [191, 192, 371, 408, 434, 435, 451, 452], "decid": [191, 192, 371, 1075, 1086], "remov": [191, 192, 372, 373, 374, 377, 380, 381, 386, 388, 396, 923, 935, 937, 947, 950, 983, 985, 1011, 1051, 1054, 1071, 1072, 1073], "prune_kei": [191, 192], "prune_keys_from_key_chain": [191, 192], "remove_key_length_limit": [191, 192], "remove_print_limit": [191, 192], "reshape_lik": [191, 192], "leading_shap": [191, 192], "return_cont": [191, 192], "restructur": [191, 192], "keep_orig": [191, 192], "transpos": [191, 192, 393, 396, 510, 541, 910, 912, 914, 916, 923, 946, 958, 960, 964, 966, 1177, 1198, 1200, 1202, 1204], "old": [191, 192, 371, 388], "keep": [191, 192, 371, 372, 379, 385, 392, 394, 396, 798, 870], "start": [191, 192, 370, 371, 372, 373, 374, 375, 377, 378, 386, 390, 391, 393, 394, 395, 407, 408, 434, 435, 451, 452, 510, 525], "restructure_key_chain": [191, 192], "keychain_map": [191, 192], "set_at_key_chain": [191, 192], "set_at_kei": [191, 192], "set_framework": [191, 192, 391, 393, 394, 396], "set_ivy_backend": [191, 192], "ivy_backend": [191, 192], "attribut": [191, 192, 377, 385, 386, 392, 393, 394, 395, 473, 493, 494, 495, 496, 510, 550], "show": [191, 192, 371, 372, 378, 388, 407, 408, 1177], "show_sub_contain": [191, 192], "sub_cont_or_keychain": [191, 192], "shuffl": [191, 192, 1098, 1177], "seed_valu": [191, 192, 1098, 1108], "align": [191, 192, 371, 391, 393, 1177, 1183], "seed": [191, 192, 193, 194, 1098, 1177], "shuffle_h5_fil": [191, 192], "dataset": [191, 192, 394, 406, 1177], "size_ordered_arrai": [191, 192], "keychain": [191, 192], "smallest": [191, 192, 473, 493, 496, 560, 623, 626], "largest": [191, 192, 407, 473, 493, 496, 923, 974], "slice_kei": [191, 192], "key_slic": [191, 192], "all_depth": [191, 192], "slice_via_kei": [191, 192], "sort_by_kei": [191, 192], "num_or_size_split": [191, 192, 391, 1011, 1050], "with_remaind": [191, 192, 1011, 1050], "constitu": [191, 192, 396], "dimension": [191, 192, 434, 435, 443, 453, 455, 923, 929, 931, 932, 946, 947, 950, 955, 957, 961, 963, 964, 966, 986, 988, 989, 991, 1011, 1050, 1110, 1111, 1112, 1113, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "evenli": [191, 192, 434, 435, 451, 452, 1011, 1050], "store": [191, 192, 377, 382, 384, 385, 391, 393, 394, 395, 798, 825, 872, 908, 923, 983, 985, 1011, 1050, 1210, 1211], "stop_gradi": [191, 192, 193, 194, 196, 201, 243, 250, 251, 271, 294, 305, 307, 308, 310, 342, 343, 395, 510, 554, 872, 879, 880, 881, 882, 884, 885, 886, 887, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 1071, 1072, 1073, 1074, 1177, 1214, 1215, 1216, 1217, 1218, 1219], "preserve_typ": [191, 192, 872, 905], "stop": [191, 192, 391, 408, 434, 435, 451, 452, 510, 525, 554, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 905, 1071, 1072, 1073, 1074, 1214, 1215, 1216, 1217, 1218, 1219], "alwai": [191, 192, 372, 373, 376, 377, 381, 382, 384, 385, 388, 389, 391, 393, 408, 473, 479, 560, 574, 730, 733, 798, 842, 872, 888, 890, 905], "structural_diff": [191, 192], "to_devic": [191, 192, 510, 529], "move": [191, 192, 372, 376, 510, 555], "cuda": [191, 192, 391, 394, 408, 434, 451, 452, 510, 519, 526, 551, 798, 826, 827, 830, 851, 854, 855, 1098, 1099, 1100, 1101, 1104, 1106, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "cpu": [191, 192, 372, 387, 408, 434, 451, 452, 510, 529, 530, 532, 546, 549, 551, 555, 556, 558, 559, 798, 826, 827, 830, 851, 854, 855, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1220, 1221], "target": [191, 192, 375, 390, 394, 395, 396, 510, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 1177], "to_dict": [191, 192], "to_disk_as_hdf5": [191, 192, 394], "starting_index": [191, 192], "max_batch_s": [191, 192], "read": [191, 192, 374, 1177], "r": [191, 192, 371, 798, 807, 870, 923, 967, 969, 992, 994], "w": [191, 192, 196, 294, 305, 307, 308, 310, 342, 343, 391, 394, 395, 798, 807, 872, 874, 877, 879, 881, 882, 884, 886, 887, 892, 894, 895, 896, 898, 899, 900, 902, 903, 910, 911, 912, 913, 914, 915, 916, 917], "later": [191, 192, 798, 809], "append": [191, 192, 374, 380, 391, 394, 560, 607, 610, 923, 935, 937, 947, 950], "to_disk_as_json": [191, 192, 394], "to_disk_as_pickl": [191, 192, 394], "to_flat_list": [191, 192], "to_iter": [191, 192, 385], "leaf_keys_onli": [191, 192], "to_iterator_kei": [191, 192], "to_iterator_valu": [191, 192], "to_json": [191, 192], "to_list": [191, 192, 798, 1177], "to_multi_dev": [191, 192], "multidevcontain": [191, 192, 193], "distributedarrai": [191, 192], "to_numpi": [191, 192, 394, 798, 1177], "update_backend": [191, 192], "to_raw": [191, 192], "raw": [191, 192, 377], "trim_kei": [191, 192], "max_length": [191, 192], "try_kc": [191, 192], "tri": [191, 192], "arbitrari": [191, 192, 380, 381, 385, 388, 389, 395, 408, 434, 453, 455, 473, 480, 501, 510, 539, 540, 542], "concatten": [191, 192, 510, 539, 540, 541, 542, 554], "unstack": [191, 192, 391, 394, 798, 1177], "dim_siz": [191, 192, 510], "update_config": [191, 192], "global_norm": [191, 192, 196, 226, 340, 341, 811, 812], "vector": [191, 192, 407, 434, 453, 455, 798, 811, 813, 910, 919, 923, 929, 931, 938, 940, 947, 950, 961, 963, 974, 976, 977, 979, 986, 988, 989, 991, 992, 994, 1198, 1208], "with_default_key_color": [191, 192], "with_entries_as_list": [191, 192], "with_ivy_backend": [191, 192], "with_key_length_limit": [191, 192, 394], "with_print_ind": [191, 192, 394], "with_print_limit": [191, 192, 394], "with_print_line_spac": [191, 192], "containerwithcr": [193, 194, 332], "containerwithdatatyp": [193, 194, 334], "containerwithdevic": [193, 194, 336], "containerwithelementwis": [193, 194, 338, 385], "containerwithgener": [193, 194, 340], "containerwithgradi": [193, 194, 342], "containerwithimag": [193, 194, 344], "containerwithlay": [193, 194, 346], "containerwithlinearalgebra": [193, 194, 348], "containerwithloss": [193, 194, 350], "containerwithmanipul": [193, 194, 352, 373], "containerwithnorm": [193, 194, 354], "containerwithrandom": [193, 194, 356], "containerwithsearch": [193, 194, 358], "containerwithset": [193, 194, 360], "containerwithsort": [193, 194, 362], "containerwithstatist": [193, 194, 364], "containerwithutil": [193, 194, 366], "__add__": [193, 194, 196, 377, 378, 384, 385, 389, 393], "special": [193, 194, 196, 373, 376, 377, 378, 384, 389, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 619, 622, 623, 626, 627, 630, 631, 634, 648, 651, 652, 655, 656, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1164, 1167], "__radd__": [193, 194, 196, 377, 378], "revers": [193, 194, 196, 373, 377, 378, 396, 408, 798, 819, 1011, 1029, 1032], "arang": [193, 194, 386, 434, 451, 452, 1135, 1136, 1139, 1163, 1177], "arg_info": [193, 194, 798], "arg_nam": [193, 194, 798], "argmax": [193, 194, 1110, 1177], "argmin": [193, 194, 1110, 1177], "array_equ": [193, 194, 798], "as_ivy_dev": [193, 194, 393, 510], "as_ivy_dtyp": [193, 194, 473], "as_native_dev": [193, 194, 510], "as_native_dtyp": [193, 194, 473], "assert_supports_inplac": [193, 194, 798], "astyp": [193, 194, 386, 388, 473], "broadcast_arrai": [193, 194, 473], "broadcast_to": [193, 194, 386, 473], "cache_fn": [193, 194, 381, 798], "clear_mem_on_dev": [193, 194, 510], "clip_matrix_norm": [193, 194, 798], "closest_valid_dtyp": [193, 194, 473], "container_typ": [193, 194, 798], "conv1d": [193, 194, 910, 1198], "conv1d_transpos": [193, 194, 910], "conv2d": [193, 194, 910, 1177, 1198], "conv2d_transpos": [193, 194, 910], "conv3d": [193, 194, 910, 1198], "conv3d_transpos": [193, 194, 910], "copy_arrai": [193, 194, 798], "cumprod": [193, 194, 396, 798], "cumsum": [193, 194, 798, 1177], "current_backend_str": [193, 194, 798], "default_devic": [193, 194, 387, 391, 510, 548, 551, 558], "default_dtyp": [193, 194, 381, 386, 473], "default_float_dtyp": [193, 194, 386, 473], "default_int_dtyp": [193, 194, 386, 473], "depthwise_conv2d": [193, 194, 910, 1177], "dev_clone_arrai": [193, 194, 510], "dev_clone_it": [193, 194, 510], "dev_clone_nest": [193, 194, 510], "dev_dist_arrai": [193, 194, 510], "dev_dist_it": [193, 194, 510], "dev_dist_nest": [193, 194, 510], "dev_unifi": [193, 194, 510], "dev_unify_arrai": [193, 194, 510], "dev_unify_it": [193, 194, 510], "dev_unify_nest": [193, 194, 510], "dev_util": [193, 194, 387, 510], "dropout": [193, 194, 394, 910, 1198, 1209], "dtype_bit": [193, 194, 473], "execute_with_gradi": [193, 194, 385, 394, 395, 396, 408, 872, 1177], "ey": [193, 194, 396, 434, 910, 913, 917], "finfo": [193, 194, 473], "floormod": [193, 194, 798, 1177], "fourier_encod": [193, 194, 798], "function_supported_dtyp": [193, 194, 473], "function_unsupported_dtyp": [193, 194, 473], "gelu": [193, 194, 419, 1184], "get_all_arrays_in_memori": [193, 194, 798], "get_all_ivy_arrays_on_dev": [193, 194, 387, 510], "get_min_bas": [193, 194, 798], "get_min_denomin": [193, 194, 798], "get_num_dim": [193, 194, 798, 1177], "get_referrers_recurs": [193, 194, 798], "gpu_is_avail": [193, 194, 510], "handle_nest": [193, 194, 381, 385, 409], "handle_out_argu": [193, 194, 383, 386, 387, 388, 389, 409], "iinfo": [193, 194, 473], "indices_wher": [193, 194, 798, 1177], "infer_devic": [193, 194, 386, 387, 389, 409], "infer_dtyp": [193, 194, 386, 387, 389, 409], "inplace_arrays_support": [193, 194, 798], "inplace_decr": [193, 194, 798], "inplace_incr": [193, 194, 798], "inplace_variables_support": [193, 194, 798], "inputs_to_native_arrai": [193, 194, 384, 409], "invalid_dtyp": [193, 194, 473], "is_float_dtyp": [193, 194, 473], "is_int_dtyp": [193, 194, 473, 798, 868], "is_ivy_contain": [193, 194, 798], "leaky_relu": [193, 194, 419, 1177], "linear": [193, 194, 377, 391, 394, 395, 396, 419, 420, 421, 422, 798, 825, 910, 918, 971, 973, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "linspac": [193, 194, 391, 434, 435, 1177], "logspac": [193, 194, 391, 434], "lstm_updat": [193, 194, 391, 910], "match_kwarg": [193, 194, 798], "matrix_pow": [193, 194, 923], "multi_head_attent": [193, 194, 385, 388, 910], "multinomi": [193, 194, 1098], "nonzero": [193, 194, 560, 574, 730, 733, 1110], "num_arrays_in_memori": [193, 194, 798], "num_cpu_cor": [193, 194, 387, 510], "num_gpu": [193, 194, 380, 387, 510], "num_ivy_arrays_on_dev": [193, 194, 510], "one_hot": [193, 194, 396, 798, 1177], "outputs_to_ivy_arrai": [193, 194, 384, 386, 387, 389, 409], "percent_used_mem_on_dev": [193, 194, 510], "print_all_arrays_in_memori": [193, 194, 798], "print_all_ivy_arrays_on_dev": [193, 194, 510], "promote_typ": [193, 194, 473], "randint": [193, 194, 196, 311, 356, 357, 1098, 1102, 1177], "random_norm": [193, 194, 910, 913, 916, 917, 923, 974, 1098, 1115, 1116], "result_typ": [193, 194, 386, 473], "scaled_dot_product_attent": [193, 194, 910], "scatter_flat": [193, 194, 798], "scatter_nd": [193, 194, 393, 798, 1177], "set_default_devic": [193, 194, 387, 510, 558], "set_default_dtyp": [193, 194, 381, 386, 473], "set_default_float_dtyp": [193, 194, 386, 473], "set_default_int_dtyp": [193, 194, 386, 473], "set_min_bas": [193, 194, 798], "set_min_denomin": [193, 194, 798], "set_queue_timeout": [193, 194, 798], "set_split_factor": [193, 194, 510], "set_tmp_dir": [193, 194, 798], "set_with_grad": [193, 194, 872], "shape_to_tupl": [193, 194, 386, 798], "sigmoid": [193, 194, 391, 394, 395, 419, 1177], "slogdet": [193, 194, 923, 934], "split_factor": [193, 194, 510, 519], "split_func_cal": [193, 194, 510], "stable_divid": [193, 194, 381, 798], "stable_pow": [193, 194, 798], "static_aco": [193, 194], "static_acosh": [193, 194], "static_al": [193, 194], "static_ani": [193, 194], "static_arang": [193, 194], "static_arg_info": [193, 194], "static_arg_nam": [193, 194], "static_argmax": [193, 194], "static_argmin": [193, 194], "static_arrai": [193, 194], "static_array_equ": [193, 194], "static_arrays_equ": [193, 194], "static_as_ivy_dev": [193, 194], "static_as_ivy_dtyp": [193, 194], "static_as_native_dev": [193, 194], "static_as_native_dtyp": [193, 194], "static_asarrai": [193, 194], "static_asin": [193, 194], "static_asinh": [193, 194], "static_assert_supports_inplac": [193, 194], "static_astyp": [193, 194], "static_atan": [193, 194], "static_atan2": [193, 194], "static_atanh": [193, 194], "static_bitwise_and": [193, 194], "static_bitwise_invert": [193, 194], "static_bitwise_left_shift": [193, 194], "static_bitwise_or": [193, 194], "static_bitwise_right_shift": [193, 194], "static_bitwise_xor": [193, 194], "static_broadcast_arrai": [193, 194], "static_broadcast_to": [193, 194], "static_cache_fn": [193, 194], "static_ceil": [193, 194], "static_clear_mem_on_dev": [193, 194], "static_clip_matrix_norm": [193, 194], "static_clip_vector_norm": [193, 194], "static_closest_valid_dtyp": [193, 194], "static_concat": [193, 194], "static_constant_pad": [193, 194], "static_container_typ": [193, 194], "static_conv1d": [193, 194], "static_conv1d_transpos": [193, 194], "static_conv2d": [193, 194], "static_conv2d_transpos": [193, 194], "static_conv3d": [193, 194], "static_conv3d_transpos": [193, 194], "static_copy_arrai": [193, 194], "static_co": [193, 194], "static_cosh": [193, 194], "static_cross": [193, 194], "static_cumprod": [193, 194], "static_cumsum": [193, 194], "static_current_backend": [193, 194], "static_current_backend_str": [193, 194], "static_default": [193, 194], "static_default_devic": [193, 194], "static_default_dtyp": [193, 194], "static_default_float_dtyp": [193, 194], "static_default_int_dtyp": [193, 194], "static_depthwise_conv2d": [193, 194], "static_det": [193, 194], "static_dev": [193, 194], "static_dev_clon": [193, 194], "static_dev_clone_arrai": [193, 194], "static_dev_clone_it": [193, 194], "static_dev_clone_nest": [193, 194], "static_dev_dist": [193, 194], "static_dev_dist_arrai": [193, 194], "static_dev_dist_it": [193, 194], "static_dev_dist_nest": [193, 194], "static_dev_unifi": [193, 194], "static_dev_unify_arrai": [193, 194], "static_dev_unify_it": [193, 194], "static_dev_unify_nest": [193, 194], "static_dev_util": [193, 194], "static_diagon": [193, 194], "static_dropout": [193, 194], "static_dtyp": [193, 194], "static_dtype_bit": [193, 194], "static_eigh": [193, 194], "static_eigvalsh": [193, 194], "static_einops_rearrang": [193, 194], "static_einops_reduc": [193, 194], "static_einops_repeat": [193, 194], "static_einsum": [193, 194], "static_empti": [193, 194], "static_empty_lik": [193, 194], "static_equ": [193, 194], "static_erf": [193, 194], "static_execute_with_gradi": [193, 194], "static_exist": [193, 194], "static_exp": [193, 194], "static_expand_dim": [193, 194], "static_expm1": [193, 194], "static_ey": [193, 194], "static_finfo": [193, 194], "static_flip": [193, 194], "static_floor": [193, 194], "static_floor_divid": [193, 194], "static_floormod": [193, 194], "static_fourier_encod": [193, 194], "static_from_dlpack": [193, 194], "static_ful": [193, 194], "static_full_lik": [193, 194], "static_function_supported_dtyp": [193, 194], "static_function_unsupported_dtyp": [193, 194], "static_gath": [193, 194], "static_gelu": [193, 194], "static_get_all_arrays_in_memori": [193, 194], "static_get_all_ivy_arrays_on_dev": [193, 194], "static_get_min_bas": [193, 194], "static_get_min_denomin": [193, 194], "static_get_num_dim": [193, 194], "static_get_referrers_recurs": [193, 194], "static_gpu_is_avail": [193, 194], "static_great": [193, 194], "static_greater_equ": [193, 194], "static_handle_nest": [193, 194], "static_handle_out_argu": [193, 194], "static_has_nan": [193, 194], "static_iinfo": [193, 194], "static_indices_wher": [193, 194], "static_infer_devic": [193, 194], "static_infer_dtyp": [193, 194], "static_inplace_arrays_support": [193, 194], "static_inplace_decr": [193, 194], "static_inplace_incr": [193, 194], "static_inplace_upd": [193, 194], "static_inplace_variables_support": [193, 194], "static_inputs_to_native_arrai": [193, 194], "static_inv": [193, 194], "static_invalid_dtyp": [193, 194], "static_is_arrai": [193, 194], "static_is_float_dtyp": [193, 194], "static_is_int_dtyp": [193, 194], "static_is_ivy_arrai": [193, 194], "static_is_ivy_contain": [193, 194], "static_is_native_arrai": [193, 194], "static_isfinit": [193, 194], "static_isinf": [193, 194], "static_isnan": [193, 194], "static_layer_norm": [193, 194], "static_leaky_relu": [193, 194], "static_less": [193, 194], "static_less_equ": [193, 194], "static_linear": [193, 194], "static_linspac": [193, 194], "static_log": [193, 194], "static_log10": [193, 194], "static_log1p": [193, 194], "static_log2": [193, 194], "static_logaddexp": [193, 194], "static_logical_and": [193, 194], "static_logical_not": [193, 194], "static_logical_or": [193, 194], "static_logical_xor": [193, 194], "static_logspac": [193, 194], "static_lstm_upd": [193, 194], "static_match_kwarg": [193, 194], "static_matmul": [193, 194], "static_matrix_norm": [193, 194], "static_matrix_pow": [193, 194], "static_matrix_rank": [193, 194], "static_matrix_transpos": [193, 194], "static_max": [193, 194], "static_maximum": [193, 194], "static_mean": [193, 194], "static_meshgrid": [193, 194], "static_min": [193, 194], "static_minimum": [193, 194], "static_multi_head_attent": [193, 194], "static_multinomi": [193, 194], "static_multiprocess": [193, 194], "static_native_arrai": [193, 194], "static_neg": [193, 194], "static_nonzero": [193, 194], "static_not_equ": [193, 194], "static_num_arrays_in_memori": [193, 194], "static_num_cpu_cor": [193, 194], "static_num_gpu": [193, 194], "static_num_ivy_arrays_on_dev": [193, 194], "static_one_hot": [193, 194], "static_on": [193, 194], "static_ones_lik": [193, 194], "static_out": [193, 194], "static_outputs_to_ivy_arrai": [193, 194], "static_percent_used_mem_on_dev": [193, 194], "static_permute_dim": [193, 194], "static_pinv": [193, 194], "static_posit": [193, 194], "static_pow": [193, 194], "static_print_all_arrays_in_memori": [193, 194], "static_print_all_ivy_arrays_on_dev": [193, 194], "static_prod": [193, 194], "static_promote_typ": [193, 194], "static_qr": [193, 194], "static_queue_timeout": [193, 194], "static_random_norm": [193, 194], "static_relu": [193, 194], "static_remaind": [193, 194], "static_repeat": [193, 194], "static_reshap": [193, 194], "static_result_typ": [193, 194], "static_round": [193, 194], "static_scaled_dot_product_attent": [193, 194], "static_scatter_flat": [193, 194], "static_scatter_nd": [193, 194], "static_se": [193, 194], "static_set_default_devic": [193, 194], "static_set_default_dtyp": [193, 194], "static_set_default_float_dtyp": [193, 194], "static_set_default_int_dtyp": [193, 194], "static_set_min_bas": [193, 194], "static_set_min_denomin": [193, 194], "static_set_queue_timeout": [193, 194], "static_set_split_factor": [193, 194], "static_set_tmp_dir": [193, 194], "static_set_with_grad": [193, 194], "static_shap": [193, 194], "static_shape_to_tupl": [193, 194], "static_shuffl": [193, 194], "static_sigmoid": [193, 194], "static_sign": [193, 194], "static_sin": [193, 194], "static_sinh": [193, 194], "static_slogdet": [193, 194], "static_softmax": [193, 194], "static_solv": [193, 194], "static_split": [193, 194], "static_split_factor": [193, 194], "static_split_func_cal": [193, 194], "static_sqrt": [193, 194], "static_squar": [193, 194], "static_squeez": [193, 194], "static_stable_divid": [193, 194], "static_stable_pow": [193, 194], "static_stack": [193, 194], "static_std": [193, 194], "static_stop_gradi": [193, 194], "static_sum": [193, 194], "static_supports_inplac": [193, 194], "static_svd": [193, 194], "static_svdv": [193, 194], "static_swapax": [193, 194], "static_tensordot": [193, 194], "static_til": [193, 194], "static_tmp_dir": [193, 194], "static_to_devic": [193, 194], "static_to_list": [193, 194], "static_to_native_arrays_and_back": [193, 194], "static_to_numpi": [193, 194], "static_to_scalar": [193, 194], "static_total_mem_on_dev": [193, 194], "static_tpu_is_avail": [193, 194], "static_trac": [193, 194], "static_tril": [193, 194], "static_triu": [193, 194], "static_trunc": [193, 194], "static_try_else_non": [193, 194], "static_type_promote_arrai": [193, 194], "static_unique_al": [193, 194], "static_unique_invers": [193, 194], "static_unique_valu": [193, 194], "static_unset_default_devic": [193, 194], "static_unset_default_dtyp": [193, 194], "static_unset_default_float_dtyp": [193, 194], "static_unset_default_int_dtyp": [193, 194], "static_unset_with_grad": [193, 194], "static_unstack": [193, 194], "static_used_mem_on_dev": [193, 194], "static_valid_dtyp": [193, 194], "static_value_is_nan": [193, 194], "static_var": [193, 194], "static_vari": [193, 194], "static_variable_data": [193, 194], "static_vecdot": [193, 194], "static_vector_norm": [193, 194], "static_vector_to_skew_symmetric_matrix": [193, 194], "static_wher": [193, 194], "static_with_grad": [193, 194], "static_zero_pad": [193, 194], "static_zero": [193, 194], "static_zeros_lik": [193, 194], "supports_inplac": [193, 194, 798], "tmp_dir": [193, 194, 798], "to_native_arrays_and_back": [193, 194, 383, 389, 409], "to_scalar": [193, 194, 798], "total_mem_on_dev": [193, 194, 387, 510], "tpu_is_avail": [193, 194, 510], "try_else_non": [193, 194, 798], "type_promote_arrai": [193, 194, 473], "unique_al": [193, 194, 1115], "unique_invers": [193, 194, 1115], "unique_valu": [193, 194, 1115], "unset_default_devic": [193, 194, 510], "unset_default_dtyp": [193, 194, 473], "unset_default_float_dtyp": [193, 194, 473], "unset_default_int_dtyp": [193, 194, 473], "unset_with_grad": [193, 194, 872], "used_mem_on_dev": [193, 194, 510], "valid_dtyp": [193, 194, 473], "value_is_nan": [193, 194, 798], "variable_data": [193, 194, 872], "with_grad": [193, 194, 872, 904], "at_dev": [193, 195, 196, 510, 523, 524], "container_method": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 425, 427, 429, 482, 484, 486, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 579, 581, 583, 585, 589, 590, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 625, 629, 630, 633, 634, 637, 638, 639, 642, 643, 644, 646, 650, 651, 652, 654, 658, 659, 660, 662, 666, 667, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 730, 732, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 780, 782, 785, 787, 788, 790, 792, 793, 794, 796, 799, 801, 803, 811, 812, 827, 829, 831, 874, 876, 878, 879, 880, 882, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 903, 924, 926, 928, 947, 949, 996, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1094, 1096, 1100, 1102, 1104, 1105, 1107, 1117, 1118, 1120, 1125, 1127, 1129, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1156, 1158, 1162, 1163, 1164, 1166, 1169, 1171, 1173, 1175], "adam_upd": [196, 342, 343, 395, 872], "lr": [196, 201, 243, 250, 251, 271, 294, 305, 307, 308, 310, 342, 343, 394, 395, 872, 879, 880, 881, 882, 884, 885, 886, 887, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 1214, 1215, 1216, 1217, 1218, 1219], "mw_tm1": [196, 201, 250, 294, 307, 342, 343, 872, 879, 880, 881, 882, 892, 893, 894, 895], "vw_tm1": [196, 201, 250, 294, 307, 342, 343, 872, 879, 880, 881, 882, 892, 893, 894, 895], "add_ivy_container_instance_method": [196, 368], "containerexampl": [196, 203, 368, 369], "static_all_equ": [196, 205, 340, 341, 799, 801], "int32": [196, 222, 299, 334, 335, 386, 473, 482, 484, 485, 486, 494, 798, 867, 1011, 1025, 1028, 1135, 1152, 1155, 1160], "int64": [196, 222, 299, 334, 335, 386, 473, 482, 484, 485, 486, 494, 560, 615, 618, 1110, 1111, 1112, 1135, 1152, 1155, 1160], "73": [196, 224, 300, 348, 349, 560, 771, 774, 923, 924, 926, 927, 928, 1093, 1094, 1097], "577": [196, 224, 300, 348, 349, 923, 924, 926, 927, 928], "41": [196, 224, 300, 348, 349, 393, 560, 619, 622, 771, 774, 923, 924, 926, 927, 928, 1135, 1160], "707": [196, 224, 300, 348, 349, 923, 924, 926, 927, 928], "clip_vector_norm": [196, 340, 341, 798], "max_norm": [196, 226, 340, 341, 798, 810, 811, 812, 813], "gradient_descent_upd": [196, 342, 343, 872, 1071, 1072, 1073, 1074, 1177], "is_vari": [196, 342, 343, 388, 872], "lamb_upd": [196, 342, 343, 872], "max_trust_ratio": [196, 250, 307, 342, 343, 872, 892, 893, 894, 895, 1214, 1216], "decay_lambda": [196, 250, 251, 307, 308, 342, 343, 872, 892, 893, 894, 895, 896, 897, 898, 899, 1214, 1216, 1217], "lars_upd": [196, 342, 343, 872], "optimizer_upd": [196, 342, 343, 872], "effective_grad": [196, 271, 310, 342, 343, 872, 900, 901, 902, 903], "random_uniform": [196, 356, 357, 387, 395, 1098, 1177], "static_ab": [196, 338, 339, 561], "static_adam_step": [196, 342, 343, 874], "87": [196, 293, 311, 342, 343, 356, 357, 872, 874, 877, 878, 1100, 1102], "976": [196, 293, 342, 343, 560, 789, 872, 874, 877, 878], "static_adam_upd": [196, 342, 343, 879], "static_add": [196, 338, 339, 377, 378, 385, 708], "static_argsort": [196, 362, 363, 1125], "static_binary_cross_entropi": [196, 350, 351, 996], "static_can_cast": [196, 334, 335, 482], "from_": [196, 299, 334, 335, 473, 482, 485, 486], "static_choleski": [196, 348, 349, 924], "static_rol": [196, 300, 301, 348, 349, 352, 353, 378, 385, 924, 928, 1012, 1016, 1045], "static_clip": [196, 352, 353, 1012], "static_cross_entropi": [196, 350, 351, 1001], "static_divid": [196, 338, 339, 385, 659, 660], "static_gather_nd": [196, 340, 341, 827], "static_gradient_descent_upd": [196, 342, 343, 884], "static_is_vari": [196, 342, 343, 888], "static_lamb_upd": [196, 342, 343, 892], "static_lars_upd": [196, 342, 343, 896], "static_multipli": [196, 338, 339, 385, 730], "static_optimizer_upd": [196, 342, 343, 900], "static_randint": [196, 356, 357, 1100], "20": [196, 311, 356, 357, 393, 560, 619, 622, 648, 755, 758, 771, 774, 923, 935, 937, 961, 963, 980, 982, 1098, 1100, 1101, 1102, 1110, 1113, 1114, 1135, 1136, 1139, 1163], "15": [196, 311, 356, 357, 371, 378, 560, 599, 602, 755, 758, 910, 913, 923, 935, 937, 961, 963, 980, 982, 1011, 1045, 1048, 1093, 1094, 1097, 1098, 1100, 1101, 1102, 1110, 1113, 1115, 1116, 1135, 1136, 1139, 1163], "16": [196, 311, 318, 325, 338, 339, 356, 357, 372, 378, 394, 560, 590, 595, 784, 785, 787, 793, 910, 916, 923, 935, 937, 961, 963, 1100, 1102, 1110, 1114, 1135, 1136, 1139, 1163], "12": [196, 311, 356, 357, 371, 378, 385, 560, 599, 602, 619, 622, 631, 755, 758, 798, 816, 834, 872, 874, 877, 923, 935, 937, 961, 963, 980, 982, 1011, 1029, 1032, 1037, 1040, 1045, 1048, 1093, 1094, 1097, 1098, 1100, 1101, 1102, 1110, 1114, 1115, 1116, 1135, 1136, 1139, 1163], "40": [196, 311, 356, 357, 560, 631, 771, 774, 923, 961, 963, 1100, 1102, 1135, 1136, 1139, 1163], "gpu": [196, 311, 356, 357, 372, 387, 393, 408, 510, 529, 532, 545, 547, 551, 553, 558, 1100, 1102], "62": [196, 311, 356, 357, 1100, 1102], "52": [196, 311, 356, 357, 872, 874, 877, 923, 961, 963, 1100, 1102, 1115, 1116, 1135, 1136, 1139, 1163], "95": [196, 311, 356, 357, 872, 874, 877, 1100, 1102], "37": [196, 311, 356, 357, 560, 784, 1093, 1094, 1097, 1100, 1102], "42": [196, 311, 356, 357, 396, 419, 425, 428, 872, 874, 877, 923, 961, 963, 1098, 1100, 1102, 1108, 1135, 1136, 1139, 1163], "14": [196, 311, 356, 357, 374, 378, 385, 560, 619, 622, 872, 874, 877, 910, 922, 923, 935, 937, 961, 963, 1100, 1102, 1115, 1116, 1135, 1136, 1139, 1163], "13": [196, 311, 356, 357, 378, 385, 560, 599, 602, 619, 622, 631, 771, 774, 798, 816, 872, 874, 877, 910, 922, 923, 935, 937, 961, 963, 1093, 1094, 1097, 1100, 1102, 1110, 1114, 1115, 1116, 1135, 1136, 1139, 1163], "static_random_uniform": [196, 356, 357, 1104], "static_sort": [196, 362, 363, 1130], "static_sparse_cross_entropi": [196, 350, 351, 1006], "static_subtract": [196, 338, 339, 385, 779], "static_tan": [196, 338, 339, 378, 385, 590, 595, 793], "143": [196, 318, 325, 338, 339, 378, 560, 590, 595, 784, 785, 787, 793], "38": [196, 318, 325, 338, 339, 378, 560, 590, 595, 784, 785, 787, 793], "static_tanh": [196, 338, 339, 595], "76": [196, 319, 338, 339, 560, 595, 631, 790, 872, 874, 877, 923, 980, 982, 1135, 1136, 1139, 1163], "96": [196, 319, 338, 339, 560, 595, 784, 790, 872, 874, 877, 923, 961, 963, 1135, 1136, 1139, 1163], "995": [196, 319, 326, 338, 339, 560, 590, 595, 789, 790, 792], "9999": [196, 319, 338, 339, 595, 790], "static_unique_count": [196, 360, 361, 1117], "classivi": [196, 320, 329, 360, 361, 1011, 1050, 1115, 1117, 1118, 1120, 1121], "strongli": [370, 371, 1177, 1183], "welcom": [370, 371, 372, 1177, 1183], "skill": 370, "vetern": 370, "beginn": 370, "aspect": [370, 394, 1177], "guid": [370, 371, 372, 380, 1177], "through": [370, 372, 373, 375, 378, 381, 382, 385, 390, 391, 393, 394, 395, 396, 407, 560, 591, 594], "journei": [370, 1177, 1183], "inclusvi": 370, "big": [370, 408], "team": [370, 371, 372], "board": 370, "contributor": [370, 371, 372, 390, 1177], "section": [370, 372, 373, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 1115, 1116, 1117, 1121, 1123], "below": [370, 371, 373, 374, 375, 376, 378, 381, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 407, 434, 463, 465, 466, 468, 560, 599, 602, 619, 622, 631, 755, 758, 789, 923, 932, 935, 937, 983, 985, 1011, 1025, 1028, 1029, 1032, 1115, 1116, 1124, 1125, 1128, 1177], "best": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 798, 848], "go": [370, 371, 372, 373, 375, 376, 378, 385, 390, 394, 408, 1075, 1086], "finish": [370, 371, 375, 1177], "dive": [370, 372, 373, 390, 393, 394, 408, 1177], "environ": [370, 372, 374, 407], "basic": [370, 373, 374], "fork": [370, 371, 798, 849], "doc": [370, 373, 377, 389, 391, 394, 395, 1177], "document": [370, 372, 392, 394, 396], "local": [370, 371, 374, 381], "task": [370, 372, 407, 1071, 1072, 1073, 1074, 1177], "help": [370, 371, 378, 382, 384, 385, 393, 394, 395, 406, 798, 804, 1135, 1160, 1177], "video": [370, 372, 377, 378, 389], "realli": [371, 385, 408], "contribut": [371, 372, 373, 391, 1183], "toward": [371, 391, 1011, 1045, 1048, 1177, 1183], "page": [371, 372, 392, 396, 406, 1177, 1183], "explain": [371, 372, 373, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 1177, 1183], "main": [371, 374, 383, 385, 434, 443, 463, 465, 466, 468, 923, 935, 937, 983, 985], "prefer": [371, 385], "git": [371, 372], "submodul": [371, 372, 373, 374, 379, 380, 381, 387, 390, 391, 395, 1177, 1212, 1213, 1220, 1221], "com": 371, "unifyai": [371, 374], "http": [371, 377, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 872, 874, 877, 879, 881, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143], "gh": 371, "your_fold": 371, "id": [371, 384, 385, 510, 529, 1210, 1211], "cours": [371, 372, 378, 394, 408], "whatev": [371, 408], "integr": [371, 380, 473, 479], "familiar": [371, 373], "sure": [371, 373, 379], "elig": 371, "free": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 407, 1177], "student": 371, "licenc": 371, "peopl": [371, 372, 375], "seem": [371, 395, 408], "miss": [371, 378, 380, 384, 385, 1214, 1218], "explicit": [371, 374, 385, 386, 388, 391, 408], "remind": 371, "channel": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 798, 825, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208], "pace": 371, "suggest": [371, 372, 376], "latest": [371, 373, 374, 377, 408, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1198, 1207], "packag": [371, 374, 408], "ensur": [371, 372, 380, 384, 386, 389, 798, 842], "pypi": [371, 373, 408], "person": [371, 372], "experi": [371, 392, 394, 408], "avoid": [371, 372, 380, 382, 383, 385, 393, 510, 560, 652, 655], "pip": [371, 407, 1177], "instal": [371, 374, 407, 1177], "abil": [371, 392, 408], "perhap": [371, 393, 394, 395, 408], "track": [371, 372, 510, 1075, 1087, 1210, 1211], "run": [371, 374, 379, 380, 382, 389, 391, 392, 393, 394, 395, 396, 407, 408, 510, 519, 872, 874, 877, 879, 881, 892, 894, 1071, 1072, 1073, 1074, 1198, 1209, 1210, 1211], "command": [371, 374, 1177], "ivy_dev": [371, 372, 374], "name": [371, 372, 374, 377, 380, 391, 393, 394, 396, 431, 432, 798, 804, 923, 938, 940, 967, 969, 974, 1115, 1116, 1117, 1121], "setup": 371, "click": [371, 372, 377, 1177], "icon": [371, 372], "side": [371, 372], "choos": [371, 372, 396, 510, 555, 560, 716, 719, 720, 723, 1110, 1114, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151], "panel": 371, "select": [371, 372, 380, 391, 393, 396, 408], "drop": [371, 408], "down": [371, 393], "path": [371, 374], "manual": [371, 372, 380, 395, 1075, 1076, 1085, 1086], "builtin": [371, 374, 393, 395], "requir": [371, 374, 376, 377, 378, 380, 383, 384, 386, 387, 389, 393, 408, 431, 432, 560, 771, 774, 923, 938, 940, 1011, 1055, 1058, 1187, 1188], "cmd": [371, 374], "directori": [371, 372, 374, 798, 859], "folder": [371, 372, 374, 376, 379, 380, 381], "abov": [371, 372, 374, 377, 378, 381, 382, 384, 385, 388, 389, 393, 394, 395, 396, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 730, 733, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 798, 826, 910, 913, 922, 923, 932, 935, 937, 938, 940, 983, 985, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1098, 1100, 1101, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1152, 1155, 1156, 1159, 1160, 1168, 1169, 1172], "m": [371, 372, 374, 375, 391, 434, 453, 455, 463, 465, 466, 468, 798, 807, 923, 924, 927, 932, 935, 937, 938, 940, 941, 943, 944, 946, 947, 950, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985, 1098, 1103, 1104, 1106], "python3": [371, 374], "script": [371, 372, 374, 378, 391, 408], "bat": [371, 372, 374], "OR": [371, 372, 374, 560, 611, 614, 720, 723, 1168, 1173, 1176], "bin": [371, 372, 374], "mac": [371, 372, 374], "linux": [371, 372, 374], "virtualenv": 371, "os": 371, "note": [371, 372, 376, 377, 378, 385, 560, 751, 754, 923, 938, 940, 974, 1011, 1055, 1058, 1115, 1117, 1121, 1135, 1144, 1147], "tick": [371, 372], "To": [371, 378, 381, 385, 394, 395, 396, 1177], "ivy_test": [371, 372], "test_array_api": [371, 372, 379, 380], "cd": [371, 372, 374], "txt": 371, "visual": [371, 408], "jetbrain": 371, "remot": 371, "mitig": 371, "potenti": [371, 390, 560, 652, 655], "conflict": [371, 372, 394], "yet": [371, 373, 385], "particular": [371, 372, 376, 388, 560, 561, 564], "system": [371, 408, 923, 971, 973], "instruct": [371, 373], "desktop": 371, "wsl": 371, "powershel": 371, "admin": 371, "visit": 371, "link": 371, "profession": 371, "execut": [371, 374, 385, 388, 391, 393, 396, 408, 798, 869], "deploy": 371, "top": [371, 372, 380, 394, 395, 1177], "press": [371, 394, 1177], "ok": 371, "caus": [371, 372, 378, 380, 385, 388, 408], "earlier": [371, 372], "might": [371, 372, 376, 380, 383, 391, 393, 394, 798, 819], "necessari": [371, 378, 382, 385, 388], "virtualis": 371, "detail": [371, 372, 373, 376, 379, 380, 381, 382, 383, 385, 389, 394, 395, 434, 444, 446, 1115, 1116, 1117, 1121, 1123], "sudo": 371, "apt": 371, "ca": 371, "certif": 371, "curl": 371, "gnupg": 371, "lsb": 371, "mkdir": 371, "keyr": 371, "fssl": 371, "download": [371, 380], "gpg": 371, "dearmor": 371, "o": [371, 391, 798, 807], "echo": 371, "deb": 371, "arch": 371, "dpkg": 371, "architectur": [371, 396, 408], "lsb_releas": 371, "cs": 371, "tee": 371, "null": 371, "ce": 371, "cli": 371, "containerd": 371, "io": 371, "compos": [371, 385, 408], "plugin": 371, "systemctl": 371, "permiss": 371, "relat": [371, 372, 407, 510], "post": [371, 396, 1093, 1094, 1097, 1177, 1183], "It": [371, 372, 374, 375, 376, 377, 378, 382, 384, 385, 388, 391, 393, 394, 395, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 479, 481, 510, 555, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 644, 647, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 729, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 816, 820, 821, 822, 824, 827, 830, 838, 851, 854, 855, 872, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 929, 931, 932, 934, 935, 937, 941, 943, 944, 946, 947, 950, 951, 953, 955, 957, 958, 960, 961, 963, 964, 966, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 991, 992, 994, 995, 996, 999, 1001, 1004, 1006, 1009, 1011, 1012, 1015, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1109, 1110, 1111, 1114, 1115, 1123, 1124, 1125, 1128, 1130, 1133, 1168, 1169, 1172, 1173, 1176], "headach": 371, "arm": [371, 372], "m1": 371, "instead": [371, 372, 373, 377, 378, 380, 381, 385, 388, 389, 391, 393, 394, 408], "featur": [371, 376, 389, 394, 1177], "vm": 371, "azur": 371, "cloud": [371, 407], "defin": [371, 373, 376, 377, 386, 389, 393, 395, 408, 560, 730, 733, 751, 754, 798, 851, 923, 929, 931, 938, 940, 971, 973, 1098, 1100, 1101, 1135, 1140, 1143, 1144, 1147, 1148, 1151], "dockerfil": [371, 374], "longer": [371, 386, 388], "worri": 371, "platform": 371, "agnost": [371, 384, 389, 391, 393, 396, 408, 1177], "usual": 371, "studio": 371, "favourit": 371, "extens": [371, 372, 377, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 688, 691, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172], "theme": 371, "too": [371, 372, 408, 560, 574, 730, 733], "done": [371, 372, 378, 380, 394], "unsupport": [371, 386, 473, 494, 495], "slow": 371, "ipad": 371, "long": [371, 372, 378, 910, 920], "browser": 371, "cool": [371, 376], "requisit": 371, "head": [371, 385, 910, 921, 1177, 1198, 1209], "pane": [371, 372], "readi": [371, 373], "begin": [371, 1075, 1076, 1086], "outlin": [371, 372, 373, 375, 377, 380, 381, 385, 388, 393], "dropdown": 371, "tab": [371, 394, 1177], "master": [371, 372, 385], "vs": 371, "view": [371, 372, 434, 444, 446, 910, 913, 917], "built": [371, 392, 434, 435, 510, 1198, 1209, 1210, 1211], "bottom": 371, "box": 371, "patient": 371, "upto": 371, "minut": 371, "launch": 371, "That": [371, 372, 393, 394, 395, 560, 751, 754], "refer": [371, 372, 380, 381, 386, 389, 408, 434, 443, 560, 652, 655, 700, 703, 872, 874, 877, 879, 881, 923, 986, 988, 992, 994, 1135, 1156, 1159, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1198, 1208], "approach": [371, 372, 380, 381, 385, 393, 394, 408], "colour": 371, "applic": [371, 386, 387, 395, 910, 921, 922, 1075, 1081, 1087], "good": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 395], "chanc": 371, "vscode": 371, "explor": [371, 392, 396, 407], "troubleshoot": 371, "sometim": [371, 372], "ever": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "64": [371, 394, 395, 560, 771, 774, 775, 778, 910, 916, 917, 923, 961, 963, 1135, 1136, 1139, 1163, 1177, 1198, 1209], "bit": [371, 378, 381, 385, 393, 473, 492, 493, 496, 560, 603, 606, 607, 610, 615, 618, 1135, 1152, 1155, 1160], "usr": 371, "more": [371, 372, 373, 375, 376, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 407, 408, 434, 435, 473, 480, 560, 652, 655, 923, 947, 950, 1011, 1029, 1032, 1115, 1116, 1117, 1121, 1123, 1177], "nutshel": [371, 389], "hook": 371, "lint": 371, "fix": [371, 372], "fail": [371, 373, 379, 380, 391, 393], "attempt": [371, 408], "succe": 371, "problemat": 371, "proce": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "modifi": [371, 372, 377, 381, 386, 387, 391], "properli": [371, 375], "enter": [371, 372, 384, 386, 387, 389, 510], "unsur": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "feel": [371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 1177], "server": [372, 1177], "context": [372, 378, 385, 386, 387, 510, 798, 849, 910, 921, 1198, 1209], "suitabl": [372, 376, 385], "quick": [372, 375, 395], "tendenc": 372, "land": 372, "end": [372, 385, 388, 390, 407, 408, 434, 435, 560, 591, 594, 1177, 1183], "world": 372, "come": [372, 373, 395, 406, 1177, 1183], "fly": 372, "hard": [372, 393], "receiv": [372, 380, 386, 387, 510, 519, 520, 798, 805, 848, 1198, 1208], "respons": [372, 374], "internship": 372, "comment": 372, "trigger": 372, "unansw": 372, "label": [372, 391, 392, 396, 995, 996, 999, 1001, 1004, 1006, 1009], "respond": 372, "someon": [372, 408], "els": [372, 373, 376, 381, 382, 388, 391, 393, 395, 396, 408, 798, 808, 819, 823, 1075, 1085], "strive": [372, 408], "repli": 372, "newli": [372, 388, 431, 432, 473, 479, 798, 809], "bug": [372, 380], "serv": [372, 380, 381, 384, 385, 389, 390, 1177], "suspect": 372, "behaviour": [372, 377, 380, 384, 385, 388, 389, 393], "observ": 372, "confid": 372, "wrong": 372, "someth": [372, 376, 394, 395, 408], "bet": 372, "act": [372, 378, 408], "placehold": [372, 384, 389, 1075, 1087], "mark": [372, 380], "ii": [372, 1135, 1136, 1139, 1163], "iii": 372, "titl": [372, 1177], "issue_numb": 372, "delet": [372, 374], "No": [372, 391], "progress": [372, 385, 392, 396], "pr": 372, "soon": [372, 385, 406, 408, 1177, 1183], "solut": [372, 380, 385, 923, 971, 973], "review": [372, 376], "merg": 372, "everi": [372, 373, 374, 378, 379, 380, 381, 382, 383, 385, 388, 389, 391, 393, 395, 434, 447, 448, 450, 798, 799, 802], "dai": 372, "close": [372, 377, 560, 652, 655, 755, 758, 923, 974], "likewis": [372, 377, 381, 385, 386, 389, 394], "freed": 372, "purpos": [372, 374, 378, 380, 381, 383, 384, 385, 389, 390, 393, 560, 652, 655, 1177], "remain": [372, 378, 408, 560, 574, 730, 733, 751, 754, 1011, 1041, 1044, 1075, 1081], "short": [372, 395, 910, 920], "basi": [372, 379, 394], "situat": [372, 396], "alloc": [372, 408, 434, 463, 465, 466, 468, 473, 479, 510], "upon": [372, 378, 380, 388, 408], "period": 372, "prevent": [372, 388, 393, 872, 874, 877, 879, 881, 892, 894, 1135, 1160, 1214, 1215, 1216], "unabl": 372, "obvious": 372, "never": [372, 385], "reflect": [372, 384], "qualiti": 372, "hypothet": 372, "frustrat": 372, "delai": 372, "busi": 372, "fine": [372, 393, 396], "becaus": [372, 377, 380, 381, 382, 384, 386, 387, 388, 389, 391, 395, 396, 408], "inact": 372, "me": 372, "unfairli": 372, "definit": [372, 381, 386, 393, 923, 924, 927, 929, 931], "investig": 372, "Then": [372, 374, 393, 408], "practic": [372, 380], "separ": [372, 380, 384, 391, 393, 394], "branch": [372, 385, 408, 431, 432, 560, 591, 594], "role": [372, 392], "date": 372, "upstream": [372, 379], "complic": [372, 391], "root": [372, 374, 394, 560, 771, 774, 1098, 1099, 1103], "merge_with_upstream": 372, "sh": 372, "name_of_your_branch": 372, "resolv": [372, 1135, 1152, 1155, 1160], "push": [372, 379], "both": [372, 377, 378, 381, 385, 387, 388, 389, 391, 393, 394, 395, 396, 407, 408, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 500, 560, 561, 564, 574, 579, 582, 623, 626, 656, 739, 742, 747, 750, 771, 774, 775, 778, 784, 798, 826, 872, 874, 877, 910, 913, 922, 923, 929, 931, 935, 937, 947, 950, 986, 988, 1011, 1045, 1048, 1093, 1094, 1097, 1115, 1117, 1121, 1135, 1140, 1143, 1168, 1169, 1172], "abort": 372, "tediou": 372, "resolut": 372, "stash": 372, "reinstat": 372, "fetch": 372, "uncommit": 372, "unstag": 372, "untrack": 372, "comprehens": 372, "explan": [372, 377, 385, 389, 393], "atlassian": 372, "tutori": 372, "wrote": 372, "piec": [372, 381, 383, 384, 391], "inform": [372, 473, 493, 496, 798, 804, 872, 905], "tag": 372, "usu": 372, "describ": [372, 392, 396, 1135, 1136, 1139, 1152, 1155, 1156, 1159, 1160, 1163], "navig": [372, 375], "blame": 372, "revis": 372, "author": [372, 1177], "eg": 372, "past": 372, "l": [372, 375, 923, 924, 927, 938, 940, 947, 950, 983, 985], "grep": 372, "v": [372, 391, 394, 395, 396, 910, 922, 1177, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1220, 1221], "commit_id": 372, "handi": 372, "histori": 372, "toggl": 372, "vertic": 372, "highlight": [372, 378], "previou": [372, 380, 389, 396, 408, 872, 879, 881, 892, 894], "whenev": [372, 393, 394], "think": [372, 378], "interact": [372, 1177], "gain": [372, 390, 395, 1189], "quit": [372, 373, 377, 381, 383, 384], "yourself": [372, 373, 407], "simpler": [372, 393], "cannot": [372, 382, 386, 396], "least": [372, 378, 381, 384, 923, 947, 950], "final": [372, 377, 378, 381, 384, 386, 388, 391, 393, 394, 434, 451, 452, 798, 825, 1198, 1209], "tickbox": 372, "corner": 372, "span": 372, "intent": [372, 388], "larg": [372, 394, 560, 574, 730, 733], "discourag": 372, "philosophi": 372, "increment": [372, 798, 841], "frequent": [372, 373], "valuabl": 372, "infrequ": 372, "earli": [372, 1177], "wast": 372, "spot": [372, 381], "mistak": 372, "propos": 372, "mountain": 372, "advoc": [372, 408], "individu": [372, 373, 381], "per": [372, 394, 510, 910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "style": [372, 1110, 1113], "ve": [372, 390, 393, 1098, 1099, 1177], "actual": [372, 375, 381, 388, 390, 393, 395, 408], "aim": [372, 390], "part": [372, 376, 379, 380, 381, 391, 392, 396, 407, 408, 434, 463, 465, 466, 468, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1210, 1211], "subsect": 372, "session": [372, 1177], "block": [372, 381, 390, 392, 396, 408, 510, 1177], "smaller": [372, 391, 396, 1011, 1012, 1015, 1045, 1048, 1135, 1152, 1155, 1160], "edit": 372, "beauti": 372, "particularli": [372, 394, 408], "concern": [372, 375, 378, 385, 388, 390], "effici": [372, 380, 381, 385, 388, 389, 391, 394, 408], "difficult": [372, 380, 408, 1115, 1116, 1117, 1121, 1123], "undo": 372, "stress": 372, "frequenc": [372, 798, 825], "pycharm": 372, "pytest": [372, 380], "button": 372, "declar": 372, "insid": [372, 374, 376, 386], "exec": 372, "rm": 372, "rf": 372, "cp": 372, "ivy_contain": 372, "bash": [372, 374], "test_ivi": [372, 380], "test_funct": 372, "test_cor": 372, "test_imag": 372, "test_random_crop": 372, "header": 372, "q": [372, 408, 910, 922, 923, 938, 940, 967, 969], "array_api_test": 372, "test_creation_funct": 372, "test_arang": 372, "window": [372, 374, 910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "variou": [372, 377, 383, 389, 407], "wherebi": [373, 385, 1075, 1087], "broad": 373, "todo": [373, 380], "commit": [373, 380], "NOT": [373, 560, 716, 719], "resourc": 373, "hypothesi": 373, "cover": [373, 377, 378, 381, 383, 390], "lambda": [373, 391, 394, 1214, 1217, 1219], "direct": [373, 395, 396, 407, 1124, 1130, 1133], "bind": [373, 385], "aforement": 373, "categori": [373, 376, 384, 385, 386, 390, 1177], "parent": [373, 393], "hint": [373, 376, 377, 381, 384, 388, 389, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 798, 826, 910, 913, 922, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172], "its": [373, 374, 377, 473, 480, 510, 554, 923, 947, 950, 1011, 1025, 1028, 1041, 1044, 1045, 1048, 1059, 1062], "thorough": [373, 377, 380, 389], "transpil": [373, 390, 392, 1177, 1183], "builder": [374, 406, 408, 1177], "maco": 374, "ubuntu": 374, "uid": 374, "make_docs_without_dock": 374, "rel": [374, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 923, 935, 937, 946, 955, 957, 964, 966, 983, 985, 1011, 1029, 1032, 1045, 1048, 1124, 1125, 1128, 1130, 1133, 1177], "synchron": 374, "rest": [374, 392, 396], "remove_doc": 374, "_": [374, 377, 385, 388, 393, 394, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 872, 874, 877, 879, 881, 923, 935, 937, 992, 994, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1124, 1125, 1128, 1135, 1140, 1143], "privat": [374, 1214, 1218], "fulfil": [374, 390, 1177], "autogenerated_sourc": 374, "png": [374, 394], "_imag": 374, "lastli": 374, "rst": 374, "partial_sourc": 374, "conf": 374, "create_rst_fil": 374, "filter": [374, 910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "repres": [374, 393, 434, 453, 455, 473, 492, 560, 569, 570, 573, 574, 583, 586, 590, 595, 598, 630, 631, 634, 730, 733, 767, 770, 788, 789, 793, 910, 919, 923, 934, 970, 971, 973], "overal": [374, 377, 385, 386, 387, 396], "markup": 374, "extract": [374, 376], "get_functions_and_class": 374, "doctr": 374, "readm": [374, 408], "module_nam": 374, "copy_readme_to_rst": 374, "tabl": 374, "toc": 374, "tree": 374, "append_toctree_to_rst": 374, "create_index_rst": 374, "\u03c0": [374, 560, 566, 579, 582, 587, 591, 594], "namespac": [374, 376, 386, 391, 396], "who": [375, 390, 408], "mainli": [375, 392, 394], "under": [375, 377, 378, 379, 380, 381, 385, 390, 391, 394, 396], "hood": [375, 378, 380, 381, 385, 390, 391, 394, 396], "weed": [375, 390], "behind": [375, 390, 392, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902], "tour": 375, "primari": [375, 380, 382, 388, 408], "composit": [375, 380, 382, 384, 385, 388, 391, 395, 396, 408], "nestabl": [375, 377, 378, 380, 388, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 623, 626, 656, 739, 742, 771, 774, 775, 778, 784, 798, 826, 910, 913, 922, 923, 935, 937, 1011, 1045, 1048, 1093, 1094, 1097, 1115, 1117, 1121, 1135, 1140, 1143, 1168, 1169, 1172], "dynam": [375, 386, 387, 388, 391, 431, 432], "runtim": [375, 380, 510], "h": [375, 385, 910, 913, 914, 915, 916, 917], "j": [375, 798, 806, 807, 923, 983, 985, 1135, 1136, 1139, 1163], "borrow": 375, "n": [375, 434, 453, 455, 463, 465, 466, 468, 798, 807, 910, 918, 923, 935, 937, 946, 947, 950, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 974, 976, 977, 979, 983, 985, 986, 988, 989, 991, 992, 994, 1011, 1021, 1024, 1025, 1028, 1033, 1036, 1055, 1058, 1067, 1070, 1098, 1103, 1104, 1106, 1110, 1113, 1135, 1144, 1147, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "taken": [376, 396, 923, 935, 937], "constant": [376, 381, 395, 396, 408, 510, 519, 520, 1011, 1021, 1024, 1075, 1081, 1093, 1094, 1097, 1189, 1190, 1194, 1197, 1210, 1211, 1212, 1213], "compil": [376, 385, 390, 392, 408, 1177, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1219], "meta": [376, 384, 1072, 1073, 1074], "overlap": 376, "sever": [376, 408, 923, 944], "judgement": 376, "locat": [376, 380, 382, 387, 1098, 1099], "some_namespac": 376, "some_backend": 376, "another_backend": 376, "break": [376, 389, 393, 408, 1177], "anyth": [376, 1177], "refactor": 376, "ongo": 376, "subfold": [376, 380], "via": [376, 385, 386, 387, 388, 391, 393, 394, 407, 1075, 1076, 1085, 1086], "file_nam": 376, "my_func": [376, 378], "int": [376, 378, 381, 385, 386, 387, 388, 389, 396, 419, 424, 431, 432, 434, 439, 443, 447, 448, 450, 451, 452, 459, 463, 465, 466, 468, 469, 473, 481, 490, 492, 493, 496, 499, 510, 532, 535, 536, 537, 538, 546, 547, 548, 554, 555, 560, 599, 602, 603, 606, 607, 610, 611, 614, 615, 618, 619, 622, 798, 804, 816, 817, 820, 821, 822, 825, 826, 835, 851, 854, 855, 860, 861, 870, 872, 874, 877, 879, 881, 892, 894, 910, 911, 913, 915, 916, 917, 923, 929, 931, 935, 937, 980, 982, 983, 985, 986, 988, 989, 991, 995, 1001, 1004, 1006, 1009, 1011, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1087, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1110, 1111, 1112, 1124, 1125, 1128, 1130, 1133, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "nativedtyp": [376, 386, 387, 389, 434, 435, 436, 438, 439, 440, 442, 443, 447, 448, 450, 456, 458, 459, 460, 462, 469, 470, 472, 473, 478, 479, 489, 490, 491, 500, 1135, 1160], "nativedevic": [376, 386, 387, 389, 434, 435, 436, 438, 439, 440, 442, 443, 447, 448, 450, 451, 452, 456, 458, 459, 460, 462, 469, 470, 472, 510, 527, 528, 529, 543, 549, 551, 553, 555, 556, 559, 798, 851, 1098, 1099, 1100, 1101, 1103, 1104, 1106], "my": 376, "numer": [376, 395, 434, 453, 455, 473, 479, 560, 561, 564, 574, 623, 626, 635, 638, 652, 655, 656, 659, 660, 663, 672, 675, 676, 679, 680, 683, 684, 687, 716, 719, 720, 723, 730, 733, 735, 738, 739, 742, 747, 750, 751, 754, 759, 762, 775, 778, 779, 783, 794, 797, 798, 833, 834, 856, 857, 862, 863, 923, 929, 931, 947, 950, 961, 963, 974, 980, 982, 983, 985, 986, 988, 1098, 1109, 1110, 1111, 1112, 1135, 1140, 1143, 1152, 1155, 1160, 1189], "cooler": 376, "produc": [376, 510, 519, 520, 910, 922], "something_cool": 376, "category_nam": [377, 381, 386, 387, 389], "contrast": [377, 389], "backend_nam": [377, 381, 382, 383, 386, 387, 389], "account": 377, "instanti": 377, "firstli": [377, 378, 381, 384, 386, 388, 394], "templat": [377, 1177], "spec": [377, 378], "api_specif": [377, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143], "array_api": 377, "preview": 377, "render": 377, "incorrectli": 377, "onlin": [377, 1177], "approxim": [377, 419, 420, 560, 566, 569, 570, 573, 579, 582, 583, 586, 587, 591, 594, 627, 630, 631, 634, 648, 652, 655, 692, 695, 696, 699, 700, 703, 704, 707, 747, 750, 763, 766, 767, 770, 784, 789, 923, 946, 955, 957, 964, 966], "tangent": [377, 419, 430, 560, 587, 590, 591, 594, 595, 598, 784, 788, 789, 793], "domain": [377, 560, 566, 569, 570, 573, 579, 582, 583, 586, 587, 591, 594, 627, 630, 631, 634, 648, 652, 655, 692, 695, 696, 699, 704, 707, 763, 766, 767, 770, 771, 774, 784, 789], "infin": [377, 433, 473, 479, 560, 561, 564, 569, 570, 573, 574, 577, 583, 586, 587, 591, 594, 623, 626, 627, 630, 631, 634, 638, 648, 651, 652, 655, 656, 659, 660, 663, 672, 675, 676, 679, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 923, 989, 991, 1135, 1140, 1143, 1148, 1151, 1168, 1169, 1172, 1173, 1176], "codomain": [377, 560, 566, 569, 570, 573, 579, 582, 583, 586, 587, 591, 594, 627, 630, 631, 634, 648, 652, 655, 692, 695, 696, 699, 704, 707, 763, 766, 767, 770, 771, 774, 784, 789], "x_i": [377, 560, 561, 564, 566, 569, 570, 573, 579, 582, 583, 586, 587, 603, 606, 623, 626, 627, 630, 631, 634, 648, 652, 655, 656, 672, 675, 676, 679, 680, 683, 692, 695, 696, 699, 704, 707, 716, 719, 735, 738, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 784, 789, 794, 797, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1164, 1167], "assum": [377, 382, 386, 393, 394, 408, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 627, 631, 656, 739, 742, 755, 758, 763, 766, 771, 774, 775, 778, 784, 789, 798, 826, 910, 913, 922, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172], "express": [377, 391, 396, 560, 566, 579, 582, 587, 591, 594, 627, 763, 766, 784], "radian": [377, 560, 566, 579, 582, 587, 591, 594, 627, 763, 766, 784], "float": [377, 381, 385, 386, 388, 389, 393, 395, 419, 421, 433, 434, 435, 439, 443, 447, 448, 450, 451, 452, 459, 469, 473, 479, 489, 493, 498, 501, 510, 543, 549, 553, 556, 559, 560, 561, 564, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 619, 622, 623, 626, 627, 630, 631, 634, 635, 638, 640, 643, 648, 651, 652, 655, 656, 659, 660, 663, 664, 667, 668, 671, 684, 687, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 763, 766, 767, 770, 771, 774, 779, 783, 784, 788, 789, 793, 794, 797, 798, 810, 811, 813, 825, 833, 834, 856, 857, 862, 863, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 913, 917, 922, 923, 924, 927, 932, 938, 940, 941, 943, 944, 946, 955, 957, 964, 966, 967, 969, 971, 973, 974, 989, 991, 995, 996, 999, 1001, 1004, 1006, 1009, 1071, 1072, 1073, 1074, 1093, 1094, 1097, 1098, 1103, 1104, 1106, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167], "operand": [377, 560, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 591, 594, 619, 622, 623, 626, 627, 630, 631, 634, 648, 651, 652, 655, 656, 692, 695, 696, 699, 704, 707, 708, 711, 730, 733, 747, 750, 751, 754, 755, 758, 763, 766, 767, 770, 771, 774, 784, 789, 794, 797, 1135, 1136, 1139, 1140, 1143, 1148, 1151, 1160, 1163], "whose": [377, 434, 463, 465, 466, 468, 560, 569, 570, 573, 583, 586, 590, 595, 598, 627, 630, 631, 634, 747, 750, 763, 766, 767, 770, 784, 788, 789, 793, 798, 809, 923, 924, 927, 932, 935, 937, 938, 940, 941, 943, 944, 946, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985, 1011, 1029, 1032, 1045, 1048, 1115, 1116, 1117, 1121, 1135, 1136, 1139, 1163], "ref": [377, 560, 615, 618, 684, 687, 730, 733, 739, 742, 751, 754, 779, 783, 1011, 1055, 1058], "promot": [377, 381, 386, 473, 479, 482, 485, 500, 501, 505, 560, 566, 569, 570, 573, 574, 577, 579, 582, 583, 586, 587, 590, 595, 598, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 627, 630, 631, 634, 635, 648, 651, 652, 655, 692, 695, 696, 699, 704, 707, 708, 711, 724, 727, 730, 733, 747, 750, 751, 754, 763, 766, 767, 770, 771, 774, 784, 788, 789, 793, 923, 924, 927, 929, 931, 944, 946, 947, 950, 955, 957, 961, 963, 964, 966, 971, 973, 986, 988, 989, 991, 1011, 1055, 1058, 1135, 1144, 1147], "But": [377, 385, 396], "needless": 377, "info": [377, 1177], "subset": [377, 380, 389, 391], "extend": [377, 380, 382, 389], "renam": 377, "conform": [377, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 652, 655, 656, 688, 691, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172], "org": [377, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 872, 874, 877, 879, 881, 923, 935, 937, 1011, 1025, 1028, 1045, 1048, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143], "elementwise_funct": [377, 560, 561, 564, 579, 582, 619, 622, 623, 626, 631, 656, 739, 742, 771, 774, 775, 778, 923, 935, 937, 1011, 1045, 1048, 1115, 1116, 1124, 1125, 1128, 1135, 1140, 1143], "descript": [377, 385, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 798, 826, 910, 913, 922, 923, 932, 935, 937, 989, 991, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143, 1168, 1169, 1172], "simplic": [377, 395, 407, 434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472, 473, 482, 485, 560, 561, 564, 574, 579, 582, 599, 602, 619, 622, 623, 626, 631, 656, 739, 742, 755, 758, 771, 774, 775, 778, 784, 789, 798, 826, 910, 913, 922, 923, 932, 935, 937, 1011, 1025, 1028, 1029, 1032, 1045, 1048, 1093, 1094, 1097, 1115, 1116, 1117, 1121, 1124, 1125, 1128, 1135, 1140, 1143], "judgment": 377, "beyond": [377, 1011, 1045, 1048], "text": 377, "func_nam": [377, 378, 381], "pure": [377, 393, 396, 408], "themselv": [377, 381, 385, 386, 387, 395, 1075, 1076], "operator_nam": 377, "succinct": 377, "contstructor": 377, "though": [377, 381, 386, 394, 408], "forward": [377, 396, 407, 408, 1210, 1211, 1214, 1218], "_forward": [377, 391, 394, 395, 1177], "former": 377, "trainabl": [377, 392, 394, 395, 872, 888, 890, 1187, 1188, 1210, 1211, 1220], "explicitli": [377, 381, 382, 384, 385, 388, 391, 408, 923, 938, 940, 1198, 1207, 1209, 1210, 1211], "latter": [377, 382], "implicit": [377, 385, 391], "docst": 377, "eight": 378, "static_": 378, "op_nam": 378, "__r": 378, "four": [378, 381, 386, 389, 394], "__sub__": [378, 384, 385, 389, 393], "__mul__": [378, 384, 385, 389, 393], "__truediv__": [378, 384, 385], "respect": [378, 384, 385, 386, 389, 434, 453, 455, 560, 561, 564, 574, 577, 591, 594, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 635, 638, 640, 643, 651, 659, 660, 663, 664, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 730, 733, 739, 742, 751, 754, 779, 783, 872, 874, 877, 879, 881, 883, 884, 886, 892, 894, 896, 898, 900, 902, 923, 967, 969, 1071, 1072, 1073, 1074], "recap": [378, 385, 395], "independ": [378, 379, 383, 385, 391, 396, 923, 929, 931, 971, 973, 1098, 1099], "combinatorili": 378, "variat": [378, 380], "grid": [378, 380, 407, 434, 453, 455], "vari": [378, 380, 385, 393, 1115, 1116, 1117, 1121, 1123], "simplest": 378, "small": [378, 381, 391, 395, 408, 560, 730, 733, 923, 946, 955, 957, 964, 966, 1093, 1094, 1097, 1212, 1213], "unus": [378, 388, 431, 432], "18": [378, 385, 560, 619, 622, 923, 935, 937, 961, 963, 1135, 1136, 1139, 1163], "excess": [378, 382, 393], "showcas": [378, 407], "demonstr": [378, 393], "replic": [378, 386], "meant": 378, "imaginari": 378, "some_flag": 378, "another_flag": 378, "54": [378, 560, 627, 631, 771, 774, 910, 922, 923, 961, 963, 1098, 1103, 1135, 1136, 1139, 1163], "jointli": 378, "three": [378, 385, 390, 434, 453, 455, 1177], "x0": [378, 798, 806], "procedur": 378, "sens": [378, 385, 393], "5574077": 378, "1850398": 378, "5463025": 378, "8422884": 378, "91601413": 378, "9647598": 378, "3738229": 378, "1597457": 378, "0963247": 378, "9955841": 378, "3278579": 378, "multi": [378, 385, 390, 408, 910, 921, 923, 929, 931, 1177, 1183, 1198, 1209], "seper": [378, 798, 825], "pars": [378, 408], "satisfi": [378, 923, 992, 994], "far": [378, 387, 392, 393, 1075, 1076, 1086], "asid": [378, 407], "irrelev": [378, 386], "increasingli": 378, "complex": [378, 394, 395, 396, 408, 923, 938, 940, 974], "rule": [378, 380, 381, 384, 385, 386, 473, 479, 482, 485, 501, 560, 590, 595, 598, 615, 618, 635, 730, 733, 751, 754, 788, 793, 923, 924, 927, 929, 931, 961, 963, 971, 973], "14254655": 378, "1578213": 378, "380515": 378, "17": [378, 385, 419, 421, 923, 935, 937, 1098, 1103], "trivial": 378, "By": [378, 381, 385, 388, 395, 396, 798, 816, 817, 923, 986, 988, 1011, 1037, 1040, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "non": [378, 385, 386, 391, 431, 432, 473, 479, 497, 560, 716, 719, 720, 723, 910, 913, 923, 932, 955, 957, 974, 980, 982, 986, 988, 989, 991, 1110, 1111, 1112, 1113, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1210, 1211, 1214, 1218], "dictat": [378, 384, 388, 389], "exlud": 378, "unit": [379, 380, 408, 419, 420, 421, 422, 510], "thoroughli": [379, 380], "ci": [379, 380, 408], "failur": 379, "On": [380, 392, 396], "fixtur": 380, "consum": [380, 385, 389, 510], "300": [380, 560, 755, 758], "hit": [380, 391], "permit": [380, 384, 389], "action": 380, "eleg": 380, "intellig": 380, "sampl": [380, 910, 918, 1098, 1099, 1103, 1104, 1106, 1135, 1156, 1159, 1164, 1167, 1198, 1206], "rang": [380, 394, 395, 396, 434, 435, 451, 452, 1115, 1116, 1135, 1152, 1155, 1160, 1177], "cach": [380, 381, 510, 528, 798, 809], "unexplor": 380, "known": 380, "repeatedli": [380, 385, 1075, 1084], "upload": 380, "artifact": 380, "parametr": 380, "strategi": 380, "statement": [380, 408], "plai": [380, 396], "helper": [380, 394], "verifi": [380, 386, 387, 393, 1177, 1183], "truth": [380, 560, 640, 643, 664, 667, 668, 671, 684, 687, 688, 691, 739, 742], "opt": [380, 382, 388, 393], "defer": [380, 381, 384, 385, 386, 387, 388], "suffic": [380, 383], "catch": [380, 798, 819], "systemat": 380, "safeguard": 380, "inabl": 380, "fact": [380, 394], "categor": [381, 387], "mutual": [381, 385], "constitut": [381, 391, 1135, 1156, 1159, 1164, 1167], "venn": 381, "diagram": 381, "light": [381, 408], "wherea": [381, 384, 386, 387, 389, 396], "hand": [381, 408], "log_pr": [381, 385, 388], "array_arg": 381, "typic": 381, "whatsoev": [381, 385], "commonli": [381, 1135, 1156, 1159, 1164, 1167], "outsid": [381, 387, 391, 393, 396, 1011, 1012, 1015, 1055, 1058], "denomin": [381, 408, 798, 824, 834, 857, 862, 863, 1093, 1094, 1097, 1212, 1213], "divis": [381, 560, 615, 618, 635, 638, 659, 660, 663, 751, 754, 798, 824, 834, 857, 862, 863, 872, 874, 877, 879, 881, 892, 894, 1214, 1215, 1216], "deal": [381, 408], "concurr": [381, 385], "weight": [381, 385, 395, 396, 872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 910, 919, 920, 922, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1210, 1211, 1214, 1216, 1217], "modif": 381, "decor": [381, 383, 385, 386, 387, 388], "group": [381, 385], "briefli": [381, 394], "cast": [381, 386, 473, 479, 482, 485, 1011, 1017, 1020, 1135, 1152, 1155, 1160, 1177], "get_all_arrays_on_dev": 381, "nested_map": [381, 1075], "index_nest": [381, 1075], "implicit_backend": 382, "unless": [382, 387, 388, 408, 560, 730, 733, 798, 851], "__dict__": [382, 391, 393], "ivy_original_dict": [382, 391], "unmodifi": [382, 386], "moment": [382, 408, 872, 874, 877, 879, 881, 892, 894, 1214, 1215, 1216], "fallback": 382, "freedom": [382, 1135, 1156, 1159, 1164, 1167], "recommend": [382, 560, 716, 719, 720, 723, 751, 754, 1135, 1144, 1147], "achiev": [383, 394, 396], "wrapper": [383, 384, 385, 386, 388, 389, 393], "logic": [383, 384, 386, 387, 393, 510, 546, 560, 712, 715, 716, 719, 720, 723, 1168, 1169, 1172, 1173, 1176, 1177], "topic": [383, 393], "tf": [384, 386, 387, 388, 389, 391, 396, 408, 1177], "_data": [384, 393], "organiz": [384, 385], "inherit": [384, 385, 393], "bear": [384, 385, 386], "mind": [384, 385], "necessarili": [384, 385], "although": [384, 385], "underpin": [384, 385, 391], "programmat": [384, 385], "backup": [384, 385], "accident": [384, 385], "readabl": [384, 385, 389, 393, 394], "absent": [384, 385], "perk": [384, 385], "auto": [384, 385, 394], "throw": [384, 393], "imposs": 384, "coupl": [384, 385, 393, 395], "anywai": 384, "secondli": [384, 386], "easier": 384, "five": [385, 394], "decis": [385, 391, 393], "displai": [385, 394], "arbitrarili": [385, 394], "__repr__": 385, "control": [385, 386, 388, 393, 394, 407], "__getattr__": 385, "underli": [385, 560, 599, 602, 611, 614, 619, 622, 724, 727], "__setattr__": 385, "__contains__": 385, "__getstate__": 385, "__setstate__": 385, "unpickl": 385, "expand": [385, 798, 825, 1011, 1025, 1028], "children": 385, "shallowest": 385, "deepest": 385, "67": [385, 560, 619, 622, 631], "22": [385, 560, 619, 622, 923, 935, 937, 961, 963, 1110, 1114, 1135, 1136, 1139, 1163], "25": [385, 560, 771, 774, 775, 778, 923, 935, 937, 944, 995, 1001, 1004, 1093, 1094, 1097, 1135, 1136, 1139, 1163], "retain_grad": [385, 872, 883], "dy": [385, 872, 883], "dx": [385, 872, 883], "technic": [385, 388, 389, 408], "autograd": [385, 408], "grad": [385, 394, 395, 396, 1177, 1214, 1218], "redund": 385, "num_head": [385, 910, 921, 1198, 1209], "mask": [385, 910, 921, 922], "to_q_fn": [385, 910, 921], "to_kv_fn": [385, 910, 921], "to_out_fn": [385, 388, 910, 921], "to_q_v": [385, 910, 921], "to_kv_v": [385, 910, 921], "to_out_v": [385, 910, 921], "measur": [385, 910, 921, 1198, 1209], "dot": [385, 910, 921, 922, 923, 980, 982, 986, 988, 1198, 1209], "product": [385, 560, 730, 733, 798, 816, 910, 921, 922, 923, 929, 931, 947, 950, 961, 963, 980, 982, 986, 988, 1135, 1136, 1139, 1152, 1155, 1163, 1198, 1209], "implicitli": 385, "intuit": [385, 394, 395], "debug": [385, 394], "chronolog": 385, "had": [385, 388], "sequenti": [385, 395], "flow": [385, 407], "implic": 385, "slightli": [385, 391, 395], "eager": [385, 408], "int8": [386, 473, 494], "int16": [386, 473, 482, 485, 494, 1135, 1152, 1155, 1160], "uint8": [386, 473, 482, 485, 494], "uint16": [386, 473, 495, 1135, 1152, 1155, 1160], "uint32": [386, 473, 495, 1135, 1152, 1155, 1160], "uint64": [386, 473, 495, 1135, 1152, 1155, 1160], "bfloat16": [386, 473, 494], "float16": [386, 473, 495], "all_dtyp": 386, "all_numeric_dtyp": 386, "all_int_dtyp": 386, "all_float_dtyp": 386, "fall": [386, 390, 1177, 1210, 1211, 1214, 1218], "valid": [386, 391, 473, 487, 910, 911, 912, 913, 914, 915, 916, 917, 1011, 1055, 1058, 1168, 1169, 1172, 1173, 1176, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "invalid": [386, 923, 986, 988, 1168, 1169, 1172, 1173, 1176], "thirdli": 386, "native_float32": 386, "importantli": [386, 393, 396, 407], "varieti": [386, 387], "conveni": [386, 387, 389, 392, 394, 395], "arguabl": [386, 387], "compound": 386, "overflow": [386, 560, 574, 1135, 1160], "arr": [386, 387, 1093, 1094, 1097], "scalar": [386, 391, 396, 408, 434, 448, 450, 798, 851, 868, 871, 923, 989, 991], "settabl": [386, 387], "jnp": [386, 387, 388, 389, 396, 1177], "jaxarrai": [386, 387, 388, 389], "mx": [386, 387, 388, 1177], "nd": [386, 387, 388, 391, 396, 1177], "deleg": 386, "as_n": [386, 473, 488, 489, 490, 491, 510, 529, 530, 551], "idx": [387, 393, 798, 804], "tpu": [387, 510, 532, 557], "aliv": [387, 510, 544, 548, 550, 798, 832, 850, 852], "amount": [387, 510, 556, 995, 996, 999, 1001, 1004, 1006, 1009], "memori": [387, 388, 406, 408, 510, 528, 549, 554, 556, 559, 910, 920, 1177], "dual": 387, "thrown": [387, 408, 798, 842], "rare": [387, 408], "program": 388, "strictli": 388, "ration": 388, "speak": 388, "subtli": 388, "ensure_in_backend": [388, 798, 842], "x_nativ": 388, "val_n": 388, "is_ivy_arrai": [388, 393, 798], "assign": [388, 393], "elif": 388, "irrespect": [388, 393, 473, 479], "inclus": [388, 434, 435, 1098, 1100, 1101], "omit": [388, 389, 1115, 1116, 1117, 1121, 1123], "unspecifi": [388, 560, 747, 750, 751, 754, 923, 938, 940, 1011, 1055, 1058], "predominantli": [388, 407], "math": [388, 396, 1177], "presenc": 388, "altern": [388, 394], "_wrap_fn": 388, "maxim": [388, 391], "inner": [388, 393, 923, 938, 940, 947, 950, 1071, 1072, 1073, 1074], "third": [388, 408, 923, 974, 1115, 1116], "addition": [388, 389], "leverag": 388, "equival": [388, 394, 396, 434, 435, 560, 615, 618, 716, 719, 720, 723, 751, 754, 923, 946, 955, 957, 964, 966, 971, 973, 989, 991], "input_arrai": 388, "adress": 389, "revisit": [389, 396], "dedic": [389, 393, 395, 872, 908, 1187, 1188], "__div__": 389, "dicat": 389, "futher": 389, "absenc": 389, "pep": 389, "484": 389, "annot": 389, "brittl": 389, "intend": [389, 1135, 1160], "freeli": 389, "inde": [389, 408], "flexibl": 389, "original_typ": 389, "cumbersom": 389, "sound": 390, "higher": [390, 391, 396, 408, 872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902], "overview": [390, 407], "handler": [390, 392, 396, 1177], "fledg": [391, 392], "syntact": [391, 396], "clip_by_valu": [391, 396], "clamp": [391, 396], "behavior": [391, 408, 560, 747, 750, 751, 754, 1115, 1116, 1117, 1121, 1123], "fit": [391, 1011, 1037, 1040], "construct": [391, 392, 395, 396, 1011, 1063, 1066, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221], "num": [391, 434, 451, 452], "power_seq": 391, "okai": 391, "bound": 391, "resid": [391, 395], "edg": [391, 396, 1011, 1012, 1015, 1021, 1024, 1067, 1070, 1177], "larger": [391, 396, 473, 493, 1011, 1012, 1015, 1045, 1048, 1135, 1156, 1159, 1164, 1167], "ml_framework": [391, 396, 434, 435], "current_framework": [391, 396], "furthermor": 391, "concaten": [391, 394, 510, 539, 798, 825, 1011, 1017, 1020, 1177], "framework_handl": 391, "face": 391, "verbos": [391, 1177, 1224], "cprint": [391, 1223], "framework_stack": 391, "_determine_framework_from_arg": 391, "valueerror": [391, 1011, 1051, 1054], "get_framework": 391, "neither": [391, 560, 574, 730, 733], "illustr": [391, 407], "un": [391, 473, 497], "nn": [391, 396, 434, 453, 455, 1177], "init_h": [391, 910, 920], "init_c": [391, 910, 920], "kernel": [391, 408, 910, 920], "recurrent_kernel": [391, 910, 920], "bia": [391, 395, 910, 919, 920, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208], "recurrent_bia": [391, 910, 920], "x_shape": 391, "batch_shap": [391, 393, 396, 798, 851, 910, 920, 921, 922, 923, 992, 994, 1098, 1099, 1198, 1207], "timestep": [391, 910, 920, 1198, 1207], "input_channel": [391, 395, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1207, 1208], "x_flat": 391, "wi": 391, "wi_x": 391, "wii_x": 391, "wif_x": 391, "wig_x": 391, "wio_x": 391, "recurr": [391, 910, 920], "wh": 391, "lstm": [391, 910, 920, 1198], "ht": 391, "ct": 391, "hts_list": 391, "unrol": [391, 394, 910, 920], "wii_xt": 391, "wif_xt": 391, "wig_xt": 391, "wio_xt": 391, "zip": 391, "htm1": 391, "ctm1": 391, "wh_htm1": 391, "whi_htm1": 391, "whf_htm1": 391, "whg_htm1": 391, "who_htm1": 391, "ft": 391, "gt": 391, "ot": 391, "offici": 391, "reliabl": 391, "sacrific": 391, "hear": 391, "virtu": 391, "pure_ivi": 391, "reduce_mean": [391, 394, 395, 396, 1177], "reduce_sum": [391, 1177], "reduce_var": 391, "compile_graph": [391, 396], "pure_torch": 391, "cat": [391, 396], "backbon": [391, 394], "_layer": 391, "super": [391, 394, 395, 396], "clean": [391, 392, 394], "random_unifrom": 391, "unclean": 391, "wx": 391, "temp": 391, "torchscript": 391, "fn": [391, 393, 409, 410, 411, 412, 413, 414, 415, 416, 417, 473, 494, 495, 510, 519, 520, 798, 804, 869, 1075, 1076, 1081, 1082, 1083, 1085, 1086, 1087, 1180, 1182], "example_input": [391, 431, 432], "static_argnum": [391, 431, 432], "static_argnam": [391, 431, 432], "jit": [391, 408], "frontend": 392, "primit": [392, 408], "hierarch": [392, 394, 395], "straight": [393, 1177], "arraywithlinalg": 393, "arraywithlog": 393, "arraywithmath": 393, "arraywithmeta": 393, "arraywithreduct": 393, "is_native_arrai": [393, 798], "_shape": 393, "_size": 393, "functool": 393, "mul": 393, "len": [393, 396, 434, 453, 455], "_dtype": 393, "_devic": 393, "_dev_str": 393, "_pre_repr": 393, "_post_repr": 393, "ndim": [393, 923, 967, 969, 974], "mt": 393, "answer": [393, 408], "consol": 393, "typeerror": 393, "immut": 393, "behav": 393, "claim": 393, "truli": 393, "_native_wrapp": 393, "attributeerror": 393, "genuin": 393, "some_method": 393, "similarli": [393, 434, 453, 455], "rewritten": 393, "__pow__": 393, "strang": 393, "power": [393, 394, 395, 560, 615, 618, 648, 747, 750, 798, 833, 856, 863, 923, 954, 1189], "enforc": 393, "notic": 393, "appear": [393, 1011, 1025, 1028], "invers": [393, 407, 560, 566, 569, 570, 573, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 630, 634, 788, 793, 923, 944, 946, 964, 966], "_wrap_method": 393, "func_wrapp": [393, 409, 410, 411, 412, 413, 414, 415, 416, 417], "__name__": 393, "non_wrapped_method": 393, "_method_wrap": 393, "native_arg": 393, "native_kwarg": 393, "inner_fn": 393, "whist": 393, "unwrap": 393, "transit": 393, "needlessli": 393, "randn": 393, "_unwrap_method": 393, "method_wrap": 393, "compartment": 393, "public": [393, 798, 814], "newshap": 393, "new_shap": 393, "tidi": 393, "shorter": 393, "crystal": 393, "enough": [393, 394, 395], "ton": 394, "ado": [394, 395], "incred": [394, 408], "hash": 394, "soup": 394, "walk": [394, 395], "dct": 394, "cnt": 394, "combo": [394, 1177, 1183], "hold": [394, 798, 854, 855], "1000": [394, 560, 771, 774], "uda": 394, "3333": 394, "6667": 394, "178": 394, "new_weight": 394, "0600": 394, "3100": 394, "2400": 394, "6900": 394, "delimit": 394, "autocomplet": 394, "midwai": 394, "agent": 394, "total_spe": 394, "total_height": 394, "total_width": 394, "ag": 394, "tot": 394, "total_": 394, "total_h": 394, "batch_siz": [394, 910, 911, 912, 913, 914, 915, 916, 917, 1098, 1099], "dir": 394, "adam": [394, 395, 396, 872, 874, 877, 879, 881, 892, 894, 1177, 1214, 1216], "cnt0": 394, "cnt1": 394, "diff_0": 394, "diff_1": 394, "config0": 394, "config1": 394, "Not": [394, 395, 408, 433], "decod": 394, "l0": 394, "l1": [394, 923, 989, 991], "depth": [394, 395, 396, 407, 510, 534, 538, 542, 798, 836, 851, 1075, 1087, 1210, 1211], "clearer": 394, "truncat": 394, "decoder__l0": 394, "decoder__l1": 394, "encoder__l0": 394, "encoder__l1": 394, "height": 394, "l0__b": 394, "l0__w": 394, "l1__b": 394, "l1__w": 394, "printabl": 394, "obviou": 394, "foresight": 394, "untidili": 394, "update_ag": 394, "normalize_img": 394, "img": 394, "img_max": 394, "reduce_max": [394, 1177], "img_min": 394, "reduce_min": [394, 1177], "img_rang": 394, "agent_posit": 394, "agent_veloc": 394, "agent_cam_front_rgb": 394, "agent_cam_front_depth": 394, "agent_cam_rear_rgb": 394, "agent_cam_rear_depth": 394, "agent_cam_lidar": 394, "normal": [394, 1011, 1055, 1058, 1093, 1094, 1097, 1098, 1103, 1212, 1213], "cleaner": 394, "camera": 394, "front_rgb": 394, "front_depth": 394, "rear_rgb": 394, "rear_depth": 394, "lidar": 394, "rgb": 394, "rear": 394, "veloc": 394, "cam": 394, "cam_max": 394, "cam_min": 394, "cam_rang": 394, "Of": 394, "ideal": 394, "perman": 394, "afterward": 394, "thread": 394, "incorpor": 394, "pretti": 394, "straightforward": 394, "dataload": [394, 406, 1177], "_cnt": 394, "img_": 394, "_dataset_s": 394, "_batch_siz": 394, "_count": [394, 395], "__next__": 394, "filenam": 394, "img_fnam": 394, "fname": 394, "loaded_img": 394, "cv2": 394, "imread": 394, "loader": [394, 408], "batch_slic": 394, "model": [394, 395, 1177], "mymodel": [394, 1177], "linear0": [394, 395, 1177], "linear1": [394, 395, 1177], "x_in": [394, 395, 396, 1177], "001": [394, 395, 872, 874, 877, 1093, 1094, 1097], "loss_fn": [394, 395, 396, 1177], "0145": 394, "grad_fn": 394, "addbackward0": 394, "_create_vari": 395, "output_channel": [395, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1207, 1208], "with_bia": [395, 1198, 1208], "_input_channel": 395, "_output_channel": 395, "_w_shape": 395, "_b_shape": 395, "_with_bia": 395, "8979": 395, "3198": 395, "0196": 395, "3126": 395, "3717": 395, "9687": 395, "6958": 395, "5122": 395, "3902": 395, "8800": 395, "5613": 395, "1982": 395, "nightmar": 395, "overcom": 395, "fc": 395, "9563": 395, "impact": 395, "v0": 395, "v1": 395, "6440": 395, "key0": 395, "1823": 395, "8075": 395, "linear3": 395, "v2": 395, "2346": 395, "counter": 395, "hidden": [395, 910, 920, 1198, 1207], "fed": [395, 510, 554], "1300": 395, "decoupl": 395, "scheme": 395, "weight_initi": [395, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208], "glorotuniform": [395, 1189, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208], "bias_initi": [395, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208], "_w_init": 395, "_b_init": 395, "create_vari": [395, 1189], "var_shap": [395, 1189], "fan_out": [395, 1189], "fan_in": [395, 1189], "fan_mod": [395, 1189], "fan_sum": 395, "slight": 395, "misnom": 395, "saw": 395, "vanilla": [395, 1071, 1073], "descent": [395, 872, 884, 886, 1214, 1219], "lar": [395, 872, 892, 894, 896, 898, 1214], "lamb": [395, 872, 892, 894, 1214], "compile_on_next_step": [395, 1210, 1211, 1214, 1215, 1216, 1217, 1218, 1219], "_beta1": 395, "_beta2": 395, "_epsilon": 395, "_mw": 395, "_vw": 395, "_first_pass": 395, "_should_compil": 395, "_step": [395, 1214, 1218], "new_v": 395, "_lr": 395, "isinst": [395, 396, 798, 866], "_inplac": 395, "_stop_gradi": 395, "set_stat": [395, 1214, 1215, 1216, 1217, 1218, 1219], "pre": [396, 408, 510], "captur": 396, "sparse_funct": 396, "num_class": [396, 1098, 1099], "num_dim": 396, "new_axi": 396, "_linear": 396, "to_backend": 396, "jax_graph": 396, "learnabl": [396, 1093, 1094, 1097, 1212, 1213], "to_ivy_modul": [396, 1187], "thinli": 396, "whilst": 396, "to_haiku_modul": 396, "hk": 396, "loss_fn_t": 396, "transform": [396, 407, 910, 918, 919], "without_apply_rng": 396, "rng": 396, "prngkei": 396, "init": 396, "update_rul": 396, "01": [396, 560, 755, 758], "tree_multimap": 396, "mechan": [406, 408, 1177], "vision": [406, 1177], "robot": [406, 1177], "focus": 407, "field": [407, 923, 938, 940, 967, 969, 974, 1115, 1116, 1117, 1121], "perfect": 407, "3d": [407, 1198, 1203, 1204], "differenti": 407, "demo": [407, 1177], "orient": 407, "pose": 407, "euler": [407, 433], "quaternion": 407, "rotat": 407, "matric": [407, 434, 453, 455, 463, 465, 466, 468, 910, 919, 923, 924, 927, 932, 935, 937, 938, 940, 941, 943, 944, 946, 954, 955, 957, 958, 960, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985], "angl": [407, 560, 591, 594, 631, 767, 770, 789], "ivy_mech": 407, "target_facing_rotation_matrix": 407, "polar_to_cartesian_coord": 407, "ordin": [407, 923, 971, 973], "warp": 407, "optic": 407, "voxel": 407, "ivy_vis": 407, "coords_to_voxel_grid": 407, "render_pixel_coord": 407, "neural": [407, 910, 1177, 1184, 1198], "radianc": 407, "nerf": 407, "trajectori": 407, "motion": 407, "plan": [407, 1177], "mobil": 407, "ivy_robot": 407, "sample_spline_path": 407, "rigidmobil": 407, "sample_bodi": 407, "drone": 407, "sample_link": 407, "openai": 407, "swimmer": 407, "cumul": [407, 798, 816, 817], "reward": 407, "supervis": 407, "reinforc": 407, "door": [407, 408], "intersect": 407, "cartpol": 407, "mountain_car": 407, "pendulum": 407, "reacher": 407, "polici": 407, "condit": [407, 431, 432, 1075, 1085, 1086, 1110, 1114], "learnt": 407, "ture": 407, "ntm": 407, "egospher": 407, "spatial": 407, "esm": 407, "ivy_memori": 407, "egocentr": 407, "room": 407, "inspir": 407, "doubt": 408, "grate": 408, "put": 408, "probe": 408, "undergo": 408, "remark": 408, "surpris": 408, "backward": [408, 560, 751, 754, 923, 986, 988, 1168, 1169, 1172, 1173, 1176], "lock": 408, "contunu": 408, "minor": 408, "xla": 408, "buffer": 408, "kind": [408, 473, 493, 496, 560, 747, 750, 1135, 1152, 1155, 1160], "gold": 408, "dex": 408, "phase": 408, "lax": 408, "scan": 408, "tricki": 408, "predictor": 408, "tight": 408, "driver": 408, "schedul": 408, "algorithm": [408, 910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "dispatch": 408, "Will": 408, "ast": 408, "dynamic": 408, "cond": 408, "jacobian": 408, "checkpoint": 408, "autodiff": 408, "shine": 408, "merci": 408, "superset": 408, "cluster": 408, "compet": 408, "paradigm": 408, "parallelis": [408, 510, 519, 520], "spmd": 408, "mixtur": [408, 872, 874, 877], "expert": 408, "sophist": 408, "depart": 408, "routin": 408, "hundr": 408, "thousand": 408, "deepli": [408, 1075, 1077], "broadli": 408, "heavili": 408, "supplementari": 408, "Is": 408, "reusabl": 408, "fanci": 408, "fusion": 408, "lose": 408, "vmap": 408, "pmap": 408, "overhead": 408, "ineffici": 408, "eventu": 408, "supplement": 408, "backdoor": 408, "callback": 408, "record": 408, "metric": 408, "somewhat": 408, "outsourc": 408, "inputs_to_ivy_arrai": 409, "gaussian": [419, 420], "leaki": [419, 420, 421], "alpha": [419, 421], "rectifi": [419, 421, 422], "slope": [419, 421], "39": [419, 421, 560, 648, 872, 874, 877, 923, 961, 963, 1135, 1136, 1139, 1163], "85": [419, 421, 560, 619, 622], "48": [419, 421, 560, 771, 774, 872, 874, 877, 923, 961, 963, 1135, 1136, 1139, 1163], "88": [419, 421, 560, 619, 622, 923, 961, 963, 1135, 1136, 1139, 1163], "269": [419, 423], "731": [419, 423], "881": [419, 423], "214": [419, 423], "978": [419, 423], "891": [419, 423], "422": [419, 424], "155": [419, 424], "0768": [419, 424], "231": [419, 424], "693": [419, 424, 995, 1006, 1009], "49": [419, 424, 560, 771, 774, 1135, 1136, 1139, 1163], "147": [419, 424], "363": [419, 424], "3461": [419, 425, 428], "6491": [419, 425, 428], "535": [419, 425, 428], "hyperbol": [419, 430, 560, 569, 570, 573, 583, 586, 590, 595, 598, 630, 631, 634, 767, 770, 788, 789, 793], "55": [419, 430, 910, 916, 923, 961, 963, 1135, 1136, 1139, 1163], "501": [419, 430], "faster": [431, 432], "invoc": [431, 432], "718281828459045": 433, "newaxi": 433, "alia": 433, "pi": 433, "141592653589793": 433, "mathemat": [433, 560, 574, 591, 594, 652, 655, 730, 733, 923, 989, 991], "half": [434, 435, 1098, 1100, 1101, 1104, 1106], "chosen": [434, 435, 560, 591, 594, 1110, 1114], "distanc": [434, 435], "adjac": [434, 435], "creation_funct": [434, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 459, 460, 462, 463, 465, 466, 468, 469, 470, 472], "interpret": [434, 436, 438, 456, 458], "uniniti": [434, 439, 440, 442], "n_row": [434, 443], "n_col": [434, 443], "elsewher": [434, 443, 1110, 1114], "row": [434, 443, 923, 971, 973, 974, 1098, 1099, 1110, 1113], "column": [434, 443, 923, 938, 940, 967, 969, 971, 973, 974], "__dlpack__": [434, 444, 446, 510, 555], "interchang": [434, 444, 446, 1011, 1059, 1062], "endpoint": [434, 451], "coordin": [434, 453, 455, 560, 591, 594], "cartesian": [434, 453, 455], "ij": [434, 453, 455, 1135, 1136, 1139, 1163], "rank": [434, 453, 455, 798, 870, 923, 929, 931, 955, 957, 967, 969, 971, 973, 983, 985, 986, 988, 989, 991, 1011, 1021, 1024, 1025, 1028, 1055, 1058, 1067, 1070, 1110, 1113, 1168, 1169, 1172, 1173, 1176], "ni": [434, 453, 455], "xi": [434, 453, 455], "n1": [434, 453, 455], "n2": [434, 453, 455], "n3": [434, 453, 455], "accordingli": [434, 453, 455, 560, 652, 655, 923, 989, 991, 1110, 1112, 1115, 1116, 1117, 1121, 1123, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "xv": [434, 453, 455], "yv": [434, 453, 455], "triangular": [434, 463, 465, 466, 468, 923, 924, 927, 967, 969], "innermost": [434, 463, 465, 466, 468, 923, 924, 927, 932, 935, 937, 938, 940, 941, 943, 944, 946, 955, 957, 958, 960, 964, 966, 967, 969, 971, 973, 974, 976, 977, 979, 983, 985], "mxn": [434, 463, 465, 466, 468, 923, 935, 937, 946, 955, 957, 958, 960, 964, 966, 967, 969, 976, 977, 979, 983, 985], "defaultdtyp": [473, 474], "defaultfloatdtyp": [473, 475], "float_dtyp": [473, 489, 503], "defaultintdtyp": [473, 476], "dtype_in": [473, 477, 478, 492, 497, 498, 499, 509], "incompat": [473, 481], "occur": [473, 482, 485, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1123], "data_type_funct": [473, 482, 485], "closest": [473, 487, 560, 623, 626, 638, 656, 659, 660, 663, 755, 758, 794, 797], "floatdtyp": [473, 489], "int_dtyp": [473, 490, 504], "intdtyp": [473, 490], "followng": [473, 493], "occupi": [473, 493, 496, 798, 854, 855], "ep": [473, 493, 923, 946, 955, 957, 964, 966], "smallest_norm": [473, 493], "precis": [473, 493, 560, 730, 733, 771, 774], "encapsul": [473, 496], "type1": [473, 500], "type2": [473, 500], "arrays_and_dtyp": [473, 501], "ret1": [473, 505], "ret2": [473, 505], "noinspect": [474, 475, 476, 511, 873], "pyshadowingnam": [474, 475, 476, 511, 873], "defaultdevic": [510, 511], "__enter__": 510, "_dev": 510, "initialis": 510, "devcloneditem": [510, 532], "multidevitem": [510, 512, 515], "devclonedit": 510, "multidevit": [510, 513, 516, 519, 520, 524], "devclonednest": 510, "multidevnest": [510, 514, 517], "devdistitem": 510, "devdistit": 510, "devdistnest": 510, "devmanag": [510, 518], "dev_mapp": 510, "da_dim_s": 510, "safety_factor": 510, "min_dev_dim_s": 510, "max_dev_dim_step_ratio": 510, "min_unit_dev_tune_step": 510, "min_sf_tune_step": 510, "starting_split_factor": 510, "max_split_factor_step_s": 510, "tune_dev_alloc": 510, "tune_dev_split": 510, "mapper": [510, 519, 520], "receivess": 510, "ratio": [510, 872, 892, 894, 1214, 1216], "safe": [510, 519], "oom": 510, "tune": 510, "da_tune_step": 510, "ds_tune_step": 510, "to_clon": 510, "to_distribut": 510, "multidevic": [510, 519], "parallel": [510, 519, 520], "mutlidevic": [510, 519], "repeated_config_check": 510, "tune_step": 510, "devmapp": [510, 520], "ret_fn": [510, 519, 520], "queue_class": [510, 519, 520], "worker_class": [510, 519, 520], "worker": [510, 519, 520], "used_dev": [510, 519], "sf": [510, 519], "devmappermultiproc": 510, "multidev": [510, 521, 522, 523, 542], "profil": 510, "save_dir": [510, 525], "deviceic": [510, 531], "spread": [510, 542], "139740789224448": [510, 544], "physic": [510, 546], "x3": [510, 548], "x4": [510, 548], "process_specif": [510, 549, 559], "percentag": [510, 549], "ram": [510, 549, 556, 559], "alon": [510, 549, 559], "attr_onli": [510, 550], "chunk": [510, 552, 553, 554], "max_chunk_s": [510, 554], "chunk_siz": [510, 554], "input_ax": [510, 554], "output_ax": [510, 554], "feed": [510, 554], "fist": [510, 554], "stream": [510, 555], "caveat": [510, 555], "portabl": [510, 555, 1177], "gb": [510, 556, 559], "reset": [510, 558], "magnitud": [560, 561, 564, 574, 730, 733, 923, 974, 976, 977, 979], "princip": [560, 566, 579, 582, 587], "cosin": [560, 566, 569, 570, 573, 627, 630, 631, 634], "x1_i": [560, 574, 577, 591, 594, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 635, 638, 640, 643, 651, 659, 660, 663, 664, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 779, 783], "x2_i": [560, 574, 577, 591, 594, 599, 602, 607, 610, 611, 614, 615, 618, 619, 622, 635, 638, 640, 643, 651, 659, 660, 663, 664, 667, 668, 671, 684, 687, 688, 691, 708, 711, 712, 715, 720, 723, 724, 727, 730, 733, 739, 742, 747, 750, 751, 754, 779, 783], "finit": [560, 574, 591, 594, 672, 675, 730, 733, 747, 750, 751, 754], "nor": [560, 574, 730, 733], "nearest": [560, 574, 730, 733, 755, 758], "2019": [560, 574, 652, 655, 730, 733], "commut": [560, 574], "sine": [560, 579, 582, 583, 586, 763, 766, 767, 770], "57": [560, 579, 582, 619, 622, 631], "524": [560, 579, 582], "644": [560, 579, 582], "201": [560, 579, 582, 755, 758], "305": [560, 579, 582], "412": [560, 579, 582], "quotient": [560, 591, 594], "notat": [560, 591, 594, 1135, 1136, 1139, 1163], "denot": [560, 591, 594], "pair": [560, 591, 594, 910, 922, 923, 929, 931], "quadrant": [560, 591, 594], "3\u03c0": [560, 591, 594], "549": [560, 590, 595, 598, 788, 793], "bitwis": [560, 599, 602, 611, 614, 619, 622, 724, 727], "AND": [560, 599, 602, 712, 715, 1168, 1169, 1172], "binari": [560, 599, 602, 611, 614, 619, 622, 724, 727, 995, 996, 999], "invert": [560, 603, 606], "arithmet": [560, 615, 618, 1135, 1144, 1147], "propag": [560, 615, 618, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1164, 1167], "thu": [560, 615, 618, 747, 750, 751, 754, 923, 938, 940], "lh": [560, 615, 618], "rh": [560, 615, 618], "xor": [560, 619, 622, 724, 727], "78": [560, 619, 622, 923, 961, 963, 1135, 1136, 1139, 1163], "91": [560, 619, 622, 923, 961, 963, 1135, 1136, 1139, 1163], "23": [560, 619, 622, 910, 916, 923, 924, 927, 935, 937, 1110, 1114], "66": [560, 619, 622, 923, 961, 963, 1135, 1136, 1139, 1163], "77": [560, 619, 622, 923, 961, 963, 1135, 1136, 1139, 1163], "79": [560, 619, 622], "89": [560, 619, 622, 923, 980, 982, 1135, 1160], "98": [560, 619, 622, 923, 961, 963, 1110, 1114, 1135, 1136, 1139, 1163], "26": [560, 619, 622, 872, 874, 877, 910, 917, 923, 935, 937, 961, 963, 980, 982, 1135, 1136, 1139, 1163], "21": [560, 619, 622, 798, 816, 923, 935, 937, 961, 963, 995, 1006, 1009, 1135, 1136, 1139, 1163], "34": [560, 619, 622, 771, 774], "24": [560, 619, 622, 771, 774, 798, 816, 872, 874, 877, 923, 935, 937, 961, 963, 1135, 1136, 1139, 1163], "51": [560, 619, 622], "27": [560, 619, 622, 631, 771, 774, 910, 922, 923, 961, 963, 1135, 1136, 1139, 1163], "74": [560, 619, 622], "59": [560, 619, 622], "416": [560, 627], "122": [560, 631], "368": [560, 631], "670": [560, 631], "202": [560, 631, 755, 758], "548": [560, 631], "1490": [560, 631], "dividend": [560, 635, 751, 754], "divisor": [560, 635, 751, 754, 872, 874, 877, 879, 881, 892, 894, 1135, 1156, 1159, 1164, 1167, 1214, 1215, 1216], "gauss": [560, 644, 647], "exponenti": [560, 577, 644, 647, 648, 651, 708, 711, 747, 750], "logarithm": [560, 577, 648, 651, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 923, 934, 970], "72": [560, 648, 872, 874, 877, 923, 961, 963, 1135, 1136, 1139, 1163], "accur": [560, 652, 655], "fdlibm": [560, 652, 655], "compliant": [560, 652, 655, 716, 719, 720, 723, 1135, 1140, 1143, 1144, 1147, 1148, 1151], "greatest": [560, 638, 656, 659, 660, 663], "out_i": [560, 672, 675, 676, 679, 680, 683], "threshold": [560, 728, 729], "exce": [560, 729], "y_i": [560, 735, 738], "expon": [560, 747, 750, 798, 863], "versu": [560, 747, 750], "odd": [560, 747, 750], "modulu": [560, 751, 754], "primarili": [560, 751, 754], "5654": [560, 755, 758], "034": [560, 755, 758], "433": [560, 755, 758], "343": [560, 755, 758], "44": [560, 755, 758, 771, 774, 775, 778, 923, 961, 963, 1110, 1114, 1135, 1136, 1139, 1163], "30": [560, 755, 758, 923, 961, 963, 1135, 1136, 1139, 1163, 1189, 1195], "81": [560, 755, 758, 775, 778, 1135, 1136, 1139, 1163], "527": [560, 755, 758], "301": [560, 755, 758], "indistinguish": [560, 771, 774], "infinit": [560, 771, 774], "83": [560, 771, 774], "32455532": [560, 771, 774], "89897949": [560, 771, 774], "50": [560, 771, 774, 923, 961, 963, 1110, 1113, 1135, 1136, 1139, 1163], "31": [560, 771, 774], "169": [560, 771, 774], "47": [560, 771, 774], "93": [560, 771, 774], "35": [560, 771, 774, 910, 922, 923, 929, 931, 1110, 1114, 1135, 1136, 1139, 1163], "09": [560, 775, 778, 910, 922], "61": [560, 775, 778, 995, 996, 999], "546": [560, 784], "842": [560, 784], "916": [560, 784, 995, 996, 999], "996": [560, 784], "328": [560, 784], "real": [560, 789], "462": [560, 789], "604": [560, 789], "984": [560, 789], "997": [560, 789, 1093, 1094, 1097], "decim": [560, 794, 797], "inspect": [798, 804, 1181, 1182], "downscal": [798, 810, 811, 813], "60": [798, 816, 923, 961, 963, 1135, 1136, 1139, 1163], "default_v": [798, 819], "catch_except": [798, 819], "rev": [798, 819], "with_cal": [798, 819], "arrang": [798, 820], "123": [798, 823], "mod": [798, 824], "max_freq": [798, 825], "num_band": [798, 825], "pad": [798, 825, 910, 911, 912, 913, 914, 915, 916, 917, 1011, 1021, 1024, 1067, 1070, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "fourier": [798, 825], "band": [798, 825], "linearli": [798, 825, 923, 971, 973], "oppos": [798, 825], "geometr": [798, 825], "seen_set": [798, 836], "local_set": [798, 836], "decrement": [798, 840], "is_arrai": 798, "allow_dupl": [798, 848], "forkserv": [798, 849], "spawn": [798, 849], "hot": [798, 851], "scatter": [798, 851, 854, 855], "overrid": [798, 851], "tmp_dr": [798, 859], "temporari": [798, 859], "min_denomin": [798, 862], "stabil": [798, 862, 863, 1124, 1125, 1128, 1130, 1133], "_min_denomin": [798, 862], "min_bas": [798, 863], "_min_bas": [798, 863, 1093, 1094, 1097, 1212, 1213], "100000023841858": [798, 866], "200000047683716": [798, 866], "299999952316284": [798, 866], "400000095367432": [798, 866], "599999904632568": [798, 866], "101": [798, 867], "unpack": [798, 870], "gradienttrack": [872, 873], "delta": [872, 874, 877], "cost": [872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1071, 1072, 1073, 1074], "ws": [872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902], "en": [872, 874, 877, 879, 881], "wikipedia": [872, 874, 877, 879, 881], "wiki": [872, 874, 877, 879, 881], "stochastic_gradient_desc": [872, 874, 877, 879, 881], "dc": [872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902], "dw": [872, 874, 877, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902], "averag": [872, 874, 877, 879, 881, 892, 894, 1071, 1072, 1073], "forget": [872, 874, 877, 879, 881, 892, 894, 1214, 1215, 1216], "004": [872, 874, 877], "009": [872, 874, 877], "86": [872, 874, 877], "28": [872, 874, 877, 910, 913, 916, 917, 923, 961, 963, 1135, 1136, 1139, 1163], "45": [872, 874, 877, 923, 961, 963, 1011, 1050, 1093, 1094, 1097, 1135, 1136, 1139, 1163], "0125": [872, 874, 877], "601": [872, 874, 877], "581": [872, 874, 877], "025": [872, 874, 877], "992": [872, 874, 877], "209": [872, 874, 877, 1115, 1116], "271": [872, 874, 877], "0717": [872, 874, 877], "142": [872, 874, 877], "182": [872, 874, 877], "624": [872, 874, 877, 1098, 1104, 1106], "06": [872, 874, 877], "02": [872, 874, 877], "744": [872, 874, 877], "626": [872, 874, 877], "65": [872, 874, 877, 923, 961, 963, 1135, 1136, 1139, 1163], "024": [872, 874, 877], "096": [872, 874, 877], "216": [872, 874, 877], "384": [872, 874, 877], "rate": [872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902, 1071, 1072, 1073, 1074, 1198, 1209, 1214, 1215, 1216, 1217, 1218, 1219], "ws_new": [872, 879, 881, 884, 886, 892, 894, 896, 898, 900, 902], "retain": [872, 883], "trust": [872, 892, 894, 1214, 1216], "decai": [872, 892, 894, 896, 898, 1214, 1216, 1217], "layerwis": [872, 896, 898, 1214, 1217], "stride": [910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "data_format": [910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "nwc": [910, 911, 912, 1198, 1199, 1200], "dilat": [910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "convolut": [910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "d_in": [910, 911, 912, 913, 914, 915, 916], "fw": [910, 911, 912, 913, 914, 915, 916, 917], "d_out": [910, 911, 912, 913, 914, 915, 916], "slide": [910, 911, 912, 913, 914, 915, 916, 917, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "ncw": [910, 911, 912, 1198, 1199, 1200], "wio": [910, 911], "output_shap": [910, 912, 914, 916, 1198, 1200, 1202, 1204], "nhwc": [910, 913, 914, 917, 1198, 1201, 1202, 1205], "fh": [910, 913, 914, 915, 916, 917], "nchw": [910, 913, 914, 917, 1198, 1201, 1202, 1205], "hwio": [910, 913], "unequ": [910, 913], "unsqueez": [910, 913, 917], "ndhwc": [910, 915, 916, 1198, 1203, 1204], "volum": [910, 915], "fd": [910, 915, 916], "ncdhw": [910, 915, 916, 1198, 1203, 1204], "dhwio": [910, 915], "256": [910, 916], "258": [910, 916], "128": [910, 916, 923, 961, 963], "depthwis": [910, 917, 1198, 1205], "333": [910, 917], "inp": [910, 917], "prob": [910, 918, 1098, 1099, 1198, 1206], "randomli": [910, 918, 1198, 1206], "bernoulli": [910, 918], "out_featur": [910, 918, 919], "incom": [910, 919], "outer_batch_shap": [910, 919], "inner_batch_shap": [910, 919], "in_featur": [910, 919], "cell": [910, 920, 1198, 1207], "num_queri": [910, 921, 922], "x_feat_dim": [910, 921], "num_kei": [910, 921, 922], "cont_feat_dim": [910, 921], "numhead": [910, 921], "feat_dim": [910, 921, 922], "out_feat_dim": [910, 921], "score": [910, 922], "04": [910, 922], "03": [910, 922, 1093, 1094, 1097], "08": [910, 922], "decomposit": [923, 924, 927, 967, 969, 974], "symmetr": [923, 924, 927, 938, 940, 941, 943, 992, 994], "u": [923, 924, 927, 974], "01e": [923, 924, 927], "93e": [923, 924, 927], "00": [923, 924, 927], "00e": [923, 924, 927], "1450000000": [923, 924, 927], "1070000000": [923, 924, 927], "425000000": [923, 924, 927], "vif": [923, 929, 931], "92": [923, 932], "293": [923, 932], "46997": [923, 932], "eigendecomposit": [923, 938, 940], "qlq\u1d40": [923, 938, 940], "orthogon": [923, 938, 940], "eig": [923, 938, 940], "eigenvalu": [923, 938, 940, 941, 943], "eigenvector": [923, 938, 940], "75": [923, 944, 961, 963], "prepend": [923, 947, 950], "singular": [923, 946, 955, 957, 964, 966, 974, 976, 977, 979], "toler": [923, 946, 955, 957, 964, 966], "largest_singular_valu": [923, 946, 955, 957, 964, 966], "array_lik": [923, 961, 963], "33": [923, 961, 963, 1093, 1094, 1097, 1135, 1136, 1139, 1163], "36": [923, 961, 963, 1135, 1136, 1139, 1163], "84": [923, 961, 963, 1135, 1136, 1139, 1163], "105": [923, 961, 963, 995, 996, 999], "112": [923, 961, 963, 1135, 1136, 1139, 1163], "104": [923, 961, 963, 1135, 1136, 1139, 1163], "120": [923, 961, 963], "moor": [923, 946, 964, 966], "penros": [923, 946, 964, 966], "pseudo": [923, 946, 964, 966], "orthonorm": [923, 967, 969, 974], "2d": [923, 934, 970, 1198, 1201, 1202, 1205], "logdet": [923, 934, 970], "coeffici": [923, 971, 973], "usvh": [923, 974], "vh": [923, 974], "hermitian": [923, 974], "et": [923, 974], "cetera": [923, 974], "adjoint": [923, 974], "reconstruct": [923, 974, 1115, 1116, 1122], "reconstructed_x": [923, 974], "contract": [923, 980, 982, 1135, 1136, 1139, 1163], "doubl": [923, 980, 982], "singleton": [923, 989, 991, 1011, 1051, 1054, 1110, 1112, 1135, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1164, 1167, 1168, 1169, 1172, 1173, 1176], "liter": [923, 989, 991], "manhattan": [923, 989, 991], "l2": [923, 989, 991], "euclidean": [923, 989, 991], "mathbf": [923, 992, 994], "mathbb": [923, 992, 994], "skew": [923, 992, 994], "entropi": [995, 996, 999, 1001, 1004, 1006, 1009], "predict": [995, 996, 999, 1001, 1004, 1006, 1009], "smooth": [995, 996, 999, 1001, 1004, 1006, 1009], "223": [995, 996, 999], "357": [995, 996, 999, 1006, 1009], "511": [995, 996, 999], "discret": [995, 1001, 1004], "3862944": [995, 1001, 1004], "35667497": [995, 1001, 1004], "spars": [995, 1006, 1009], "logit": [995, 1006, 1009], "793291": [995, 1006, 1009], "512926": [995, 1006, 1009], "before_1": [1011, 1021, 1024, 1067, 1070], "after_1": [1011, 1021, 1024, 1067, 1070], "before_n": [1011, 1021, 1024, 1067, 1070], "after_n": [1011, 1021, 1024, 1067, 1070], "insert": [1011, 1025, 1028, 1075, 1080, 1110, 1111], "manipulation_funct": [1011, 1025, 1028], "reorder": [1011, 1029, 1032], "permut": [1011, 1033, 1036, 1059, 1062], "repetit": [1011, 1037, 1040, 1063, 1066], "restor": [1011, 1045, 1048], "famili": [1011, 1055, 1058], "intxx": [1011, 1055, 1058], "floatxx": [1011, 1055, 1058], "fomaml_step": 1071, "inner_cost_fn": [1071, 1072, 1073], "outer_cost_fn": [1071, 1072, 1073], "inner_grad_step": [1071, 1072, 1073, 1074], "inner_learning_r": [1071, 1072, 1073, 1074], "inner_optimization_step": [1071, 1072, 1073, 1074], "inner_batch_fn": [1071, 1072, 1073], "outer_batch_fn": [1071, 1072, 1073], "average_across_step": [1071, 1072, 1073], "inner_v": [1071, 1072, 1073], "keep_inner_v": [1071, 1072, 1073], "outer_v": [1071, 1072, 1073], "keep_outer_v": [1071, 1072, 1073], "return_inner_v": [1071, 1072, 1073, 1074], "num_task": [1071, 1072, 1073, 1074], "maml": [1071, 1072, 1073], "recev": [1071, 1072, 1073], "0x7f59e2e9e430": [1071, 1072, 1073, 1074], "maml_step": 1071, "rece": [1071, 1073], "reptile_step": 1071, "cost_fn": [1071, 1074], "reptil": [1071, 1074], "receivng": [1071, 1074], "all_nested_indic": 1075, "include_nest": [1075, 1076], "_index": [1075, 1076, 1086], "_base": [1075, 1076, 1085, 1086], "copy_nest": 1075, "to_mut": [1075, 1077, 1087], "mutabl": [1075, 1077, 1087], "insert_into_nest_at_index": 1075, "insert_into_nest_at_indic": 1075, "map_nest_at_index": 1075, "map_nest_at_indic": 1075, "multi_index_nest": 1075, "nested_ani": 1075, "check_nest": [1075, 1085, 1086], "conditon": [1075, 1085, 1086], "nested_indices_wher": 1075, "stop_after_n_found": [1075, 1086], "_depth": [1075, 1087], "_tuple_check_fn": [1075, 1087], "_list_check_fn": [1075, 1087], "_dict_check_fn": [1075, 1087], "nested_multi_map": 1075, "nest0": [1075, 1088], "ivy_arrai": [1075, 1088], "funciton": [1075, 1088], "prune_nest_at_index": 1075, "prune_nest_at_indic": 1075, "set_nest_at_index": 1075, "set_nest_at_indic": 1075, "mini": [1093, 1094, 1097, 1212, 1213], "gamma": [1093, 1094, 1097], "beta": [1093, 1094, 1097], "0976": [1093, 1094, 1097], "3452": [1093, 1094, 1097], "2740": [1093, 1094, 1097], "1047": [1093, 1094, 1097], "5886": [1093, 1094, 1097], "2732": [1093, 1094, 1097], "7696": [1093, 1094, 1097], "7024": [1093, 1094, 1097], "2518": [1093, 1094, 1097], "58": [1093, 1094, 1097, 1115, 1116], "283": [1093, 1094, 1097], "585": [1093, 1094, 1097], "909": [1093, 1094, 1097], "628": [1093, 1094, 1097], "225": [1093, 1094, 1097], "425": [1093, 1094, 1097], "norm_idx": [1093, 1094, 1097], "228": [1093, 1094, 1097], "0285": [1093, 1094, 1097], "199": [1093, 1094, 1097], "204": [1093, 1094, 1097], "population_s": [1098, 1099], "num_sampl": [1098, 1099], "draw": [1098, 1099, 1103, 1104, 1106], "unnorm": [1098, 1099], "drawn": [1098, 1099, 1100, 1101, 1103, 1104, 1106], "home": [1098, 1099, 1103], "uniformli": [1098, 1100, 1101, 1104, 1106], "highest": [1098, 1100, 1101], "parameter": [1098, 1103, 1104, 1106], "6444774682897879": [1098, 1103], "811": [1098, 1103], "508": [1098, 1103], "564": [1098, 1103], "7268672": [1098, 1103], "968": [1098, 1103], "175": [1098, 1103, 1115, 1116], "064": [1098, 1103], "40935726": [1098, 1103], "556": [1098, 1103], "26431865": [1098, 1104, 1106], "475": [1098, 1104, 1106], "878": [1098, 1104, 1106], "861": [1098, 1104, 1106], "89150229": [1098, 1104, 1106], "89629126": [1098, 1104, 1106], "94198485": [1098, 1104, 1106], "91405606": [1098, 1104, 1106], "72848724": [1098, 1104, 1106], "7550739": [1098, 1104, 1106], "00109": [1098, 1104, 1106], "occurr": [1110, 1111, 1112, 1115, 1116], "yield": [1110, 1114], "43": [1110, 1114], "x_j": [1115, 1116, 1117, 1121, 1123], "impli": [1115, 1116, 1117, 1121, 1123], "inverse_indic": [1115, 1116, 1122], "aggreg": [1115, 1116], "fourth": [1115, 1116], "607": [1115, 1116], "735": [1115, 1116], "667": [1115, 1116], "381": [1115, 1116], "857": [1115, 1116], "0396": [1115, 1116], "166": [1115, 1116], "828": [1115, 1116], "144": [1115, 1116], "40501155": [1115, 1116], "77361575": [1115, 1116], "97776199": [1115, 1116], "36831157": [1115, 1116], "89148434": [1115, 1116], "9512272": [1115, 1116], "67542176": [1115, 1116], "41985657": [1115, 1116], "23478023": [1115, 1116], "1141": [1115, 1116], "8101": [1115, 1116], "9298": [1115, 1116], "8460": [1115, 1116], "2119": [1115, 1116], "3519": [1115, 1116], "6252": [1115, 1116], "4033": [1115, 1116], "7443": [1115, 1116], "2577": [1115, 1116], "3707": [1115, 1116], "0545": [1115, 1116], "3238": [1115, 1116], "5944": [1115, 1116], "0775": [1115, 1116], "4327": [1115, 1116], "176": [1115, 1116], "889": [1115, 1116], "763": [1115, 1116], "071": [1115, 1116], "262": [1115, 1116], "456": [1115, 1116], "114": [1115, 1116], "349": [1115, 1116], "615": [1115, 1116], "594": [1115, 1116], "335": [1115, 1116], "212": [1115, 1116], "457": [1115, 1116], "827": [1115, 1116], "set_funct": [1115, 1117, 1121], "ascend": [1124, 1125, 1128], "einstein": [1135, 1136, 1139, 1163], "summat": [1135, 1136, 1139, 1163], "seq": [1135, 1136, 1139, 1163], "jk": [1135, 1136, 1139, 1163], "ik": [1135, 1136, 1139, 1163], "126": [1135, 1136, 1139, 1163], "510": [1135, 1136, 1139, 1163], "99": [1135, 1136, 1139, 1163], "108": [1135, 1136, 1139, 1163], "117": [1135, 1136, 1139, 1163], "sentinel": [1135, 1140, 1143, 1148, 1151], "unsign": [1135, 1152, 1155, 1160], "degre": [1135, 1156, 1159, 1164, 1167], "bessel": [1135, 1156, 1159, 1164, 1167], "8164966": [1135, 1156, 1159], "varianc": [1135, 1164, 1167], "unbias": [1135, 1164, 1167], "simplicit": [1168, 1169, 1172], "autom": 1177, "grow": 1177, "ai": 1177, "got": 1177, "colab": 1177, "sharp": 1177, "weekli": 1177, "event": 1177, "immedi": 1177, "favorit": 1177, "jax_concat": 1177, "tf_concat": 1177, "np_concat": 1177, "mx_concat": 1177, "torch_concat": 1177, "prompt": 1177, "get_devic": 1177, "reduce_prod": 1177, "gradient_imag": 1177, "linalg": 1177, "bilinear_resampl": 1177, "stack_imag": 1177, "neural_net": 1177, "ecosystem": [1177, 1183], "popular": [1177, 1183], "acceler": 1177, "articl": 1177, "lenton2021ivi": 1177, "inter": 1177, "lenton": 1177, "daniel": 1177, "pardo": 1177, "fabio": 1177, "falck": 1177, "fabian": 1177, "jame": 1177, "stephen": 1177, "clark": 1177, "ronald": 1177, "journal": 1177, "arxiv": 1177, "preprint": 1177, "2102": 1177, "02886": 1177, "2021": 1177, "add_array_spec": 1180, "fn_array_spec": 1180, "geglu": 1184, "native_modul": [1187, 1188], "native_module_class": [1187, 1188], "firstlayersiren": 1189, "kaimingnorm": [1189, 1193], "negative_slop": 1189, "Ones": 1189, "siren": 1189, "w0": [1189, 1195], "filter_s": [1198, 1199, 1200], "1d": [1198, 1199, 1200], "conv1dtranspos": 1198, "filter_shap": [1198, 1201, 1202, 1203, 1204, 1205], "conv2dtranspos": 1198, "conv3dtranspos": 1198, "depthwiseconv2d": 1198, "num_channel": [1198, 1205], "bernoul": [1198, 1206], "num_lay": [1198, 1207], "return_sequ": [1198, 1207], "return_st": [1198, 1207], "get_initial_st": [1198, 1207], "dens": [1198, 1208], "multiheadattent": 1198, "query_dim": [1198, 1209], "head_dim": [1198, 1209], "dropout_r": [1198, 1209], "context_dim": [1198, 1209], "with_to_q_fn": [1198, 1209], "with_to_kv_fn": [1198, 1209], "with_to_out_fn": [1198, 1209], "build_mod": [1198, 1209, 1210, 1211], "on_init": [1198, 1209, 1210, 1211], "__call__": [1198, 1209, 1210, 1211], "store_var": [1210, 1211], "arg_stateful_idx": [1210, 1211], "kwarg_stateful_idx": [1210, 1211], "fallback_to_non_compil": [1210, 1211, 1214, 1218], "with_partial_v": [1210, 1211], "initialz": [1210, 1211], "from_cal": [1210, 1211], "check_submod_ret": [1210, 1211], "get_mod_kei": [1210, 1211], "top_mod": [1210, 1211], "mod_depth": [1210, 1211], "mod_height": [1210, 1211], "mod_with_top_mod_key_chain": [1210, 1211], "save_weight": [1210, 1211], "weights_path": [1210, 1211], "show_mod_in_top_mod": [1210, 1211], "upper_depth": [1210, 1211], "lower_depth": [1210, 1211], "show_structur": [1210, 1211], "show_v_in_top_v": [1210, 1211], "sub_mod": [1210, 1211], "show_v": [1210, 1211], "track_submod_call_ord": [1210, 1211], "track_submod_ret": [1210, 1211], "v_with_top_v_key_chain": [1210, 1211], "layernorm": 1212, "normalized_shap": [1212, 1213], "elementwise_affin": [1212, 1213], "trail": [1212, 1213], "affin": [1212, 1213], "0001": [1214, 1215, 1216], "init_on_first_step": [1214, 1218], "ignore_miss": [1214, 1218], "overriden": [1214, 1218], "sgd": 1214, "stochast": [1214, 1219], "sub_modul": [1220, 1221]}, "objects": {"ivy.array": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "array_methods"], [129, 0, 0, "-", "conversions"], [134, 0, 0, "-", "creation"], [136, 0, 0, "-", "data_type"], [138, 0, 0, "-", "device"], [140, 0, 0, "-", "elementwise"], [142, 0, 0, "-", "general"], [144, 0, 0, "-", "gradients"], [146, 0, 0, "-", "image"], [148, 0, 0, "-", "layers"], [150, 0, 0, "-", "linear_algebra"], [152, 0, 0, "-", "losses"], [154, 0, 0, "-", "manipulation"], [156, 0, 0, "-", "norms"], [158, 0, 0, "-", "random"], [160, 0, 0, "-", "searching"], [162, 0, 0, "-", "set"], [164, 0, 0, "-", "sorting"], [166, 0, 0, "-", "statistical"], [168, 0, 0, "-", "utility"], [170, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[1, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[1, 2, 1, "", "softplus"]], "ivy.array.array_methods": [[562, 3, 1, "", "abs"], [570, 3, 1, "", "acos"], [571, 3, 1, "", "acosh"], [875, 3, 1, "", "adam_step"], [708, 3, 1, "", "add"], [8, 3, 1, "", "add_ivy_array_instance_methods"], [1170, 3, 1, "", "all"], [800, 3, 1, "", "all_equal"], [1174, 3, 1, "", "any"], [1126, 3, 1, "", "argsort"], [437, 3, 1, "", "asarray"], [580, 3, 1, "", "asin"], [584, 3, 1, "", "asinh"], [595, 3, 1, "", "atan"], [592, 3, 1, "", "atan2"], [596, 3, 1, "", "atanh"], [997, 3, 1, "", "binary_cross_entropy"], [600, 3, 1, "", "bitwise_and"], [604, 3, 1, "", "bitwise_invert"], [608, 3, 1, "", "bitwise_left_shift"], [612, 3, 1, "", "bitwise_or"], [616, 3, 1, "", "bitwise_right_shift"], [620, 3, 1, "", "bitwise_xor"], [483, 3, 1, "", "can_cast"], [624, 3, 1, "", "ceil"], [925, 3, 1, "", "cholesky"], [1013, 3, 1, "", "clip"], [1018, 3, 1, "", "concat"], [1022, 3, 1, "", "constant_pad"], [628, 3, 1, "", "cos"], [632, 3, 1, "", "cosh"], [930, 3, 1, "", "cross"], [1002, 3, 1, "", "cross_entropy"], [970, 3, 1, "", "det"], [936, 3, 1, "", "diagonal"], [660, 3, 1, "", "divide"], [939, 3, 1, "", "eigh"], [942, 3, 1, "", "eigvalsh"], [1137, 3, 1, "", "einsum"], [441, 3, 1, "", "empty_like"], [668, 3, 1, "", "equal"], [645, 3, 1, "", "erf"], [708, 3, 1, "", "exp"], [1026, 3, 1, "", "expand_dims"], [653, 3, 1, "", "expm1"], [1030, 3, 1, "", "flip"], [660, 3, 1, "", "floor"], [661, 3, 1, "", "floor_divide"], [445, 3, 1, "", "from_dlpack"], [449, 3, 1, "", "full_like"], [828, 3, 1, "", "gather_nd"], [668, 3, 1, "", "greater"], [669, 3, 1, "", "greater_equal"], [964, 3, 1, "", "inv"], [673, 3, 1, "", "isfinite"], [677, 3, 1, "", "isinf"], [681, 3, 1, "", "isnan"], [1095, 3, 1, "", "layer_norm"], [685, 3, 1, "", "less"], [689, 3, 1, "", "less_equal"], [693, 3, 1, "", "log"], [697, 3, 1, "", "log10"], [701, 3, 1, "", "log1p"], [705, 3, 1, "", "log2"], [709, 3, 1, "", "logaddexp"], [713, 3, 1, "", "logical_and"], [717, 3, 1, "", "logical_not"], [721, 3, 1, "", "logical_or"], [725, 3, 1, "", "logical_xor"], [948, 3, 1, "", "matmul"], [952, 3, 1, "", "matrix_norm"], [956, 3, 1, "", "matrix_rank"], [959, 3, 1, "", "matrix_transpose"], [1141, 3, 1, "", "max"], [1145, 3, 1, "", "mean"], [454, 3, 1, "", "meshgrid"], [1149, 3, 1, "", "min"], [731, 3, 1, "", "multiply"], [457, 3, 1, "", "native_array"], [736, 3, 1, "", "negative"], [740, 3, 1, "", "not_equal"], [461, 3, 1, "", "ones_like"], [962, 3, 1, "", "outer"], [1034, 3, 1, "", "permute_dims"], [965, 3, 1, "", "pinv"], [744, 3, 1, "", "positive"], [748, 3, 1, "", "pow"], [1153, 3, 1, "", "prod"], [968, 3, 1, "", "qr"], [752, 3, 1, "", "remainder"], [1038, 3, 1, "", "repeat"], [1042, 3, 1, "", "reshape"], [1046, 3, 1, "", "roll"], [756, 3, 1, "", "round"], [760, 3, 1, "", "sign"], [764, 3, 1, "", "sin"], [768, 3, 1, "", "sinh"], [426, 3, 1, "", "softplus"], [972, 3, 1, "", "solve"], [1131, 3, 1, "", "sort"], [1007, 3, 1, "", "sparse_cross_entropy"], [772, 3, 1, "", "sqrt"], [776, 3, 1, "", "square"], [1052, 3, 1, "", "squeeze"], [1056, 3, 1, "", "stack"], [1157, 3, 1, "", "std"], [781, 3, 1, "", "subtract"], [1161, 3, 1, "", "sum"], [977, 3, 1, "", "svd"], [978, 3, 1, "", "svdvals"], [1060, 3, 1, "", "swapaxes"], [786, 3, 1, "", "tan"], [791, 3, 1, "", "tanh"], [981, 3, 1, "", "tensordot"], [1064, 3, 1, "", "tile"], [984, 3, 1, "", "trace"], [464, 3, 1, "", "tril"], [467, 3, 1, "", "triu"], [795, 3, 1, "", "trunc"], [1119, 3, 1, "", "unique_counts"], [1165, 3, 1, "", "var"], [987, 3, 1, "", "vecdot"], [990, 3, 1, "", "vector_norm"], [993, 3, 1, "", "vector_to_skew_symmetric_matrix"], [1068, 3, 1, "", "zero_pad"], [471, 3, 1, "", "zeros_like"]], "ivy.array.conversions": [[130, 3, 1, "", "args_to_ivy"], [131, 3, 1, "", "args_to_native"], [132, 3, 1, "", "to_ivy"], [133, 3, 1, "", "to_native"]], "ivy.array.creation": [[135, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[135, 2, 1, "", "asarray"], [135, 2, 1, "", "empty_like"], [135, 2, 1, "", "from_dlpack"], [135, 2, 1, "", "full_like"], [135, 2, 1, "", "meshgrid"], [135, 2, 1, "", "native_array"], [135, 2, 1, "", "ones_like"], [135, 2, 1, "", "tril"], [135, 2, 1, "", "triu"], [135, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[137, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[137, 2, 1, "", "can_cast"]], "ivy.array.device": [[139, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[141, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[141, 2, 1, "", "abs"], [141, 2, 1, "", "acos"], [141, 2, 1, "", "acosh"], [141, 2, 1, "", "add"], [141, 2, 1, "", "asin"], [141, 2, 1, "", "asinh"], [141, 2, 1, "", "atan"], [141, 2, 1, "", "atan2"], [141, 2, 1, "", "atanh"], [141, 2, 1, "", "bitwise_and"], [141, 2, 1, "", "bitwise_invert"], [141, 2, 1, "", "bitwise_left_shift"], [141, 2, 1, "", "bitwise_or"], [141, 2, 1, "", "bitwise_right_shift"], [141, 2, 1, "", "bitwise_xor"], [141, 2, 1, "", "ceil"], [141, 2, 1, "", "cos"], [141, 2, 1, "", "cosh"], [141, 2, 1, "", "divide"], [141, 2, 1, "", "equal"], [141, 2, 1, "", "erf"], [141, 2, 1, "", "exp"], [141, 2, 1, "", "expm1"], [141, 2, 1, "", "floor"], [141, 2, 1, "", "floor_divide"], [141, 2, 1, "", "greater"], [141, 2, 1, "", "greater_equal"], [141, 2, 1, "", "isfinite"], [141, 2, 1, "", "isinf"], [141, 2, 1, "", "isnan"], [141, 2, 1, "", "less"], [141, 2, 1, "", "less_equal"], [141, 2, 1, "", "log"], [141, 2, 1, "", "log10"], [141, 2, 1, "", "log1p"], [141, 2, 1, "", "log2"], [141, 2, 1, "", "logaddexp"], [141, 2, 1, "", "logical_and"], [141, 2, 1, "", "logical_not"], [141, 2, 1, "", "logical_or"], [141, 2, 1, "", "logical_xor"], [141, 2, 1, "", "multiply"], [141, 2, 1, "", "negative"], [141, 2, 1, "", "not_equal"], [141, 2, 1, "", "positive"], [141, 2, 1, "", "pow"], [141, 2, 1, "", "remainder"], [141, 2, 1, "", "round"], [141, 2, 1, "", "sign"], [141, 2, 1, "", "sin"], [141, 2, 1, "", "sinh"], [141, 2, 1, "", "sqrt"], [141, 2, 1, "", "square"], [141, 2, 1, "", "subtract"], [141, 2, 1, "", "tan"], [141, 2, 1, "", "tanh"], [141, 2, 1, "", "trunc"]], "ivy.array.general": [[143, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[143, 2, 1, "", "all_equal"], [143, 2, 1, "", "gather_nd"]], "ivy.array.gradients": [[145, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[145, 2, 1, "", "adam_step"]], "ivy.array.image": [[147, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[149, 1, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[151, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[151, 2, 1, "", "cholesky"], [151, 2, 1, "", "cross"], [151, 2, 1, "", "det"], [151, 2, 1, "", "diagonal"], [151, 2, 1, "", "eigh"], [151, 2, 1, "", "eigvalsh"], [151, 2, 1, "", "inv"], [151, 2, 1, "", "matmul"], [151, 2, 1, "", "matrix_norm"], [151, 2, 1, "", "matrix_rank"], [151, 2, 1, "", "matrix_transpose"], [151, 2, 1, "", "outer"], [151, 2, 1, "", "pinv"], [151, 2, 1, "", "qr"], [151, 2, 1, "", "solve"], [151, 2, 1, "", "svd"], [151, 2, 1, "", "svdvals"], [151, 2, 1, "", "tensordot"], [151, 2, 1, "", "trace"], [151, 2, 1, "", "vecdot"], [151, 2, 1, "", "vector_norm"], [151, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[153, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[153, 2, 1, "", "binary_cross_entropy"], [153, 2, 1, "", "cross_entropy"], [153, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[155, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[155, 2, 1, "", "clip"], [155, 2, 1, "", "concat"], [155, 2, 1, "", "constant_pad"], [155, 2, 1, "", "expand_dims"], [155, 2, 1, "", "flip"], [155, 2, 1, "", "permute_dims"], [155, 2, 1, "", "repeat"], [155, 2, 1, "", "reshape"], [155, 2, 1, "", "roll"], [155, 2, 1, "", "squeeze"], [155, 2, 1, "", "stack"], [155, 2, 1, "", "swapaxes"], [155, 2, 1, "", "tile"], [155, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[157, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[157, 2, 1, "", "layer_norm"]], "ivy.array.random": [[159, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[161, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[163, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[163, 2, 1, "", "unique_counts"]], "ivy.array.sorting": [[165, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[165, 2, 1, "", "argsort"], [165, 2, 1, "", "sort"]], "ivy.array.statistical": [[167, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[167, 2, 1, "", "einsum"], [167, 2, 1, "", "max"], [167, 2, 1, "", "mean"], [167, 2, 1, "", "min"], [167, 2, 1, "", "prod"], [167, 2, 1, "", "std"], [167, 2, 1, "", "sum"], [167, 2, 1, "", "var"]], "ivy.array.utility": [[169, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[169, 2, 1, "", "all"], [169, 2, 1, "", "any"]], "ivy.array.wrapping": [[171, 3, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[172, 0, 0, "-", "backend_handler"], [409, 0, 0, "-", "func_wrapper"], [1180, 0, 0, "-", "inspection"], [1223, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[172, 1, 1, "", "ContextManager"], [174, 3, 1, "", "choose_random_backend"], [175, 3, 1, "", "clear_backend_stack"], [176, 3, 1, "", "current_backend"], [177, 3, 1, "", "get_backend"], [178, 3, 1, "", "set_backend"], [179, 3, 1, "", "try_import_ivy_jax"], [180, 3, 1, "", "try_import_ivy_mxnet"], [181, 3, 1, "", "try_import_ivy_numpy"], [182, 3, 1, "", "try_import_ivy_tf"], [183, 3, 1, "", "try_import_ivy_torch"], [184, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[172, 2, 1, "", "__init__"]], "ivy.container": [[189, 0, 0, "-", "activations"], [191, 0, 0, "-", "base"], [193, 0, 0, "-", "container"], [196, 0, 0, "-", "container_methods"], [332, 0, 0, "-", "creation"], [334, 0, 0, "-", "data_type"], [336, 0, 0, "-", "device"], [338, 0, 0, "-", "elementwise"], [340, 0, 0, "-", "general"], [342, 0, 0, "-", "gradients"], [344, 0, 0, "-", "image"], [346, 0, 0, "-", "layers"], [348, 0, 0, "-", "linear_algebra"], [350, 0, 0, "-", "losses"], [352, 0, 0, "-", "manipulation"], [354, 0, 0, "-", "norms"], [356, 0, 0, "-", "random"], [358, 0, 0, "-", "searching"], [360, 0, 0, "-", "set"], [362, 0, 0, "-", "sorting"], [364, 0, 0, "-", "statistical"], [366, 0, 0, "-", "utility"], [368, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[190, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[190, 2, 1, "", "softplus"], [190, 2, 1, "", "static_softplus"]], "ivy.container.base": [[192, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "__setitem__"], [192, 2, 1, "", "all_false"], [192, 2, 1, "", "all_key_chains"], [192, 2, 1, "", "all_true"], [192, 2, 1, "", "arrays_as_lists"], [192, 2, 1, "", "as_arrays"], [192, 2, 1, "", "as_bools"], [192, 2, 1, "", "as_ones"], [192, 2, 1, "", "as_random_uniform"], [192, 2, 1, "", "as_variables"], [192, 2, 1, "", "as_zeros"], [192, 2, 1, "", "assert_contains_sub_container"], [192, 2, 1, "", "assert_contains_sub_structure"], [192, 2, 1, "", "assert_identical"], [192, 2, 1, "", "assert_identical_structure"], [192, 2, 1, "", "at_key_chain"], [192, 2, 1, "", "at_key_chains"], [192, 2, 1, "", "at_keys"], [192, 2, 1, "", "clip"], [192, 2, 1, "", "combine"], [192, 2, 1, "", "common_key_chains"], [192, 4, 1, "", "config"], [192, 2, 1, "", "contains_sub_container"], [192, 2, 1, "", "contains_sub_structure"], [192, 2, 1, "", "copy"], [192, 2, 1, "", "create_if_absent"], [192, 2, 1, "", "cutoff_at_depth"], [192, 2, 1, "", "cutoff_at_height"], [192, 2, 1, "", "deep_copy"], [192, 4, 1, "", "dev"], [192, 2, 1, "", "dev_clone"], [192, 2, 1, "", "dev_dist"], [192, 4, 1, "", "dev_str"], [192, 2, 1, "", "diff"], [192, 2, 1, "", "dtype"], [192, 2, 1, "", "einops_rearrange"], [192, 2, 1, "", "einops_reduce"], [192, 2, 1, "", "einops_repeat"], [192, 2, 1, "", "find_sub_container"], [192, 2, 1, "", "find_sub_structure"], [192, 2, 1, "", "flatten_key_chain"], [192, 2, 1, "", "flatten_key_chains"], [192, 2, 1, "", "format_key_chains"], [192, 2, 1, "", "from_disk_as_hdf5"], [192, 2, 1, "", "from_disk_as_json"], [192, 2, 1, "", "from_disk_as_pickled"], [192, 2, 1, "", "from_flat_list"], [192, 2, 1, "", "from_numpy"], [192, 2, 1, "", "gather"], [192, 2, 1, "", "gather_nd"], [192, 2, 1, "", "h5_file_size"], [192, 2, 1, "", "handle_inplace"], [192, 2, 1, "", "has_key"], [192, 2, 1, "", "has_key_chain"], [192, 2, 1, "", "has_nans"], [192, 2, 1, "", "identical"], [192, 2, 1, "", "identical_array_shapes"], [192, 2, 1, "", "identical_configs"], [192, 2, 1, "", "identical_structure"], [192, 2, 1, "", "if_exists"], [192, 2, 1, "", "inplace_update"], [192, 4, 1, "", "ivy"], [192, 2, 1, "", "key_chains_containing"], [192, 2, 1, "", "list_join"], [192, 2, 1, "", "list_stack"], [192, 2, 1, "", "map"], [192, 2, 1, "", "map_conts"], [192, 2, 1, "", "matrix_norm"], [192, 4, 1, "", "max_depth"], [192, 2, 1, "", "maximum"], [192, 2, 1, "", "minimum"], [192, 2, 1, "", "multi_map"], [192, 2, 1, "", "multi_map_in_static_method"], [192, 2, 1, "", "num_arrays"], [192, 2, 1, "", "overwrite_at_key_chain"], [192, 2, 1, "", "overwrite_at_key_chains"], [192, 2, 1, "", "prune_empty"], [192, 2, 1, "", "prune_key_chain"], [192, 2, 1, "", "prune_key_chains"], [192, 2, 1, "", "prune_key_from_key_chains"], [192, 2, 1, "", "prune_keys"], [192, 2, 1, "", "prune_keys_from_key_chains"], [192, 2, 1, "", "reduce"], [192, 2, 1, "", "remove_key_length_limit"], [192, 2, 1, "", "remove_print_limit"], [192, 2, 1, "", "reshape_like"], [192, 2, 1, "", "restructure"], [192, 2, 1, "", "restructure_key_chains"], [192, 2, 1, "", "set_at_key_chain"], [192, 2, 1, "", "set_at_key_chains"], [192, 2, 1, "", "set_at_keys"], [192, 2, 1, "", "set_framework"], [192, 2, 1, "", "set_ivy_backend"], [192, 4, 1, "", "shape"], [192, 4, 1, "", "shapes"], [192, 2, 1, "", "show"], [192, 2, 1, "", "show_sub_container"], [192, 2, 1, "", "shuffle"], [192, 2, 1, "", "shuffle_h5_file"], [192, 2, 1, "", "size_ordered_arrays"], [192, 2, 1, "", "slice_keys"], [192, 2, 1, "", "slice_via_key"], [192, 2, 1, "", "sort_by_key"], [192, 2, 1, "", "split"], [192, 2, 1, "", "stop_gradients"], [192, 2, 1, "", "structural_diff"], [192, 2, 1, "", "to_device"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_disk_as_hdf5"], [192, 2, 1, "", "to_disk_as_json"], [192, 2, 1, "", "to_disk_as_pickled"], [192, 2, 1, "", "to_flat_list"], [192, 2, 1, "", "to_iterator"], [192, 2, 1, "", "to_iterator_keys"], [192, 2, 1, "", "to_iterator_values"], [192, 2, 1, "", "to_ivy"], [192, 2, 1, "", "to_jsonable"], [192, 2, 1, "", "to_list"], [192, 2, 1, "", "to_multi_dev"], [192, 2, 1, "", "to_native"], [192, 2, 1, "", "to_numpy"], [192, 2, 1, "", "to_raw"], [192, 2, 1, "", "trim_key"], [192, 2, 1, "", "try_kc"], [192, 2, 1, "", "unify"], [192, 2, 1, "", "unstack"], [192, 2, 1, "", "update_config"], [192, 2, 1, "", "vector_norm"], [192, 2, 1, "", "with_default_key_color"], [192, 2, 1, "", "with_entries_as_lists"], [192, 2, 1, "", "with_ivy_backend"], [192, 2, 1, "", "with_key_length_limit"], [192, 2, 1, "", "with_print_indent"], [192, 2, 1, "", "with_print_limit"], [192, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[194, 1, 1, "", "Container"], [195, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[194, 2, 1, "", "__add__"], [194, 2, 1, "", "__init__"], [194, 2, 1, "", "__radd__"], [194, 2, 1, "", "arange"], [194, 2, 1, "", "arg_info"], [194, 2, 1, "", "arg_names"], [194, 2, 1, "", "argmax"], [194, 2, 1, "", "argmin"], [194, 2, 1, "", "array"], [194, 2, 1, "", "array_equal"], [194, 2, 1, "", "arrays_equal"], [194, 2, 1, "", "as_ivy_dev"], [194, 2, 1, "", "as_ivy_dtype"], [194, 2, 1, "", "as_native_dev"], [194, 2, 1, "", "as_native_dtype"], [194, 2, 1, "", "asarray"], [194, 2, 1, "", "assert_supports_inplace"], [194, 2, 1, "", "astype"], [194, 2, 1, "", "broadcast_arrays"], [194, 2, 1, "", "broadcast_to"], [194, 2, 1, "", "cache_fn"], [194, 2, 1, "", "clear_mem_on_dev"], [194, 2, 1, "", "clip_matrix_norm"], [194, 2, 1, "", "closest_valid_dtype"], [194, 2, 1, "", "container_types"], [194, 2, 1, "", "conv1d"], [194, 2, 1, "", "conv1d_transpose"], [194, 2, 1, "", "conv2d"], [194, 2, 1, "", "conv2d_transpose"], [194, 2, 1, "", "conv3d"], [194, 2, 1, "", "conv3d_transpose"], [194, 2, 1, "", "copy_array"], [194, 2, 1, "", "cross"], [194, 2, 1, "", "cumprod"], [194, 2, 1, "", "cumsum"], [194, 2, 1, "", "current_backend"], [194, 2, 1, "", "current_backend_str"], [194, 2, 1, "", "default"], [194, 2, 1, "", "default_device"], [194, 2, 1, "", "default_dtype"], [194, 2, 1, "", "default_float_dtype"], [194, 2, 1, "", "default_int_dtype"], [194, 2, 1, "", "depthwise_conv2d"], [194, 2, 1, "", "det"], [194, 2, 1, "", "dev_clone_array"], [194, 2, 1, "", "dev_clone_iter"], [194, 2, 1, "", "dev_clone_nest"], [194, 2, 1, "", "dev_dist_array"], [194, 2, 1, "", "dev_dist_iter"], [194, 2, 1, "", "dev_dist_nest"], [194, 2, 1, "", "dev_unify"], [194, 2, 1, "", "dev_unify_array"], [194, 2, 1, "", "dev_unify_iter"], [194, 2, 1, "", "dev_unify_nest"], [194, 2, 1, "", "dev_util"], [194, 2, 1, "", "diagonal"], [194, 2, 1, "", "dropout"], [194, 2, 1, "", "dtype_bits"], [194, 2, 1, "", "eigh"], [194, 2, 1, "", "eigvalsh"], [194, 2, 1, "", "empty"], [194, 2, 1, "", "empty_like"], [194, 2, 1, "", "execute_with_gradients"], [194, 2, 1, "", "exists"], [194, 2, 1, "", "eye"], [194, 2, 1, "", "finfo"], [194, 2, 1, "", "floormod"], [194, 2, 1, "", "fourier_encode"], [194, 2, 1, "", "from_dlpack"], [194, 2, 1, "", "full"], [194, 2, 1, "", "full_like"], [194, 2, 1, "", "function_supported_dtypes"], [194, 2, 1, "", "function_unsupported_dtypes"], [194, 2, 1, "", "gelu"], [194, 2, 1, "", "get_all_arrays_in_memory"], [194, 2, 1, "", "get_all_ivy_arrays_on_dev"], [194, 2, 1, "", "get_min_base"], [194, 2, 1, "", "get_min_denominator"], [194, 2, 1, "", "get_num_dims"], [194, 2, 1, "", "get_referrers_recursive"], [194, 2, 1, "", "gpu_is_available"], [194, 2, 1, "", "handle_nestable"], [194, 2, 1, "", "handle_out_argument"], [194, 2, 1, "", "iinfo"], [194, 2, 1, "", "indices_where"], [194, 2, 1, "", "infer_device"], [194, 2, 1, "", "infer_dtype"], [194, 2, 1, "", "inplace_arrays_supported"], [194, 2, 1, "", "inplace_decrement"], [194, 2, 1, "", "inplace_increment"], [194, 2, 1, "", "inplace_variables_supported"], [194, 2, 1, "", "inputs_to_native_arrays"], [194, 2, 1, "", "inv"], [194, 2, 1, "", "invalid_dtype"], [194, 2, 1, "", "is_float_dtype"], [194, 2, 1, "", "is_int_dtype"], [194, 2, 1, "", "is_ivy_container"], [194, 2, 1, "", "leaky_relu"], [194, 2, 1, "", "linear"], [194, 2, 1, "", "linspace"], [194, 2, 1, "", "logspace"], [194, 2, 1, "", "lstm_update"], [194, 2, 1, "", "match_kwargs"], [194, 2, 1, "", "matrix_power"], [194, 2, 1, "", "matrix_rank"], [194, 2, 1, "", "matrix_transpose"], [194, 2, 1, "", "meshgrid"], [194, 2, 1, "", "multi_head_attention"], [194, 2, 1, "", "multinomial"], [194, 2, 1, "", "multiprocessing"], [194, 2, 1, "", "native_array"], [194, 2, 1, "", "nonzero"], [194, 2, 1, "", "num_arrays_in_memory"], [194, 2, 1, "", "num_cpu_cores"], [194, 2, 1, "", "num_gpus"], [194, 2, 1, "", "num_ivy_arrays_on_dev"], [194, 2, 1, "", "one_hot"], [194, 2, 1, "", "ones"], [194, 2, 1, "", "ones_like"], [194, 2, 1, "", "outer"], [194, 2, 1, "", "outputs_to_ivy_arrays"], [194, 2, 1, "", "percent_used_mem_on_dev"], [194, 2, 1, "", "pinv"], [194, 2, 1, "", "print_all_arrays_in_memory"], [194, 2, 1, "", "print_all_ivy_arrays_on_dev"], [194, 2, 1, "", "promote_types"], [194, 2, 1, "", "qr"], [194, 2, 1, "", "queue_timeout"], [194, 2, 1, "", "randint"], [194, 2, 1, "", "random_normal"], [194, 2, 1, "", "relu"], [194, 2, 1, "", "result_type"], [194, 2, 1, "", "scaled_dot_product_attention"], [194, 2, 1, "", "scatter_flat"], [194, 2, 1, "", "scatter_nd"], [194, 2, 1, "", "seed"], [194, 2, 1, "", "set_default_device"], [194, 2, 1, "", "set_default_dtype"], [194, 2, 1, "", "set_default_float_dtype"], [194, 2, 1, "", "set_default_int_dtype"], [194, 2, 1, "", "set_min_base"], [194, 2, 1, "", "set_min_denominator"], [194, 2, 1, "", "set_queue_timeout"], [194, 2, 1, "", "set_split_factor"], [194, 2, 1, "", "set_tmp_dir"], [194, 2, 1, "", "set_with_grads"], [194, 2, 1, "", "shape_to_tuple"], [194, 2, 1, "", "sigmoid"], [194, 2, 1, "", "slogdet"], [194, 2, 1, "", "softmax"], [194, 2, 1, "", "solve"], [194, 2, 1, "", "split_factor"], [194, 2, 1, "", "split_func_call"], [194, 2, 1, "", "stable_divide"], [194, 2, 1, "", "stable_pow"], [194, 2, 1, "", "static_acos"], [194, 2, 1, "", "static_acosh"], [194, 2, 1, "", "static_all"], [194, 2, 1, "", "static_any"], [194, 2, 1, "", "static_arange"], [194, 2, 1, "", "static_arg_info"], [194, 2, 1, "", "static_arg_names"], [194, 2, 1, "", "static_argmax"], [194, 2, 1, "", "static_argmin"], [194, 2, 1, "", "static_array"], [194, 2, 1, "", "static_array_equal"], [194, 2, 1, "", "static_arrays_equal"], [194, 2, 1, "", "static_as_ivy_dev"], [194, 2, 1, "", "static_as_ivy_dtype"], [194, 2, 1, "", "static_as_native_dev"], [194, 2, 1, "", "static_as_native_dtype"], [194, 2, 1, "", "static_asarray"], [194, 2, 1, "", "static_asin"], [194, 2, 1, "", "static_asinh"], [194, 2, 1, "", "static_assert_supports_inplace"], [194, 2, 1, "", "static_astype"], [194, 2, 1, "", "static_atan"], [194, 2, 1, "", "static_atan2"], [194, 2, 1, "", "static_atanh"], [194, 2, 1, "", "static_bitwise_and"], [194, 2, 1, "", "static_bitwise_invert"], [194, 2, 1, "", "static_bitwise_left_shift"], [194, 2, 1, "", "static_bitwise_or"], [194, 2, 1, "", "static_bitwise_right_shift"], [194, 2, 1, "", "static_bitwise_xor"], [194, 2, 1, "", "static_broadcast_arrays"], [194, 2, 1, "", "static_broadcast_to"], [194, 2, 1, "", "static_cache_fn"], [194, 2, 1, "", "static_ceil"], [194, 2, 1, "", "static_clear_mem_on_dev"], [194, 2, 1, "", "static_clip_matrix_norm"], [194, 2, 1, "", "static_clip_vector_norm"], [194, 2, 1, "", "static_closest_valid_dtype"], [194, 2, 1, "", "static_concat"], [194, 2, 1, "", "static_constant_pad"], [194, 2, 1, "", "static_container_types"], [194, 2, 1, "", "static_conv1d"], [194, 2, 1, "", "static_conv1d_transpose"], [194, 2, 1, "", "static_conv2d"], [194, 2, 1, "", "static_conv2d_transpose"], [194, 2, 1, "", "static_conv3d"], [194, 2, 1, "", "static_conv3d_transpose"], [194, 2, 1, "", "static_copy_array"], [194, 2, 1, "", "static_cos"], [194, 2, 1, "", "static_cosh"], [194, 2, 1, "", "static_cross"], [194, 2, 1, "", "static_cumprod"], [194, 2, 1, "", "static_cumsum"], [194, 2, 1, "", "static_current_backend"], [194, 2, 1, "", "static_current_backend_str"], [194, 2, 1, "", "static_default"], [194, 2, 1, "", "static_default_device"], [194, 2, 1, "", "static_default_dtype"], [194, 2, 1, "", "static_default_float_dtype"], [194, 2, 1, "", "static_default_int_dtype"], [194, 2, 1, "", "static_depthwise_conv2d"], [194, 2, 1, "", "static_det"], [194, 2, 1, "", "static_dev"], [194, 2, 1, "", "static_dev_clone"], [194, 2, 1, "", "static_dev_clone_array"], [194, 2, 1, "", "static_dev_clone_iter"], [194, 2, 1, "", "static_dev_clone_nest"], [194, 2, 1, "", "static_dev_dist"], [194, 2, 1, "", "static_dev_dist_array"], [194, 2, 1, "", "static_dev_dist_iter"], [194, 2, 1, "", "static_dev_dist_nest"], [194, 2, 1, "", "static_dev_unify"], [194, 2, 1, "", "static_dev_unify_array"], [194, 2, 1, "", "static_dev_unify_iter"], [194, 2, 1, "", "static_dev_unify_nest"], [194, 2, 1, "", "static_dev_util"], [194, 2, 1, "", "static_diagonal"], [194, 2, 1, "", "static_dropout"], [194, 2, 1, "", "static_dtype"], [194, 2, 1, "", "static_dtype_bits"], [194, 2, 1, "", "static_eigh"], [194, 2, 1, "", "static_eigvalsh"], [194, 2, 1, "", "static_einops_rearrange"], [194, 2, 1, "", "static_einops_reduce"], [194, 2, 1, "", "static_einops_repeat"], [194, 2, 1, "", "static_einsum"], [194, 2, 1, "", "static_empty"], [194, 2, 1, "", "static_empty_like"], [194, 2, 1, "", "static_equal"], [194, 2, 1, "", "static_erf"], [194, 2, 1, "", "static_execute_with_gradients"], [194, 2, 1, "", "static_exists"], [194, 2, 1, "", "static_exp"], [194, 2, 1, "", "static_expand_dims"], [194, 2, 1, "", "static_expm1"], [194, 2, 1, "", "static_eye"], [194, 2, 1, "", "static_finfo"], [194, 2, 1, "", "static_flip"], [194, 2, 1, "", "static_floor"], [194, 2, 1, "", "static_floor_divide"], [194, 2, 1, "", "static_floormod"], [194, 2, 1, "", "static_fourier_encode"], [194, 2, 1, "", "static_from_dlpack"], [194, 2, 1, "", "static_full"], [194, 2, 1, "", "static_full_like"], [194, 2, 1, "", "static_function_supported_dtypes"], [194, 2, 1, "", "static_function_unsupported_dtypes"], [194, 2, 1, "", "static_gather"], [194, 2, 1, "", "static_gelu"], [194, 2, 1, "", "static_get_all_arrays_in_memory"], [194, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [194, 2, 1, "", "static_get_min_base"], [194, 2, 1, "", "static_get_min_denominator"], [194, 2, 1, "", "static_get_num_dims"], [194, 2, 1, "", "static_get_referrers_recursive"], [194, 2, 1, "", "static_gpu_is_available"], [194, 2, 1, "", "static_greater"], [194, 2, 1, "", "static_greater_equal"], [194, 2, 1, "", "static_handle_nestable"], [194, 2, 1, "", "static_handle_out_argument"], [194, 2, 1, "", "static_has_nans"], [194, 2, 1, "", "static_iinfo"], [194, 2, 1, "", "static_indices_where"], [194, 2, 1, "", "static_infer_device"], [194, 2, 1, "", "static_infer_dtype"], [194, 2, 1, "", "static_inplace_arrays_supported"], [194, 2, 1, "", "static_inplace_decrement"], [194, 2, 1, "", "static_inplace_increment"], [194, 2, 1, "", "static_inplace_update"], [194, 2, 1, "", "static_inplace_variables_supported"], [194, 2, 1, "", "static_inputs_to_native_arrays"], [194, 2, 1, "", "static_inv"], [194, 2, 1, "", "static_invalid_dtype"], [194, 2, 1, "", "static_is_array"], [194, 2, 1, "", "static_is_float_dtype"], [194, 2, 1, "", "static_is_int_dtype"], [194, 2, 1, "", "static_is_ivy_array"], [194, 2, 1, "", "static_is_ivy_container"], [194, 2, 1, "", "static_is_native_array"], [194, 2, 1, "", "static_isfinite"], [194, 2, 1, "", "static_isinf"], [194, 2, 1, "", "static_isnan"], [194, 2, 1, "", "static_layer_norm"], [194, 2, 1, "", "static_leaky_relu"], [194, 2, 1, "", "static_less"], [194, 2, 1, "", "static_less_equal"], [194, 2, 1, "", "static_linear"], [194, 2, 1, "", "static_linspace"], [194, 2, 1, "", "static_log"], [194, 2, 1, "", "static_log10"], [194, 2, 1, "", "static_log1p"], [194, 2, 1, "", "static_log2"], [194, 2, 1, "", "static_logaddexp"], [194, 2, 1, "", "static_logical_and"], [194, 2, 1, "", "static_logical_not"], [194, 2, 1, "", "static_logical_or"], [194, 2, 1, "", "static_logical_xor"], [194, 2, 1, "", "static_logspace"], [194, 2, 1, "", "static_lstm_update"], [194, 2, 1, "", "static_match_kwargs"], [194, 2, 1, "", "static_matmul"], [194, 2, 1, "", "static_matrix_norm"], [194, 2, 1, "", "static_matrix_power"], [194, 2, 1, "", "static_matrix_rank"], [194, 2, 1, "", "static_matrix_transpose"], [194, 2, 1, "", "static_max"], [194, 2, 1, "", "static_maximum"], [194, 2, 1, "", "static_mean"], [194, 2, 1, "", "static_meshgrid"], [194, 2, 1, "", "static_min"], [194, 2, 1, "", "static_minimum"], [194, 2, 1, "", "static_multi_head_attention"], [194, 2, 1, "", "static_multinomial"], [194, 2, 1, "", "static_multiprocessing"], [194, 2, 1, "", "static_native_array"], [194, 2, 1, "", "static_negative"], [194, 2, 1, "", "static_nonzero"], [194, 2, 1, "", "static_not_equal"], [194, 2, 1, "", "static_num_arrays_in_memory"], [194, 2, 1, "", "static_num_cpu_cores"], [194, 2, 1, "", "static_num_gpus"], [194, 2, 1, "", "static_num_ivy_arrays_on_dev"], [194, 2, 1, "", "static_one_hot"], [194, 2, 1, "", "static_ones"], [194, 2, 1, "", "static_ones_like"], [194, 2, 1, "", "static_outer"], [194, 2, 1, "", "static_outputs_to_ivy_arrays"], [194, 2, 1, "", "static_percent_used_mem_on_dev"], [194, 2, 1, "", "static_permute_dims"], [194, 2, 1, "", "static_pinv"], [194, 2, 1, "", "static_positive"], [194, 2, 1, "", "static_pow"], [194, 2, 1, "", "static_print_all_arrays_in_memory"], [194, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [194, 2, 1, "", "static_prod"], [194, 2, 1, "", "static_promote_types"], [194, 2, 1, "", "static_qr"], [194, 2, 1, "", "static_queue_timeout"], [194, 2, 1, "", "static_random_normal"], [194, 2, 1, "", "static_relu"], [194, 2, 1, "", "static_remainder"], [194, 2, 1, "", "static_repeat"], [194, 2, 1, "", "static_reshape"], [194, 2, 1, "", "static_result_type"], [194, 2, 1, "", "static_round"], [194, 2, 1, "", "static_scaled_dot_product_attention"], [194, 2, 1, "", "static_scatter_flat"], [194, 2, 1, "", "static_scatter_nd"], [194, 2, 1, "", "static_seed"], [194, 2, 1, "", "static_set_default_device"], [194, 2, 1, "", "static_set_default_dtype"], [194, 2, 1, "", "static_set_default_float_dtype"], [194, 2, 1, "", "static_set_default_int_dtype"], [194, 2, 1, "", "static_set_min_base"], [194, 2, 1, "", "static_set_min_denominator"], [194, 2, 1, "", "static_set_queue_timeout"], [194, 2, 1, "", "static_set_split_factor"], [194, 2, 1, "", "static_set_tmp_dir"], [194, 2, 1, "", "static_set_with_grads"], [194, 2, 1, "", "static_shape"], [194, 2, 1, "", "static_shape_to_tuple"], [194, 2, 1, "", "static_shuffle"], [194, 2, 1, "", "static_sigmoid"], [194, 2, 1, "", "static_sign"], [194, 2, 1, "", "static_sin"], [194, 2, 1, "", "static_sinh"], [194, 2, 1, "", "static_slogdet"], [194, 2, 1, "", "static_softmax"], [194, 2, 1, "", "static_solve"], [194, 2, 1, "", "static_split"], [194, 2, 1, "", "static_split_factor"], [194, 2, 1, "", "static_split_func_call"], [194, 2, 1, "", "static_sqrt"], [194, 2, 1, "", "static_square"], [194, 2, 1, "", "static_squeeze"], [194, 2, 1, "", "static_stable_divide"], [194, 2, 1, "", "static_stable_pow"], [194, 2, 1, "", "static_stack"], [194, 2, 1, "", "static_std"], [194, 2, 1, "", "static_stop_gradient"], [194, 2, 1, "", "static_sum"], [194, 2, 1, "", "static_supports_inplace"], [194, 2, 1, "", "static_svd"], [194, 2, 1, "", "static_svdvals"], [194, 2, 1, "", "static_swapaxes"], [194, 2, 1, "", "static_tensordot"], [194, 2, 1, "", "static_tile"], [194, 2, 1, "", "static_tmp_dir"], [194, 2, 1, "", "static_to_device"], [194, 2, 1, "", "static_to_list"], [194, 2, 1, "", "static_to_native_arrays_and_back"], [194, 2, 1, "", "static_to_numpy"], [194, 2, 1, "", "static_to_scalar"], [194, 2, 1, "", "static_total_mem_on_dev"], [194, 2, 1, "", "static_tpu_is_available"], [194, 2, 1, "", "static_trace"], [194, 2, 1, "", "static_tril"], [194, 2, 1, "", "static_triu"], [194, 2, 1, "", "static_trunc"], [194, 2, 1, "", "static_try_else_none"], [194, 2, 1, "", "static_type_promote_arrays"], [194, 2, 1, "", "static_unique_all"], [194, 2, 1, "", "static_unique_inverse"], [194, 2, 1, "", "static_unique_values"], [194, 2, 1, "", "static_unset_default_device"], [194, 2, 1, "", "static_unset_default_dtype"], [194, 2, 1, "", "static_unset_default_float_dtype"], [194, 2, 1, "", "static_unset_default_int_dtype"], [194, 2, 1, "", "static_unset_with_grads"], [194, 2, 1, "", "static_unstack"], [194, 2, 1, "", "static_used_mem_on_dev"], [194, 2, 1, "", "static_valid_dtype"], [194, 2, 1, "", "static_value_is_nan"], [194, 2, 1, "", "static_var"], [194, 2, 1, "", "static_variable"], [194, 2, 1, "", "static_variable_data"], [194, 2, 1, "", "static_vecdot"], [194, 2, 1, "", "static_vector_norm"], [194, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [194, 2, 1, "", "static_where"], [194, 2, 1, "", "static_with_grads"], [194, 2, 1, "", "static_zero_pad"], [194, 2, 1, "", "static_zeros"], [194, 2, 1, "", "static_zeros_like"], [194, 2, 1, "", "stop_gradient"], [194, 2, 1, "", "supports_inplace"], [194, 2, 1, "", "svd"], [194, 2, 1, "", "svdvals"], [194, 2, 1, "", "tensordot"], [194, 2, 1, "", "tmp_dir"], [194, 2, 1, "", "to_native_arrays_and_back"], [194, 2, 1, "", "to_scalar"], [194, 2, 1, "", "total_mem_on_dev"], [194, 2, 1, "", "tpu_is_available"], [194, 2, 1, "", "trace"], [194, 2, 1, "", "tril"], [194, 2, 1, "", "triu"], [194, 2, 1, "", "try_else_none"], [194, 2, 1, "", "type_promote_arrays"], [194, 2, 1, "", "unique_all"], [194, 2, 1, "", "unique_inverse"], [194, 2, 1, "", "unique_values"], [194, 2, 1, "", "unset_default_device"], [194, 2, 1, "", "unset_default_dtype"], [194, 2, 1, "", "unset_default_float_dtype"], [194, 2, 1, "", "unset_default_int_dtype"], [194, 2, 1, "", "unset_with_grads"], [194, 2, 1, "", "used_mem_on_dev"], [194, 2, 1, "", "valid_dtype"], [194, 2, 1, "", "value_is_nan"], [194, 2, 1, "", "variable"], [194, 2, 1, "", "variable_data"], [194, 2, 1, "", "vecdot"], [194, 2, 1, "", "vector_to_skew_symmetric_matrix"], [194, 2, 1, "", "where"], [194, 2, 1, "", "with_grads"], [194, 2, 1, "", "zeros"], [194, 2, 1, "", "zeros_like"]], "ivy.container.container.MultiDevContainer": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "at_dev"], [195, 2, 1, "", "at_devs"]], "ivy.container.container_methods": [[196, 3, 1, "", "__add__"], [196, 3, 1, "", "__init__"], [196, 3, 1, "", "__radd__"], [563, 3, 1, "", "abs"], [570, 3, 1, "", "acos"], [634, 3, 1, "", "acosh"], [876, 3, 1, "", "adam_step"], [880, 3, 1, "", "adam_update"], [708, 3, 1, "", "add"], [203, 3, 1, "", "add_ivy_container_instance_methods"], [1171, 3, 1, "", "all"], [801, 3, 1, "", "all_equal"], [1175, 3, 1, "", "any"], [1127, 3, 1, "", "argsort"], [581, 3, 1, "", "asin"], [585, 3, 1, "", "asinh"], [210, 3, 1, "", "at_dev"], [211, 3, 1, "", "at_devs"], [595, 3, 1, "", "atan"], [593, 3, 1, "", "atan2"], [793, 3, 1, "", "atanh"], [998, 3, 1, "", "binary_cross_entropy"], [601, 3, 1, "", "bitwise_and"], [605, 3, 1, "", "bitwise_invert"], [609, 3, 1, "", "bitwise_left_shift"], [613, 3, 1, "", "bitwise_or"], [617, 3, 1, "", "bitwise_right_shift"], [621, 3, 1, "", "bitwise_xor"], [484, 3, 1, "", "can_cast"], [625, 3, 1, "", "ceil"], [926, 3, 1, "", "cholesky"], [1014, 3, 1, "", "clip"], [812, 3, 1, "", "clip_vector_norm"], [1019, 3, 1, "", "concat"], [1023, 3, 1, "", "constant_pad"], [634, 3, 1, "", "cos"], [633, 3, 1, "", "cosh"], [1003, 3, 1, "", "cross_entropy"], [660, 3, 1, "", "divide"], [1163, 3, 1, "", "einsum"], [668, 3, 1, "", "equal"], [646, 3, 1, "", "erf"], [708, 3, 1, "", "exp"], [1027, 3, 1, "", "expand_dims"], [654, 3, 1, "", "expm1"], [1031, 3, 1, "", "flip"], [660, 3, 1, "", "floor"], [662, 3, 1, "", "floor_divide"], [829, 3, 1, "", "gather_nd"], [885, 3, 1, "", "gradient_descent_update"], [668, 3, 1, "", "greater"], [670, 3, 1, "", "greater_equal"], [889, 3, 1, "", "is_variable"], [674, 3, 1, "", "isfinite"], [678, 3, 1, "", "isinf"], [682, 3, 1, "", "isnan"], [893, 3, 1, "", "lamb_update"], [897, 3, 1, "", "lars_update"], [1096, 3, 1, "", "layer_norm"], [686, 3, 1, "", "less"], [690, 3, 1, "", "less_equal"], [694, 3, 1, "", "log"], [698, 3, 1, "", "log10"], [702, 3, 1, "", "log1p"], [706, 3, 1, "", "log2"], [710, 3, 1, "", "logaddexp"], [714, 3, 1, "", "logical_and"], [718, 3, 1, "", "logical_not"], [722, 3, 1, "", "logical_or"], [726, 3, 1, "", "logical_xor"], [949, 3, 1, "", "matmul"], [1142, 3, 1, "", "max"], [1146, 3, 1, "", "mean"], [1150, 3, 1, "", "min"], [732, 3, 1, "", "multiply"], [737, 3, 1, "", "negative"], [741, 3, 1, "", "not_equal"], [901, 3, 1, "", "optimizer_update"], [1035, 3, 1, "", "permute_dims"], [745, 3, 1, "", "positive"], [749, 3, 1, "", "pow"], [1154, 3, 1, "", "prod"], [1105, 3, 1, "", "random_uniform"], [753, 3, 1, "", "remainder"], [1039, 3, 1, "", "repeat"], [1043, 3, 1, "", "reshape"], [1047, 3, 1, "", "roll"], [757, 3, 1, "", "round"], [761, 3, 1, "", "sign"], [765, 3, 1, "", "sin"], [769, 3, 1, "", "sinh"], [427, 3, 1, "", "softplus"], [1132, 3, 1, "", "sort"], [1008, 3, 1, "", "sparse_cross_entropy"], [773, 3, 1, "", "sqrt"], [777, 3, 1, "", "square"], [1053, 3, 1, "", "squeeze"], [1057, 3, 1, "", "stack"], [565, 3, 1, "", "static_abs"], [878, 3, 1, "", "static_adam_step"], [882, 3, 1, "", "static_adam_update"], [708, 3, 1, "", "static_add"], [803, 3, 1, "", "static_all_equal"], [1129, 3, 1, "", "static_argsort"], [1000, 3, 1, "", "static_binary_cross_entropy"], [486, 3, 1, "", "static_can_cast"], [928, 3, 1, "", "static_cholesky"], [1016, 3, 1, "", "static_clip"], [1005, 3, 1, "", "static_cross_entropy"], [660, 3, 1, "", "static_divide"], [831, 3, 1, "", "static_gather_nd"], [887, 3, 1, "", "static_gradient_descent_update"], [891, 3, 1, "", "static_is_variable"], [895, 3, 1, "", "static_lamb_update"], [899, 3, 1, "", "static_lars_update"], [734, 3, 1, "", "static_multiply"], [903, 3, 1, "", "static_optimizer_update"], [1102, 3, 1, "", "static_randint"], [1107, 3, 1, "", "static_random_uniform"], [1049, 3, 1, "", "static_roll"], [429, 3, 1, "", "static_softplus"], [1134, 3, 1, "", "static_sort"], [1010, 3, 1, "", "static_sparse_cross_entropy"], [780, 3, 1, "", "static_subtract"], [793, 3, 1, "", "static_tan"], [790, 3, 1, "", "static_tanh"], [1118, 3, 1, "", "static_unique_counts"], [1158, 3, 1, "", "std"], [782, 3, 1, "", "subtract"], [1162, 3, 1, "", "sum"], [1061, 3, 1, "", "swapaxes"], [793, 3, 1, "", "tan"], [792, 3, 1, "", "tanh"], [1065, 3, 1, "", "tile"], [796, 3, 1, "", "trunc"], [1120, 3, 1, "", "unique_counts"], [1166, 3, 1, "", "var"], [1069, 3, 1, "", "zero_pad"]], "ivy.container.creation": [[333, 1, 1, "", "ContainerWithCreation"]], "ivy.container.data_type": [[335, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[335, 2, 1, "", "can_cast"], [335, 2, 1, "", "static_can_cast"]], "ivy.container.device": [[337, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[339, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[339, 2, 1, "", "abs"], [339, 2, 1, "", "acos"], [339, 2, 1, "", "acosh"], [339, 2, 1, "", "add"], [339, 2, 1, "", "asin"], [339, 2, 1, "", "asinh"], [339, 2, 1, "", "atan"], [339, 2, 1, "", "atan2"], [339, 2, 1, "", "atanh"], [339, 2, 1, "", "bitwise_and"], [339, 2, 1, "", "bitwise_invert"], [339, 2, 1, "", "bitwise_left_shift"], [339, 2, 1, "", "bitwise_or"], [339, 2, 1, "", "bitwise_right_shift"], [339, 2, 1, "", "bitwise_xor"], [339, 2, 1, "", "ceil"], [339, 2, 1, "", "cos"], [339, 2, 1, "", "cosh"], [339, 2, 1, "", "divide"], [339, 2, 1, "", "equal"], [339, 2, 1, "", "erf"], [339, 2, 1, "", "exp"], [339, 2, 1, "", "expm1"], [339, 2, 1, "", "floor"], [339, 2, 1, "", "floor_divide"], [339, 2, 1, "", "greater"], [339, 2, 1, "", "greater_equal"], [339, 2, 1, "", "isfinite"], [339, 2, 1, "", "isinf"], [339, 2, 1, "", "isnan"], [339, 2, 1, "", "less"], [339, 2, 1, "", "less_equal"], [339, 2, 1, "", "log"], [339, 2, 1, "", "log10"], [339, 2, 1, "", "log1p"], [339, 2, 1, "", "log2"], [339, 2, 1, "", "logaddexp"], [339, 2, 1, "", "logical_and"], [339, 2, 1, "", "logical_not"], [339, 2, 1, "", "logical_or"], [339, 2, 1, "", "logical_xor"], [339, 2, 1, "", "multiply"], [339, 2, 1, "", "negative"], [339, 2, 1, "", "not_equal"], [339, 2, 1, "", "positive"], [339, 2, 1, "", "pow"], [339, 2, 1, "", "remainder"], [339, 2, 1, "", "round"], [339, 2, 1, "", "sign"], [339, 2, 1, "", "sin"], [339, 2, 1, "", "sinh"], [339, 2, 1, "", "sqrt"], [339, 2, 1, "", "square"], [339, 2, 1, "", "static_abs"], [339, 2, 1, "", "static_add"], [339, 2, 1, "", "static_divide"], [339, 2, 1, "", "static_multiply"], [339, 2, 1, "", "static_subtract"], [339, 2, 1, "", "static_tan"], [339, 2, 1, "", "static_tanh"], [339, 2, 1, "", "subtract"], [339, 2, 1, "", "tan"], [339, 2, 1, "", "tanh"], [339, 2, 1, "", "trunc"]], "ivy.container.general": [[341, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[341, 2, 1, "", "all_equal"], [341, 2, 1, "", "clip_vector_norm"], [341, 2, 1, "", "gather_nd"], [341, 2, 1, "", "static_all_equal"], [341, 2, 1, "", "static_gather_nd"]], "ivy.container.gradients": [[343, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[343, 2, 1, "", "adam_step"], [343, 2, 1, "", "adam_update"], [343, 2, 1, "", "gradient_descent_update"], [343, 2, 1, "", "is_variable"], [343, 2, 1, "", "lamb_update"], [343, 2, 1, "", "lars_update"], [343, 2, 1, "", "optimizer_update"], [343, 2, 1, "", "static_adam_step"], [343, 2, 1, "", "static_adam_update"], [343, 2, 1, "", "static_gradient_descent_update"], [343, 2, 1, "", "static_is_variable"], [343, 2, 1, "", "static_lamb_update"], [343, 2, 1, "", "static_lars_update"], [343, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[345, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[347, 1, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[349, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[349, 2, 1, "", "cholesky"], [349, 2, 1, "", "matmul"], [349, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[351, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[351, 2, 1, "", "binary_cross_entropy"], [351, 2, 1, "", "cross_entropy"], [351, 2, 1, "", "sparse_cross_entropy"], [351, 2, 1, "", "static_binary_cross_entropy"], [351, 2, 1, "", "static_cross_entropy"], [351, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[353, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[353, 2, 1, "", "clip"], [353, 2, 1, "", "concat"], [353, 2, 1, "", "constant_pad"], [353, 2, 1, "", "expand_dims"], [353, 2, 1, "", "flip"], [353, 2, 1, "", "permute_dims"], [353, 2, 1, "", "repeat"], [353, 2, 1, "", "reshape"], [353, 2, 1, "", "roll"], [353, 2, 1, "", "squeeze"], [353, 2, 1, "", "stack"], [353, 2, 1, "", "static_clip"], [353, 2, 1, "", "static_roll"], [353, 2, 1, "", "swapaxes"], [353, 2, 1, "", "tile"], [353, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[355, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[355, 2, 1, "", "layer_norm"]], "ivy.container.random": [[357, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[357, 2, 1, "", "random_uniform"], [357, 2, 1, "", "static_randint"], [357, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[359, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[361, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[361, 2, 1, "", "static_unique_counts"], [361, 2, 1, "", "unique_counts"]], "ivy.container.sorting": [[363, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[363, 2, 1, "", "argsort"], [363, 2, 1, "", "sort"], [363, 2, 1, "", "static_argsort"], [363, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[365, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[365, 2, 1, "", "einsum"], [365, 2, 1, "", "max"], [365, 2, 1, "", "mean"], [365, 2, 1, "", "min"], [365, 2, 1, "", "prod"], [365, 2, 1, "", "std"], [365, 2, 1, "", "sum"], [365, 2, 1, "", "var"]], "ivy.container.utility": [[367, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[367, 2, 1, "", "all"], [367, 2, 1, "", "any"]], "ivy.container.wrapping": [[369, 3, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[410, 3, 1, "", "handle_nestable"], [411, 3, 1, "", "handle_out_argument"], [412, 3, 1, "", "infer_device"], [413, 3, 1, "", "infer_dtype"], [414, 3, 1, "", "inputs_to_ivy_arrays"], [415, 3, 1, "", "inputs_to_native_arrays"], [416, 3, 1, "", "outputs_to_ivy_arrays"], [417, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[419, 0, 0, "-", "activations"], [431, 0, 0, "-", "compilation"], [433, 0, 0, "-", "constants"], [434, 0, 0, "-", "creation"], [473, 0, 0, "-", "data_type"], [510, 0, 0, "-", "device"], [560, 0, 0, "-", "elementwise"], [798, 0, 0, "-", "general"], [872, 0, 0, "-", "gradients"], [910, 0, 0, "-", "layers"], [923, 0, 0, "-", "linear_algebra"], [995, 0, 0, "-", "losses"], [1011, 0, 0, "-", "manipulation"], [1071, 0, 0, "-", "meta"], [1075, 0, 0, "-", "nest"], [1093, 0, 0, "-", "norms"], [1098, 0, 0, "-", "random"], [1110, 0, 0, "-", "searching"], [1115, 0, 0, "-", "set"], [1124, 0, 0, "-", "sorting"], [1135, 0, 0, "-", "statistical"], [1168, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[420, 3, 1, "", "gelu"], [421, 3, 1, "", "leaky_relu"], [422, 3, 1, "", "relu"], [423, 3, 1, "", "sigmoid"], [424, 3, 1, "", "softmax"], [428, 3, 1, "", "softplus"], [430, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[432, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[433, 5, 1, "", "e"], [433, 5, 1, "", "inf"], [433, 5, 1, "", "nan"], [433, 5, 1, "", "newaxis"], [433, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[435, 3, 1, "", "arange"], [434, 3, 1, "", "array"], [438, 3, 1, "", "asarray"], [439, 3, 1, "", "empty"], [442, 3, 1, "", "empty_like"], [443, 3, 1, "", "eye"], [446, 3, 1, "", "from_dlpack"], [447, 3, 1, "", "full"], [450, 3, 1, "", "full_like"], [451, 3, 1, "", "linspace"], [452, 3, 1, "", "logspace"], [455, 3, 1, "", "meshgrid"], [458, 3, 1, "", "native_array"], [459, 3, 1, "", "ones"], [462, 3, 1, "", "ones_like"], [465, 3, 1, "", "tril"], [468, 3, 1, "", "triu"], [469, 3, 1, "", "zeros"], [472, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[473, 1, 1, "", "DefaultDtype"], [473, 1, 1, "", "DefaultFloatDtype"], [473, 1, 1, "", "DefaultIntDtype"], [477, 3, 1, "", "as_ivy_dtype"], [478, 3, 1, "", "as_native_dtype"], [479, 3, 1, "", "astype"], [480, 3, 1, "", "broadcast_arrays"], [481, 3, 1, "", "broadcast_to"], [485, 3, 1, "", "can_cast"], [487, 3, 1, "", "closest_valid_dtype"], [488, 3, 1, "", "default_dtype"], [489, 3, 1, "", "default_float_dtype"], [490, 3, 1, "", "default_int_dtype"], [491, 3, 1, "", "dtype"], [492, 3, 1, "", "dtype_bits"], [493, 3, 1, "", "finfo"], [494, 3, 1, "", "function_supported_dtypes"], [495, 3, 1, "", "function_unsupported_dtypes"], [496, 3, 1, "", "iinfo"], [497, 3, 1, "", "invalid_dtype"], [498, 3, 1, "", "is_float_dtype"], [499, 3, 1, "", "is_int_dtype"], [500, 3, 1, "", "promote_types"], [501, 3, 1, "", "result_type"], [502, 3, 1, "", "set_default_dtype"], [503, 3, 1, "", "set_default_float_dtype"], [504, 3, 1, "", "set_default_int_dtype"], [505, 3, 1, "", "type_promote_arrays"], [506, 3, 1, "", "unset_default_dtype"], [507, 3, 1, "", "unset_default_float_dtype"], [508, 3, 1, "", "unset_default_int_dtype"], [509, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[473, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[473, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[473, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[510, 1, 1, "", "DefaultDevice"], [512, 1, 1, "", "DevClonedItem"], [513, 1, 1, "", "DevClonedIter"], [514, 1, 1, "", "DevClonedNest"], [515, 1, 1, "", "DevDistItem"], [516, 1, 1, "", "DevDistIter"], [517, 1, 1, "", "DevDistNest"], [510, 1, 1, "", "DevManager"], [519, 1, 1, "", "DevMapper"], [520, 1, 1, "", "DevMapperMultiProc"], [510, 1, 1, "", "MultiDev"], [522, 1, 1, "", "MultiDevItem"], [523, 1, 1, "", "MultiDevIter"], [524, 1, 1, "", "MultiDevNest"], [525, 1, 1, "", "Profiler"], [526, 3, 1, "", "as_ivy_dev"], [527, 3, 1, "", "as_native_dev"], [528, 3, 1, "", "clear_mem_on_dev"], [529, 3, 1, "", "default_device"], [530, 3, 1, "", "dev"], [531, 3, 1, "", "dev_clone"], [532, 3, 1, "", "dev_clone_array"], [533, 3, 1, "", "dev_clone_iter"], [534, 3, 1, "", "dev_clone_nest"], [535, 3, 1, "", "dev_dist"], [536, 3, 1, "", "dev_dist_array"], [537, 3, 1, "", "dev_dist_iter"], [538, 3, 1, "", "dev_dist_nest"], [539, 3, 1, "", "dev_unify"], [540, 3, 1, "", "dev_unify_array"], [541, 3, 1, "", "dev_unify_iter"], [542, 3, 1, "", "dev_unify_nest"], [543, 3, 1, "", "dev_util"], [544, 3, 1, "", "get_all_ivy_arrays_on_dev"], [545, 3, 1, "", "gpu_is_available"], [546, 3, 1, "", "num_cpu_cores"], [547, 3, 1, "", "num_gpus"], [548, 3, 1, "", "num_ivy_arrays_on_dev"], [549, 3, 1, "", "percent_used_mem_on_dev"], [550, 3, 1, "", "print_all_ivy_arrays_on_dev"], [551, 3, 1, "", "set_default_device"], [552, 3, 1, "", "set_split_factor"], [553, 3, 1, "", "split_factor"], [554, 3, 1, "", "split_func_call"], [555, 3, 1, "", "to_device"], [556, 3, 1, "", "total_mem_on_dev"], [557, 3, 1, "", "tpu_is_available"], [558, 3, 1, "", "unset_default_device"], [559, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[510, 2, 1, "", "__enter__"], [510, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[510, 2, 1, "", "__init__"], [510, 2, 1, "", "da_tune_step"], [510, 4, 1, "", "dim_size"], [510, 2, 1, "", "ds_tune_step"], [510, 2, 1, "", "map"], [510, 2, 1, "", "repeated_config_check"], [510, 4, 1, "", "tune_step"], [510, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[519, 2, 1, "", "__init__"], [519, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[520, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[510, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[522, 2, 1, "", "__init__"], [522, 2, 1, "", "items"], [522, 2, 1, "", "keys"], [522, 4, 1, "", "shape"], [522, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[523, 2, 1, "", "__init__"], [523, 2, 1, "", "at_dev"], [523, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[524, 2, 1, "", "__init__"], [524, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[525, 2, 1, "", "__init__"], [525, 2, 1, "", "start"], [525, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[564, 3, 1, "", "abs"], [566, 3, 1, "", "acos"], [634, 3, 1, "", "acosh"], [574, 3, 1, "", "add"], [582, 3, 1, "", "asin"], [586, 3, 1, "", "asinh"], [587, 3, 1, "", "atan"], [594, 3, 1, "", "atan2"], [793, 3, 1, "", "atanh"], [602, 3, 1, "", "bitwise_and"], [606, 3, 1, "", "bitwise_invert"], [610, 3, 1, "", "bitwise_left_shift"], [614, 3, 1, "", "bitwise_or"], [618, 3, 1, "", "bitwise_right_shift"], [622, 3, 1, "", "bitwise_xor"], [626, 3, 1, "", "ceil"], [627, 3, 1, "", "cos"], [631, 3, 1, "", "cosh"], [635, 3, 1, "", "divide"], [640, 3, 1, "", "equal"], [647, 3, 1, "", "erf"], [648, 3, 1, "", "exp"], [655, 3, 1, "", "expm1"], [656, 3, 1, "", "floor"], [663, 3, 1, "", "floor_divide"], [664, 3, 1, "", "greater"], [671, 3, 1, "", "greater_equal"], [675, 3, 1, "", "isfinite"], [679, 3, 1, "", "isinf"], [683, 3, 1, "", "isnan"], [687, 3, 1, "", "less"], [691, 3, 1, "", "less_equal"], [695, 3, 1, "", "log"], [699, 3, 1, "", "log10"], [703, 3, 1, "", "log1p"], [707, 3, 1, "", "log2"], [711, 3, 1, "", "logaddexp"], [715, 3, 1, "", "logical_and"], [719, 3, 1, "", "logical_not"], [723, 3, 1, "", "logical_or"], [727, 3, 1, "", "logical_xor"], [728, 3, 1, "", "maximum"], [729, 3, 1, "", "minimum"], [733, 3, 1, "", "multiply"], [738, 3, 1, "", "negative"], [742, 3, 1, "", "not_equal"], [746, 3, 1, "", "positive"], [750, 3, 1, "", "pow"], [754, 3, 1, "", "remainder"], [758, 3, 1, "", "round"], [762, 3, 1, "", "sign"], [766, 3, 1, "", "sin"], [770, 3, 1, "", "sinh"], [774, 3, 1, "", "sqrt"], [778, 3, 1, "", "square"], [783, 3, 1, "", "subtract"], [784, 3, 1, "", "tan"], [789, 3, 1, "", "tanh"], [797, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[802, 3, 1, "", "all_equal"], [804, 3, 1, "", "arg_info"], [805, 3, 1, "", "arg_names"], [806, 3, 1, "", "array_equal"], [807, 3, 1, "", "arrays_equal"], [808, 3, 1, "", "assert_supports_inplace"], [809, 3, 1, "", "cache_fn"], [810, 3, 1, "", "clip_matrix_norm"], [813, 3, 1, "", "clip_vector_norm"], [814, 3, 1, "", "container_types"], [815, 3, 1, "", "copy_array"], [816, 3, 1, "", "cumprod"], [817, 3, 1, "", "cumsum"], [818, 3, 1, "", "current_backend_str"], [819, 3, 1, "", "default"], [820, 3, 1, "", "einops_rearrange"], [821, 3, 1, "", "einops_reduce"], [822, 3, 1, "", "einops_repeat"], [823, 3, 1, "", "exists"], [824, 3, 1, "", "floormod"], [825, 3, 1, "", "fourier_encode"], [826, 3, 1, "", "gather"], [830, 3, 1, "", "gather_nd"], [832, 3, 1, "", "get_all_arrays_in_memory"], [833, 3, 1, "", "get_min_base"], [834, 3, 1, "", "get_min_denominator"], [835, 3, 1, "", "get_num_dims"], [836, 3, 1, "", "get_referrers_recursive"], [837, 3, 1, "", "has_nans"], [838, 3, 1, "", "indices_where"], [839, 3, 1, "", "inplace_arrays_supported"], [840, 3, 1, "", "inplace_decrement"], [841, 3, 1, "", "inplace_increment"], [842, 3, 1, "", "inplace_update"], [843, 3, 1, "", "inplace_variables_supported"], [844, 3, 1, "", "is_array"], [845, 3, 1, "", "is_ivy_array"], [846, 3, 1, "", "is_ivy_container"], [847, 3, 1, "", "is_native_array"], [848, 3, 1, "", "match_kwargs"], [849, 3, 1, "", "multiprocessing"], [850, 3, 1, "", "num_arrays_in_memory"], [851, 3, 1, "", "one_hot"], [852, 3, 1, "", "print_all_arrays_in_memory"], [853, 3, 1, "", "queue_timeout"], [854, 3, 1, "", "scatter_flat"], [855, 3, 1, "", "scatter_nd"], [856, 3, 1, "", "set_min_base"], [857, 3, 1, "", "set_min_denominator"], [858, 3, 1, "", "set_queue_timeout"], [859, 3, 1, "", "set_tmp_dir"], [860, 3, 1, "", "shape"], [861, 3, 1, "", "shape_to_tuple"], [862, 3, 1, "", "stable_divide"], [863, 3, 1, "", "stable_pow"], [864, 3, 1, "", "supports_inplace"], [865, 3, 1, "", "tmp_dir"], [866, 3, 1, "", "to_list"], [867, 3, 1, "", "to_numpy"], [868, 3, 1, "", "to_scalar"], [869, 3, 1, "", "try_else_none"], [870, 3, 1, "", "unstack"], [871, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[872, 1, 1, "", "GradientTracking"], [877, 3, 1, "", "adam_step"], [881, 3, 1, "", "adam_update"], [883, 3, 1, "", "execute_with_gradients"], [886, 3, 1, "", "gradient_descent_update"], [890, 3, 1, "", "is_variable"], [894, 3, 1, "", "lamb_update"], [898, 3, 1, "", "lars_update"], [902, 3, 1, "", "optimizer_update"], [904, 3, 1, "", "set_with_grads"], [905, 3, 1, "", "stop_gradient"], [906, 3, 1, "", "unset_with_grads"], [907, 3, 1, "", "variable"], [908, 3, 1, "", "variable_data"], [909, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[872, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[911, 3, 1, "", "conv1d"], [912, 3, 1, "", "conv1d_transpose"], [913, 3, 1, "", "conv2d"], [914, 3, 1, "", "conv2d_transpose"], [915, 3, 1, "", "conv3d"], [916, 3, 1, "", "conv3d_transpose"], [917, 3, 1, "", "depthwise_conv2d"], [918, 3, 1, "", "dropout"], [919, 3, 1, "", "linear"], [920, 3, 1, "", "lstm_update"], [921, 3, 1, "", "multi_head_attention"], [922, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[927, 3, 1, "", "cholesky"], [931, 3, 1, "", "cross"], [932, 3, 1, "", "det"], [937, 3, 1, "", "diagonal"], [940, 3, 1, "", "eigh"], [943, 3, 1, "", "eigvalsh"], [944, 3, 1, "", "inv"], [950, 3, 1, "", "matmul"], [953, 3, 1, "", "matrix_norm"], [954, 3, 1, "", "matrix_power"], [957, 3, 1, "", "matrix_rank"], [960, 3, 1, "", "matrix_transpose"], [963, 3, 1, "", "outer"], [966, 3, 1, "", "pinv"], [969, 3, 1, "", "qr"], [970, 3, 1, "", "slogdet"], [973, 3, 1, "", "solve"], [974, 3, 1, "", "svd"], [979, 3, 1, "", "svdvals"], [982, 3, 1, "", "tensordot"], [985, 3, 1, "", "trace"], [988, 3, 1, "", "vecdot"], [991, 3, 1, "", "vector_norm"], [994, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[999, 3, 1, "", "binary_cross_entropy"], [1004, 3, 1, "", "cross_entropy"], [1009, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1015, 3, 1, "", "clip"], [1020, 3, 1, "", "concat"], [1024, 3, 1, "", "constant_pad"], [1028, 3, 1, "", "expand_dims"], [1032, 3, 1, "", "flip"], [1036, 3, 1, "", "permute_dims"], [1040, 3, 1, "", "repeat"], [1044, 3, 1, "", "reshape"], [1048, 3, 1, "", "roll"], [1050, 3, 1, "", "split"], [1054, 3, 1, "", "squeeze"], [1058, 3, 1, "", "stack"], [1062, 3, 1, "", "swapaxes"], [1066, 3, 1, "", "tile"], [1070, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1072, 3, 1, "", "fomaml_step"], [1073, 3, 1, "", "maml_step"], [1074, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1076, 3, 1, "", "all_nested_indices"], [1077, 3, 1, "", "copy_nest"], [1078, 3, 1, "", "index_nest"], [1079, 3, 1, "", "insert_into_nest_at_index"], [1080, 3, 1, "", "insert_into_nest_at_indices"], [1081, 3, 1, "", "map"], [1082, 3, 1, "", "map_nest_at_index"], [1083, 3, 1, "", "map_nest_at_indices"], [1084, 3, 1, "", "multi_index_nest"], [1085, 3, 1, "", "nested_any"], [1086, 3, 1, "", "nested_indices_where"], [1087, 3, 1, "", "nested_map"], [1088, 3, 1, "", "nested_multi_map"], [1089, 3, 1, "", "prune_nest_at_index"], [1090, 3, 1, "", "prune_nest_at_indices"], [1091, 3, 1, "", "set_nest_at_index"], [1092, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1097, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1099, 3, 1, "", "multinomial"], [1101, 3, 1, "", "randint"], [1103, 3, 1, "", "random_normal"], [1106, 3, 1, "", "random_uniform"], [1108, 3, 1, "", "seed"], [1109, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1111, 3, 1, "", "argmax"], [1112, 3, 1, "", "argmin"], [1113, 3, 1, "", "nonzero"], [1114, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[1116, 3, 1, "", "unique_all"], [1121, 3, 1, "", "unique_counts"], [1122, 3, 1, "", "unique_inverse"], [1123, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1128, 3, 1, "", "argsort"], [1133, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1163, 3, 1, "", "einsum"], [1143, 3, 1, "", "max"], [1147, 3, 1, "", "mean"], [1151, 3, 1, "", "min"], [1155, 3, 1, "", "prod"], [1159, 3, 1, "", "std"], [1160, 3, 1, "", "sum"], [1167, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[1172, 3, 1, "", "all"], [1176, 3, 1, "", "any"]], "ivy.inspection": [[1181, 3, 1, "", "add_array_specs"], [1182, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[1184, 0, 0, "-", "activations"], [1187, 0, 0, "-", "converters"], [1189, 0, 0, "-", "initializers"], [1198, 0, 0, "-", "layers"], [1210, 0, 0, "-", "module"], [1212, 0, 0, "-", "norms"], [1214, 0, 0, "-", "optimizers"], [1220, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1185, 1, 1, "", "GEGLU"], [1186, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1185, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1186, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1188, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1189, 1, 1, "", "Constant"], [1191, 1, 1, "", "FirstLayerSiren"], [1192, 1, 1, "", "GlorotUniform"], [1189, 1, 1, "", "KaimingNormal"], [1194, 1, 1, "", "Ones"], [1195, 1, 1, "", "Siren"], [1189, 1, 1, "", "Uniform"], [1197, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1191, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1192, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1194, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1195, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1197, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1199, 1, 1, "", "Conv1D"], [1200, 1, 1, "", "Conv1DTranspose"], [1201, 1, 1, "", "Conv2D"], [1202, 1, 1, "", "Conv2DTranspose"], [1203, 1, 1, "", "Conv3D"], [1204, 1, 1, "", "Conv3DTranspose"], [1205, 1, 1, "", "DepthwiseConv2D"], [1206, 1, 1, "", "Dropout"], [1207, 1, 1, "", "LSTM"], [1208, 1, 1, "", "Linear"], [1209, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1199, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1200, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1201, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1202, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1203, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1204, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1205, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1206, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1207, 2, 1, "", "__init__"], [1207, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1208, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1209, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1211, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1211, 2, 1, "", "__init__"], [1211, 2, 1, "", "build"], [1211, 4, 1, "", "build_mode"], [1211, 4, 1, "", "built"], [1211, 2, 1, "", "check_submod_rets"], [1211, 2, 1, "", "get_mod_key"], [1211, 2, 1, "", "mod_depth"], [1211, 2, 1, "", "mod_height"], [1211, 2, 1, "", "mod_with_top_mod_key_chain"], [1211, 2, 1, "", "save_weights"], [1211, 2, 1, "", "show_mod_in_top_mod"], [1211, 2, 1, "", "show_structure"], [1211, 2, 1, "", "show_v_in_top_v"], [1211, 2, 1, "", "sub_mods"], [1211, 2, 1, "", "track_submod_call_order"], [1211, 2, 1, "", "track_submod_rets"], [1211, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1213, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1213, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1215, 1, 1, "", "Adam"], [1216, 1, 1, "", "LAMB"], [1217, 1, 1, "", "LARS"], [1218, 1, 1, "", "Optimizer"], [1219, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1215, 2, 1, "", "__init__"], [1215, 2, 1, "", "set_state"], [1215, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1216, 2, 1, "", "__init__"], [1216, 2, 1, "", "set_state"], [1216, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1217, 2, 1, "", "__init__"], [1217, 2, 1, "", "set_state"], [1217, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1218, 2, 1, "", "__init__"], [1218, 2, 1, "", "set_state"], [1218, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1219, 2, 1, "", "__init__"], [1219, 2, 1, "", "set_state"], [1219, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1221, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1221, 2, 1, "", "__init__"]], "ivy.verbosity": [[1224, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"activ": [0, 189, 419, 1184], "arraywithactiv": 1, "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 187, 379, 384, 389, 393, 426, 437, 441, 445, 449, 454, 457, 461, 464, 467, 471, 483, 562, 567, 571, 575, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 632, 636, 641, 645, 649, 653, 657, 661, 665, 669, 673, 677, 681, 685, 689, 693, 697, 701, 705, 709, 713, 717, 721, 725, 731, 736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 781, 786, 791, 795, 800, 828, 875, 925, 930, 933, 936, 939, 942, 945, 948, 952, 956, 959, 962, 965, 968, 972, 975, 978, 981, 984, 987, 990, 993, 997, 1002, 1007, 1013, 1018, 1022, 1026, 1030, 1034, 1038, 1042, 1046, 1052, 1056, 1060, 1064, 1068, 1095, 1119, 1126, 1131, 1137, 1141, 1145, 1149, 1153, 1157, 1161, 1165, 1170, 1174], "method": [2, 196, 385, 393, 394], "ab": [3, 197, 561, 562, 563, 564], "aco": [4, 198, 566, 567, 568, 569], "acosh": [5, 199, 570, 571, 572, 573], "adam_step": [6, 200, 874, 875, 876, 877], "add": [7, 202, 378, 574, 575, 576, 577], "add_ivy_array_instance_method": [8, 171], "all": [9, 204, 1169, 1170, 1171, 1172], "all_equ": [10, 205, 799, 800, 801, 802], "ani": [11, 206, 1173, 1174, 1175, 1176], "argsort": [12, 207, 1125, 1126, 1127, 1128], "asarrai": [13, 436, 437, 438], "asin": [14, 208, 579, 580, 581, 582], "asinh": [15, 209, 583, 584, 585, 586], "atan": [16, 212, 587, 588, 589, 590], "atan2": [17, 213, 591, 592, 593, 594], "atanh": [18, 214, 595, 596, 597, 598], "binary_cross_entropi": [19, 215, 996, 997, 998, 999], "bitwise_and": [20, 216, 599, 600, 601, 602], "bitwise_invert": [21, 217, 603, 604, 605, 606], "bitwise_left_shift": [22, 218, 607, 608, 609, 610], "bitwise_or": [23, 219, 611, 612, 613, 614], "bitwise_right_shift": [24, 220, 615, 616, 617, 618], "bitwise_xor": [25, 221, 619, 620, 621, 622], "can_cast": [26, 222, 482, 483, 484, 485], "ceil": [27, 223, 623, 624, 625, 626], "choleski": [28, 224, 924, 925, 926, 927], "clip": [29, 225, 1012, 1013, 1014, 1015], "concat": [30, 227, 1017, 1018, 1019, 1020], "constant_pad": [31, 228, 1021, 1022, 1023, 1024], "co": [32, 229, 627, 628, 629, 630], "cosh": [33, 230, 631, 632, 633, 634], "cross": [34, 929, 930, 931], "cross_entropi": [35, 231, 1001, 1002, 1003, 1004], "det": [36, 932, 933, 934], "diagon": [37, 935, 936, 937], "divid": [38, 232, 635, 636, 637, 638], "eigh": [39, 938, 939, 940], "eigvalsh": [40, 941, 942, 943], "einsum": [41, 233, 1136, 1137, 1138, 1139], "empty_lik": [42, 440, 441, 442], "equal": [43, 234, 640, 641, 642, 643], "erf": [44, 235, 644, 645, 646, 647], "exp": [45, 236, 648, 649, 650, 651], "expand_dim": [46, 237, 1025, 1026, 1027, 1028], "expm1": [47, 238, 652, 653, 654, 655], "flip": [48, 239, 1029, 1030, 1031, 1032], "floor": [49, 240, 656, 657, 658, 659], "floor_divid": [50, 241, 660, 661, 662, 663], "from_dlpack": [51, 444, 445, 446], "full_lik": [52, 448, 449, 450], "gather_nd": [53, 242, 827, 828, 829, 830], "greater": [54, 244, 664, 665, 666, 667], "greater_equ": [55, 245, 668, 669, 670, 671], "inv": [56, 944, 945, 946], "isfinit": [57, 247, 672, 673, 674, 675], "isinf": [58, 248, 676, 677, 678, 679], "isnan": [59, 249, 680, 681, 682, 683], "layer_norm": [60, 252, 1094, 1095, 1096, 1097], "less": [61, 253, 684, 685, 686, 687], "less_equ": [62, 254, 688, 689, 690, 691], "log": [63, 255, 692, 693, 694, 695], "log10": [64, 256, 696, 697, 698, 699], "log1p": [65, 257, 700, 701, 702, 703], "log2": [66, 258, 704, 705, 706, 707], "logaddexp": [67, 259, 708, 709, 710, 711], "logical_and": [68, 260, 712, 713, 714, 715], "logical_not": [69, 261, 716, 717, 718, 719], "logical_or": [70, 262, 720, 721, 722, 723], "logical_xor": [71, 263, 724, 725, 726, 727], "matmul": [72, 264, 947, 948, 949, 950], "matrix_norm": [73, 951, 952, 953], "matrix_rank": [74, 955, 956, 957], "matrix_transpos": [75, 958, 959, 960], "max": [76, 265, 1140, 1141, 1142, 1143], "mean": [77, 266, 1144, 1145, 1146, 1147], "meshgrid": [78, 453, 454, 455], "min": [79, 267, 1148, 1149, 1150, 1151], "multipli": [80, 268, 730, 731, 732, 733], "native_arrai": [81, 456, 457, 458], "neg": [82, 269, 735, 736, 737, 738], "not_equ": [83, 270, 739, 740, 741, 742], "ones_lik": [84, 460, 461, 462], "outer": [85, 961, 962, 963], "permute_dim": [86, 272, 1033, 1034, 1035, 1036], "pinv": [87, 964, 965, 966], "posit": [88, 273, 743, 744, 745, 746], "pow": [89, 274, 747, 748, 749, 750], "prod": [90, 275, 1152, 1153, 1154, 1155], "qr": [91, 967, 968, 969], "remaind": [92, 277, 751, 752, 753, 754], "repeat": [93, 278, 1037, 1038, 1039, 1040], "reshap": [94, 279, 1041, 1042, 1043, 1044], "roll": [95, 280, 378, 1045, 1046, 1047, 1048], "round": [96, 281, 755, 756, 757, 758], "sign": [97, 282, 759, 760, 761, 762], "sin": [98, 283, 763, 764, 765, 766], "sinh": [99, 284, 767, 768, 769, 770], "softplu": [100, 285, 425, 426, 427, 428], "solv": [101, 971, 972, 973], "sort": [102, 164, 286, 362, 1124, 1130, 1131, 1132, 1133], "sparse_cross_entropi": [103, 287, 1006, 1007, 1008, 1009], "sqrt": [104, 288, 771, 772, 773, 774], "squar": [105, 289, 775, 776, 777, 778], "squeez": [106, 290, 1051, 1052, 1053, 1054], "stack": [107, 291, 1055, 1056, 1057, 1058], "std": [108, 321, 1156, 1157, 1158, 1159], "subtract": [109, 322, 779, 781, 782, 783], "sum": [110, 323, 1160, 1161, 1162, 1163], "svd": [111, 974, 975, 976], "svdval": [112, 977, 978, 979], "swapax": [113, 324, 1059, 1060, 1061, 1062], "tan": [114, 325, 378, 784, 786, 787, 788], "tanh": [115, 326, 430, 789, 791, 792, 793], "tensordot": [116, 980, 981, 982], "tile": [117, 327, 1063, 1064, 1065, 1066], "trace": [118, 983, 984, 985], "tril": [119, 463, 464, 465], "triu": [120, 466, 467, 468], "trunc": [121, 328, 794, 795, 796, 797], "unique_count": [122, 329, 1117, 1119, 1120, 1121], "var": [123, 330, 1164, 1165, 1166, 1167], "vecdot": [124, 986, 987, 988], "vector_norm": [125, 989, 990, 991], "vector_to_skew_symmetric_matrix": [126, 992, 993, 994], "zero_pad": [127, 331, 1067, 1068, 1069, 1070], "zeros_lik": [128, 470, 471, 472], "convers": 129, "args_to_ivi": 130, "args_to_n": 131, "to_ivi": 132, "to_n": 133, "creation": [134, 332, 434], "arraywithcr": 135, "data": [136, 334, 380, 386, 394, 408, 473, 1115, 1116, 1117, 1121, 1123], "type": [136, 334, 381, 386, 408, 473], "arraywithdatatyp": 137, "devic": [138, 336, 387, 389, 510], "arraywithdevic": 139, "elementwis": [140, 338, 560], "arraywithelementwis": 141, "gener": [142, 340, 380, 798], "arraywithgener": 143, "gradient": [144, 342, 872], "arraywithgradi": 145, "imag": [146, 344], "arraywithimag": 147, "layer": [148, 346, 910, 1198], "arraywithlay": 149, "linear": [150, 348, 919, 923, 1208], "algebra": [150, 348, 923], "arraywithlinearalgebra": 151, "loss": [152, 350, 995], "arraywithloss": 153, "manipul": [154, 352, 1011], "arraywithmanipul": 155, "norm": [156, 354, 1093, 1212], "arraywithnorm": 157, "random": [158, 356, 1098], "arraywithrandom": 159, "search": [160, 358, 1110], "arraywithsearch": 161, "set": [162, 360, 371, 382, 1115], "arraywithset": 163, "arraywithsort": 165, "statist": [166, 364, 1135], "arraywithstatist": 167, "util": [168, 366, 1168], "arraywithutil": 169, "wrap": [170, 368, 383], "backend": [172, 376, 382, 391, 408], "handler": [172, 391], "choose_random_backend": 174, "clear_backend_stack": 175, "current_backend": 176, "get_backend": 177, "set_backend": 178, "try_import_ivy_jax": 179, "try_import_ivy_mxnet": 180, "try_import_ivy_numpi": 181, "try_import_ivy_tf": 182, "try_import_ivy_torch": 183, "unset_backend": 184, "background": [185, 1177], "ml": 186, "explos": 186, "standard": 187, "skeptic": 187, "complimentari": 187, "vs": [187, 408], "competit": 187, "do": 187, "work": [187, 374], "The": [187, 372, 393, 408], "api": [187, 373, 376, 379, 385, 391, 393, 395, 396], "why": 188, "unifi": [188, 393], "No": [188, 371], "more": 188, "re": 188, "implement": 188, "infinit": 188, "shelf": 188, "life": 188, "containerwithactiv": 190, "base": 191, "containerbas": 192, "contain": [193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 385, 394, 427, 429, 484, 486, 563, 565, 568, 572, 576, 578, 581, 585, 589, 593, 597, 601, 605, 609, 613, 617, 621, 625, 629, 633, 637, 639, 642, 646, 650, 654, 658, 662, 666, 670, 674, 678, 682, 686, 690, 694, 698, 702, 706, 710, 714, 718, 722, 726, 732, 734, 737, 741, 745, 749, 753, 757, 761, 765, 769, 773, 777, 780, 782, 785, 787, 790, 792, 796, 801, 803, 812, 829, 831, 876, 878, 880, 882, 885, 887, 889, 891, 893, 895, 897, 899, 901, 903, 926, 928, 949, 998, 1000, 1003, 1005, 1008, 1010, 1014, 1016, 1019, 1023, 1027, 1031, 1035, 1039, 1043, 1047, 1049, 1053, 1057, 1061, 1065, 1069, 1096, 1102, 1105, 1107, 1118, 1120, 1127, 1129, 1132, 1134, 1138, 1142, 1146, 1150, 1154, 1158, 1162, 1166, 1171, 1175], "multidevcontain": 195, "adam_upd": [201, 879, 880, 881], "add_ivy_container_instance_method": [203, 369], "at_dev": [210, 211], "clip_vector_norm": [226, 811, 812, 813], "gradient_descent_upd": [243, 884, 885, 886], "is_vari": [246, 888, 889, 890], "lamb_upd": [250, 892, 893, 894], "lars_upd": [251, 896, 897, 898], "optimizer_upd": [271, 900, 901, 902], "random_uniform": [276, 1104, 1105, 1106], "static_ab": [292, 565], "static_adam_step": [293, 878], "static_adam_upd": [294, 882], "static_add": [295, 578], "static_all_equ": [296, 803], "static_argsort": [297, 1129], "static_binary_cross_entropi": [298, 1000], "static_can_cast": [299, 486], "static_choleski": [300, 928], "static_clip": [301, 1016], "static_cross_entropi": [302, 1005], "static_divid": [303, 639], "static_gather_nd": [304, 831], "static_gradient_descent_upd": [305, 887], "static_is_vari": [306, 891], "static_lamb_upd": [307, 895], "static_lars_upd": [308, 899], "static_multipli": [309, 734], "static_optimizer_upd": [310, 903], "static_randint": [311, 1102], "static_random_uniform": [312, 1107], "static_rol": [313, 1049], "static_softplu": [314, 429], "static_sort": [315, 1134], "static_sparse_cross_entropi": [316, 1010], "static_subtract": [317, 780], "static_tan": [318, 785], "static_tanh": [319, 790], "static_unique_count": [320, 1118], "containerwithcr": 333, "containerwithdatatyp": 335, "containerwithdevic": 337, "containerwithelementwis": 339, "containerwithgener": 341, "containerwithgradi": 343, "containerwithimag": 345, "containerwithlay": 347, "containerwithlinearalgebra": 349, "containerwithloss": 351, "containerwithmanipul": 353, "containerwithnorm": 355, "containerwithrandom": 357, "containerwithsearch": 359, "containerwithset": 361, "containerwithsort": 363, "containerwithstatist": 365, "containerwithutil": 367, "contribut": [370, 1177], "up": 371, "clone": 371, "ivi": [371, 376, 378, 380, 384, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 426, 427, 428, 429, 437, 438, 441, 442, 445, 446, 449, 450, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 471, 472, 483, 484, 485, 486, 562, 563, 564, 565, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 584, 585, 586, 588, 589, 590, 592, 593, 594, 596, 597, 598, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 658, 659, 661, 662, 663, 665, 666, 667, 669, 670, 671, 673, 674, 675, 677, 678, 679, 681, 682, 683, 685, 686, 687, 689, 690, 691, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 718, 719, 721, 722, 723, 725, 726, 727, 731, 732, 733, 734, 736, 737, 738, 740, 741, 742, 744, 745, 746, 748, 749, 750, 752, 753, 754, 756, 757, 758, 760, 761, 762, 764, 765, 766, 768, 769, 770, 772, 773, 774, 776, 777, 778, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 800, 801, 802, 803, 812, 813, 828, 829, 830, 831, 875, 876, 877, 878, 880, 881, 882, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 902, 903, 925, 926, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 945, 946, 948, 949, 950, 952, 953, 956, 957, 959, 960, 962, 963, 965, 966, 968, 969, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 993, 994, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1095, 1096, 1097, 1101, 1102, 1105, 1106, 1107, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1170, 1171, 1172, 1174, 1175, 1176], "pycharm": 371, "virtual": 371, "environ": 371, "docker": [371, 372, 374], "us": [371, 374, 394], "miniconda": [371, 374], "venv": [371, 374], "interpret": 371, "window": 371, "maco": 371, "ubuntu": 371, "github": 371, "codespac": 371, "pre": 371, "commit": [371, 372], "basic": 372, "get": 372, "help": 372, "todo": 372, "list": 372, "issu": 372, "manag": 372, "your": 372, "fork": 372, "who": 372, "To": 372, "ask": 372, "With": 372, "command": 372, "line": 372, "browser": 372, "pull": 372, "request": 372, "small": 372, "often": 372, "run": 372, "test": [372, 379, 380], "local": 372, "open": 373, "task": 373, "function": [373, 381, 383, 385, 386, 387, 389, 391, 396, 408], "format": 373, "frontend": [373, 396], "build": [374, 391], "doc": 374, "dockerless": 374, "document": 374, "pipelin": [374, 408], "make_doc": 374, "sh": 374, "entrypoint": 374, "_make_doc": 374, "generate_src_rst_fil": 374, "py": 374, "sphinx": 374, "correct_built_html_fil": 374, "remove_fil": 374, "deep": 375, "dive": 375, "navig": 376, "code": 376, "categor": 376, "submodul": 376, "design": [376, 390, 1177], "docstr": [377, 378], "exampl": [378, 389], "hypothesi": 380, "self": 380, "consist": 380, "explicit": 380, "test_array_funct": 380, "primari": 381, "composit": 381, "mix": 381, "standalon": 381, "nestabl": [381, 385, 389], "conveni": 381, "nativ": 384, "handl": 384, "instanc": [385, 393], "static": 385, "special": 385, "modul": [386, 387, 395, 1210, 1211], "argument": [386, 387, 388, 389], "other": [386, 387], "inplac": 388, "updat": 388, "out": [388, 389], "copi": 388, "dtype": [389, 491], "number": 389, "oper": [389, 393, 408], "integ": 389, "sequenc": 389, "block": 391, "framework": [391, 392], "graph": [391, 396], "compil": [391, 396, 431, 432], "class": 393, "monkei": 393, "patch": 393, "construct": 394, "represent": 394, "recurs": 394, "built": 394, "ins": 394, "access": 394, "save": 394, "load": 394, "comparison": 394, "custom": [394, 408], "case": 394, "compartment": 394, "configur": 394, "network": [394, 396], "weight": 394, "state": [395, 408], "initi": [395, 1189], "optim": [395, 1214, 1218], "transpil": 396, "role": 396, "convert": [396, 1187], "model": [396, 403, 408], "builder": 398, "ecosystem": 399, "gym": [400, 407], "mech": 401, "memori": [402, 407], "robot": [404, 407], "vision": [405, 407], "extens": [406, 1177], "appli": 407, "librari": 407, "mechan": 407, "faq": 408, "maintain": 408, "version": 408, "dynam": 408, "size": 408, "shape": [408, 860, 1115, 1116, 1117, 1121, 1123], "check": 408, "control": 408, "flow": 408, "auto": 408, "differenti": 408, "replica": 408, "parallel": 408, "support": 408, "altern": 408, "structur": 408, "func": 409, "wrapper": 409, "handle_nest": 410, "handle_out_argu": 411, "infer_devic": 412, "infer_dtyp": 413, "inputs_to_ivy_arrai": 414, "inputs_to_native_arrai": 415, "outputs_to_ivy_arrai": 416, "to_native_arrays_and_back": 417, "gelu": [420, 1186], "leaky_relu": 421, "relu": 422, "sigmoid": 423, "softmax": 424, "constant": 433, "note": [434, 444, 446], "arang": 435, "empti": 439, "ey": 443, "full": 447, "linspac": 451, "logspac": 452, "ones": 459, "zero": [469, 1197], "as_ivy_dtyp": 477, "as_native_dtyp": 478, "astyp": 479, "broadcast_arrai": 480, "broadcast_to": 481, "closest_valid_dtyp": 487, "default_dtyp": 488, "default_float_dtyp": 489, "default_int_dtyp": 490, "dtype_bit": 492, "finfo": 493, "function_supported_dtyp": 494, "function_unsupported_dtyp": 495, "iinfo": 496, "invalid_dtyp": 497, "is_float_dtyp": 498, "is_int_dtyp": 499, "promote_typ": 500, "result_typ": 501, "set_default_dtyp": 502, "set_default_float_dtyp": 503, "set_default_int_dtyp": 504, "type_promote_arrai": 505, "unset_default_dtyp": 506, "unset_default_float_dtyp": 507, "unset_default_int_dtyp": 508, "valid_dtyp": 509, "devcloneditem": 512, "devclonedit": 513, "devclonednest": 514, "devdistitem": 515, "devdistit": 516, "devdistnest": 517, "devmapp": 519, "devmappermultiproc": 520, "multidevitem": 522, "multidevit": 523, "multidevnest": 524, "profil": 525, "as_ivy_dev": 526, "as_native_dev": 527, "clear_mem_on_dev": 528, "default_devic": 529, "dev": 530, "dev_clon": 531, "dev_clone_arrai": 532, "dev_clone_it": 533, "dev_clone_nest": 534, "dev_dist": 535, "dev_dist_arrai": 536, "dev_dist_it": 537, "dev_dist_nest": 538, "dev_unifi": 539, "dev_unify_arrai": 540, "dev_unify_it": 541, "dev_unify_nest": 542, "dev_util": 543, "get_all_ivy_arrays_on_dev": 544, "gpu_is_avail": 545, "num_cpu_cor": 546, "num_gpu": 547, "num_ivy_arrays_on_dev": 548, "percent_used_mem_on_dev": 549, "print_all_ivy_arrays_on_dev": 550, "set_default_devic": 551, "set_split_factor": 552, "split_factor": 553, "split_func_cal": 554, "to_devic": 555, "total_mem_on_dev": 556, "tpu_is_avail": 557, "unset_default_devic": 558, "used_mem_on_dev": 559, "maximum": 728, "minimum": 729, "arg_info": 804, "arg_nam": 805, "array_equ": 806, "arrays_equ": 807, "assert_supports_inplac": 808, "cache_fn": 809, "clip_matrix_norm": 810, "container_typ": 814, "copy_arrai": 815, "cumprod": 816, "cumsum": 817, "current_backend_str": 818, "default": 819, "einops_rearrang": 820, "einops_reduc": 821, "einops_repeat": 822, "exist": 823, "floormod": 824, "fourier_encod": 825, "gather": 826, "get_all_arrays_in_memori": 832, "get_min_bas": 833, "get_min_denomin": 834, "get_num_dim": 835, "get_referrers_recurs": 836, "has_nan": 837, "indices_wher": 838, "inplace_arrays_support": 839, "inplace_decr": 840, "inplace_incr": 841, "inplace_upd": 842, "inplace_variables_support": 843, "is_arrai": 844, "is_ivy_arrai": 845, "is_ivy_contain": 846, "is_native_arrai": 847, "match_kwarg": 848, "multiprocess": 849, "num_arrays_in_memori": 850, "one_hot": 851, "print_all_arrays_in_memori": 852, "queue_timeout": 853, "scatter_flat": 854, "scatter_nd": 855, "set_min_bas": 856, "set_min_denomin": 857, "set_queue_timeout": 858, "set_tmp_dir": 859, "shape_to_tupl": 861, "stable_divid": 862, "stable_pow": 863, "supports_inplac": 864, "tmp_dir": 865, "to_list": 866, "to_numpi": 867, "to_scalar": 868, "try_else_non": 869, "unstack": 870, "value_is_nan": 871, "execute_with_gradi": 883, "set_with_grad": 904, "stop_gradi": 905, "unset_with_grad": 906, "variabl": 907, "variable_data": 908, "with_grad": 909, "conv1d": [911, 1199], "conv1d_transpos": 912, "conv2d": [913, 1201], "conv2d_transpos": 914, "conv3d": [915, 1203], "conv3d_transpos": 916, "depthwise_conv2d": 917, "dropout": [918, 1206], "lstm_updat": 920, "multi_head_attent": 921, "scaled_dot_product_attent": 922, "matrix_pow": 954, "slogdet": 970, "split": 1050, "meta": 1071, "fomaml_step": 1072, "maml_step": 1073, "reptile_step": 1074, "nest": 1075, "all_nested_indic": 1076, "copy_nest": 1077, "index_nest": 1078, "insert_into_nest_at_index": 1079, "insert_into_nest_at_indic": 1080, "map": 1081, "map_nest_at_index": 1082, "map_nest_at_indic": 1083, "multi_index_nest": 1084, "nested_ani": 1085, "nested_indices_wher": 1086, "nested_map": 1087, "nested_multi_map": 1088, "prune_nest_at_index": 1089, "prune_nest_at_indic": 1090, "set_nest_at_index": 1091, "set_nest_at_indic": 1092, "multinomi": 1099, "randint": [1100, 1101], "random_norm": 1103, "seed": 1108, "shuffl": 1109, "argmax": 1111, "argmin": 1112, "nonzero": 1113, "where": 1114, "depend": [1115, 1116, 1117, 1121, 1123], "output": [1115, 1116, 1117, 1121, 1123], "unique_al": 1116, "unique_invers": 1122, "unique_valu": 1123, "content": 1177, "overview": 1177, "quick": 1177, "start": 1177, "roadmap": [1177, 1183], "citat": 1177, "inspect": 1180, "add_array_spec": 1181, "fn_array_spec": 1182, "geglu": 1185, "to_ivy_modul": 1188, "firstlayersiren": 1191, "glorotuniform": 1192, "Ones": 1194, "siren": 1195, "conv1dtranspos": 1200, "conv2dtranspos": 1202, "conv3dtranspos": 1204, "depthwiseconv2d": 1205, "lstm": 1207, "multiheadattent": 1209, "layernorm": 1213, "adam": 1215, "lamb": 1216, "lar": 1217, "sgd": 1219, "sequenti": [1220, 1221], "verbos": 1223, "cprint": 1224}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})