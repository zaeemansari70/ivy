Search.setIndex({"docnames": ["docs/data_classes/array/ivy.data_classes.array.activations", "docs/data_classes/array/ivy.data_classes.array.conversions", "docs/data_classes/array/ivy.data_classes.array.creation", "docs/data_classes/array/ivy.data_classes.array.data_type", "docs/data_classes/array/ivy.data_classes.array.device", "docs/data_classes/array/ivy.data_classes.array.elementwise", "docs/data_classes/array/ivy.data_classes.array.experimental", "docs/data_classes/array/ivy.data_classes.array.general", "docs/data_classes/array/ivy.data_classes.array.gradients", "docs/data_classes/array/ivy.data_classes.array.image", "docs/data_classes/array/ivy.data_classes.array.layers", "docs/data_classes/array/ivy.data_classes.array.linear_algebra", "docs/data_classes/array/ivy.data_classes.array.losses", "docs/data_classes/array/ivy.data_classes.array.manipulation", "docs/data_classes/array/ivy.data_classes.array.norms", "docs/data_classes/array/ivy.data_classes.array.random", "docs/data_classes/array/ivy.data_classes.array.searching", "docs/data_classes/array/ivy.data_classes.array.set", "docs/data_classes/array/ivy.data_classes.array.sorting", "docs/data_classes/array/ivy.data_classes.array.statistical", "docs/data_classes/array/ivy.data_classes.array.utility", "docs/data_classes/array/ivy.data_classes.array.wrapping", "docs/data_classes/container/ivy.data_classes.container.activations", "docs/data_classes/container/ivy.data_classes.container.base", "docs/data_classes/container/ivy.data_classes.container.conversions", "docs/data_classes/container/ivy.data_classes.container.creation", "docs/data_classes/container/ivy.data_classes.container.data_type", "docs/data_classes/container/ivy.data_classes.container.device", "docs/data_classes/container/ivy.data_classes.container.elementwise", "docs/data_classes/container/ivy.data_classes.container.experimental", "docs/data_classes/container/ivy.data_classes.container.general", "docs/data_classes/container/ivy.data_classes.container.gradients", "docs/data_classes/container/ivy.data_classes.container.image", "docs/data_classes/container/ivy.data_classes.container.layers", "docs/data_classes/container/ivy.data_classes.container.linear_algebra", "docs/data_classes/container/ivy.data_classes.container.losses", "docs/data_classes/container/ivy.data_classes.container.manipulation", "docs/data_classes/container/ivy.data_classes.container.norms", "docs/data_classes/container/ivy.data_classes.container.random", "docs/data_classes/container/ivy.data_classes.container.searching", "docs/data_classes/container/ivy.data_classes.container.set", "docs/data_classes/container/ivy.data_classes.container.sorting", "docs/data_classes/container/ivy.data_classes.container.statistical", "docs/data_classes/container/ivy.data_classes.container.utility", "docs/data_classes/container/ivy.data_classes.container.wrapping", "docs/data_classes/ivy.data_classes.array", "docs/data_classes/ivy.data_classes.container", "docs/framework/ivy.stateful", "docs/framework/stateful/ivy.stateful.activations", "docs/framework/stateful/ivy.stateful.converters", "docs/framework/stateful/ivy.stateful.helpers", "docs/framework/stateful/ivy.stateful.initializers", "docs/framework/stateful/ivy.stateful.layers", "docs/framework/stateful/ivy.stateful.module", "docs/framework/stateful/ivy.stateful.norms", "docs/framework/stateful/ivy.stateful.optimizers", "docs/framework/stateful/ivy.stateful.sequential", "docs/functional/ivy.functional.ivy", "docs/functional/ivy/ivy.functional.ivy.activations", "docs/functional/ivy/ivy.functional.ivy.constants", "docs/functional/ivy/ivy.functional.ivy.control_flow_ops", "docs/functional/ivy/ivy.functional.ivy.creation", "docs/functional/ivy/ivy.functional.ivy.data_type", "docs/functional/ivy/ivy.functional.ivy.device", "docs/functional/ivy/ivy.functional.ivy.elementwise", "docs/functional/ivy/ivy.functional.ivy.experimental", "docs/functional/ivy/ivy.functional.ivy.general", "docs/functional/ivy/ivy.functional.ivy.gradients", "docs/functional/ivy/ivy.functional.ivy.layers", "docs/functional/ivy/ivy.functional.ivy.linear_algebra", "docs/functional/ivy/ivy.functional.ivy.losses", "docs/functional/ivy/ivy.functional.ivy.manipulation", "docs/functional/ivy/ivy.functional.ivy.meta", "docs/functional/ivy/ivy.functional.ivy.nest", "docs/functional/ivy/ivy.functional.ivy.norms", "docs/functional/ivy/ivy.functional.ivy.random", "docs/functional/ivy/ivy.functional.ivy.searching", "docs/functional/ivy/ivy.functional.ivy.set", "docs/functional/ivy/ivy.functional.ivy.sorting", "docs/functional/ivy/ivy.functional.ivy.statistical", "docs/functional/ivy/ivy.functional.ivy.utility", "docs/nested-array/ivy.nested_array", "docs/nested-array/nested_array/ivy.nested_array.nested_array", "docs/testing/helpers/ivy_tests.test_ivy.helpers.assertions", "docs/testing/helpers/ivy_tests.test_ivy.helpers.available_frameworks", "docs/testing/helpers/ivy_tests.test_ivy.helpers.function_testing", "docs/testing/helpers/ivy_tests.test_ivy.helpers.globals", "docs/testing/helpers/ivy_tests.test_ivy.helpers.hypothesis_helpers", "docs/testing/helpers/ivy_tests.test_ivy.helpers.structs", "docs/testing/helpers/ivy_tests.test_ivy.helpers.test_parameter_flags", "docs/testing/helpers/ivy_tests.test_ivy.helpers.testing_helpers", "docs/testing/ivy_tests.test_ivy.helpers", "docs/utilities/ivy.utils", "docs/utilities/utils/ivy.utils.assertions", "docs/utilities/utils/ivy.utils.backend", "docs/utilities/utils/ivy.utils.dynamic_import", "docs/utilities/utils/ivy.utils.exceptions", "docs/utilities/utils/ivy.utils.inspection", "docs/utilities/utils/ivy.utils.verbosity", "index", "overview/background", "overview/background/ml_explosion", "overview/background/standardization", "overview/background/why_unify", "overview/contributing", "overview/contributing/applied_libraries", "overview/contributing/building_the_docs", "overview/contributing/helpful_resources", "overview/contributing/open_tasks", "overview/contributing/setting_up", "overview/contributing/the_basics", "overview/deep_dive", "overview/deep_dive/array_api_tests", "overview/deep_dive/arrays", "overview/deep_dive/backend_setting", "overview/deep_dive/containers", "overview/deep_dive/continuous_integration", "overview/deep_dive/data_types", "overview/deep_dive/devices", "overview/deep_dive/docstring_examples", "overview/deep_dive/docstrings", "overview/deep_dive/exception_handling", "overview/deep_dive/formatting", "overview/deep_dive/function_arguments", "overview/deep_dive/function_types", "overview/deep_dive/function_wrapping", "overview/deep_dive/inplace_updates", "overview/deep_dive/ivy_frontends", "overview/deep_dive/ivy_frontends_tests", "overview/deep_dive/ivy_tests", "overview/deep_dive/navigating_the_code", "overview/deep_dive/superset_behaviour", "overview/design", "overview/design/building_blocks", "overview/design/ivy_as_a_framework", "overview/design/ivy_as_a_framework/ivy_array", "overview/design/ivy_as_a_framework/ivy_container", "overview/design/ivy_as_a_framework/ivy_stateful_api", "overview/design/ivy_as_a_transpiler", "overview/extensions", "overview/extensions/applied_libraries", "overview/faq", "overview/glossary", "overview/related_work", "overview/related_work/api_standards", "overview/related_work/compiler_infrastructure", "overview/related_work/exchange_formats", "overview/related_work/frameworks", "overview/related_work/graph_tracers", "overview/related_work/ml_unifying_companies", "overview/related_work/multi_vendor_compiler_frameworks", "overview/related_work/vendor_specific_apis", "overview/related_work/vendor_specific_compilers", "overview/related_work/what_does_ivy_add", "overview/related_work/wrapper_frameworks"], "filenames": ["docs/data_classes/array/ivy.data_classes.array.activations.rst", "docs/data_classes/array/ivy.data_classes.array.conversions.rst", "docs/data_classes/array/ivy.data_classes.array.creation.rst", "docs/data_classes/array/ivy.data_classes.array.data_type.rst", "docs/data_classes/array/ivy.data_classes.array.device.rst", "docs/data_classes/array/ivy.data_classes.array.elementwise.rst", "docs/data_classes/array/ivy.data_classes.array.experimental.rst", "docs/data_classes/array/ivy.data_classes.array.general.rst", "docs/data_classes/array/ivy.data_classes.array.gradients.rst", "docs/data_classes/array/ivy.data_classes.array.image.rst", "docs/data_classes/array/ivy.data_classes.array.layers.rst", "docs/data_classes/array/ivy.data_classes.array.linear_algebra.rst", "docs/data_classes/array/ivy.data_classes.array.losses.rst", "docs/data_classes/array/ivy.data_classes.array.manipulation.rst", "docs/data_classes/array/ivy.data_classes.array.norms.rst", "docs/data_classes/array/ivy.data_classes.array.random.rst", "docs/data_classes/array/ivy.data_classes.array.searching.rst", "docs/data_classes/array/ivy.data_classes.array.set.rst", "docs/data_classes/array/ivy.data_classes.array.sorting.rst", "docs/data_classes/array/ivy.data_classes.array.statistical.rst", "docs/data_classes/array/ivy.data_classes.array.utility.rst", "docs/data_classes/array/ivy.data_classes.array.wrapping.rst", "docs/data_classes/container/ivy.data_classes.container.activations.rst", "docs/data_classes/container/ivy.data_classes.container.base.rst", "docs/data_classes/container/ivy.data_classes.container.conversions.rst", "docs/data_classes/container/ivy.data_classes.container.creation.rst", "docs/data_classes/container/ivy.data_classes.container.data_type.rst", "docs/data_classes/container/ivy.data_classes.container.device.rst", "docs/data_classes/container/ivy.data_classes.container.elementwise.rst", "docs/data_classes/container/ivy.data_classes.container.experimental.rst", "docs/data_classes/container/ivy.data_classes.container.general.rst", "docs/data_classes/container/ivy.data_classes.container.gradients.rst", "docs/data_classes/container/ivy.data_classes.container.image.rst", "docs/data_classes/container/ivy.data_classes.container.layers.rst", "docs/data_classes/container/ivy.data_classes.container.linear_algebra.rst", "docs/data_classes/container/ivy.data_classes.container.losses.rst", "docs/data_classes/container/ivy.data_classes.container.manipulation.rst", "docs/data_classes/container/ivy.data_classes.container.norms.rst", "docs/data_classes/container/ivy.data_classes.container.random.rst", "docs/data_classes/container/ivy.data_classes.container.searching.rst", "docs/data_classes/container/ivy.data_classes.container.set.rst", "docs/data_classes/container/ivy.data_classes.container.sorting.rst", "docs/data_classes/container/ivy.data_classes.container.statistical.rst", "docs/data_classes/container/ivy.data_classes.container.utility.rst", "docs/data_classes/container/ivy.data_classes.container.wrapping.rst", "docs/data_classes/ivy.data_classes.array.rst", "docs/data_classes/ivy.data_classes.container.rst", "docs/framework/ivy.stateful.rst", "docs/framework/stateful/ivy.stateful.activations.rst", "docs/framework/stateful/ivy.stateful.converters.rst", "docs/framework/stateful/ivy.stateful.helpers.rst", "docs/framework/stateful/ivy.stateful.initializers.rst", "docs/framework/stateful/ivy.stateful.layers.rst", "docs/framework/stateful/ivy.stateful.module.rst", "docs/framework/stateful/ivy.stateful.norms.rst", "docs/framework/stateful/ivy.stateful.optimizers.rst", "docs/framework/stateful/ivy.stateful.sequential.rst", "docs/functional/ivy.functional.ivy.rst", "docs/functional/ivy/ivy.functional.ivy.activations.rst", "docs/functional/ivy/ivy.functional.ivy.constants.rst", "docs/functional/ivy/ivy.functional.ivy.control_flow_ops.rst", "docs/functional/ivy/ivy.functional.ivy.creation.rst", "docs/functional/ivy/ivy.functional.ivy.data_type.rst", "docs/functional/ivy/ivy.functional.ivy.device.rst", "docs/functional/ivy/ivy.functional.ivy.elementwise.rst", "docs/functional/ivy/ivy.functional.ivy.experimental.rst", "docs/functional/ivy/ivy.functional.ivy.general.rst", "docs/functional/ivy/ivy.functional.ivy.gradients.rst", "docs/functional/ivy/ivy.functional.ivy.layers.rst", "docs/functional/ivy/ivy.functional.ivy.linear_algebra.rst", "docs/functional/ivy/ivy.functional.ivy.losses.rst", "docs/functional/ivy/ivy.functional.ivy.manipulation.rst", "docs/functional/ivy/ivy.functional.ivy.meta.rst", "docs/functional/ivy/ivy.functional.ivy.nest.rst", "docs/functional/ivy/ivy.functional.ivy.norms.rst", "docs/functional/ivy/ivy.functional.ivy.random.rst", "docs/functional/ivy/ivy.functional.ivy.searching.rst", "docs/functional/ivy/ivy.functional.ivy.set.rst", "docs/functional/ivy/ivy.functional.ivy.sorting.rst", "docs/functional/ivy/ivy.functional.ivy.statistical.rst", "docs/functional/ivy/ivy.functional.ivy.utility.rst", "docs/nested-array/ivy.nested_array.rst", "docs/nested-array/nested_array/ivy.nested_array.nested_array.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.assertions.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.available_frameworks.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.function_testing.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.globals.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.hypothesis_helpers.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.structs.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.test_parameter_flags.rst", "docs/testing/helpers/ivy_tests.test_ivy.helpers.testing_helpers.rst", "docs/testing/ivy_tests.test_ivy.helpers.rst", "docs/utilities/ivy.utils.rst", "docs/utilities/utils/ivy.utils.assertions.rst", "docs/utilities/utils/ivy.utils.backend.rst", "docs/utilities/utils/ivy.utils.dynamic_import.rst", "docs/utilities/utils/ivy.utils.exceptions.rst", "docs/utilities/utils/ivy.utils.inspection.rst", "docs/utilities/utils/ivy.utils.verbosity.rst", "index.rst", "overview/background.rst", "overview/background/ml_explosion.rst", "overview/background/standardization.rst", "overview/background/why_unify.rst", "overview/contributing.rst", "overview/contributing/applied_libraries.rst", "overview/contributing/building_the_docs.rst", "overview/contributing/helpful_resources.rst", "overview/contributing/open_tasks.rst", "overview/contributing/setting_up.rst", "overview/contributing/the_basics.rst", "overview/deep_dive.rst", "overview/deep_dive/array_api_tests.rst", "overview/deep_dive/arrays.rst", "overview/deep_dive/backend_setting.rst", "overview/deep_dive/containers.rst", "overview/deep_dive/continuous_integration.rst", "overview/deep_dive/data_types.rst", "overview/deep_dive/devices.rst", "overview/deep_dive/docstring_examples.rst", "overview/deep_dive/docstrings.rst", "overview/deep_dive/exception_handling.rst", "overview/deep_dive/formatting.rst", "overview/deep_dive/function_arguments.rst", "overview/deep_dive/function_types.rst", "overview/deep_dive/function_wrapping.rst", "overview/deep_dive/inplace_updates.rst", "overview/deep_dive/ivy_frontends.rst", "overview/deep_dive/ivy_frontends_tests.rst", "overview/deep_dive/ivy_tests.rst", "overview/deep_dive/navigating_the_code.rst", "overview/deep_dive/superset_behaviour.rst", "overview/design.rst", "overview/design/building_blocks.rst", "overview/design/ivy_as_a_framework.rst", "overview/design/ivy_as_a_framework/ivy_array.rst", "overview/design/ivy_as_a_framework/ivy_container.rst", "overview/design/ivy_as_a_framework/ivy_stateful_api.rst", "overview/design/ivy_as_a_transpiler.rst", "overview/extensions.rst", "overview/extensions/applied_libraries.rst", "overview/faq.rst", "overview/glossary.rst", "overview/related_work.rst", "overview/related_work/api_standards.rst", "overview/related_work/compiler_infrastructure.rst", "overview/related_work/exchange_formats.rst", "overview/related_work/frameworks.rst", "overview/related_work/graph_tracers.rst", "overview/related_work/ml_unifying_companies.rst", "overview/related_work/multi_vendor_compiler_frameworks.rst", "overview/related_work/vendor_specific_apis.rst", "overview/related_work/vendor_specific_compilers.rst", "overview/related_work/what_does_ivy_add.rst", "overview/related_work/wrapper_frameworks.rst"], "titles": ["Activations", "Conversions", "Creation", "Data type", "Device", "Elementwise", "Experimental", "General", "Gradients", "Image", "Layers", "Linear algebra", "Losses", "Manipulation", "Norms", "Random", "Searching", "Set", "Sorting", "Statistical", "Utility", "Wrapping", "Activations", "Base", "Conversions", "Creation", "Data type", "Device", "Elementwise", "Experimental", "General", "Gradients", "Image", "Layers", "Linear algebra", "Losses", "Manipulation", "Norms", "Random", "Searching", "Set", "Sorting", "Statistical", "Utility", "Wrapping", "Array", "Container", "stateful", "Activations", "Converters", "Helpers", "Initializers", "Layers", "Module", "Norms", "Optimizers", "Sequential", "ivy", "Activations", "Constants", "Control flow ops", "Creation", "Data type", "Device", "Elementwise", "Experimental", "General", "Gradients", "Layers", "Linear algebra", "Losses", "Manipulation", "Meta", "Nest", "Norms", "Random", "Searching", "Set", "Sorting", "Statistical", "Utility", "nested_array", "Nested array", "Assertions", "Available frameworks", "Function testing", "Globals", "Hypothesis helpers", "Structs", "Test parameter flags", "Testing helpers", "helpers", "utils", "Assertions", "Backend", "Dynamic import", "Exceptions", "Inspection", "Verbosity", "Contents", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Extensions", "Applied Libraries", "FAQ", "Glossary", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 65, 66, 67, 68, 73, 76, 77, 82, 85, 86, 88, 89, 90, 99, 106, 108, 115, 117, 118, 119, 120, 123, 128, 129, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 154], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 89, 90, 93, 95, 96, 97, 98, 102, 103, 104, 106, 107, 109, 111, 112, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 131, 132, 139, 141, 142, 143, 154], "data_class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 52, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 90, 97, 99, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 145, 146, 147, 149, 153, 154], "_arraywithactiv": [0, 45], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 116, 127, 146, 147, 148, 149, 150], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 71, 77, 79, 82, 86, 88, 89, 96, 99, 110, 112, 115, 116, 117, 121, 123, 125, 128, 129, 130, 133, 140, 147, 152, 154], "abc": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 50, 51, 55, 63, 66, 73, 82, 135], "_abc_impl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "_abc_data": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 52, 53, 58, 61, 62, 63, 65, 66, 67, 73, 75, 82, 85, 86, 88, 89, 99, 113, 115, 116, 125, 127, 128, 129, 135, 138, 147, 153], "gelu": [0, 22, 48, 58, 99], "approxim": [0, 6, 11, 22, 28, 29, 34, 48, 58, 64, 65, 69, 120, 127], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 90, 93, 99, 112, 114, 117, 119, 121, 126, 127, 128, 129, 133, 136, 137, 138], "out": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 90, 95, 99, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 90, 105, 108, 109, 110, 112, 113, 117, 119, 120, 121, 123, 124, 125, 126, 129, 136, 137, 138, 142, 148], "method": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 61, 62, 64, 65, 66, 67, 69, 70, 73, 76, 79, 80, 85, 90, 108, 110, 112, 113, 116, 117, 119, 120, 122, 123, 124, 125, 129, 130, 133, 134, 137, 138, 141, 148, 154], "variant": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 65, 113, 119, 120, 131], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "simpli": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 64, 65, 99, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 133, 137, 138, 141, 142, 148, 153], "wrap": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 65, 66, 82, 85, 99, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 129, 133, 135, 138, 141, 142, 143, 147, 148, 153, 154], "function": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 53, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 90, 97, 99, 101, 106, 109, 110, 111, 112, 113, 114, 116, 119, 120, 122, 126, 131, 132, 134, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 153, 154], "so": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 65, 68, 73, 99, 101, 102, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 147, 148, 149, 151], "docstr": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 61, 62, 64, 65, 66, 69, 71, 76, 77, 78, 79, 80, 106, 107, 108, 111, 122, 123, 124, 127, 130], "also": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 99, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154], "appli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 54, 58, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 99, 104, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 135, 136, 137, 138, 139, 141, 142, 148], "minim": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 65, 120, 126, 128, 131, 133, 145, 153], "chang": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 65, 71, 73, 85, 99, 103, 105, 106, 108, 109, 110, 112, 114, 115, 116, 117, 119, 120, 127, 128, 129, 130, 131, 133, 137, 141, 150, 153], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 90, 97, 99, 108, 113, 120, 121, 123, 124, 125, 127, 128, 129, 130, 133, 135, 136, 140, 148], "self": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 55, 63, 65, 82, 99, 110, 113, 115, 121, 127, 128, 133, 135, 136, 137, 138], "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 90, 112, 113, 114, 115, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 141, 148, 151], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 85, 86, 117, 119, 121, 126, 127, 129, 130, 133, 138], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 49, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 79, 80, 83, 85, 99, 104, 108, 109, 113, 115, 117, 119, 123, 124, 126, 127, 129, 130, 131], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 44, 46, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 86, 90, 103, 104, 105, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "version": [0, 6, 29, 65, 66, 69, 85, 99, 101, 102, 103, 109, 110, 116, 117, 120, 128, 133, 153, 154], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 90, 108, 109, 110, 114, 117, 118, 119, 120, 121, 123, 124, 125, 127, 129, 131, 133, 137, 142, 147], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 49, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 90, 108, 109, 110, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 138, 141, 147, 153], "output": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 51, 52, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 99, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 137, 138, 141, 142, 148], "write": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 86, 99, 103, 106, 107, 108, 110, 111, 112, 114, 116, 117, 119, 120, 124, 126, 127, 128, 130, 133, 135, 138, 147, 154], "result": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 90, 93, 99, 110, 112, 113, 115, 116, 117, 119, 120, 123, 125, 126, 127, 128, 129, 130, 133, 136, 141, 148, 150], "It": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 99, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 145, 147, 148, 150, 151, 152, 153, 154], "must": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 85, 93, 101, 103, 105, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 130, 131, 133, 137, 138, 148, 154], "have": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "shape": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 51, 52, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 82, 85, 99, 110, 115, 117, 118, 119, 120, 123, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138], "broadcast": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 115, 117, 119, 120, 129, 130, 133], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 89, 90, 96, 97, 99, 109, 110, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 141, 148], "type": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 89, 90, 93, 96, 99, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 122, 123, 125, 126, 128, 129, 130, 131, 133, 135, 136, 147, 148, 151], "ret": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 53, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 97, 99, 120, 121, 126, 127, 128, 130, 133, 138], "an": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 89, 90, 99, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 153, 154], "element": [0, 2, 5, 6, 7, 10, 11, 13, 15, 16, 17, 19, 22, 23, 25, 26, 28, 29, 30, 33, 34, 36, 38, 39, 40, 42, 45, 46, 52, 58, 61, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 120, 128, 129, 131, 133, 151], "wise": [0, 5, 6, 11, 22, 28, 29, 34, 45, 46, 55, 58, 64, 65, 71, 131], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 90, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 133, 135, 136, 137, 138, 140, 141, 144, 145, 148, 150, 153, 154], "x": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 52, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 89, 93, 99, 106, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138], "1": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 90, 99, 102, 103, 106, 109, 110, 112, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141], "2": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 99, 106, 109, 110, 112, 114, 115, 116, 117, 119, 121, 123, 124, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 141, 153, 154], "0": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 93, 99, 110, 112, 114, 115, 116, 117, 119, 120, 121, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 141], "6": [0, 2, 5, 6, 7, 8, 10, 11, 13, 15, 16, 18, 19, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 99, 106, 112, 114, 115, 116, 119, 129, 131, 133, 135, 136, 137], "5": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 52, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 99, 106, 109, 110, 112, 114, 115, 119, 123, 128, 129, 135, 136, 137], "y": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 99, 114, 115, 119, 127, 128, 129, 130, 131, 133, 135], "print": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 99, 109, 110, 115, 119, 128, 129, 133, 135, 136, 137], "138": [0, 58], "165": [0, 58, 68], "4": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 99, 103, 106, 108, 109, 114, 115, 116, 119, 128, 129, 133, 135, 136, 137, 138, 147, 153, 154], "leaky_relu": [0, 22, 58], "alpha": [0, 5, 6, 22, 28, 29, 58, 64, 65, 127, 128], "float": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 17, 19, 22, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 42, 45, 51, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 79, 85, 112, 115, 117, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 137], "slope": [0, 6, 22, 29, 58, 65], "neg": [0, 5, 6, 11, 13, 15, 20, 22, 28, 29, 34, 36, 38, 43, 58, 61, 64, 65, 69, 71, 75, 80, 115, 124, 126], "section": [0, 6, 17, 29, 65, 77, 99, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 143, 150, 153], "leaki": [0, 22, 58], "relu": [0, 6, 21, 22, 29, 58, 65, 99, 128, 136, 137], "39": [0, 5, 6, 15, 22, 28, 29, 31, 38, 58, 64, 65, 67, 69, 79], "85": [0, 15, 22, 28, 31, 33, 38, 46, 58, 64, 66, 67, 68, 75], "17": [0, 6, 22, 28, 29, 30, 31, 33, 38, 46, 58, 61, 64, 65, 66, 67, 68, 69, 73, 75, 115, 119], "log_softmax": [0, 22, 58], "axi": [0, 2, 6, 7, 11, 12, 13, 16, 18, 19, 20, 22, 23, 25, 28, 29, 30, 34, 35, 36, 39, 41, 42, 43, 58, 61, 63, 65, 66, 68, 69, 70, 71, 75, 76, 78, 79, 80, 93, 115, 117, 119, 121, 123, 124, 126, 127, 129, 131, 133, 135, 138, 140], "int": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 138], "ax": [0, 6, 11, 13, 16, 19, 20, 22, 29, 34, 36, 39, 42, 43, 45, 63, 65, 66, 69, 71, 76, 79, 80, 82, 117, 119, 129, 130, 133, 135], "along": [0, 2, 6, 7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 28, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 43, 61, 63, 65, 66, 69, 70, 71, 72, 75, 76, 78, 79, 80, 85, 99, 108, 119, 126, 130, 131, 133, 147], "which": [0, 2, 3, 4, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 85, 97, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154], "should": [0, 2, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 19, 22, 23, 25, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 100, 102, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 143, 144, 147, 149, 154], "comput": [0, 5, 6, 7, 8, 10, 11, 12, 17, 19, 22, 23, 28, 29, 30, 31, 33, 34, 35, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 77, 79, 85, 99, 102, 103, 109, 115, 116, 117, 124, 127, 129, 131, 133, 136, 141, 142, 143, 145, 147, 148, 150, 151, 153], "98": [0, 8, 15, 22, 28, 31, 38, 58, 64, 67, 69, 73, 76, 79], "3": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 99, 106, 109, 112, 113, 114, 115, 117, 119, 121, 128, 129, 133, 135, 136, 137, 138, 154], "37": [0, 5, 6, 22, 28, 29, 45, 64, 65, 68, 69, 73, 75], "35": [0, 10, 22, 28, 29, 33, 34, 38, 64, 65, 68, 69, 76, 79], "0719": [0, 22], "62": [0, 22, 29, 37, 38, 64, 74, 75], "221": 0, "7": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 106, 110, 115, 116, 119, 124, 126, 129], "82": [0, 5, 31, 38, 67, 121], "mish": [0, 22, 58], "30340147": [0, 58], "86509842": [0, 22, 58], "sigmoid": [0, 6, 22, 29, 58, 65, 99, 133, 136, 137], "same": [0, 1, 2, 3, 5, 6, 8, 10, 11, 13, 15, 17, 18, 19, 23, 25, 26, 28, 29, 31, 33, 34, 36, 38, 40, 42, 45, 52, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 77, 78, 79, 83, 99, 101, 103, 105, 106, 109, 110, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 141, 144, 146, 153, 154], "269": [0, 58], "731": [0, 58], "881": [0, 5, 28, 58, 64], "softmax": [0, 10, 21, 22, 33, 58, 68, 99], "422": [0, 58], "155": [0, 33, 58, 68], "softplu": [0, 22, 58, 131], "beta": [0, 6, 14, 22, 29, 37, 58, 65, 74, 131], "threshold": [0, 5, 6, 22, 28, 29, 58, 64, 65, 131], "union": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 130, 131, 133, 138], "3461": [0, 22, 58], "6491": [0, 22, 58], "535": [0, 22, 58], "42": [0, 15, 22, 31, 37, 38, 58, 64, 65, 67, 69, 74, 75, 79, 99, 133, 138], "22": [0, 5, 6, 7, 15, 19, 22, 29, 30, 33, 38, 58, 64, 65, 68, 69, 73, 76, 79, 115], "09": [0, 5, 31, 38, 58, 64, 67, 68], "31": [0, 5, 6, 28, 29, 30, 33, 38, 58, 61, 64, 65, 66, 69, 136], "55": [0, 38, 64, 66, 69, 75, 79, 112], "13": [0, 5, 6, 10, 15, 19, 28, 29, 30, 31, 33, 36, 38, 42, 45, 58, 62, 63, 64, 65, 66, 67, 68, 69, 71, 76, 77, 79, 115, 119], "collect": [1, 23, 24, 48, 52, 54, 55, 58, 63, 66, 67, 68, 70, 73, 74, 75, 116, 121, 128, 129, 140, 145, 147, 150], "accept": [1, 2, 5, 11, 24, 28, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 99, 109, 110, 113, 115, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 135, 142, 145], "_to_ivi": 1, "ani": [1, 2, 4, 5, 6, 7, 11, 20, 21, 25, 27, 28, 29, 30, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "_to_n": 1, "inplac": [1, 7, 23, 30, 49, 55, 66, 73, 89, 90, 111, 113, 119, 123, 125, 127, 131, 135, 137], "args_to_ivi": [1, 45], "arg": [1, 23, 45, 49, 53, 61, 63, 65, 66, 83, 85, 93, 99, 106, 113, 121, 127, 133, 137], "include_deriv": [1, 24, 73], "kwarg": [1, 6, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 53, 61, 65, 66, 83, 85, 99, 113, 121, 127, 133, 137], "keyword": [1, 2, 23, 46, 53, 61, 65, 66, 73, 79, 83, 85, 108, 113, 115, 117, 118, 125, 126, 127, 128, 129, 130, 136], "form": [1, 2, 11, 23, 25, 34, 51, 61, 65, 66, 68, 69, 73, 102, 104, 124, 129, 131, 137, 138, 147, 148, 153], "all": [1, 2, 6, 7, 10, 11, 13, 15, 20, 21, 23, 24, 28, 29, 30, 33, 34, 36, 38, 43, 44, 50, 51, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 80, 83, 85, 89, 93, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154], "nest": [1, 23, 24, 46, 50, 53, 55, 66, 67, 72, 113, 115, 124, 130, 136, 137, 141, 142, 147], "otherwis": [1, 2, 3, 5, 6, 7, 10, 11, 13, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 53, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 78, 79, 80, 83, 99, 110, 113, 115, 117, 118, 119, 124, 125, 129, 133], "argument": [1, 2, 5, 6, 7, 11, 23, 24, 28, 29, 30, 46, 49, 53, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 77, 78, 79, 80, 83, 85, 90, 97, 99, 101, 108, 111, 112, 113, 114, 115, 119, 120, 122, 124, 125, 128, 129, 130, 131, 133, 135, 136, 142, 147], "ar": [1, 2, 5, 6, 7, 11, 13, 15, 16, 23, 25, 28, 29, 30, 34, 36, 38, 39, 45, 46, 50, 51, 53, 56, 61, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 83, 85, 90, 93, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154], "unchang": [1, 6, 65, 68], "iter": [1, 7, 13, 21, 23, 30, 36, 44, 46, 63, 65, 66, 71, 73, 103, 115, 133, 136], "The": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 90, 99, 100, 101, 103, 104, 105, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "posit": [1, 5, 6, 7, 11, 13, 28, 29, 30, 34, 36, 49, 59, 61, 62, 64, 65, 66, 69, 71, 75, 76, 80, 85, 90, 99, 108, 110, 112, 115, 125, 127, 129, 130, 136, 140, 149], "check": [1, 3, 7, 23, 26, 30, 50, 62, 63, 65, 66, 69, 73, 83, 99, 107, 108, 109, 110, 112, 115, 116, 119, 121, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137], "dict": [1, 7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 49, 53, 58, 63, 65, 66, 73, 85, 86, 113, 115, 122, 136, 137, 142], "recurs": [1, 23, 24, 62, 63, 66, 73, 106, 109, 112, 115, 124, 137, 141], "deriv": [1, 2, 6, 8, 24, 25, 29, 31, 53, 55, 56, 61, 65, 67, 73, 117, 118, 135, 137], "from": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 83, 85, 90, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154], "tupl": [1, 2, 3, 6, 7, 10, 11, 13, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 51, 53, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 76, 77, 79, 80, 113, 117, 121, 122, 123, 128, 129, 133, 136, 137, 141], "list": [1, 2, 3, 6, 7, 10, 13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 52, 58, 61, 62, 63, 65, 66, 67, 69, 71, 73, 74, 76, 77, 78, 82, 83, 85, 90, 93, 106, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 133, 136, 137, 138, 141, 147, 148, 153], "i": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "str": [1, 2, 6, 7, 10, 11, 13, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 58, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 79, 85, 86, 88, 90, 117, 118, 121, 122, 127, 130, 133, 138], "kei": [1, 6, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 49, 50, 52, 55, 65, 66, 68, 72, 73, 89, 99, 115, 116, 122, 127, 128, 129, 136, 147, 150, 154], "word": [1, 49, 61, 75, 115, 127, 142], "convert": [1, 2, 5, 24, 25, 28, 61, 62, 63, 64, 65, 66, 69, 73, 85, 99, 103, 108, 113, 125, 127, 129, 133, 141, 142, 145, 146, 153], "args_to_n": [1, 45, 126], "cont_inplac": 1, "nativ": [1, 2, 4, 7, 24, 27, 30, 45, 49, 61, 62, 63, 65, 66, 82, 85, 90, 99, 117, 121, 125, 126, 127, 128, 129, 133, 135, 136, 142, 145, 154], "backend": [1, 2, 6, 7, 11, 23, 29, 30, 34, 49, 53, 55, 61, 62, 63, 65, 66, 69, 83, 85, 86, 99, 101, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 138, 142, 147, 150, 153, 154], "framework": [1, 7, 49, 55, 62, 63, 66, 73, 83, 85, 86, 90, 101, 102, 103, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 138, 140, 141, 142, 143, 144, 145, 146, 148, 151], "updat": [1, 7, 8, 23, 30, 31, 49, 55, 66, 67, 68, 72, 73, 90, 99, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 123, 125, 127, 128, 129, 131, 133, 135, 136, 138, 141], "contain": [1, 2, 3, 5, 6, 7, 11, 12, 13, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 89, 90, 99, 101, 105, 106, 108, 109, 111, 112, 113, 116, 117, 119, 120, 123, 124, 125, 126, 129, 132, 133, 134, 137, 141, 142, 147, 148, 153], "place": [1, 2, 5, 6, 7, 11, 13, 23, 25, 27, 28, 29, 30, 36, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 99, 105, 107, 110, 111, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 142, 149], "to_ivi": [1, 24, 45, 73], "frontend": [1, 66, 85, 86, 90, 99, 107, 110, 111, 116, 117, 121, 129, 130, 131, 132, 134, 142, 147], "If": [1, 2, 3, 5, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 50, 51, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 85, 99, 101, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "set": [1, 6, 7, 10, 11, 16, 18, 19, 23, 29, 30, 33, 34, 39, 41, 42, 50, 51, 52, 55, 62, 63, 64, 65, 66, 68, 69, 73, 75, 76, 78, 79, 85, 90, 101, 104, 106, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 145, 146, 147, 148, 149, 151, 154], "leaf": [1, 23, 42, 73, 115, 124, 136], "within": [1, 6, 29, 61, 65, 75, 99, 108, 110, 113, 116, 127, 128, 129, 137, 141, 143, 144, 148], "nativearrai": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 113, 115, 119, 121, 122, 123, 124, 125, 126, 127, 130, 133, 135, 142], "manner": [1, 24, 73, 101, 109, 118, 120, 127, 130, 136, 140, 141, 143, 145, 153, 154], "travers": [1, 24, 73, 115, 117, 133], "lowest": [1, 15, 24, 38, 73, 75, 124, 141, 142, 144, 148, 152], "leav": [1, 24, 26, 28, 29, 30, 33, 34, 36, 42, 46, 71, 73, 89, 99, 108, 115, 117, 119, 120, 123, 124, 126, 127, 129, 136, 137], "search": [1, 6, 24, 29, 90, 101, 107, 109, 115, 119, 129, 130], "its": [1, 3, 6, 13, 23, 26, 30, 36, 50, 62, 63, 65, 66, 69, 71, 73, 85, 89, 99, 106, 108, 109, 110, 113, 116, 117, 120, 125, 127, 128, 129, 130, 131, 138, 141, 142, 146, 147, 153], "case": [1, 2, 6, 7, 13, 19, 23, 30, 36, 46, 52, 53, 55, 61, 63, 64, 65, 66, 69, 71, 73, 79, 99, 102, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 141, 146, 150], "to_n": [1, 24, 45, 133], "item": [1, 7, 21, 23, 29, 30, 53, 62, 63, 66, 67, 73, 99, 108, 115, 117, 133, 135, 136, 138], "mayb": [1, 99, 109, 116, 133, 135], "_arraywithcr": [2, 45], "asarrai": [2, 6, 7, 25, 29, 30, 46, 61, 65, 66, 68, 77, 125, 126, 127, 128], "copi": [2, 3, 4, 6, 7, 13, 23, 25, 26, 27, 29, 30, 36, 61, 62, 63, 65, 66, 71, 73, 78, 106, 109, 110, 112, 114, 116, 117, 120, 127, 128, 133, 140, 141], "dtype": [2, 3, 6, 7, 10, 11, 15, 16, 19, 25, 26, 29, 30, 33, 34, 38, 39, 42, 45, 51, 52, 53, 54, 56, 61, 62, 63, 65, 66, 68, 69, 75, 76, 78, 79, 80, 82, 83, 85, 93, 99, 112, 114, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 133, 135], "devic": [2, 6, 15, 23, 25, 29, 38, 45, 49, 51, 52, 53, 54, 55, 56, 61, 65, 66, 75, 82, 83, 85, 86, 99, 102, 110, 111, 114, 117, 121, 124, 125, 128, 129, 130, 131, 133, 138, 141, 142, 146, 147, 149, 150, 151, 152], "data": [2, 5, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 23, 25, 28, 29, 30, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 61, 63, 64, 65, 66, 68, 69, 71, 75, 76, 78, 79, 80, 82, 83, 85, 86, 90, 93, 99, 100, 102, 109, 111, 112, 113, 115, 118, 120, 123, 124, 125, 126, 128, 130, 131, 133, 135, 142, 147, 148, 149, 151, 152, 153], "can": [2, 3, 6, 11, 13, 15, 17, 25, 26, 29, 34, 36, 38, 40, 61, 62, 63, 65, 66, 67, 69, 71, 75, 85, 90, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 153, 154], "includ": [2, 6, 7, 11, 16, 19, 20, 23, 25, 28, 29, 30, 34, 39, 42, 43, 51, 52, 54, 61, 65, 66, 69, 73, 75, 76, 79, 80, 85, 97, 99, 102, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 140, 141, 144, 145, 147, 149, 152, 153, 154], "ndarrai": [2, 6, 7, 25, 29, 61, 65, 66, 108, 113, 117, 118, 123, 126, 127, 128, 130, 131, 133, 135, 138, 142], "boolean": [2, 3, 5, 6, 7, 13, 16, 19, 23, 25, 26, 28, 29, 30, 36, 39, 42, 45, 46, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 79, 90, 115, 127, 129, 131], "indic": [2, 6, 7, 10, 11, 13, 14, 16, 17, 18, 23, 25, 26, 29, 30, 33, 34, 36, 37, 39, 40, 41, 50, 52, 53, 61, 64, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 85, 86, 93, 97, 106, 116, 122, 123, 127, 138], "nativedtyp": [2, 3, 6, 10, 11, 15, 16, 19, 25, 29, 34, 38, 39, 42, 51, 61, 62, 65, 68, 69, 75, 76, 78, 79, 117, 118, 123, 130, 133], "datatyp": [2, 23, 25, 61, 62, 83, 130], "infer": [2, 6, 7, 10, 13, 25, 29, 30, 33, 36, 61, 62, 65, 66, 68, 71, 111, 114, 117, 118, 125, 129, 133, 138, 145, 146, 149, 151], "nativedevic": [2, 4, 6, 15, 25, 27, 29, 38, 51, 55, 56, 61, 63, 65, 75, 117, 118, 121, 123, 130], "creat": [2, 6, 15, 23, 25, 29, 34, 38, 49, 51, 52, 53, 54, 55, 56, 61, 65, 66, 67, 75, 85, 90, 102, 104, 105, 106, 108, 109, 110, 113, 116, 117, 118, 121, 125, 126, 127, 128, 129, 131, 133, 134, 137, 139, 140, 142, 147, 148, 153], "interpret": [2, 25, 61, 116, 148], "With": [2, 3, 5, 6, 7, 8, 10, 11, 13, 16, 19, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 109, 119, 125, 127, 129, 131, 133, 147, 150], "9": [2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 17, 18, 19, 22, 26, 28, 29, 30, 31, 33, 34, 36, 38, 40, 41, 42, 45, 46, 55, 58, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 106, 115, 119, 121, 129, 136, 137, 143], "39999998": [2, 61, 77], "5999999": [2, 61, 68], "0999999": [2, 19, 61], "10000038": [2, 61], "np": [2, 6, 28, 29, 30, 61, 64, 65, 66, 73, 85, 99, 108, 113, 117, 118, 121, 123, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 142], "order": [2, 6, 10, 11, 13, 17, 18, 23, 29, 33, 34, 36, 41, 45, 46, 50, 53, 56, 61, 64, 65, 68, 69, 71, 72, 76, 77, 78, 85, 99, 101, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 136, 138, 141, 143, 146, 147, 148, 150, 153], "c": [2, 6, 7, 8, 10, 13, 19, 25, 26, 28, 29, 30, 31, 33, 34, 36, 40, 42, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 76, 77, 79, 100, 102, 103, 104, 109, 111, 115, 119, 124, 131, 132, 133, 134, 136, 141, 142, 143, 147, 151, 152, 154], "90786433e": [2, 61], "310": [2, 61], "copy_arrai": [2, 46, 61], "to_ivy_arrai": [2, 61], "true": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 85, 93, 99, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138], "e": [2, 6, 11, 15, 17, 18, 19, 21, 29, 34, 38, 41, 42, 44, 45, 59, 61, 62, 63, 64, 65, 69, 71, 73, 75, 77, 78, 79, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 121, 127, 129, 133, 136, 141, 142, 143], "torch": [2, 7, 11, 21, 30, 34, 49, 61, 62, 63, 64, 66, 69, 85, 99, 109, 110, 112, 113, 114, 116, 117, 118, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 141, 142, 153], "tensor": [2, 5, 6, 7, 10, 13, 15, 23, 25, 28, 29, 30, 33, 34, 36, 38, 52, 61, 62, 64, 65, 66, 68, 69, 71, 75, 99, 101, 113, 114, 117, 118, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 141, 142, 144, 145, 148, 150, 151, 154], "etc": [2, 6, 15, 17, 21, 25, 29, 38, 44, 51, 52, 53, 54, 55, 56, 61, 65, 75, 77, 103, 108, 109, 110, 112, 113, 115, 117, 119, 121, 123, 127, 128, 129, 130, 133, 135, 136, 141, 142, 145, 147, 153], "depend": [2, 3, 7, 11, 17, 18, 26, 34, 41, 42, 61, 62, 64, 65, 66, 69, 76, 78, 99, 102, 105, 108, 109, 110, 117, 120, 125, 126, 127, 128, 129, 131, 133, 141, 145, 147, 148], "empty_lik": [2, 25, 61, 131], "deafult": [2, 16, 39, 61, 76], "uniniti": [2, 61], "from_dlpack": [2, 25, 61], "full_lik": [2, 25, 61, 130], "fill_valu": [2, 16, 25, 39, 61, 64, 76, 93, 117, 128, 130], "scalar": [2, 5, 6, 7, 11, 22, 25, 28, 29, 30, 34, 61, 64, 65, 66, 69, 117, 127, 141, 147], "fill": [2, 6, 15, 16, 23, 25, 29, 38, 39, 51, 61, 65, 75, 76, 128], "valu": [2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 85, 89, 109, 110, 112, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 133, 135, 141, 147, 148], "where": [2, 5, 6, 7, 11, 13, 15, 16, 19, 20, 23, 25, 28, 29, 30, 34, 36, 38, 39, 42, 43, 51, 61, 64, 65, 66, 67, 69, 71, 73, 75, 76, 79, 80, 99, 101, 102, 103, 104, 106, 109, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 141, 145, 154], "everi": [2, 6, 7, 29, 30, 61, 65, 66, 105, 106, 108, 110, 112, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 137, 147], "equal": [2, 3, 5, 6, 7, 11, 13, 15, 17, 18, 19, 23, 26, 28, 29, 30, 34, 36, 38, 41, 45, 46, 51, 61, 62, 64, 65, 66, 69, 71, 75, 77, 78, 79, 90, 115, 117, 119, 121, 124, 128, 129], "000123": [2, 61], "ones": [2, 6, 8, 10, 15, 23, 25, 29, 33, 38, 45, 46, 61, 63, 64, 65, 67, 68, 99, 113, 116, 119, 123, 129, 135, 136, 147], "linspac": [2, 25, 61, 123, 131, 133, 154], "stop": [2, 8, 25, 31, 55, 61, 63, 67, 72, 73, 123, 131, 133, 141, 147], "num": [2, 25, 61, 110, 123, 133], "endpoint": [2, 25, 51, 61, 123], "logspac": [2, 25, 61, 133], "10": [2, 5, 6, 7, 8, 10, 11, 15, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 55, 61, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 99, 102, 106, 109, 112, 115, 116, 117, 119, 128, 129, 133, 135, 136, 152], "first": [2, 5, 6, 11, 13, 15, 16, 17, 19, 25, 28, 29, 30, 34, 36, 38, 40, 42, 45, 46, 51, 52, 53, 55, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 75, 76, 77, 78, 79, 85, 99, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 115, 119, 123, 124, 125, 126, 127, 129, 131, 133, 135, 136, 138, 145, 147, 148, 152], "rang": [2, 6, 19, 25, 29, 51, 61, 65, 66, 77, 79, 99, 117, 121, 129, 133, 136, 137, 138, 147, 153], "log": [2, 5, 6, 11, 25, 28, 29, 34, 61, 64, 65, 110, 115, 116, 119, 124, 126, 127, 129, 131, 133, 136], "space": [2, 6, 7, 25, 28, 29, 30, 61, 65, 66, 67, 102, 131], "start": [2, 23, 25, 50, 61, 63, 65, 99, 104, 105, 106, 108, 109, 110, 111, 116, 117, 119, 120, 123, 127, 129, 131, 132, 133, 135, 136, 137, 140, 141, 147, 153], "sequenc": [2, 6, 10, 11, 13, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 52, 54, 56, 61, 65, 66, 67, 68, 69, 71, 73, 79, 80, 110, 116, 117, 118, 119, 121, 129, 130, 133, 138, 140, 150], "last": [2, 6, 10, 11, 12, 13, 16, 18, 19, 20, 23, 25, 29, 33, 34, 35, 36, 41, 42, 43, 45, 52, 61, 63, 65, 67, 68, 69, 70, 71, 76, 78, 79, 80, 99, 103, 110, 112, 114, 117, 119, 122, 126, 128, 129, 131, 133, 141, 147], "final": [2, 7, 30, 52, 61, 66, 108, 110, 112, 113, 116, 117, 119, 120, 122, 124, 126, 127, 131, 132, 136, 143, 153], "number": [2, 3, 5, 6, 7, 10, 11, 13, 15, 16, 17, 19, 20, 23, 25, 26, 28, 29, 30, 33, 34, 36, 38, 39, 40, 42, 43, 45, 46, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 75, 76, 77, 79, 80, 82, 85, 90, 99, 100, 101, 109, 110, 115, 116, 117, 118, 119, 126, 129, 131, 133, 136], "gener": [2, 5, 6, 10, 15, 21, 25, 28, 29, 33, 38, 44, 55, 61, 62, 64, 65, 68, 69, 71, 75, 79, 90, 106, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 135, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153], "oper": [2, 3, 6, 7, 10, 23, 25, 26, 29, 30, 33, 46, 61, 62, 64, 65, 66, 68, 99, 101, 108, 109, 112, 113, 115, 117, 118, 119, 120, 121, 124, 126, 127, 129, 131, 133, 136, 137, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154], "perform": [2, 6, 10, 11, 19, 20, 25, 29, 30, 33, 34, 42, 43, 58, 61, 64, 65, 66, 68, 69, 72, 73, 79, 80, 83, 103, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 141, 144, 147, 148, 149, 150, 151, 152, 154], "relev": [2, 25, 55, 61, 65, 99, 102, 108, 109, 110, 113, 115, 116, 117, 119, 128, 129, 136, 145, 152, 153], "onli": [2, 6, 11, 13, 15, 23, 25, 29, 34, 36, 38, 45, 53, 55, 61, 62, 63, 64, 65, 66, 69, 71, 73, 75, 76, 78, 79, 86, 99, 101, 104, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 141, 146, 147, 148, 153, 154], "like": [2, 6, 13, 25, 29, 36, 61, 62, 65, 69, 71, 75, 99, 102, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 147, 152], "sampl": [2, 6, 15, 19, 25, 28, 29, 38, 42, 52, 61, 65, 75, 79, 125, 128, 129], "on_valu": [2, 25, 61], "off_valu": [2, 25, 61], "float32": [2, 3, 7, 10, 25, 26, 30, 33, 42, 61, 62, 65, 66, 68, 69, 85, 99, 117, 119, 128, 129], "cuda": [2, 6, 15, 25, 29, 38, 51, 52, 53, 54, 55, 56, 61, 63, 65, 75, 99, 133, 141, 142, 152], "cpu": [2, 4, 6, 15, 25, 27, 29, 38, 51, 52, 53, 54, 55, 56, 61, 63, 65, 69, 75, 85, 99, 110, 118, 127, 129, 141, 145, 147, 150, 152], "evenli": [2, 6, 10, 13, 23, 25, 28, 33, 36, 61, 65, 68, 71], "both": [2, 5, 6, 11, 25, 28, 29, 34, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 83, 99, 106, 110, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 129, 131, 133, 135, 136, 137, 138, 140, 141, 147, 150, 152, 153, 154], "descript": [2, 5, 11, 28, 34, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 108, 120], "hint": [2, 5, 11, 28, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 108, 113, 120, 123, 124, 126, 127, 130], "abov": [2, 5, 6, 11, 15, 22, 28, 29, 34, 38, 58, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 99, 106, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 135, 136, 137, 138, 147, 152], "assum": [2, 5, 6, 11, 28, 29, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 99, 106, 112, 114, 116, 117, 120, 128, 129, 131, 135, 136, 141], "simplic": [2, 5, 11, 28, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 120, 131, 137, 140], "nestabl": [2, 5, 11, 28, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 111, 119, 120, 126, 129, 142], "therefor": [2, 5, 11, 28, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 99, 101, 105, 108, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 141, 144, 147, 153], "01": [2, 6, 7, 8, 29, 30, 31, 34, 38, 61, 64, 65, 66, 67, 69, 75, 114, 138], "02": [2, 8, 14, 15, 28, 31, 38, 61, 64, 65, 66, 67, 74, 75, 128], "03": [2, 5, 8, 28, 31, 38, 61, 64, 66, 67, 68, 69], "04": [2, 8, 22, 26, 31, 58, 61, 62, 64, 66, 67, 68, 129], "05": [2, 5, 6, 8, 14, 28, 29, 31, 37, 54, 61, 64, 65, 66, 67, 69, 74, 83, 128, 129], "100": [2, 6, 25, 28, 29, 30, 61, 64, 65, 66, 69, 73, 99, 102, 103, 116, 129, 136, 137, 138, 141], "464": [2, 5, 38, 61, 64], "15888336": [2, 61], "1000": [2, 25, 61, 99, 136], "2154": [2, 61], "43469003": [2, 61], "10000": [2, 25, 61], "meshgrid": [2, 25, 61], "spars": [2, 12, 25, 35, 61, 70], "index": [2, 6, 7, 13, 16, 17, 18, 23, 25, 29, 30, 36, 39, 40, 41, 59, 61, 63, 65, 66, 71, 73, 76, 77, 78, 85, 97, 106, 115, 116, 124, 128, 129, 135, 147], "xy": [2, 25, 61], "one": [2, 6, 7, 10, 11, 13, 16, 17, 19, 23, 25, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 79, 93, 99, 102, 103, 108, 109, 110, 112, 113, 114, 115, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 138, 141, 147, 148, 150, 153], "dimension": [2, 6, 11, 13, 16, 19, 20, 23, 28, 29, 34, 36, 42, 43, 45, 61, 65, 69, 71, 76, 79, 80, 133, 144, 147, 154], "arbitrari": [2, 3, 6, 23, 26, 61, 62, 67, 115, 123, 124, 126, 127, 129, 137, 141, 148, 153], "repres": [2, 5, 6, 10, 11, 28, 29, 33, 34, 51, 61, 62, 64, 65, 67, 68, 69, 106, 113, 131, 135, 144, 145, 148], "grid": [2, 61, 119, 129, 140], "coordin": [2, 5, 16, 28, 29, 39, 61, 64, 65, 76], "each": [2, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 19, 23, 26, 28, 29, 30, 31, 33, 34, 36, 39, 40, 42, 45, 46, 52, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 79, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 140, 141, 143, 144, 148, 150, 153], "numer": [2, 3, 5, 7, 11, 15, 16, 19, 26, 28, 29, 30, 34, 38, 39, 41, 45, 46, 51, 61, 62, 64, 65, 66, 69, 75, 76, 79, 117, 125, 127, 128, 129, 130, 131, 133, 137, 144, 147, 153], "conserv": [2, 61], "memori": [2, 6, 13, 29, 36, 61, 63, 65, 68, 71, 99, 116, 117, 118, 126, 127, 131, 133, 139, 141, 147, 149, 150, 151], "cartesian": [2, 61], "matrix": [2, 6, 7, 10, 11, 29, 30, 33, 34, 45, 51, 52, 61, 65, 66, 68, 69, 108, 117, 124, 127, 145, 147], "ij": [2, 19, 61, 79], "provid": [2, 6, 7, 11, 13, 16, 19, 20, 23, 25, 29, 30, 34, 36, 39, 42, 43, 52, 55, 58, 61, 62, 63, 65, 66, 69, 71, 76, 79, 80, 99, 101, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 135, 137, 140, 141, 145, 146, 147, 148, 149, 150, 151, 154], "zero": [2, 3, 5, 6, 8, 10, 11, 13, 16, 17, 19, 20, 25, 26, 28, 29, 31, 33, 34, 38, 39, 42, 43, 45, 46, 51, 52, 55, 58, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 103, 113, 115, 117, 118, 119, 123, 125, 128, 133, 136, 137, 146], "vector": [2, 6, 7, 10, 11, 30, 33, 34, 52, 61, 65, 66, 68, 69, 140, 147], "": [2, 6, 7, 8, 11, 19, 29, 31, 34, 42, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 85, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153], "respect": [2, 5, 6, 8, 11, 28, 29, 31, 34, 51, 61, 64, 65, 67, 68, 69, 72, 85, 107, 108, 110, 113, 115, 116, 117, 119, 123, 127, 129, 130, 143, 153], "ha": [2, 6, 11, 13, 17, 19, 23, 26, 29, 30, 34, 36, 40, 42, 50, 61, 63, 64, 65, 67, 69, 71, 77, 79, 101, 102, 103, 106, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 141, 143, 146, 147, 149, 150, 153], "effect": [2, 6, 8, 19, 29, 31, 42, 61, 65, 67, 79, 102, 108, 113, 115, 116, 120, 123, 126, 131, 141], "ignor": [2, 6, 23, 29, 55, 61, 65, 69, 73, 116, 119, 129, 141, 153], "n": [2, 6, 10, 11, 13, 15, 16, 19, 20, 28, 29, 33, 34, 36, 38, 39, 42, 43, 45, 61, 65, 68, 69, 71, 73, 75, 76, 79, 80, 99, 111, 129], "rank": [2, 6, 11, 13, 20, 29, 34, 36, 43, 61, 65, 69, 71, 76, 80, 121], "For": [2, 6, 11, 17, 29, 34, 49, 61, 64, 65, 69, 71, 77, 79, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 144, 145, 148, 153, 154], "length": [2, 6, 13, 23, 29, 36, 46, 50, 61, 65, 66, 69, 71, 122, 129, 136], "ni": [2, 61], "len": [2, 6, 11, 29, 34, 61, 65, 69, 99, 115, 116, 126, 127, 129, 135, 138], "xi": [2, 61], "native_arrai": [2, 3, 5, 7, 25, 27, 28, 30, 41, 58, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 79, 80, 85, 89, 125, 128, 129], "A": [2, 3, 6, 7, 13, 15, 19, 20, 23, 26, 28, 29, 30, 34, 36, 38, 40, 43, 46, 50, 51, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 83, 85, 86, 90, 100, 101, 102, 103, 106, 107, 108, 109, 111, 115, 117, 118, 121, 123, 124, 127, 128, 129, 133, 136, 141, 142, 147, 148], "one_hot": [2, 25, 61, 99, 138], "depth": [2, 6, 10, 25, 29, 33, 50, 53, 61, 65, 66, 68, 73, 110, 116, 136, 137, 138, 140], "scatter": [2, 7, 25, 30, 61, 66, 131, 154], "defin": [2, 6, 7, 11, 25, 29, 30, 34, 61, 64, 65, 66, 69, 79, 99, 108, 109, 113, 116, 117, 120, 123, 127, 128, 129, 130, 135, 137, 141, 142, 144, 145, 146, 147, 148, 151, 153, 154], "hot": [2, 25, 61, 99], "dimens": [2, 6, 7, 10, 11, 12, 13, 15, 16, 17, 19, 20, 23, 25, 29, 30, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 52, 58, 61, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 82, 119, 121, 124, 127, 128, 129, 131, 133, 136], "when": [2, 3, 6, 11, 12, 15, 16, 19, 23, 25, 26, 28, 29, 34, 35, 38, 39, 42, 46, 50, 51, 53, 61, 62, 64, 65, 66, 68, 69, 70, 73, 75, 76, 79, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 138, 141, 145, 147, 150, 151, 152, 153], "j": [2, 6, 11, 19, 25, 28, 29, 34, 61, 65, 66, 69, 79, 110, 111, 143], "unless": [2, 6, 11, 25, 29, 61, 65, 69, 114, 118, 126, 141], "overrid": [2, 25, 61, 113], "z": [2, 5, 6, 7, 11, 12, 15, 17, 19, 25, 28, 29, 30, 34, 35, 36, 38, 42, 45, 46, 51, 61, 63, 64, 65, 66, 69, 70, 71, 73, 75, 76, 77, 79, 99, 114, 115, 119, 133, 135], "ones_lik": [2, 25, 61, 114, 138], "tril": [2, 25, 61], "k": [2, 6, 10, 11, 15, 25, 28, 29, 33, 34, 38, 61, 65, 66, 68, 69, 73, 75, 76, 99, 111, 112, 127, 128, 133, 143, 147], "m": [2, 6, 11, 15, 28, 29, 34, 38, 45, 61, 65, 69, 73, 75, 99, 105, 106, 109, 110, 111, 116, 133], "whose": [2, 5, 6, 7, 11, 13, 17, 19, 25, 28, 29, 30, 34, 36, 40, 42, 45, 61, 64, 65, 66, 69, 71, 77, 79, 120, 129], "innermost": [2, 11, 34, 61, 69], "two": [2, 6, 11, 17, 29, 30, 34, 45, 46, 61, 62, 64, 65, 66, 69, 71, 77, 103, 108, 109, 112, 113, 117, 119, 120, 127, 128, 129, 131, 132, 136, 138, 144, 152], "mxn": [2, 11, 34, 61, 69], "matric": [2, 11, 29, 34, 45, 61, 65, 68, 69, 124, 140, 147], "diagon": [2, 6, 11, 29, 34, 61, 65, 69], "main": [2, 6, 11, 29, 34, 61, 65, 69, 106, 109, 112, 115, 122, 125, 145, 147, 148, 153], "below": [2, 11, 34, 42, 61, 64, 65, 69, 99, 104, 106, 108, 109, 111, 112, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 145, 150, 152], "lower": [2, 5, 6, 11, 15, 28, 29, 34, 38, 50, 51, 61, 64, 65, 69, 75, 99, 110, 119, 127, 129, 131, 133, 141, 142, 143, 144, 145, 147, 148, 153, 154], "triangular": [2, 11, 34, 61, 65, 69], "part": [2, 6, 29, 53, 61, 64, 65, 69, 85, 99, 105, 110, 112, 124, 127, 129, 130, 131, 133, 134, 138, 140, 141, 145, 147, 152, 153, 154], "specifi": [2, 3, 6, 7, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 26, 29, 30, 34, 35, 36, 38, 39, 42, 43, 50, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 110, 111, 117, 118, 123, 124, 125, 126, 127, 128, 129, 131, 133, 136, 137, 153], "alloc": [2, 3, 26, 61, 62, 108, 110, 141], "triu": [2, 25, 61], "upper": [2, 6, 11, 15, 29, 34, 38, 50, 61, 65, 69, 75, 126, 129], "zeros_lik": [2, 25, 34, 61, 62, 64, 67, 68, 71, 127, 131], "data_typ": [3, 6, 26, 29, 62, 117, 129, 130], "_arraywithdatatyp": [3, 45], "astyp": [3, 10, 26, 33, 62, 68, 99, 117, 126, 127, 131], "irrespect": [3, 11, 26, 34, 62, 69, 115, 126, 135, 154], "promot": [3, 5, 6, 11, 26, 28, 29, 34, 41, 45, 46, 62, 64, 65, 69, 71, 79, 112, 120, 121, 124], "rule": [3, 6, 11, 26, 28, 34, 62, 64, 65, 69, 71, 112, 113, 115, 116, 117, 119, 122, 123, 124, 129, 131, 148], "cast": [3, 6, 11, 19, 26, 29, 34, 62, 65, 69, 79, 117, 124, 128, 133], "point": [3, 5, 6, 11, 15, 17, 19, 26, 28, 29, 34, 38, 42, 59, 61, 62, 64, 65, 69, 75, 77, 78, 79, 103, 108, 109, 110, 112, 113, 116, 119, 120, 123, 126, 127, 129, 130, 131, 133, 135, 136, 140, 153], "nan": [3, 5, 6, 7, 17, 19, 26, 28, 29, 30, 59, 62, 64, 65, 66, 77, 79, 80, 112, 117, 120, 130], "infin": [3, 5, 6, 7, 11, 26, 28, 29, 34, 59, 62, 64, 65, 66, 69, 79, 80, 112, 120], "integr": [3, 6, 26, 28, 62, 65, 99, 107, 109, 111, 145, 147, 149, 150, 151], "implement": [3, 4, 6, 17, 18, 26, 27, 29, 34, 41, 62, 63, 64, 65, 69, 77, 78, 79, 99, 108, 111, 112, 113, 114, 115, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 150, 153, 154], "non": [3, 6, 11, 15, 16, 19, 20, 26, 29, 34, 38, 39, 42, 43, 51, 53, 55, 62, 64, 65, 69, 73, 75, 76, 79, 80, 113, 115, 117, 119, 125, 133, 147], "desir": [3, 4, 6, 16, 23, 26, 27, 29, 39, 51, 52, 62, 63, 65, 76, 101, 110, 114, 116, 117, 127, 133, 147], "match": [3, 6, 23, 26, 29, 62, 64, 65, 66, 83, 108, 113, 115, 119, 128, 148, 153], "newli": [3, 26, 62, 66, 110, 116, 126, 129], "alwai": [3, 13, 26, 36, 62, 64, 65, 66, 71, 99, 108, 110, 113, 114, 115, 117, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 141], "float64": [3, 15, 19, 26, 29, 38, 42, 61, 62, 65, 75, 85, 117, 128, 129], "broadcast_arrai": [3, 26, 62], "against": [3, 6, 11, 16, 26, 28, 29, 34, 39, 62, 65, 69, 76, 101, 129, 133, 141, 147], "other": [3, 6, 7, 13, 19, 23, 26, 28, 29, 30, 36, 42, 45, 46, 61, 62, 64, 65, 66, 75, 79, 99, 102, 105, 108, 109, 110, 112, 113, 115, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 153, 154], "correspond": [3, 5, 6, 7, 10, 13, 16, 17, 19, 23, 26, 28, 29, 33, 36, 42, 46, 58, 62, 64, 65, 66, 68, 69, 71, 75, 76, 77, 79, 85, 99, 108, 110, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 127, 129, 131, 133, 147], "x1": [3, 5, 6, 7, 11, 16, 26, 28, 29, 30, 34, 39, 41, 45, 46, 61, 62, 63, 64, 65, 66, 69, 76, 78, 85, 93, 99, 112, 117, 119, 121, 123, 126, 127], "x2": [3, 5, 6, 7, 11, 16, 26, 28, 29, 30, 34, 39, 45, 46, 61, 62, 63, 64, 65, 66, 69, 76, 85, 93, 112, 117, 119, 121, 123, 126, 127], "x3": [3, 7, 61, 62, 66], "mix": [3, 5, 26, 28, 30, 35, 38, 45, 46, 62, 64, 65, 66, 68, 69, 70, 71, 74, 76, 79, 111, 119, 125, 126, 129, 131, 133, 142, 147, 151, 153], "broadcast_to": [3, 26, 62, 117], "store": [3, 7, 11, 13, 23, 26, 30, 34, 36, 40, 53, 61, 65, 66, 69, 71, 85, 86, 110, 113, 114, 115, 120, 125, 127, 133, 135, 136, 137, 142], "can_cast": [3, 26, 62, 117, 124, 127], "occur": [3, 6, 17, 26, 29, 40, 62, 65, 76, 77, 112, 116, 121], "accord": [3, 7, 13, 19, 26, 36, 42, 62, 64, 65, 66, 69, 71, 79, 93, 106, 108, 109, 112, 117, 124, 127, 129], "as_n": [3, 4, 23, 26, 27, 62, 63, 117], "int32": [3, 7, 15, 16, 19, 26, 30, 38, 39, 61, 62, 63, 65, 66, 75, 76, 79, 117, 127, 129, 133], "finfo": [3, 26, 62, 129], "inform": [3, 8, 26, 31, 62, 66, 67, 99, 107, 108, 109, 110, 112, 115, 116, 121, 129, 150], "about": [3, 26, 62, 99, 103, 107, 108, 109, 110, 112, 116, 117, 123, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 148, 149, 152], "8": [3, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 52, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 106, 109, 115, 116, 119, 129, 132, 136], "14": [3, 5, 6, 10, 15, 19, 26, 28, 29, 30, 33, 34, 36, 38, 62, 64, 65, 66, 67, 68, 69, 71, 77, 79, 106, 115, 119, 129], "resolut": [3, 26, 62, 110], "1e": [3, 6, 8, 11, 12, 14, 26, 29, 31, 34, 35, 37, 54, 55, 62, 65, 66, 67, 69, 70, 74, 83, 85, 99, 115, 124, 126, 128, 137, 138], "06": [3, 15, 28, 31, 58, 62, 65, 67, 83, 85, 129, 136], "min": [3, 6, 7, 11, 19, 26, 29, 30, 34, 42, 62, 64, 65, 66, 69, 79, 99], "4028235e": [3, 62], "38": [3, 6, 28, 29, 38, 62, 64, 65, 69, 119], "max": [3, 6, 7, 11, 19, 26, 29, 30, 34, 42, 55, 62, 64, 65, 66, 69, 79, 116, 127, 129], "iinfo": [3, 26, 62, 122], "integ": [3, 5, 6, 10, 11, 13, 15, 19, 20, 23, 28, 29, 33, 34, 36, 38, 42, 43, 45, 46, 61, 62, 64, 65, 66, 68, 69, 71, 75, 78, 79, 80, 90, 110, 115, 117, 125, 128, 129, 133, 135], "119": 3, "122": [3, 64], "int8": [3, 15, 26, 38, 62, 117, 129], "128": [3, 6, 10, 26, 29, 33, 46, 62, 65, 66, 68, 69], "127": [3, 6, 26, 29, 62, 65], "12": [3, 5, 6, 7, 10, 11, 15, 19, 26, 28, 29, 30, 33, 34, 36, 37, 38, 42, 45, 46, 64, 65, 66, 68, 69, 71, 74, 75, 76, 77, 79, 109, 114, 115, 117, 119, 130], "54": [3, 5, 10, 28, 29, 33, 38, 64, 65, 68, 69, 79, 119], "1220": 3, "int16": [3, 15, 19, 26, 38, 62, 79, 117, 127, 129, 133], "32768": [3, 26], "32767": [3, 26], "is_bool_dtyp": [3, 26, 62], "is_float_dtyp": [3, 26, 62, 130], "see": [3, 5, 11, 16, 17, 19, 20, 28, 29, 34, 39, 42, 43, 45, 46, 61, 62, 64, 65, 69, 76, 77, 79, 80, 99, 101, 104, 106, 108, 109, 110, 112, 113, 115, 116, 118, 119, 121, 123, 124, 127, 128, 129, 130, 131, 133, 135, 136, 140, 141, 143], "is_int_dtyp": [3, 26, 62, 128, 130], "is_uint_dtyp": [3, 26, 62, 128, 130], "result_typ": [3, 26, 62, 117], "arrays_and_dtyp": [3, 26, 62], "involv": [3, 26, 62, 64, 102, 104, 106, 111, 116, 117, 119, 131, 138, 147, 153], "_arraywithdevic": [4, 45], "dev": [4, 23, 27, 61, 63, 109, 118, 124, 135, 137], "get": [4, 11, 23, 27, 34, 40, 45, 50, 51, 52, 58, 62, 63, 66, 69, 73, 99, 103, 104, 107, 108, 109, 111, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 142, 147, 153], "handl": [4, 6, 23, 27, 29, 46, 55, 63, 65, 111, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 131, 137, 144, 154], "format": [4, 6, 19, 22, 23, 24, 27, 29, 58, 62, 63, 65, 66, 68, 79, 83, 99, 106, 111, 117, 118, 119, 120, 121, 127, 133, 135, 136, 143, 145, 147, 148], "to_devic": [4, 27, 63, 99], "stream": [4, 27, 63, 99, 151], "move": [4, 6, 27, 29, 63, 65, 99, 106, 110, 130], "dure": [4, 8, 19, 23, 27, 31, 42, 50, 53, 55, 63, 65, 66, 67, 68, 69, 72, 79, 109, 115, 117, 118, 121, 124, 125, 126, 127, 128, 129, 131, 141, 147, 148, 153], "In": [4, 7, 13, 27, 30, 36, 63, 64, 65, 66, 69, 71, 75, 99, 101, 103, 105, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 140, 141, 143, 145, 147, 148, 150, 153], "addit": [4, 6, 7, 14, 27, 29, 30, 37, 52, 63, 64, 66, 74, 108, 109, 110, 114, 115, 117, 119, 120, 127, 129, 130, 131, 135, 136, 138, 147, 148, 149, 153], "support": [4, 6, 7, 11, 27, 29, 30, 34, 55, 62, 63, 64, 65, 66, 68, 69, 83, 99, 101, 102, 103, 105, 109, 112, 113, 115, 118, 119, 120, 123, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 142, 144, 146, 147, 150, 152, 153, 154], "__dlpack__": [4, 27, 61, 63], "mai": [4, 5, 6, 11, 17, 18, 27, 28, 34, 41, 45, 46, 61, 63, 64, 65, 66, 69, 77, 78, 79, 103, 107, 108, 109, 110, 112, 115, 116, 117, 124, 126, 127, 128, 129, 134, 135, 137, 154], "choos": [4, 16, 17, 27, 63, 64, 76, 77, 79, 108, 109, 110, 129, 134, 138, 154], "librari": [4, 17, 27, 63, 64, 69, 77, 79, 99, 101, 102, 103, 104, 108, 109, 112, 131, 138, 139, 141, 142, 143, 144, 145, 147, 151, 154], "specif": [4, 7, 27, 30, 40, 53, 62, 63, 64, 66, 69, 71, 72, 75, 78, 79, 97, 99, 101, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 148, 149, 150, 154], "caveat": [4, 27, 63], "code": [4, 5, 23, 27, 28, 46, 63, 66, 67, 68, 69, 71, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154], "would": [4, 6, 13, 27, 29, 36, 58, 63, 65, 71, 99, 102, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 141, 147, 153], "portabl": [4, 27, 63, 99, 145], "_arraywithelementwis": [5, 45], "ab": [5, 11, 21, 28, 44, 45, 46, 64, 65, 69, 73, 85, 113, 117, 125, 127, 129], "absolut": [5, 6, 11, 21, 23, 28, 29, 34, 45, 64, 65, 69, 83, 85, 104, 109, 131], "aco": [5, 28, 64], "real": [5, 6, 19, 28, 29, 42, 64, 65, 69, 79, 115, 149], "invers": [5, 6, 11, 28, 29, 34, 64, 65, 69, 93, 117, 140], "cosin": [5, 28, 64, 65], "57": [5, 28, 63, 64], "69": [5, 31, 38, 64, 65, 67, 69, 129, 136], "acosh": [5, 28, 62, 64], "area": [5, 6, 28, 29, 64, 65, 102, 126, 139, 143], "hyperbol": [5, 28, 64], "sector": [5, 28, 64, 102], "32": [5, 6, 15, 28, 29, 34, 38, 45, 46, 58, 62, 64, 65, 66, 68, 69, 75, 76, 79, 99, 116, 136, 152], "99": [5, 8, 26, 28, 38, 61, 64, 66, 67, 79], "add": [5, 14, 21, 23, 28, 37, 44, 45, 46, 54, 64, 65, 66, 67, 74, 85, 90, 99, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 124, 126, 127, 129, 130, 131, 133, 135, 141, 143, 145, 147], "second": [5, 6, 8, 11, 13, 17, 28, 29, 30, 31, 34, 36, 40, 45, 46, 55, 62, 64, 65, 66, 67, 69, 71, 72, 73, 77, 103, 109, 112, 117, 119, 126, 127, 129, 135, 152], "compat": [5, 11, 13, 16, 19, 20, 28, 34, 36, 39, 42, 43, 45, 46, 62, 64, 69, 71, 76, 79, 80, 99, 102, 114, 123, 127, 128, 130, 133, 141], "multipli": [5, 6, 10, 19, 28, 29, 33, 64, 65, 68, 79, 110, 113, 114, 115, 119], "sum": [5, 6, 7, 10, 11, 12, 19, 23, 28, 29, 30, 33, 34, 35, 42, 45, 46, 51, 63, 64, 65, 66, 68, 69, 70, 79, 99, 115, 117, 124, 126, 127, 133], "determin": [5, 6, 11, 13, 17, 20, 23, 28, 29, 30, 34, 41, 43, 45, 46, 51, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 77, 80, 90, 101, 115, 117, 118, 120, 124, 127, 131], "15": [5, 6, 7, 11, 15, 19, 25, 26, 28, 29, 30, 33, 34, 36, 38, 42, 46, 61, 62, 64, 65, 66, 68, 69, 71, 75, 76, 77, 79, 85, 109, 119, 150], "asin": [5, 28, 64], "sine": [5, 28, 64], "927": [5, 28], "asinh": [5, 28, 64], "atan": [5, 28, 64], "tangent": [5, 28, 64, 120], "785": [5, 28, 64], "atan2": [5, 28, 64], "quotient": [5, 28, 64], "245": [5, 33, 68], "68": [5, 38, 58, 61, 64, 65, 74], "588": [5, 64], "inf": [5, 6, 7, 11, 28, 29, 30, 34, 59, 64, 65, 66, 69, 117], "36": [5, 6, 10, 19, 29, 30, 34, 64, 65, 66, 69, 73, 79], "75": [5, 6, 28, 29, 30, 33, 38, 61, 64, 65, 66, 69, 73, 75], "52": [5, 28, 30, 31, 38, 64, 66, 67, 68, 69, 79], "719": [5, 64], "197": [5, 64], "atanh": [5, 28, 64], "549": [5, 28, 33, 64, 68], "47": [5, 6, 15, 28, 29, 30, 31, 38, 64, 65, 66, 67, 68, 75], "bitwise_and": [5, 28, 64, 121], "11": [5, 6, 7, 10, 11, 15, 19, 28, 29, 30, 33, 34, 36, 38, 42, 46, 64, 65, 66, 68, 69, 70, 71, 73, 75, 76, 77, 79, 115, 116, 117, 119, 130], "bitwise_invert": [5, 28, 64], "bitiwse_invert": 5, "bitwise_left_shift": [5, 28, 64], "bitwise_or": [5, 28, 64], "bitwise_right_shift": [5, 28, 45, 64], "64": [5, 6, 10, 28, 29, 30, 33, 34, 38, 42, 46, 52, 62, 64, 65, 66, 67, 68, 69, 79, 99, 109, 136, 137, 152], "b": [5, 6, 7, 10, 14, 19, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 99, 100, 103, 104, 111, 112, 114, 115, 116, 119, 124, 128, 132, 133, 134, 136, 137, 138, 139, 143], "16": [5, 6, 7, 10, 11, 15, 19, 26, 28, 29, 30, 33, 34, 36, 38, 45, 46, 62, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 79, 99, 110, 119, 136], "bitwise_xor": [5, 28, 45, 64], "89": [5, 15, 26, 28, 29, 38, 46, 62, 64, 65, 69, 79], "51": [5, 6, 28, 29, 30, 38, 64, 65], "18": [5, 6, 15, 28, 29, 33, 34, 38, 42, 58, 64, 65, 69, 75, 79, 115, 119, 121], "19": [5, 6, 15, 28, 29, 34, 38, 64, 65, 69, 73, 75, 78, 119], "26": [5, 6, 14, 15, 29, 30, 31, 38, 64, 65, 66, 67, 68, 69, 73, 74, 79], "27": [5, 6, 11, 15, 28, 29, 33, 34, 38, 42, 64, 65, 66, 68, 69, 73, 79], "23": [5, 6, 10, 15, 25, 28, 29, 30, 38, 61, 64, 65, 68, 69, 73, 76, 99, 129, 133], "20": [5, 6, 10, 15, 19, 28, 29, 30, 33, 34, 38, 42, 64, 65, 66, 69, 75, 76, 79, 99, 116, 121, 131, 135], "74": [5, 38, 64, 65, 69], "41": [5, 6, 28, 29, 30, 34, 58, 64, 65, 66, 69, 79], "59": 5, "24": [5, 6, 11, 19, 29, 30, 33, 34, 38, 45, 64, 65, 66, 69, 73, 79, 85, 136], "ceil": [5, 28, 61, 64, 126], "round": [5, 6, 28, 29, 64, 65, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "co": [5, 7, 28, 64, 65, 66, 102, 107, 117, 133, 140], "express": [5, 6, 28, 29, 64, 65, 93, 120, 122, 127, 133, 138, 147, 148], "radian": [5, 6, 28, 29, 64, 65, 120], "416": [5, 64], "540": 5, "990": 5, "cosh": [5, 28, 64], "angl": [5, 6, 28, 29, 64, 65, 140], "76": [5, 19, 26, 28, 38, 62, 64, 69, 73, 79], "81": [5, 26, 28, 34, 38, 62, 64, 69, 73, 75, 79, 129], "deg2rad": [5, 28, 64], "degre": [5, 6, 19, 28, 29, 42, 64, 65, 79, 146], "convers": [5, 6, 29, 66, 103, 108, 125, 132, 134, 138, 140, 141, 142, 146, 153], "90": [5, 6, 28, 29, 64, 65, 69, 79, 102], "180": [5, 28, 64], "270": [5, 28, 64], "360": [5, 28, 64, 116], "71": [5, 28, 64], "28": [5, 10, 14, 28, 29, 30, 33, 34, 38, 42, 64, 65, 66, 67, 68, 69, 74, 79, 99], "divid": [5, 6, 7, 13, 23, 28, 29, 36, 45, 46, 64, 65, 66, 71, 113, 115, 119, 129], "dividend": [5, 28, 64], "divisor": [5, 6, 8, 19, 28, 29, 31, 42, 55, 64, 65, 67, 79], "375": 5, "erf": [5, 28, 64], "exponenti": [5, 28, 64, 65], "gauss": [5, 28, 64], "error": [5, 6, 23, 28, 29, 53, 55, 58, 64, 65, 69, 79, 103, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 135, 141, 147], "328": [5, 64], "677": [5, 64], "842": [5, 64], "exp": [5, 6, 28, 29, 64, 65, 69, 127], "evalu": [5, 23, 28, 29, 64, 65, 67, 73, 80, 110, 115, 117, 124, 125, 131, 147], "71828198": [5, 28], "38905573": [5, 28], "08553696": [5, 28], "expm1": [5, 28, 64, 117], "244": [5, 65, 99], "918": 5, "48": [5, 6, 28, 29, 30, 31, 38, 58, 64, 65, 66, 67, 69, 73, 79], "_": [5, 23, 28, 31, 62, 64, 65, 66, 67, 69, 71, 73, 79, 105, 106, 115, 120, 122, 126, 129, 136], "147": [5, 64], "floor": [5, 6, 28, 64, 65, 126], "floor_divid": [5, 28, 64, 90], "greater": [5, 6, 15, 28, 29, 38, 45, 46, 64, 65, 69, 71, 75, 110, 128], "greater_equ": [5, 28, 45, 46, 64], "isfinit": [5, 28, 64, 127], "test": [5, 6, 20, 28, 29, 43, 62, 64, 65, 80, 83, 86, 99, 103, 107, 108, 111, 117, 119, 121, 122, 125, 127, 130, 141, 147], "out_i": [5, 28, 29, 64, 65], "self_i": [5, 28, 29], "finit": [5, 6, 28, 29, 64, 65], "isinf": [5, 28, 64], "detect_posit": [5, 28, 64], "detect_neg": [5, 28, 64], "detect": [5, 23, 28, 64, 73, 108, 109, 114, 115, 116, 122, 129, 136, 137], "either": [5, 6, 7, 10, 19, 23, 28, 29, 30, 33, 34, 50, 52, 53, 61, 64, 65, 66, 68, 69, 72, 79, 106, 108, 109, 110, 114, 115, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 131, 133, 136, 141, 147], "isnan": [5, 28, 64], "isreal": [5, 28, 64], "1j": [5, 6, 28, 29, 65, 66], "5j": [5, 28, 29, 64, 65], "6j": [5, 6, 29, 64, 65], "less": [5, 6, 11, 15, 19, 28, 29, 34, 38, 45, 46, 64, 65, 69, 75, 79, 102, 110, 115, 117, 119, 121, 123, 126, 127, 129, 131, 132, 133, 147, 149], "less_equ": [5, 28, 45, 46, 64, 121], "61": [5, 6, 28, 29, 31, 35, 38, 64, 65, 67, 68, 70], "log10": [5, 28, 64], "logarithm": [5, 28, 64, 69], "602": [5, 64], "699": [5, 64], "log1p": [5, 28, 64], "693": [5, 28, 58, 64, 70], "001": [5, 6, 14, 26, 29, 31, 58, 62, 65, 67, 74, 136, 137], "0953": [5, 28, 64], "log2": [5, 28, 64, 65], "logaddexp": [5, 28, 64], "logical_and": [5, 28, 64, 127, 131, 154], "logical_not": [5, 28, 64, 117], "logical_or": [5, 28, 64, 154], "conform": [5, 11, 28, 61, 62, 64, 65, 69, 71, 76, 77, 78, 79, 80, 120], "api": [5, 11, 28, 61, 62, 64, 65, 69, 71, 76, 77, 78, 79, 80, 99, 100, 101, 109, 111, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 136, 141, 142, 143, 145, 147, 149, 152, 154], "standard": [5, 6, 11, 14, 15, 19, 28, 29, 37, 38, 42, 51, 54, 61, 62, 64, 65, 66, 69, 71, 74, 75, 76, 77, 78, 79, 80, 99, 100, 111, 112, 113, 115, 117, 120, 123, 126, 129, 130, 141, 143, 145, 146, 149, 150, 152], "http": [5, 28, 31, 62, 64, 65, 67, 69, 71, 79, 99, 105, 109, 112, 116, 117, 120], "org": [5, 28, 31, 62, 64, 65, 67, 69, 71, 79, 99, 120], "latest": [5, 28, 52, 62, 64, 65, 69, 71, 79, 99, 106, 108, 109, 110, 114, 116, 117, 120, 130, 141, 152], "extens": [5, 11, 28, 61, 62, 64, 69, 71, 76, 77, 78, 79, 80, 99, 105, 107, 109, 110, 120, 129, 144, 147, 154], "api_specif": [5, 28, 62, 64, 71, 79, 120], "signatur": [5, 28, 62, 64, 65, 69, 71, 79, 102, 117, 118, 119, 120, 123, 126, 129, 130, 131, 144, 153], "elementwise_funct": [5, 28, 64, 120], "html": [5, 28, 62, 64, 65, 69, 71, 79, 102, 106, 120], "noqa": [5, 11, 28, 61, 62, 64, 65, 66, 69, 71, 76, 77, 78, 79, 80, 128], "logical_xor": [5, 28, 64], "maximum": [5, 6, 7, 8, 13, 16, 19, 23, 28, 29, 30, 31, 36, 39, 42, 46, 63, 64, 65, 66, 67, 69, 71, 73, 76, 79, 90, 110, 119, 126, 136, 154], "use_wher": [5, 28, 64], "calcul": [5, 6, 12, 19, 23, 28, 29, 34, 35, 42, 46, 51, 64, 65, 69, 70, 79, 102, 108, 120, 133], "formula": [5, 28, 64], "clip": [5, 6, 13, 28, 29, 30, 36, 64, 65, 66, 71, 115, 124, 126, 136, 138], "than": [5, 6, 7, 11, 13, 15, 16, 17, 19, 23, 28, 29, 30, 34, 36, 38, 39, 40, 42, 45, 46, 61, 62, 63, 64, 65, 66, 69, 71, 75, 76, 77, 79, 102, 105, 110, 112, 115, 116, 117, 119, 121, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 141, 144, 145, 146, 147, 153, 154], "minimum": [5, 6, 7, 13, 16, 19, 28, 29, 30, 36, 39, 42, 64, 65, 66, 71, 76, 79, 90, 144, 150, 154], "exce": [5, 6, 29, 64, 65], "product": [5, 10, 11, 19, 28, 29, 33, 34, 42, 52, 64, 65, 68, 69, 79, 108, 133, 147, 149], "30": [5, 6, 29, 30, 38, 42, 46, 51, 64, 65, 66, 69, 73, 79, 116], "56": [5, 6, 10, 15, 28, 29, 33, 61, 64, 65, 67, 68, 69, 79, 119], "21": [5, 6, 7, 15, 25, 28, 29, 34, 38, 42, 45, 61, 62, 64, 65, 69, 70, 73, 79], "not_equ": [5, 28, 45, 46, 64], "pow": [5, 28, 45, 46, 64, 112], "expon": [5, 6, 7, 29, 30, 64, 65, 66, 69], "25": [5, 7, 11, 12, 15, 19, 22, 28, 29, 30, 33, 34, 37, 38, 42, 45, 46, 61, 64, 65, 66, 69, 70, 73, 74, 79, 115], "rad2deg": [5, 28, 64], "286": [5, 29], "458": 5, "573": [5, 64], "reciproc": [5, 28, 64], "333": [5, 28, 64, 66, 68], "remaind": [5, 6, 13, 23, 28, 29, 36, 64, 65, 71, 112, 126], "modulu": [5, 28, 64, 126], "instead": [5, 28, 63, 64, 108, 109, 110, 112, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 141, 145, 147, 153, 154], "sign": [5, 6, 11, 17, 19, 28, 29, 34, 61, 64, 65, 69, 77, 79, 102, 109, 133, 138], "x2_i": [5, 28, 64, 112], "94": [5, 8, 15, 28, 31, 38, 63, 65, 67], "256": [5, 68], "0001": [5, 55], "67": [5, 7, 28, 30, 38, 45, 64, 66, 67], "45": [5, 6, 19, 28, 29, 31, 38, 46, 64, 65, 67, 69, 71, 79], "678": 5, "33": [5, 15, 19, 28, 30, 31, 33, 64, 65, 66, 67, 68, 69, 73, 79], "sin": [5, 7, 28, 64, 66, 113, 133], "841": [5, 22, 28, 58, 64], "909": [5, 28, 30, 64], "141": [5, 28, 62, 64], "sinh": [5, 28, 64], "63": [5, 22, 28, 34, 64, 65, 69, 73, 79], "232": [5, 28, 64], "sqrt": [5, 6, 28, 29, 51, 64, 65], "squar": [5, 11, 28, 34, 64, 65, 67, 69, 73], "root": [5, 28, 50, 64, 65, 106, 109, 110, 127, 136], "73": [5, 34, 69, 75, 129], "44": [5, 6, 15, 28, 29, 38, 64, 65, 66, 68, 69, 73, 76, 79], "subtract": [5, 28, 45, 46, 64, 65, 113, 115, 119], "differ": [5, 6, 7, 19, 23, 29, 30, 42, 45, 46, 53, 62, 64, 65, 66, 68, 69, 71, 79, 99, 101, 102, 103, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 150, 153, 154], "tan": [5, 28, 64, 66, 115, 120, 123, 124, 126, 127, 133], "tanh": [5, 28, 64, 133], "762": [5, 28, 64], "964": [5, 28, 64], "trunc": [5, 28, 64], "025": [5, 64], "trunc_divid": [5, 28, 64], "activ": [6, 7, 21, 29, 44, 51, 65, 99, 105, 106, 109, 110, 130, 137, 147, 150], "_arraywithactivationsexperiment": [6, 45], "batch_norm": [6, 29, 65], "mean": [6, 7, 10, 13, 15, 19, 21, 23, 29, 30, 33, 36, 38, 42, 44, 51, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 79, 99, 109, 110, 111, 112, 114, 115, 117, 118, 119, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 144, 147], "varianc": [6, 19, 29, 42, 51, 65, 79], "offset": [6, 11, 29, 34, 65, 69, 89], "scale": [6, 10, 14, 29, 31, 33, 37, 51, 52, 55, 63, 65, 67, 68, 74, 147, 149], "train": [6, 8, 10, 29, 31, 33, 51, 65, 67, 68, 99, 103, 115, 118, 124, 136, 137, 138, 139, 140, 141, 142, 145, 146, 151, 153, 154], "ep": [6, 11, 29, 34, 62, 65, 69], "batch": [6, 7, 11, 23, 29, 30, 34, 54, 63, 65, 66, 68, 69, 72, 74, 99, 115, 124, 136, 145], "featur": [6, 29, 51, 65, 99, 109, 110, 113, 123, 127, 130, 131, 136, 141, 147, 148, 149, 153], "follow": [6, 7, 8, 10, 11, 17, 23, 29, 30, 31, 33, 34, 52, 55, 62, 63, 64, 65, 66, 67, 68, 69, 73, 77, 99, 101, 102, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 147, 150], "spatial": [6, 10, 29, 33, 65, 68, 140], "normal": [6, 14, 15, 29, 37, 38, 51, 54, 65, 71, 74, 75, 99, 108, 127, 131, 136, 145], "present": [6, 23, 29, 65, 101, 108, 110, 115, 117, 118, 123, 126, 133, 144, 145, 154], "ad": [6, 13, 29, 36, 44, 56, 65, 66, 69, 71, 99, 102, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 141, 146, 147], "small": [6, 11, 14, 29, 34, 37, 51, 54, 65, 69, 74, 99, 116, 119, 124, 128, 131, 133, 137, 141, 148], "avoid": [6, 29, 64, 65, 66, 109, 110, 114, 115, 116, 117, 122, 125, 127, 129, 130, 147], "logit": [6, 12, 29, 35, 65, 70, 99], "outpu": [6, 29, 65], "clamp": [6, 29, 65, 138], "elementwis": [6, 14, 29, 37, 65, 69, 74, 124, 130, 133], "19722438": [6, 29, 65], "38629448": [6, 29, 65], "38629436": [6, 29, 65], "logsigmoid": [6, 29, 65], "31326175": [6, 22, 65], "126928": [6, 29], "01814993": 6, "00004578": 6, "57888985": 6, "31326169": [6, 29, 65], "69314718": [6, 22, 29, 65], "01104775": 6, "prelu": [6, 29, 65], "take": [6, 11, 13, 19, 29, 36, 51, 61, 64, 65, 69, 71, 90, 99, 103, 104, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 131, 133, 135, 137, 138, 141, 144, 145, 153], "produc": [6, 10, 29, 33, 65, 68, 108, 117, 128, 129, 130, 148, 150], "f": [6, 13, 29, 36, 65, 71, 73, 99, 103, 104, 106, 110, 111, 115, 116, 122, 133, 136, 143], "unidirect": [6, 65], "smaller": [6, 13, 19, 36, 65, 66, 71, 79, 99, 110, 133], "relu6": [6, 29, 65], "rectifi": [6, 22, 29, 58, 65], "linear": [6, 7, 10, 22, 29, 30, 33, 51, 52, 58, 65, 66, 68, 73, 99, 115, 120, 124, 127, 129, 131, 133, 136, 137, 138, 145, 146, 147, 150], "unit": [6, 22, 29, 58, 65, 99, 109, 112, 117, 127, 128, 129, 141, 148, 151], "thresholded_relu": [6, 29, 65], "custom": [6, 29, 65, 102, 116, 121, 128, 129, 137, 147, 151, 152, 153], "_arraywithconversionsexperiment": [6, 45], "creation": [6, 23, 29, 46, 117, 118, 121, 123, 125, 127, 128, 129, 130, 133, 147, 149, 153], "_arraywithcreationexperiment": [6, 45], "eye_lik": [6, 29, 65], "refer": [6, 13, 19, 20, 29, 31, 36, 42, 43, 52, 61, 64, 65, 67, 69, 71, 79, 80, 99, 107, 108, 109, 110, 112, 113, 116, 117, 123, 124, 125, 127, 128, 129, 141, 142, 147], "elsewher": [6, 29, 61, 65, 76, 109], "_arraywithdata_typeexperiment": [6, 45], "_arraywithdeviceexperiment": [6, 45], "_arraywithelementwiseexperiment": [6, 45], "allclos": [6, 29, 65], "rtol": [6, 11, 29, 34, 65, 69, 83, 85, 128], "atol": [6, 11, 29, 34, 65, 69, 83, 85, 128], "08": [6, 19, 29, 38, 64, 65, 68, 83], "equal_nan": [6, 29, 65], "rel": [6, 8, 11, 13, 18, 25, 29, 31, 34, 36, 41, 45, 65, 67, 69, 71, 78, 83, 85, 106, 110, 116, 128, 131, 147, 149], "toler": [6, 11, 29, 34, 65, 69, 83, 85, 112, 128, 147], "compar": [6, 7, 17, 18, 23, 29, 30, 41, 65, 66, 77, 78, 85, 99, 114, 119, 121, 122, 128, 129, 136, 143, 145, 147, 153, 154], "consid": [6, 11, 17, 29, 34, 51, 64, 65, 69, 77, 101, 102, 113, 116, 117, 124, 130, 134, 135, 136, 144, 148, 152, 154], "altern": [6, 29, 65, 99, 108, 109, 126, 127, 136, 150], "given": [6, 7, 12, 13, 15, 23, 29, 30, 31, 35, 36, 38, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 90, 93, 102, 103, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 140, 144, 149, 150, 153, 154], "1e10": [6, 65], "00001e10": [6, 65], "00001e": [6, 65], "005": [6, 65], "deg": [6, 29, 65], "complex": [6, 11, 26, 29, 34, 62, 64, 65, 66, 69, 105, 108, 117, 119, 127, 129, 131, 136, 137, 138, 141, 142, 143, 145, 147, 149, 153, 154], "def": [6, 29, 66, 73, 99, 108, 109, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138], "set_backend": [6, 21, 29, 62, 63, 65, 99, 112, 114, 117, 124, 125, 133, 135, 138], "tensorflow": [6, 7, 29, 63, 65, 66, 83, 90, 99, 102, 103, 107, 108, 109, 110, 112, 116, 117, 118, 123, 126, 127, 128, 129, 130, 131, 133, 138, 141, 142, 145, 148, 150, 151, 153, 154], "2j": [6, 29, 65], "3j": [6, 28, 29, 64, 65], "35619449": [6, 65], "78539816": [6, 65], "numpi": [6, 7, 19, 29, 30, 63, 65, 66, 79, 83, 85, 99, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 121, 123, 126, 128, 129, 130, 131, 133, 135, 138, 142, 149, 154], "135": [6, 65, 66], "binar": [6, 29, 65], "map": [6, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 52, 65, 66, 73, 113, 115, 117, 123, 124, 127, 129, 130, 136, 140, 141, 142, 148], "outcom": [6, 29, 65], "comparison": [6, 29, 65, 69, 121], "conj": [6, 29, 65], "conjug": [6, 11, 29, 34, 65, 69], "copysign": [6, 29, 65], "new": [6, 7, 8, 13, 14, 23, 25, 29, 30, 31, 34, 36, 37, 40, 45, 49, 52, 54, 55, 61, 62, 64, 65, 66, 67, 71, 73, 74, 99, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 142, 145, 149, 153, 154], "unsign": [6, 19, 29, 65, 79, 117, 133], "count_nonzero": [6, 29, 65], "keepdim": [6, 11, 13, 16, 19, 20, 23, 29, 34, 36, 39, 42, 43, 65, 69, 71, 76, 79, 80, 121, 127, 133], "count": [6, 13, 17, 20, 29, 36, 40, 43, 63, 65, 69, 71, 77, 80, 115, 119, 136], "flatten": [6, 7, 11, 13, 16, 17, 29, 30, 34, 36, 39, 40, 50, 65, 66, 69, 71, 76, 77, 83, 85, 99, 131], "left": [6, 11, 16, 18, 29, 34, 39, 41, 64, 65, 66, 69, 76, 78, 109, 110, 112, 116, 117, 119], "size": [6, 7, 10, 11, 13, 15, 16, 23, 29, 30, 33, 34, 36, 38, 39, 45, 46, 52, 61, 63, 65, 66, 68, 69, 71, 75, 76, 80, 99, 128, 129, 136], "correctli": [6, 11, 16, 29, 34, 39, 65, 69, 76, 108, 109, 110, 113, 115, 117, 119, 121, 122, 123, 126, 128, 129, 131, 137, 141], "total": [6, 19, 23, 29, 42, 46, 63, 65, 76, 79, 99, 103, 104, 110, 117, 118, 119, 121, 129, 131, 136, 137, 141], "diff": [6, 23, 29, 65, 119, 126], "prepend": [6, 29, 65, 69, 71], "append": [6, 11, 23, 29, 64, 65, 69, 71, 99, 106, 116, 121, 129, 133, 136], "time": [6, 8, 11, 17, 29, 31, 40, 52, 53, 65, 67, 68, 69, 71, 72, 76, 77, 101, 102, 103, 108, 109, 110, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 129, 130, 133, 136, 138, 141, 145, 147, 148, 151, 152, 153], "differenc": [6, 29, 65], "taken": [6, 11, 29, 34, 65, 69, 116, 122, 127, 130, 138, 148], "prior": [6, 29, 65, 130], "expand": [6, 7, 13, 29, 30, 65, 66, 71, 115], "direct": [6, 29, 65, 78, 108, 113, 127, 131, 137, 138, 140, 143, 147, 148, 151], "except": [6, 7, 13, 15, 20, 23, 29, 30, 34, 38, 43, 53, 62, 63, 65, 66, 69, 71, 75, 76, 80, 83, 86, 99, 110, 111, 112, 113, 116, 117, 120, 122, 123, 126, 127, 131, 135, 141], "th": [6, 29, 65], "discret": [6, 29, 65, 70], "exp2": [6, 29, 65], "power": [6, 7, 11, 29, 30, 34, 45, 46, 51, 64, 65, 66, 69, 73, 135, 136, 137, 147, 149, 153], "fix": [6, 29, 65, 99, 109, 110, 112, 117, 129, 130], "nearest": [6, 29, 64, 65], "toward": [6, 13, 36, 64, 65, 71, 99, 105, 109, 130, 133, 143, 147], "float_pow": [6, 29, 65], "rais": [6, 7, 13, 15, 17, 20, 23, 29, 30, 36, 38, 40, 43, 53, 55, 62, 63, 64, 65, 66, 67, 69, 71, 75, 76, 77, 79, 80, 83, 99, 102, 110, 112, 114, 121, 122, 126, 127, 133, 135], "thei": [6, 11, 15, 23, 34, 38, 56, 62, 65, 69, 72, 75, 83, 99, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 141, 144, 147, 149, 150, 153, 154], "common": [6, 23, 29, 62, 65, 101, 108, 115, 117, 118, 119, 122, 124, 125, 127, 130, 131, 141, 144, 147, 154], "becom": [6, 29, 65, 71, 101, 103, 110, 115, 119, 121, 127, 141], "125": [6, 11, 34, 64, 65, 69], "fmax": [6, 29, 65], "fmin": [6, 29, 65], "fmod": [6, 29, 65], "divis": [6, 7, 8, 29, 30, 31, 55, 64, 65, 66, 67, 68, 124], "frexp": [6, 29, 65], "next": [6, 29, 51, 53, 55, 62, 65, 103, 105, 108, 109, 110, 114, 119, 120, 125, 127, 130, 134, 135, 136, 147, 149], "represent": [6, 7, 23, 29, 30, 46, 59, 62, 63, 64, 65, 66, 140, 145, 146, 148, 152, 153], "gcd": [6, 29, 65], "gradient": [6, 29, 53, 55, 63, 65, 72, 85, 90, 130, 136, 137, 140, 141, 147], "edge_ord": [6, 29, 65], "w": [6, 7, 8, 10, 23, 28, 29, 30, 31, 33, 65, 66, 67, 68, 73, 99, 133, 136, 137], "r": [6, 11, 23, 29, 34, 65, 67, 69, 71, 109, 110, 111, 128], "t": [6, 10, 21, 29, 33, 44, 45, 65, 66, 67, 68, 73, 99, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 125, 126, 129, 130, 131, 133, 135, 136, 137, 138, 141, 145, 147, 149], "estim": [6, 29, 65], "boundari": [6, 15, 29, 38, 65, 75, 147], "note": [6, 11, 13, 17, 29, 34, 36, 62, 64, 65, 66, 69, 71, 77, 79, 105, 108, 109, 110, 113, 117, 119, 120, 127, 128, 129, 130], "jax": [6, 7, 17, 30, 65, 66, 77, 99, 102, 103, 107, 108, 109, 110, 112, 114, 117, 118, 121, 123, 126, 127, 128, 129, 130, 131, 133, 135, 138, 141, 148, 150, 153, 154], "over": [6, 11, 19, 20, 21, 26, 29, 34, 42, 43, 44, 54, 65, 66, 69, 74, 75, 79, 80, 99, 101, 103, 109, 110, 114, 119, 120, 126, 128, 133, 135, 141, 145, 147], "partial": [6, 23, 29, 53, 65, 67, 69, 110], "diment": [6, 65], "40": [6, 7, 29, 30, 38, 42, 46, 64, 65, 66, 67, 69, 73, 79, 116], "80": [6, 29, 65, 69, 73, 79, 102, 121], "72": [6, 15, 29, 31, 64, 65, 67, 69, 79], "33333333": [6, 29, 64, 65], "hypot": [6, 29, 65], "hypotenus": [6, 65], "4031": [6, 65], "8102": [6, 65], "imag": [6, 10, 29, 33, 65, 66, 68, 99, 105, 106, 109, 130, 133, 134, 136, 138, 140, 147], "imaginari": [6, 29, 65, 119], "4j": [6, 29, 65], "isclos": [6, 29, 65, 112], "hold": [6, 7, 11, 19, 29, 34, 42, 65, 66, 69, 79, 86, 99, 136, 148], "lcm": [6, 29, 65], "least": [6, 11, 29, 65, 69, 99, 110, 113, 116, 117, 119, 124, 129], "multipl": [6, 11, 14, 19, 20, 23, 28, 29, 30, 31, 34, 36, 37, 42, 43, 52, 64, 65, 66, 67, 68, 69, 71, 74, 76, 79, 80, 99, 103, 110, 113, 114, 115, 119, 121, 124, 126, 127, 128, 129, 131, 133, 141, 145, 146, 147, 154], "60": [6, 19, 29, 30, 38, 42, 65, 66, 69, 73, 79, 116], "ldexp": [6, 29, 65], "logaddexp2": [6, 29, 65], "169925": [6, 29, 65], "nan_to_num": [6, 29, 65], "posinf": [6, 29, 65], "neginf": [6, 29, 65], "replac": [6, 7, 13, 15, 23, 29, 30, 36, 38, 61, 65, 66, 71, 75, 102, 106, 110, 115, 117, 118, 119, 125, 127, 129, 135, 138, 141, 154], "doe": [6, 7, 13, 23, 29, 36, 64, 65, 66, 69, 71, 83, 102, 106, 108, 110, 111, 114, 116, 117, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 141, 142, 143, 147, 148, 154], "requir": [6, 23, 29, 49, 64, 65, 69, 71, 90, 105, 106, 108, 109, 113, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 133, 135, 141, 147, 153], "pass": [6, 21, 23, 29, 44, 46, 49, 53, 55, 56, 62, 63, 64, 65, 66, 72, 83, 85, 90, 99, 108, 110, 112, 113, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 145], "veri": [6, 29, 65, 69, 101, 102, 107, 108, 109, 110, 115, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 141, 143, 144, 145, 147, 148, 149, 152, 153, 154], "larg": [6, 29, 64, 65, 69, 109, 110, 116, 136, 147], "itself": [6, 65, 66, 73, 101, 109, 110, 112, 115, 116, 121, 126, 127, 137, 140, 141, 146, 147, 148, 153], "5e": [6, 8, 29, 65, 67], "nansum": [6, 29, 65], "accumul": [6, 29, 65], "By": [6, 13, 19, 20, 29, 36, 42, 43, 65, 69, 71, 79, 80, 117, 119, 121, 124, 126, 127, 133, 137, 138], "reduc": [6, 7, 11, 16, 19, 20, 23, 29, 30, 34, 39, 42, 43, 63, 65, 66, 69, 76, 79, 80, 116, 121, 127, 131, 133, 135, 145, 149, 150, 151], "nextaft": [6, 29, 65], "0e": [6, 8, 29, 31, 65, 67], "50": [6, 19, 28, 29, 30, 64, 65, 66, 69, 73, 76, 79, 135], "4013e": [6, 29, 65], "4028e": [6, 29, 65], "hand": [6, 99, 112, 117, 124, 129, 141], "signbit": [6, 29, 65], "sinc": [6, 29, 65, 99, 102, 109, 110, 112, 113, 115, 116, 126, 127, 141, 147, 153], "637": [6, 29, 65], "212": [6, 10, 29, 65], "0909": [6, 29, 65], "trapz": [6, 28, 65], "dx": [6, 28, 65], "apart": [6, 28, 65], "between": [6, 10, 11, 12, 13, 17, 23, 28, 29, 33, 35, 36, 46, 55, 61, 62, 64, 65, 68, 70, 71, 73, 75, 77, 101, 113, 114, 115, 119, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 138, 140, 143, 144, 146, 147, 148, 153], "definit": [6, 11, 28, 34, 65, 69, 99, 110, 113, 117, 124, 135], "singl": [6, 15, 23, 28, 38, 65, 66, 67, 75, 77, 103, 108, 109, 110, 112, 115, 116, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 141], "trapezoid": [6, 28, 65], "xlogi": [6, 29, 65], "0986": [6, 29, 65], "3863": [6, 29, 65], "0000": [6, 29, 65], "zeta": [6, 29, 65], "q": [6, 10, 11, 29, 33, 34, 65, 68, 69, 73, 109, 110, 111, 128, 141], "0369": [6, 29, 65], "2021": [6, 29, 65, 99], "_arraywithgeneralexperiment": [6, 45], "isin": [6, 29, 65], "test_el": [6, 29, 65], "assume_uniqu": [6, 29, 65], "invert": [6, 29, 64, 65, 69], "uniqu": [6, 17, 29, 40, 65, 72, 73, 77, 99, 101, 112, 115, 124, 127, 128, 131, 141, 150], "speed": [6, 29, 65, 101, 124, 129, 150], "up": [6, 29, 50, 65, 68, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "_arraywithgradientsexperiment": [6, 45], "_arraywithimageexperiment": [6, 45], "layer": [6, 14, 29, 37, 50, 51, 53, 54, 55, 56, 74, 99, 101, 120, 127, 130, 131, 133, 134, 137, 145, 147, 151, 154], "_arraywithlayersexperiment": [6, 45], "adaptive_avg_pool1d": [6, 29, 65], "output_s": [6, 29, 65, 99], "1d": [6, 29, 52, 65], "adapt": [6, 29, 31, 55, 65, 67, 102], "averag": [6, 8, 29, 31, 51, 65, 67, 72], "pool": [6, 29, 65], "signal": [6, 29, 65, 146, 147], "compos": [6, 29, 50, 65, 109, 115, 127, 129, 141, 147, 154], "sever": [6, 29, 65, 109, 110, 130, 141, 145, 151], "plane": [6, 29, 65], "l_in": [6, 29, 65], "Will": [6, 29, 50, 65, 141], "l_out": [6, 29, 65], "adaptive_avg_pool2d": [6, 29, 65], "2d": [6, 29, 52, 65, 99, 124, 127], "h_in": [6, 29, 65], "w_in": [6, 29, 65], "s_0": [6, 29, 65], "s_1": [6, 29, 65], "avg_pool1d": [6, 29, 65], "kernel": [6, 10, 29, 33, 65, 68, 131, 133, 141, 147, 150, 151], "stride": [6, 10, 29, 33, 52, 65, 68, 147], "pad": [6, 10, 13, 29, 33, 36, 52, 65, 66, 68, 71, 99], "data_format": [6, 10, 29, 33, 52, 65, 68, 99], "nwc": [6, 10, 29, 33, 52, 65, 68], "batch_siz": [6, 10, 15, 29, 33, 38, 65, 68, 75, 99, 136], "d_in": [6, 10, 29, 33, 65, 68], "window": [6, 10, 29, 33, 52, 65, 68, 105, 106, 110, 152], "slide": [6, 10, 29, 33, 52, 65, 68], "valid": [6, 10, 20, 29, 33, 43, 52, 62, 65, 66, 68, 71, 80, 109, 114, 117, 119, 128, 129, 148], "algorithm": [6, 10, 22, 29, 33, 52, 65, 69, 117, 127, 131, 141, 147, 149, 151], "per": [6, 10, 29, 33, 52, 65, 110, 116, 127, 136], "ncw": [6, 10, 29, 33, 52, 65, 68], "arang": [6, 11, 19, 29, 34, 45, 46, 61, 65, 66, 69, 79, 99, 117, 154], "reshap": [6, 10, 11, 13, 23, 29, 33, 34, 36, 65, 66, 68, 69, 71, 82, 126, 127, 129, 131, 133, 135, 138], "avg_pool2d": [6, 29, 65], "nhwc": [6, 10, 29, 33, 52, 65, 68], "h": [6, 7, 10, 29, 30, 33, 65, 66, 68, 73, 111, 115, 116, 143], "nchw": [6, 10, 29, 33, 52, 65, 68, 99], "max_pool2d": [6, 29, 65], "46": [6, 15, 29, 33, 38, 61, 64, 65, 73], "avg_pool3d": [6, 29, 65], "ndhwc": [6, 10, 29, 33, 52, 65, 68], "d": [6, 10, 11, 25, 29, 30, 33, 34, 62, 65, 68, 69, 73, 99, 102, 103, 104, 109, 111, 115, 129, 136, 143], "volum": [6, 10, 29, 33, 65, 68, 105], "convolut": [6, 10, 29, 33, 52, 65, 68, 145, 147], "filter": [6, 10, 29, 33, 52, 65, 68, 99, 106], "ncdhw": [6, 10, 29, 33, 52, 65, 68], "43": [6, 38, 46, 64, 65, 75, 76], "dct": [6, 29, 65, 136], "norm": [6, 7, 11, 29, 30, 34, 55, 65, 66, 69, 130], "liter": [6, 11, 29, 34, 65, 69, 78, 122], "lenght": [6, 29, 65], "transform": [6, 10, 29, 33, 65, 68, 99, 129, 138, 140, 142, 145, 147, 148, 149], "truncat": [6, 29, 50, 65, 66, 121, 136], "larger": [6, 13, 19, 29, 36, 42, 62, 65, 71, 79, 129, 154], "ortho": [6, 29, 65], "102": [6, 29, 38, 65], "406": [6, 29, 65, 66], "dft": [6, 29, 65], "onesid": [6, 29, 65], "dft_length": [6, 29, 65], "backward": [6, 20, 29, 43, 64, 65, 69, 80, 141], "fourier": [6, 65, 66], "need": [6, 7, 13, 29, 30, 36, 65, 66, 69, 71, 73, 99, 103, 105, 106, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 124, 126, 127, 128, 130, 131, 133, 135, 136, 140, 141, 143, 147, 148, 149, 153], "fft": [6, 29, 65, 108, 147], "after": [6, 7, 8, 10, 14, 23, 29, 30, 31, 33, 37, 55, 62, 63, 64, 65, 66, 67, 68, 73, 74, 99, 105, 106, 108, 109, 110, 112, 116, 117, 119, 121, 123, 127, 129, 132, 147], "n_fft": [6, 65], "becaus": [6, 65, 109, 110, 113, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 137, 138, 141, 147, 150, 153], "satisfi": [6, 65, 119], "symmetri": [6, 65], "possibl": [6, 13, 36, 65, 66, 67, 68, 71, 79, 99, 102, 104, 108, 109, 110, 112, 115, 117, 119, 120, 124, 126, 127, 128, 129, 131, 133, 136, 140, 141, 145, 147, 153], "enabl": [6, 23, 46, 65, 67, 99, 102, 109, 110, 113, 115, 124, 125, 126, 127, 129, 130, 131, 132, 134, 136, 138, 141, 142, 145, 146, 147, 148, 149, 150, 153, 154], "fast": [6, 65, 147], "rfft": [6, 65], "invok": [6, 45, 65, 99], "forward": [6, 29, 49, 51, 53, 55, 65, 99, 109, 114, 120, 129, 130, 131, 138, 140, 141, 147, 148], "expect": [6, 11, 50, 51, 53, 62, 65, 66, 99, 103, 110, 112, 117, 121, 128, 129, 141], "batch_idx": [6, 65], "signal_dim1": [6, 65], "signal_dim2": [6, 65], "signal_dimn": [6, 65], "signal_dim": [6, 65], "embed": [6, 29, 65, 147], "max_norm": [6, 7, 29, 30, 65, 66], "dim": [6, 23, 25, 29, 52, 61, 65, 68, 99, 117, 121, 127, 128, 131], "ifft": [6, 29, 65], "befor": [6, 10, 11, 13, 17, 19, 23, 29, 33, 34, 50, 63, 65, 68, 69, 71, 72, 73, 77, 79, 108, 109, 110, 112, 113, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 136, 141, 147], "pi": [6, 29, 59, 65], "44509285e": [6, 29, 65], "14423775e": [6, 29, 65], "17j": [6, 29, 65], "00000000e": [6, 29, 30, 65], "00": [6, 7, 29, 30, 34, 64, 65, 66, 69, 129], "11483250e": [6, 29, 65], "16j": [6, 29, 65], "33486982e": [6, 29, 65], "22464680e": [6, 29, 65], "95799250e": [6, 29, 65], "66951701e": [6, 29, 65], "30636606e": [6, 29, 65], "43029718e": [6, 29, 65], "18j": [6, 29, 65], "53080850e": [6, 29, 65], "58689626e": [6, 29, 65], "24474906e": [6, 29, 65], "91858728e": [6, 29, 65], "01435406e": [6, 29, 65], "interpol": [6, 29, 65, 147], "mode": [6, 11, 23, 29, 34, 63, 64, 65, 66, 69, 105, 109, 110, 115, 119, 131, 141, 147, 150], "scale_factor": [6, 29, 65], "recompute_scale_factor": [6, 29, 65], "align_corn": [6, 29, 65], "antialia": [6, 29, 65], "down": [6, 29, 50, 65, 109, 121, 129, 142, 147, 153], "channel": [6, 7, 10, 29, 30, 33, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "height": [6, 7, 10, 29, 30, 33, 50, 65, 66, 68, 136], "width": [6, 7, 10, 29, 30, 33, 65, 66, 68], "bilinear": [6, 29, 65], "trilinear": [6, 29, 65], "nearest_exact": [6, 29, 65], "tf_area": [6, 29, 65], "bicub": [6, 29, 65], "mitchellcub": [6, 29, 65], "lanczos3": [6, 29, 65], "lanczos5": [6, 29, 65], "gaussian": [6, 29, 58, 65], "overwrit": [6, 23, 29, 63, 65, 110, 126, 127, 133], "corner": [6, 29, 65, 109, 110, 127], "pixel": [6, 29, 65], "align": [6, 23, 29, 65, 109, 110, 127, 133, 135, 142, 153], "thu": [6, 29, 64, 65, 69, 105, 108, 116, 121, 127], "preserv": [6, 7, 8, 23, 29, 30, 31, 46, 65, 66, 67, 71, 129, 138, 141], "edg": [6, 13, 29, 36, 65, 71, 112, 129, 147, 149, 153], "antialias": [6, 29, 65], "downsampl": [6, 29, 65], "resiz": [6, 29, 65], "max_pool1d": [6, 29, 65], "dilat": [6, 10, 29, 33, 52, 65, 68], "ceil_mod": [6, 29, 65], "max_pool3d": [6, 29, 65], "linear_algebra": [6, 11, 29, 34, 69, 130], "_arraywithlinearalgebraexperiment": [6, 45], "adjoint": [6, 11, 29, 34, 65, 69], "cond": [6, 29, 60, 65, 141], "p": [6, 7, 11, 29, 30, 34, 52, 61, 65, 66, 69, 73, 109, 110, 111], "933034373659268": 6, "diagflat": [6, 29, 65], "padding_valu": [6, 29, 65], "right_left": [6, 29, 65], "num_row": [6, 29, 65], "num_col": [6, 29, 65], "eig": [6, 11, 29, 65, 69], "37228132": [6, 29, 65], "82456484": [6, 65], "41597356": [6, 65], "56576746": [6, 65], "90937671": [6, 65], "eigh_tridiagon": [6, 29, 65], "eigvals_onli": [6, 29, 65], "select": [6, 19, 29, 42, 65, 79, 108, 109, 110, 116, 126, 129, 133, 135, 138, 141, 147, 150, 151], "select_rang": [6, 29, 65], "tol": [6, 29, 65], "super": [6, 29, 65, 99, 121, 124, 133, 136, 137, 138], "eigenvalu": [6, 11, 29, 34, 65, 69], "eigenvector": [6, 29, 65, 69], "string": [6, 10, 23, 29, 33, 50, 58, 62, 63, 65, 66, 68, 69, 85, 114, 116, 117, 118, 121, 122, 127, 133, 136], "v": [6, 10, 18, 25, 29, 33, 41, 50, 52, 53, 54, 55, 56, 65, 68, 78, 85, 99, 105, 109, 110, 133, 136, 137, 138], "interv": [6, 15, 20, 29, 38, 43, 61, 65, 69, 71, 75, 80, 110], "togeth": [6, 23, 29, 56, 65, 99, 102, 113, 115, 122, 127, 130, 131, 137, 138, 141, 145, 147, 148, 153], "cluster": [6, 29, 65, 141, 147], "converg": [6, 29, 65, 103], "li": [6, 29, 65, 101], "_2": [6, 29, 65], "machin": [6, 11, 29, 34, 62, 65, 69, 102, 109, 112, 124, 140, 142, 145, 147, 149, 150, 151, 152, 153], "precis": [6, 11, 29, 34, 62, 64, 65, 69, 116, 117, 127, 131, 151], "eig_val": [6, 29, 65], "decreas": [6, 29, 65], "eig_vector": [6, 29, 65], "38196": [6, 65], "61803": [6, 65], "eigval": [6, 29, 65], "kron": [6, 29, 65, 154], "matrix_exp": [6, 29, 65], "7183": [6, 29, 65], "3891": [6, 29, 65], "multi_dot": [6, 29, 65], "49": [6, 15, 29, 34, 64, 65, 79], "148": [6, 28, 29, 65], "loss": [6, 29, 65, 99, 116, 117, 124, 127, 130, 136, 137, 138, 147, 154], "_arraywithlossesexperiment": [6, 45], "manipul": [6, 29, 65, 101, 127, 130, 131, 133, 138, 140, 147], "_arraywithmanipulationexperiment": [6, 45], "atleast_1d": [6, 29, 65], "ari": [6, 29, 65], "cannot": [6, 110, 112, 114, 117, 127, 133, 138, 153], "ndim": [6, 11, 16, 34, 39, 45, 65, 66, 69, 76, 82, 115, 121], "made": [6, 13, 29, 65, 102, 105, 108, 110, 112, 113, 115, 116, 121, 126, 127, 130, 133, 135, 147], "necessari": [6, 13, 29, 36, 65, 71, 99, 109, 110, 113, 114, 115, 119, 125, 126, 127, 129, 131], "a1": [6, 30, 61], "a2": 6, "atleast_2d": [6, 29, 65], "atleast_3d": [6, 29, 65], "view": [6, 13, 29, 61, 65, 109, 110, 121, 147], "three": [6, 61, 65, 110, 115, 116, 119, 127, 129, 131, 132, 133, 148, 153], "more": [6, 11, 13, 17, 29, 34, 36, 40, 61, 62, 64, 65, 69, 71, 77, 99, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 145, 146, 147, 148, 149, 150, 153, 154], "dsplit": [6, 29, 65], "indices_or_sect": [6, 29, 65], "split": [6, 13, 23, 29, 36, 63, 65, 66, 68, 71, 85, 99, 104, 110, 116, 132, 133, 141, 154], "3rd": [6, 29, 65], "dstack": [6, 29, 65], "nativeshap": [6, 10, 13, 15, 29, 36, 38, 61, 65, 66, 68, 71, 75], "you": [6, 7, 29, 30, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "want": [6, 21, 44, 50, 53, 65, 99, 102, 104, 108, 109, 110, 116, 121, 124, 125, 126, 129, 131, 136, 137, 138, 141], "start_dim": [6, 29, 65, 99], "end_dim": [6, 29, 65, 99], "read": [6, 13, 23, 29, 36, 65, 71, 106, 108, 109, 116, 129, 131, 147], "fastest": [6, 13, 29, 36, 65, 71], "back": [6, 13, 29, 36, 51, 53, 55, 65, 66, 71, 102, 109, 110, 113, 117, 121, 125, 132, 141, 145, 149], "slowest": [6, 13, 29, 36, 65, 71], "fortran": [6, 13, 29, 36, 65, 71, 147, 151], "account": [6, 13, 29, 36, 51, 65, 71, 109, 116, 120, 127], "layout": [6, 13, 29, 36, 65, 71, 114, 127, 131], "underli": [6, 13, 29, 36, 64, 65, 69, 71, 115, 131, 147], "fliplr": [6, 29, 65], "flip": [6, 13, 29, 36, 64, 65, 71, 135, 136, 138], "revers": [6, 7, 11, 19, 29, 34, 42, 45, 46, 65, 66, 69, 71, 79, 108, 115, 116, 117, 119, 120, 127, 131, 138, 141], "diag": [6, 11, 29, 34, 65, 69, 133], "flipud": [6, 29, 65], "heavisid": [6, 29, 65], "step": [6, 8, 25, 29, 31, 50, 55, 61, 65, 67, 72, 99, 103, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 127, 129, 133, 136, 137, 138, 140, 147], "5000": [6, 65, 69], "hsplit": [6, 29, 65], "horizont": [6, 29, 65, 66], "hstack": [6, 29, 65], "vstack": [6, 29, 65], "i0": [6, 29, 65], "modifi": [6, 23, 29, 65, 108, 109, 110, 112, 114, 117, 118, 120, 122, 124, 128, 129, 130, 133], "bessel": [6, 19, 29, 42, 65, 79], "kind": [6, 19, 29, 62, 64, 65, 79, 107, 127, 129, 131, 133, 141], "26606588": [6, 29, 65], "2795853": [6, 29, 65], "88079259": [6, 29, 65], "moveaxi": [6, 29, 65], "destin": [6, 29, 65], "unstack": [6, 13, 23, 36, 71, 115, 133, 136, 154], "reorder": [6, 13, 29, 36, 65, 66, 71], "origin": [6, 11, 13, 19, 23, 29, 34, 36, 42, 45, 46, 64, 65, 69, 71, 79, 85, 99, 103, 108, 109, 110, 114, 116, 117, 125, 126, 127, 128, 133, 147, 148], "These": [6, 29, 65, 69, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 117, 119, 120, 122, 123, 124, 126, 127, 129, 130, 133, 134, 136, 137, 138, 141, 142, 147, 151, 153, 154], "pad_width": [6, 13, 29, 36, 65, 71], "constant": [6, 13, 14, 29, 36, 37, 51, 53, 54, 65, 71, 73, 74, 99, 124, 128, 130, 137, 138, 141], "stat_length": [6, 29, 65], "constant_valu": [6, 29, 65], "end_valu": [6, 29, 65], "reflect_typ": [6, 29, 65], "even": [6, 29, 64, 65, 102, 103, 109, 110, 112, 116, 117, 118, 120, 123, 124, 126, 127, 128, 131, 135, 136, 137, 138, 141, 153], "rot90": [6, 29, 65], "rotat": [6, 29, 65, 140], "take_along_axi": [6, 29, 65], "extract": [6, 29, 65, 106, 127, 130, 143, 147, 148, 153], "One": [6, 7, 13, 15, 29, 30, 36, 38, 65, 66, 71, 75, 113, 115, 117, 119, 124, 128, 129, 133, 135, 136], "drop": [6, 29, 51, 65, 109, 141], "control": [6, 29, 50, 65, 69, 115, 117, 126, 127, 128, 131, 135, 136, 140, 142, 147, 153], "how": [6, 29, 50, 51, 52, 53, 65, 99, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 143, 147], "bound": [6, 29, 65, 121, 129, 133, 153], "arr": [6, 7, 26, 29, 62, 65, 117, 118], "top_k": [6, 29, 65], "largest": [6, 23, 29, 62, 65, 69, 140], "top": [6, 13, 29, 50, 65, 66, 99, 109, 110, 117, 127, 129, 136, 137, 147, 151], "retun": [6, 29, 65], "we": [6, 21, 29, 44, 50, 53, 65, 66, 67, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 152, 153], "smallest": [6, 23, 29, 62, 64, 65, 69], "name": [6, 11, 17, 21, 34, 40, 44, 45, 58, 65, 66, 69, 77, 85, 90, 95, 106, 108, 109, 110, 114, 115, 116, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 133, 136, 138, 147], "vsplit": [6, 29, 65], "vertic": [6, 29, 65, 66, 110], "_arraywithnormsexperiment": [6, 45], "instance_norm": [6, 29, 65], "bia": [6, 10, 29, 33, 37, 52, 65, 66, 68, 74, 133, 137], "momentum": [6, 29, 65, 102], "running_mean": [6, 29, 65], "running_stddev": [6, 29, 65], "affin": [6, 29, 54, 65], "track_running_stat": [6, 29, 65], "4d": [6, 65], "run": [6, 8, 29, 31, 52, 53, 65, 67, 72, 85, 86, 99, 105, 106, 108, 109, 111, 113, 114, 116, 119, 121, 122, 123, 124, 125, 127, 128, 133, 134, 135, 136, 137, 138, 140, 141, 145, 147, 148, 149, 150, 152, 153, 154], "statist": [6, 29, 44, 65, 108, 117, 129, 130, 147], "deviat": [6, 14, 15, 19, 29, 37, 38, 42, 51, 54, 65, 74, 75, 79, 103, 112], "track": [6, 29, 50, 53, 65, 67, 73, 109, 110, 112, 147], "OR": [6, 20, 29, 43, 64, 65, 80, 106, 109, 110], "stddev": [6, 29, 65], "ey": [6, 29, 33, 45, 46, 61, 65, 68, 131, 138], "82836342": [6, 65], "58581817": [6, 65], "29290909": [6, 29, 65], "41418171": [6, 29, 65], "14645454": [6, 65], "20709085": [6, 65], "30000001": [6, 29, 65, 66, 77], "52426404": [6, 29, 65], "l2_normal": [6, 29, 65], "l2": [6, 11, 34, 65, 69, 115], "whole": [6, 65, 110], "4472": [6, 65], "8944": [6, 65], "lp_normal": [6, 29, 65], "lp": [6, 65], "random": [6, 10, 23, 29, 33, 65, 68, 99, 108, 118, 128, 129, 130, 138, 140, 147], "_arraywithrandomexperiment": [6, 45], "bernoulli": [6, 29, 65], "seed": [6, 10, 15, 17, 23, 29, 33, 38, 45, 46, 49, 65, 68, 75, 77, 90, 128, 129], "probabl": [6, 10, 15, 29, 33, 38, 51, 52, 65, 68, 75, 99, 103, 129], "event": [6, 29, 65, 129], "entri": [6, 13, 23, 29, 36, 40, 61, 65, 71, 73, 109, 116, 129, 147], "parameter": [6, 15, 29, 38, 65, 75], "independ": [6, 15, 29, 38, 65, 69, 75, 99, 112, 117, 119, 125, 133, 138, 145], "distribut": [6, 12, 15, 29, 35, 38, 51, 52, 53, 65, 70, 75, 108, 116, 118, 141, 147, 150], "prob": [6, 10, 29, 33, 38, 52, 65, 68, 75, 99], "odd": [6, 29, 64, 65, 107, 112], "g": [6, 15, 17, 19, 21, 29, 38, 44, 51, 62, 63, 65, 73, 75, 77, 79, 103, 104, 108, 109, 111, 112, 115, 127, 129, 133, 141, 142, 143], "drawn": [6, 15, 29, 38, 51, 65, 75, 129], "python": [6, 15, 29, 38, 61, 63, 64, 65, 66, 75, 100, 101, 102, 106, 107, 109, 110, 112, 113, 115, 116, 121, 122, 127, 129, 131, 133, 135, 136, 141, 142, 144, 147, 148, 149, 153, 154], "dirichlet": [6, 29, 65], "shuffl": [6, 15, 23, 29, 38, 75], "10598304": [6, 65], "21537054": [6, 65], "67864642": [6, 65], "48006698": [6, 65], "07472073": [6, 65], "44521229": [6, 65], "55479872": [6, 65], "05426367": [6, 65], "39093761": [6, 65], "19531053": [6, 65], "51675832": [6, 65], "28793114": [6, 65], "12315625": [6, 65], "29823365": [6, 65], "5786101": [6, 65], "15564976": [6, 65], "50542368": [6, 65], "33892656": [6, 65], "1325352": [6, 65], "44439589": [6, 65], "42306891": [6, 65], "gamma": [6, 14, 37, 65, 74], "poisson": [6, 29, 65], "rate": [6, 8, 29, 31, 52, 55, 65, 67, 72, 116], "paramt": [6, 73], "request": [6, 63, 65, 99, 103, 104, 108, 119, 130, 131], "lam": [6, 29, 65], "_arraywithsearchingexperiment": [6, 45], "_arraywithsetexperiment": [6, 45], "sort": [6, 23, 29, 46, 65, 69, 99, 107, 116, 130], "_arraywithsortingexperiment": [6, 45], "lexsort": [6, 29, 65], "indirectli": [6, 29, 65], "column": [6, 11, 29, 34, 51, 61, 65, 69], "msort": [6, 29, 65], "_arraywithstatisticalexperiment": [6, 45], "bincount": [6, 29, 65], "weight": [6, 8, 10, 29, 31, 33, 51, 52, 53, 55, 65, 67, 68, 99, 115, 124, 133, 137, 138, 146], "minlength": [6, 29, 65], "alreadi": [6, 23, 29, 64, 65, 69, 99, 108, 109, 110, 114, 115, 117, 123, 127, 131, 141, 147, 149, 154], "bin": [6, 29, 105, 106, 109, 110, 112, 115], "corrcoef": [6, 29, 65], "rowvar": [6, 29, 65], "row": [6, 29, 51, 61, 65, 69, 75, 76], "variabl": [6, 7, 8, 14, 23, 29, 30, 31, 37, 45, 49, 50, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 72, 74, 85, 90, 110, 114, 117, 120, 122, 123, 126, 129, 130, 133, 136, 137, 138, 141, 148], "observ": [6, 29, 110, 121, 133, 149], "relationship": [6, 29, 51], "transpos": [6, 10, 11, 23, 29, 33, 34, 45, 52, 65, 68, 69, 99, 126, 135, 138], "while": [6, 10, 23, 29, 33, 46, 61, 62, 64, 65, 68, 77, 79, 86, 101, 102, 108, 109, 110, 113, 114, 116, 117, 119, 122, 123, 124, 126, 127, 128, 129, 131, 135, 137, 138, 141, 147, 153, 154], "median": [6, 29, 65, 127], "nanmean": [6, 29, 65], "anyth": [6, 29, 65, 110, 129, 130, 147, 148], "through": [6, 29, 53, 64, 65, 73, 99, 104, 107, 108, 110, 111, 114, 115, 116, 119, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 140, 145, 147, 148, 149], "sub": [6, 11, 13, 23, 24, 28, 29, 30, 34, 36, 46, 50, 65, 69, 71, 72, 108, 110, 111, 115, 121, 127, 128, 129, 135, 136, 137, 143], "6666666666666665": [6, 29, 65], "nanmedian": [6, 29, 65], "overwrite_input": [6, 29, 65], "allow": [6, 29, 50, 53, 61, 65, 66, 78, 99, 102, 105, 108, 110, 113, 116, 117, 121, 122, 124, 125, 127, 128, 129, 133, 135, 141, 142, 145, 147, 151, 152], "call": [6, 21, 26, 29, 44, 46, 50, 52, 53, 55, 63, 65, 66, 67, 69, 73, 85, 99, 102, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 141, 147, 148, 151], "save": [6, 23, 29, 53, 63, 65, 66, 103, 105, 116, 122, 129, 141, 146], "do": [6, 7, 23, 29, 30, 64, 65, 66, 73, 99, 103, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 141, 142, 148, 153, 154], "content": [6, 23, 29, 65, 106, 108, 126, 133, 136], "treat": [6, 23, 29, 65, 85, 129, 134, 138], "undefin": [6, 29, 65, 122], "fulli": [6, 29, 52, 65, 99, 103, 113, 117, 123, 126, 131, 133, 134, 135, 136, 137, 138, 141, 145, 146, 147, 153, 154], "quantil": [6, 29, 65], "inclus": [6, 29, 61, 65, 75, 104, 114, 126, 131], "higher": [6, 29, 51, 65, 132, 133, 138, 141, 144, 147, 148, 151, 153, 154], "midpoint": [6, 29, 65], "fraction": [6, 29, 65, 68], "surround": [6, 29, 65, 131], "whichev": [6, 29, 65], "work": [6, 29, 65, 73, 99, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 127, 128, 129, 130, 132, 133, 135, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "unravel_index": [6, 29, 65], "unravel": [6, 29, 65], "util": [6, 29, 63, 93, 95, 96, 97, 98, 99, 105, 118, 121, 126, 130, 145, 153, 154], "_arraywithutilityexperiment": [6, 45], "_arraywithgener": [7, 45], "all_equ": [7, 30, 66], "equality_matrix": [7, 30, 66], "array_equ": [7, 30, 66], "assert_supports_inplac": [7, 30, 66], "ivybackendexcept": [7, 30, 66, 96, 113, 121], "jaxlib": [7, 30, 66, 109, 113, 117, 118, 123, 130, 133, 135], "xla_extens": [7, 30, 66, 113, 117, 118, 123, 130, 133, 135], "devicearrai": [7, 30, 66, 113, 127, 133, 135], "clip_matrix_norm": [7, 30, 66], "downscal": [7, 30, 66], "894": [7, 30, 66, 74], "79": [7, 30, 38, 45, 64, 65, 66], "clip_vector_norm": [7, 30, 66], "default_v": [7, 66], "catch_except": [7, 66], "rev": [7, 66], "with_cal": [7, 66], "catch": [7, 66, 129], "callabl": [7, 21, 30, 44, 55, 58, 61, 62, 63, 65, 66, 67, 68, 72, 73, 83, 86, 90, 96, 115, 121, 127, 133], "might": [7, 62, 66, 108, 109, 110, 116, 117, 119, 121, 122, 125, 126, 127, 129, 130, 131, 133, 135, 136, 142], "exist": [7, 13, 23, 36, 46, 55, 66, 71, 93, 99, 101, 102, 106, 108, 109, 112, 114, 119, 120, 124, 125, 126, 127, 129, 131, 133, 141, 142, 145, 147, 150, 153], "els": [7, 15, 29, 38, 62, 65, 66, 73, 75, 83, 99, 108, 110, 112, 114, 117, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 141, 148], "einops_rearrang": [7, 30, 66], "pattern": [7, 30, 66, 103, 117, 120], "axes_length": [7, 30, 66], "re": [7, 16, 39, 63, 66, 69, 71, 76, 100, 101, 102, 104, 108, 109, 110, 111, 112, 117, 126, 127, 130, 131, 135, 138, 141, 147], "arrang": [7, 66], "rearrang": [7, 30, 66], "einop": [7, 30, 66, 102], "been": [7, 15, 30, 38, 63, 64, 66, 75, 108, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 129, 133, 135, 140, 141, 142, 147, 154], "einops_reduc": [7, 30, 66], "reduct": [7, 12, 20, 23, 29, 30, 35, 43, 65, 66, 70, 80, 117, 121, 129, 135], "avail": [7, 30, 63, 66, 99, 101, 109, 110, 115, 116, 118, 120, 121, 127, 129, 141, 152, 153], "prod": [7, 19, 30, 42, 66, 79, 117, 119, 133], "einops_repeat": [7, 30, 66], "repeat": [7, 13, 30, 36, 66, 71, 105, 110, 113, 114, 119, 120, 122, 129], "fourier_encod": [7, 30, 66], "max_freq": [7, 30, 66], "num_band": [7, 30, 66], "concat": [7, 13, 23, 36, 63, 66, 71, 128, 131, 133], "encod": [7, 30, 66, 99, 102, 136], "frequenc": [7, 30, 66, 110], "band": [7, 30, 66], "linearli": [7, 30, 66, 69], "oppos": [7, 30, 66, 117], "geometr": [7, 30, 66, 69], "concaten": [7, 13, 34, 66, 71, 128, 131, 133, 136], "seper": [7, 66, 119, 128, 129], "0000000e": [7, 30, 66], "2246468e": [7, 30, 66], "4492936e": [7, 66], "6739404e": [7, 30, 66], "gather": [7, 30, 66, 154], "batch_dim": [7, 30, 66, 93], "let": [7, 19, 30, 66, 79, 99, 103, 105, 113, 115, 117, 118, 119, 120, 121, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 154], "gather_nd": [7, 30, 66], "get_num_dim": [7, 30, 66], "as_arrai": [7, 30, 66], "has_nan": [7, 30, 66], "include_inf": [7, 30, 66], "inplace_decr": [7, 30, 66], "val": [7, 23, 29, 30, 65, 66, 126, 135], "decrement": [7, 30, 66], "inplace_incr": [7, 30, 66], "increment": [7, 30, 66, 110, 130, 147], "inplace_upd": [7, 30, 49, 66, 126], "ensure_in_backend": [7, 30, 66, 126], "keep_input_dtyp": [7, 30, 66], "ensur": [7, 30, 66, 83, 99, 108, 109, 110, 113, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 147], "is_arrai": [7, 30, 66, 127], "exclus": [7, 19, 23, 30, 42, 61, 66, 75, 79, 115, 117, 124, 130, 138, 151, 153], "rather": [7, 23, 30, 61, 63, 66, 102, 110, 112, 115, 117, 120, 126, 127, 128, 129, 130, 138, 141, 143, 146, 147], "trace": [7, 11, 23, 30, 34, 66, 69, 99, 112, 117, 133, 141, 142, 148, 153], "is_ivy_arrai": [7, 30, 66, 126, 135], "is_ivy_contain": [7, 46, 66], "is_native_arrai": [7, 30, 65, 66, 135], "scatter_flat": [7, 30, 66], "occupi": [7, 62, 66], "scatter_nd": [7, 30, 66, 131, 135], "empti": [7, 23, 30, 45, 46, 61, 65, 66, 67, 69, 73, 79, 80, 108, 109, 113, 117, 118], "stable_divid": [7, 30, 66, 124], "denomin": [7, 14, 30, 37, 54, 66, 74, 124, 141, 144], "min_denomin": [7, 30, 66], "global": [7, 14, 23, 30, 37, 46, 54, 62, 63, 65, 66, 67, 74, 90, 109, 113, 114, 116, 117, 118, 121, 124, 127, 133, 147], "_min_denomin": [7, 30, 66], "stable_pow": [7, 30, 66], "min_bas": [7, 30, 66], "_min_bas": [7, 14, 30, 37, 54, 66, 74], "stabl": [7, 18, 30, 41, 64, 65, 66, 78, 109, 114, 117, 127, 133, 141], "supports_inplace_upd": [7, 30, 66], "current": [7, 23, 45, 46, 50, 53, 62, 63, 65, 66, 67, 69, 73, 85, 99, 103, 106, 108, 109, 110, 112, 114, 115, 116, 117, 118, 121, 124, 125, 127, 128, 129, 131, 133, 138, 140, 141, 147, 153, 154], "to_list": [7, 30, 66], "to_numpi": [7, 30, 66, 99, 128, 136], "address": [7, 66, 103, 108, 110, 112, 113, 133, 143, 145, 147, 153], "to_scalar": [7, 30, 66], "value_is_nan": [7, 30, 66], "92": [7, 38, 67, 69], "_arraywithgradi": [8, 45], "adam_step": [8, 31, 67], "mw": [8, 31, 67, 137], "vw": [8, 31, 67, 137], "beta1": [8, 31, 55, 66, 67, 137], "beta2": [8, 31, 55, 66, 67, 137], "999": [8, 28, 31, 55, 64, 67, 137], "epsilon": [8, 11, 12, 14, 29, 31, 34, 35, 37, 54, 55, 65, 66, 67, 69, 70, 74, 115, 124, 126, 137], "07": [8, 12, 28, 29, 31, 35, 38, 55, 64, 65, 67, 70, 137], "cost": [8, 31, 67, 72, 131, 145], "dc": [8, 31, 67], "dw": [8, 31, 67], "moment": [8, 31, 55, 67, 108, 114, 141], "forget": [8, 31, 55, 67, 99, 117], "factor": [8, 10, 11, 29, 31, 33, 34, 51, 52, 55, 63, 67, 68, 69, 102, 121], "adam": [8, 31, 55, 66, 67, 99, 136, 137, 138, 147], "prevent": [8, 31, 51, 55, 66, 67, 68, 79, 108, 110, 116, 117, 121, 122, 126, 127, 130, 131], "delta": [8, 31, 67], "dcdw": [8, 31, 67], "adam_step_delta": [8, 31, 67], "2020105": [8, 67], "22187898": [8, 67], "24144873": [8, 67], "10000002": [8, 42, 67], "20000005": [8, 67], "00300002": [8, 67], "00800002": [8, 67], "adam_upd": [8, 31, 67, 137], "lr": [8, 31, 55, 66, 67, 136, 137], "mw_tm1": [8, 31, 67], "vw_tm1": [8, 31, 67], "stop_gradi": [8, 31, 55, 63, 66, 67, 72, 137], "learn": [8, 31, 55, 66, 67, 72, 99, 101, 102, 104, 107, 108, 109, 111, 112, 124, 132, 140, 142, 145, 149, 150, 151, 152, 153, 154], "previou": [8, 31, 51, 62, 65, 66, 67, 110, 112, 114, 116, 123, 127, 129, 131, 138, 141, 150], "ws_new": [8, 31, 67], "updated_weight": [8, 31, 67], "92558753": 8, "92558873": [8, 67], "92558718": [8, 67], "00000063e": [8, 31, 67], "00000016e": [8, 31, 67], "00000086e": [8, 31, 67], "gradient_descent_upd": [8, 31, 67, 72], "descent": [8, 31, 55, 67, 137, 147], "new_weight": [8, 31, 67, 136], "95": [8, 15, 22, 31, 38, 58, 65, 67, 75], "97": [8, 28, 31, 38, 64, 67], "96": [8, 28, 29, 30, 38, 64, 65, 66, 67, 69, 79], "lamb_upd": [8, 31, 67], "max_trust_ratio": [8, 31, 55, 67], "decay_lambda": [8, 31, 55, 67], "trust": [8, 31, 55, 67], "ratio": [8, 31, 55, 67], "decai": [8, 31, 55, 67], "lamb": [8, 31, 55, 67, 137], "784": [8, 67], "78": [8, 64, 67, 69, 75, 79], "lars_upd": [8, 31, 67], "lar": [8, 31, 55, 67, 137], "optimizer_upd": [8, 31, 67], "effective_grad": [8, 31, 67], "optim": [8, 31, 51, 66, 67, 72, 99, 103, 126, 134, 136, 138, 140, 145, 146, 147, 148, 149, 150, 151, 154], "3e": [8, 31, 67], "preserve_typ": [8, 31, 67], "_arraywithimag": [9, 45], "_arraywithlay": [10, 45], "conv1d": [10, 33, 52, 68], "fw": [10, 33, 68, 85, 129], "d_out": [10, 33, 68], "wio": [10, 68], "conv1d_transpos": [10, 33, 68], "output_shap": [10, 33, 52, 68], "low": [10, 15, 33, 38, 68, 75, 115, 127, 131, 133, 143, 145, 147, 148, 149, 151, 153], "high": [10, 15, 33, 38, 68, 75, 103, 108, 127, 131, 136, 142, 143, 144, 145, 146, 147, 151, 153, 154], "pair": [10, 33, 64, 65, 68, 69, 116], "give": [10, 33, 50, 51, 62, 68, 71, 99, 103, 105, 109, 110, 111, 114, 116, 119, 120, 123, 129, 147, 151], "conv2d": [10, 33, 52, 68, 99], "fh": [10, 33, 68], "hwio": [10, 68], "conv2d_transpos": [10, 33, 68], "random_norm": [10, 11, 15, 33, 34, 38, 66, 68, 69, 75], "std": [10, 15, 19, 33, 38, 42, 65, 68, 75, 79, 119], "conv3d": [10, 33, 52, 68], "fd": [10, 33, 68], "conv3d_transpos": [10, 33, 68], "depthwise_conv2d": [10, 33, 68], "randint": [10, 15, 17, 33, 38, 75, 77, 117], "255": [10, 29, 33, 64, 99], "dropout": [10, 33, 52, 65, 68, 136], "noise_shap": [10, 33, 68], "droput": 10, "turn": [10, 33, 68, 103, 109, 115, 119, 127, 129], "off": [10, 11, 33, 34, 51, 68, 69, 103, 109, 132, 153], "reproduc": [10, 33, 68, 90, 112], "binari": [10, 12, 29, 33, 35, 64, 65, 68, 70], "mask": [10, 33, 66, 68, 131], "42857146": [10, 68], "85714293": [10, 68], "28571415": [10, 33, 68], "71428585": [10, 33, 68], "14285755": [10, 33, 68], "5714283": [10, 68], "4285717": [10, 33, 68], "8571434": [10, 33, 68], "2857151": [10, 68], "dropout1d": [10, 33, 65], "droput1d": 10, "dropout3d": [10, 33, 65], "droput3d": 10, "outer_batch_shap": [10, 33, 68], "inner_batch_shap": [10, 33, 68], "in_featur": [10, 33, 68], "out_featur": [10, 33, 68], "84": [10, 19, 28, 37, 38, 62, 63, 69, 74, 79], "133": [10, 66], "134": [10, 69], "lstm_updat": [10, 33, 68, 133], "init_h": [10, 33, 68, 133], "init_c": [10, 33, 68, 133], "recurrent_kernel": [10, 33, 68, 133], "recurrent_bia": [10, 33, 68, 133], "initi": [10, 23, 33, 46, 49, 50, 52, 53, 55, 68, 99, 102, 110, 114, 117, 118, 128, 129, 133, 147, 153, 154], "state": [10, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 66, 68, 86, 99, 102, 109, 117, 120, 121, 123, 127, 129, 132, 133, 134, 136, 140, 153, 154], "cell": [10, 33, 52, 68, 116, 133], "batch_shap": [10, 15, 25, 33, 38, 52, 61, 68, 69, 75, 131, 133, 135], "hidden": [10, 33, 52, 68, 121, 133, 137], "recurr": [10, 33, 68, 133, 147, 151], "timestep": [10, 33, 52, 68, 133], "h_i": [10, 33], "c_i": [10, 33], "rc": [10, 33], "multi_head_attent": [10, 33, 68, 126], "num_head": [10, 33, 52, 68], "context": [10, 33, 52, 63, 66, 67, 68, 109, 110, 119], "to_q_fn": [10, 33, 68], "to_kv_fn": [10, 33, 68], "to_out_fn": [10, 33, 68, 126], "to_q_v": [10, 33, 68], "to_kv_v": [10, 33, 68], "to_out_v": [10, 33, 68], "scaled_dot_product_attent": [10, 33, 68], "queri": [10, 23, 33, 52, 63, 66, 68, 115, 117, 135, 147], "num_queri": [10, 33, 68], "feat_dim": [10, 33, 68], "num_kei": [10, 33, 68], "applic": [10, 33, 68, 73, 99, 109, 117, 118, 125, 137, 144, 145, 147, 149, 151, 153], "dot": [10, 29, 33, 52, 65, 68, 69, 99, 116], "attent": [10, 33, 52, 68, 102, 110, 113], "score": [10, 33, 68, 99], "_arraywithlinearalgebra": [11, 45], "choleski": [11, 34, 69, 126], "symmetr": [11, 29, 34, 65, 69, 115], "u": [11, 25, 34, 69, 73, 99, 102, 104, 109, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141], "l": [11, 28, 34, 69, 110, 111], "625": [11, 29, 69], "cross": [11, 12, 29, 34, 35, 65, 69, 70, 99, 116], "vif": [11, 34, 69], "det": [11, 34, 69, 116], "axis1": [11, 13, 34, 36, 69, 71], "axis2": [11, 34, 69], "remov": [11, 23, 34, 67, 69, 71, 72, 73, 99, 106, 108, 114, 116, 117, 120, 124, 129, 131, 138, 147], "eigh": [11, 34, 69], "uplo": [11, 34, 69], "eigvalsh": [11, 34, 69], "inner": [11, 25, 34, 61, 69, 72, 108, 126], "inv": [11, 34, 69], "matmul": [11, 34, 66, 69, 114, 129, 130, 133], "transpose_a": [11, 34, 69], "transpose_b": [11, 34, 69], "adjoint_a": [11, 34, 69], "adjoint_b": [11, 34, 69], "detail": [11, 13, 17, 34, 36, 40, 61, 65, 77, 99, 108, 110, 112, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 133, 135, 136, 137, 149, 153], "found": [11, 13, 17, 23, 34, 36, 40, 46, 50, 63, 73, 105, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 127, 131, 149], "matrix_norm": [11, 34, 69], "ord": [11, 34, 69], "fro": [11, 34, 69], "nuc": [11, 34, 69], "matrix_pow": [11, 34, 69], "matrix_rank": [11, 34, 69], "singular": [11, 34, 69, 117], "stack": [11, 13, 23, 29, 34, 36, 45, 52, 61, 65, 66, 69, 71, 73, 99, 107, 112, 133, 143, 145, 152, 153], "largest_singular_valu": [11, 34, 69], "equival": [11, 34, 61, 64, 69, 126, 127, 131, 136, 138], "associ": [11, 34, 64, 69, 85, 110, 117, 124, 125, 127, 128, 129, 141], "full": [11, 33, 34, 45, 46, 61, 62, 64, 66, 68, 69, 85, 90, 99, 102, 103, 110, 117, 120, 121, 123, 127, 129, 131, 133, 141, 145, 147, 153], "defici": [11, 69], "matrix_transpos": [11, 34, 69, 135], "outer": [11, 34, 69, 72, 108], "pinv": [11, 34, 69], "pseudo": [11, 34, 69], "0426": [11, 34], "0964": [11, 34], "0605": [11, 34], "1368": [11, 34], "qr": [11, 34, 69, 128], "decomposit": [11, 34, 69, 108, 154], "orthonorm": [11, 34, 69], "lead": [11, 23, 34, 46, 69, 102, 103, 116, 119, 130, 141], "complet": [11, 23, 34, 69, 102, 108, 110, 112, 113, 115, 116, 119, 121, 127, 128, 129, 135, 136, 145], "namedtupl": [11, 17, 34, 40, 69, 77], "field": [11, 17, 34, 40, 69, 77, 99, 116, 140, 145, 153], "those": [11, 13, 23, 29, 34, 36, 61, 62, 66, 69, 71, 73, 101, 108, 109, 110, 113, 115, 116, 117, 125, 127, 128, 129, 131, 144], "slogdet": [11, 34, 69], "logabsdet": [11, 34, 69], "natur": [11, 34, 64, 69, 102, 113, 119, 121, 128, 140], "6931472": [11, 34, 69], "098611": [11, 69], "solv": [11, 34, 69, 99, 112, 127, 134, 140, 149], "svd": [11, 34, 69], "compute_uv": [11, 34, 69], "full_matric": [11, 34, 69], "svf": 11, "vh": [11, 34, 69], "right": [11, 23, 34, 46, 64, 65, 66, 69, 78, 104, 109, 110, 111, 112, 119, 121, 131, 136], "significantli": [11, 34, 69, 101, 116, 145], "faster": [11, 34, 69, 107, 142, 149, 152], "still": [11, 23, 34, 69, 102, 108, 110, 113, 117, 120, 121, 126, 127, 129, 131, 137, 141, 144, 147, 153], "howev": [11, 34, 69, 102, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 133, 135, 136, 137, 138, 141, 146, 147, 153], "onc": [11, 15, 34, 38, 63, 69, 75, 103, 108, 109, 110, 115, 116, 117, 118, 119, 127, 129, 131, 133, 136, 141], "hermitian": [11, 34, 65, 69], "reconstruct": [11, 17, 40, 69, 77, 128], "close": [11, 64, 69, 71, 108, 109, 110, 120, 127, 131, 147], "reconstructed_x": [11, 69], "svdval": [11, 34, 69], "tensordot": [11, 34, 69, 117], "tensorsolv": [11, 34, 69], "vander": [11, 34, 69], "increas": [11, 13, 34, 36, 65, 69, 71, 73, 101, 117, 121, 127, 130, 131, 147], "vandermond": [11, 34, 69], "vecdot": [11, 34, 69], "vector_norm": [11, 34, 69], "singleton": [11, 16, 19, 20, 34, 39, 42, 43, 69, 71, 76, 79, 80, 133], "accordingli": [11, 16, 17, 19, 20, 34, 39, 42, 43, 61, 64, 69, 76, 77, 79, 80, 122, 127, 133], "mathemat": [11, 34, 59, 64, 69, 117, 127, 131, 147, 153], "l1": [11, 34, 69, 115, 136], "manhattan": [11, 34, 69], "euclidean": [11, 34, 69], "7416575": [11, 34, 69], "vector_to_skew_symmetric_matrix": [11, 34, 69], "_arraywithloss": [12, 45], "binary_cross_entropi": [12, 35, 70, 116], "pred": [12, 29, 35, 65, 70, 99, 115, 124, 126], "label": [12, 29, 35, 65, 70, 99, 108, 110, 112, 116, 127, 132, 133, 134, 138, 147], "predict": [12, 29, 35, 65, 70, 99], "amount": [12, 29, 35, 63, 65, 70, 116, 118, 128], "smooth": [12, 29, 35, 65, 70], "entropi": [12, 29, 35, 65, 70, 99], "357": [12, 35, 70], "223": [12, 35, 70], "cross_entropi": [12, 35, 70, 99, 115, 124, 126], "3862944": [12, 70], "sparse_cross_entropi": [12, 35, 70], "_arraywithmanipul": [13, 45], "x_min": [13, 36, 71, 138], "x_max": [13, 36, 71, 138], "join": [13, 23, 36, 71, 99, 121], "constant_pad": [13, 36, 71], "before_1": [13, 36, 65, 71], "after_1": [13, 36, 65, 71], "before_n": [13, 36, 65, 71], "after_n": [13, 36, 65, 71], "expand_dim": [13, 36, 68, 71, 99, 127, 133, 136], "permute_dim": [13, 36, 71], "permut": [13, 36, 45, 71], "repetit": [13, 36, 71, 121], "fit": [13, 36, 71, 127, 133, 143, 144, 147], "flat": [13, 23, 36, 50, 65, 66, 71], "allowzero": [13, 36, 71], "remain": [13, 16, 36, 39, 64, 65, 71, 73, 76, 110, 116, 119, 121, 130, 131, 141], "never": [13, 36, 71, 110, 117, 127, 129, 131], "valueerror": [13, 36, 40, 71, 96, 121], "reus": [13, 36, 71, 121, 129, 152], "buffer": [13, 36, 71, 141], "roll": [13, 36, 71, 115, 123], "shift": [13, 25, 36, 46, 64, 65, 71, 109, 110, 119, 123], "restor": [13, 36, 71], "num_or_size_split": [13, 23, 36, 68, 71, 133], "with_remaind": [13, 23, 36, 71], "mani": [13, 23, 36, 50, 65, 71, 99, 101, 102, 103, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 141, 143, 147, 150, 153, 154], "squeez": [13, 36, 71, 147], "document": [13, 66, 104, 107, 110, 116, 117, 119, 121, 127, 128, 129, 136, 138], "swapax": [13, 36, 71], "axis0": [13, 36, 71], "swap_ax": 13, "swap": [13, 36, 71], "tile": [13, 30, 36, 71], "unpack": [13, 36, 71, 122, 128, 129], "keep": [13, 23, 36, 71, 107, 108, 109, 110, 112, 115, 116, 121, 127, 129, 130, 131, 136, 138], "zero_pad": [13, 36, 71], "_arraywithnorm": [14, 45], "layer_norm": [14, 37, 74], "normalized_idx": [14, 37, 74], "new_std": [14, 37, 54, 74], "learnabl": [14, 37, 54, 74, 138], "post": [14, 37, 74, 109, 138], "0976": [14, 74], "3452": [14, 74], "2740": [14, 74], "1047": [14, 74], "5886": [14, 74], "2732": [14, 74], "7696": [14, 74], "7024": [14, 74], "2518": [14, 74], "826": [14, 74], "178": [14, 74], "981": [14, 74], "831": [14, 74], "421": [14, 74], "_arraywithrandom": [15, 45], "multinomi": [15, 38, 65, 75], "population_s": [15, 38, 75], "num_sampl": [15, 38, 75], "unnorm": [15, 38, 75, 129], "popul": [15, 19, 23, 38, 42, 65, 75, 79, 117, 118, 129, 133, 153], "uniform": [15, 38, 51, 75, 99, 137, 154], "draw": [15, 38, 51, 65, 75, 90, 108, 112, 128, 129], "ve": [15, 38, 75, 108, 109, 110, 129, 131, 132, 135, 142], "highest": [15, 38, 75], "half": [15, 38, 61, 75, 131], "open": [15, 38, 61, 75, 99, 101, 102, 103, 104, 106, 109, 110, 117, 120, 127, 128, 131, 140, 145, 146, 147, 149, 150], "int64": [15, 16, 18, 19, 26, 38, 39, 41, 42, 61, 62, 65, 76, 78, 79, 117, 127, 129, 133], "235": 15, "float16": [15, 26, 38, 62, 65, 69, 117, 129], "807": 15, "random_uniform": [15, 38, 75, 118, 129, 133, 137], "86": [15, 38, 67], "53": [15, 28, 63, 67, 74], "_arraywithsearch": [16, 45], "argmax": [16, 39, 76, 99, 127], "select_last_index": [16, 39, 76], "occurr": [16, 76, 77], "insert": [16, 39, 71, 73, 76, 78, 116], "appropri": [16, 21, 39, 44, 64, 65, 76, 108, 110, 125, 129], "argmin": [16, 39, 76], "output_dtyp": [16, 39, 76], "across": [16, 23, 30, 39, 63, 66, 68, 73, 76, 108, 112, 115, 117, 119, 121, 123, 124, 127, 129, 131, 145, 147, 152], "argwher": [16, 39, 76, 122], "nonzero": [16, 39, 64, 76], "as_tupl": [16, 39, 76], "fewer": [16, 39, 76], "yield": [16, 65, 76, 99, 116, 122], "condit": [16, 29, 39, 65, 73, 76, 112, 117, 119, 121, 124, 125, 126, 140], "_arraywithset": [17, 45], "unique_al": [17, 40, 77], "inverse_indic": [17, 40, 77], "vari": [17, 66, 77, 115, 119, 127, 129, 135], "unique_count": [17, 40, 77], "unique_invers": [17, 40, 77], "unique_valu": [17, 40, 77], "admonit": 17, "import": [17, 21, 25, 44, 63, 65, 77, 90, 99, 102, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 122, 126, 127, 128, 129, 130, 133, 135, 136, 138, 141, 143, 145, 147, 150, 151, 153], "henc": [17, 71, 77, 109, 115, 116, 129], "build": [17, 52, 53, 77, 99, 102, 104, 105, 109, 116, 117, 124, 132, 134, 137, 138, 141, 142, 145, 147, 149, 152, 153, 154], "graph": [17, 53, 77, 90, 99, 103, 115, 124, 127, 131, 134, 141, 142, 143, 147, 150], "dask": [17, 77, 102], "find": [17, 23, 73, 77, 99, 101, 104, 106, 107, 108, 109, 110, 112, 116, 129, 131, 133, 136, 142], "difficult": [17, 77, 110, 112, 117, 129, 141], "without": [17, 23, 65, 66, 71, 73, 77, 110, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 129, 130, 131, 135, 136, 137, 140, 141, 144, 147, 148, 149, 153], "know": [17, 77, 103, 110, 128, 129, 130, 148], "omit": [17, 64, 77, 123, 126, 127], "x_i": [17, 19, 28, 29, 51, 64, 65, 77, 79, 120], "x_j": [17, 77], "impli": [17, 77, 129], "behavior": [17, 64, 77, 106, 115, 116, 117, 124, 127, 128, 129, 131, 133, 141, 144], "As": [17, 21, 44, 77, 99, 101, 110, 113, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 141, 147, 152], "distinct": [17, 77, 102, 109, 115, 120, 126, 127, 132, 147], "could": [17, 77, 102, 103, 108, 109, 110, 112, 116, 117, 119, 125, 126, 127, 128, 129, 133, 135, 136, 137, 147, 152, 153], "typeerror": [17, 40, 77, 135], "_arraywithsort": [18, 45], "argsort": [18, 41, 78, 127], "descend": [18, 41, 69, 78], "ascend": [18, 41, 65, 78], "stabil": [18, 41, 66, 78, 117, 131], "maintain": [18, 41, 78, 101, 110, 112, 116, 127, 128, 129, 146], "searchsort": [18, 41, 78], "side": [18, 41, 65, 78, 109, 110], "sorter": [18, 41, 78], "ret_dtyp": [18, 41, 78], "_arraywithstatist": [19, 45], "cumprod": [19, 42, 79, 127, 138], "cumul": [19, 42, 79, 140], "exclud": [19, 42, 61, 65, 75, 119, 133], "uint64": [19, 62, 79, 117, 129, 133], "uint16": [19, 62, 79, 117, 127, 129, 133], "bit": [19, 62, 64, 79, 107, 108, 109, 115, 116, 117, 119, 124, 133, 135, 153], "uint32": [19, 62, 79, 117, 129, 133], "resolv": [19, 71, 79, 110, 117, 133], "120": [19, 42, 46, 69, 99], "cumsum": [19, 42, 79, 117], "einsum": [19, 42, 79], "equat": [19, 29, 42, 65, 69, 79, 147], "operand": [19, 64, 65, 79, 113, 115, 120, 127], "describ": [19, 29, 65, 79, 108, 110, 116, 129, 133, 138, 147], "contract": [19, 69, 79], "seq": [19, 79], "consist": [19, 23, 53, 69, 79, 101, 112, 113, 116, 117, 121, 126, 133, 148], "ii": [19, 42, 79, 110], "jk": [19, 79], "ik": [19, 79], "66": [19, 30, 31, 64, 66, 67, 69, 79], "104": [19, 69, 79], "126": [19, 58, 64, 69, 79], "just": [19, 52, 65, 79, 90, 99, 102, 103, 109, 110, 112, 114, 116, 117, 119, 120, 124, 125, 126, 127, 128, 129, 133, 135, 136, 141, 147, 148, 153], "510": [19, 79], "entir": [19, 20, 23, 30, 42, 43, 52, 63, 65, 79, 80, 102, 103, 108, 109, 110, 112, 113, 115, 117, 119, 121, 126, 127, 128, 129, 131, 133, 136, 137, 138, 141, 147, 153, 154], "wa": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 63, 65, 66, 73, 79, 80, 99, 102, 110, 112, 116, 119, 127, 133, 135, 146, 147, 149], "special": [19, 34, 45, 46, 51, 64, 65, 79, 90, 108, 112, 113, 116, 119, 120, 121, 123, 126, 128, 130, 131, 147, 148, 149], "arithmet": [19, 42, 64, 79, 127], "propag": [19, 64, 79], "04999995": 19, "correct": [19, 42, 62, 71, 79, 85, 99, 108, 110, 111, 115, 116, 117, 118, 122, 123, 124, 128, 129], "freedom": [19, 42, 79, 114], "adjust": [19, 42, 79], "choic": [19, 42, 79, 99, 103, 109, 126, 127, 136, 147], "constitut": [19, 42, 79, 124, 133, 148], "commonli": [19, 42, 79, 121, 124], "8164966": [19, 79], "var": [19, 42, 44, 60, 72, 79, 93, 119, 133], "unbias": [19, 42, 79], "6666665": [19, 136], "667": [19, 30, 64, 66], "_arraywithutil": [20, 45], "logic": [20, 43, 63, 64, 80, 108, 113, 116, 117, 118, 121, 125, 127, 129, 131, 135], "AND": [20, 43, 64, 80], "invalid": [20, 43, 69, 71, 80, 109, 117, 122], "_wrap_funct": [21, 44, 124, 125], "function_nam": [21, 44, 45, 108], "new_funct": [21, 44], "add_ivy_array_instance_method": 21, "cl": [21, 44], "modul": [21, 23, 44, 46, 48, 49, 50, 52, 54, 56, 65, 66, 85, 99, 103, 106, 109, 113, 114, 121, 122, 124, 126, 127, 129, 133, 134, 136, 138, 140, 141, 147, 148, 150], "to_ignor": [21, 44, 73], "loop": [21, 44, 72, 99, 114, 122, 141], "don": [21, 44, 99, 103, 108, 109, 110, 116, 117, 129, 137, 141], "shown": [21, 23, 44, 64, 65, 66, 108, 110, 112, 116, 117, 119, 121, 122, 123, 127, 128, 129, 130, 133, 135, 141], "our": [21, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 101, 102, 104, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 121, 122, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 152, 153], "toi": [21, 44], "arrayexampl": 21, "hasattr": [21, 44], "_containerwithactiv": [22, 46], "dict_in": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "queue": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 66, 136], "queue_load_s": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "container_combine_method": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "list_join": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "queue_timeout": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "print_limit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "key_length_limit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "print_ind": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "print_line_spac": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "ivyh": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "default_key_color": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "green": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 98, 109, 110], "keyword_color_dict": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "rebuild_child_contain": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "types_to_iteratively_nest": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "alphabetical_kei": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], "dynamic_backend": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 53], "containerbas": [22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 115], "key_chain": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46], "to_appli": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 73], "prune_unappli": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 73], "map_sequ": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46], "exact": [22, 23, 65, 77, 109, 110, 112, 119, 133], "formul": 22, "chain": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 50, 56, 72, 73, 113, 115, 127, 137, 138, 141, 147], "skip": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 73, 106, 125, 129], "prune": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 73, 86, 116], "166": [22, 58], "159": [22, 58, 68], "38999999": 22, "371": 22, "30883577": [22, 58], "28903052": [22, 58], "10714479": [22, 58], "40000001": [22, 45, 46, 58, 77], "2689414": 22, "7310586": 22, "88079703": 22, "62245935": 22, "4750208": 22, "72844321": 22, "19852395": 22, "07303288": 22, "revert": [22, 58], "948": 22, "static": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 49, 61, 108, 119, 120, 124, 125, 127, 141, 146, 147, 148], "static_gelu": 22, "185": 22, "046": 22, "static_leaky_relu": 22, "static_log_softmax": 22, "static_mish": 22, "static_relu": 22, "static_sigmoid": 22, "static_softmax": 22, "static_softplu": 22, "53499615": 22, "42036411": 22, "__getitem__": [23, 115], "slice": [23, 30, 65, 66, 73, 147], "__init__": [23, 45, 46, 48, 51, 52, 53, 54, 55, 56, 61, 62, 63, 65, 66, 67, 82, 86, 88, 89, 96, 99, 108, 113, 114, 117, 121, 127, 130, 133, 135, 136, 137, 138], "dictionari": [23, 40, 46, 58, 63, 67, 85, 113, 116, 117, 127, 136, 141], "around": [23, 46, 65, 110, 113, 123, 124, 127, 130, 135, 141, 142, 145, 147, 154], "multiprocess": [23, 45, 46, 66, 136, 141], "asynchron": [23, 46, 147], "wait": [23, 46, 66, 99, 108, 110, 116, 127], "combin": [23, 46, 66, 69, 110, 113, 115, 117, 119, 121, 124, 129, 131, 138, 147], "arriv": [23, 46, 66, 131], "cont_list_join": [23, 46], "timeout": [23, 46, 66], "limit": [23, 46, 51, 62, 66, 71, 93, 99, 109, 110, 116, 119, 121, 122, 127, 129, 131, 136, 141, 146, 147, 148], "whitespac": [23, 46], "indent": [23, 46, 136], "extra": [23, 46, 66, 113, 117, 119, 125, 127, 128, 131, 133, 144, 149], "newlin": [23, 46, 120], "color": [23, 46, 98], "termin": [23, 46, 106, 109, 110, 115, 133, 136], "termcolor": [23, 46], "rebuild": [23, 46, 105], "constructor": [23, 46, 49, 56, 66, 85, 117, 118, 135], "param": [23, 29, 30, 40, 46, 64, 66, 93, 99, 138], "kept": [23, 46, 72, 110, 126, 130], "structur": [23, 26, 46, 50, 66, 73, 99, 106, 110, 113, 115, 124, 128, 129, 130, 136, 137, 146, 147], "alphabet": [23, 46], "__setitem__": [23, 113, 115, 135], "_cont_at_key_chains_input_as_dict": 23, "current_chain": 23, "ignore_key_error": 23, "_cont_at_key_chains_input_as_seq": 23, "_cont_call_static_method_with_flexible_arg": 23, "static_method": 23, "kw": 23, "self_idx": 23, "_cont_concat_unifi": 23, "_cont_get_dev": 23, "_cont_get_shap": 23, "properti": [23, 45, 53, 55, 65, 82, 112, 115, 119, 124, 128, 129, 135, 136, 137, 153], "_cont_ivi": 23, "_cont_mean_unifi": 23, "_1": 23, "_cont_prune_key_chains_input_as_dict": 23, "return_cont": 23, "_cont_prune_key_chains_input_as_seq": 23, "_cont_slice_kei": 23, "key_slic": 23, "_cont_sum_unifi": 23, "_get_queue_item": 23, "cont_all_fals": 23, "assert_is_bool": 23, "assert": [23, 66, 90, 111, 112, 122, 127, 128, 129, 130, 135, 136], "cont_all_key_chain": 23, "include_empti": 23, "cont_all_tru": [23, 115, 136], "cont_as_bool": 23, "cont_assert_contains_sub_contain": 23, "sub_cont": 23, "screen": [23, 109, 136], "cont_assert_contains_sub_structur": 23, "check_shap": [23, 93], "cont_assert_ident": 23, "check_typ": 23, "same_arrai": [23, 136], "arrays_equ": 23, "ident": [23, 61, 63, 66, 69, 73, 101, 103, 115, 124, 125, 127, 128, 130, 131, 135, 136, 141, 142], "node": [23, 30, 51, 73, 102, 115, 127, 148], "cont_assert_identical_structur": 23, "cont_at_key_chain": 23, "ignore_non": 23, "cont_at_kei": 23, "substr": 23, "try": [23, 51, 65, 66, 99, 100, 102, 103, 106, 108, 109, 110, 112, 113, 115, 116, 117, 121, 122, 126, 127, 128, 133, 135, 141], "access": [23, 106, 108, 109, 110, 116, 117, 127, 147, 149, 151], "cont_combin": 23, "config": [23, 73, 105, 109, 112, 116, 136, 148], "prioriti": [23, 65, 110, 126], "most": [23, 25, 61, 69, 99, 102, 107, 108, 109, 113, 115, 116, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 141, 147, 148, 150, 151, 153, 154], "duplic": [23, 73, 114, 120, 122, 125, 128, 137, 153], "configur": [23, 63, 73, 105, 106, 109, 110, 116, 117, 125], "container_rightmost": 23, "cont_common_key_chain": [23, 115], "cont_config": 23, "cont_contains_sub_contain": 23, "cont_contains_sub_structur": 23, "cont_copi": [23, 136], "cont_create_if_abs": 23, "noth": [23, 131, 153], "cont_cutoff_at_depth": 23, "depth_cutoff": 23, "summari": [23, 62, 66, 109, 110, 129], "cont_cutoff_at_height": 23, "height_cutoff": 23, "cont_deep_copi": [23, 136], "deep": [23, 66, 99, 101, 104, 107, 108, 110, 112, 115, 117, 128, 132, 135, 136, 145, 147, 150, 151, 153, 154], "intern": [23, 51, 52, 53, 54, 56, 73, 82, 113, 115, 118, 120, 126, 128, 129], "cont_dev": 23, "belong": [23, 108, 112, 137], "cont_dev_str": 23, "cont_diff": [23, 115, 136], "diff_kei": 23, "detect_key_diff": 23, "detect_value_diff": 23, "detect_shape_diff": 23, "share": [23, 62, 99, 102, 114, 115, 119, 124, 127, 128, 129, 131, 133, 145, 146, 153], "among": [23, 103, 116, 129, 131, 147], "flag": [23, 63, 85, 90, 110, 117, 125, 126, 127, 128, 129], "container0": 23, "cont_duplicate_array_keychain": 23, "cont_find_sub_contain": 23, "sub_cont_to_find": 23, "exsit": 23, "cont_find_sub_structur": 23, "sub_struc_to_find": 23, "cont_flatten_key_chain": [23, 136], "__": [23, 119, 136], "above_height": [23, 136], "below_depth": [23, 136], "cont_format_key_chain": 23, "format_fn": 23, "cont_from_disk_as_hdf5": [23, 136], "h5_obj_or_filepath": 23, "slice_obj": 23, "load": [23, 99, 129, 141, 146, 153], "disk": [23, 136, 146], "h5py": 23, "file": [23, 53, 66, 106, 108, 109, 110, 112, 113, 114, 115, 116, 120, 121, 122, 124, 127, 128, 129, 130, 133, 136, 143, 146, 147, 148], "hdf5": [23, 53, 136], "filepath": [23, 110, 112], "h5": 23, "cont_from_disk_as_json": [23, 136], "json_filepath": 23, "json": [23, 105, 109, 136], "some": [23, 31, 52, 63, 64, 65, 67, 73, 99, 102, 103, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 153, 154], "were": [23, 26, 110, 117, 121, 122, 129, 130, 131, 133, 147, 148, 153], "abl": [23, 109, 110, 112, 117, 124, 126, 127, 131, 133, 138, 150, 153], "cont_from_disk_as_pickl": [23, 136], "pickle_filepath": 23, "pickl": [23, 115, 136], "cont_from_flat_list": 23, "flat_list": 23, "hierarchi": [23, 108, 136, 143, 153], "cont_handle_inplac": 23, "prime": 23, "being": [23, 44, 45, 50, 51, 61, 65, 66, 69, 82, 85, 99, 102, 103, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 131, 133, 136, 140, 141, 143, 145, 146, 147, 148, 153, 154], "overwritten": [23, 113, 114], "cont_has_kei": 23, "query_kei": 23, "somewher": [23, 116], "cont_has_key_chain": 23, "cont_ident": [23, 136], "cont_identical_array_shap": 23, "regardless": [23, 103, 104, 117, 135, 138], "cont_identical_config": 23, "cont_identical_structur": 23, "cont_if_exist": 23, "cont_inplace_upd": 23, "cont_ivi": 23, "cont_key_chains_contain": 23, "sub_str": 23, "cont_list_stack": [23, 136], "cont_map": [23, 115, 136], "func": [23, 63, 65, 66, 67, 73, 85, 108, 112, 113, 119, 121, 126], "cont_map_sub_cont": 23, "include_self": 23, "possibi": 23, "cont_max_depth": 23, "cont_multi_map": [23, 115], "map_nest": 23, "assert_ident": 23, "leftmost": [23, 73], "cont_multi_map_in_funct": [23, 115], "fn": [23, 26, 61, 62, 63, 65, 66, 73, 83, 85, 93, 96, 97, 121, 127, 133], "cont_num_arrai": 23, "cont_overwrite_at_key_chain": 23, "target_dict": 23, "return_dict": 23, "cont_prune_empti": 23, "keep_non": 23, "cont_prune_key_chain": 23, "key1": [23, 99, 137], "key2": [23, 99], "key3": 23, "cont_prune_key_from_key_chain": 23, "certain": [23, 61, 99, 109, 110, 112, 117, 121, 124, 129, 131, 141, 151], "decid": [23, 73, 99, 108, 109, 117, 131], "cont_prune_kei": 23, "cont_prune_keys_from_key_chain": 23, "cont_reduc": 23, "cont_remove_key_length_limit": 23, "cont_remove_print_limit": 23, "cont_reshape_lik": 23, "leading_shap": 23, "cont_restructur": 23, "keep_orig": 23, "old": [23, 106, 109, 114, 126], "cont_restructure_key_chain": 23, "keychain_map": 23, "cont_set_at_key_chain": 23, "cont_set_at_kei": 23, "cont_shap": [23, 68], "attribut": [23, 62, 63, 65, 66, 86, 115, 117, 120, 125, 126, 127, 134, 135, 136, 137], "cont_show": 23, "cont_show_sub_contain": 23, "sub_cont_or_keychain": 23, "cont_size_ordered_arrai": 23, "keychain": [23, 29], "cont_slice_kei": 23, "all_depth": 23, "cont_slice_via_kei": 23, "slice_kei": 23, "cont_sort_by_kei": 23, "cont_structural_diff": 23, "cont_to_dict": 23, "cont_to_disk_as_hdf5": [23, 136], "starting_index": 23, "max_batch_s": 23, "later": [23, 66, 108, 129, 147], "cont_to_disk_as_json": [23, 136], "cont_to_disk_as_pickl": [23, 136], "cont_to_flat_list": 23, "cont_to_iter": [23, 115], "leaf_keys_onli": 23, "cont_to_iterator_kei": 23, "cont_to_iterator_valu": 23, "cont_to_json": 23, "cont_to_nested_list": 23, "cont_to_raw": 23, "raw": [23, 99, 120, 148], "cont_trim_kei": 23, "max_length": 23, "trim": 23, "cont_try_kc": 23, "tri": [23, 86], "cont_unifi": 23, "unifi": [23, 63, 99, 100, 102, 111, 112, 113, 117, 121, 127, 131, 133, 141, 143, 144, 145, 147, 151, 154], "concatten": [23, 63], "cont_unstack_cont": 23, "dim_siz": 23, "cont_update_config": 23, "cont_with_default_key_color": 23, "cont_with_entries_as_list": 23, "cont_with_ivy_backend": 23, "ivy_backend": 23, "cont_with_key_length_limit": [23, 136], "cont_with_print_ind": [23, 136], "cont_with_print_limit": [23, 136], "cont_with_print_line_spac": 23, "h5_file_s": 23, "shuffle_h5_fil": 23, "seed_valu": [23, 75], "dataset": [23, 99, 136, 139], "split_cont": 23, "constitu": [23, 138], "_is_json": 23, "_repr": 23, "_containerwithconvers": [24, 46], "static_to_ivi": 24, "static_to_n": 24, "_containerwithcr": [25, 46], "2324": [25, 61], "234": [25, 28, 61, 64, 68], "123": [25, 26, 61, 66, 129], "15443469": 25, "64158883": 25, "5443469": [25, 61], "static_arang": 25, "static_asarrai": 25, "static_empty_lik": 25, "static_ey": 25, "n_row": [25, 29, 61, 65], "n_col": [25, 29, 61, 65], "static_from_dlpack": 25, "static_full_lik": 25, "static_linspac": 25, "static_logspac": 25, "static_meshgrid": 25, "static_native_arrai": 25, "static_one_hot": 25, "static_on": 25, "static_ones_lik": 25, "static_tril": 25, "static_triu": 25, "static_zero": 25, "static_zeros_lik": 25, "_containerwithdatatyp": [26, 46], "718": [26, 28, 62], "618": [26, 28, 62], "broadcats": 26, "inquir": 26, "55040e": [26, 62], "7976931348623157e": [26, 62], "308": [26, 62, 129], "1800": [26, 62], "2147483648": [26, 62], "2147483647": [26, 62], "is_complex_dtyp": [26, 45, 62], "complex64": [26, 62], "static_astyp": 26, "static_broadcast_arrai": 26, "And": [26, 99, 129], "static_broadcast_to": 26, "static_can_cast": 26, "from_": [26, 62], "static_default_complex_dtyp": 26, "complex_dtyp": [26, 62], "static_default_float_dtyp": 26, "float_dtyp": [26, 62], "static_dtyp": 26, "static_finfo": 26, "static_function_supported_dtyp": 26, "static_function_unsupported_dtyp": 26, "static_iinfo": 26, "1084": 26, "40000": 26, "static_is_bool_dtyp": 26, "dtype_in": [26, 62, 65], "static_is_complex_dtyp": 26, "roughli": [26, 109, 112, 150], "static_is_float_dtyp": 26, "static_is_int_dtyp": 26, "static_is_uint_dtyp": 26, "static_result_typ": 26, "_containerwithdevic": [27, 46], "contaion": 27, "static_dev": 27, "static_to_devic": 27, "_containerwithelementwis": [28, 46], "524": [28, 64], "644": [28, 64, 137], "305": [28, 29, 33, 64, 65], "915": [28, 64], "29": [28, 30, 31, 38, 64, 66, 67], "983": [28, 64], "978": [28, 58, 64], "696": [28, 38, 64], "993": [28, 64], "203": [28, 37, 74], "34": [28, 29, 30, 38, 62, 64, 66, 69, 75], "351": [28, 64], "00613": 28, "0154": 28, "0262": [28, 64], "873": [28, 64], "thefunct": 28, "27632612": 28, "934008": 28, "99999928": 28, "91903949": 28, "59814835": 28, "4131622": 28, "403": 28, "428772": 28, "649": 28, "220": 28, "959": [28, 64], "865": 28, "metho": 28, "999999999999": [28, 64], "7j": [28, 29, 64, 65], "0j": [28, 29, 64, 65], "898": [28, 64], "0414": [28, 64], "956": 28, "nuner": 28, "65": [28, 31, 38, 64, 65, 66, 67, 69, 79], "2860": 28, "413": [28, 121], "recirpoc": 28, "300": [28, 30, 64, 65, 66, 69, 129], "527": [28, 64], "301": [28, 64], "757": [28, 64], "279": [28, 64, 65, 66], "835": 28, "347": [28, 121], "721": 28, "93": [28, 30, 38, 63, 66], "static_ab": 28, "static_aco": 28, "static_acosh": 28, "static_add": [28, 115, 119, 120], "static_asin": 28, "412": [28, 33, 64], "201": [28, 29, 64], "static_asinh": 28, "static_atan": 28, "static_atan2": 28, "static_atanh": 28, "static_bitwise_and": 28, "static_bitwise_invert": 28, "static_bitwise_left_shift": 28, "static_bitwise_or": 28, "static_bitwise_right_shift": 28, "static_bitwise_xor": 28, "static_ceil": 28, "static_co": 28, "static_cosh": 28, "static_deg2rad": 28, "static_divid": 28, "static_equ": 28, "static_erf": 28, "static_exp": 28, "static_expm1": 28, "areal": 28, "71828175": 28, "38905621": 28, "59815216": 28, "static_floor": 28, "static_floor_divid": 28, "static_great": 28, "static_greater_equ": 28, "static_isfinit": 28, "static_isinf": 28, "static_isnan": 28, "static_isr": 28, "23j": [28, 29], "9j": [28, 29], "static_less": 28, "static_less_equ": 28, "static_log": 28, "static_log10": 28, "static_log1p": 28, "static_log2": 28, "static_logaddexp": 28, "static_logical_and": 28, "static_logical_not": 28, "static_logical_or": 28, "static_logical_xor": 28, "static_maximum": 28, "static_minimum": 28, "static_multipli": 28, "static_neg": 28, "static_not_equ": 28, "static_posit": 28, "static_pow": 28, "static_rad2deg": 28, "5160": 28, "10300": [28, 64], "15500": 28, "20600": 28, "static_reciproc": 28, "static_remaind": 28, "static_round": 28, "thevfunct": 28, "static_sign": 28, "static_sin": 28, "static_sinh": 28, "static_sqrt": 28, "static_squar": 28, "static_subtract": 28, "static_tan": [28, 115, 119], "143": [28, 46, 64, 119], "static_tanh": 28, "995": [28, 64], "9999": 28, "static_trapz": 28, "static_trunc": 28, "static_trunc_divid": 28, "_containerwithactivationexperiment": [29, 46], "contan": 29, "19722462": 29, "84729779": 29, "static_batch_norm": 29, "static_logit": 29, "static_logsigmoid": 29, "34115386": 29, "64439666": 29, "24115384": 29, "55435526": 29, "07888974": 29, "00741899": 29, "26328245": 29, "00012302": 29, "static_prelu": 29, "static_relu6": 29, "static_thresholded_relu": 29, "_containerwithconversionexperiment": [29, 46], "_containerwithcreationexperiment": [29, 46], "hamming_window": [29, 65], "period": [29, 65, 110, 130], "coeffici": [29, 65, 69], "ham": [29, 65], "8000": [29, 65], "2000": [29, 65], "4180": 29, "8180": 29, "hann_window": [29, 65], "hann": [29, 65], "7500": 29, "3455": 29, "9045": 29, "kaiser_bessel_derived_window": [29, 65], "suitabl": [29, 65, 78, 109, 110, 115, 130, 147], "spectral": [29, 65], "analysi": [29, 65, 147, 148], "design": [29, 65, 99, 101, 102, 111, 116, 117, 126, 127, 128, 131, 133, 135, 141, 143, 145, 147, 150, 151, 152], "kaiser": [29, 65], "70710677": [29, 65], "18493208": [29, 65], "9827513": [29, 65], "kaiser_window": [29, 65], "static_kaiser_window": 29, "2049": 29, "8712": 29, "0367": [29, 65], "7753": 29, "static_eye_lik": 29, "static_hamming_window": 29, "static_hann_window": 29, "window_length": [29, 65], "static_hann": 29, "static_kaiser_bessel_derived_window": 29, "static_tril_indic": 29, "static_triu_indic": 29, "static_vorbis_window": 29, "vorbis_window": [29, 65], "vorbi": [29, 65], "38268343": 29, "92387953": 29, "14943586": [29, 65], "51644717": 29, "85631905": 29, "98877142": 29, "tril_indic": [29, 65], "triu_indic": [29, 65], "_containerwithdata_typeexperiment": [29, 46], "_containerwithdeviceexperiment": [29, 46], "_containerwithelementwiseexperiment": [29, 46], "0003": [29, 69], "0006": 29, "75j": 29, "01317055": 29, "05634501": 29, "115": [29, 64, 65], "3461759": 29, "524111": 29, "335": 29, "345j": 29, "2345j": 29, "mantissa": [29, 65], "frist": [29, 65], "coord": 29, "6055": 29, "1080": 29, "1550": 29, "130": 29, "160": 29, "10240": 29, "08746284": 29, "32192809": 29, "000": 29, "took": 29, "0707": [29, 65], "0579": [29, 65], "static_allclos": 29, "static_angl": 29, "static_binar": 29, "static_conj": 29, "static_copysign": 29, "static_count_nonzero": 29, "static_diff": 29, "static_exp2": 29, "static_fix": 29, "static_float_pow": 29, "static_fmax": 29, "static_fmin": 29, "static_fmod": 29, "static_frexp": 29, "static_gcd": 29, "static_gradi": 29, "static_hypot": 29, "static_imag": 29, "static_isclos": 29, "static_lcm": 29, "static_ldexp": 29, "static_logaddexp2": 29, "static_nan_to_num": 29, "static_nansum": 29, "static_nextaft": 29, "static_r": 29, "static_signbit": 29, "static_sinc": 29, "636": 29, "090": 29, "070": 29, "057": 29, "static_xlogi": 29, "static_zeta": 29, "0244": 29, "_containerwithgeneralexperiment": [29, 46], "static_isin": 29, "_containerwithgradientsexperiment": [29, 46], "_containerwithimageexperiment": [29, 46], "_containerwithlayersexperiment": [29, 46], "673": 29, "0507": 29, "static_adaptive_avg_pool1d": 29, "static_adaptive_avg_pool2d": 29, "static_avg_pool1d": 29, "static_avg_pool2d": 29, "static_avg_pool3d": 29, "static_dct": 29, "132": 29, "182": 29, "242": 29, "253": [29, 64], "515": [29, 75], "467": 29, "static_dft": 29, "static_embed": 29, "static_fft": 29, "static_ifft": 29, "static_interpol": 29, "static_max_pool1d": 29, "static_max_pool2d": 29, "max_pool2dd": 29, "static_max_pool3d": 29, "_containerwithlinearalgebraexperiment": [29, 46], "933034": [29, 65], "eigenvealu": 29, "xx": 29, "37228107": 29, "3722816": 29, "8245648": 29, "41597357": 29, "56576747": 29, "9093767": 29, "56155": [29, 65], "82842": [29, 65], "450": 29, "static_adjoint": 29, "static_cond": 29, "static_diagflat": 29, "static_eig": 29, "static_eigh_tridiagon": 29, "static_eigv": 29, "static_kron": 29, "kroneck": [29, 65], "static_matrix_exp": 29, "static_multi_dot": 29, "regular": [29, 65, 69, 109, 110, 127, 147], "_containerwithlossesexperiment": [29, 46], "binary_cross_entropy_with_logit": [29, 65, 116], "pos_weight": [29, 65], "027": [29, 65], "263": [29, 65, 66], "953": [29, 65], "static_binary_cross_entropy_with_logit": 29, "_containerwithmanipulationexperiment": [29, 46], "atleast": [29, 65], "ary1": [29, 65], "ary2": [29, 65], "3d": [29, 52, 65, 124, 140], "broadcast_shap": [29, 65], "30192195": 29, "static_atleast_1d": 29, "static_atleast_2d": 29, "static_atleast_3d": 29, "static_broadcast_shap": 29, "static_dsplit": 29, "static_dstack": 29, "static_expand": 29, "static_flatten": 29, "static_fliplr": 29, "static_flipud": 29, "static_heavisid": 29, "static_hsplit": 29, "static_hstack": 29, "static_i0": 29, "static_moveaxi": 29, "static_pad": 29, "static_rot90": 29, "static_take_along_axi": 29, "static_top_k": 29, "static_vsplit": 29, "static_vstack": 29, "_containerwithnormsexperiment": [29, 46], "static_instance_norm": 29, "68283635": 29, "25858182": 29, "14645457": 29, "20709086": 29, "59998751": 29, "10000312": 29, "20000625": 29, "19997501": 29, "25000787": 29, "49996877": 29, "35001087": 29, "09995651": 29, "30002821": 29, "79988766": 29, "17999999": 29, "46000001": 29, "45999998": 29, "static_l2_norm": 29, "16903085": 29, "50709254": 29, "84515423": 29, "44183609": 29, "56807494": 29, "69431382": 29, "89442718": 29, "44721359": 29, "static_lp_norm": 29, "12500000": 29, "37500000": 29, "62500000": 29, "27500000": 29, "35000000": 29, "42500000": 29, "0000000": 29, "5000000": 29, "2500000": 29, "_containerwithrandomexperiment": [29, 46], "43643127": 29, "32325703": 29, "24031169": 29, "34251311": 29, "31692529": 29, "3405616": 29, "5319725": 29, "22458365": 29, "24344385": 29, "26588406": 29, "61075421": 29, "12336174": 29, "51142915": 29, "25041268": 29, "23815817": 29, "64042903": 29, "25763214": 29, "10193883": 29, "31624692": 29, "46567987": 29, "21807321": 29, "37677699": 29, "39914594": 29, "22407707": 29, "static_bernoulli": 29, "static_beta": 29, "static_dirichlet": 29, "static_poisson": 29, "_containerwithsearchingexperiment": [29, 46], "_containerwithsetexperiment": [29, 46], "_containerwithsortingexperiment": [29, 46], "static_lexsort": 29, "static_msort": 29, "_containerwithstatisticalexperiment": [29, 46], "static_bincount": 29, "static_corrcoef": 29, "static_median": 29, "static_nanmean": 29, "static_nanmedian": 29, "static_quantil": 29, "static_unravel_index": 29, "_containerwithutilityexperiment": [29, 46], "_containerwithgener": [30, 46], "level": [30, 50, 99, 103, 104, 108, 110, 115, 121, 124, 127, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154], "a0": 30, "833": 30, "classivi": [30, 36, 71, 77], "89858720e": 30, "79717439e": 30, "70": [30, 65, 69, 79, 102], "200": [30, 64, 65, 66, 136], "400": [30, 65, 66, 69, 116], "500": [30, 65, 66], "600": [30, 65, 116], "700": 30, "well": [30, 66, 69, 99, 110, 116, 117, 121, 126, 127, 128, 129, 137, 138, 140, 146, 147, 148, 152], "static_all_equ": 30, "static_array_equ": 30, "x0": [30, 66, 119], "static_assert_supports_inplac": 30, "static_clip_matrix_norm": 30, "849": [30, 66], "static_clip_vector_norm": 30, "static_einops_rearrang": 30, "static_einops_reduc": 30, "29333329": [30, 66], "53000069": [30, 66], "39666676": [30, 66], "20666695": [30, 66], "static_einops_repeat": 30, "static_fourier_encod": 30, "static_gath": 30, "static_gather_nd": 30, "static_get_num_dim": 30, "static_has_nan": 30, "leafwis": 30, "static_inplace_decr": 30, "static_inplace_incr": 30, "static_inplace_upd": 30, "static_is_arrai": 30, "static_is_ivy_arrai": 30, "static_is_native_arrai": 30, "static_scatter_flat": 30, "ref": [30, 34, 64, 71, 120], "static_scatter_nd": 30, "static_stable_divid": 30, "22222222": 30, "11111111": 30, "857": [30, 66], "444": 30, "static_stable_pow": 30, "static_supports_inplace_upd": 30, "static_to_list": 30, "static_to_numpi": 30, "static_to_scalar": 30, "static_value_is_nan": 30, "452": 30, "425": 30, "_containerwithgradi": [31, 46], "87": [31, 64, 67], "976": [31, 64, 67], "49e": [31, 67], "74e": [31, 67], "95e": [31, 67], "024": [31, 65, 67], "096": [31, 64, 67], "216": [31, 34, 67], "384": [31, 67], "626": [31, 67], "en": [31, 67, 69, 116], "wikipedia": [31, 67, 69], "wiki": [31, 67, 69], "stochastic_gradient_desc": [31, 67], "01099": 31, "01003": [31, 67], "01015": [31, 67], "99936122": [31, 67], "99936116": [31, 67], "99936128": [31, 67], "99936104": [31, 67], "w_new": [31, 67], "88": [31, 38, 58, 64, 67, 69, 75, 79], "708": [31, 67], "445": [31, 67], "6e": [31, 67], "00036": [31, 67], "00016": [31, 67], "00049": [31, 67], "layerwis": [31, 67], "static_stop_gradi": 31, "_containerwithimag": [32, 46], "_containerwithlay": [33, 46], "112": [33, 69, 79], "fdfh": 33, "inp": [33, 68], "278": [33, 68], "105": [33, 68, 69, 70], "352": [33, 68], "195": 33, "static_conv1d": 33, "static_conv1d_transpos": 33, "static_conv2d": 33, "static_conv2d_transpos": 33, "static_conv3d": 33, "static_conv3d_transpos": 33, "static_depthwise_conv2d": 33, "static_dropout": 33, "static_dropout1d": 33, "static_dropout3d": 33, "static_linear": 33, "static_lstm_upd": 33, "static_multi_head_attent": 33, "static_scaled_dot_product_attent": 33, "_containerwithlinearalgebra": [34, 46], "577": [34, 69], "707": [34, 69], "static_out": 34, "99999988": 34, "0986123": [34, 69], "static_choleski": 34, "static_rol": [34, 36, 115, 119], "static_cross": 34, "static_det": 34, "static_diag": 34, "static_diagon": 34, "static_eigh": 34, "static_eigvalsh": 34, "51572949": [34, 69], "17091519": [34, 69], "3448143": [34, 69], "88178420e": [34, 69], "35898387e": [34, 69], "46410179e": [34, 69], "static_inn": 34, "static_inv": [34, 69], "static_matmul": 34, "matul": 34, "static_matrix_norm": 34, "deimens": 34, "static_matrix_pow": 34, "static_matrix_rank": 34, "static_matrix_transpos": 34, "n1": [34, 61], "n2": [34, 61], "static_pinv": 34, "static_qr": 34, "static_slogdet": 34, "static_solv": 34, "static_svd": 34, "au": 34, "aS": 34, "avh": 34, "bu": [34, 102], "bvh": 34, "static_svdv": 34, "static_tensordot": 34, "static_tensorsolv": 34, "static_trac": 34, "static_vand": 34, "343": [34, 64], "512": [34, 68, 99], "729": [34, 137], "static_vecdot": 34, "static_vector_norm": 34, "77359247": 34, "static_vector_to_skew_symmetric_matrix": 34, "_containerwithloss": [35, 46], "511": [35, 70], "5108256": 35, "609438": [35, 69], "static_binary_cross_entropi": 35, "static_cross_entropi": 35, "20397282": 35, "83258148": 35, "60943794": 35, "static_sparse_cross_entropi": 35, "_containerwithmanipul": [36, 46], "repreat": 36, "static_clip": 36, "static_concat": 36, "static_constant_pad": 36, "static_expand_dim": 36, "container_axi": [36, 71], "static_flip": 36, "static_permute_dim": 36, "static_repeat": 36, "static_reshap": 36, "positivclip": 36, "static_split": 36, "static_squeez": 36, "static_stack": 36, "leavv": 36, "static_swapax": 36, "static_til": 36, "static_unstack": 36, "static_zero_pad": 36, "_containerwithnorm": [37, 46], "342": [37, 74], "0427": [37, 74], "299": [37, 74], "241": 37, "_containerwithrandom": [38, 46], "431": 38, "83": [38, 64, 65, 68], "274": 38, "91": [38, 64, 68, 69, 75, 79], "static_multinomi": 38, "static_randint": 38, "static_random_norm": 38, "651": 38, "static_random_uniform": 38, "481": 38, "0999": 38, "static_shuffl": 38, "_containerwithsearch": [39, 46], "static_argmax": 39, "static_argmin": 39, "static_argwher": 39, "static_nonzero": 39, "static_wher": 39, "_containerwithset": [40, 46], "static_unique_al": 40, "static_unique_count": 40, "static_unique_invers": 40, "static_unique_valu": 40, "them": [40, 66, 99, 100, 101, 102, 103, 106, 108, 110, 112, 113, 114, 115, 116, 121, 125, 126, 127, 128, 129, 133, 135, 136, 137, 141, 142, 144, 145, 147, 149, 153], "_containerwithsort": [41, 46], "static_argsort": 41, "static_searchsort": 41, "static_sort": 41, "_containerwithstatist": [42, 46], "60000002": [42, 46], "11000001": 42, "23100001": 42, "30800003": [42, 79], "static_cumprod": 42, "static_cumsum": 42, "static_prod": 42, "static_sum": 42, "static_var": 42, "12666667": [42, 79], "11555555": [42, 79], "respectv": 42, "81649649": 42, "94280904": 42, "509902": [42, 79], "2472192": 42, "44948983": 42, "41421354": 42, "contian": 42, "6666667": 42, "_containerwithutil": [43, 46], "static_al": 43, "static_ani": 43, "add_ivy_container_instance_method": 44, "containerexampl": 44, "__abs__": [45, 46], "__add__": [45, 46, 113, 115, 119, 120, 123, 127, 128, 135], "__eq__": [45, 46], "__ge__": [45, 46], "__gt__": [45, 46, 131], "__le__": [45, 46], "__lt__": [45, 46], "__ne__": [45, 46], "__pow__": [45, 46, 135], "69678056": 45, "59876156": 45, "82660675": 45, "__radd__": [45, 46, 119, 120, 127], "__rrshift__": [45, 46], "__rshift__": [45, 46], "__rsub__": [45, 46], "__sub__": [45, 46, 113, 115, 119, 123, 135], "__truediv__": [45, 46, 113, 115, 119], "__xor__": [45, 46], "arg_info": [45, 46, 66], "arg_nam": [45, 46, 66], "as_ivy_dev": [45, 46, 63, 135], "as_ivy_dtyp": [45, 46, 62, 127], "as_native_dev": [45, 46, 63], "as_native_dtyp": [45, 46, 62], "asarray_handle_nest": [45, 46, 61], "asarray_infer_devic": [45, 46, 61], "asarray_to_native_arrays_and_back": [45, 46, 61], "cache_fn": [45, 46, 66, 124], "check_float": [45, 46, 62], "clear_cached_mem_on_dev": [45, 46, 63], "closest_valid_dtyp": [45, 46, 62], "container_typ": [45, 46, 65, 66], "conv": [45, 46, 68, 131], "conv_general_dil": [45, 46, 68, 127], "conv_general_transpos": [45, 46, 68], "current_backend": [45, 46, 65, 121, 124, 130, 133], "current_backend_str": [45, 46, 66, 121, 133, 135], "default_complex_dtyp": [45, 46, 62], "default_devic": [45, 46, 63, 118, 121], "default_dtyp": [45, 46, 62, 117, 124], "default_float_dtyp": [45, 46, 62, 117], "default_int_dtyp": [45, 46, 62, 117], "default_uint_dtyp": [45, 46, 62], "deseri": [45, 46, 58], "dev_util": [45, 46, 63, 118], "hardwar": [45, 82, 102, 109, 131, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153], "resid": [45, 71, 82, 127, 133, 137], "dtype_bit": [45, 46, 62], "execute_with_gradi": [45, 46, 67, 99, 136, 137, 138, 141], "function_supported_devic": [45, 46, 63], "function_supported_devices_and_dtyp": [45, 46, 66], "function_supported_dtyp": [45, 46, 62, 117], "function_unsupported_devic": [45, 46, 63], "function_unsupported_devices_and_dtyp": [45, 46, 66], "function_unsupported_dtyp": [45, 46, 62, 117], "get_all_arrays_in_memori": [45, 46, 66], "get_all_ivy_arrays_on_dev": [45, 46, 63, 118], "get_array_mod": [45, 46, 66], "get_exception_trace_mod": [45, 46, 66], "get_item": [45, 46, 66], "get_min_bas": [45, 46, 66], "get_min_denomin": [45, 46, 66], "get_nestable_mod": [45, 46, 66], "get_queue_timeout": [45, 46, 66], "get_referrers_recurs": [45, 46, 66], "get_show_func_wrapper_trace_mod": [45, 46, 66], "get_tmp_dir": [45, 46, 66], "gpu_is_avail": [45, 46, 63, 99], "grad": [45, 46, 55, 67, 99, 136, 137, 138], "handle_array_funct": [45, 46, 65], "handle_array_like_without_promot": [45, 46, 65], "handle_except": [45, 46, 65, 96], "handle_nest": [45, 46, 65, 115, 124, 125, 133], "handle_out_argu": [45, 46, 65, 117, 118, 123, 125, 126, 133], "handle_view": [45, 46, 65], "handle_view_index": [45, 46], "infer_default_dtyp": [45, 46, 62], "infer_devic": [45, 46, 65, 117, 118, 123, 125], "infer_dtyp": [45, 46, 65, 117, 118, 123, 125], "inplace_arrays_support": [45, 46, 66], "inplace_variables_support": [45, 46, 66], "inputs_to_ivy_arrai": [45, 46, 125], "inputs_to_native_arrai": [45, 46, 65, 113, 125], "integer_arrays_to_float": [45, 46, 65], "invalid_dtyp": [45, 46, 62, 117], "isscalar": [45, 46, 66], "jac": [45, 46, 67], "lu_factor": [45, 46, 69], "mt": [45, 135], "match_kwarg": [45, 46, 66], "normalize_axis_tupl": [45, 46], "num_arrays_in_memori": [45, 46, 66], "num_cpu_cor": [45, 46, 63, 118], "num_gpu": [45, 46, 63, 118, 129], "num_ivy_arrays_on_dev": [45, 46, 63], "outputs_to_ivy_arrai": [45, 46, 65, 113, 117, 118, 123, 125], "percent_used_mem_on_dev": [45, 46, 63], "print_all_arrays_in_memori": [45, 46, 66], "print_all_ivy_arrays_on_dev": [45, 46, 63], "promote_typ": [45, 46, 62, 117], "promote_types_of_input": [45, 46, 62, 117, 126], "set_array_mod": [45, 46, 66], "set_default_complex_dtyp": [45, 46, 62], "set_default_devic": [45, 46, 63, 118], "set_default_dtyp": [45, 46, 62, 117, 124], "set_default_float_dtyp": [45, 46, 62, 117], "set_default_int_dtyp": [45, 46, 62, 117], "set_default_uint_dtyp": [45, 46, 62], "set_exception_trace_mod": [45, 46, 66, 121], "set_min_bas": [45, 46, 66], "set_min_denomin": [45, 46, 66], "set_nestable_mod": [45, 46, 66], "set_queue_timeout": [45, 46, 66], "set_shape_array_mod": [45, 46, 66], "set_show_func_wrapper_trace_mod": [45, 46, 66, 121], "set_split_factor": [45, 46, 63, 121], "set_tmp_dir": [45, 46, 66], "set_with_grad": [45, 46, 67], "shape_array_mod": [45, 46, 66], "split_factor": [45, 46, 63, 121], "split_func_cal": [45, 46, 63], "to_ivy_shap": [45, 46, 66], "to_native_arrays_and_back": [45, 46, 65, 123, 125, 133], "to_native_shap": [45, 46, 66], "total_mem_on_dev": [45, 46, 63, 118], "tpu_is_avail": [45, 46, 63], "try_else_non": [45, 46, 66], "type_promote_arrai": [45, 46, 62, 117], "unset_array_mod": [45, 46, 66], "unset_default_complex_dtyp": [45, 46, 62], "unset_default_devic": [45, 46, 63], "unset_default_dtyp": [45, 46, 62], "unset_default_float_dtyp": [45, 46, 62], "unset_default_int_dtyp": [45, 46, 62], "unset_default_uint_dtyp": [45, 46, 62], "unset_exception_trace_mod": [45, 46, 66], "unset_nestable_mod": [45, 46, 66], "unset_queue_timeout": [45, 46, 66], "unset_shape_array_mod": [45, 46, 66], "unset_show_func_wrapper_trace_mod": [45, 46, 66], "unset_with_grad": [45, 46, 67], "used_mem_on_dev": [45, 46, 63], "valid_dtyp": [45, 46, 62], "value_and_grad": [45, 46, 67], "vmap": [45, 46, 66, 141, 147], "with_grad": [45, 46, 53, 67], "hopefulli": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140], "overview": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 116, 129, 132, 140], "submodul": [45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 106, 108, 109, 110, 112, 116, 118, 124, 125, 129, 132, 133, 137, 142], "question": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "pleas": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "feel": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "free": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "reach": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "discord": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 99, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "forum": [45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "eq": 46, "insid": [46, 65, 86, 106, 109, 110, 113, 115, 117, 125, 129, 130, 153], "ge": 46, "gt": [46, 128, 133], "le": 46, "lt": 46, "ne": 46, "75979435": 46, "52153397": 46, "13532257": 46, "rshift": 46, "truediv": 46, "66666669": [46, 67], "static_adam_step": 46, "static_adam_upd": 46, "static_arg_info": 46, "static_arg_nam": 46, "static_arrai": 46, "static_as_ivy_dev": 46, "static_as_ivy_dtyp": 46, "static_as_native_dev": 46, "static_as_native_dtyp": 46, "static_asarray_handle_nest": 46, "static_asarray_infer_devic": 46, "static_asarray_to_native_arrays_and_back": 46, "static_cache_fn": 46, "static_check_float": 46, "static_clear_cached_mem_on_dev": 46, "static_closest_valid_dtyp": 46, "static_container_typ": 46, "static_conv": 46, "static_conv_general_dil": 46, "static_conv_general_transpos": 46, "static_copy_arrai": [46, 61], "static_current_backend": 46, "static_current_backend_str": 46, "static_default": 46, "static_default_devic": 46, "static_default_dtyp": 46, "static_default_int_dtyp": 46, "static_default_uint_dtyp": 46, "static_deseri": 46, "static_dev_util": 46, "static_dtype_bit": 46, "static_einsum": 46, "static_empti": 46, "static_execute_with_gradi": 46, "static_exist": 46, "static_ful": 46, "static_function_supported_devic": 46, "static_function_supported_devices_and_dtyp": 46, "static_function_unsupported_devic": 46, "static_function_unsupported_devices_and_dtyp": 46, "static_get": 46, "static_get_all_arrays_in_memori": 46, "static_get_all_ivy_arrays_on_dev": 46, "static_get_array_mod": 46, "static_get_exception_trace_mod": 46, "static_get_item": 46, "static_get_min_bas": 46, "static_get_min_denomin": 46, "static_get_nestable_mod": 46, "static_get_queue_timeout": 46, "static_get_referrers_recurs": 46, "static_get_show_func_wrapper_trace_mod": 46, "static_get_tmp_dir": 46, "static_gpu_is_avail": 46, "static_grad": 46, "static_gradient_descent_upd": 46, "static_handle_array_funct": 46, "static_handle_array_like_without_promot": 46, "static_handle_except": 46, "static_handle_nest": 46, "static_handle_out_argu": 46, "static_handle_view": 46, "static_handle_view_index": 46, "static_infer_default_dtyp": 46, "static_infer_devic": 46, "static_infer_dtyp": 46, "static_inplace_arrays_support": 46, "static_inplace_variables_support": 46, "static_inputs_to_ivy_arrai": 46, "static_inputs_to_native_arrai": 46, "static_integer_arrays_to_float": 46, "static_invalid_dtyp": 46, "static_is_ivy_contain": 46, "static_isscalar": 46, "static_jac": 46, "static_lamb_upd": 46, "static_lars_upd": 46, "static_layer_norm": 46, "static_lu_factor": 46, "static_match_kwarg": 46, "static_max": 46, "static_mean": 46, "static_min": 46, "static_multiprocess": 46, "static_normalize_axis_tupl": 46, "static_num_arrays_in_memori": 46, "static_num_cpu_cor": 46, "static_num_gpu": 46, "static_num_ivy_arrays_on_dev": 46, "static_optimizer_upd": 46, "static_outputs_to_ivy_arrai": 46, "static_percent_used_mem_on_dev": 46, "static_print_all_arrays_in_memori": 46, "static_print_all_ivy_arrays_on_dev": 46, "static_promote_typ": 46, "static_promote_types_of_input": 46, "static_se": 46, "static_set_array_mod": 46, "static_set_default_complex_dtyp": 46, "static_set_default_devic": 46, "static_set_default_dtyp": 46, "static_set_default_float_dtyp": 46, "static_set_default_int_dtyp": 46, "static_set_default_uint_dtyp": 46, "static_set_exception_trace_mod": 46, "static_set_min_bas": 46, "static_set_min_denomin": 46, "static_set_nestable_mod": 46, "static_set_queue_timeout": 46, "static_set_shape_array_mod": 46, "static_set_show_func_wrapper_trace_mod": 46, "static_set_split_factor": 46, "static_set_tmp_dir": 46, "static_set_with_grad": 46, "static_shap": 46, "static_shape_array_mod": 46, "static_split_factor": 46, "static_split_func_cal": 46, "static_std": 46, "static_to_ivy_shap": 46, "static_to_native_arrays_and_back": 46, "static_to_native_shap": 46, "static_total_mem_on_dev": 46, "static_tpu_is_avail": 46, "static_try_else_non": 46, "static_type_promote_arrai": 46, "static_unset_array_mod": 46, "static_unset_default_complex_dtyp": 46, "static_unset_default_devic": 46, "static_unset_default_dtyp": 46, "static_unset_default_float_dtyp": 46, "static_unset_default_int_dtyp": 46, "static_unset_default_uint_dtyp": 46, "static_unset_exception_trace_mod": 46, "static_unset_nestable_mod": 46, "static_unset_queue_timeout": 46, "static_unset_shape_array_mod": 46, "static_unset_show_func_wrapper_trace_mod": 46, "static_unset_with_grad": 46, "static_used_mem_on_dev": 46, "static_valid_dtyp": 46, "static_value_and_grad": 46, "static_vmap": 46, "static_with_grad": 46, "static_wrap": 46, "neural": [48, 52, 68, 99, 140, 143, 145, 146, 147, 151, 153, 154], "network": [48, 50, 51, 52, 53, 68, 99, 102, 115, 124, 133, 137, 140, 143, 145, 146, 147, 151, 153, 154], "geglu": 48, "moduleconvert": [49, 53], "from_haiku_modul": 49, "native_modul": 49, "params_hk": 49, "rng_seed": 49, "constructor_arg": 49, "constructor_kwarg": 49, "instance_arg": 49, "instance_kwarg": 49, "haiku": [49, 99, 103, 138, 147], "trainabl": [49, 53, 56, 99, 120, 134, 136, 137], "from_keras_modul": 49, "kera": [49, 99, 103, 153], "from_torch_modul": 49, "dedic": [49, 123, 135, 137], "to_ivy_modul": [49, 138], "native_module_class": 49, "modulehelp": [50, 53], "check_submod_ret": 50, "user": [50, 52, 53, 58, 65, 99, 101, 102, 105, 106, 109, 110, 111, 113, 114, 115, 116, 117, 121, 125, 126, 127, 129, 131, 132, 133, 141, 145, 147, 153, 154], "expected_submod_ret": [50, 53], "get_mod_kei": 50, "top_mod": 50, "explicit": [50, 106, 109, 115, 117, 126, 127, 128, 133, 141, 147], "mod_depth": 50, "mod_height": 50, "mod_with_top_mod_key_chain": 50, "flatten_key_chain": 50, "end": [50, 61, 64, 65, 99, 109, 110, 114, 116, 126, 130, 131, 132, 140, 141, 145, 150], "iimedi": 50, "parent": [50, 67, 108, 116, 135], "show_mod_in_top_mod": 50, "upper_depth": 50, "lower_depth": 50, "show": [50, 66, 99, 108, 109, 110, 116, 119, 126, 127, 129, 140, 141, 147], "coverag": [50, 117, 129], "prompt": [50, 110], "show_structur": 50, "this_repr": 50, "show_v_in_top_v": 50, "perspect": 50, "top_v": 50, "sub_mod": 50, "show_v": 50, "comopos": 50, "begin": [50, 65, 73, 109, 112, 128], "enumer": [50, 99], "track_submod_call_ord": [50, 53], "track_submod_ret": [50, 53], "v_with_top_v_key_chain": 50, "create_vari": [51, 137], "var_shap": [51, 137], "fan_out": [51, 137], "fan_in": [51, 137], "rectangular": 51, "firstlayersiren": 51, "siren": 51, "distribt": 51, "glorotuniform": [51, 52, 137], "glorot": 51, "known": [51, 112, 116, 117, 127, 129], "xavier": 51, "neuron": 51, "w_1x_1": 51, "w_2x_2": 51, "w_nx_n": 51, "w_i": 51, "To": [51, 66, 105, 106, 109, 112, 113, 115, 117, 119, 121, 122, 124, 127, 128, 129, 130, 136, 137, 138], "vanish": 51, "too": [51, 64, 108, 109, 110, 112, 117, 121, 122, 141], "explod": [51, 100, 101], "big": [51, 104, 141, 147], "pick": 51, "carefulli": [51, 127, 145, 150], "abstract": [51, 55, 63, 101, 115, 117, 127, 129, 131, 137, 141, 145, 147, 149, 150, 154], "kaimingnorm": 51, "fan_mod": [51, 137], "kaim": 51, "he": 51, "distibut": 51, "center": 51, "negative_slop": 51, "fan": 51, "propog": 51, "fan_sum": [51, 137], "much": [51, 65, 102, 108, 109, 110, 113, 115, 117, 126, 127, 128, 130, 133, 135, 136, 145, 147, 153, 154], "proport": 51, "Ones": 51, "init": [51, 99, 112, 138], "w0": 51, "gain": [51, 110, 112, 132, 137, 147], "wlim": 51, "help": [51, 66, 79, 99, 104, 105, 108, 109, 113, 114, 115, 116, 117, 119, 125, 127, 129, 130, 131, 135, 136, 137, 139, 142, 143, 147, 149, 153], "issu": [51, 103, 104, 107, 108, 112, 114, 116, 117, 119, 121, 127, 129, 130, 133, 137, 141], "intend": [51, 79, 86, 112, 123, 145, 147, 151, 152], "predefin": 51, "initialz": 51, "fan_avg": 51, "input_channel": [52, 99, 133, 137], "output_channel": [52, 99, 137], "filter_s": 52, "weight_initi": [52, 137], "bias_initi": [52, 137], "construct": [52, 54, 55, 56, 71, 133, 137, 138, 145, 147, 154], "conv1dtranspos": 52, "filter_shap": 52, "conv2dtranspos": 52, "conv3dtranspos": 52, "depthwiseconv2d": 52, "num_channel": 52, "depthwis": [52, 68], "randomli": [52, 65, 68, 90], "bernoul": 52, "lstm": [52, 68, 133, 147], "num_lay": 52, "return_sequ": 52, "return_st": 52, "get_initial_st": 52, "explicitli": [52, 53, 69, 85, 112, 113, 114, 115, 117, 120, 121, 124, 125, 126, 128, 129, 133, 141, 147], "with_bia": [52, 99, 137], "dens": [52, 99], "connect": [52, 102, 109, 137, 138, 145], "receiv": [52, 66, 72, 110, 117, 118, 129], "term": [52, 68, 99, 101, 110, 115, 133, 142, 147], "multiheadattent": 52, "query_dim": [52, 68], "head_dim": [52, 68], "dropout_r": 52, "context_dim": 52, "with_to_q_fn": 52, "with_to_kv_fn": 52, "with_to_out_fn": 52, "build_mod": [52, 53], "on_init": [52, 53], "multi": [52, 68, 69, 99, 119, 132, 141, 143, 145, 147, 151], "head": [52, 68, 99, 107, 109, 127], "similar": [52, 64, 68, 101, 108, 109, 115, 117, 118, 121, 124, 125, 127, 128, 129, 130, 136, 141, 143, 144, 145, 146, 153], "measur": [52, 65, 68], "built": [52, 53, 61, 99, 106, 109, 110, 115, 129, 134, 142, 146, 147, 151], "now": [52, 53, 61, 99, 103, 106, 109, 112, 113, 114, 115, 116, 117, 122, 123, 125, 127, 128, 129, 130, 131, 135, 136, 138, 140, 141, 147], "__call__": [52, 53, 85, 99], "compile_on_next_step": [53, 55, 66, 137], "store_var": 53, "arg_stateful_idx": 53, "kwarg_stateful_idx": 53, "fallback_to_non_compil": [53, 55], "with_partial_v": 53, "submod_depth": 53, "submods_to_track": 53, "varibl": 53, "temporarili": [53, 112, 130], "compil": [53, 55, 85, 90, 99, 115, 127, 130, 131, 132, 134, 141, 142, 143, 146, 147, 148, 151, 154], "id": [53, 63, 99, 105, 107, 109, 113, 115, 122], "fall": [53, 55, 108, 110, 117, 132], "from_cal": 53, "denot": [53, 64, 67], "trigger": [53, 108], "successfulli": [53, 113, 122], "built_": 53, "compile_kwarg": 53, "_unified_ivy_graph": 53, "_call": 53, "target": [53, 63, 99, 109, 111, 128, 130, 132, 136, 137, 138, 143, 145, 146, 147, 150, 152, 153], "save_weight": 53, "weights_path": 53, "show_graph": 53, "randomness_factor": 53, "save_to_disk": 53, "with_edge_label": 53, "with_arg_label": 53, "with_output_label": 53, "output_connected_onli": 53, "include_gener": 53, "array_cach": 53, "highlight_subgraph": 53, "fname": [53, 136], "return_graph": 53, "layernorm": 54, "normalized_shap": 54, "elementwise_affin": 54, "mini": [54, 74], "trail": 54, "pytorch": [55, 64, 99, 102, 103, 107, 108, 113, 117, 118, 121, 123, 124, 126, 127, 128, 130, 131, 133, 138, 141, 142, 148, 150, 151, 153, 154], "set_stat": [55, 137], "init_on_first_step": 55, "ignore_miss": 55, "overridden": [55, 113], "privat": [55, 106, 127, 129], "_step": [55, 137], "miss": [55, 108, 109, 113, 115, 116, 119, 122, 129], "sgd": [55, 147], "stochast": [55, 147], "sub_modul": 56, "custom_object": 58, "identifi": [58, 112, 116, 129, 131], "xxxxxxxxxxxxxx": 58, "custom_fn": 58, "lambda": [58, 66, 67, 68, 73, 108, 121, 124, 125, 128, 133, 136], "24000001": 58, "703": 58, "683": 58, "408": 58, "313": 58, "437": 58, "40337825": 58, "56114835": 58, "20788449": 58, "214": 58, "891": 58, "846": 58, "985": 58, "0768": [58, 64], "231": 58, "718281828459045": 59, "ieee": [59, 62, 64, 102], "754": [59, 62, 64, 102], "euler": [59, 140], "Not": [59, 65, 114, 128, 136, 137, 141], "newaxi": 59, "alia": [59, 108, 127], "141592653589793": 59, "\u03c0": [59, 64, 106], "ifels": 60, "body_fn": 60, "orelse_fn": 60, "whileloop": 60, "test_fn": [60, 86, 99], "if_els": 60, "while_loop": 60, "nestedsequ": 61, "protocol": 61, "_t_co": 61, "chosen": [61, 64, 76, 108, 116, 127], "ml_framework": 61, "distanc": 61, "adjac": 61, "obj": 61, "typevar": 61, "supportsbufferprotocol": 61, "intdtyp": [61, 62], "suppos": [61, 66, 129], "numrow": 61, "numcolumn": 61, "anoth": [61, 62, 99, 102, 108, 109, 110, 115, 117, 121, 124, 125, 126, 127, 129, 131, 133, 135, 138, 142, 147, 153], "interchang": [61, 71], "33333337": [61, 67], "66666663": 61, "gpu": [61, 63, 99, 110, 118, 135, 145, 147, 150, 151, 152], "41588834": 61, "7827941": 61, "6227766": 61, "23413252": 61, "n3": 61, "nn": [61, 99, 124, 128, 131, 138, 148], "similarli": [61, 65, 114, 117, 127, 131, 135, 153], "xv": 61, "yv": 61, "locat": [61, 75, 78, 108, 110, 114, 118, 127, 128, 129, 130, 145], "d_type": 61, "__new__": 61, "y1": [61, 65], "y2": 61, "y3": 61, "defaultcomplexdtyp": 62, "defaultdtyp": 62, "defaultfloatdtyp": 62, "defaultintdtyp": 62, "int_dtyp": 62, "defaultuintdtyp": 62, "uint_dtyp": 62, "incompat": 62, "data_type_funct": 62, "uint8": [62, 117, 129], "helper": [62, 83, 84, 85, 86, 88, 89, 99, 108, 117, 121, 136, 142], "closest": [62, 64, 129, 131], "xtype": 62, "ytype": 62, "native_uint16": 62, "complexdtyp": 62, "complex128": 62, "4294": 62, "967346": 62, "floatdtyp": 62, "4294967346": 62, "uint": [62, 117, 128], "uintdtyp": 62, "native_bool": 62, "followng": 62, "smallest_norm": 62, "bfloat16": [62, 117, 127, 129, 130], "unsupport": [62, 63, 66, 83, 86, 109, 122, 127], "encapsul": [62, 116], "314": [62, 65], "9223372036854775808": 62, "9223372036854775807": 62, "65535": 62, "4294967295": 62, "un": [62, 133], "native_uint8": 62, "type1": 62, "type2": 62, "array_api_promot": 62, "unexpect": [62, 117], "default_dtype_stack": 62, "native_uint64": 62, "ret1": 62, "ret2": 62, "reset": [62, 63, 66], "default_complex_dtype_stack": 62, "default_float_dtype_stack": 62, "native_float16": 62, "defaultdevic": 63, "__enter__": 63, "enter": [63, 67, 109, 110, 113, 117, 118, 123, 125], "runtim": [63, 111, 124, 129, 131, 147], "relat": [63, 99, 105, 107, 109, 110, 121, 122, 127, 129, 130, 131, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "block": [63, 65, 67, 99, 110, 113, 115, 121, 122, 124, 129, 132, 134, 138, 141, 142, 152, 154], "_dev": 63, "__exit__": 63, "exc_typ": 63, "exc_val": 63, "exc_tb": 63, "exit": 63, "baseexcept": [63, 86], "traceback": [63, 129], "initialis": [63, 112, 127, 129], "tpu": [63, 118, 147, 150], "profil": 63, "save_dir": 63, "execut": [63, 66, 106, 109, 110, 115, 116, 119, 124, 125, 126, 129, 131, 133, 135, 138, 141, 142, 143, 147, 148, 149, 150, 151, 153], "directori": [63, 66, 105, 106, 108, 109, 110, 116, 127, 129], "unmodifi": [63, 114, 117], "clear": [63, 99, 101, 102, 103, 108, 110, 114, 117, 118, 119, 127, 131, 133, 135, 147], "cach": [63, 66, 124, 129], "aliv": [63, 66, 118], "139740789224448": 63, "core": [63, 99, 101, 108, 109, 118, 129, 138, 145, 146, 147, 148, 152, 154], "physic": 63, "process_specif": 63, "percentag": 63, "ram": 63, "process": [63, 102, 103, 104, 106, 109, 110, 115, 116, 124, 127, 128, 129, 131, 133, 138, 145, 146, 147, 150, 151, 153, 154], "alon": [63, 99, 105, 129], "036902561555": 63, "7024003467681645": 63, "7095597456708771": 63, "attr_onli": 63, "chunk": 63, "codebas": [63, 103, 104, 111, 117, 126, 127, 129, 130, 132], "max_chunk_s": 63, "chunk_siz": 63, "input_ax": 63, "output_ax": 63, "feed": [63, 147, 148], "usag": [63, 102, 117, 129, 133, 141, 150], "fed": [63, 137], "fist": 63, "gb": [63, 109], "66700032": 63, "589934592": 63, "219563008": 63, "902400346": 63, "525205504": 63, "magnitud": [64, 69], "particular": [64, 109, 110, 112, 114, 116, 117, 119, 125, 126, 127, 129, 130, 131, 143, 147, 153], "princip": [64, 65], "domain": [64, 65, 120, 145, 147], "codomain": [64, 65, 120], "x1_i": [64, 112], "neither": [64, 67, 116, 127, 131], "nor": [64, 67, 116, 127, 151], "2019": [64, 147, 150], "overflow": [64, 69, 79, 107, 117], "commut": 64, "809": 64, "199": 64, "569": 64, "733": 64, "notat": [64, 79, 116], "quadrant": 64, "branch": [64, 110, 112, 116, 141, 147], "rai": [64, 102], "3\u03c0": 64, "bitwis": 64, "170": 64, "243": 64, "225": 64, "xor": 64, "77": [64, 69, 79], "654": [64, 116], "368": 64, "670": 64, "202": [64, 112], "548": 64, "1490": 64, "0192": 64, "0384": 64, "0576": 64, "698": 64, "truth": [64, 83, 85, 127, 129], "purpos": [64, 65, 69, 106, 110, 113, 115, 116, 119, 121, 123, 124, 125, 127, 129, 131, 132, 135, 142, 146, 148, 151, 152, 153], "accur": [64, 69], "fdlibm": 64, "compliant": [64, 79], "potenti": [64, 99, 108, 109, 110, 116, 117, 127, 132, 150], "632": 64, "20e": 64, "72e": 64, "greatest": [64, 65], "742": 64, "NOT": [64, 108], "recommend": [64, 79, 109, 110, 114], "unspecifi": [64, 69, 71, 126], "versu": 64, "52095687": 64, "92457771": 64, "49372482": 64, "22738838": 64, "156": 64, "5877228": 64, "189": 64, "252": 64, "315": 64, "378": 64, "1150": 64, "2890": 64, "172": 64, "229": 64, "487": [64, 68], "344": 64, "semant": [64, 101, 133, 138, 148], "That": [64, 109, 110, 113, 129, 135, 136, 137, 148], "primarili": [64, 110, 115, 147], "reason": [64, 102, 108, 110, 112, 113, 115, 116, 117, 119, 124, 126, 127, 130, 131, 133, 135, 153], "decim": 64, "doc": [64, 65, 99, 104, 107, 108, 119, 120, 123, 129, 133, 136, 137], "deliber": [64, 131], "here": [64, 99, 107, 108, 109, 110, 112, 115, 116, 119, 123, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 141, 147, 148], "due": [64, 102, 105, 109, 112, 116, 121, 126, 127, 147], "imprecis": 64, "5654": 64, "034": 64, "433": [64, 67], "932": 64, "746": 64, "443": 64, "657": [64, 66], "indistinguish": 64, "infinit": 64, "32455532": 64, "89897949": 64, "169": 64, "546": [64, 68], "916": [64, 70], "996": 64, "462": 64, "604": 64, "984": 64, "997": 64, "0375": 64, "032": 64, "nativesparsearrai": 65, "inherit": [65, 113, 115, 121, 135, 141, 142], "care": [65, 102, 110, 127, 131, 138], "what": [65, 99, 102, 103, 105, 110, 111, 115, 116, 119, 120, 123, 125, 127, 128, 129, 132, 133, 135, 136, 137, 138, 140, 141, 143, 148, 149, 152], "isinst": [65, 127, 129, 130, 137, 138], "sparsearrai": 65, "coo_indic": 65, "crow_indic": 65, "col_indic": 65, "ccol_indic": 65, "row_indic": 65, "dense_shap": 65, "to_dense_arrai": 65, "typic": [65, 78, 112, 124, 146, 154], "yj": 65, "whilst": [65, 138, 142, 147], "ary3": 65, "avg": 65, "dimensio": 65, "distrubut": 65, "paramter": 65, "463": 65, "022": 65, "059": 65, "601": 65, "015": 65, "868": 65, "908": 65, "672": 65, "002": 65, "029": 65, "144": 65, "822": 65, "bind_custom_gradient_funct": 65, "custom_grad_func": 65, "bind": [65, 108, 115, 146, 147], "upstream": [65, 109, 110, 112], "compute_weight_mat": 65, "input_s": 65, "kernel_fn": 65, "dim_scale_factor": 65, "arrrai": 65, "355j": 65, "55j": 65, "global_backend": 65, "py": [65, 99, 108, 109, 110, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 135, 137, 138], "tranform": 65, "22e": 65, "24e": 65, "91e": 65, "10e": 65, "16e": 65, "81e": 65, "280": 65, "container_n": 65, "container_norm": 65, "superdiagon": [65, 69], "subdiagon": [65, 69], "seen": [65, 101, 102, 116, 119, 121, 127, 129, 133, 135, 136, 153], "multivari": 65, "bayesian": 65, "ed": 65, "rest": [65, 106, 109, 116, 138, 149], "5d": 65, "third": [65, 69, 77, 126, 141, 146, 147, 153], "eigenvali": 65, "necessarili": [65, 113, 115], "72281323e": 65, "37228132e": 65, "88578059e": 65, "10000000e": 65, "76822128": 65, "70710678": 65, "6401844": 65, "tridiagon": 65, "18749806": 65, "81250191": 65, "350609": 65, "56713122": 65, "06563006": 65, "74146169": 65, "74215561": 65, "0636413": 65, "56742489": 65, "35291126": 65, "emb": 65, "everywher": 65, "t1": 65, "frac": 65, "02733949e": 65, "00j": 65, "49660576e": 65, "68178638e": 65, "01j": 65, "98912367e": 65, "21802426e": 65, "04549134e": 65, "82842712e": 65, "86902654e": 65, "25501143e": 65, "32978028e": 65, "52068201e": 65, "71158374e": 65, "appear": [65, 66, 109, 110, 112, 127, 131], "position": 65, "inexact": 65, "decompos": [65, 127], "0800": 65, "3979": 65, "9121": 65, "5400": 65, "array_funct": 65, "_base": [65, 73], "view_ref": 65, "han": 65, "taper": 65, "horizot": 65, "triangl": 65, "15318303e": 65, "15148591e": 65, "19j": 65, "25000000e": 65, "35378602e": 65, "02j": 65, "65404249e": 65, "17611649e": 65, "24320230e": 65, "79344813e": 65, "22374531e": 65, "45929364e": 65, "14208718e": 65, "07177031e": 65, "interp": 65, "xp": [65, 112], "fp": 65, "is_ivy_sparse_arrai": 65, "is_native_dtyp": 65, "is_native_sparse_arrai": 65, "999999e": 65, "00713103": 65, "99997455": 65, "kaiser_derived_window": 65, "00726415": 65, "9999736": 65, "2773e": 65, "0172e": 65, "9294e": 65, "4149": 65, "9138": 65, "5529": 65, "composit": [65, 108, 111, 113, 114, 115, 117, 125, 126, 128, 129, 131, 133, 137, 138, 141, 142, 148], "indirect": 65, "primari": [65, 111, 114, 117, 125, 126, 127, 129, 131, 141, 142], "secondari": 65, "20141329": 65, "40318608": 65, "48683619": 65, "46328247": 65, "59813893": 65, "43748799": 65, "3333": 65, "6666": 65, "behaviour": [65, 107, 108, 110, 111, 112, 113, 115, 117, 120, 121, 123, 126, 127, 129, 130, 135], "native_sparse_arrai": 65, "native_sparse_array_to_indices_values_and_shap": 65, "ndenumer": 65, "multidimension": [65, 147], "ndindex": 65, "shortcut": [65, 109], "linear_ramp": 65, "reflect": [65, 105, 110, 113, 129], "suppli": [65, 113], "ramp": 65, "mirror": [65, 108, 147], "padding_func": 65, "iaxis_pad_width": 65, "iaxi": 65, "style": [65, 76, 110, 147], "unalt": 65, "extend": [65, 110, 114, 120, 123, 127, 130, 141, 144, 147, 153], "parametr": [65, 112, 129, 147], "217234": 65, "happen": [65, 99, 103, 109, 110, 129, 136], "col": 65, "retain": [65, 67, 142], "downward": 65, "upward": 65, "2xn": 65, "subarrai": 65, "complementari": [65, 145, 153], "38268346": 65, "38268352": 65, "8563191": 65, "14943568": 65, "hurwitz": 65, "arraymod": 66, "array_mod": 66, "manag": [66, 67, 99, 103, 104, 126, 141, 149, 151], "idx": [66, 99, 118, 135], "inspect": 66, "retriev": [66, 110, 127], "decor": [66, 90, 112, 113, 115, 117, 118, 124, 125, 126, 127, 128], "recalcul": 66, "my_sum": 66, "val1": 66, "val2": 66, "cached_sum": 66, "line_eq": 66, "slp": 66, "itc": 66, "cached_line_eq": 66, "0353": 66, "424": 66, "58": 66, "176": 66, "339": 66, "271": 66, "168": 66, "391": 66, "417": 66, "583": 66, "0667": 66, "267": 66, "131": 66, "394": [66, 75], "526": 66, "788": 66, "expos": [66, 99, 101, 116, 133, 137], "public": [66, 116, 135, 150], "default_str": 66, "46999979": 66, "66000009": 66, "93000001": 66, "29000092": 66, "33999991": 66, "6400001": 66, "96000004": 66, "36000013": 66, "51999998": 66, "67000008": 66, "960": 66, "1280": [66, 99], "3600": 66, "bottom": [66, 109, 116, 153], "h1": 66, "w1": 66, "40499985": 66, "61000061": 66, "1500001": 66, "simpl": [66, 99, 101, 108, 109, 110, 113, 115, 117, 118, 119, 120, 124, 126, 127, 129, 130, 131, 135, 137, 138, 141, 142, 146, 147, 148, 149], "exception_trace_mod": 66, "max_depth": [66, 73], "seen_set": 66, "local_set": 66, "path": [66, 85, 90, 106, 109, 126, 127, 128, 147], "temporari": [66, 108, 117], "thrown": [66, 113, 118, 121, 141], "ivyexcept": [66, 67, 96, 121, 127], "doesn": [66, 106, 109, 114, 115, 116, 117, 119, 129, 131, 133, 141, 145], "allow_dupl": 66, "best": [66, 99, 104, 107, 108, 109, 110, 111, 116, 117, 122, 129, 130, 150, 151], "o": [66, 99, 109, 111, 116, 133], "fork": [66, 104, 112, 116], "forkserv": 66, "spawn": 66, "garbag": 66, "collector": 66, "consol": [66, 110, 129, 135], "rtype": 66, "exept": 66, "tmp_dr": 66, "tmp": 66, "my_tmp": 66, "49999999999975": 66, "5015015015010504": 66, "000444502911705e": 66, "9999999999995j": 66, "isn": [66, 110, 125, 136, 141, 149], "possibli": [66, 127, 129, 141], "100000023841858": 66, "200000047683716": 66, "299999952316284": 66, "400000095367432": 66, "599999904632568": 66, "dictionai": 66, "__name__": [66, 99, 121], "hemant": 66, "previous": [66, 106, 109, 114, 124, 129, 133], "451": 66, "in_ax": 66, "out_ax": 66, "thereof": 66, "fun": [66, 73, 116], "summaris": 66, "gradienttrack": 67, "0125": 67, "171": 67, "90000075": 67, "90000164": 67, "9000032": 67, "50000012e": 67, "92558754": 67, "92558694": 67, "92558682": 67, "92558861": 67, "60000025e": 67, "01024": 67, "retain_grad": 67, "xs_grad_idx": [67, 85, 99], "ret_grad_idx": [67, 85, 99], "func_ret": 67, "33333334": [67, 69], "666666": 67, "333332": 67, "66666675": 67, "grad_fn": [67, 136], "933": 67, "jacobian": [67, 141, 147], "jac_fn": 67, "639": 67, "361": 67, "compon": [67, 99, 102, 133, 143, 148, 150], "with_grads_stack": 67, "delet": [67, 106, 110, 116], "value_grad": 67, "423332": 67, "channel_last": 68, "feature_group_count": 68, "x_dilat": 68, "channel_first": 68, "group": [68, 73, 112, 115, 124, 127, 128, 143, 146, 152], "258": 68, "dhwio": 68, "hwi": 68, "overfit": 68, "overal": [68, 106, 115, 117, 118, 120, 138, 143, 145, 146, 147], "1428566": 68, "19999981": 68, "39999962": 68, "4000001": 68, "49000001": 68, "55599999": 68, "21000004": 68, "incom": 68, "666": [68, 69], "4269": 68, "911": 68, "157": 68, "753": 68, "101": [68, 69, 73], "545": [68, 75], "547": 68, "124": [68, 121], "852": 68, "963": 68, "108": [68, 79], "196": 68, "306": 68, "long": [68, 109, 110, 116, 117, 119, 121, 133, 147], "short": [68, 110, 117, 127, 130, 133, 137], "unrol": [68, 133, 136], "cont_feat_dim": 68, "numhead": 68, "out_feat_dim": 68, "5678761": 68, "65441847": 68, "18969631": 68, "40131447": 68, "19991851": 68, "40000153": 68, "68589532": 68, "40129396": 68, "40000817": 68, "31219625": 68, "25698996": 68, "31022024": 68, "16286421": 68, "30296469": 68, "16460133": 68, "59497029": 68, "40046397": 68, "14009905": 68, "81691194": 68, "10732293": 68, "40012637": 68, "73519301": 68, "40021262": 68, "7615059": 68, "40326414": 68, "30141067": 68, "19610119": 68, "32028484": 68, "1708746": 68, "34100914": 68, "14920235": 68, "40000009": 68, "73333335": 68, "axisa": 69, "axisb": 69, "axisc": 69, "293": 69, "46997": 69, "eigendecomposit": 69, "qlq\u1d40": 69, "orthogon": 69, "behav": [69, 108, 112, 121, 126, 127, 128, 135, 148], "futur": [69, 99, 101, 103, 109, 110, 116, 117, 129, 130, 131, 135, 141, 153], "done": [69, 107, 108, 109, 110, 112, 116, 119, 122, 127, 129, 136, 147], "45033181e": 69, "02829754e": 69, "54220343e": 69, "12647155e": 69, "38447177e": 69, "56155300e": 69, "26794919": 69, "7320509": 69, "array_lik": 69, "0012": 69, "00342": 69, "000565": 69, "0104": 69, "000981": 69, "00282": 69, "000766": 69, "0322": 69, "00237": 69, "000151": 69, "00101": 69, "00019": 69, "0214": 69, "00171": 69, "0107": 69, "0167": 69, "0472": 69, "0536": 69, "0177": 69, "000429": 69, "00762": 69, "pivot": 69, "lu": 69, "convent": [69, 79, 101, 114, 123, 130, 140, 153], "frobeniu": 69, "nuclear": 69, "induc": 69, "47722558": 69, "776": 69, "6000004": 69, "118": [69, 121], "moor": 69, "penros": 69, "underflow": [69, 117], "logsabsdet": 69, "although": [69, 113, 115, 127, 131, 145, 147], "again": [69, 102, 103, 110, 113, 114, 115, 119, 121, 126, 127, 129, 130, 131, 136, 138, 141, 152, 153], "subject": 69, "linalg": [69, 108, 126, 128], "solut": [69, 99, 110, 115, 117, 128, 129, 131, 145, 149], "system": [69, 99, 109, 110, 114, 116, 117, 141, 145, 147, 150, 152, 154], "ordin": [69, 140], "usvh": 69, "et": 69, "cetera": 69, "ss": 69, "615": 69, "866": 69, "864": 69, "0x": 69, "Such": [69, 110, 124, 129], "progress": [69, 109, 110, 138], "alexandr": 69, "theophil": 69, "9000001": 69, "64158917": 69, "skew": 69, "symmetric_matrix": 69, "cross_product": 69, "35667497": 70, "793291": 70, "512926": 70, "outsid": [71, 118, 122, 124, 135, 152], "indexerror": [71, 96, 121], "beyond": [71, 120, 127, 153], "introduc": [71, 77, 101, 115, 117, 128, 129, 136], "squeezabl": 71, "famili": 71, "intxx": 71, "floatxx": 71, "rep": 71, "manipulation_funct": 71, "fomaml_step": 72, "inner_cost_fn": 72, "outer_cost_fn": 72, "inner_grad_step": 72, "inner_learning_r": 72, "inner_optimization_step": 72, "inner_batch_fn": 72, "outer_batch_fn": 72, "average_across_step": 72, "inner_v": 72, "keep_inner_v": 72, "outer_v": 72, "keep_outer_v": 72, "return_inner_v": 72, "num_task": 72, "maml": 72, "task": [72, 99, 104, 110, 127, 128, 140, 147, 153, 154], "0x7f095cbe0dc0": 72, "maml_step": 72, "vanilla": [72, 137, 147], "recev": 72, "reptile_step": 72, "cost_fn": 72, "reptil": 72, "receivng": 72, "all_nested_indic": 73, "include_nest": 73, "_index": 73, "extra_nest_typ": 73, "themselv": [73, 115, 117, 118, 120, 124, 127, 137, 144, 153], "far": [73, 118, 119, 134, 152, 153], "manual": [73, 108, 109, 110, 127, 129, 137], "go": [73, 99, 104, 105, 108, 109, 110, 111, 114, 116, 117, 119, 121, 127, 128, 129, 130, 132, 136, 141, 143, 147, 148, 152, 154], "deeper": [73, 101, 110, 111, 129, 132], "copy_nest": 73, "to_mut": 73, "deepli": [73, 141, 147], "mutabl": 73, "copied_nest": 73, "1337": 73, "duplicate_array_index_chain": 73, "index_nest": [73, 124], "insert_into_nest_at_index": 73, "insert_into_nest_at_indic": 73, "onto": [73, 100, 101, 147], "special_squar": 73, "6666666666666667": 73, "special_pow": 73, "linear_model": 73, "map_nest_at_index": 73, "shallow": 73, "_result": 73, "placehold": [73, 110, 113, 122, 123, 142], "hh": 73, "map_nest_at_indic": 73, "ub": 73, "tb": 73, "multi_index_nest": 73, "repeatedli": [73, 116, 129], "nested_ani": 73, "check_nest": 73, "via": [73, 110, 112, 115, 117, 118, 121, 126, 130, 131, 133, 135, 136, 140, 147], "conditon": 73, "nested_argwher": 73, "stop_after_n_found": 73, "nested_indic": 73, "nested_map": [73, 124], "_depth": 73, "_tuple_check_fn": 73, "_list_check_fn": 73, "_dict_check_fn": 73, "wherebi": [73, 108, 144], "directli": [73, 99, 103, 110, 112, 113, 115, 116, 117, 118, 120, 124, 125, 126, 127, 128, 130, 131, 133, 135, 137, 138, 140, 141, 151, 152, 153], "nested_multi_map": 73, "index_chain": 73, "nest0": 73, "ivy_arrai": [73, 113, 127], "unappli": 73, "prune_empti": 73, "prune_nest_at_index": 73, "prune_nest_at_indic": 73, "set_nest_at_index": 73, "set_nest_at_indic": 73, "111": 73, "xyz": 73, "pqr": 73, "217": 74, "uniformli": 75, "22346112": 75, "0922": 75, "49671414": 75, "1382643": 75, "64768857": 75, "5230298": 75, "23415337": 75, "23413695": 75, "9213753": 75, "12818667": 75, "799": 75, "469": 75, "287": 75, "0366": 75, "26431865": 75, "475": 75, "878": 75, "861": 75, "929": 75, "789": 75, "519": 75, "0435": 75, "381": 75, "4608004": 75, "8458502": 75, "67270088": 75, "31128597": 75, "major": [76, 102, 117, 118, 128, 129, 141, 144, 147], "guarante": [77, 103, 113, 141], "aggreg": [77, 116], "fourth": 77, "1141": 77, "8101": 77, "9298": 77, "8460": 77, "2119": 77, "3519": 77, "6252": 77, "4033": 77, "7443": 77, "2577": 77, "3707": 77, "0545": 77, "3238": 77, "5944": 77, "0775": 77, "4327": 77, "62519997": 77, "40329999": 77, "59439999": 77, "74430001": 77, "81010002": 77, "84600002": 77, "92979997": 77, "29999995": 77, "einstein": 79, "summat": 79, "117": 79, "sentinel": 79, "90000004": 79, "statistical_funct": 79, "07472222": 79, "00666667": 79, "08966666": 79, "simplicit": 80, "nested_arrai": 82, "nestedarrai": 82, "classmethod": 82, "from_row_length": 82, "row_length": 82, "from_row_split": 82, "row_split": 82, "unbind": 82, "ivy_test": [83, 84, 85, 86, 88, 89, 90, 108, 109, 110, 112, 116, 128], "test_ivi": [83, 84, 85, 86, 88, 89, 90, 108, 109, 110, 116, 128, 129], "assert_all_clos": [83, 128], "ret_np": [83, 85, 128], "ret_from_gt_np": [83, 128], "ground_truth_backend": [83, 85, 86, 90, 128], "ground": [83, 85, 101, 127, 129], "mark": [83, 108, 110, 112, 129, 133], "fail": [83, 108, 109, 110, 112, 116, 117, 119, 122, 127, 128], "assert_same_type_and_shap": 83, "this_key_chain": 83, "check_unsupported_devic": 83, "input_devic": 83, "all_as_kwargs_np": [83, 85], "presenc": [83, 115, 126], "check_unsupported_device_and_dtyp": 83, "input_dtyp": [83, 85, 89, 128, 129], "check_unsupported_dtyp": 83, "test_unsupported_funct": 83, "value_test": 83, "ret_np_flat": 83, "ret_np_from_gt_flat": 83, "ret_from_np_gt_flat": 83, "available_framework": 84, "ground_truth": 84, "function_test": 85, "args_to_contain": 85, "array_arg": [85, 124], "as_list": 85, "compiled_if_requir": 85, "test_compil": [85, 89, 90], "convtru": 85, "nativeclass": 85, "counter": [85, 137], "create_args_kwarg": 85, "args_np": 85, "arg_np_val": 85, "args_idx": 85, "kwargs_np": 85, "kwarg_np_val": 85, "kwargs_idx": 85, "test_flag": [85, 128, 129], "on_devic": [85, 89, 128], "empty_func": 85, "flatten_and_to_np": 85, "flatten_fw_and_to_np": 85, "framework_compar": 85, "get_frontend_ret": 85, "get_ret_and_flattened_np_arrai": 85, "gradient_incompatible_funct": 85, "gradient_test": [85, 129], "rtol_": 85, "atol_": [85, 128], "gradient_unsupported_dtyp": 85, "kwargs_to_args_n_kwarg": 85, "num_positional_arg": [85, 89, 90, 128, 129], "port": [85, 103], "make_json_pick": 85, "test_frontend_funct": [85, 128], "fn_tree": [85, 86, 90, 127, 128, 129], "test_valu": [85, 128, 129], "all_alias": [85, 128], "alias": [85, 90, 108, 127, 128], "namespac": [85, 106, 108, 117, 125, 127, 128, 130, 133, 138], "test_frontend_method": [85, 128], "init_input_dtyp": [85, 128], "method_input_dtyp": [85, 128], "init_flag": [85, 128, 129], "method_flag": [85, 89, 128, 129], "init_all_as_kwargs_np": [85, 128], "method_all_as_kwargs_np": [85, 128], "frontend_method_data": [85, 128], "consum": [85, 115, 116, 123, 128, 129], "init_as_variable_flag": [85, 90], "dictat": [85, 113, 119, 123, 126], "init_num_positional_arg": [85, 90], "init_native_array_flag": 85, "with_v": 85, "ret_gt": 85, "test_funct": [85, 109, 110, 116, 128, 129], "fn_name": [85, 86, 90, 114, 128, 129], "return_flat_np_arrai": 85, "functiontestflag": [85, 89], "with_out": [85, 89, 125, 128, 129], "instance_method": [85, 89, 125, 129], "as_vari": [85, 89, 125, 128, 129], "as_variable_flag": [85, 90, 128], "native_array_flag": [85, 90, 128], "container_flag": [85, 89, 90], "test_method": 85, "class_nam": 85, "method_nam": [85, 88, 90, 128], "init_with_v": 85, "method_with_v": 85, "test_gradi": [85, 89, 90, 125], "method_as_variable_flag": [85, 90], "method_num_positional_arg": [85, 90], "method_native_array_flag": 85, "method_container_flag": [85, 90], "tthe": 85, "var_fn": 85, "holder": 86, "interruptedtest": 86, "test_interrup": 86, "testdata": 86, "supported_device_dtyp": 86, "is_method": 86, "remove_all_current_framework": 86, "setup_api_test": 86, "test_data": 86, "setup_frontend_test": 86, "teardown_api_test": 86, "teardown_frontend_test": 86, "frontendmethoddata": 88, "ivy_init_modul": 88, "framework_init_modul": 88, "init_nam": 88, "test_parameter_flag": 89, "frontendfunctiontestflag": 89, "testflag": 89, "apply_flag": 89, "args_to_iter": 89, "frontendmethodtestflag": 89, "initmethodtestflag": 89, "methodtestflag": 89, "as_cont": 89, "build_flag": 89, "frontend_function_flag": 89, "searchstrategi": [89, 90, 129], "frontend_method_flag": 89, "function_flag": 89, "init_method_flag": 89, "testing_help": 90, "handle_frontend_method": [90, 128, 129], "class_tre": [90, 128], "init_tre": [90, 128], "init_native_arrai": 90, "min_siz": [90, 129], "max_siz": [90, 129], "_as_varaible_strategi": 90, "method_native_arrai": 90, "_given_kwarg": 90, "wrapper": [90, 113, 115, 117, 121, 125, 126, 127, 135, 142, 143, 147], "strategi": [90, 108, 125, 128], "handle_frontend_test": [90, 128, 129], "number_positional_arg": [90, 128], "test_with_out": [90, 128], "test_inplac": 90, "handle_method": [90, 129], "method_tre": [90, 128, 129], "handle_test": [90, 129], "test_instance_method": 90, "ex": [90, 116], "hypothesi": [90, 108, 110, 112, 116, 125], "num_positional_args_method": 90, "check_al": 93, "messag": [93, 96, 98, 102, 110, 116, 119, 121, 122, 127, 133, 135], "check_all_or_any_fn": 93, "check_ani": 93, "check_dimens": 93, "check_elem_in_list": [93, 127], "elem": 93, "check_equ": [93, 127], "check_exist": 93, "check_fals": 93, "check_fill_value_and_dtype_are_compat": 93, "check_gather_input_valid": 93, "check_gather_nd_input_valid": 93, "check_great": 93, "allow_equ": [93, 121], "check_inplace_sizes_valid": 93, "check_isinst": 93, "allowed_typ": 93, "check_kernel_padding_s": 93, "kernel_s": 93, "padding_s": 93, "check_less": [93, 121], "check_one_way_broadcast": 93, "check_same_dtyp": 93, "check_shapes_broadcast": 93, "check_tru": 93, "dynamic_import": 95, "import_modul": [95, 133], "packag": [95, 99, 105, 106, 109, 116, 121, 122, 127, 141, 147, 149], "ivyerror": [96, 99, 121], "attributeerror": [96, 121, 135], "ivynotimplementedexcept": 96, "notimplementederror": [96, 122], "add_array_spec": 97, "fn_array_spec": 97, "cprint": [98, 133], "warn": [99, 110], "publicli": 99, "yet": [99, 108, 109, 141], "readm": [99, 106, 141], "won": [99, 102, 103, 109, 110, 115, 138], "websit": [99, 102, 112], "faq": 99, "ai": [99, 145, 149], "your": [99, 102, 103, 104, 105, 106, 107, 108, 109, 112, 116, 120, 130, 131, 136, 137, 141, 147], "fingertip": 99, "ml": [99, 100, 102, 103, 104, 107, 127, 132, 133, 134, 136, 137, 138, 140, 143, 144, 145, 146, 147, 150, 152, 154], "model": [99, 136, 137, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154], "written": [99, 101, 109, 112, 113, 120, 123, 126, 127, 130, 133, 135, 138, 141, 145, 147, 151, 153, 154], "prefer": [99, 106, 109, 115, 125, 127, 131, 147], "straight": [99, 127, 129, 135], "awai": [99, 145, 147], "dive": [99, 104, 107, 108, 110, 112, 115, 117, 128, 132, 135, 136, 141, 153], "grow": [99, 130, 147], "guid": [99, 104, 108, 109, 110, 122, 127, 153], "look": [99, 101, 105, 106, 109, 110, 114, 115, 117, 118, 119, 121, 123, 124, 127, 128, 129, 130, 131, 133, 135, 137, 138, 143, 147], "own": [99, 102, 103, 109, 112, 116, 117, 120, 121, 127, 130, 133, 141, 142, 143, 146, 147, 152, 153], "line": [99, 103, 109, 112, 113, 116, 119, 121, 122, 125, 129, 131, 134, 135, 136, 137, 139, 150], "under": [99, 108, 109, 110, 111, 112, 115, 119, 120, 124, 127, 128, 129, 131, 132, 133, 136, 138, 141, 147, 150, 154], "hood": [99, 111, 115, 119, 124, 127, 129, 131, 132, 133, 136, 138, 154], "leverag": [99, 126, 145, 147], "link": [99, 105, 108, 109, 110, 116, 117, 127, 129, 143, 145], "wai": [99, 101, 102, 107, 108, 109, 112, 113, 114, 116, 117, 126, 127, 128, 129, 131, 135, 136, 137, 138, 141, 149, 153, 154], "make": [99, 102, 103, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 145, 147, 148, 149, 150, 153, 154], "project": [99, 101, 102, 103, 106, 109, 110, 113, 114, 129, 137, 140, 141, 143, 145, 147, 150, 154], "research": [99, 101, 140, 147, 154], "develop": [99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 116, 130, 140, 141, 142, 145, 146, 147, 148, 149, 152, 153, 154], "deploi": [99, 116, 142, 145, 146, 147, 149, 153], "wanto": 99, "effici": [99, 109, 110, 115, 122, 124, 125, 126, 129, 133, 136, 141, 147, 149, 150], "redund": [99, 110, 117, 121, 127, 131], "eagerli": 99, "lazili": 99, "instantli": 99, "eager_graph": 99, "lazy_graph": 99, "publish": [99, 103, 141], "pipelin": [99, 101, 112, 113, 128, 138, 142, 147, 148, 153], "variou": [99, 110, 112, 117, 120, 121, 123, 125, 127, 128, 129, 140, 142, 143, 145, 146, 147, 150, 153], "tool": [99, 100, 103, 110, 119, 134, 138, 140, 141, 145, 146, 147, 148, 150, 153, 154], "job": [99, 116], "applii": 99, "perk": [99, 113, 115], "essenti": [99, 101, 102, 108, 115, 118, 119, 124, 127, 130, 153], "mainli": [99, 110, 111, 129, 134, 136, 142, 147], "handler": [99, 122, 132, 134, 138, 142], "behind": [99, 110, 111, 123, 129, 132, 134], "scene": [99, 100, 101, 111, 132, 134, 147], "likewis": [99, 110, 115, 117, 120, 123, 124, 127, 131, 136, 153], "facilit": [99, 125], "agnost": [99, 109, 113, 123, 133, 135, 138, 141, 153, 154], "jnp": [99, 117, 118, 121, 123, 126, 130, 133, 138], "tf": [99, 113, 117, 118, 123, 126, 127, 129, 130, 131, 133, 138, 141, 142, 147], "mse_loss": 99, "jax_ms": 99, "tf_mse": 99, "np_mse": 99, "torch_ms": 99, "mymodel": [99, 136], "linear0": [99, 136, 137], "linear1": [99, 136, 137], "_forward": [99, 120, 133, 136, 137], "put": [99, 108, 129, 141, 153], "togheth": 99, "ll": [99, 103, 104, 109, 110, 119, 126, 136], "someth": [99, 110, 130, 136, 137, 141, 153], "easili": [99, 102, 109, 113, 116, 127, 131, 136, 137, 138, 141, 147, 153, 154], "favorit": 99, "x_in": [99, 136, 137, 138], "loss_fn": [99, 136, 137, 138], "finish": [99, 104, 108, 109, 111], "usabl": [99, 123, 130], "cover": [99, 108, 112, 113, 119, 120, 124, 125, 129, 131, 132], "topic": [99, 125, 135, 147], "mechan": [99, 116, 139, 141], "vision": [99, 105, 139, 143, 153], "robot": [99, 139], "reinforc": [99, 140], "gym": 99, "builder": [99, 106, 139, 141, 142], "trainer": [99, 103, 139, 141, 154], "loader": [99, 136, 141], "break": [99, 114, 117, 122, 123, 130, 141], "highli": [99, 131, 147], "flexibl": [99, 115, 123, 130, 147], "everyon": [99, 103, 104, 110, 141], "plan": [99, 140], "interoper": [99, 102, 144, 145, 147, 150], "There": [99, 101, 108, 109, 110, 112, 113, 115, 117, 119, 121, 122, 124, 127, 128, 133, 136, 141, 148, 149, 153, 154], "environ": [99, 104, 105, 106, 110, 140, 147, 149], "easiest": [99, 109], "command": [99, 106, 109, 112, 116, 125], "python3": [99, 105, 106, 109, 110, 121], "pre": [99, 105, 108, 129, 138, 141, 147], "pull": [99, 103, 104, 105, 106, 108, 109, 112, 119, 130, 131, 141], "unifyai": [99, 105, 106, 109, 110], "obvious": [99, 110, 116], "advantag": [99, 110, 126, 127, 147], "everyth": [99, 103, 108, 110, 116, 119, 127, 128, 129, 130, 134, 141], "sweat_smil": 99, "git": [99, 105, 107, 109, 110, 112, 116, 129], "clone": [99, 105, 106, 110], "github": [99, 101, 105, 107, 108, 110, 112, 116, 117, 119, 120, 129], "com": [99, 105, 109, 112, 116, 117], "cd": [99, 105, 106, 109, 110], "page": [99, 106, 109, 110, 116, 134, 135, 138, 139], "instruct": [99, 108, 109, 112, 121, 128, 129, 145, 148, 151, 153], "video": [99, 104, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 145], "tutori": [99, 110, 127], "quit": [99, 110, 113, 119, 120, 124, 125, 129, 131, 147, 153], "lot": [99, 102, 103, 116, 117, 125, 129, 141, 146], "jax_fn": 99, "jax_x": 99, "torch_x": 99, "torch_fn": 99, "focus": [99, 130, 140, 145, 146, 147, 153, 154], "architectur": [99, 109, 138, 141, 145, 146, 147, 150, 151, 152], "orient": [99, 140], "contributor": [99, 104, 109, 110, 127, 132, 147], "explain": [99, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 143, 150, 153], "nuanc": 99, "background": [99, 109, 147, 149], "contextualis": 99, "problem": [99, 102, 110, 112, 113, 127, 135, 143, 149, 153], "explos": [99, 100, 102], "why": [99, 100, 102, 110, 126, 135], "adher": [99, 101, 102, 112, 117, 120, 123, 131, 133, 138, 143, 144, 153], "lastli": [99, 106, 113], "paint": [99, 101, 133], "pictur": [99, 101, 108, 133], "role": [99, 110, 127, 134, 148, 150, 154], "plai": [99, 113, 127, 129, 138, 147, 150], "wide": [99, 110, 129, 145, 147], "demo": [99, 105, 140], "showcas": [99, 119, 140], "shorter": [99, 135], "ensp": 99, "pretrain": 99, "eff_encod": 99, "efficientnet_v2": 99, "efficientnetv2b0": 99, "include_top": 99, "imagenet": 99, "input_shap": 99, "224": 99, "nois": 99, "torch_eff_encod": 99, "classifi": 99, "num_class": [99, 138], "fc": [99, 137], "customiz": 99, "rand": 99, "script": [99, 105, 106, 109, 110, 116, 119, 133, 141, 147], "deepmind_perceiver_io": 99, "perceiver_backbon": 99, "dummy_input": 99, "rng": [99, 138], "backbon": [99, 133, 136], "params_v": 99, "perceiverioclassifi": 99, "max_pool": 99, "maxpool2d": 99, "1024": 99, "sm_framework": 99, "segmentation_model": 99, "sm": 99, "torch_sm": 99, "metric": [99, 141], "iou_scor": 99, "rax": 99, "torch_rax": 99, "poly1_softmax_loss": 99, "madmom": 99, "madmon": 99, "torch_madmom": 99, "freq": 99, "audio": 99, "hz2midi": 99, "todo": [99, 108, 117, 127, 129], "timm": 99, "mlp_encod": 99, "create_model": 99, "mixer_b16_224": 99, "randn": 99, "output_dens": 99, "maxpooling1d": 99, "pool_siz": 99, "kornia": 99, "pil": 99, "tf_kornia": 99, "url": 99, "cocodataset": 99, "train2017": 99, "000000000034": 99, "jpg": 99, "raw_img": 99, "img": [99, 136], "enhanc": 99, "sharp": 99, "tf_rax": 99, "tf_madmom": 99, "hk": [99, 138], "_forward_classifi": 99, "rng_kei": 99, "prngkei": [99, 138], "forward_classifi": 99, "hk_eff_encod": 99, "dummy_x": 99, "jax_kornia": 99, "jax_sm": 99, "jax_madmom": 99, "np_kornia": 99, "np_sm": 99, "np_rax": 99, "Or": [99, 136], "yourself": [99, 108, 110, 127, 129, 131, 140], "anyon": [99, 102, 104, 110, 116, 141, 153], "classif": [99, 147], "ivynet": 99, "h_w": 99, "extractor": 99, "sequenti": [99, 115, 137], "image_height": 99, "image_width": 99, "favourit": [99, 109], "pure": [99, 120, 123, 127, 131, 135, 138, 141, 147, 153, 154], "generate_batch": 99, "dataset_s": 99, "y_train": 99, "num_correct": 99, "y_pred": 99, "model_nam": 99, "hyperparam": 99, "num_epoch": 99, "epoch": 99, "epoch_loss": 99, "running_loss": 99, "training_accuraci": 99, "train_loss": 99, "train_correct": 99, "train_loop": 99, "tqdm": 99, "xbatch": 99, "ybatch": 99, "ybatch_encod": 99, "loss_prob": 99, "batch_loss": 99, "set_descript": 99, "set_postfix": 99, "accuracy_percentag": 99, "naverag": 99, "6f": 99, "plot": [99, 147], "_train_summari": 99, "csv": 99, "writer": 99, "writerow": 99, "prepar": [99, 116], "folder": [99, 105, 106, 109, 110, 112, 116, 124, 127, 129, 130], "believ": [99, 102, 110], "bug": [99, 110, 127, 129, 130], "feedback": [99, 116], "welcom": [99, 104, 109, 110], "appreci": 99, "info": [99, 120], "amaz": 99, "acceler": [99, 127, 145, 149, 150, 151, 152], "journei": [99, 104], "achiev": [99, 116, 117, 122, 125, 129, 136, 138, 142], "ambiti": 99, "goal": [99, 102, 108, 147, 153], "season": 99, "server": [99, 109, 110, 147], "perfect": [99, 140], "ask": [99, 103, 108, 109, 119, 133, 135, 141], "idea": [99, 103, 105, 127, 130, 134, 140, 146], "fellow": 99, "team": [99, 104, 108, 109, 110, 127, 149], "twitter": 99, "sneak": 99, "peek": 99, "certainli": [99, 102, 153], "great": [99, 102, 103, 110, 129, 133, 135, 153], "stai": [99, 116], "proper": [99, 108, 127], "credit": 99, "accompani": 99, "paper": [99, 103], "continu": [99, 102, 103, 107, 108, 109, 111, 112, 122, 129, 141, 147], "articl": 99, "lenton2021ivi": 99, "titl": [99, 108, 110, 127], "templat": [99, 120, 129], "inter": [99, 128], "author": [99, 108, 110, 145, 149], "lenton": 99, "daniel": 99, "pardo": 99, "fabio": 99, "falck": 99, "fabian": 99, "jame": 99, "stephen": 99, "clark": 99, "ronald": 99, "journal": 99, "arxiv": 99, "preprint": 99, "2102": 99, "02886": 99, "year": [99, 101, 103, 112, 141, 147], "huge": [100, 102, 116, 136, 147, 153], "collabor": [100, 101, 102], "consortium": [100, 102], "grown": 101, "consider": [101, 119, 123, 131, 144, 145], "recent": [101, 102, 109, 110, 129], "especi": [101, 109, 131, 147], "rapidli": 101, "repo": [101, 105, 106, 107, 110, 112, 116, 117, 127, 128, 129, 130], "wonder": [101, 103, 135], "thing": [101, 102, 103, 107, 108, 109, 110, 114, 122, 127, 129, 131, 135, 136, 147], "evolv": [101, 147], "shareabl": 101, "hinder": [101, 123], "outdat": 101, "matter": [101, 119], "month": [101, 109], "rigor": [101, 129], "newest": 101, "softwar": [101, 102, 109, 110, 145, 150, 151, 152], "rapid": [101, 102, 109, 147], "prototyp": [101, 147], "vital": [101, 138], "signific": [101, 102, 141, 147], "bottleneck": 101, "quickli": [101, 103, 109, 110, 116, 136, 137, 147, 154], "obsolet": [101, 103], "constantli": [101, 130, 131], "invent": 101, "wheel": 101, "simultan": [101, 103], "modern": [101, 102, 152], "scalabl": [101, 133, 152, 153], "exactli": [101, 103, 115, 116, 117, 118, 119, 129, 131], "univers": [101, 127], "languag": [101, 103, 127, 131, 133, 142, 145, 148, 150, 151, 152, 153], "front": [101, 127, 132, 133, 136, 145, 147], "runner": 101, "littl": [101, 135, 149], "principl": [101, 145, 147, 150], "almost": [101, 107, 115, 128, 134, 136], "syntax": [101, 102, 117, 122, 147], "unsurprisingli": [101, 119], "fundament": [101, 116, 127, 131, 133, 147], "2006": 101, "cut": [101, 153], "cloth": 101, "central": [102, 108, 131, 153], "forgiven": 102, "eyebrow": 102, "somehow": 102, "strong": [102, 141, 147], "industri": [102, 147, 149], "wors": 102, "funni": 102, "comic": 102, "strip": 102, "easi": [102, 109, 110, 113, 115, 124, 128, 129, 131, 145, 147, 153, 154], "feasibl": [102, 108, 116], "unlik": [102, 112, 115, 116, 119, 126, 152, 154], "charger": 102, "charact": [102, 122, 127], "instant": 102, "mandat": [102, 117, 126, 129, 130], "adopt": [102, 110, 113, 123, 131, 146, 147, 152], "despit": [102, 115, 117, 118, 128, 131, 133, 144, 147], "bring": [102, 112, 129, 133, 134, 142], "benefit": [102, 103, 109, 113, 115, 124, 126, 131, 135, 136, 141, 145, 149, 152], "unrel": [102, 110], "contrari": 102, "bumpi": 102, "road": 102, "allud": [102, 136], "technologi": [102, 145, 149], "success": 102, "thank": [102, 136], "bio": [102, 109], "pcie": 102, "interfac": [102, 135, 138, 141, 142, 143, 144, 145, 146, 147, 151, 154], "motherboard": 102, "raid": 102, "storag": [102, 136], "virtual": [102, 105, 106, 110, 127, 150, 151], "bluetooth": 102, "wireless": 102, "exchang": [102, 107, 143, 145], "btx": 102, "sata": 102, "host": [102, 116, 141, 152], "tcp": 102, "ip": 102, "commun": [102, 104, 108, 109, 110, 141, 146, 147, 149], "smtp": 102, "send": [102, 152], "gmail": [102, 116], "outlook": 102, "pop": [102, 109], "email": [102, 116], "live": [102, 103, 117, 143, 145], "did": [102, 108, 138, 153], "aris": [102, 117, 141], "until": [102, 110, 122, 130, 133, 141, 154], "substanti": [102, 110, 113, 117, 129, 147], "innov": 102, "growth": [102, 150], "necess": 102, "parti": [102, 141, 146, 147, 153], "engag": [102, 104, 110], "regard": [102, 107, 115, 127, 128, 131], "2015": [102, 147], "alongsid": 102, "frame": [102, 140, 147], "matur": [102, 141, 147], "preced": [102, 137], "mention": [102, 108, 109, 110, 113, 119, 123, 124, 126, 127, 129, 131, 147], "aros": 102, "effort": [102, 104, 141, 143, 147, 153], "stage": [102, 104, 106, 110, 111, 122, 129, 147], "mission": [102, 149], "At": [102, 108, 109, 112, 127, 129, 130, 147], "ourselv": [102, 153], "quansight": [102, 153], "compani": [102, 143], "organ": [102, 113, 115, 124, 127, 130, 142], "panda": 102, "scipi": [102, 149, 154], "conda": [102, 106, 109, 149], "apach": [102, 149, 153], "mxnet": [102, 154], "onnx": [102, 145, 153], "scikit": 102, "jupyt": [102, 149], "aw": 102, "cupi": [102, 147, 154], "net": [102, 103, 133, 138], "sympi": 102, "modin": 102, "spyder": 102, "member": [102, 108, 110, 127], "googl": [102, 116], "octoml": [102, 153], "further": [102, 103, 106, 110, 112, 113, 116, 119, 121, 123, 127, 129, 132, 133, 136, 137, 152, 153], "sponsor": 102, "lg": 102, "electron": 102, "microsoft": [102, 147, 152, 154], "shaw": 102, "intel": [102, 145, 152], "promis": 102, "pursuit": 102, "unif": [102, 104, 135, 143, 153], "clearli": [102, 108, 110, 119, 128, 129, 151], "thought": [102, 109, 110, 123, 145], "gone": [102, 132], "simplifi": [102, 121, 127, 133, 134, 137, 143, 145, 146, 147, 150, 153, 154], "excit": [102, 104, 111], "complianc": 102, "hope": [102, 141, 153], "suit": [102, 109, 111, 112, 116, 129, 136, 140, 142, 147, 153], "motiv": [102, 135], "convinc": 102, "celebr": 102, "encourag": [102, 140, 141], "foundat": [102, 150], "perfectli": 103, "happi": [103, 109, 141], "abund": 103, "better": [103, 105, 111, 127, 128, 130, 131, 132, 135, 136, 137, 150], "streamlin": [103, 150], "workflow": [103, 108, 110, 114, 117, 127, 136, 139, 142, 146, 153, 154], "week": [103, 110], "sai": [103, 109, 125, 135], "deepmind": 103, "releas": [103, 108, 109, 110, 117, 127, 130, 131, 141, 147, 153], "awesom": 103, "love": 103, "perceiverio": 103, "slew": 103, "rush": 103, "inevit": [103, 148], "often": [103, 107, 112, 121, 122, 123, 124, 127, 129, 141, 148, 151, 154], "erron": 103, "poor": 103, "repositori": [103, 105, 106, 109, 110, 111, 112, 122], "confus": [103, 117, 121, 126, 131, 142], "hour": [103, 116], "spent": 103, "spin": 103, "discuss": [103, 110, 117, 118, 126, 127, 129, 131, 134, 135, 136, 141, 143, 148], "sake": 103, "few": [103, 107, 108, 110, 115, 117, 118, 123, 124, 126, 129, 131, 133, 134, 135, 136, 137, 139, 147, 149], "automat": [103, 108, 109, 110, 111, 115, 116, 117, 122, 124, 129, 131, 132, 134, 137, 138, 142, 147, 150, 154], "wouldn": 103, "nice": [103, 129, 147], "frantic": 103, "lucid": 103, "honk": 103, "improv": [103, 110, 117, 123, 124, 131, 133, 142, 145, 147, 149, 150], "understand": [103, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 123, 128, 131, 132, 143, 153], "hasn": 103, "spend": [103, 147], "torchvis": 103, "sonnet": 103, "said": 103, "statu": [103, 108, 116], "quo": 103, "dopamin": 103, "ignit": 103, "catalyst": 103, "lightn": 103, "fastai": 103, "flax": [103, 138, 141, 147], "trax": [103, 138], "objax": [103, 138], "offer": [103, 127, 137, 147, 153, 154], "strongli": [104, 109, 153, 154], "skill": [104, 149], "veteran": 104, "beginn": [104, 147], "aspect": [104, 136, 147], "board": 104, "basic": [104, 106, 108, 119, 129], "local": [104, 105, 106, 109, 112, 124, 128, 129], "resourc": [104, 108, 116], "contribut": [105, 107, 108, 109, 110, 127, 133, 151], "slightli": [105, 115, 127, 133, 137], "setup": [105, 109, 110, 116], "mech": 105, "grasp": [105, 127], "tree": [105, 106, 117], "dir": [105, 136], "mutual": [105, 115, 124], "venv": [105, 121], "ivy_dev": [105, 106, 109, 110], "bat": [105, 106, 109, 110], "mac": [105, 106, 109, 110], "linux": [105, 106, 109, 110, 150, 152], "instal": [105, 106, 109, 110, 114, 122, 140], "edit": [105, 108, 109, 110], "pip": [105, 109, 140], "immedi": [105, 109, 131], "ivy_robot": [105, 140], "docker": [105, 107], "desktop": [105, 109], "my": [105, 116, 130], "mount": [105, 110], "rm": [105, 110], "pwd": 105, "pycharm": 105, "vscode": [105, 109], "devcontain": [105, 109], "remot": [105, 109, 112], "codespac": 105, "good": [105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 137], "commit": [105, 108, 112, 119, 129], "deprec": 106, "pr": [106, 108, 110, 112, 127, 128, 129], "soon": [106, 110, 116, 117, 139, 141], "dockerfil": [106, 109], "maco": [106, 152], "ubuntu": 106, "uid": 106, "bash": [106, 109, 110, 112], "cmd": [106, 109], "make_docs_without_dock": 106, "browser": [106, 109], "affect": [106, 116, 127], "synchron": [106, 116], "respons": [106, 110, 116, 117], "remove_doc": 106, "fulfil": [106, 132], "autogenerated_sourc": 106, "Then": [106, 108, 109, 110, 116, 125, 130, 141], "png": [106, 136], "_imag": 106, "rst": 106, "partial_sourc": 106, "conf": 106, "create_rst_fil": 106, "markup": 106, "get_functions_and_class": 106, "doctr": 106, "module_nam": 106, "copy_readme_to_rst": 106, "tabl": [106, 117, 127, 147], "toc": 106, "append_toctree_to_rst": 106, "create_index_rst": 106, "resours": 107, "climb": 107, "steep": 107, "curv": 107, "realpython": 107, "pyn": 107, "platform": [107, 109, 145, 149, 151], "pilot": 107, "stuck": [107, 108], "spell": 107, "though": [107, 108, 110, 117, 120, 124, 126, 127, 131, 136, 141], "sound": [107, 116, 132], "peopl": [107, 109, 110, 111, 147, 149], "action": [107, 116, 119, 129], "frequent": [108, 110, 147], "outlin": [108, 109, 110, 111, 115, 117, 120, 124, 126, 127, 129], "broad": [108, 149], "individu": [108, 110, 112, 117, 124, 126, 127, 147, 150, 153, 154], "explan": [108, 110, 115, 120, 123, 127, 135], "focu": [108, 145, 146, 149, 154], "pypi": [108, 109, 141], "familiar": [108, 109, 121], "sure": [108, 109, 110, 112, 116, 127, 128, 129, 131], "aforement": 108, "categori": [108, 112, 113, 115, 117, 127, 130, 132], "arraywithelementwis": [108, 113, 135], "containerwithmanipul": 108, "thorough": [108, 120, 123, 129], "comment": [108, 109, 110, 112, 117, 122, 127], "add_reformatting_checklist_": 108, "category_nam": [108, 117, 118, 120, 123, 124], "autom": [108, 116, 129, 142, 149], "bot": 108, "markdown": 108, "text": [108, 110, 119, 120], "patient": [108, 109], "symbol": [108, 109, 147, 148], "emoji": 108, "legend": 108, "review": [108, 110, 116, 119, 127, 130], "checkbox": [108, 109], "proce": [108, 109], "elabor": 108, "struggl": 108, "assigne": 108, "status": 108, "refrain": 108, "transpil": [108, 121, 127, 132, 133, 134, 142, 147, 153, 154], "subsect": [108, 110, 112, 116], "verifi": [108, 117, 118, 127, 129, 130], "func_nam": [108, 119, 120, 124, 127], "simpler": [108, 110, 127, 148, 154], "suggest": [108, 109, 110, 117, 127, 129, 130], "assess": [108, 131], "merg": [108, 110, 112, 116, 127, 147], "composition": [108, 126], "pend": 108, "helpfulli": [108, 131, 145], "problemat": [108, 109], "unimpl": 108, "issue_link": 108, "alias_nam": 108, "notic": [108, 113, 116, 131], "push": [108, 110, 112, 122, 128, 129, 153], "liner": 108, "meanwhil": [108, 116], "reselect": 108, "placement": 108, "categoris": [108, 112, 127], "faithfulli": 108, "creation_routin": [108, 128], "indexing_routin": 108, "ma": 108, "manipulation_routin": 108, "mathematical_funct": [108, 127], "sorting_searching_count": 108, "ufunc": [108, 127], "matrix_and_vector_product": 108, "matrix_eigenvalu": 108, "norms_and_other_numb": 108, "solving_equations_and_inverting_matric": 108, "seem": [108, 109, 131, 137, 138, 141, 147], "gleam": 108, "uncom": 108, "test_numpy_inn": 108, "test_frontend": [108, 116, 128], "unsur": [108, 129], "explor": [108, 109, 110, 117, 131, 134, 138, 140, 147, 150], "confirm": 108, "backend_nam": [108, 114, 117, 118, 120, 123, 124, 125], "relevant_submodul": 108, "sometim": [108, 109, 110, 112, 117, 124, 127, 129, 130, 131], "recreat": [108, 112], "defer": [108, 113, 115, 117, 118, 124, 125, 126, 127, 129, 153], "clearer": [108, 121, 128, 136], "mind": [108, 113, 115, 129], "realli": [109, 115, 141, 152, 153], "button": [109, 110], "your_usernam": 109, "gh": 109, "your_fold": 109, "sync": [109, 112], "cours": [109, 110, 112, 113, 119, 127, 130, 131, 136, 141, 152, 153], "whatev": [109, 115, 141], "elig": 109, "student": 109, "licenc": 109, "remind": 109, "licens": [109, 150], "expir": 109, "profession": 109, "trial": 109, "jetbrain": 109, "bui": [109, 153], "paid": 109, "pace": 109, "person": [109, 110], "experi": [109, 129, 134, 136, 141], "abil": [109, 131, 134, 141, 147], "perhap": [109, 135, 136, 137, 141, 153], "click": [109, 110, 116, 120, 134], "icon": [109, 110], "panel": 109, "builtin": [109, 135, 137], "virtualenv": 109, "tick": [109, 110, 116], "test_array_api": [109, 110, 112, 129], "txt": [109, 112, 130], "visual": [109, 127, 141, 147, 149, 152], "mitig": [109, 153], "conflict": [109, 110, 116, 127, 136], "wsl": 109, "powershel": 109, "admin": 109, "visit": [109, 110, 116], "deploy": [109, 146, 149, 150, 153, 154], "press": [109, 110, 136], "ok": 109, "debug": [109, 110, 115, 116, 129, 131, 136, 147], "dialog": 109, "caus": [109, 110, 112, 114, 115, 116, 117, 119, 126, 128, 129, 141], "earlier": [109, 110], "virtualis": 109, "On": [109, 117, 127, 129, 134, 138], "dropdown": 109, "menu": 109, "tag": [109, 110], "navig": [109, 110, 111], "tab": [109, 116, 136], "m1": 109, "optional_m1_1": 109, "optional_m1_2": 109, "sudo": 109, "apt": 109, "ca": 109, "certif": 109, "curl": 109, "gnupg": 109, "lsb": 109, "mkdir": [109, 116], "keyr": 109, "fssl": 109, "download": [109, 129], "gpg": 109, "dearmor": 109, "echo": [109, 116], "deb": 109, "arch": 109, "dpkg": 109, "lsb_releas": 109, "tee": 109, "null": 109, "ce": 109, "cli": 109, "containerd": 109, "io": [109, 116], "plugin": 109, "systemctl": 109, "permiss": [109, 116], "coupl": [109, 113, 135, 137, 147], "test_ab": [109, 129], "editor": 109, "pytest": [109, 110, 112, 116, 129], "keyboard": 109, "displai": [109, 115, 121, 129, 136], "screenshot": 109, "ctrl": [109, 110], "test_elementwis": 109, "bar": 109, "shell": [109, 110], "run_tests_cli": [109, 112], "run_ivy_core_test": 109, "run_ivy_nn_test": 109, "run_ivy_stateful_test": 109, "run_test": [109, 116], "sh": [109, 110, 112, 116], "test_depend": 109, "test_ivy_cor": 109, "test_ivy_nn": 109, "test_ivy_st": 109, "test_": [109, 128], "test_cor": [109, 110, 128], "wish": [109, 127], "ivy_cor": 109, "ivy_nn": 109, "ivy_st": 109, "simplest": [109, 119, 129, 131], "header": [109, 110], "advanc": [109, 146], "arrow": 109, "test_stat": 109, "test_submodule_nam": 109, "test_function_nam": 109, "debugg": 109, "studio": 109, "afterward": [109, 136], "restart": 109, "overlap": [109, 116, 130, 131, 148], "test_file_path": 109, "test_fn_nam": 109, "engin": [109, 147, 149, 150], "comma": 109, "postcreatecommand": 109, "post_create_command": 109, "poststartcommand": 109, "safe": [109, 127], "containerworkspacefold": 109, "reopen": 109, "test_fle_path": 109, "slash": 109, "headach": 109, "arm": [109, 110], "vm": [109, 116], "azur": 109, "cloud": [109, 116, 140, 149], "longer": [109, 117, 125, 126, 129, 147], "worri": 109, "usual": [109, 112, 127, 129, 131], "theme": 109, "slow": 109, "ipad": 109, "cool": [109, 130], "quota": 109, "requisit": 109, "pane": [109, 110, 116], "readi": 109, "master": [109, 110, 112, 116, 130, 147], "box": 109, "upto": [109, 110], "minut": [109, 116], "subsequ": [109, 113, 116, 117, 119, 123, 124, 126, 129, 131, 137, 148], "launch": 109, "approach": [109, 110, 113, 115, 117, 124, 125, 127, 129, 131, 135, 136, 141, 144, 151, 153], "colour": 109, "chanc": 109, "troubleshoot": 109, "ever": 109, "usr": 109, "flask": 109, "toolbar": [109, 110], "_array_modul": [109, 112], "array_api_test": [109, 110, 112], "refresh": 109, "conftest": 109, "nutshel": [109, 123], "hook": 109, "lint": 109, "attempt": [109, 122, 141], "succe": 109, "properli": [109, 111, 121, 127, 129], "quick": [110, 111, 128, 137], "tendenc": 110, "land": 110, "world": [110, 149], "come": [110, 113, 116, 127, 130, 131, 137, 139, 142, 147], "fly": [110, 147], "hard": [110, 135, 147], "internship": 110, "serv": [110, 113, 115, 123, 124, 127, 129, 131, 132, 142, 145], "suspect": 110, "act": [110, 119, 141, 154], "iii": 110, "reformat": [110, 122], "issue_numb": 110, "No": [110, 116, 147], "clean": [110, 130, 131, 133, 134, 136], "respond": 110, "dai": 110, "freed": 110, "basi": [110, 112, 136], "situat": [110, 116, 138], "upon": [110, 119, 126, 129, 131, 141, 146, 147], "unabl": [110, 131], "qualiti": 110, "hypothet": 110, "frustrat": 110, "delai": 110, "busi": 110, "fine": [110, 117, 119, 127, 135, 138, 153], "inact": 110, "me": 110, "unfairli": 110, "investig": 110, "incomplet": 110, "assign": [110, 114, 117, 122, 126, 135], "regist": 110, "wherea": [110, 113, 115, 117, 118, 119, 123, 124, 129, 130, 138, 144], "invit": 110, "roadmap": [110, 116], "ideal": [110, 116, 126, 136], "easier": [110, 112, 113, 117, 127, 128, 130, 142, 147, 149], "forth": 110, "rare": [110, 118, 141, 152], "scenario": [110, 121], "someon": [110, 121, 141], "unfortun": 110, "practic": [110, 116, 127, 150], "separ": [110, 113, 115, 116, 129, 133, 135, 136, 148, 152], "date": [110, 130], "complic": [110, 128, 133], "merge_with_upstream": 110, "name_of_your_branch": 110, "abort": 110, "tediou": [110, 119], "stash": 110, "reinstat": 110, "fetch": [110, 112, 116], "uncommit": 110, "unstag": 110, "untrack": 110, "comprehens": [110, 112], "atlassian": 110, "wrote": 110, "piec": [110, 113, 124, 125, 133, 143, 145], "blame": 110, "revis": 110, "eg": 110, "past": [110, 112, 128, 129, 147], "grep": 110, "commit_id": 110, "handi": 110, "histori": 110, "toggl": 110, "highlight": [110, 116, 119, 127], "whenev": [110, 116, 117, 121, 125, 126, 129, 136], "think": [110, 116, 119, 148], "approv": 110, "hash": [110, 136], "cancel": 110, "speedup": 110, "unavail": 110, "tickbox": 110, "span": [110, 131, 145, 153], "intent": [110, 126], "discourag": 110, "philosophi": 110, "valuabl": 110, "infrequ": 110, "earli": [110, 147], "wast": [110, 116], "spot": [110, 119, 124], "mistak": [110, 122], "propos": [110, 127, 131, 147], "mountain": 110, "advoc": [110, 141], "actual": [110, 111, 116, 124, 126, 127, 128, 129, 131, 132, 137, 141, 148, 153], "aim": [110, 112, 127, 129, 132, 145, 147, 150], "session": [110, 147], "beauti": 110, "particularli": [110, 136, 141, 145], "concern": [110, 111, 115, 119, 126, 131, 132, 153], "undo": 110, "stress": 110, "nifti": 110, "reassur": 110, "isol": [110, 148, 153], "fact": [110, 112, 116, 127, 129, 133, 136], "local_path_to_ivi": 110, "subfold": [110, 128, 129, 130], "dep": 110, "fresh": 110, "arsen": 110, "declar": 110, "exec": 110, "rf": 110, "cp": 110, "ivy_contain": 110, "test_imag": 110, "test_random_crop": 110, "test_creation_funct": 110, "test_arang": 110, "cursor": 110, "alt": 110, "blog": 110, "breakpoint": 110, "gutter": 110, "caret": 110, "f8": 110, "f9": 110, "Into": 110, "f7": 110, "smart": 110, "interest": 110, "fragment": [110, 143, 145, 149], "pychram": 110, "dummi": 110, "wherein": [110, 125, 129], "failur": [110, 116, 128, 129], "who": [111, 121, 132, 141, 147, 149], "weed": [111, 132], "tour": 111, "superset": [111, 127, 141], "goe": [111, 131], "dynam": [111, 117, 118, 126, 127, 133, 147, 151], "borrow": 111, "conjunct": 112, "establish": [112, 149], "2020": [112, 147], "popular": [112, 147], "sens": [112, 119, 127, 135], "unconnect": 112, "decis": [112, 115, 117, 127, 131, 133, 135, 147], "checkout": [112, 129], "everytim": [112, 117], "thoroughli": 112, "ci": [112, 117, 122, 128, 129, 141], "test_linalg": [112, 128], "test_set_funct": 112, "test_signatur": 112, "excess": [112, 114, 119], "array_modul": 112, "vv": 112, "test_manipulation_funct": 112, "test_concat": [112, 129], "nb": 112, "liber": 112, "bodi": [112, 129], "fortun": 112, "falsifi": [112, 129], "______________________": 112, "test_remaind": 112, "_______________________": 112, "test_operators_and_elementwise_funct": 112, "1264": 112, "st": [112, 128, 129], "1277": 112, "binary_param_assert_against_refimpl": 112, "ctx": 112, "mod": 112, "620": 112, "binary_assert_against_refimpl": 112, "324": 112, "scalar_o": 112, "assertionerror": [112, 121, 128, 129], "17304064": 112, "binaryparamcontext": 112, "reproduce_failur": [112, 129], "axic42baaowcnp": 112, "rumwmabaear0": 112, "make_binary_param": 112, "dh": 112, "numeric_dtyp": 112, "left_strat": 112, "left_sym": 112, "right_strat": 112, "right_sym": 112, "right_is_scalar": 112, "binary_param_assert_dtyp": 112, "binary_param_assert_shap": 112, "led": [112, 149], "unexpectedli": 112, "discrep": [112, 128], "varieti": [112, 116, 117, 118, 129, 143, 145, 149, 150, 153, 154], "test_asarray_arrai": 112, "test_floor_divid": 112, "health": 112, "test_iop": 112, "__imod__": 112, "isequ": 112, "test_matrix_norm": 112, "alter": 112, "tweak": 112, "array_api_methods_to_test": 112, "test_trac": 112, "latter": [112, 114, 117, 120, 127], "scheme": [112, 137, 147], "test_special_cas": 112, "__ipow__": 112, "is_integ": 112, "revisit": [112, 123], "_data": [113, 127, 135], "meta": [113, 130, 147], "organiz": [113, 115, 127], "bear": [113, 115, 117, 127], "underpin": [113, 115, 133], "programmat": [113, 115, 148], "backup": [113, 115], "accident": [113, 115, 127], "readabl": [113, 115, 121, 123, 129, 130, 135, 136], "absent": [113, 115], "auto": [113, 115, 136], "__mul__": [113, 115, 119, 123, 131, 135], "throw": [113, 117, 121, 135, 147], "imposs": 113, "firstli": [113, 117, 119, 120, 121, 124, 125, 126, 131, 136, 143, 153], "anywai": [113, 125, 127], "secondli": [113, 117], "permit": [113, 123, 127, 129, 131], "standalon": [113, 129, 142, 143, 148, 153, 154], "__ivy_array_function__": 113, "inspir": [113, 140], "__torch_function__": 113, "myarrai": 113, "handled_funct": 113, "notimpl": [113, 122], "four": [113, 117, 119, 123, 124, 129, 131, 136], "enough": [113, 116, 129, 135, 136, 137], "ivy_funct": 113, "my_ab": 113, "my_arrai": 113, "Of": [113, 127, 136, 152, 153], "subset": [113, 116, 120, 123, 127, 129, 133, 147], "implicit_backend": [114, 133], "__dict__": [114, 133], "ivy_original_dict": [114, 133], "get_backend": [114, 124], "opt": [114, 117, 126, 129, 130, 131], "previous_backend": 114, "fallback": 114, "unset_backend": 114, "backend_handl": [114, 133], "requires_grad": 114, "memory_format": 114, "preserve_format": 114, "weren": 114, "vast": [114, 117, 147], "minor": [114, 131, 141], "fn_name_v_1p12_and_abov": 114, "fn_name_v_1p01_to_1p1": 114, "five": [115, 136], "recap": [115, 119, 137], "arbitrarili": [115, 125, 136], "multi_map": 115, "containerwithelementwis": 115, "__repr__": 115, "__getattr__": 115, "__setattr__": 115, "__contains__": 115, "__getstate__": 115, "__setstate__": 115, "unpickl": 115, "num_dim": [115, 138], "__len__": 115, "restrict": [115, 116, 127, 133, 144], "enforc": [115, 135], "extern": [115, 123, 127, 129, 130], "c1": 115, "lefthand": 115, "righthand": 115, "addition": [115, 126, 127, 153], "counterpart": [115, 125], "absenc": [115, 123, 147], "implicitli": [115, 129, 133], "log_pr": [115, 124, 126], "intuit": [115, 129, 136, 137, 143], "chronolog": 115, "concurr": [115, 116, 124, 147], "had": [115, 116, 126, 133, 147, 148], "But": [115, 116, 120, 125, 126, 138], "flow": [115, 140, 147, 148], "implic": 115, "whatsoev": [115, 124, 142, 153], "implicit": [115, 120, 127, 129, 133, 147], "eager": [115, 141, 147], "children": 115, "shallowest": 115, "deepest": 115, "regularli": 116, "rollback": 116, "incorpor": [116, 136, 147], "fold": 116, "techniqu": 116, "triplet": 116, "test_torch": [116, 128], "test_tensor": [116, 128], "test_torch_instance_arctan_": 116, "7284": 116, "daili": 116, "shoot": 116, "impact": [116, 129, 137, 149], "_reduce_loss": 116, "test_nn": 116, "test_loss": 116, "test_binary_cross_entropy_with_logit": 116, "test_cross_entropi": 116, "test_binary_cross_entropi": 116, "test_sparse_cross_entropi": 116, "test_loss_funct": 116, "test_torch_binary_cross_entropi": 116, "test_torch_cross_entropi": 116, "torch_binary_cross_entropi": 116, "torch_cross_entropi": 116, "underneath": [116, 145], "magic": 116, "statement": [116, 122, 126, 129, 131, 141], "readthedoc": 116, "pedagog": 116, "f1": 116, "fm": 116, "yeah": 116, "procedur": [116, 119], "cyclic": 116, "intellig": [116, 129, 131, 149], "tests_fil": 116, "file_nam": [116, 129, 130], "del": 116, "intersect": [116, 129, 140], "tests_lin": 116, "elif": [116, 121, 126, 127, 128], "correspondingli": 116, "tests_to_run": 116, "determine_tests_lin": 116, "mongodb": 116, "databas": [116, 129], "secret": 116, "db": 116, "ssh": 116, "ssh_deploy_kei": 116, "suffic": [116, 125, 129], "massiv": 116, "constraint": [116, 117], "mb": 116, "yml": 116, "felicit": 116, "clone_map": 116, "home": 116, "deploy_kei": 116, "user_email": 116, "rashul": 116, "chutani": 116, "user_nam": 116, "target_branch": 116, "github_serv": 116, "deploy_key_fil": 116, "chmod": 116, "ssh_known_hosts_fil": 116, "known_host": 116, "keyscan": 116, "export": [116, 146, 153], "git_ssh_command": 116, "userknownhostsfil": 116, "methodologi": 116, "master1": 116, "restructur": 116, "index_map": 116, "test_map": 116, "routin": [116, 127, 131, 141, 147], "incorrect": 116, "snowbal": 116, "irrelev": [116, 117, 119], "recalibr": 116, "workflow_dispatch": 116, "schedul": [116, 141, 147, 154], "cron": 116, "saturdai": 116, "night": 116, "pm": 116, "gut": 116, "lesser": [116, 121], "lol": 116, "cater": 116, "master2": 116, "master32": 116, "runner2": 116, "corrupt": 116, "forc": 116, "discard": 116, "decoupl": [116, 137], "150": 116, "cycl": [116, 129], "rashulchutani": 116, "yellow": 116, "queu": 116, "redirect": 116, "book": 116, "ran": 116, "badg": 116, "clickabl": 116, "all_dtyp": 117, "all_numeric_dtyp": 117, "all_int_dtyp": 117, "all_float_dtyp": 117, "replic": [117, 119, 127, 131], "thirdli": 117, "native_float32": 117, "importantli": [117, 135, 138, 140], "conveni": [117, 118, 123, 128, 134, 136, 137, 142, 153], "arguabl": [117, 118, 127], "jaxarrai": [117, 118, 123, 126, 130, 133], "_handle_0_dim_output": [117, 126], "experiment": [117, 127, 130, 133, 147], "subtli": [117, 126], "promote_types_frontend_nam": 117, "promote_types_of_frontend_name_input": 117, "frontend_nam": 117, "demonstr": [117, 119, 121, 135], "accuraci": 117, "upcast": 117, "instabl": 117, "nearli": [117, 123, 125, 147], "downcast": 117, "footprint": 117, "concret": 117, "compound": 117, "settabl": [117, 118], "deleg": [117, 154], "shape_to_tupl": 117, "with_supported_dtyp": 117, "with_unsupported_dtyp": 117, "unment": 117, "backend_vers": 117, "_cast_for_unary_op": 117, "target_typ": 117, "discov": 117, "unsupported_dtyp": 117, "former": [117, 120, 127], "lack": [117, 121, 126, 147, 154], "patch": [117, 147], "subtl": [117, 130, 153], "offici": [117, 133], "inconsist": [117, 121], "84530": 117, "unwarr": 117, "risk": [117, 153], "needlessli": 117, "bloat": 117, "undergo": [117, 141], "supported_dtyp": [117, 127], "unsupported_devic": 117, "supported_devic": 117, "slight": [117, 129, 137], "downsid": 117, "inflat": 117, "dual": 118, "categor": [118, 124, 127], "eight": [119, 132], "static_func_nam": 119, "op_nam": 119, "__r": 119, "combinatori": 119, "variat": [119, 127, 129], "unus": [119, 122, 126], "okai": [119, 131, 133], "meant": 119, "spec": [119, 120], "my_func": [119, 130], "some_flag": 119, "another_flag": 119, "jointli": 119, "5574077": 119, "1850398": 119, "5463025": 119, "8422884": 119, "91601413": 119, "9647598": 119, "3738229": 119, "1597457": 119, "0963247": 119, "9955841": 119, "3278579": 119, "pars": [119, 141], "asid": [119, 140], "increasingli": 119, "14254655": 119, "1578213": 119, "380515": 119, "trivial": 119, "exlud": 119, "failing_fn_nam": 119, "onlin": [119, 120], "minutest": 119, "suffici": [119, 127, 129], "segment": 119, "fault": [119, 147], "contrast": [120, 123, 127, 153], "instanti": 120, "array_api": 120, "preview": 120, "render": 120, "incorrectli": 120, "needless": [120, 128], "renam": [120, 127], "judgment": 120, "operator_nam": 120, "succinct": 120, "contstructor": 120, "docst": 120, "_default": 121, "_delimit": 121, "julia": [121, 150, 153], "new_fn": [121, 127], "new_arg": 121, "new_kwarg": 121, "186": 121, "lib": 121, "site": [121, 148], "_src": 121, "219": 121, "_reduce_al": 121, "_ensure_optional_ax": 121, "213": [121, 129], "_reduct": 121, "lax": [121, 127, 128, 131, 138, 141], "preproc": 121, "_cast_to_bool": 121, "pos_dim": 121, "_reduction_dim": 121, "113": 121, "canon_axi": 121, "_canonicalize_axis_allow_nam": 121, "genexpr": 121, "106": 121, "maybe_named_axi": 121, "_canonicalize_axi": 121, "stdin": 121, "295": 121, "262": 121, "ivy_arg": 121, "ivy_kwarg": 121, "354": 121, "truth_value_test": 121, "121": 121, "switch": [121, 124, 125, 154], "visibl": 121, "unwieldi": 121, "awar": 121, "recov": [121, 127], "squash": 121, "hid": 121, "cleaner": [121, 136], "caught": 121, "functool": [121, 127, 135], "_print_traceback_histori": 121, "error_stack": 121, "axiserror": 121, "got": 121, "polici": [121, 129, 140], "moreov": 121, "met": 121, "flake8": 122, "annot": [122, 123], "star": 122, "byte": [122, 152, 153], "unsuccess": 122, "exceed": 122, "black": 122, "disobei": 122, "inde": [122, 123, 131, 141, 145], "adress": 123, "sole": [123, 130, 146, 147, 148], "strictli": [123, 126], "rational": 123, "__div__": [123, 131], "dicat": 123, "pep": 123, "484": 123, "brittl": 123, "freeli": 123, "technic": [123, 126, 141, 147, 149], "original_typ": 123, "cumbersom": 123, "venn": 124, "diagram": [124, 153], "light": [124, 127, 141, 142, 148, 153], "maximis": 124, "handle_mixed_funct": [124, 125], "condition": 124, "reap": 124, "deal": [124, 127, 141], "modif": [124, 147], "briefli": [124, 129, 136], "get_all_arrays_on_dev": 124, "heavili": [125, 127, 141], "integer_array_to_float": 125, "handle_cmd_line_arg": 125, "program": [126, 144, 145, 147, 150, 151, 154], "ration": [126, 131], "speak": 126, "x_nativ": 126, "val_n": 126, "_is_vari": 126, "predominantli": [126, 130, 140], "support_native_out": [126, 133], "math": [126, 127, 128, 138, 145], "_wrap_fn": 126, "dim0": 126, "dim1": 126, "res_floor": 126, "mul": [126, 135], "extent": [126, 127], "maxim": [126, 131, 133, 144, 145, 149, 150, 151], "capabl": [126, 129, 131], "input_arrai": 126, "tf_frontend": 127, "wrong": [127, 131], "torch_frontend": [127, 128], "numpy_frontend": 127, "jax_frontend": 127, "to_ivy_arrays_and_back": [127, 128], "fidel": 127, "algebra": [127, 145, 146, 147, 150, 154], "xla": [127, 141, 142, 147], "dynamic": 127, "mimic": 127, "arithmetic_oper": 127, "handle_numpy_out": 127, "handle_numpy_dtyp": 127, "handle_numpy_cast": 127, "from_zero_dim_arrays_to_scalar": 127, "_add": 127, "same_kind": 127, "subok": [127, 128, 131], "promote_types_of_numpy_input": 127, "underscor": 127, "obtain": 127, "unhandl": 127, "subclass": [127, 131], "trigonometric_funct": 127, "_tan": 127, "check_tensorflow_cast": 127, "raw_op": [127, 128], "tackl": 127, "map_raw_ops_alia": 127, "unnecessari": [127, 131], "output_typ": 127, "kwargs_to_upd": 127, "implemnt": 127, "pointwise_op": 127, "preferred_element_typ": 127, "finer": 127, "margin": 127, "meet": 127, "criteria": 127, "reduce_logsumexp": 127, "input_tensor": 127, "logsumexp": 127, "trick": 127, "max_input_tensor": 127, "omiss": 127, "sensibl": 127, "deem": 127, "reserv": 127, "resum": 127, "ahead": [127, 147], "heavi": [127, 128, 131, 148], "logicaland": 127, "np_frontend": 127, "_ivy_arrai": 127, "radd": 127, "_init_data": 127, "_process_str_data": 127, "_dtype": [127, 128, 135], "_shape": [127, 135], "govern": 127, "promote_types_of_": 127, "_input": 127, "promote_types_of_torch_input": [127, 128], "saniti": 127, "func_wrapp": 127, "handle_numpy_casting_speci": 127, "equiv": 127, "unsaf": 127, "array_type_test": 127, "_isfinit": 127, "organis": 127, "watch": 127, "youtub": 127, "seri": [127, 129, 147, 149], "jump": 128, "knowledg": 128, "lift": [128, 148], "get_dtyp": [128, 129], "dtype_and_valu": [128, 129], "get_shap": [128, 129], "np_frontend_help": 128, "test_jax": 128, "test_jax_lax_oper": 128, "dtype_and_x": [128, 129], "available_dtyp": [128, 129], "test_jax_lax_tan": 128, "test_numpi": 128, "test_mathematical_funct": 128, "test_np_trigonometric_funct": 128, "dtypes_values_cast": 128, "dtypes_values_casting_dtyp": 128, "arr_func": 128, "get_dtypes_kind": 128, "get_num_positional_args_ufunc": 128, "test_numpy_tan": 128, "handle_where_and_array_bool": 128, "test_tensorflow": 128, "test_math": 128, "test_tensorflow_tan": 128, "test_pointwise_op": 128, "test_torch_tan": 128, "_fill_valu": 128, "min_valu": [128, 129], "max_valu": [128, 129], "allow_non": [128, 129], "min_num_dim": [128, 129], "max_num_dim": [128, 129], "min_dim_s": [128, 129], "max_dim_s": 128, "test_jax_lax_ful": 128, "test_from_shape_or_valu": 128, "_input_fill_and_dtyp": 128, "dtype_and_input": 128, "dtype_to_cast": 128, "input_fill_dtyp": 128, "test_numpy_ful": 128, "test_tf_funct": 128, "test_tensorflow_fil": 128, "test_creation_op": 128, "test_torch_ful": 128, "add_nois": 128, "all_clos": 128, "_get_dtype_and_matrix": 128, "test_torch_qr": 128, "frontend_ret": 128, "frontend_q": 128, "frontend_r": 128, "walkthrough": 128, "comparison_op": 128, "test_comparison_op": 128, "num_arrai": [128, 129], "allow_inf": [128, 129], "shared_dtyp": 128, "test_torch_great": 128, "test_ndarrai": 128, "test_numpy_instance_add__": 128, "test_tensorflow_instance_add": 128, "eagertensor": 128, "1e04": 128, "allow_infin": 128, "test_torch_instance_add": 128, "_arrays_idx_n_dtyp": 128, "test_manipul": [128, 129], "surprisingli": 128, "cat": [128, 131, 133, 138], "closest_relevant_group": 128, "strive": [128, 129, 131, 141, 149], "exhaust": [129, 144, 153], "fixtur": 129, "hit": [129, 133], "eleg": [129, 147], "unexplor": 129, "upload": 129, "artifact": 129, "bespok": 129, "_array_or_typ": 129, "test_default_int_dtyp": 129, "clariti": [129, 131, 147], "print_hypothesis_exampl": 129, "custom_strategi": 129, "sampled_from": 129, "randomis": 129, "simplist": 129, "intricaci": 129, "glanc": 129, "stratigi": 129, "one_of": 129, "datum": 129, "pipe": 129, "overload": 129, "shorthand": 129, "scaler": 129, "array_or_scal": 129, "len_of_arrai": 129, "test_add": 129, "keywoard": 129, "test_gpu_is_avail": 129, "requri": 129, "summara": 129, "pretest": 129, "slighlti": 129, "pytet": 129, "snippet": 129, "thankfulli": 129, "captur": [129, 138, 148], "mostli": 129, "seamlessli": 129, "encount": 129, "criterion": 129, "array_valu": 129, "valid_ax": 129, "craft": 129, "hoc": 129, "44758124e": 129, "11228": 129, "456": 129, "268": 129, "wherev": 129, "dtype_values_axi": 129, "9622": 129, "28136": 129, "6375": 129, "12720": 129, "21354": 129, "900e": 129, "955e": 129, "exclude_min": 129, "large_abs_safety_factor": 129, "safety_factor_scal": 129, "57384": 129, "25687": 129, "248": 129, "array_dtyp": 129, "array_bool": 129, "na": 129, "test_devic": 129, "array_shap": 129, "common_shap": 129, "test_lay": 129, "size_bound": 129, "reshape_shap": 129, "stand": 129, "fashion": 129, "some_sequ": 129, "allow_nan": 129, "allow_subnorm": 129, "get_bound": 129, "arrays_valu": 129, "36418": 129, "21716926": 129, "none_or_list_of_float": 129, "get_prob": 129, "get_mean_std": 129, "103515625e": 129, "099609375": 129, "probabilist": 129, "get_axi": 129, "number_positional_argu": 129, "unreproduc": 129, "report": 129, "ivy_np": 129, "valid_float_dtyp": 129, "test_demo": 129, "failing_test": 129, "shrink": 129, "prescrib": 129, "scratch": 129, "therebi": 129, "test_gelu": 129, "test_fil": 129, "brief": 129, "phase": [129, 141, 147], "notabl": [129, 147], "verbos": [129, 133], "newer": 129, "max_exampl": 129, "deadlin": 129, "weird": 129, "systemat": 129, "safeguard": 129, "inabl": 129, "test_result_typ": 129, "9090909090909091": 129, "judgement": 130, "some_namespac": 130, "some_backend": 130, "another_backend": 130, "refactor": 130, "ongo": 130, "op": [130, 133, 141], "cooler": 130, "something_cool": 130, "_assert_fill_value_and_dtype_are_compat": 130, "_to_devic": 130, "shouldn": 130, "older": 130, "unbound": 130, "battl": 130, "face": [131, 133, 147, 153], "answer": [131, 135, 141], "contradict": 131, "entail": 131, "sacrif": 131, "dimems": 131, "jacfwd": 131, "jacrev": 131, "banner": 131, "ravel": 131, "pointwis": 131, "fuse": 131, "tensorrt": 131, "expens": 131, "incredibli": [131, 136, 141, 150], "six": 131, "price": 131, "pai": 131, "intrus": 131, "x_beta": 131, "equip": 131, "priorit": 131, "simplif": 131, "allevi": 131, "ineffici": [131, 141, 147], "fledg": [133, 134], "syntact": [133, 138], "power_seq": 133, "unset": 133, "backend_stack": 133, "_determine_backend_from_arg": 133, "importlib": 133, "_backend_dict": 133, "illustr": [133, 140], "x_shape": 133, "x_flat": 133, "wi": 133, "wi_x": 133, "wii_x": 133, "wif_x": 133, "wig_x": 133, "wio_x": 133, "wh": 133, "ht": 133, "ct": 133, "hts_list": 133, "wii_xt": 133, "wif_xt": 133, "wig_xt": 133, "wio_xt": 133, "zip": 133, "htm1": 133, "ctm1": 133, "wh_htm1": 133, "whi_htm1": 133, "whf_htm1": 133, "whg_htm1": 133, "who_htm1": 133, "ft": 133, "ot": 133, "reliabl": 133, "sacrific": 133, "hear": 133, "virtu": [133, 144], "pure_ivi": 133, "compile_graph": [133, 138], "pure_torch": 133, "_layer": 133, "unclean": 133, "wx": 133, "temp": 133, "ivy_func": 133, "emphas": 133, "torchscript": [133, 142, 154], "example_input": 133, "static_argnum": 133, "static_argnam": 133, "jit": [133, 141, 147], "primit": [134, 141, 145, 147], "upcom": 134, "hierarch": [134, 136, 137, 147], "arraywithactiv": 135, "arraywithcr": 135, "arraywithdatatyp": 135, "arraywithdevic": 135, "arraywithgener": 135, "arraywithgradi": 135, "arraywithimag": 135, "arraywithlay": 135, "arraywithlinearalgebra": 135, "arraywithloss": 135, "arraywithmanipul": 135, "arraywithnorm": 135, "arraywithrandom": 135, "arraywithsearch": 135, "arraywithset": 135, "arraywithsort": 135, "arraywithstatist": 135, "arraywithutil": 135, "_init": 135, "_size": 135, "_devic": 135, "_dev_str": 135, "_pre_repr": 135, "_post_repr": 135, "framework_str": 135, "noinspect": 135, "pypep8nam": 135, "immut": 135, "claim": 135, "truli": 135, "_native_wrapp": 135, "genuin": 135, "some_method": 135, "rewritten": 135, "strang": 135, "compartment": 135, "newshap": 135, "new_shap": 135, "tidi": 135, "crystal": 135, "ton": 136, "ado": [136, 137], "soup": 136, "walk": [136, 137], "cnt": 136, "combo": 136, "3333335": 136, "delimit": 136, "autocomplet": 136, "midwai": 136, "agent": 136, "total_spe": 136, "total_height": 136, "total_width": 136, "ag": 136, "tot": 136, "total_": 136, "total_h": 136, "cnt0": 136, "cnt1": 136, "diff_0": 136, "diff_1": 136, "config0": 136, "config1": 136, "decod": 136, "l0": 136, "decoder__l0": 136, "decoder__l1": 136, "encoder__l0": 136, "encoder__l1": 136, "l0__b": 136, "l0__w": 136, "l1__b": 136, "l1__w": 136, "printabl": 136, "obviou": [136, 147], "foresight": 136, "untidili": 136, "update_ag": 136, "normalize_img": 136, "img_max": 136, "reduce_max": 136, "img_min": 136, "reduce_min": 136, "img_rang": 136, "agent_posit": 136, "agent_veloc": 136, "agent_cam_front_rgb": 136, "agent_cam_front_depth": 136, "agent_cam_rear_rgb": 136, "agent_cam_rear_depth": 136, "agent_cam_lidar": 136, "camera": 136, "front_rgb": 136, "front_depth": 136, "rear_rgb": 136, "rear_depth": 136, "lidar": 136, "rgb": 136, "rear": 136, "veloc": 136, "cam": 136, "cam_max": 136, "cam_min": 136, "cam_rang": 136, "perman": 136, "thread": [136, 147], "pretti": [136, 153], "straightforward": 136, "dataload": [136, 139], "_cnt": 136, "img_": 136, "_dataset_s": 136, "_batch_siz": 136, "_count": [136, 137], "__next__": 136, "filenam": 136, "img_fnam": 136, "loaded_img": 136, "cv2": 136, "imread": 136, "from_numpi": 136, "batch_slic": 136, "reduce_mean": [136, 137, 138], "0145": 136, "addbackward0": 136, "_create_vari": 137, "_input_channel": 137, "_output_channel": 137, "_w_shape": 137, "_b_shape": 137, "_with_bia": 137, "396": 137, "764": 137, "872": 137, "211": 137, "439": 137, "nightmar": 137, "overcom": 137, "v0": 137, "v1": 137, "key0": 137, "linear3": 137, "v2": 137, "_w_init": 137, "_b_init": 137, "misnom": 137, "saw": 137, "_beta1": 137, "_beta2": 137, "_epsilon": 137, "_mw": 137, "_vw": 137, "_first_pass": 137, "_should_compil": 137, "new_v": 137, "_lr": 137, "_inplac": 137, "_stop_gradi": 137, "clip_by_valu": 138, "sparse_funct": 138, "new_axi": 138, "_linear": 138, "jax_graph": 138, "to_backend": 138, "thinli": 138, "to_haiku_modul": 138, "loss_fn_t": 138, "without_apply_rng": 138, "update_rul": 138, "tree_multimap": 138, "differenti": [140, 147], "pose": 140, "quaternion": 140, "ivy_mech": 140, "target_facing_rotation_matrix": 140, "polar_to_cartesian_coord": 140, "warp": 140, "optic": 140, "voxel": 140, "ivy_vis": 140, "coords_to_voxel_grid": 140, "render_pixel_coord": 140, "radianc": 140, "nerf": 140, "trajectori": 140, "motion": 140, "mobil": [140, 147], "sample_spline_path": 140, "rigidmobil": 140, "sample_bodi": 140, "drone": 140, "sample_link": 140, "openai": 140, "swimmer": 140, "reward": 140, "supervis": 140, "door": [140, 141], "cartpol": 140, "mountain_car": 140, "pendulum": 140, "reacher": 140, "learnt": 140, "ture": 140, "ntm": 140, "egospher": 140, "esm": 140, "ivy_memori": 140, "egocentr": 140, "room": 140, "doubt": 141, "grate": 141, "probe": 141, "remark": 141, "surpris": 141, "lock": 141, "gold": 141, "dex": 141, "ye": 141, "scan": 141, "tricki": [141, 142], "predictor": 141, "tight": 141, "driver": 141, "dispatch": [141, 147, 150], "ast": 141, "checkpoint": 141, "autodiff": 141, "shine": 141, "merci": 141, "autograd": 141, "compet": [141, 147], "paradigm": [141, 147], "parallelis": 141, "spmd": 141, "mixtur": 141, "expert": 141, "sophist": 141, "depart": 141, "hundr": 141, "thousand": 141, "broadli": [141, 153], "supplementari": 141, "reusabl": [141, 145, 147], "fanci": [141, 147], "fusion": [141, 151], "lose": 141, "pmap": 141, "overhead": [141, 150], "eventu": 141, "supplement": 141, "backdoor": 141, "callback": 141, "record": [141, 148], "somewhat": [141, 147], "outsourc": 141, "nail": 142, "funtion": 142, "asset": 142, "scientist": 142, "correl": 142, "analyz": 142, "conceptu": [143, 148], "broken": [143, 147], "tracer": 143, "infrastructur": [143, 149, 150], "vendor": [143, 149], "complimentari": [143, 153], "acycl": [143, 148], "insert_numb": 144, "insert_t": 144, "scaffold": [145, 153], "heart": 145, "toolchain": [145, 150], "intermedi": [145, 146, 147, 148, 153], "ir": [145, 148, 153], "assembli": [145, 152, 153], "idl": 145, "middl": 145, "emit": 145, "gnu": [145, 150], "gcc": [145, 152], "broader": 145, "heterogen": 145, "aid": 145, "coprocessor": 145, "programm": [145, 152], "gate": 145, "onednn": 145, "sit": [145, 148, 153], "tandem": 145, "possess": 145, "khrono": [146, 152], "appl": 146, "interact": [146, 147, 152], "coremltool": 146, "albeit": 146, "promin": 147, "abbrevi": 147, "laboratori": 147, "proprietari": [147, 151, 152], "mathwork": 147, "commerci": 147, "1984": 147, "toolbox": 147, "mupad": 147, "simulink": 147, "graphic": [147, 151, 152], "simul": 147, "million": [147, 150], "worldwid": 147, "scienc": [147, 149], "econom": 147, "2001": 147, "scientif": 147, "od": 147, "solver": 147, "cython": 147, "friendli": 147, "2002": 147, "lua": 147, "luajit": 147, "idiap": 147, "epfl": 147, "2005": 147, "numarrai": 147, "cpython": 147, "partli": 147, "2007": 147, "regress": [147, 154], "forest": 147, "boost": 147, "dbscan": 147, "inbuilt": 147, "esqu": 147, "aesara": 147, "2008": 147, "datafram": 147, "critic": [147, 153], "2012": 147, "Its": 147, "polymorph": 147, "parallel": [147, 151, 152], "mpi": 147, "openmp": 147, "glue": 147, "jaot": 147, "nasa": 147, "cern": 147, "climat": 147, "allianc": 147, "influenti": 147, "2014": 147, "analyt": [147, 149, 153], "scala": 147, "ship": 147, "forgiv": 147, "decemb": 147, "announc": 147, "transit": 147, "mainten": 147, "v7": 147, "meaning": 147, "2016": 147, "imper": 147, "amazon": 147, "traction": 147, "cognit": [147, 154], "toolkit": [147, 148, 154], "grade": 147, "realiz": 147, "dnn": 147, "cnn": 147, "rnn": 147, "backpropag": 147, "succumb": 147, "came": 147, "monitor": 147, "practition": [147, 151, 152, 153], "hobbyist": 147, "tremend": 147, "ecosystem": 147, "gear": 147, "batteri": 147, "zygot": 147, "jl": 147, "workload": 147, "daggerflux": 147, "frontier": 147, "hessian": 147, "2018": 147, "lightweight": [147, 154], "shortcom": 147, "eas": 147, "barrier": 147, "inexperienc": 147, "underdevelop": 147, "fanat": 147, "ounc": 147, "infanc": 147, "emerg": 147, "nich": 147, "introduct": 147, "lite": 147, "enterpris": 147, "reinvent": [147, 149], "inertia": 147, "haven": 147, "creator": [147, 149], "paszk": 147, "hi": 147, "safeti": 147, "bulk": 147, "haskel": 147, "dataflow": 148, "distil": 148, "essenc": [148, 153], "enclos": 148, "scope": [148, 152], "trace_modul": 148, "scriptfunct": 148, "scriptmodul": 148, "fake": 148, "proxi": 148, "graphmodul": 148, "travi": 149, "oliph": 149, "leader": 149, "cornerston": 149, "numba": 149, "numfocu": 149, "pydata": 149, "confer": 149, "consult": 149, "servic": 149, "expertis": 149, "devop": 149, "mlop": 149, "dashboard": 149, "startup": 149, "mlir": [149, 150, 153], "Their": 149, "held": 149, "privileg": 149, "presum": 149, "llvm": [149, 152], "founder": 149, "tvm": [149, 153], "sustain": 149, "empow": 149, "har": 149, "burden": 149, "benchmark": 149, "convention": 150, "precompil": 150, "executor": 150, "exploit": 150, "fsf": 150, "gpl": 150, "biggest": [150, 153], "nvidia": [151, 152], "conduct": 151, "throughput": 151, "autotun": 151, "consumpt": 151, "gpgpu": 151, "talk": 152, "classic": 152, "sycl": 152, "dpc": 152, "processor": 152, "x86": 152, "oneapi": 152, "ia": 152, "aka": 152, "xeon": 152, "gen9": 152, "xe": 152, "card": 152, "arria": 152, "gx": 152, "fpga": 152, "tune": [152, 153], "lofti": 153, "ambit": 153, "realm": 153, "bedrock": 153, "flux": 153, "bite": 153, "chew": 153, "eagerpi": 153, "tensorli": 153, "thinc": 153, "neuropod": 153, "exhibit": 153, "emploi": 153, "fx": 153, "retrain": 153, "wider": 153, "closer": 153, "greatli": 153, "challeng": 153, "modular": 153, "anywher": 153, "theano": 154, "plaidml": 154, "partial_svd": 154, "tucker_mode_dot": 154, "excel": 154, "subsystem": 154}, "objects": {"ivy.data_classes.array": [[0, 0, 0, "-", "activations"], [45, 0, 0, "-", "array"], [1, 0, 0, "-", "conversions"], [2, 0, 0, "-", "creation"], [3, 0, 0, "-", "data_type"], [4, 0, 0, "-", "device"], [5, 0, 0, "-", "elementwise"], [6, 0, 0, "-", "experimental"], [7, 0, 0, "-", "general"], [8, 0, 0, "-", "gradients"], [9, 0, 0, "-", "image"], [10, 0, 0, "-", "layers"], [11, 0, 0, "-", "linear_algebra"], [12, 0, 0, "-", "losses"], [13, 0, 0, "-", "manipulation"], [14, 0, 0, "-", "norms"], [15, 0, 0, "-", "random"], [16, 0, 0, "-", "searching"], [17, 0, 0, "-", "set"], [18, 0, 0, "-", "sorting"], [19, 0, 0, "-", "statistical"], [20, 0, 0, "-", "utility"], [21, 0, 0, "-", "wrapping"]], "ivy.data_classes.array.activations": [[0, 1, 1, "", "_ArrayWithActivations"]], "ivy.data_classes.array.activations._ArrayWithActivations": [[0, 2, 1, "", "_abc_impl"], [0, 3, 1, "", "gelu"], [0, 3, 1, "", "leaky_relu"], [0, 3, 1, "", "log_softmax"], [0, 3, 1, "", "mish"], [0, 3, 1, "", "relu"], [0, 3, 1, "", "sigmoid"], [0, 3, 1, "", "softmax"], [0, 3, 1, "", "softplus"]], "ivy.data_classes.array.array": [[45, 1, 1, "", "Array"]], "ivy.data_classes.array.array.Array": [[45, 4, 1, "", "T"], [45, 3, 1, "", "__abs__"], [45, 3, 1, "", "__add__"], [45, 3, 1, "", "__eq__"], [45, 3, 1, "", "__ge__"], [45, 3, 1, "", "__gt__"], [45, 3, 1, "", "__init__"], [45, 3, 1, "", "__le__"], [45, 3, 1, "", "__lt__"], [45, 3, 1, "", "__ne__"], [45, 3, 1, "", "__pow__"], [45, 3, 1, "", "__radd__"], [45, 3, 1, "", "__rrshift__"], [45, 3, 1, "", "__rshift__"], [45, 3, 1, "", "__rsub__"], [45, 3, 1, "", "__sub__"], [45, 3, 1, "", "__truediv__"], [45, 3, 1, "", "__xor__"], [45, 3, 1, "", "arange"], [45, 3, 1, "", "arg_info"], [45, 3, 1, "", "arg_names"], [45, 3, 1, "", "args_to_ivy"], [45, 3, 1, "", "args_to_native"], [45, 3, 1, "", "array"], [45, 3, 1, "", "as_ivy_dev"], [45, 3, 1, "", "as_ivy_dtype"], [45, 3, 1, "", "as_native_dev"], [45, 3, 1, "", "as_native_dtype"], [45, 3, 1, "", "asarray_handle_nestable"], [45, 3, 1, "", "asarray_infer_device"], [45, 3, 1, "", "asarray_to_native_arrays_and_back"], [45, 3, 1, "", "cache_fn"], [45, 3, 1, "", "check_float"], [45, 3, 1, "", "clear_cached_mem_on_dev"], [45, 3, 1, "", "closest_valid_dtype"], [45, 3, 1, "", "container_types"], [45, 3, 1, "", "conv"], [45, 3, 1, "", "conv_general_dilated"], [45, 3, 1, "", "conv_general_transpose"], [45, 3, 1, "", "current_backend"], [45, 3, 1, "", "current_backend_str"], [45, 4, 1, "", "data"], [45, 3, 1, "", "default_complex_dtype"], [45, 3, 1, "", "default_device"], [45, 3, 1, "", "default_dtype"], [45, 3, 1, "", "default_float_dtype"], [45, 3, 1, "", "default_int_dtype"], [45, 3, 1, "", "default_uint_dtype"], [45, 3, 1, "", "deserialize"], [45, 3, 1, "", "dev_util"], [45, 4, 1, "", "device"], [45, 4, 1, "", "dtype"], [45, 3, 1, "", "dtype_bits"], [45, 4, 1, "", "dynamic_backend"], [45, 3, 1, "", "empty"], [45, 3, 1, "", "execute_with_gradients"], [45, 3, 1, "", "eye"], [45, 3, 1, "", "full"], [45, 3, 1, "", "function_supported_devices"], [45, 3, 1, "", "function_supported_devices_and_dtypes"], [45, 3, 1, "", "function_supported_dtypes"], [45, 3, 1, "", "function_unsupported_devices"], [45, 3, 1, "", "function_unsupported_devices_and_dtypes"], [45, 3, 1, "", "function_unsupported_dtypes"], [45, 3, 1, "", "get"], [45, 3, 1, "", "get_all_arrays_in_memory"], [45, 3, 1, "", "get_all_ivy_arrays_on_dev"], [45, 3, 1, "", "get_array_mode"], [45, 3, 1, "", "get_exception_trace_mode"], [45, 3, 1, "", "get_item"], [45, 3, 1, "", "get_min_base"], [45, 3, 1, "", "get_min_denominator"], [45, 3, 1, "", "get_nestable_mode"], [45, 3, 1, "", "get_queue_timeout"], [45, 3, 1, "", "get_referrers_recursive"], [45, 3, 1, "", "get_show_func_wrapper_trace_mode"], [45, 3, 1, "", "get_tmp_dir"], [45, 3, 1, "", "gpu_is_available"], [45, 3, 1, "", "grad"], [45, 3, 1, "", "handle_array_function"], [45, 3, 1, "", "handle_array_like_without_promotion"], [45, 3, 1, "", "handle_exceptions"], [45, 3, 1, "", "handle_nestable"], [45, 3, 1, "", "handle_out_argument"], [45, 3, 1, "", "handle_view"], [45, 3, 1, "", "handle_view_indexing"], [45, 3, 1, "", "infer_default_dtype"], [45, 3, 1, "", "infer_device"], [45, 3, 1, "", "infer_dtype"], [45, 3, 1, "", "inplace_arrays_supported"], [45, 3, 1, "", "inplace_variables_supported"], [45, 3, 1, "", "inputs_to_ivy_arrays"], [45, 3, 1, "", "inputs_to_native_arrays"], [45, 3, 1, "", "integer_arrays_to_float"], [45, 3, 1, "", "invalid_dtype"], [45, 3, 1, "", "is_complex_dtype"], [45, 3, 1, "", "isscalar"], [45, 3, 1, "", "jac"], [45, 3, 1, "", "lu_factor"], [45, 4, 1, "", "mT"], [45, 3, 1, "", "match_kwargs"], [45, 3, 1, "", "multiprocessing"], [45, 4, 1, "", "ndim"], [45, 3, 1, "", "normalize_axis_tuple"], [45, 3, 1, "", "num_arrays_in_memory"], [45, 3, 1, "", "num_cpu_cores"], [45, 3, 1, "", "num_gpus"], [45, 3, 1, "", "num_ivy_arrays_on_dev"], [45, 3, 1, "", "ones"], [45, 3, 1, "", "outputs_to_ivy_arrays"], [45, 3, 1, "", "percent_used_mem_on_dev"], [45, 3, 1, "", "print_all_arrays_in_memory"], [45, 3, 1, "", "print_all_ivy_arrays_on_dev"], [45, 3, 1, "", "promote_types"], [45, 3, 1, "", "promote_types_of_inputs"], [45, 3, 1, "", "seed"], [45, 3, 1, "", "set_array_mode"], [45, 3, 1, "", "set_default_complex_dtype"], [45, 3, 1, "", "set_default_device"], [45, 3, 1, "", "set_default_dtype"], [45, 3, 1, "", "set_default_float_dtype"], [45, 3, 1, "", "set_default_int_dtype"], [45, 3, 1, "", "set_default_uint_dtype"], [45, 3, 1, "", "set_exception_trace_mode"], [45, 3, 1, "", "set_min_base"], [45, 3, 1, "", "set_min_denominator"], [45, 3, 1, "", "set_nestable_mode"], [45, 3, 1, "", "set_queue_timeout"], [45, 3, 1, "", "set_shape_array_mode"], [45, 3, 1, "", "set_show_func_wrapper_trace_mode"], [45, 3, 1, "", "set_split_factor"], [45, 3, 1, "", "set_tmp_dir"], [45, 3, 1, "", "set_with_grads"], [45, 4, 1, "", "shape"], [45, 3, 1, "", "shape_array_mode"], [45, 4, 1, "", "size"], [45, 3, 1, "", "split_factor"], [45, 3, 1, "", "split_func_call"], [45, 3, 1, "", "to_ivy"], [45, 3, 1, "", "to_ivy_shape"], [45, 3, 1, "", "to_native"], [45, 3, 1, "", "to_native_arrays_and_back"], [45, 3, 1, "", "to_native_shape"], [45, 3, 1, "", "total_mem_on_dev"], [45, 3, 1, "", "tpu_is_available"], [45, 3, 1, "", "try_else_none"], [45, 3, 1, "", "type_promote_arrays"], [45, 3, 1, "", "unset_array_mode"], [45, 3, 1, "", "unset_default_complex_dtype"], [45, 3, 1, "", "unset_default_device"], [45, 3, 1, "", "unset_default_dtype"], [45, 3, 1, "", "unset_default_float_dtype"], [45, 3, 1, "", "unset_default_int_dtype"], [45, 3, 1, "", "unset_default_uint_dtype"], [45, 3, 1, "", "unset_exception_trace_mode"], [45, 3, 1, "", "unset_nestable_mode"], [45, 3, 1, "", "unset_queue_timeout"], [45, 3, 1, "", "unset_shape_array_mode"], [45, 3, 1, "", "unset_show_func_wrapper_trace_mode"], [45, 3, 1, "", "unset_with_grads"], [45, 3, 1, "", "used_mem_on_dev"], [45, 3, 1, "", "valid_dtype"], [45, 3, 1, "", "value_and_grad"], [45, 3, 1, "", "vmap"], [45, 3, 1, "", "with_grads"], [45, 3, 1, "", "wraps"], [45, 3, 1, "", "zeros"]], "ivy.data_classes.array.conversions": [[1, 5, 1, "", "_to_ivy"], [1, 5, 1, "", "_to_native"], [1, 5, 1, "", "args_to_ivy"], [1, 5, 1, "", "args_to_native"], [1, 5, 1, "", "to_ivy"], [1, 5, 1, "", "to_native"]], "ivy.data_classes.array.creation": [[2, 1, 1, "", "_ArrayWithCreation"]], "ivy.data_classes.array.creation._ArrayWithCreation": [[2, 2, 1, "", "_abc_impl"], [2, 3, 1, "", "asarray"], [2, 3, 1, "", "copy_array"], [2, 3, 1, "", "empty_like"], [2, 3, 1, "", "from_dlpack"], [2, 3, 1, "", "full_like"], [2, 3, 1, "", "linspace"], [2, 3, 1, "", "logspace"], [2, 3, 1, "", "meshgrid"], [2, 3, 1, "", "native_array"], [2, 3, 1, "", "one_hot"], [2, 3, 1, "", "ones_like"], [2, 3, 1, "", "tril"], [2, 3, 1, "", "triu"], [2, 3, 1, "", "zeros_like"]], "ivy.data_classes.array.data_type": [[3, 1, 1, "", "_ArrayWithDataTypes"]], "ivy.data_classes.array.data_type._ArrayWithDataTypes": [[3, 2, 1, "", "_abc_impl"], [3, 3, 1, "", "astype"], [3, 3, 1, "", "broadcast_arrays"], [3, 3, 1, "", "broadcast_to"], [3, 3, 1, "", "can_cast"], [3, 3, 1, "", "dtype"], [3, 3, 1, "", "finfo"], [3, 3, 1, "", "iinfo"], [3, 3, 1, "", "is_bool_dtype"], [3, 3, 1, "", "is_float_dtype"], [3, 3, 1, "", "is_int_dtype"], [3, 3, 1, "", "is_uint_dtype"], [3, 3, 1, "", "result_type"]], "ivy.data_classes.array.device": [[4, 1, 1, "", "_ArrayWithDevice"]], "ivy.data_classes.array.device._ArrayWithDevice": [[4, 2, 1, "", "_abc_impl"], [4, 3, 1, "", "dev"], [4, 3, 1, "", "to_device"]], "ivy.data_classes.array.elementwise": [[5, 1, 1, "", "_ArrayWithElementwise"]], "ivy.data_classes.array.elementwise._ArrayWithElementwise": [[5, 2, 1, "", "_abc_impl"], [5, 3, 1, "", "abs"], [5, 3, 1, "", "acos"], [5, 3, 1, "", "acosh"], [5, 3, 1, "", "add"], [5, 3, 1, "", "asin"], [5, 3, 1, "", "asinh"], [5, 3, 1, "", "atan"], [5, 3, 1, "", "atan2"], [5, 3, 1, "", "atanh"], [5, 3, 1, "", "bitwise_and"], [5, 3, 1, "", "bitwise_invert"], [5, 3, 1, "", "bitwise_left_shift"], [5, 3, 1, "", "bitwise_or"], [5, 3, 1, "", "bitwise_right_shift"], [5, 3, 1, "", "bitwise_xor"], [5, 3, 1, "", "ceil"], [5, 3, 1, "", "cos"], [5, 3, 1, "", "cosh"], [5, 3, 1, "", "deg2rad"], [5, 3, 1, "", "divide"], [5, 3, 1, "", "equal"], [5, 3, 1, "", "erf"], [5, 3, 1, "", "exp"], [5, 3, 1, "", "expm1"], [5, 3, 1, "", "floor"], [5, 3, 1, "", "floor_divide"], [5, 3, 1, "", "greater"], [5, 3, 1, "", "greater_equal"], [5, 3, 1, "", "isfinite"], [5, 3, 1, "", "isinf"], [5, 3, 1, "", "isnan"], [5, 3, 1, "", "isreal"], [5, 3, 1, "", "less"], [5, 3, 1, "", "less_equal"], [5, 3, 1, "", "log"], [5, 3, 1, "", "log10"], [5, 3, 1, "", "log1p"], [5, 3, 1, "", "log2"], [5, 3, 1, "", "logaddexp"], [5, 3, 1, "", "logical_and"], [5, 3, 1, "", "logical_not"], [5, 3, 1, "", "logical_or"], [5, 3, 1, "", "logical_xor"], [5, 3, 1, "", "maximum"], [5, 3, 1, "", "minimum"], [5, 3, 1, "", "multiply"], [5, 3, 1, "", "negative"], [5, 3, 1, "", "not_equal"], [5, 3, 1, "", "positive"], [5, 3, 1, "", "pow"], [5, 3, 1, "", "rad2deg"], [5, 3, 1, "", "reciprocal"], [5, 3, 1, "", "remainder"], [5, 3, 1, "", "round"], [5, 3, 1, "", "sign"], [5, 3, 1, "", "sin"], [5, 3, 1, "", "sinh"], [5, 3, 1, "", "sqrt"], [5, 3, 1, "", "square"], [5, 3, 1, "", "subtract"], [5, 3, 1, "", "tan"], [5, 3, 1, "", "tanh"], [5, 3, 1, "", "trunc"], [5, 3, 1, "", "trunc_divide"]], "ivy.data_classes.array.experimental": [[6, 0, 0, "-", "activations"], [6, 0, 0, "-", "conversions"], [6, 0, 0, "-", "creation"], [6, 0, 0, "-", "data_type"], [6, 0, 0, "-", "device"], [6, 0, 0, "-", "elementwise"], [6, 0, 0, "-", "general"], [6, 0, 0, "-", "gradients"], [6, 0, 0, "-", "image"], [6, 0, 0, "-", "layers"], [6, 0, 0, "-", "linear_algebra"], [6, 0, 0, "-", "losses"], [6, 0, 0, "-", "manipulation"], [6, 0, 0, "-", "norms"], [6, 0, 0, "-", "random"], [6, 0, 0, "-", "searching"], [6, 0, 0, "-", "set"], [6, 0, 0, "-", "sorting"], [6, 0, 0, "-", "statistical"], [6, 0, 0, "-", "utility"]], "ivy.data_classes.array.experimental.activations": [[6, 1, 1, "", "_ArrayWithActivationsExperimental"]], "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "batch_norm"], [6, 3, 1, "", "logit"], [6, 3, 1, "", "logsigmoid"], [6, 3, 1, "", "prelu"], [6, 3, 1, "", "relu6"], [6, 3, 1, "", "thresholded_relu"]], "ivy.data_classes.array.experimental.conversions": [[6, 1, 1, "", "_ArrayWithConversionsExperimental"]], "ivy.data_classes.array.experimental.conversions._ArrayWithConversionsExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.creation": [[6, 1, 1, "", "_ArrayWithCreationExperimental"]], "ivy.data_classes.array.experimental.creation._ArrayWithCreationExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "eye_like"]], "ivy.data_classes.array.experimental.data_type": [[6, 1, 1, "", "_ArrayWithData_typeExperimental"]], "ivy.data_classes.array.experimental.data_type._ArrayWithData_typeExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.device": [[6, 1, 1, "", "_ArrayWithDeviceExperimental"]], "ivy.data_classes.array.experimental.device._ArrayWithDeviceExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.elementwise": [[6, 1, 1, "", "_ArrayWithElementWiseExperimental"]], "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "allclose"], [6, 3, 1, "", "angle"], [6, 3, 1, "", "binarizer"], [6, 3, 1, "", "conj"], [6, 3, 1, "", "copysign"], [6, 3, 1, "", "count_nonzero"], [6, 3, 1, "", "diff"], [6, 3, 1, "", "exp2"], [6, 3, 1, "", "fix"], [6, 3, 1, "", "float_power"], [6, 3, 1, "", "fmax"], [6, 3, 1, "", "fmin"], [6, 3, 1, "", "fmod"], [6, 3, 1, "", "frexp"], [6, 3, 1, "", "gcd"], [6, 3, 1, "", "gradient"], [6, 3, 1, "", "hypot"], [6, 3, 1, "", "imag"], [6, 3, 1, "", "isclose"], [6, 3, 1, "", "lcm"], [6, 3, 1, "", "ldexp"], [6, 3, 1, "", "logaddexp2"], [6, 3, 1, "", "nan_to_num"], [6, 3, 1, "", "nansum"], [6, 3, 1, "", "nextafter"], [6, 3, 1, "", "real"], [6, 3, 1, "", "signbit"], [6, 3, 1, "", "sinc"], [6, 3, 1, "", "trapz"], [6, 3, 1, "", "xlogy"], [6, 3, 1, "", "zeta"]], "ivy.data_classes.array.experimental.general": [[6, 1, 1, "", "_ArrayWithGeneralExperimental"]], "ivy.data_classes.array.experimental.general._ArrayWithGeneralExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "isin"]], "ivy.data_classes.array.experimental.gradients": [[6, 1, 1, "", "_ArrayWithGradientsExperimental"]], "ivy.data_classes.array.experimental.gradients._ArrayWithGradientsExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.image": [[6, 1, 1, "", "_ArrayWithImageExperimental"]], "ivy.data_classes.array.experimental.image._ArrayWithImageExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.layers": [[6, 1, 1, "", "_ArrayWithLayersExperimental"]], "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "adaptive_avg_pool1d"], [6, 3, 1, "", "adaptive_avg_pool2d"], [6, 3, 1, "", "avg_pool1d"], [6, 3, 1, "", "avg_pool2d"], [6, 3, 1, "", "avg_pool3d"], [6, 3, 1, "", "dct"], [6, 3, 1, "", "dft"], [6, 3, 1, "", "embedding"], [6, 3, 1, "", "fft"], [6, 3, 1, "", "ifft"], [6, 3, 1, "", "interpolate"], [6, 3, 1, "", "max_pool1d"], [6, 3, 1, "", "max_pool2d"], [6, 3, 1, "", "max_pool3d"]], "ivy.data_classes.array.experimental.linear_algebra": [[6, 1, 1, "", "_ArrayWithLinearAlgebraExperimental"]], "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "adjoint"], [6, 3, 1, "", "cond"], [6, 3, 1, "", "diagflat"], [6, 3, 1, "", "eig"], [6, 3, 1, "", "eigh_tridiagonal"], [6, 3, 1, "", "eigvals"], [6, 3, 1, "", "kron"], [6, 3, 1, "", "matrix_exp"], [6, 3, 1, "", "multi_dot"]], "ivy.data_classes.array.experimental.losses": [[6, 1, 1, "", "_ArrayWithLossesExperimental"]], "ivy.data_classes.array.experimental.losses._ArrayWithLossesExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.manipulation": [[6, 1, 1, "", "_ArrayWithManipulationExperimental"]], "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "atleast_1d"], [6, 3, 1, "", "atleast_2d"], [6, 3, 1, "", "atleast_3d"], [6, 3, 1, "", "dsplit"], [6, 3, 1, "", "dstack"], [6, 3, 1, "", "expand"], [6, 3, 1, "", "flatten"], [6, 3, 1, "", "fliplr"], [6, 3, 1, "", "flipud"], [6, 3, 1, "", "heaviside"], [6, 3, 1, "", "hsplit"], [6, 3, 1, "", "hstack"], [6, 3, 1, "", "i0"], [6, 3, 1, "", "moveaxis"], [6, 3, 1, "", "pad"], [6, 3, 1, "", "rot90"], [6, 3, 1, "", "take_along_axis"], [6, 3, 1, "", "top_k"], [6, 3, 1, "", "vsplit"], [6, 3, 1, "", "vstack"]], "ivy.data_classes.array.experimental.norms": [[6, 1, 1, "", "_ArrayWithNormsExperimental"]], "ivy.data_classes.array.experimental.norms._ArrayWithNormsExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "instance_norm"], [6, 3, 1, "", "l2_normalize"], [6, 3, 1, "", "lp_normalize"]], "ivy.data_classes.array.experimental.random": [[6, 1, 1, "", "_ArrayWithRandomExperimental"]], "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "bernoulli"], [6, 3, 1, "", "beta"], [6, 3, 1, "", "dirichlet"], [6, 3, 1, "", "gamma"], [6, 3, 1, "", "poisson"]], "ivy.data_classes.array.experimental.searching": [[6, 1, 1, "", "_ArrayWithSearchingExperimental"]], "ivy.data_classes.array.experimental.searching._ArrayWithSearchingExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.set": [[6, 1, 1, "", "_ArrayWithSetExperimental"]], "ivy.data_classes.array.experimental.set._ArrayWithSetExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.experimental.sorting": [[6, 1, 1, "", "_ArrayWithSortingExperimental"]], "ivy.data_classes.array.experimental.sorting._ArrayWithSortingExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "lexsort"], [6, 3, 1, "", "msort"]], "ivy.data_classes.array.experimental.statistical": [[6, 1, 1, "", "_ArrayWithStatisticalExperimental"]], "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental": [[6, 2, 1, "", "_abc_impl"], [6, 3, 1, "", "bincount"], [6, 3, 1, "", "corrcoef"], [6, 3, 1, "", "median"], [6, 3, 1, "", "nanmean"], [6, 3, 1, "", "nanmedian"], [6, 3, 1, "", "quantile"], [6, 3, 1, "", "unravel_index"]], "ivy.data_classes.array.experimental.utility": [[6, 1, 1, "", "_ArrayWithUtilityExperimental"]], "ivy.data_classes.array.experimental.utility._ArrayWithUtilityExperimental": [[6, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.general": [[7, 1, 1, "", "_ArrayWithGeneral"]], "ivy.data_classes.array.general._ArrayWithGeneral": [[7, 2, 1, "", "_abc_impl"], [7, 3, 1, "", "all_equal"], [7, 3, 1, "", "array_equal"], [7, 3, 1, "", "assert_supports_inplace"], [7, 3, 1, "", "clip_matrix_norm"], [7, 3, 1, "", "clip_vector_norm"], [7, 3, 1, "", "default"], [7, 3, 1, "", "einops_rearrange"], [7, 3, 1, "", "einops_reduce"], [7, 3, 1, "", "einops_repeat"], [7, 3, 1, "", "exists"], [7, 3, 1, "", "fourier_encode"], [7, 3, 1, "", "gather"], [7, 3, 1, "", "gather_nd"], [7, 3, 1, "", "get_num_dims"], [7, 3, 1, "", "has_nans"], [7, 3, 1, "", "inplace_decrement"], [7, 3, 1, "", "inplace_increment"], [7, 3, 1, "", "inplace_update"], [7, 3, 1, "", "is_array"], [7, 3, 1, "", "is_ivy_array"], [7, 3, 1, "", "is_ivy_container"], [7, 3, 1, "", "is_native_array"], [7, 3, 1, "", "scatter_flat"], [7, 3, 1, "", "scatter_nd"], [7, 3, 1, "", "stable_divide"], [7, 3, 1, "", "stable_pow"], [7, 3, 1, "", "supports_inplace_updates"], [7, 3, 1, "", "to_list"], [7, 3, 1, "", "to_numpy"], [7, 3, 1, "", "to_scalar"], [7, 3, 1, "", "value_is_nan"]], "ivy.data_classes.array.gradients": [[8, 1, 1, "", "_ArrayWithGradients"]], "ivy.data_classes.array.gradients._ArrayWithGradients": [[8, 2, 1, "", "_abc_impl"], [8, 3, 1, "", "adam_step"], [8, 3, 1, "", "adam_update"], [8, 3, 1, "", "gradient_descent_update"], [8, 3, 1, "", "lamb_update"], [8, 3, 1, "", "lars_update"], [8, 3, 1, "", "optimizer_update"], [8, 3, 1, "", "stop_gradient"]], "ivy.data_classes.array.image": [[9, 1, 1, "", "_ArrayWithImage"]], "ivy.data_classes.array.image._ArrayWithImage": [[9, 2, 1, "", "_abc_impl"]], "ivy.data_classes.array.layers": [[10, 1, 1, "", "_ArrayWithLayers"]], "ivy.data_classes.array.layers._ArrayWithLayers": [[10, 2, 1, "", "_abc_impl"], [10, 3, 1, "", "conv1d"], [10, 3, 1, "", "conv1d_transpose"], [10, 3, 1, "", "conv2d"], [10, 3, 1, "", "conv2d_transpose"], [10, 3, 1, "", "conv3d"], [10, 3, 1, "", "conv3d_transpose"], [10, 3, 1, "", "depthwise_conv2d"], [10, 3, 1, "", "dropout"], [10, 3, 1, "", "dropout1d"], [10, 3, 1, "", "dropout3d"], [10, 3, 1, "", "linear"], [10, 3, 1, "", "lstm_update"], [10, 3, 1, "", "multi_head_attention"], [10, 3, 1, "", "scaled_dot_product_attention"]], "ivy.data_classes.array.linear_algebra": [[11, 1, 1, "", "_ArrayWithLinearAlgebra"]], "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra": [[11, 2, 1, "", "_abc_impl"], [11, 3, 1, "", "cholesky"], [11, 3, 1, "", "cross"], [11, 3, 1, "", "det"], [11, 3, 1, "", "diag"], [11, 3, 1, "", "diagonal"], [11, 3, 1, "", "eig"], [11, 3, 1, "", "eigh"], [11, 3, 1, "", "eigvalsh"], [11, 3, 1, "", "inner"], [11, 3, 1, "", "inv"], [11, 3, 1, "", "matmul"], [11, 3, 1, "", "matrix_norm"], [11, 3, 1, "", "matrix_power"], [11, 3, 1, "", "matrix_rank"], [11, 3, 1, "", "matrix_transpose"], [11, 3, 1, "", "outer"], [11, 3, 1, "", "pinv"], [11, 3, 1, "", "qr"], [11, 3, 1, "", "slogdet"], [11, 3, 1, "", "solve"], [11, 3, 1, "", "svd"], [11, 3, 1, "", "svdvals"], [11, 3, 1, "", "tensordot"], [11, 3, 1, "", "tensorsolve"], [11, 3, 1, "", "trace"], [11, 3, 1, "", "vander"], [11, 3, 1, "", "vecdot"], [11, 3, 1, "", "vector_norm"], [11, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.data_classes.array.losses": [[12, 1, 1, "", "_ArrayWithLosses"]], "ivy.data_classes.array.losses._ArrayWithLosses": [[12, 2, 1, "", "_abc_impl"], [12, 3, 1, "", "binary_cross_entropy"], [12, 3, 1, "", "cross_entropy"], [12, 3, 1, "", "sparse_cross_entropy"]], "ivy.data_classes.array.manipulation": [[13, 1, 1, "", "_ArrayWithManipulation"]], "ivy.data_classes.array.manipulation._ArrayWithManipulation": [[13, 2, 1, "", "_abc_impl"], [13, 3, 1, "", "clip"], [13, 3, 1, "", "concat"], [13, 3, 1, "", "constant_pad"], [13, 3, 1, "", "expand_dims"], [13, 3, 1, "", "flip"], [13, 3, 1, "", "permute_dims"], [13, 3, 1, "", "repeat"], [13, 3, 1, "", "reshape"], [13, 3, 1, "", "roll"], [13, 3, 1, "", "split"], [13, 3, 1, "", "squeeze"], [13, 3, 1, "", "stack"], [13, 3, 1, "", "swapaxes"], [13, 3, 1, "", "tile"], [13, 3, 1, "", "unstack"], [13, 3, 1, "", "view"], [13, 3, 1, "", "zero_pad"]], "ivy.data_classes.array.norms": [[14, 1, 1, "", "_ArrayWithNorms"]], "ivy.data_classes.array.norms._ArrayWithNorms": [[14, 2, 1, "", "_abc_impl"], [14, 3, 1, "", "layer_norm"]], "ivy.data_classes.array.random": [[15, 1, 1, "", "_ArrayWithRandom"]], "ivy.data_classes.array.random._ArrayWithRandom": [[15, 2, 1, "", "_abc_impl"], [15, 3, 1, "", "multinomial"], [15, 3, 1, "", "randint"], [15, 3, 1, "", "random_normal"], [15, 3, 1, "", "random_uniform"], [15, 3, 1, "", "shuffle"]], "ivy.data_classes.array.searching": [[16, 1, 1, "", "_ArrayWithSearching"]], "ivy.data_classes.array.searching._ArrayWithSearching": [[16, 2, 1, "", "_abc_impl"], [16, 3, 1, "", "argmax"], [16, 3, 1, "", "argmin"], [16, 3, 1, "", "argwhere"], [16, 3, 1, "", "nonzero"], [16, 3, 1, "", "where"]], "ivy.data_classes.array.set": [[17, 1, 1, "", "_ArrayWithSet"]], "ivy.data_classes.array.set._ArrayWithSet": [[17, 2, 1, "", "_abc_impl"], [17, 3, 1, "", "unique_all"], [17, 3, 1, "", "unique_counts"], [17, 3, 1, "", "unique_inverse"], [17, 3, 1, "", "unique_values"]], "ivy.data_classes.array.sorting": [[18, 1, 1, "", "_ArrayWithSorting"]], "ivy.data_classes.array.sorting._ArrayWithSorting": [[18, 2, 1, "", "_abc_impl"], [18, 3, 1, "", "argsort"], [18, 3, 1, "", "searchsorted"], [18, 3, 1, "", "sort"]], "ivy.data_classes.array.statistical": [[19, 1, 1, "", "_ArrayWithStatistical"]], "ivy.data_classes.array.statistical._ArrayWithStatistical": [[19, 2, 1, "", "_abc_impl"], [19, 3, 1, "", "cumprod"], [19, 3, 1, "", "cumsum"], [19, 3, 1, "", "einsum"], [19, 3, 1, "", "max"], [19, 3, 1, "", "mean"], [19, 3, 1, "", "min"], [19, 3, 1, "", "prod"], [19, 3, 1, "", "std"], [19, 3, 1, "", "sum"], [19, 3, 1, "", "var"]], "ivy.data_classes.array.utility": [[20, 1, 1, "", "_ArrayWithUtility"]], "ivy.data_classes.array.utility._ArrayWithUtility": [[20, 2, 1, "", "_abc_impl"], [20, 3, 1, "", "all"], [20, 3, 1, "", "any"]], "ivy.data_classes.array.wrapping": [[21, 5, 1, "", "_wrap_function"], [21, 5, 1, "", "add_ivy_array_instance_methods"]], "ivy.data_classes.container": [[22, 0, 0, "-", "activations"], [23, 0, 0, "-", "base"], [46, 0, 0, "-", "container"], [24, 0, 0, "-", "conversions"], [25, 0, 0, "-", "creation"], [26, 0, 0, "-", "data_type"], [27, 0, 0, "-", "device"], [28, 0, 0, "-", "elementwise"], [29, 0, 0, "-", "experimental"], [30, 0, 0, "-", "general"], [31, 0, 0, "-", "gradients"], [32, 0, 0, "-", "image"], [33, 0, 0, "-", "layers"], [34, 0, 0, "-", "linear_algebra"], [35, 0, 0, "-", "losses"], [36, 0, 0, "-", "manipulation"], [37, 0, 0, "-", "norms"], [38, 0, 0, "-", "random"], [39, 0, 0, "-", "searching"], [40, 0, 0, "-", "set"], [41, 0, 0, "-", "sorting"], [42, 0, 0, "-", "statistical"], [43, 0, 0, "-", "utility"], [44, 0, 0, "-", "wrapping"]], "ivy.data_classes.container.activations": [[22, 1, 1, "", "_ContainerWithActivations"]], "ivy.data_classes.container.activations._ContainerWithActivations": [[22, 2, 1, "", "_abc_impl"], [22, 3, 1, "", "gelu"], [22, 3, 1, "", "leaky_relu"], [22, 3, 1, "", "log_softmax"], [22, 3, 1, "", "mish"], [22, 3, 1, "", "relu"], [22, 3, 1, "", "sigmoid"], [22, 3, 1, "", "softmax"], [22, 3, 1, "", "softplus"], [22, 3, 1, "", "static_gelu"], [22, 3, 1, "", "static_leaky_relu"], [22, 3, 1, "", "static_log_softmax"], [22, 3, 1, "", "static_mish"], [22, 3, 1, "", "static_relu"], [22, 3, 1, "", "static_sigmoid"], [22, 3, 1, "", "static_softmax"], [22, 3, 1, "", "static_softplus"]], "ivy.data_classes.container.base": [[23, 1, 1, "", "ContainerBase"], [23, 5, 1, "", "_is_jsonable"], [23, 5, 1, "", "_repr"]], "ivy.data_classes.container.base.ContainerBase": [[23, 3, 1, "", "__getitem__"], [23, 3, 1, "", "__init__"], [23, 3, 1, "", "__setitem__"], [23, 2, 1, "", "_abc_impl"], [23, 3, 1, "", "_cont_at_key_chains_input_as_dict"], [23, 3, 1, "", "_cont_at_key_chains_input_as_seq"], [23, 3, 1, "", "_cont_call_static_method_with_flexible_args"], [23, 3, 1, "", "_cont_concat_unify"], [23, 3, 1, "", "_cont_get_dev"], [23, 3, 1, "", "_cont_get_shape"], [23, 3, 1, "", "_cont_get_shapes"], [23, 4, 1, "", "_cont_ivy"], [23, 3, 1, "", "_cont_mean_unify"], [23, 3, 1, "", "_cont_prune_key_chains_input_as_dict"], [23, 3, 1, "", "_cont_prune_key_chains_input_as_seq"], [23, 3, 1, "", "_cont_slice_keys"], [23, 3, 1, "", "_cont_sum_unify"], [23, 3, 1, "", "_get_queue_item"], [23, 3, 1, "", "cont_all_false"], [23, 3, 1, "", "cont_all_key_chains"], [23, 3, 1, "", "cont_all_true"], [23, 3, 1, "", "cont_as_bools"], [23, 3, 1, "", "cont_assert_contains_sub_container"], [23, 3, 1, "", "cont_assert_contains_sub_structure"], [23, 3, 1, "", "cont_assert_identical"], [23, 3, 1, "", "cont_assert_identical_structure"], [23, 3, 1, "", "cont_at_key_chain"], [23, 3, 1, "", "cont_at_key_chains"], [23, 3, 1, "", "cont_at_keys"], [23, 3, 1, "", "cont_combine"], [23, 3, 1, "", "cont_common_key_chains"], [23, 4, 1, "", "cont_config"], [23, 3, 1, "", "cont_contains_sub_container"], [23, 3, 1, "", "cont_contains_sub_structure"], [23, 3, 1, "", "cont_copy"], [23, 3, 1, "", "cont_create_if_absent"], [23, 3, 1, "", "cont_cutoff_at_depth"], [23, 3, 1, "", "cont_cutoff_at_height"], [23, 3, 1, "", "cont_deep_copy"], [23, 4, 1, "", "cont_dev"], [23, 4, 1, "", "cont_dev_str"], [23, 3, 1, "", "cont_diff"], [23, 3, 1, "", "cont_duplicate_array_keychains"], [23, 3, 1, "", "cont_find_sub_container"], [23, 3, 1, "", "cont_find_sub_structure"], [23, 3, 1, "", "cont_flatten_key_chain"], [23, 3, 1, "", "cont_flatten_key_chains"], [23, 3, 1, "", "cont_format_key_chains"], [23, 3, 1, "", "cont_from_disk_as_hdf5"], [23, 3, 1, "", "cont_from_disk_as_json"], [23, 3, 1, "", "cont_from_disk_as_pickled"], [23, 3, 1, "", "cont_from_flat_list"], [23, 3, 1, "", "cont_handle_inplace"], [23, 3, 1, "", "cont_has_key"], [23, 3, 1, "", "cont_has_key_chain"], [23, 3, 1, "", "cont_identical"], [23, 3, 1, "", "cont_identical_array_shapes"], [23, 3, 1, "", "cont_identical_configs"], [23, 3, 1, "", "cont_identical_structure"], [23, 3, 1, "", "cont_if_exists"], [23, 3, 1, "", "cont_inplace_update"], [23, 4, 1, "", "cont_ivy"], [23, 3, 1, "", "cont_key_chains_containing"], [23, 3, 1, "", "cont_list_join"], [23, 3, 1, "", "cont_list_stack"], [23, 3, 1, "", "cont_map"], [23, 3, 1, "", "cont_map_sub_conts"], [23, 4, 1, "", "cont_max_depth"], [23, 3, 1, "", "cont_multi_map"], [23, 3, 1, "", "cont_multi_map_in_function"], [23, 3, 1, "", "cont_num_arrays"], [23, 3, 1, "", "cont_overwrite_at_key_chain"], [23, 3, 1, "", "cont_overwrite_at_key_chains"], [23, 3, 1, "", "cont_prune_empty"], [23, 3, 1, "", "cont_prune_key_chain"], [23, 3, 1, "", "cont_prune_key_chains"], [23, 3, 1, "", "cont_prune_key_from_key_chains"], [23, 3, 1, "", "cont_prune_keys"], [23, 3, 1, "", "cont_prune_keys_from_key_chains"], [23, 3, 1, "", "cont_reduce"], [23, 3, 1, "", "cont_remove_key_length_limit"], [23, 3, 1, "", "cont_remove_print_limit"], [23, 3, 1, "", "cont_reshape_like"], [23, 3, 1, "", "cont_restructure"], [23, 3, 1, "", "cont_restructure_key_chains"], [23, 3, 1, "", "cont_set_at_key_chain"], [23, 3, 1, "", "cont_set_at_key_chains"], [23, 3, 1, "", "cont_set_at_keys"], [23, 4, 1, "", "cont_shape"], [23, 4, 1, "", "cont_shapes"], [23, 3, 1, "", "cont_show"], [23, 3, 1, "", "cont_show_sub_container"], [23, 3, 1, "", "cont_size_ordered_arrays"], [23, 3, 1, "", "cont_slice_keys"], [23, 3, 1, "", "cont_slice_via_key"], [23, 3, 1, "", "cont_sort_by_key"], [23, 3, 1, "", "cont_structural_diff"], [23, 3, 1, "", "cont_to_dict"], [23, 3, 1, "", "cont_to_disk_as_hdf5"], [23, 3, 1, "", "cont_to_disk_as_json"], [23, 3, 1, "", "cont_to_disk_as_pickled"], [23, 3, 1, "", "cont_to_flat_list"], [23, 3, 1, "", "cont_to_iterator"], [23, 3, 1, "", "cont_to_iterator_keys"], [23, 3, 1, "", "cont_to_iterator_values"], [23, 3, 1, "", "cont_to_jsonable"], [23, 3, 1, "", "cont_to_nested_list"], [23, 3, 1, "", "cont_to_raw"], [23, 3, 1, "", "cont_trim_key"], [23, 3, 1, "", "cont_try_kc"], [23, 3, 1, "", "cont_unify"], [23, 3, 1, "", "cont_unstack_conts"], [23, 3, 1, "", "cont_update_config"], [23, 3, 1, "", "cont_with_default_key_color"], [23, 3, 1, "", "cont_with_entries_as_lists"], [23, 3, 1, "", "cont_with_ivy_backend"], [23, 3, 1, "", "cont_with_key_length_limit"], [23, 3, 1, "", "cont_with_print_indent"], [23, 3, 1, "", "cont_with_print_limit"], [23, 3, 1, "", "cont_with_print_line_spacing"], [23, 4, 1, "", "dynamic_backend"], [23, 3, 1, "", "h5_file_size"], [23, 3, 1, "", "shuffle_h5_file"], [23, 3, 1, "", "split_conts"]], "ivy.data_classes.container.container": [[46, 1, 1, "", "Container"]], "ivy.data_classes.container.container.Container": [[46, 3, 1, "", "__abs__"], [46, 3, 1, "", "__add__"], [46, 3, 1, "", "__eq__"], [46, 3, 1, "", "__ge__"], [46, 3, 1, "", "__gt__"], [46, 3, 1, "", "__init__"], [46, 3, 1, "", "__le__"], [46, 3, 1, "", "__lt__"], [46, 3, 1, "", "__ne__"], [46, 3, 1, "", "__pow__"], [46, 3, 1, "", "__radd__"], [46, 3, 1, "", "__rrshift__"], [46, 3, 1, "", "__rshift__"], [46, 3, 1, "", "__rsub__"], [46, 3, 1, "", "__sub__"], [46, 3, 1, "", "__truediv__"], [46, 3, 1, "", "__xor__"], [46, 3, 1, "", "arange"], [46, 3, 1, "", "arg_info"], [46, 3, 1, "", "arg_names"], [46, 3, 1, "", "array"], [46, 3, 1, "", "as_ivy_dev"], [46, 3, 1, "", "as_ivy_dtype"], [46, 3, 1, "", "as_native_dev"], [46, 3, 1, "", "as_native_dtype"], [46, 3, 1, "", "asarray"], [46, 3, 1, "", "asarray_handle_nestable"], [46, 3, 1, "", "asarray_infer_device"], [46, 3, 1, "", "asarray_to_native_arrays_and_back"], [46, 3, 1, "", "cache_fn"], [46, 3, 1, "", "check_float"], [46, 3, 1, "", "clear_cached_mem_on_dev"], [46, 3, 1, "", "closest_valid_dtype"], [46, 3, 1, "", "container_types"], [46, 3, 1, "", "conv"], [46, 3, 1, "", "conv_general_dilated"], [46, 3, 1, "", "conv_general_transpose"], [46, 3, 1, "", "copy_array"], [46, 3, 1, "", "current_backend"], [46, 3, 1, "", "current_backend_str"], [46, 3, 1, "", "default"], [46, 3, 1, "", "default_complex_dtype"], [46, 3, 1, "", "default_device"], [46, 3, 1, "", "default_dtype"], [46, 3, 1, "", "default_float_dtype"], [46, 3, 1, "", "default_int_dtype"], [46, 3, 1, "", "default_uint_dtype"], [46, 3, 1, "", "deserialize"], [46, 3, 1, "", "dev_util"], [46, 3, 1, "", "dtype_bits"], [46, 3, 1, "", "empty"], [46, 3, 1, "", "execute_with_gradients"], [46, 3, 1, "", "exists"], [46, 3, 1, "", "eye"], [46, 3, 1, "", "full"], [46, 3, 1, "", "function_supported_devices"], [46, 3, 1, "", "function_supported_devices_and_dtypes"], [46, 3, 1, "", "function_supported_dtypes"], [46, 3, 1, "", "function_unsupported_devices"], [46, 3, 1, "", "function_unsupported_devices_and_dtypes"], [46, 3, 1, "", "function_unsupported_dtypes"], [46, 3, 1, "", "get_all_arrays_in_memory"], [46, 3, 1, "", "get_all_ivy_arrays_on_dev"], [46, 3, 1, "", "get_array_mode"], [46, 3, 1, "", "get_exception_trace_mode"], [46, 3, 1, "", "get_item"], [46, 3, 1, "", "get_min_base"], [46, 3, 1, "", "get_min_denominator"], [46, 3, 1, "", "get_nestable_mode"], [46, 3, 1, "", "get_queue_timeout"], [46, 3, 1, "", "get_referrers_recursive"], [46, 3, 1, "", "get_show_func_wrapper_trace_mode"], [46, 3, 1, "", "get_tmp_dir"], [46, 3, 1, "", "gpu_is_available"], [46, 3, 1, "", "grad"], [46, 3, 1, "", "handle_array_function"], [46, 3, 1, "", "handle_array_like_without_promotion"], [46, 3, 1, "", "handle_exceptions"], [46, 3, 1, "", "handle_nestable"], [46, 3, 1, "", "handle_out_argument"], [46, 3, 1, "", "handle_view"], [46, 3, 1, "", "handle_view_indexing"], [46, 3, 1, "", "infer_default_dtype"], [46, 3, 1, "", "infer_device"], [46, 3, 1, "", "infer_dtype"], [46, 3, 1, "", "inplace_arrays_supported"], [46, 3, 1, "", "inplace_variables_supported"], [46, 3, 1, "", "inputs_to_ivy_arrays"], [46, 3, 1, "", "inputs_to_native_arrays"], [46, 3, 1, "", "integer_arrays_to_float"], [46, 3, 1, "", "invalid_dtype"], [46, 3, 1, "", "is_ivy_container"], [46, 3, 1, "", "isscalar"], [46, 3, 1, "", "jac"], [46, 3, 1, "", "lu_factor"], [46, 3, 1, "", "match_kwargs"], [46, 3, 1, "", "multiprocessing"], [46, 3, 1, "", "normalize_axis_tuple"], [46, 3, 1, "", "num_arrays_in_memory"], [46, 3, 1, "", "num_cpu_cores"], [46, 3, 1, "", "num_gpus"], [46, 3, 1, "", "num_ivy_arrays_on_dev"], [46, 3, 1, "", "ones"], [46, 3, 1, "", "outputs_to_ivy_arrays"], [46, 3, 1, "", "percent_used_mem_on_dev"], [46, 3, 1, "", "print_all_arrays_in_memory"], [46, 3, 1, "", "print_all_ivy_arrays_on_dev"], [46, 3, 1, "", "promote_types"], [46, 3, 1, "", "promote_types_of_inputs"], [46, 3, 1, "", "seed"], [46, 3, 1, "", "set_array_mode"], [46, 3, 1, "", "set_default_complex_dtype"], [46, 3, 1, "", "set_default_device"], [46, 3, 1, "", "set_default_dtype"], [46, 3, 1, "", "set_default_float_dtype"], [46, 3, 1, "", "set_default_int_dtype"], [46, 3, 1, "", "set_default_uint_dtype"], [46, 3, 1, "", "set_exception_trace_mode"], [46, 3, 1, "", "set_min_base"], [46, 3, 1, "", "set_min_denominator"], [46, 3, 1, "", "set_nestable_mode"], [46, 3, 1, "", "set_queue_timeout"], [46, 3, 1, "", "set_shape_array_mode"], [46, 3, 1, "", "set_show_func_wrapper_trace_mode"], [46, 3, 1, "", "set_split_factor"], [46, 3, 1, "", "set_tmp_dir"], [46, 3, 1, "", "set_with_grads"], [46, 3, 1, "", "shape_array_mode"], [46, 3, 1, "", "split_factor"], [46, 3, 1, "", "split_func_call"], [46, 3, 1, "", "static_adam_step"], [46, 3, 1, "", "static_adam_update"], [46, 3, 1, "", "static_arg_info"], [46, 3, 1, "", "static_arg_names"], [46, 3, 1, "", "static_array"], [46, 3, 1, "", "static_as_ivy_dev"], [46, 3, 1, "", "static_as_ivy_dtype"], [46, 3, 1, "", "static_as_native_dev"], [46, 3, 1, "", "static_as_native_dtype"], [46, 3, 1, "", "static_asarray_handle_nestable"], [46, 3, 1, "", "static_asarray_infer_device"], [46, 3, 1, "", "static_asarray_to_native_arrays_and_back"], [46, 3, 1, "", "static_cache_fn"], [46, 3, 1, "", "static_check_float"], [46, 3, 1, "", "static_clear_cached_mem_on_dev"], [46, 3, 1, "", "static_closest_valid_dtype"], [46, 3, 1, "", "static_container_types"], [46, 3, 1, "", "static_conv"], [46, 3, 1, "", "static_conv_general_dilated"], [46, 3, 1, "", "static_conv_general_transpose"], [46, 3, 1, "", "static_copy_array"], [46, 3, 1, "", "static_current_backend"], [46, 3, 1, "", "static_current_backend_str"], [46, 3, 1, "", "static_default"], [46, 3, 1, "", "static_default_device"], [46, 3, 1, "", "static_default_dtype"], [46, 3, 1, "", "static_default_int_dtype"], [46, 3, 1, "", "static_default_uint_dtype"], [46, 3, 1, "", "static_deserialize"], [46, 3, 1, "", "static_dev_util"], [46, 3, 1, "", "static_dtype_bits"], [46, 3, 1, "", "static_einsum"], [46, 3, 1, "", "static_empty"], [46, 3, 1, "", "static_execute_with_gradients"], [46, 3, 1, "", "static_exists"], [46, 3, 1, "", "static_full"], [46, 3, 1, "", "static_function_supported_devices"], [46, 3, 1, "", "static_function_supported_devices_and_dtypes"], [46, 3, 1, "", "static_function_unsupported_devices"], [46, 3, 1, "", "static_function_unsupported_devices_and_dtypes"], [46, 3, 1, "", "static_get"], [46, 3, 1, "", "static_get_all_arrays_in_memory"], [46, 3, 1, "", "static_get_all_ivy_arrays_on_dev"], [46, 3, 1, "", "static_get_array_mode"], [46, 3, 1, "", "static_get_exception_trace_mode"], [46, 3, 1, "", "static_get_item"], [46, 3, 1, "", "static_get_min_base"], [46, 3, 1, "", "static_get_min_denominator"], [46, 3, 1, "", "static_get_nestable_mode"], [46, 3, 1, "", "static_get_queue_timeout"], [46, 3, 1, "", "static_get_referrers_recursive"], [46, 3, 1, "", "static_get_show_func_wrapper_trace_mode"], [46, 3, 1, "", "static_get_tmp_dir"], [46, 3, 1, "", "static_gpu_is_available"], [46, 3, 1, "", "static_grad"], [46, 3, 1, "", "static_gradient_descent_update"], [46, 3, 1, "", "static_handle_array_function"], [46, 3, 1, "", "static_handle_array_like_without_promotion"], [46, 3, 1, "", "static_handle_exceptions"], [46, 3, 1, "", "static_handle_nestable"], [46, 3, 1, "", "static_handle_out_argument"], [46, 3, 1, "", "static_handle_view"], [46, 3, 1, "", "static_handle_view_indexing"], [46, 3, 1, "", "static_infer_default_dtype"], [46, 3, 1, "", "static_infer_device"], [46, 3, 1, "", "static_infer_dtype"], [46, 3, 1, "", "static_inplace_arrays_supported"], [46, 3, 1, "", "static_inplace_variables_supported"], [46, 3, 1, "", "static_inputs_to_ivy_arrays"], [46, 3, 1, "", "static_inputs_to_native_arrays"], [46, 3, 1, "", "static_integer_arrays_to_float"], [46, 3, 1, "", "static_invalid_dtype"], [46, 3, 1, "", "static_is_ivy_container"], [46, 3, 1, "", "static_isscalar"], [46, 3, 1, "", "static_jac"], [46, 3, 1, "", "static_lamb_update"], [46, 3, 1, "", "static_lars_update"], [46, 3, 1, "", "static_layer_norm"], [46, 3, 1, "", "static_lu_factor"], [46, 3, 1, "", "static_match_kwargs"], [46, 3, 1, "", "static_max"], [46, 3, 1, "", "static_mean"], [46, 3, 1, "", "static_min"], [46, 3, 1, "", "static_multiprocessing"], [46, 3, 1, "", "static_normalize_axis_tuple"], [46, 3, 1, "", "static_num_arrays_in_memory"], [46, 3, 1, "", "static_num_cpu_cores"], [46, 3, 1, "", "static_num_gpus"], [46, 3, 1, "", "static_num_ivy_arrays_on_dev"], [46, 3, 1, "", "static_optimizer_update"], [46, 3, 1, "", "static_outputs_to_ivy_arrays"], [46, 3, 1, "", "static_percent_used_mem_on_dev"], [46, 3, 1, "", "static_print_all_arrays_in_memory"], [46, 3, 1, "", "static_print_all_ivy_arrays_on_dev"], [46, 3, 1, "", "static_promote_types"], [46, 3, 1, "", "static_promote_types_of_inputs"], [46, 3, 1, "", "static_seed"], [46, 3, 1, "", "static_set_array_mode"], [46, 3, 1, "", "static_set_default_complex_dtype"], [46, 3, 1, "", "static_set_default_device"], [46, 3, 1, "", "static_set_default_dtype"], [46, 3, 1, "", "static_set_default_float_dtype"], [46, 3, 1, "", "static_set_default_int_dtype"], [46, 3, 1, "", "static_set_default_uint_dtype"], [46, 3, 1, "", "static_set_exception_trace_mode"], [46, 3, 1, "", "static_set_min_base"], [46, 3, 1, "", "static_set_min_denominator"], [46, 3, 1, "", "static_set_nestable_mode"], [46, 3, 1, "", "static_set_queue_timeout"], [46, 3, 1, "", "static_set_shape_array_mode"], [46, 3, 1, "", "static_set_show_func_wrapper_trace_mode"], [46, 3, 1, "", "static_set_split_factor"], [46, 3, 1, "", "static_set_tmp_dir"], [46, 3, 1, "", "static_set_with_grads"], [46, 3, 1, "", "static_shape"], [46, 3, 1, "", "static_shape_array_mode"], [46, 3, 1, "", "static_split_factor"], [46, 3, 1, "", "static_split_func_call"], [46, 3, 1, "", "static_std"], [46, 3, 1, "", "static_to_ivy_shape"], [46, 3, 1, "", "static_to_native_arrays_and_back"], [46, 3, 1, "", "static_to_native_shape"], [46, 3, 1, "", "static_total_mem_on_dev"], [46, 3, 1, "", "static_tpu_is_available"], [46, 3, 1, "", "static_try_else_none"], [46, 3, 1, "", "static_type_promote_arrays"], [46, 3, 1, "", "static_unset_array_mode"], [46, 3, 1, "", "static_unset_default_complex_dtype"], [46, 3, 1, "", "static_unset_default_device"], [46, 3, 1, "", "static_unset_default_dtype"], [46, 3, 1, "", "static_unset_default_float_dtype"], [46, 3, 1, "", "static_unset_default_int_dtype"], [46, 3, 1, "", "static_unset_default_uint_dtype"], [46, 3, 1, "", "static_unset_exception_trace_mode"], [46, 3, 1, "", "static_unset_nestable_mode"], [46, 3, 1, "", "static_unset_queue_timeout"], [46, 3, 1, "", "static_unset_shape_array_mode"], [46, 3, 1, "", "static_unset_show_func_wrapper_trace_mode"], [46, 3, 1, "", "static_unset_with_grads"], [46, 3, 1, "", "static_used_mem_on_dev"], [46, 3, 1, "", "static_valid_dtype"], [46, 3, 1, "", "static_value_and_grad"], [46, 3, 1, "", "static_vmap"], [46, 3, 1, "", "static_with_grads"], [46, 3, 1, "", "static_wraps"], [46, 3, 1, "", "to_ivy_shape"], [46, 3, 1, "", "to_native_arrays_and_back"], [46, 3, 1, "", "to_native_shape"], [46, 3, 1, "", "total_mem_on_dev"], [46, 3, 1, "", "tpu_is_available"], [46, 3, 1, "", "try_else_none"], [46, 3, 1, "", "type_promote_arrays"], [46, 3, 1, "", "unset_array_mode"], [46, 3, 1, "", "unset_default_complex_dtype"], [46, 3, 1, "", "unset_default_device"], [46, 3, 1, "", "unset_default_dtype"], [46, 3, 1, "", "unset_default_float_dtype"], [46, 3, 1, "", "unset_default_int_dtype"], [46, 3, 1, "", "unset_default_uint_dtype"], [46, 3, 1, "", "unset_exception_trace_mode"], [46, 3, 1, "", "unset_nestable_mode"], [46, 3, 1, "", "unset_queue_timeout"], [46, 3, 1, "", "unset_shape_array_mode"], [46, 3, 1, "", "unset_show_func_wrapper_trace_mode"], [46, 3, 1, "", "unset_with_grads"], [46, 3, 1, "", "used_mem_on_dev"], [46, 3, 1, "", "valid_dtype"], [46, 3, 1, "", "value_and_grad"], [46, 3, 1, "", "vmap"], [46, 3, 1, "", "with_grads"], [46, 3, 1, "", "wraps"], [46, 3, 1, "", "zeros"]], "ivy.data_classes.container.conversions": [[24, 1, 1, "", "_ContainerWithConversions"]], "ivy.data_classes.container.conversions._ContainerWithConversions": [[24, 2, 1, "", "_abc_impl"], [24, 3, 1, "", "static_to_ivy"], [24, 3, 1, "", "static_to_native"], [24, 3, 1, "", "to_ivy"], [24, 3, 1, "", "to_native"]], "ivy.data_classes.container.creation": [[25, 1, 1, "", "_ContainerWithCreation"]], "ivy.data_classes.container.creation._ContainerWithCreation": [[25, 2, 1, "", "_abc_impl"], [25, 3, 1, "", "empty_like"], [25, 3, 1, "", "from_dlpack"], [25, 3, 1, "", "full_like"], [25, 3, 1, "", "linspace"], [25, 3, 1, "", "logspace"], [25, 3, 1, "", "meshgrid"], [25, 3, 1, "", "native_array"], [25, 3, 1, "", "one_hot"], [25, 3, 1, "", "ones_like"], [25, 3, 1, "", "static_arange"], [25, 3, 1, "", "static_asarray"], [25, 3, 1, "", "static_empty_like"], [25, 3, 1, "", "static_eye"], [25, 3, 1, "", "static_from_dlpack"], [25, 3, 1, "", "static_full_like"], [25, 3, 1, "", "static_linspace"], [25, 3, 1, "", "static_logspace"], [25, 3, 1, "", "static_meshgrid"], [25, 3, 1, "", "static_native_array"], [25, 3, 1, "", "static_one_hot"], [25, 3, 1, "", "static_ones"], [25, 3, 1, "", "static_ones_like"], [25, 3, 1, "", "static_tril"], [25, 3, 1, "", "static_triu"], [25, 3, 1, "", "static_zeros"], [25, 3, 1, "", "static_zeros_like"], [25, 3, 1, "", "tril"], [25, 3, 1, "", "triu"], [25, 3, 1, "", "zeros_like"]], "ivy.data_classes.container.data_type": [[26, 1, 1, "", "_ContainerWithDataTypes"]], "ivy.data_classes.container.data_type._ContainerWithDataTypes": [[26, 2, 1, "", "_abc_impl"], [26, 3, 1, "", "astype"], [26, 3, 1, "", "broadcast_arrays"], [26, 3, 1, "", "broadcast_to"], [26, 3, 1, "", "can_cast"], [26, 3, 1, "", "dtype"], [26, 3, 1, "", "finfo"], [26, 3, 1, "", "iinfo"], [26, 3, 1, "", "is_bool_dtype"], [26, 3, 1, "", "is_complex_dtype"], [26, 3, 1, "", "is_float_dtype"], [26, 3, 1, "", "is_int_dtype"], [26, 3, 1, "", "is_uint_dtype"], [26, 3, 1, "", "result_type"], [26, 3, 1, "", "static_astype"], [26, 3, 1, "", "static_broadcast_arrays"], [26, 3, 1, "", "static_broadcast_to"], [26, 3, 1, "", "static_can_cast"], [26, 3, 1, "", "static_default_complex_dtype"], [26, 3, 1, "", "static_default_float_dtype"], [26, 3, 1, "", "static_dtype"], [26, 3, 1, "", "static_finfo"], [26, 3, 1, "", "static_function_supported_dtypes"], [26, 3, 1, "", "static_function_unsupported_dtypes"], [26, 3, 1, "", "static_iinfo"], [26, 3, 1, "", "static_is_bool_dtype"], [26, 3, 1, "", "static_is_complex_dtype"], [26, 3, 1, "", "static_is_float_dtype"], [26, 3, 1, "", "static_is_int_dtype"], [26, 3, 1, "", "static_is_uint_dtype"], [26, 3, 1, "", "static_result_type"]], "ivy.data_classes.container.device": [[27, 1, 1, "", "_ContainerWithDevice"]], "ivy.data_classes.container.device._ContainerWithDevice": [[27, 2, 1, "", "_abc_impl"], [27, 3, 1, "", "dev"], [27, 3, 1, "", "static_dev"], [27, 3, 1, "", "static_to_device"], [27, 3, 1, "", "to_device"]], "ivy.data_classes.container.elementwise": [[28, 1, 1, "", "_ContainerWithElementwise"]], "ivy.data_classes.container.elementwise._ContainerWithElementwise": [[28, 2, 1, "", "_abc_impl"], [28, 3, 1, "", "abs"], [28, 3, 1, "", "acos"], [28, 3, 1, "", "acosh"], [28, 3, 1, "", "add"], [28, 3, 1, "", "asin"], [28, 3, 1, "", "asinh"], [28, 3, 1, "", "atan"], [28, 3, 1, "", "atan2"], [28, 3, 1, "", "atanh"], [28, 3, 1, "", "bitwise_and"], [28, 3, 1, "", "bitwise_invert"], [28, 3, 1, "", "bitwise_left_shift"], [28, 3, 1, "", "bitwise_or"], [28, 3, 1, "", "bitwise_right_shift"], [28, 3, 1, "", "bitwise_xor"], [28, 3, 1, "", "ceil"], [28, 3, 1, "", "cos"], [28, 3, 1, "", "cosh"], [28, 3, 1, "", "deg2rad"], [28, 3, 1, "", "divide"], [28, 3, 1, "", "equal"], [28, 3, 1, "", "erf"], [28, 3, 1, "", "exp"], [28, 3, 1, "", "expm1"], [28, 3, 1, "", "floor"], [28, 3, 1, "", "floor_divide"], [28, 3, 1, "", "greater"], [28, 3, 1, "", "greater_equal"], [28, 3, 1, "", "isfinite"], [28, 3, 1, "", "isinf"], [28, 3, 1, "", "isnan"], [28, 3, 1, "", "isreal"], [28, 3, 1, "", "less"], [28, 3, 1, "", "less_equal"], [28, 3, 1, "", "log"], [28, 3, 1, "", "log10"], [28, 3, 1, "", "log1p"], [28, 3, 1, "", "log2"], [28, 3, 1, "", "logaddexp"], [28, 3, 1, "", "logical_and"], [28, 3, 1, "", "logical_not"], [28, 3, 1, "", "logical_or"], [28, 3, 1, "", "logical_xor"], [28, 3, 1, "", "maximum"], [28, 3, 1, "", "minimum"], [28, 3, 1, "", "multiply"], [28, 3, 1, "", "negative"], [28, 3, 1, "", "not_equal"], [28, 3, 1, "", "positive"], [28, 3, 1, "", "pow"], [28, 3, 1, "", "rad2deg"], [28, 3, 1, "", "reciprocal"], [28, 3, 1, "", "remainder"], [28, 3, 1, "", "round"], [28, 3, 1, "", "sign"], [28, 3, 1, "", "sin"], [28, 3, 1, "", "sinh"], [28, 3, 1, "", "sqrt"], [28, 3, 1, "", "square"], [28, 3, 1, "", "static_abs"], [28, 3, 1, "", "static_acos"], [28, 3, 1, "", "static_acosh"], [28, 3, 1, "", "static_add"], [28, 3, 1, "", "static_asin"], [28, 3, 1, "", "static_asinh"], [28, 3, 1, "", "static_atan"], [28, 3, 1, "", "static_atan2"], [28, 3, 1, "", "static_atanh"], [28, 3, 1, "", "static_bitwise_and"], [28, 3, 1, "", "static_bitwise_invert"], [28, 3, 1, "", "static_bitwise_left_shift"], [28, 3, 1, "", "static_bitwise_or"], [28, 3, 1, "", "static_bitwise_right_shift"], [28, 3, 1, "", "static_bitwise_xor"], [28, 3, 1, "", "static_ceil"], [28, 3, 1, "", "static_cos"], [28, 3, 1, "", "static_cosh"], [28, 3, 1, "", "static_deg2rad"], [28, 3, 1, "", "static_divide"], [28, 3, 1, "", "static_equal"], [28, 3, 1, "", "static_erf"], [28, 3, 1, "", "static_exp"], [28, 3, 1, "", "static_expm1"], [28, 3, 1, "", "static_floor"], [28, 3, 1, "", "static_floor_divide"], [28, 3, 1, "", "static_greater"], [28, 3, 1, "", "static_greater_equal"], [28, 3, 1, "", "static_isfinite"], [28, 3, 1, "", "static_isinf"], [28, 3, 1, "", "static_isnan"], [28, 3, 1, "", "static_isreal"], [28, 3, 1, "", "static_less"], [28, 3, 1, "", "static_less_equal"], [28, 3, 1, "", "static_log"], [28, 3, 1, "", "static_log10"], [28, 3, 1, "", "static_log1p"], [28, 3, 1, "", "static_log2"], [28, 3, 1, "", "static_logaddexp"], [28, 3, 1, "", "static_logical_and"], [28, 3, 1, "", "static_logical_not"], [28, 3, 1, "", "static_logical_or"], [28, 3, 1, "", "static_logical_xor"], [28, 3, 1, "", "static_maximum"], [28, 3, 1, "", "static_minimum"], [28, 3, 1, "", "static_multiply"], [28, 3, 1, "", "static_negative"], [28, 3, 1, "", "static_not_equal"], [28, 3, 1, "", "static_positive"], [28, 3, 1, "", "static_pow"], [28, 3, 1, "", "static_rad2deg"], [28, 3, 1, "", "static_reciprocal"], [28, 3, 1, "", "static_remainder"], [28, 3, 1, "", "static_round"], [28, 3, 1, "", "static_sign"], [28, 3, 1, "", "static_sin"], [28, 3, 1, "", "static_sinh"], [28, 3, 1, "", "static_sqrt"], [28, 3, 1, "", "static_square"], [28, 3, 1, "", "static_subtract"], [28, 3, 1, "", "static_tan"], [28, 3, 1, "", "static_tanh"], [28, 3, 1, "", "static_trapz"], [28, 3, 1, "", "static_trunc"], [28, 3, 1, "", "static_trunc_divide"], [28, 3, 1, "", "subtract"], [28, 3, 1, "", "tan"], [28, 3, 1, "", "tanh"], [28, 3, 1, "", "trapz"], [28, 3, 1, "", "trunc"], [28, 3, 1, "", "trunc_divide"]], "ivy.data_classes.container.experimental": [[29, 0, 0, "-", "activations"], [29, 0, 0, "-", "conversions"], [29, 0, 0, "-", "creation"], [29, 0, 0, "-", "data_type"], [29, 0, 0, "-", "device"], [29, 0, 0, "-", "elementwise"], [29, 0, 0, "-", "general"], [29, 0, 0, "-", "gradients"], [29, 0, 0, "-", "image"], [29, 0, 0, "-", "layers"], [29, 0, 0, "-", "linear_algebra"], [29, 0, 0, "-", "losses"], [29, 0, 0, "-", "manipulation"], [29, 0, 0, "-", "norms"], [29, 0, 0, "-", "random"], [29, 0, 0, "-", "searching"], [29, 0, 0, "-", "set"], [29, 0, 0, "-", "sorting"], [29, 0, 0, "-", "statistical"], [29, 0, 0, "-", "utility"]], "ivy.data_classes.container.experimental.activations": [[29, 1, 1, "", "_ContainerWithActivationExperimental"]], "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "batch_norm"], [29, 3, 1, "", "logit"], [29, 3, 1, "", "logsigmoid"], [29, 3, 1, "", "prelu"], [29, 3, 1, "", "relu6"], [29, 3, 1, "", "static_batch_norm"], [29, 3, 1, "", "static_logit"], [29, 3, 1, "", "static_logsigmoid"], [29, 3, 1, "", "static_prelu"], [29, 3, 1, "", "static_relu6"], [29, 3, 1, "", "static_thresholded_relu"], [29, 3, 1, "", "thresholded_relu"]], "ivy.data_classes.container.experimental.conversions": [[29, 1, 1, "", "_ContainerWithConversionExperimental"]], "ivy.data_classes.container.experimental.conversions._ContainerWithConversionExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.creation": [[29, 1, 1, "", "_ContainerWithCreationExperimental"]], "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "eye_like"], [29, 3, 1, "", "hamming_window"], [29, 3, 1, "", "hann_window"], [29, 3, 1, "", "kaiser_bessel_derived_window"], [29, 3, 1, "", "kaiser_window"], [29, 3, 1, "", "static_eye_like"], [29, 3, 1, "", "static_hamming_window"], [29, 3, 1, "", "static_hann_window"], [29, 3, 1, "", "static_kaiser_bessel_derived_window"], [29, 3, 1, "", "static_kaiser_window"], [29, 3, 1, "", "static_tril_indices"], [29, 3, 1, "", "static_triu_indices"], [29, 3, 1, "", "static_vorbis_window"], [29, 3, 1, "", "tril_indices"], [29, 3, 1, "", "triu_indices"], [29, 3, 1, "", "vorbis_window"]], "ivy.data_classes.container.experimental.data_type": [[29, 1, 1, "", "_ContainerWithData_typeExperimental"]], "ivy.data_classes.container.experimental.data_type._ContainerWithData_typeExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.device": [[29, 1, 1, "", "_ContainerWithDeviceExperimental"]], "ivy.data_classes.container.experimental.device._ContainerWithDeviceExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.elementwise": [[29, 1, 1, "", "_ContainerWithElementWiseExperimental"]], "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "allclose"], [29, 3, 1, "", "angle"], [29, 3, 1, "", "binarizer"], [29, 3, 1, "", "conj"], [29, 3, 1, "", "copysign"], [29, 3, 1, "", "count_nonzero"], [29, 3, 1, "", "diff"], [29, 3, 1, "", "exp2"], [29, 3, 1, "", "fix"], [29, 3, 1, "", "float_power"], [29, 3, 1, "", "fmax"], [29, 3, 1, "", "fmin"], [29, 3, 1, "", "fmod"], [29, 3, 1, "", "frexp"], [29, 3, 1, "", "gcd"], [29, 3, 1, "", "gradient"], [29, 3, 1, "", "hypot"], [29, 3, 1, "", "imag"], [29, 3, 1, "", "isclose"], [29, 3, 1, "", "lcm"], [29, 3, 1, "", "ldexp"], [29, 3, 1, "", "logaddexp2"], [29, 3, 1, "", "nan_to_num"], [29, 3, 1, "", "nansum"], [29, 3, 1, "", "nextafter"], [29, 3, 1, "", "real"], [29, 3, 1, "", "signbit"], [29, 3, 1, "", "sinc"], [29, 3, 1, "", "static_allclose"], [29, 3, 1, "", "static_angle"], [29, 3, 1, "", "static_binarizer"], [29, 3, 1, "", "static_conj"], [29, 3, 1, "", "static_copysign"], [29, 3, 1, "", "static_count_nonzero"], [29, 3, 1, "", "static_diff"], [29, 3, 1, "", "static_exp2"], [29, 3, 1, "", "static_fix"], [29, 3, 1, "", "static_float_power"], [29, 3, 1, "", "static_fmax"], [29, 3, 1, "", "static_fmin"], [29, 3, 1, "", "static_fmod"], [29, 3, 1, "", "static_frexp"], [29, 3, 1, "", "static_gcd"], [29, 3, 1, "", "static_gradient"], [29, 3, 1, "", "static_hypot"], [29, 3, 1, "", "static_imag"], [29, 3, 1, "", "static_isclose"], [29, 3, 1, "", "static_lcm"], [29, 3, 1, "", "static_ldexp"], [29, 3, 1, "", "static_logaddexp2"], [29, 3, 1, "", "static_nan_to_num"], [29, 3, 1, "", "static_nansum"], [29, 3, 1, "", "static_nextafter"], [29, 3, 1, "", "static_real"], [29, 3, 1, "", "static_signbit"], [29, 3, 1, "", "static_sinc"], [29, 3, 1, "", "static_xlogy"], [29, 3, 1, "", "static_zeta"], [29, 3, 1, "", "xlogy"], [29, 3, 1, "", "zeta"]], "ivy.data_classes.container.experimental.general": [[29, 1, 1, "", "_ContainerWithGeneralExperimental"]], "ivy.data_classes.container.experimental.general._ContainerWithGeneralExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "isin"], [29, 3, 1, "", "static_isin"]], "ivy.data_classes.container.experimental.gradients": [[29, 1, 1, "", "_ContainerWithGradientsExperimental"]], "ivy.data_classes.container.experimental.gradients._ContainerWithGradientsExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.image": [[29, 1, 1, "", "_ContainerWithImageExperimental"]], "ivy.data_classes.container.experimental.image._ContainerWithImageExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.layers": [[29, 1, 1, "", "_ContainerWithLayersExperimental"]], "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "adaptive_avg_pool1d"], [29, 3, 1, "", "adaptive_avg_pool2d"], [29, 3, 1, "", "avg_pool1d"], [29, 3, 1, "", "avg_pool2d"], [29, 3, 1, "", "avg_pool3d"], [29, 3, 1, "", "dct"], [29, 3, 1, "", "dft"], [29, 3, 1, "", "embedding"], [29, 3, 1, "", "fft"], [29, 3, 1, "", "ifft"], [29, 3, 1, "", "interpolate"], [29, 3, 1, "", "max_pool1d"], [29, 3, 1, "", "max_pool2d"], [29, 3, 1, "", "max_pool3d"], [29, 3, 1, "", "static_adaptive_avg_pool1d"], [29, 3, 1, "", "static_adaptive_avg_pool2d"], [29, 3, 1, "", "static_avg_pool1d"], [29, 3, 1, "", "static_avg_pool2d"], [29, 3, 1, "", "static_avg_pool3d"], [29, 3, 1, "", "static_dct"], [29, 3, 1, "", "static_dft"], [29, 3, 1, "", "static_embedding"], [29, 3, 1, "", "static_fft"], [29, 3, 1, "", "static_ifft"], [29, 3, 1, "", "static_interpolate"], [29, 3, 1, "", "static_max_pool1d"], [29, 3, 1, "", "static_max_pool2d"], [29, 3, 1, "", "static_max_pool3d"]], "ivy.data_classes.container.experimental.linear_algebra": [[29, 1, 1, "", "_ContainerWithLinearAlgebraExperimental"]], "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "adjoint"], [29, 3, 1, "", "cond"], [29, 3, 1, "", "diagflat"], [29, 3, 1, "", "eig"], [29, 3, 1, "", "eigh_tridiagonal"], [29, 3, 1, "", "eigvals"], [29, 3, 1, "", "kron"], [29, 3, 1, "", "matrix_exp"], [29, 3, 1, "", "multi_dot"], [29, 3, 1, "", "static_adjoint"], [29, 3, 1, "", "static_cond"], [29, 3, 1, "", "static_diagflat"], [29, 3, 1, "", "static_eig"], [29, 3, 1, "", "static_eigh_tridiagonal"], [29, 3, 1, "", "static_eigvals"], [29, 3, 1, "", "static_kron"], [29, 3, 1, "", "static_matrix_exp"], [29, 3, 1, "", "static_multi_dot"]], "ivy.data_classes.container.experimental.losses": [[29, 1, 1, "", "_ContainerWithLossesExperimental"]], "ivy.data_classes.container.experimental.losses._ContainerWithLossesExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "binary_cross_entropy_with_logits"], [29, 3, 1, "", "static_binary_cross_entropy_with_logits"]], "ivy.data_classes.container.experimental.manipulation": [[29, 1, 1, "", "_ContainerWithManipulationExperimental"]], "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "atleast_1d"], [29, 3, 1, "", "atleast_2d"], [29, 3, 1, "", "atleast_3d"], [29, 3, 1, "", "broadcast_shapes"], [29, 3, 1, "", "dsplit"], [29, 3, 1, "", "dstack"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "flatten"], [29, 3, 1, "", "fliplr"], [29, 3, 1, "", "flipud"], [29, 3, 1, "", "heaviside"], [29, 3, 1, "", "hsplit"], [29, 3, 1, "", "hstack"], [29, 3, 1, "", "i0"], [29, 3, 1, "", "moveaxis"], [29, 3, 1, "", "pad"], [29, 3, 1, "", "rot90"], [29, 3, 1, "", "static_atleast_1d"], [29, 3, 1, "", "static_atleast_2d"], [29, 3, 1, "", "static_atleast_3d"], [29, 3, 1, "", "static_broadcast_shapes"], [29, 3, 1, "", "static_dsplit"], [29, 3, 1, "", "static_dstack"], [29, 3, 1, "", "static_expand"], [29, 3, 1, "", "static_flatten"], [29, 3, 1, "", "static_fliplr"], [29, 3, 1, "", "static_flipud"], [29, 3, 1, "", "static_heaviside"], [29, 3, 1, "", "static_hsplit"], [29, 3, 1, "", "static_hstack"], [29, 3, 1, "", "static_i0"], [29, 3, 1, "", "static_moveaxis"], [29, 3, 1, "", "static_pad"], [29, 3, 1, "", "static_rot90"], [29, 3, 1, "", "static_take_along_axis"], [29, 3, 1, "", "static_top_k"], [29, 3, 1, "", "static_vsplit"], [29, 3, 1, "", "static_vstack"], [29, 3, 1, "", "take_along_axis"], [29, 3, 1, "", "top_k"], [29, 3, 1, "", "vsplit"], [29, 3, 1, "", "vstack"]], "ivy.data_classes.container.experimental.norms": [[29, 1, 1, "", "_ContainerWithNormsExperimental"]], "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "instance_norm"], [29, 3, 1, "", "l2_normalize"], [29, 3, 1, "", "lp_normalize"], [29, 3, 1, "", "static_instance_norm"], [29, 3, 1, "", "static_l2_normalize"], [29, 3, 1, "", "static_lp_normalize"]], "ivy.data_classes.container.experimental.random": [[29, 1, 1, "", "_ContainerWithRandomExperimental"]], "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "bernoulli"], [29, 3, 1, "", "beta"], [29, 3, 1, "", "dirichlet"], [29, 3, 1, "", "poisson"], [29, 3, 1, "", "static_bernoulli"], [29, 3, 1, "", "static_beta"], [29, 3, 1, "", "static_dirichlet"], [29, 3, 1, "", "static_poisson"]], "ivy.data_classes.container.experimental.searching": [[29, 1, 1, "", "_ContainerWithSearchingExperimental"]], "ivy.data_classes.container.experimental.searching._ContainerWithSearchingExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.set": [[29, 1, 1, "", "_ContainerWithSetExperimental"]], "ivy.data_classes.container.experimental.set._ContainerWithSetExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.experimental.sorting": [[29, 1, 1, "", "_ContainerWithSortingExperimental"]], "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "lexsort"], [29, 3, 1, "", "msort"], [29, 3, 1, "", "static_lexsort"], [29, 3, 1, "", "static_msort"]], "ivy.data_classes.container.experimental.statistical": [[29, 1, 1, "", "_ContainerWithStatisticalExperimental"]], "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental": [[29, 2, 1, "", "_abc_impl"], [29, 3, 1, "", "bincount"], [29, 3, 1, "", "corrcoef"], [29, 3, 1, "", "median"], [29, 3, 1, "", "nanmean"], [29, 3, 1, "", "nanmedian"], [29, 3, 1, "", "quantile"], [29, 3, 1, "", "static_bincount"], [29, 3, 1, "", "static_corrcoef"], [29, 3, 1, "", "static_median"], [29, 3, 1, "", "static_nanmean"], [29, 3, 1, "", "static_nanmedian"], [29, 3, 1, "", "static_quantile"], [29, 3, 1, "", "static_unravel_index"], [29, 3, 1, "", "unravel_index"]], "ivy.data_classes.container.experimental.utility": [[29, 1, 1, "", "_ContainerWithUtilityExperimental"]], "ivy.data_classes.container.experimental.utility._ContainerWithUtilityExperimental": [[29, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.general": [[30, 1, 1, "", "_ContainerWithGeneral"]], "ivy.data_classes.container.general._ContainerWithGeneral": [[30, 2, 1, "", "_abc_impl"], [30, 3, 1, "", "all_equal"], [30, 3, 1, "", "array_equal"], [30, 3, 1, "", "assert_supports_inplace"], [30, 3, 1, "", "clip_matrix_norm"], [30, 3, 1, "", "clip_vector_norm"], [30, 3, 1, "", "einops_rearrange"], [30, 3, 1, "", "einops_reduce"], [30, 3, 1, "", "einops_repeat"], [30, 3, 1, "", "fourier_encode"], [30, 3, 1, "", "gather"], [30, 3, 1, "", "gather_nd"], [30, 3, 1, "", "get_num_dims"], [30, 3, 1, "", "has_nans"], [30, 3, 1, "", "inplace_decrement"], [30, 3, 1, "", "inplace_increment"], [30, 3, 1, "", "inplace_update"], [30, 3, 1, "", "is_array"], [30, 3, 1, "", "is_ivy_array"], [30, 3, 1, "", "is_native_array"], [30, 3, 1, "", "scatter_flat"], [30, 3, 1, "", "scatter_nd"], [30, 3, 1, "", "stable_divide"], [30, 3, 1, "", "stable_pow"], [30, 3, 1, "", "static_all_equal"], [30, 3, 1, "", "static_array_equal"], [30, 3, 1, "", "static_assert_supports_inplace"], [30, 3, 1, "", "static_clip_matrix_norm"], [30, 3, 1, "", "static_clip_vector_norm"], [30, 3, 1, "", "static_einops_rearrange"], [30, 3, 1, "", "static_einops_reduce"], [30, 3, 1, "", "static_einops_repeat"], [30, 3, 1, "", "static_fourier_encode"], [30, 3, 1, "", "static_gather"], [30, 3, 1, "", "static_gather_nd"], [30, 3, 1, "", "static_get_num_dims"], [30, 3, 1, "", "static_has_nans"], [30, 3, 1, "", "static_inplace_decrement"], [30, 3, 1, "", "static_inplace_increment"], [30, 3, 1, "", "static_inplace_update"], [30, 3, 1, "", "static_is_array"], [30, 3, 1, "", "static_is_ivy_array"], [30, 3, 1, "", "static_is_native_array"], [30, 3, 1, "", "static_scatter_flat"], [30, 3, 1, "", "static_scatter_nd"], [30, 3, 1, "", "static_stable_divide"], [30, 3, 1, "", "static_stable_pow"], [30, 3, 1, "", "static_supports_inplace_updates"], [30, 3, 1, "", "static_to_list"], [30, 3, 1, "", "static_to_numpy"], [30, 3, 1, "", "static_to_scalar"], [30, 3, 1, "", "static_value_is_nan"], [30, 3, 1, "", "supports_inplace_updates"], [30, 3, 1, "", "to_list"], [30, 3, 1, "", "to_numpy"], [30, 3, 1, "", "to_scalar"], [30, 3, 1, "", "value_is_nan"]], "ivy.data_classes.container.gradients": [[31, 1, 1, "", "_ContainerWithGradients"]], "ivy.data_classes.container.gradients._ContainerWithGradients": [[31, 2, 1, "", "_abc_impl"], [31, 3, 1, "", "adam_step"], [31, 3, 1, "", "adam_update"], [31, 3, 1, "", "gradient_descent_update"], [31, 3, 1, "", "lamb_update"], [31, 3, 1, "", "lars_update"], [31, 3, 1, "", "optimizer_update"], [31, 3, 1, "", "static_stop_gradient"], [31, 3, 1, "", "stop_gradient"]], "ivy.data_classes.container.image": [[32, 1, 1, "", "_ContainerWithImage"]], "ivy.data_classes.container.image._ContainerWithImage": [[32, 2, 1, "", "_abc_impl"]], "ivy.data_classes.container.layers": [[33, 1, 1, "", "_ContainerWithLayers"]], "ivy.data_classes.container.layers._ContainerWithLayers": [[33, 2, 1, "", "_abc_impl"], [33, 3, 1, "", "conv1d"], [33, 3, 1, "", "conv1d_transpose"], [33, 3, 1, "", "conv2d"], [33, 3, 1, "", "conv2d_transpose"], [33, 3, 1, "", "conv3d"], [33, 3, 1, "", "conv3d_transpose"], [33, 3, 1, "", "depthwise_conv2d"], [33, 3, 1, "", "dropout"], [33, 3, 1, "", "dropout1d"], [33, 3, 1, "", "dropout3d"], [33, 3, 1, "", "linear"], [33, 3, 1, "", "lstm_update"], [33, 3, 1, "", "multi_head_attention"], [33, 3, 1, "", "scaled_dot_product_attention"], [33, 3, 1, "", "static_conv1d"], [33, 3, 1, "", "static_conv1d_transpose"], [33, 3, 1, "", "static_conv2d"], [33, 3, 1, "", "static_conv2d_transpose"], [33, 3, 1, "", "static_conv3d"], [33, 3, 1, "", "static_conv3d_transpose"], [33, 3, 1, "", "static_depthwise_conv2d"], [33, 3, 1, "", "static_dropout"], [33, 3, 1, "", "static_dropout1d"], [33, 3, 1, "", "static_dropout3d"], [33, 3, 1, "", "static_linear"], [33, 3, 1, "", "static_lstm_update"], [33, 3, 1, "", "static_multi_head_attention"], [33, 3, 1, "", "static_scaled_dot_product_attention"]], "ivy.data_classes.container.linear_algebra": [[34, 1, 1, "", "_ContainerWithLinearAlgebra"]], "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra": [[34, 2, 1, "", "_abc_impl"], [34, 3, 1, "", "cholesky"], [34, 3, 1, "", "cross"], [34, 3, 1, "", "det"], [34, 3, 1, "", "diag"], [34, 3, 1, "", "diagonal"], [34, 3, 1, "", "eigh"], [34, 3, 1, "", "eigvalsh"], [34, 3, 1, "", "inner"], [34, 3, 1, "", "inv"], [34, 3, 1, "", "matmul"], [34, 3, 1, "", "matrix_norm"], [34, 3, 1, "", "matrix_power"], [34, 3, 1, "", "matrix_rank"], [34, 3, 1, "", "matrix_transpose"], [34, 3, 1, "", "outer"], [34, 3, 1, "", "pinv"], [34, 3, 1, "", "qr"], [34, 3, 1, "", "slogdet"], [34, 3, 1, "", "solve"], [34, 3, 1, "", "static_cholesky"], [34, 3, 1, "", "static_cross"], [34, 3, 1, "", "static_det"], [34, 3, 1, "", "static_diag"], [34, 3, 1, "", "static_diagonal"], [34, 3, 1, "", "static_eigh"], [34, 3, 1, "", "static_eigvalsh"], [34, 3, 1, "", "static_inner"], [34, 3, 1, "", "static_inv"], [34, 3, 1, "", "static_matmul"], [34, 3, 1, "", "static_matrix_norm"], [34, 3, 1, "", "static_matrix_power"], [34, 3, 1, "", "static_matrix_rank"], [34, 3, 1, "", "static_matrix_transpose"], [34, 3, 1, "", "static_outer"], [34, 3, 1, "", "static_pinv"], [34, 3, 1, "", "static_qr"], [34, 3, 1, "", "static_slogdet"], [34, 3, 1, "", "static_solve"], [34, 3, 1, "", "static_svd"], [34, 3, 1, "", "static_svdvals"], [34, 3, 1, "", "static_tensordot"], [34, 3, 1, "", "static_tensorsolve"], [34, 3, 1, "", "static_trace"], [34, 3, 1, "", "static_vander"], [34, 3, 1, "", "static_vecdot"], [34, 3, 1, "", "static_vector_norm"], [34, 3, 1, "", "static_vector_to_skew_symmetric_matrix"], [34, 3, 1, "", "svd"], [34, 3, 1, "", "svdvals"], [34, 3, 1, "", "tensordot"], [34, 3, 1, "", "tensorsolve"], [34, 3, 1, "", "trace"], [34, 3, 1, "", "vander"], [34, 3, 1, "", "vecdot"], [34, 3, 1, "", "vector_norm"], [34, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.data_classes.container.losses": [[35, 1, 1, "", "_ContainerWithLosses"]], "ivy.data_classes.container.losses._ContainerWithLosses": [[35, 2, 1, "", "_abc_impl"], [35, 3, 1, "", "binary_cross_entropy"], [35, 3, 1, "", "cross_entropy"], [35, 3, 1, "", "sparse_cross_entropy"], [35, 3, 1, "", "static_binary_cross_entropy"], [35, 3, 1, "", "static_cross_entropy"], [35, 3, 1, "", "static_sparse_cross_entropy"]], "ivy.data_classes.container.manipulation": [[36, 1, 1, "", "_ContainerWithManipulation"]], "ivy.data_classes.container.manipulation._ContainerWithManipulation": [[36, 2, 1, "", "_abc_impl"], [36, 3, 1, "", "clip"], [36, 3, 1, "", "concat"], [36, 3, 1, "", "constant_pad"], [36, 3, 1, "", "expand_dims"], [36, 3, 1, "", "flip"], [36, 3, 1, "", "permute_dims"], [36, 3, 1, "", "repeat"], [36, 3, 1, "", "reshape"], [36, 3, 1, "", "roll"], [36, 3, 1, "", "split"], [36, 3, 1, "", "squeeze"], [36, 3, 1, "", "stack"], [36, 3, 1, "", "static_clip"], [36, 3, 1, "", "static_concat"], [36, 3, 1, "", "static_constant_pad"], [36, 3, 1, "", "static_expand_dims"], [36, 3, 1, "", "static_flip"], [36, 3, 1, "", "static_permute_dims"], [36, 3, 1, "", "static_repeat"], [36, 3, 1, "", "static_reshape"], [36, 3, 1, "", "static_roll"], [36, 3, 1, "", "static_split"], [36, 3, 1, "", "static_squeeze"], [36, 3, 1, "", "static_stack"], [36, 3, 1, "", "static_swapaxes"], [36, 3, 1, "", "static_tile"], [36, 3, 1, "", "static_unstack"], [36, 3, 1, "", "static_zero_pad"], [36, 3, 1, "", "swapaxes"], [36, 3, 1, "", "tile"], [36, 3, 1, "", "unstack"], [36, 3, 1, "", "zero_pad"]], "ivy.data_classes.container.norms": [[37, 1, 1, "", "_ContainerWithNorms"]], "ivy.data_classes.container.norms._ContainerWithNorms": [[37, 2, 1, "", "_abc_impl"], [37, 3, 1, "", "layer_norm"]], "ivy.data_classes.container.random": [[38, 1, 1, "", "_ContainerWithRandom"]], "ivy.data_classes.container.random._ContainerWithRandom": [[38, 2, 1, "", "_abc_impl"], [38, 3, 1, "", "multinomial"], [38, 3, 1, "", "randint"], [38, 3, 1, "", "random_normal"], [38, 3, 1, "", "random_uniform"], [38, 3, 1, "", "shuffle"], [38, 3, 1, "", "static_multinomial"], [38, 3, 1, "", "static_randint"], [38, 3, 1, "", "static_random_normal"], [38, 3, 1, "", "static_random_uniform"], [38, 3, 1, "", "static_shuffle"]], "ivy.data_classes.container.searching": [[39, 1, 1, "", "_ContainerWithSearching"]], "ivy.data_classes.container.searching._ContainerWithSearching": [[39, 2, 1, "", "_abc_impl"], [39, 3, 1, "", "argmax"], [39, 3, 1, "", "argmin"], [39, 3, 1, "", "argwhere"], [39, 3, 1, "", "nonzero"], [39, 3, 1, "", "static_argmax"], [39, 3, 1, "", "static_argmin"], [39, 3, 1, "", "static_argwhere"], [39, 3, 1, "", "static_nonzero"], [39, 3, 1, "", "static_where"], [39, 3, 1, "", "where"]], "ivy.data_classes.container.set": [[40, 1, 1, "", "_ContainerWithSet"]], "ivy.data_classes.container.set._ContainerWithSet": [[40, 2, 1, "", "_abc_impl"], [40, 3, 1, "", "static_unique_all"], [40, 3, 1, "", "static_unique_counts"], [40, 3, 1, "", "static_unique_inverse"], [40, 3, 1, "", "static_unique_values"], [40, 3, 1, "", "unique_all"], [40, 3, 1, "", "unique_counts"], [40, 3, 1, "", "unique_inverse"], [40, 3, 1, "", "unique_values"]], "ivy.data_classes.container.sorting": [[41, 1, 1, "", "_ContainerWithSorting"]], "ivy.data_classes.container.sorting._ContainerWithSorting": [[41, 2, 1, "", "_abc_impl"], [41, 3, 1, "", "argsort"], [41, 3, 1, "", "searchsorted"], [41, 3, 1, "", "sort"], [41, 3, 1, "", "static_argsort"], [41, 3, 1, "", "static_searchsorted"], [41, 3, 1, "", "static_sort"]], "ivy.data_classes.container.statistical": [[42, 1, 1, "", "_ContainerWithStatistical"]], "ivy.data_classes.container.statistical._ContainerWithStatistical": [[42, 2, 1, "", "_abc_impl"], [42, 3, 1, "", "cumprod"], [42, 3, 1, "", "cumsum"], [42, 3, 1, "", "einsum"], [42, 3, 1, "", "max"], [42, 3, 1, "", "mean"], [42, 3, 1, "", "min"], [42, 3, 1, "", "prod"], [42, 3, 1, "", "static_cumprod"], [42, 3, 1, "", "static_cumsum"], [42, 3, 1, "", "static_prod"], [42, 3, 1, "", "static_sum"], [42, 3, 1, "", "static_var"], [42, 3, 1, "", "std"], [42, 3, 1, "", "sum"], [42, 3, 1, "", "var"]], "ivy.data_classes.container.utility": [[43, 1, 1, "", "_ContainerWithUtility"]], "ivy.data_classes.container.utility._ContainerWithUtility": [[43, 2, 1, "", "_abc_impl"], [43, 3, 1, "", "all"], [43, 3, 1, "", "any"], [43, 3, 1, "", "static_all"], [43, 3, 1, "", "static_any"]], "ivy.data_classes.container.wrapping": [[44, 5, 1, "", "_wrap_function"], [44, 5, 1, "", "add_ivy_container_instance_methods"]], "ivy.functional.ivy": [[58, 0, 0, "-", "activations"], [59, 0, 0, "-", "constants"], [60, 0, 0, "-", "control_flow_ops"], [61, 0, 0, "-", "creation"], [62, 0, 0, "-", "data_type"], [63, 0, 0, "-", "device"], [64, 0, 0, "-", "elementwise"], [65, 0, 0, "-", "experimental"], [66, 0, 0, "-", "general"], [67, 0, 0, "-", "gradients"], [68, 0, 0, "-", "layers"], [69, 0, 0, "-", "linear_algebra"], [70, 0, 0, "-", "losses"], [71, 0, 0, "-", "manipulation"], [72, 0, 0, "-", "meta"], [73, 0, 0, "-", "nest"], [74, 0, 0, "-", "norms"], [75, 0, 0, "-", "random"], [76, 0, 0, "-", "searching"], [77, 0, 0, "-", "set"], [78, 0, 0, "-", "sorting"], [79, 0, 0, "-", "statistical"], [80, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[58, 5, 1, "", "deserialize"], [58, 5, 1, "", "gelu"], [58, 5, 1, "", "get"], [58, 5, 1, "", "leaky_relu"], [58, 5, 1, "", "log_softmax"], [58, 5, 1, "", "mish"], [58, 5, 1, "", "relu"], [58, 5, 1, "", "sigmoid"], [58, 5, 1, "", "softmax"], [58, 5, 1, "", "softplus"]], "ivy.functional.ivy.constants": [[59, 6, 1, "", "e"], [59, 6, 1, "", "inf"], [59, 6, 1, "", "nan"], [59, 6, 1, "", "newaxis"], [59, 6, 1, "", "pi"]], "ivy.functional.ivy.control_flow_ops": [[60, 5, 1, "", "IfElse"], [60, 5, 1, "", "WhileLoop"], [60, 5, 1, "", "if_else"], [60, 5, 1, "", "while_loop"]], "ivy.functional.ivy.creation": [[61, 1, 1, "", "NestedSequence"], [61, 5, 1, "", "arange"], [61, 5, 1, "", "array"], [61, 5, 1, "", "asarray"], [61, 5, 1, "", "asarray_handle_nestable"], [61, 5, 1, "", "asarray_infer_device"], [61, 5, 1, "", "asarray_to_native_arrays_and_back"], [61, 5, 1, "", "copy_array"], [61, 5, 1, "", "empty"], [61, 5, 1, "", "empty_like"], [61, 5, 1, "", "eye"], [61, 5, 1, "", "from_dlpack"], [61, 5, 1, "", "full"], [61, 5, 1, "", "full_like"], [61, 5, 1, "", "linspace"], [61, 5, 1, "", "logspace"], [61, 5, 1, "", "meshgrid"], [61, 5, 1, "", "native_array"], [61, 5, 1, "", "one_hot"], [61, 5, 1, "", "ones"], [61, 5, 1, "", "ones_like"], [61, 5, 1, "", "tril"], [61, 5, 1, "", "triu"], [61, 5, 1, "", "zeros"], [61, 5, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[61, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[62, 1, 1, "", "DefaultComplexDtype"], [62, 1, 1, "", "DefaultDtype"], [62, 1, 1, "", "DefaultFloatDtype"], [62, 1, 1, "", "DefaultIntDtype"], [62, 1, 1, "", "DefaultUintDtype"], [62, 5, 1, "", "as_ivy_dtype"], [62, 5, 1, "", "as_native_dtype"], [62, 5, 1, "", "astype"], [62, 5, 1, "", "broadcast_arrays"], [62, 5, 1, "", "broadcast_to"], [62, 5, 1, "", "can_cast"], [62, 5, 1, "", "check_float"], [62, 5, 1, "", "closest_valid_dtype"], [62, 5, 1, "", "default_complex_dtype"], [62, 5, 1, "", "default_dtype"], [62, 5, 1, "", "default_float_dtype"], [62, 5, 1, "", "default_int_dtype"], [62, 5, 1, "", "default_uint_dtype"], [62, 5, 1, "", "dtype"], [62, 5, 1, "", "dtype_bits"], [62, 5, 1, "", "finfo"], [62, 5, 1, "", "function_supported_dtypes"], [62, 5, 1, "", "function_unsupported_dtypes"], [62, 5, 1, "", "iinfo"], [62, 5, 1, "", "infer_default_dtype"], [62, 5, 1, "", "invalid_dtype"], [62, 5, 1, "", "is_bool_dtype"], [62, 5, 1, "", "is_complex_dtype"], [62, 5, 1, "", "is_float_dtype"], [62, 5, 1, "", "is_int_dtype"], [62, 5, 1, "", "is_uint_dtype"], [62, 5, 1, "", "promote_types"], [62, 5, 1, "", "promote_types_of_inputs"], [62, 5, 1, "", "result_type"], [62, 5, 1, "", "set_default_complex_dtype"], [62, 5, 1, "", "set_default_dtype"], [62, 5, 1, "", "set_default_float_dtype"], [62, 5, 1, "", "set_default_int_dtype"], [62, 5, 1, "", "set_default_uint_dtype"], [62, 5, 1, "", "type_promote_arrays"], [62, 5, 1, "", "unset_default_complex_dtype"], [62, 5, 1, "", "unset_default_dtype"], [62, 5, 1, "", "unset_default_float_dtype"], [62, 5, 1, "", "unset_default_int_dtype"], [62, 5, 1, "", "unset_default_uint_dtype"], [62, 5, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultComplexDtype": [[62, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultDtype": [[62, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[62, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[62, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[62, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[63, 1, 1, "", "DefaultDevice"], [63, 1, 1, "", "Profiler"], [63, 5, 1, "", "as_ivy_dev"], [63, 5, 1, "", "as_native_dev"], [63, 5, 1, "", "clear_cached_mem_on_dev"], [63, 5, 1, "", "default_device"], [63, 5, 1, "", "dev"], [63, 5, 1, "", "dev_util"], [63, 5, 1, "", "function_supported_devices"], [63, 5, 1, "", "function_unsupported_devices"], [63, 5, 1, "", "get_all_ivy_arrays_on_dev"], [63, 5, 1, "", "gpu_is_available"], [63, 5, 1, "", "num_cpu_cores"], [63, 5, 1, "", "num_gpus"], [63, 5, 1, "", "num_ivy_arrays_on_dev"], [63, 5, 1, "", "percent_used_mem_on_dev"], [63, 5, 1, "", "print_all_ivy_arrays_on_dev"], [63, 5, 1, "", "set_default_device"], [63, 5, 1, "", "set_split_factor"], [63, 5, 1, "", "split_factor"], [63, 5, 1, "", "split_func_call"], [63, 5, 1, "", "to_device"], [63, 5, 1, "", "total_mem_on_dev"], [63, 5, 1, "", "tpu_is_available"], [63, 5, 1, "", "unset_default_device"], [63, 5, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[63, 3, 1, "", "__enter__"], [63, 3, 1, "", "__exit__"], [63, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "start"], [63, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[64, 5, 1, "", "abs"], [64, 5, 1, "", "acos"], [64, 5, 1, "", "acosh"], [64, 5, 1, "", "add"], [64, 5, 1, "", "asin"], [64, 5, 1, "", "asinh"], [64, 5, 1, "", "atan"], [64, 5, 1, "", "atan2"], [64, 5, 1, "", "atanh"], [64, 5, 1, "", "bitwise_and"], [64, 5, 1, "", "bitwise_invert"], [64, 5, 1, "", "bitwise_left_shift"], [64, 5, 1, "", "bitwise_or"], [64, 5, 1, "", "bitwise_right_shift"], [64, 5, 1, "", "bitwise_xor"], [64, 5, 1, "", "ceil"], [64, 5, 1, "", "cos"], [64, 5, 1, "", "cosh"], [64, 5, 1, "", "deg2rad"], [64, 5, 1, "", "divide"], [64, 5, 1, "", "equal"], [64, 5, 1, "", "erf"], [64, 5, 1, "", "exp"], [64, 5, 1, "", "expm1"], [64, 5, 1, "", "floor"], [64, 5, 1, "", "floor_divide"], [64, 5, 1, "", "greater"], [64, 5, 1, "", "greater_equal"], [64, 5, 1, "", "isfinite"], [64, 5, 1, "", "isinf"], [64, 5, 1, "", "isnan"], [64, 5, 1, "", "isreal"], [64, 5, 1, "", "less"], [64, 5, 1, "", "less_equal"], [64, 5, 1, "", "log"], [64, 5, 1, "", "log10"], [64, 5, 1, "", "log1p"], [64, 5, 1, "", "log2"], [64, 5, 1, "", "logaddexp"], [64, 5, 1, "", "logical_and"], [64, 5, 1, "", "logical_not"], [64, 5, 1, "", "logical_or"], [64, 5, 1, "", "logical_xor"], [64, 5, 1, "", "maximum"], [64, 5, 1, "", "minimum"], [64, 5, 1, "", "multiply"], [64, 5, 1, "", "negative"], [64, 5, 1, "", "not_equal"], [64, 5, 1, "", "positive"], [64, 5, 1, "", "pow"], [64, 5, 1, "", "rad2deg"], [64, 5, 1, "", "reciprocal"], [64, 5, 1, "", "remainder"], [64, 5, 1, "", "round"], [64, 5, 1, "", "sign"], [64, 5, 1, "", "sin"], [64, 5, 1, "", "sinh"], [64, 5, 1, "", "sqrt"], [64, 5, 1, "", "square"], [64, 5, 1, "", "subtract"], [64, 5, 1, "", "tan"], [64, 5, 1, "", "tanh"], [64, 5, 1, "", "trunc"], [64, 5, 1, "", "trunc_divide"]], "ivy.functional.ivy.experimental": [[65, 1, 1, "", "NativeSparseArray"], [65, 1, 1, "", "Number"], [65, 1, 1, "", "SparseArray"], [65, 5, 1, "", "adaptive_avg_pool1d"], [65, 5, 1, "", "adaptive_avg_pool2d"], [65, 5, 1, "", "adjoint"], [65, 5, 1, "", "allclose"], [65, 5, 1, "", "angle"], [65, 5, 1, "", "atleast_1d"], [65, 5, 1, "", "atleast_2d"], [65, 5, 1, "", "atleast_3d"], [65, 5, 1, "", "avg_pool1d"], [65, 5, 1, "", "avg_pool2d"], [65, 5, 1, "", "avg_pool3d"], [65, 5, 1, "", "batch_norm"], [65, 5, 1, "", "bernoulli"], [65, 5, 1, "", "beta"], [65, 5, 1, "", "binarizer"], [65, 5, 1, "", "binary_cross_entropy_with_logits"], [65, 5, 1, "", "bincount"], [65, 5, 1, "", "bind_custom_gradient_function"], [65, 5, 1, "", "broadcast_shapes"], [65, 5, 1, "", "compute_weight_mat"], [65, 5, 1, "", "cond"], [65, 5, 1, "", "conj"], [65, 5, 1, "", "copysign"], [65, 5, 1, "", "corrcoef"], [65, 5, 1, "", "cos"], [65, 5, 1, "", "count_nonzero"], [65, 5, 1, "", "current_backend"], [65, 5, 1, "", "dct"], [65, 5, 1, "", "dft"], [65, 5, 1, "", "diagflat"], [65, 5, 1, "", "diff"], [65, 5, 1, "", "dirichlet"], [65, 5, 1, "", "dropout1d"], [65, 5, 1, "", "dropout3d"], [65, 5, 1, "", "dsplit"], [65, 5, 1, "", "dstack"], [65, 5, 1, "", "eig"], [65, 5, 1, "", "eigh_tridiagonal"], [65, 5, 1, "", "eigvals"], [65, 5, 1, "", "embedding"], [65, 5, 1, "", "exp2"], [65, 5, 1, "", "expand"], [65, 5, 1, "", "eye_like"], [65, 5, 1, "", "fft"], [65, 5, 1, "", "fix"], [65, 5, 1, "", "flatten"], [65, 5, 1, "", "fliplr"], [65, 5, 1, "", "flipud"], [65, 5, 1, "", "float_power"], [65, 5, 1, "", "fmax"], [65, 5, 1, "", "fmin"], [65, 5, 1, "", "fmod"], [65, 5, 1, "", "frexp"], [65, 5, 1, "", "gamma"], [65, 5, 1, "", "gcd"], [65, 5, 1, "", "gradient"], [65, 5, 1, "", "hamming_window"], [65, 5, 1, "", "handle_array_function"], [65, 5, 1, "", "handle_array_like_without_promotion"], [65, 5, 1, "", "handle_exceptions"], [65, 5, 1, "", "handle_nestable"], [65, 5, 1, "", "handle_out_argument"], [65, 5, 1, "", "handle_view"], [65, 5, 1, "", "hann_window"], [65, 5, 1, "", "heaviside"], [65, 5, 1, "", "hsplit"], [65, 5, 1, "", "hstack"], [65, 5, 1, "", "hypot"], [65, 5, 1, "", "i0"], [65, 5, 1, "", "ifft"], [65, 5, 1, "", "imag"], [65, 5, 1, "", "infer_device"], [65, 5, 1, "", "infer_dtype"], [65, 5, 1, "", "inputs_to_native_arrays"], [65, 5, 1, "", "instance_norm"], [65, 5, 1, "", "integer_arrays_to_float"], [65, 5, 1, "", "interp"], [65, 5, 1, "", "interpolate"], [65, 5, 1, "", "is_ivy_sparse_array"], [65, 5, 1, "", "is_native_dtype"], [65, 5, 1, "", "is_native_sparse_array"], [65, 5, 1, "", "isclose"], [65, 5, 1, "", "isin"], [65, 5, 1, "", "kaiser_bessel_derived_window"], [65, 5, 1, "", "kaiser_window"], [65, 5, 1, "", "kron"], [65, 5, 1, "", "l2_normalize"], [65, 5, 1, "", "lcm"], [65, 5, 1, "", "ldexp"], [65, 5, 1, "", "lexsort"], [65, 5, 1, "", "logaddexp2"], [65, 5, 1, "", "logit"], [65, 5, 1, "", "logsigmoid"], [65, 5, 1, "", "lp_normalize"], [65, 5, 1, "", "matrix_exp"], [65, 5, 1, "", "max_pool1d"], [65, 5, 1, "", "max_pool2d"], [65, 5, 1, "", "max_pool3d"], [65, 5, 1, "", "median"], [65, 5, 1, "", "moveaxis"], [65, 5, 1, "", "msort"], [65, 5, 1, "", "multi_dot"], [65, 5, 1, "", "nan_to_num"], [65, 5, 1, "", "nanmean"], [65, 5, 1, "", "nanmedian"], [65, 5, 1, "", "nansum"], [65, 5, 1, "", "native_sparse_array"], [65, 5, 1, "", "native_sparse_array_to_indices_values_and_shape"], [65, 5, 1, "", "ndenumerate"], [65, 5, 1, "", "ndindex"], [65, 5, 1, "", "nextafter"], [65, 5, 1, "", "outputs_to_ivy_arrays"], [65, 5, 1, "", "pad"], [65, 5, 1, "", "poisson"], [65, 5, 1, "", "prelu"], [65, 5, 1, "", "quantile"], [65, 5, 1, "", "real"], [65, 5, 1, "", "relu6"], [65, 5, 1, "", "rot90"], [65, 5, 1, "", "signbit"], [65, 5, 1, "", "sinc"], [65, 5, 1, "", "sqrt"], [65, 5, 1, "", "take_along_axis"], [65, 5, 1, "", "thresholded_relu"], [65, 5, 1, "", "to_native_arrays_and_back"], [65, 5, 1, "", "top_k"], [65, 5, 1, "", "trapz"], [65, 5, 1, "", "tril_indices"], [65, 5, 1, "", "triu_indices"], [65, 5, 1, "", "unravel_index"], [65, 5, 1, "", "vorbis_window"], [65, 5, 1, "", "vsplit"], [65, 5, 1, "", "vstack"], [65, 5, 1, "", "xlogy"], [65, 5, 1, "", "zeta"]], "ivy.functional.ivy.experimental.SparseArray": [[65, 3, 1, "", "__init__"], [65, 4, 1, "", "ccol_indices"], [65, 4, 1, "", "col_indices"], [65, 4, 1, "", "coo_indices"], [65, 4, 1, "", "crow_indices"], [65, 4, 1, "", "data"], [65, 4, 1, "", "dense_shape"], [65, 4, 1, "", "row_indices"], [65, 3, 1, "", "to_dense_array"], [65, 4, 1, "", "values"]], "ivy.functional.ivy.general": [[66, 1, 1, "", "ArrayMode"], [66, 5, 1, "", "all_equal"], [66, 5, 1, "", "arg_info"], [66, 5, 1, "", "arg_names"], [66, 5, 1, "", "array_equal"], [66, 5, 1, "", "assert_supports_inplace"], [66, 5, 1, "", "cache_fn"], [66, 5, 1, "", "clip_matrix_norm"], [66, 5, 1, "", "clip_vector_norm"], [66, 5, 1, "", "container_types"], [66, 5, 1, "", "current_backend_str"], [66, 5, 1, "", "default"], [66, 5, 1, "", "einops_rearrange"], [66, 5, 1, "", "einops_reduce"], [66, 5, 1, "", "einops_repeat"], [66, 5, 1, "", "exists"], [66, 5, 1, "", "fourier_encode"], [66, 5, 1, "", "function_supported_devices_and_dtypes"], [66, 5, 1, "", "function_unsupported_devices_and_dtypes"], [66, 5, 1, "", "gather"], [66, 5, 1, "", "gather_nd"], [66, 5, 1, "", "get_all_arrays_in_memory"], [66, 5, 1, "", "get_array_mode"], [66, 5, 1, "", "get_exception_trace_mode"], [66, 5, 1, "", "get_item"], [66, 5, 1, "", "get_min_base"], [66, 5, 1, "", "get_min_denominator"], [66, 5, 1, "", "get_nestable_mode"], [66, 5, 1, "", "get_num_dims"], [66, 5, 1, "", "get_queue_timeout"], [66, 5, 1, "", "get_referrers_recursive"], [66, 5, 1, "", "get_show_func_wrapper_trace_mode"], [66, 5, 1, "", "get_tmp_dir"], [66, 5, 1, "", "has_nans"], [66, 5, 1, "", "inplace_arrays_supported"], [66, 5, 1, "", "inplace_decrement"], [66, 5, 1, "", "inplace_increment"], [66, 5, 1, "", "inplace_update"], [66, 5, 1, "", "inplace_variables_supported"], [66, 5, 1, "", "is_array"], [66, 5, 1, "", "is_ivy_array"], [66, 5, 1, "", "is_ivy_container"], [66, 5, 1, "", "is_native_array"], [66, 5, 1, "", "isscalar"], [66, 5, 1, "", "match_kwargs"], [66, 5, 1, "", "multiprocessing"], [66, 5, 1, "", "num_arrays_in_memory"], [66, 5, 1, "", "print_all_arrays_in_memory"], [66, 5, 1, "", "scatter_flat"], [66, 5, 1, "", "scatter_nd"], [66, 5, 1, "", "set_array_mode"], [66, 5, 1, "", "set_exception_trace_mode"], [66, 5, 1, "", "set_min_base"], [66, 5, 1, "", "set_min_denominator"], [66, 5, 1, "", "set_nestable_mode"], [66, 5, 1, "", "set_queue_timeout"], [66, 5, 1, "", "set_shape_array_mode"], [66, 5, 1, "", "set_show_func_wrapper_trace_mode"], [66, 5, 1, "", "set_tmp_dir"], [66, 5, 1, "", "shape"], [66, 5, 1, "", "shape_array_mode"], [66, 5, 1, "", "stable_divide"], [66, 5, 1, "", "stable_pow"], [66, 5, 1, "", "supports_inplace_updates"], [66, 5, 1, "", "to_ivy_shape"], [66, 5, 1, "", "to_list"], [66, 5, 1, "", "to_native_shape"], [66, 5, 1, "", "to_numpy"], [66, 5, 1, "", "to_scalar"], [66, 5, 1, "", "try_else_none"], [66, 5, 1, "", "unset_array_mode"], [66, 5, 1, "", "unset_exception_trace_mode"], [66, 5, 1, "", "unset_nestable_mode"], [66, 5, 1, "", "unset_queue_timeout"], [66, 5, 1, "", "unset_shape_array_mode"], [66, 5, 1, "", "unset_show_func_wrapper_trace_mode"], [66, 5, 1, "", "value_is_nan"], [66, 5, 1, "", "vmap"]], "ivy.functional.ivy.general.ArrayMode": [[66, 3, 1, "", "__init__"]], "ivy.functional.ivy.gradients": [[67, 1, 1, "", "GradientTracking"], [67, 5, 1, "", "adam_step"], [67, 5, 1, "", "adam_update"], [67, 5, 1, "", "execute_with_gradients"], [67, 5, 1, "", "grad"], [67, 5, 1, "", "gradient_descent_update"], [67, 5, 1, "", "jac"], [67, 5, 1, "", "lamb_update"], [67, 5, 1, "", "lars_update"], [67, 5, 1, "", "optimizer_update"], [67, 5, 1, "", "set_with_grads"], [67, 5, 1, "", "stop_gradient"], [67, 5, 1, "", "unset_with_grads"], [67, 5, 1, "", "value_and_grad"], [67, 5, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[67, 3, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[68, 5, 1, "", "conv"], [68, 5, 1, "", "conv1d"], [68, 5, 1, "", "conv1d_transpose"], [68, 5, 1, "", "conv2d"], [68, 5, 1, "", "conv2d_transpose"], [68, 5, 1, "", "conv3d"], [68, 5, 1, "", "conv3d_transpose"], [68, 5, 1, "", "conv_general_dilated"], [68, 5, 1, "", "conv_general_transpose"], [68, 5, 1, "", "depthwise_conv2d"], [68, 5, 1, "", "dropout"], [68, 5, 1, "", "linear"], [68, 5, 1, "", "lstm_update"], [68, 5, 1, "", "multi_head_attention"], [68, 5, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[69, 5, 1, "", "cholesky"], [69, 5, 1, "", "cross"], [69, 5, 1, "", "det"], [69, 5, 1, "", "diag"], [69, 5, 1, "", "diagonal"], [69, 5, 1, "", "eig"], [69, 5, 1, "", "eigh"], [69, 5, 1, "", "eigvalsh"], [69, 5, 1, "", "inner"], [69, 5, 1, "", "inv"], [69, 5, 1, "", "lu_factor"], [69, 5, 1, "", "matmul"], [69, 5, 1, "", "matrix_norm"], [69, 5, 1, "", "matrix_power"], [69, 5, 1, "", "matrix_rank"], [69, 5, 1, "", "matrix_transpose"], [69, 5, 1, "", "outer"], [69, 5, 1, "", "pinv"], [69, 5, 1, "", "qr"], [69, 5, 1, "", "slogdet"], [69, 5, 1, "", "solve"], [69, 5, 1, "", "svd"], [69, 5, 1, "", "svdvals"], [69, 5, 1, "", "tensordot"], [69, 5, 1, "", "tensorsolve"], [69, 5, 1, "", "trace"], [69, 5, 1, "", "vander"], [69, 5, 1, "", "vecdot"], [69, 5, 1, "", "vector_norm"], [69, 5, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[70, 5, 1, "", "binary_cross_entropy"], [70, 5, 1, "", "cross_entropy"], [70, 5, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[71, 5, 1, "", "clip"], [71, 5, 1, "", "concat"], [71, 5, 1, "", "constant_pad"], [71, 5, 1, "", "expand_dims"], [71, 5, 1, "", "flip"], [71, 5, 1, "", "permute_dims"], [71, 5, 1, "", "repeat"], [71, 5, 1, "", "reshape"], [71, 5, 1, "", "roll"], [71, 5, 1, "", "split"], [71, 5, 1, "", "squeeze"], [71, 5, 1, "", "stack"], [71, 5, 1, "", "swapaxes"], [71, 5, 1, "", "tile"], [71, 5, 1, "", "unstack"], [71, 5, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[72, 5, 1, "", "fomaml_step"], [72, 5, 1, "", "maml_step"], [72, 5, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[73, 5, 1, "", "all_nested_indices"], [73, 5, 1, "", "copy_nest"], [73, 5, 1, "", "duplicate_array_index_chains"], [73, 5, 1, "", "index_nest"], [73, 5, 1, "", "insert_into_nest_at_index"], [73, 5, 1, "", "insert_into_nest_at_indices"], [73, 5, 1, "", "map"], [73, 5, 1, "", "map_nest_at_index"], [73, 5, 1, "", "map_nest_at_indices"], [73, 5, 1, "", "multi_index_nest"], [73, 5, 1, "", "nested_any"], [73, 5, 1, "", "nested_argwhere"], [73, 5, 1, "", "nested_map"], [73, 5, 1, "", "nested_multi_map"], [73, 5, 1, "", "prune_empty"], [73, 5, 1, "", "prune_nest_at_index"], [73, 5, 1, "", "prune_nest_at_indices"], [73, 5, 1, "", "set_nest_at_index"], [73, 5, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[74, 5, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[75, 5, 1, "", "multinomial"], [75, 5, 1, "", "randint"], [75, 5, 1, "", "random_normal"], [75, 5, 1, "", "random_uniform"], [75, 5, 1, "", "seed"], [75, 5, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[76, 5, 1, "", "argmax"], [76, 5, 1, "", "argmin"], [76, 5, 1, "", "argwhere"], [76, 5, 1, "", "nonzero"], [76, 5, 1, "", "where"]], "ivy.functional.ivy.set": [[77, 5, 1, "", "unique_all"], [77, 5, 1, "", "unique_counts"], [77, 5, 1, "", "unique_inverse"], [77, 5, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[78, 5, 1, "", "argsort"], [78, 5, 1, "", "searchsorted"], [78, 5, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[79, 5, 1, "", "cumprod"], [79, 5, 1, "", "cumsum"], [79, 5, 1, "", "einsum"], [79, 5, 1, "", "max"], [79, 5, 1, "", "mean"], [79, 5, 1, "", "min"], [79, 5, 1, "", "prod"], [79, 5, 1, "", "std"], [79, 5, 1, "", "sum"], [79, 5, 1, "", "var"]], "ivy.functional.ivy.utility": [[80, 5, 1, "", "all"], [80, 5, 1, "", "any"]], "ivy.nested_array": [[82, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[82, 1, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[82, 3, 1, "", "__init__"], [82, 4, 1, "", "data"], [82, 4, 1, "", "device"], [82, 4, 1, "", "dtype"], [82, 3, 1, "", "from_row_lengths"], [82, 3, 1, "", "from_row_split"], [82, 4, 1, "", "ndim"], [82, 3, 1, "", "nested_array"], [82, 3, 1, "", "reshape"], [82, 4, 1, "", "shape"], [82, 3, 1, "", "unbind"]], "ivy.stateful": [[48, 0, 0, "-", "activations"], [49, 0, 0, "-", "converters"], [50, 0, 0, "-", "helpers"], [51, 0, 0, "-", "initializers"], [52, 0, 0, "-", "layers"], [53, 0, 0, "-", "module"], [54, 0, 0, "-", "norms"], [55, 0, 0, "-", "optimizers"], [56, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[48, 1, 1, "", "GEGLU"], [48, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[48, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[48, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[49, 1, 1, "", "ModuleConverters"], [49, 5, 1, "", "to_ivy_module"]], "ivy.stateful.converters.ModuleConverters": [[49, 3, 1, "", "from_haiku_module"], [49, 3, 1, "", "from_keras_module"], [49, 3, 1, "", "from_torch_module"]], "ivy.stateful.helpers": [[50, 1, 1, "", "ModuleHelpers"]], "ivy.stateful.helpers.ModuleHelpers": [[50, 3, 1, "", "check_submod_rets"], [50, 3, 1, "", "get_mod_key"], [50, 3, 1, "", "mod_depth"], [50, 3, 1, "", "mod_height"], [50, 3, 1, "", "mod_with_top_mod_key_chain"], [50, 3, 1, "", "show_mod_in_top_mod"], [50, 3, 1, "", "show_structure"], [50, 3, 1, "", "show_v_in_top_v"], [50, 3, 1, "", "sub_mods"], [50, 3, 1, "", "track_submod_call_order"], [50, 3, 1, "", "track_submod_rets"], [50, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.initializers": [[51, 1, 1, "", "Constant"], [51, 1, 1, "", "FirstLayerSiren"], [51, 1, 1, "", "GlorotUniform"], [51, 1, 1, "", "Initializer"], [51, 1, 1, "", "KaimingNormal"], [51, 1, 1, "", "Ones"], [51, 1, 1, "", "Siren"], [51, 1, 1, "", "Uniform"], [51, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[51, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[51, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Initializer": [[51, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.KaimingNormal": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[51, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[51, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[51, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[52, 1, 1, "", "Conv1D"], [52, 1, 1, "", "Conv1DTranspose"], [52, 1, 1, "", "Conv2D"], [52, 1, 1, "", "Conv2DTranspose"], [52, 1, 1, "", "Conv3D"], [52, 1, 1, "", "Conv3DTranspose"], [52, 1, 1, "", "DepthwiseConv2D"], [52, 1, 1, "", "Dropout"], [52, 1, 1, "", "LSTM"], [52, 1, 1, "", "Linear"], [52, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[52, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[52, 3, 1, "", "__init__"]], "ivy.stateful.module": [[53, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "build"], [53, 4, 1, "", "build_mode"], [53, 4, 1, "", "built_"], [53, 3, 1, "", "compile"], [53, 3, 1, "", "save_weights"], [53, 3, 1, "", "show_graph"]], "ivy.stateful.norms": [[54, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[54, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[55, 1, 1, "", "Adam"], [55, 1, 1, "", "LAMB"], [55, 1, 1, "", "LARS"], [55, 1, 1, "", "Optimizer"], [55, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "set_state"], [55, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "set_state"], [55, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "set_state"], [55, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "set_state"], [55, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "set_state"], [55, 4, 1, "", "state"]], "ivy.stateful.sequential": [[56, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[56, 3, 1, "", "__init__"]], "ivy.utils": [[93, 0, 0, "-", "assertions"], [94, 0, 0, "-", "backend"], [95, 0, 0, "-", "dynamic_import"], [96, 0, 0, "-", "exceptions"], [97, 0, 0, "-", "inspection"], [98, 0, 0, "-", "verbosity"]], "ivy.utils.assertions": [[93, 5, 1, "", "check_all"], [93, 5, 1, "", "check_all_or_any_fn"], [93, 5, 1, "", "check_any"], [93, 5, 1, "", "check_dimensions"], [93, 5, 1, "", "check_elem_in_list"], [93, 5, 1, "", "check_equal"], [93, 5, 1, "", "check_exists"], [93, 5, 1, "", "check_false"], [93, 5, 1, "", "check_fill_value_and_dtype_are_compatible"], [93, 5, 1, "", "check_gather_input_valid"], [93, 5, 1, "", "check_gather_nd_input_valid"], [93, 5, 1, "", "check_greater"], [93, 5, 1, "", "check_inplace_sizes_valid"], [93, 5, 1, "", "check_isinstance"], [93, 5, 1, "", "check_kernel_padding_size"], [93, 5, 1, "", "check_less"], [93, 5, 1, "", "check_one_way_broadcastable"], [93, 5, 1, "", "check_same_dtype"], [93, 5, 1, "", "check_shape"], [93, 5, 1, "", "check_shapes_broadcastable"], [93, 5, 1, "", "check_true"]], "ivy.utils.dynamic_import": [[95, 5, 1, "", "import_module"]], "ivy.utils.exceptions": [[96, 7, 1, "", "IvyBackendException"], [96, 7, 1, "", "IvyError"], [96, 7, 1, "", "IvyException"], [96, 7, 1, "", "IvyNotImplementedException"], [96, 5, 1, "", "handle_exceptions"]], "ivy.utils.exceptions.IvyBackendException": [[96, 3, 1, "", "__init__"]], "ivy.utils.exceptions.IvyError": [[96, 3, 1, "", "__init__"]], "ivy.utils.exceptions.IvyException": [[96, 3, 1, "", "__init__"]], "ivy.utils.exceptions.IvyNotImplementedException": [[96, 3, 1, "", "__init__"]], "ivy.utils.inspection": [[97, 5, 1, "", "add_array_specs"], [97, 5, 1, "", "fn_array_spec"]], "ivy.utils.verbosity": [[98, 5, 1, "", "cprint"]], "ivy_tests.test_ivy.helpers": [[83, 0, 0, "-", "assertions"], [84, 0, 0, "-", "available_frameworks"], [85, 0, 0, "-", "function_testing"], [86, 0, 0, "-", "globals"], [87, 0, 0, "-", "hypothesis_helpers"], [88, 0, 0, "-", "structs"], [89, 0, 0, "-", "test_parameter_flags"], [90, 0, 0, "-", "testing_helpers"]], "ivy_tests.test_ivy.helpers.assertions": [[83, 5, 1, "", "assert_all_close"], [83, 5, 1, "", "assert_same_type_and_shape"], [83, 5, 1, "", "check_unsupported_device"], [83, 5, 1, "", "check_unsupported_device_and_dtype"], [83, 5, 1, "", "check_unsupported_dtype"], [83, 5, 1, "", "test_unsupported_function"], [83, 5, 1, "", "value_test"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[84, 5, 1, "", "available_frameworks"], [84, 5, 1, "", "ground_truth"]], "ivy_tests.test_ivy.helpers.function_testing": [[85, 5, 1, "", "args_to_container"], [85, 5, 1, "", "as_lists"], [85, 5, 1, "", "compiled_if_required"], [85, 5, 1, "", "convtrue"], [85, 5, 1, "", "create_args_kwargs"], [85, 5, 1, "", "empty_func"], [85, 5, 1, "", "flatten"], [85, 5, 1, "", "flatten_and_to_np"], [85, 5, 1, "", "flatten_fw_and_to_np"], [85, 5, 1, "", "framework_comparator"], [85, 5, 1, "", "get_frontend_ret"], [85, 5, 1, "", "get_ret_and_flattened_np_array"], [85, 5, 1, "", "gradient_incompatible_function"], [85, 5, 1, "", "gradient_test"], [85, 5, 1, "", "gradient_unsupported_dtypes"], [85, 5, 1, "", "kwargs_to_args_n_kwargs"], [85, 5, 1, "", "make_json_pickable"], [85, 5, 1, "", "test_frontend_function"], [85, 5, 1, "", "test_frontend_method"], [85, 5, 1, "", "test_function"], [85, 5, 1, "", "test_method"], [85, 5, 1, "", "var_fn"]], "ivy_tests.test_ivy.helpers.globals": [[86, 7, 1, "", "InterruptedTest"], [86, 1, 1, "", "TestData"], [86, 5, 1, "", "remove_all_current_framework"], [86, 5, 1, "", "setup_api_test"], [86, 5, 1, "", "setup_frontend_test"], [86, 5, 1, "", "teardown_api_test"], [86, 5, 1, "", "teardown_frontend_test"]], "ivy_tests.test_ivy.helpers.globals.InterruptedTest": [[86, 3, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.globals.TestData": [[86, 3, 1, "", "__init__"], [86, 2, 1, "", "fn_name"], [86, 2, 1, "", "fn_tree"], [86, 2, 1, "", "is_method"], [86, 2, 1, "", "supported_device_dtypes"], [86, 2, 1, "", "test_fn"]], "ivy_tests.test_ivy.helpers.structs": [[88, 1, 1, "", "FrontendMethodData"]], "ivy_tests.test_ivy.helpers.structs.FrontendMethodData": [[88, 3, 1, "", "__init__"], [88, 2, 1, "", "framework_init_module"], [88, 2, 1, "", "init_name"], [88, 2, 1, "", "ivy_init_module"], [88, 2, 1, "", "method_name"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[89, 1, 1, "", "FrontendFunctionTestFlags"], [89, 1, 1, "", "FrontendMethodTestFlags"], [89, 1, 1, "", "FunctionTestFlags"], [89, 1, 1, "", "InitMethodTestFlags"], [89, 1, 1, "", "MethodTestFlags"], [89, 1, 1, "", "TestFlags"], [89, 5, 1, "", "as_cont"], [89, 5, 1, "", "build_flag"], [89, 5, 1, "", "frontend_function_flags"], [89, 5, 1, "", "frontend_method_flags"], [89, 5, 1, "", "function_flags"], [89, 5, 1, "", "init_method_flags"], [89, 5, 1, "", "method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.TestFlags": [[89, 3, 1, "", "apply_flags"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[90, 5, 1, "", "handle_frontend_method"], [90, 5, 1, "", "handle_frontend_test"], [90, 5, 1, "", "handle_method"], [90, 5, 1, "", "handle_test"], [90, 5, 1, "", "num_positional_args"], [90, 5, 1, "", "num_positional_args_method"], [90, 5, 1, "", "seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"activ": [0, 22, 48, 58], "convers": [1, 24], "creation": [2, 25, 61], "data": [3, 26, 62, 77, 117, 127, 129, 136, 141], "type": [3, 26, 62, 117, 124, 127, 141], "devic": [4, 27, 63, 118, 123, 127], "elementwis": [5, 28, 64], "experiment": [6, 29, 65, 108, 110], "gener": [7, 30, 66, 129, 131], "gradient": [8, 31, 67], "imag": [9, 32], "layer": [10, 33, 52, 68], "linear": [11, 34, 69], "algebra": [11, 34, 69], "loss": [12, 35, 70], "manipul": [13, 36, 71], "norm": [14, 37, 54, 74], "random": [15, 38, 75], "search": [16, 39, 76], "set": [17, 40, 77, 99, 109, 114], "sort": [18, 41, 78], "statist": [19, 42, 79], "util": [20, 43, 80, 92], "wrap": [21, 44, 125], "base": 23, "arrai": [45, 82, 102, 112, 113, 116, 123, 135, 144], "contain": [46, 110, 115, 136], "state": [47, 137, 141], "convert": [49, 138], "helper": [50, 87, 90, 91, 128, 129, 130], "initi": [51, 137], "modul": [53, 117, 118, 137], "optim": [55, 137], "sequenti": 56, "ivi": [57, 99, 105, 108, 110, 113, 116, 119, 121, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 153], "constant": 59, "control": [60, 141], "flow": [60, 141], "op": 60, "note": 61, "paramet": [66, 89], "meta": 72, "nest": [73, 82], "depend": 77, "output": 77, "shape": [77, 141], "nested_arrai": 81, "assert": [83, 93, 121], "avail": 84, "framework": [84, 99, 134, 147, 150, 153, 154], "function": [85, 108, 115, 117, 118, 121, 123, 124, 125, 127, 128, 129, 130, 133, 138, 141], "test": [85, 89, 90, 109, 110, 112, 116, 128, 129], "global": 86, "hypothesi": [87, 109, 128, 129], "struct": 88, "flag": 89, "backend": [94, 114, 117, 130, 133, 141], "dynam": [95, 141], "import": 95, "except": [96, 121], "inspect": 97, "verbos": 98, "content": 99, "transpil": [99, 138], "when": [99, 131], "should": 99, "i": [99, 131], "us": [99, 106, 109, 112, 128, 136], "up": [99, 109], "instal": 99, "pip": 99, "docker": [99, 106, 109, 110], "from": 99, "sourc": 99, "document": [99, 106], "exampl": [99, 105, 119, 123, 128, 131], "contribut": [99, 104], "commun": 99, "citat": 99, "background": 100, "ml": [101, 149, 153], "explos": 101, "standard": [102, 131, 144, 153], "skeptic": 102, "complimentari": 102, "v": [102, 141], "competit": 102, "do": [102, 129], "work": [102, 106, 143], "The": [102, 110, 127, 135, 141], "api": [102, 108, 110, 112, 115, 116, 130, 133, 135, 137, 138, 144, 151, 153], "why": [103, 129], "unifi": [103, 135, 149, 153], "No": [103, 109], "more": [103, 109, 131], "re": [103, 129], "implement": [103, 116], "infinit": 103, "shelf": 103, "life": 103, "appli": [105, 140], "librari": [105, 140], "introduct": [105, 127, 128], "robot": [105, 140], "build": [106, 133], "doc": 106, "dockerless": 106, "miniconda": [106, 109], "venv": [106, 109], "pipelin": [106, 116, 129, 141], "make_doc": 106, "sh": 106, "entrypoint": 106, "_make_doc": 106, "generate_src_rst_fil": 106, "py": 106, "sphinx": 106, "correct_built_html_fil": 106, "remove_fil": 106, "help": [107, 110], "resourc": 107, "open": 108, "task": 108, "format": [108, 122, 146, 153], "checklist": 108, "frontend": [108, 114, 127, 128, 138], "where": 108, "place": 108, "fork": [109, 110], "clone": [109, 116], "repo": 109, "pycharm": [109, 110], "virtual": 109, "environ": 109, "interpret": 109, "window": 109, "maco": 109, "ubuntu": 109, "detail": 109, "log": 109, "free": 109, "github": 109, "codespac": 109, "pre": [109, 122], "commit": [109, 110, 116, 122], "basic": [110, 127], "get": 110, "todo": 110, "list": 110, "issu": 110, "manag": 110, "your": [110, 129], "who": 110, "To": 110, "ask": 110, "With": 110, "command": 110, "line": 110, "browser": 110, "pull": [110, 116], "request": [110, 116], "small": 110, "often": 110, "interact": 110, "run": [110, 112, 129], "local": 110, "most": 110, "out": [110, 123, 126], "id": [110, 112], "deep": 111, "dive": 111, "termin": 112, "regener": 112, "failur": 112, "skip": 112, "nativ": 113, "handl": [113, 121, 141], "integr": [113, 116, 129], "custom": [113, 136, 141], "class": [113, 121, 127, 135], "version": [114, 130, 141], "support": [114, 117, 127, 141], "instanc": [115, 127, 128, 135], "method": [115, 127, 128, 135, 136], "static": 115, "special": [115, 127], "nestabl": [115, 123, 124], "continu": 116, "push": 116, "pr": 116, "trigger": 116, "A": [116, 131], "top": 116, "down": 116, "view": 116, "store": 116, "retriev": 116, "map": 116, "repositori": 116, "nitti": 116, "gritti": 116, "storag": 116, "space": 116, "unifyai": 116, "determin": 116, "coverag": 116, "workflow": 116, "multipl": 116, "runner": 116, "race": 116, "condit": 116, "period": 116, "manual": 116, "dispatch": 116, "ci": 116, "dashboard": 116, "promot": [117, 127], "argument": [117, 118, 123, 126, 127], "other": [117, 118], "unsupport": 117, "bug": 117, "superset": [117, 131], "docstr": [119, 120], "tan": [119, 128], "roll": 119, "add": [119, 128, 153], "configur": [121, 136], "mode": 121, "stack": 121, "trace": 121, "func_wrapp": 121, "prune": 121, "handle_except": 121, "decor": [121, 129], "lint": 122, "check": [122, 141], "hook": 122, "posit": 123, "keyword": 123, "input": 123, "dtype": 123, "number": 123, "oper": [123, 135, 141], "integ": 123, "sequenc": 123, "primari": 124, "composit": [124, 127], "mix": 124, "standalon": 124, "conveni": 124, "inplac": 126, "updat": 126, "copi": 126, "unus": 127, "miss": 127, "temporari": 127, "rule": 127, "numpi": [127, 147], "cast": 127, "duplic": [127, 131], "polici": 127, "full": 128, "without": 128, "valu": 128, "alia": 128, "write": 129, "own": 129, "strategi": 129, "we": 129, "need": 129, "how": 129, "effect": 129, "bonu": 129, "extend": [129, 131], "featur": 129, "self": 129, "consist": 129, "explicit": 129, "test_array_funct": 129, "fail": 129, "navig": 130, "code": 130, "categor": 130, "submodul": 130, "design": [130, 132], "pin": 130, "behaviour": 131, "what": [131, 153], "non": 131, "too": 131, "much": 131, "balanc": 131, "effici": 131, "block": 133, "handler": 133, "graph": [133, 138, 148, 153], "compil": [133, 138, 145, 150, 152, 153], "monkei": 135, "patch": 135, "construct": 136, "represent": 136, "recurs": 136, "built": 136, "ins": 136, "access": 136, "save": 136, "load": 136, "comparison": 136, "case": 136, "compartment": 136, "network": [136, 138], "weight": 136, "role": 138, "model": [138, 141], "extens": 139, "mechan": 140, "vision": 140, "gym": 140, "memori": 140, "faq": 141, "maintain": 141, "size": 141, "gpu": 141, "deploy": 141, "auto": 141, "differenti": 141, "replica": 141, "parallel": 141, "altern": 141, "structur": 141, "glossari": 142, "relat": 143, "infrastructur": [145, 153], "llvm": 145, "mlir": 145, "oneapi": 145, "exchang": [146, 153], "onnx": 146, "nnef": 146, "coreml": 146, "matlab": 147, "scipi": 147, "torch": [147, 148], "scikit": 147, "learn": 147, "theano": 147, "panda": 147, "julia": 147, "apach": [147, 150], "spark": 147, "mllib": 147, "caff": 147, "chainer": 147, "tensorflow": 147, "1": 147, "mxnet": 147, "cntk": 147, "pytorch": 147, "flux": 147, "jax": 147, "2": 147, "dex": 147, "languag": 147, "tracer": [148, 153], "tf": 148, "jaxpr": 148, "jit": 148, "fx": 148, "compani": [149, 153], "quansight": 149, "modular": 149, "octoml": 149, "multi": [150, 153], "vendor": [150, 151, 152, 153], "tvm": 150, "xla": 150, "gcc": 150, "specif": [151, 152, 153], "tensorrt": 151, "cuda": 151, "icc": 152, "icx": 152, "nvcc": 152, "doe": 153, "wrapper": [153, 154], "eagerpi": 154, "kera": 154, "thinc": 154, "tensorli": 154, "neuropod": 154}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Activations": [[0, "module-ivy.data_classes.array.activations"], [22, "module-ivy.data_classes.container.activations"], [48, "module-ivy.stateful.activations"], [58, "module-ivy.functional.ivy.activations"]], "Conversions": [[1, "module-ivy.data_classes.array.conversions"], [24, "module-ivy.data_classes.container.conversions"]], "Creation": [[2, "module-ivy.data_classes.array.creation"], [25, "module-ivy.data_classes.container.creation"], [61, "module-ivy.functional.ivy.creation"]], "Data type": [[3, "module-ivy.data_classes.array.data_type"], [26, "module-ivy.data_classes.container.data_type"], [62, "module-ivy.functional.ivy.data_type"]], "Device": [[4, "module-ivy.data_classes.array.device"], [27, "module-ivy.data_classes.container.device"], [63, "module-ivy.functional.ivy.device"]], "Elementwise": [[5, "module-ivy.data_classes.array.elementwise"], [28, "module-ivy.data_classes.container.elementwise"], [64, "module-ivy.functional.ivy.elementwise"]], "Experimental": [[6, "module-ivy.data_classes.array.experimental"], [29, "module-ivy.data_classes.container.experimental"], [65, "module-ivy.functional.ivy.experimental"]], "General": [[7, "module-ivy.data_classes.array.general"], [30, "module-ivy.data_classes.container.general"], [66, "module-ivy.functional.ivy.general"]], "Gradients": [[8, "module-ivy.data_classes.array.gradients"], [31, "module-ivy.data_classes.container.gradients"], [67, "module-ivy.functional.ivy.gradients"]], "Image": [[9, "module-ivy.data_classes.array.image"], [32, "module-ivy.data_classes.container.image"]], "Layers": [[10, "module-ivy.data_classes.array.layers"], [33, "module-ivy.data_classes.container.layers"], [52, "module-ivy.stateful.layers"], [68, "module-ivy.functional.ivy.layers"]], "Linear algebra": [[11, "module-ivy.data_classes.array.linear_algebra"], [34, "module-ivy.data_classes.container.linear_algebra"], [69, "module-ivy.functional.ivy.linear_algebra"]], "Losses": [[12, "module-ivy.data_classes.array.losses"], [35, "module-ivy.data_classes.container.losses"], [70, "module-ivy.functional.ivy.losses"]], "Manipulation": [[13, "module-ivy.data_classes.array.manipulation"], [36, "module-ivy.data_classes.container.manipulation"], [71, "module-ivy.functional.ivy.manipulation"]], "Norms": [[14, "module-ivy.data_classes.array.norms"], [37, "module-ivy.data_classes.container.norms"], [54, "module-ivy.stateful.norms"], [74, "module-ivy.functional.ivy.norms"]], "Random": [[15, "module-ivy.data_classes.array.random"], [38, "module-ivy.data_classes.container.random"], [75, "module-ivy.functional.ivy.random"]], "Searching": [[16, "module-ivy.data_classes.array.searching"], [39, "module-ivy.data_classes.container.searching"], [76, "module-ivy.functional.ivy.searching"]], "Set": [[17, "module-ivy.data_classes.array.set"], [40, "module-ivy.data_classes.container.set"], [77, "module-ivy.functional.ivy.set"]], "Sorting": [[18, "module-ivy.data_classes.array.sorting"], [41, "module-ivy.data_classes.container.sorting"], [78, "module-ivy.functional.ivy.sorting"]], "Statistical": [[19, "module-ivy.data_classes.array.statistical"], [42, "module-ivy.data_classes.container.statistical"], [79, "module-ivy.functional.ivy.statistical"]], "Utility": [[20, "module-ivy.data_classes.array.utility"], [43, "module-ivy.data_classes.container.utility"], [80, "module-ivy.functional.ivy.utility"]], "Wrapping": [[21, "module-ivy.data_classes.array.wrapping"], [44, "module-ivy.data_classes.container.wrapping"]], "Base": [[23, "module-ivy.data_classes.container.base"]], "Array": [[45, "array"]], "Container": [[46, "container"]], "stateful": [[47, "stateful"]], "Converters": [[49, "module-ivy.stateful.converters"]], "Helpers": [[50, "module-ivy.stateful.helpers"]], "Initializers": [[51, "module-ivy.stateful.initializers"], [137, "initializers"]], "Module": [[53, "module-ivy.stateful.module"]], "Optimizers": [[55, "module-ivy.stateful.optimizers"], [137, "optimizers"]], "Sequential": [[56, "module-ivy.stateful.sequential"]], "ivy": [[57, "ivy"]], "Constants": [[59, "module-ivy.functional.ivy.constants"]], "Control flow ops": [[60, "module-ivy.functional.ivy.control_flow_ops"]], "Note": [[61, null]], "Parameter": [[66, "parameter"], [66, "id1"], [66, "id2"], [66, "id3"], [66, "id4"]], "Meta": [[72, "module-ivy.functional.ivy.meta"]], "Nest": [[73, "module-ivy.functional.ivy.nest"]], "Data-dependent output shape": [[77, null], [77, null], [77, null], [77, null]], "nested_array": [[81, "nested-array"]], "Nested array": [[82, "module-ivy.nested_array.nested_array"]], "Assertions": [[83, "module-ivy_tests.test_ivy.helpers.assertions"], [93, "module-ivy.utils.assertions"]], "Available frameworks": [[84, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "Function testing": [[85, "module-ivy_tests.test_ivy.helpers.function_testing"]], "Globals": [[86, "module-ivy_tests.test_ivy.helpers.globals"]], "Hypothesis helpers": [[87, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "Structs": [[88, "module-ivy_tests.test_ivy.helpers.structs"]], "Test parameter flags": [[89, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "Testing helpers": [[90, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "helpers": [[91, "helpers"]], "utils": [[92, "utils"]], "Backend": [[94, "module-ivy.utils.backend"]], "Dynamic import": [[95, "module-ivy.utils.dynamic_import"]], "Exceptions": [[96, "module-ivy.utils.exceptions"]], "Inspection": [[97, "module-ivy.utils.inspection"]], "Verbosity": [[98, "module-ivy.utils.verbosity"]], "Contents": [[99, "contents"]], "Ivy as a transpiler": [[99, "ivy-as-a-transpiler"]], "When should I use Ivy as a transpiler?": [[99, "when-should-i-use-ivy-as-a-transpiler"]], "Ivy as a framework": [[99, "ivy-as-a-framework"]], "When should I use Ivy as a framework?": [[99, "when-should-i-use-ivy-as-a-framework"]], "Setting up Ivy": [[99, "setting-up-ivy"]], "Installing using pip": [[99, "installing-using-pip"]], "Docker": [[99, "docker"]], "Installing from source": [[99, "installing-from-source"]], "Using Ivy": [[99, "using-ivy"]], "Documentation": [[99, "documentation"]], "Examples": [[99, "examples"], [123, "examples"]], "Contributing": [[99, "contributing"], [104, "contributing"]], "Community": [[99, "community"]], "Citation": [[99, "citation"]], "Background": [[100, "background"]], "ML Explosion": [[101, "ml-explosion"]], "Standardization": [[102, "standardization"]], "Skepticism": [[102, "skepticism"]], "Complimentary vs Competitive": [[102, "complimentary-vs-competitive"]], "Do Standards Work?": [[102, "do-standards-work"]], "The Array API Standard": [[102, "the-array-api-standard"]], "Why Unify?": [[103, "why-unify"]], "No More Re-implementations \ud83d\udea7": [[103, "no-more-re-implementations"]], "\u201cInfinite\u201d Shelf-Life \u2705": [[103, "infinite-shelf-life"]], "Applied Libraries": [[105, "applied-libraries"], [140, "applied-libraries"]], "Introduction": [[105, "introduction"], [127, "introduction"], [128, "introduction"]], "Example - Ivy Robot": [[105, "example-ivy-robot"]], "Building the Docs": [[106, "building-the-docs"]], "Building the Docs with Docker": [[106, "building-the-docs-with-docker"]], "Dockerless Doc-building": [[106, "dockerless-doc-building"]], "Using miniconda": [[106, "using-miniconda"], [109, "using-miniconda"]], "Using venv": [[106, "using-venv"], [109, "using-venv"]], "Building the docs": [[106, "id1"]], "Working of the Documentation Building Pipeline": [[106, "working-of-the-documentation-building-pipeline"]], "make_docs.sh:": [[106, "make-docs-sh"]], "entrypoint.sh:": [[106, "entrypoint-sh"]], "_make_docs.sh:": [[106, "id2"]], "generate_src_rst_files.py:": [[106, "generate-src-rst-files-py"]], "sphinx-build.py": [[106, "sphinx-build-py"]], "correct_built_html_files.py": [[106, "correct-built-html-files-py"]], "remove_files.sh": [[106, "remove-files-sh"]], "Helpful Resources": [[107, "helpful-resources"]], "Open Tasks": [[108, "open-tasks"]], "Function Formatting": [[108, "function-formatting"]], "Formatting checklist": [[108, "formatting-checklist"]], "Frontend APIs": [[108, "frontend-apis"]], "Where to place a frontend function": [[108, "where-to-place-a-frontend-function"]], "Ivy Experimental API": [[108, "ivy-experimental-api"], [110, "ivy-experimental-api"]], "Setting Up": [[109, "setting-up"]], "Forking and cloning the repo": [[109, "forking-and-cloning-the-repo"]], "PyCharm": [[109, "pycharm"]], "Virtual environments - No Docker": [[109, "virtual-environments-no-docker"]], "Docker Interpreter with PyCharm": [[109, "docker-interpreter-with-pycharm"]], "Windows": [[109, "windows"], [109, "id6"]], "MacOS": [[109, "macos"]], "Ubuntu": [[109, "ubuntu"], [109, "id8"]], "Setting Up Testing": [[109, "setting-up-testing"]], "More Detailed Hypothesis Logs": [[109, "more-detailed-hypothesis-logs"]], "Setting up for Free": [[109, "setting-up-for-free"]], "GitHub Codespaces": [[109, "github-codespaces"]], "Pre-Commit": [[109, "pre-commit"]], "The Basics": [[110, "the-basics"]], "Getting Help": [[110, "getting-help"]], "ToDo List Issues": [[110, "todo-list-issues"]], "Managing Your Fork": [[110, "managing-your-fork"]], "Who To Ask": [[110, "who-to-ask"]], "With Command Line:": [[110, "with-command-line"]], "With Browser:": [[110, "with-browser"]], "Pull Requests": [[110, "pull-requests"]], "Small Commits Often": [[110, "small-commits-often"]], "Interactive Ivy Docker Container": [[110, "interactive-ivy-docker-container"]], "Running Tests Locally": [[110, "running-tests-locally"]], "With Docker": [[110, "with-docker"]], "Getting the most out of IDE": [[110, "getting-the-most-out-of-ide"]], "with PyCharm": [[110, "with-pycharm"]], "Deep Dive": [[111, "deep-dive"]], "Array API Tests": [[112, "array-api-tests"], [116, "array-api-tests"]], "Running the Tests": [[112, "running-the-tests"]], "Using Terminal": [[112, "using-terminal"]], "Using the IDE": [[112, "using-the-ide"]], "Regenerating Test Failures": [[112, "regenerating-test-failures"]], "Test Skipping": [[112, "test-skipping"]], "Arrays": [[113, "arrays"]], "Native Array": [[113, "native-array"]], "Ivy Array": [[113, "ivy-array"], [135, "ivy-array"]], "Array Handling": [[113, "array-handling"]], "Integrating custom classes with Ivy": [[113, "integrating-custom-classes-with-ivy"]], "Backend Setting": [[114, "backend-setting"]], "Backend and Frontend Version Support": [[114, "backend-and-frontend-version-support"]], "Containers": [[115, "containers"]], "Container Instance Methods": [[115, "container-instance-methods"]], "Container Static Methods": [[115, "container-static-methods"]], "API Static Methods": [[115, "api-static-methods"]], "API Instance Methods": [[115, "api-instance-methods"]], "API Special Methods": [[115, "api-special-methods"]], "Nestable Functions": [[115, "nestable-functions"], [123, "nestable-functions"], [124, "nestable-functions"]], "Continuous Integration": [[116, "continuous-integration"]], "Commit (Push/PR) Triggered Testing": [[116, "commit-push-pr-triggered-testing"]], "Ivy Tests": [[116, "ivy-tests"], [129, "ivy-tests"]], "Implementation": [[116, "implementation"]], "A Top-Down View": [[116, "a-top-down-view"]], "Storing (and retrieving) the Mapping": [[116, "storing-and-retrieving-the-mapping"]], "Cloning and Pushing to the Repository": [[116, "cloning-and-pushing-to-the-repository"]], "Implementational Nitty Gritties": [[116, "implementational-nitty-gritties"]], "Storage Space (unifyai/Mapping)": [[116, "storage-space-unifyai-mapping"]], "Determine Test Coverage Workflow": [[116, "determine-test-coverage-workflow"]], "Multiple Runners": [[116, "multiple-runners"]], "Race Condition": [[116, "race-condition"]], "Periodic Testing": [[116, "periodic-testing"]], "Manually Dispatched Workflows": [[116, "manually-dispatched-workflows"]], "CI Pipeline \u27a1\ufe0f": [[116, "ci-pipeline"]], "Push": [[116, "push"]], "Pull Request": [[116, "pull-request"]], "Dashboard": [[116, "dashboard"]], "Data Types": [[117, "data-types"]], "Data Type Module": [[117, "data-type-module"]], "Data Type Promotion": [[117, "data-type-promotion"]], "Arguments in other Functions": [[117, "arguments-in-other-functions"], [118, "arguments-in-other-functions"]], "Supported and Unsupported Data Types": [[117, "supported-and-unsupported-data-types"]], "Backend Data Type Bugs": [[117, "backend-data-type-bugs"]], "Superset Data Type Support": [[117, "superset-data-type-support"]], "Devices": [[118, "devices"]], "Device Module": [[118, "device-module"]], "Docstring Examples": [[119, "docstring-examples"]], "ivy.tan": [[119, "ivy-tan"]], "ivy.roll": [[119, "ivy-roll"]], "ivy.add": [[119, "ivy-add"]], "Docstrings": [[120, "docstrings"]], "Exception Handling": [[121, "exception-handling"]], "Ivy Exception Class": [[121, "ivy-exception-class"]], "Configurable Mode for Stack Trace": [[121, "configurable-mode-for-stack-trace"]], "Ivy func_wrapper Pruning": [[121, "ivy-func-wrapper-pruning"]], "@handle_exceptions Decorator": [[121, "handle-exceptions-decorator"]], "Assertion Function": [[121, "assertion-function"]], "Formatting": [[122, "formatting"]], "Lint Checks": [[122, "lint-checks"]], "Pre-Commit Hook": [[122, "pre-commit-hook"]], "Function Arguments": [[123, "function-arguments"]], "Positional and Keyword Arguments": [[123, "positional-and-keyword-arguments"]], "Input Arrays": [[123, "input-arrays"]], "out Argument": [[123, "out-argument"]], "dtype and device arguments": [[123, "dtype-and-device-arguments"]], "Numbers in Operator Functions": [[123, "numbers-in-operator-functions"]], "Integer Sequences": [[123, "integer-sequences"]], "Function Types": [[124, "function-types"]], "Primary Functions": [[124, "primary-functions"]], "Compositional Functions": [[124, "compositional-functions"]], "Mixed Functions": [[124, "mixed-functions"]], "Standalone Functions": [[124, "standalone-functions"]], "Convenience Functions": [[124, "convenience-functions"]], "Function Wrapping": [[125, "function-wrapping"]], "Inplace Updates": [[126, "inplace-updates"]], "out argument": [[126, "out-argument"]], "copy argument": [[126, "copy-argument"]], "Ivy Frontends": [[127, "ivy-frontends"]], "The Frontend Basics": [[127, "the-frontend-basics"]], "Unused Arguments": [[127, "unused-arguments"]], "Compositions": [[127, "compositions"]], "Missing Ivy Functions": [[127, "missing-ivy-functions"]], "Temporary Compositions": [[127, "temporary-compositions"]], "Supported Data Types and Devices": [[127, "supported-data-types-and-devices"]], "Classes and Instance Methods": [[127, "id6"]], "Frontend Data Type Promotion Rules": [[127, "frontend-data-type-promotion-rules"]], "NumPy Special Argument - Casting": [[127, "numpy-special-argument-casting"]], "Frontends Duplicate Policy": [[127, "frontends-duplicate-policy"]], "Ivy Frontend Tests": [[128, "ivy-frontend-tests"]], "Frontend Test Examples": [[128, "frontend-test-examples"]], "ivy.tan()": [[128, "ivy-tan"]], "ivy.full()": [[128, "ivy-full"]], "Testing Without Using Tests Values": [[128, "testing-without-using-tests-values"]], "Alias functions": [[128, "alias-functions"]], "Frontend Instance Method Tests": [[128, "frontend-instance-method-tests"]], "Frontend Instance Method Test Examples": [[128, "frontend-instance-method-test-examples"]], "ivy.add()": [[128, "ivy-add"]], "Hypothesis Helpers": [[128, "hypothesis-helpers"]], "Testing Pipeline": [[129, "testing-pipeline"]], "Hypothesis": [[129, "id2"]], "Data Generation": [[129, "id3"]], "Writing your own strategy": [[129, "writing-your-own-strategy"]], "Writing Hypothesis Test": [[129, "writing-hypothesis-test"]], "Ivy Test Decorators": [[129, "ivy-test-decorators"]], "Writing Ivy Tests": [[129, "writing-ivy-tests"]], "Integration of Strategies into Ivy Tests": [[129, "integration-of-strategies-into-ivy-tests"]], "Why do we need helper functions": [[129, "why-do-we-need-helper-functions"]], "How to write Hypothesis Tests effectively": [[129, "how-to-write-hypothesis-tests-effectively"]], "Bonus: Hypothesis\u2019 Extended Features": [[129, "bonus-hypothesis-extended-features"]], "Self-Consistent and Explicit Testing": [[129, "self-consistent-and-explicit-testing"]], "test_array_function": [[129, "id6"]], "Running Ivy Tests": [[129, "running-ivy-tests"]], "Re-Running Failed Ivy Tests": [[129, "re-running-failed-ivy-tests"]], "Navigating the Code": [[130, "navigating-the-code"]], "Categorization": [[130, "categorization"]], "Submodule Design": [[130, "submodule-design"]], "Ivy API": [[130, "ivy-api"]], "Backend API": [[130, "backend-api"]], "Submodule Helper Functions": [[130, "submodule-helper-functions"]], "Version Pinning": [[130, "version-pinning"]], "Superset Behaviour": [[131, "superset-behaviour"]], "Extending the Standard": [[131, "extending-the-standard"]], "What is the Superset?": [[131, "what-is-the-superset"]], "A Non-Duplicate Superset": [[131, "a-non-duplicate-superset"]], "What is not the Superset?": [[131, "what-is-not-the-superset"]], "When the Superset is Too Much": [[131, "when-the-superset-is-too-much"]], "Balancing Generalization with Efficiency": [[131, "balancing-generalization-with-efficiency"]], "More Examples": [[131, "more-examples"]], "Design": [[132, "design"]], "Building Blocks": [[133, "building-blocks"]], "Backend Functional APIs \u2705": [[133, "backend-functional-apis"]], "Ivy Functional API \u2705": [[133, "ivy-functional-api"]], "Backend Handler \u2705": [[133, "backend-handler"]], "Graph Compiler \ud83d\udea7": [[133, "graph-compiler"]], "Ivy as a Framework": [[134, "ivy-as-a-framework"]], "The Array Class": [[135, "the-array-class"]], "Unifying Operators": [[135, "unifying-operators"]], "API Monkey Patching": [[135, "api-monkey-patching"]], "Instance Methods": [[135, "instance-methods"]], "Ivy Container": [[136, "ivy-container"]], "Construction": [[136, "construction"]], "Representation": [[136, "representation"]], "Recursive Methods": [[136, "recursive-methods"]], "Built-ins": [[136, "built-ins"]], "Access": [[136, "access"]], "Saving and Loading": [[136, "saving-and-loading"]], "Comparisons": [[136, "comparisons"]], "Customized Representations": [[136, "customized-representations"]], "Use Cases": [[136, "use-cases"]], "Compartmentalization": [[136, "compartmentalization"]], "Configuration": [[136, "configuration"]], "Data loading": [[136, "data-loading"]], "Network weights": [[136, "network-weights"]], "Ivy Stateful API": [[137, "ivy-stateful-api"]], "Modules": [[137, "modules"]], "Ivy as a Transpiler": [[138, "ivy-as-a-transpiler"]], "Frontend Functional APIs \ud83d\udea7": [[138, "frontend-functional-apis"]], "Role of the Graph Compiler \ud83d\udea7": [[138, "role-of-the-graph-compiler"]], "Converting Network Models \ud83d\udea7": [[138, "converting-network-models"]], "Extensions": [[139, "extensions"]], "Ivy Mechanics": [[140, "ivy-mechanics"]], "Ivy Vision": [[140, "ivy-vision"]], "Ivy Robot": [[140, "ivy-robot"]], "Ivy Gym": [[140, "ivy-gym"]], "Ivy Memory": [[140, "ivy-memory"]], "FAQ": [[141, "faq"]], "Maintaining Backend Versions": [[141, "maintaining-backend-versions"]], "Dynamic Sizes": [[141, "dynamic-sizes"]], "Type and Shape Checking": [[141, "type-and-shape-checking"]], "GPU handling": [[141, "gpu-handling"]], "Model Deployment": [[141, "model-deployment"]], "Dynamic Control Flow": [[141, "dynamic-control-flow"]], "Auto-Differentiation": [[141, "auto-differentiation"]], "Replicas, and Data vs Model Parallelism": [[141, "replicas-and-data-vs-model-parallelism"]], "Support for Functions": [[141, "support-for-functions"]], "Alternative Data Structures": [[141, "alternative-data-structures"]], "Custom Operations": [[141, "custom-operations"]], "The Pipeline": [[141, "the-pipeline"]], "State": [[141, "state"]], "Glossary": [[142, "glossary"]], "Related Work": [[143, "related-work"]], "API Standards": [[144, "api-standards"], [153, "api-standards"]], "Array API Standard": [[144, "id1"]], "Compiler Infrastructure": [[145, "compiler-infrastructure"], [153, "compiler-infrastructure"]], "LLVM": [[145, "id1"]], "MLIR": [[145, "id2"]], "OneAPI": [[145, "id3"]], "Exchange Formats": [[146, "exchange-formats"], [153, "exchange-formats"]], "ONNX onnx": [[146, "onnx-onnx"]], "NNEF nnef": [[146, "nnef-nnef"]], "CoreML coreml": [[146, "coreml-coreml"]], "Frameworks": [[147, "frameworks"], [153, "frameworks"]], "MATLAB matlab": [[147, "matlab-matlab"]], "SciPy scipy": [[147, "scipy-scipy"]], "Torch torch": [[147, "torch-torch"]], "NumPy numpy": [[147, "numpy-numpy"]], "SciKit Learn scikit-learn": [[147, "scikit-learn-scikit-learn"]], "Theano theano": [[147, "theano-theano"]], "Pandas pandas": [[147, "pandas-pandas"]], "Julia julia": [[147, "julia-julia"]], "Apache Spark MLlib apache-spark-mllib": [[147, "apache-spark-mllib-apache-spark-mllib"]], "Caffe caffe": [[147, "caffe-caffe"]], "Chainer chainer": [[147, "chainer-chainer"]], "TensorFlow 1 tensorflow-1": [[147, "tensorflow-1-tensorflow-1"]], "MXNet mxnet": [[147, "mxnet-mxnet"]], "CNTK cntk": [[147, "cntk-cntk"]], "PyTorch pytorch": [[147, "pytorch-pytorch"]], "Flux flux": [[147, "flux-flux"]], "JAX jax": [[147, "jax-jax"]], "TensorFlow 2 tensorflow-2": [[147, "tensorflow-2-tensorflow-2"]], "DEX Language dex-language": [[147, "dex-language-dex-language"]], "Graph Tracers": [[148, "graph-tracers"], [153, "graph-tracers"]], "tf.Graph": [[148, "tf-graph"]], "Jaxpr": [[148, "jaxpr"]], "torch.jit": [[148, "torch-jit"]], "torch.fx": [[148, "torch-fx"]], "ML-Unifying Companies": [[149, "ml-unifying-companies"], [153, "ml-unifying-companies"]], "Quansight": [[149, "id1"]], "Modular": [[149, "id2"]], "OctoML": [[149, "id3"]], "Multi-Vendor Compiler Frameworks": [[150, "multi-vendor-compiler-frameworks"], [153, "multi-vendor-compiler-frameworks"]], "Apache TVM": [[150, "apache-tvm"]], "XLA": [[150, "xla"]], "GCC": [[150, "gcc"]], "Vendor-Specific APIs": [[151, "vendor-specific-apis"], [153, "vendor-specific-apis"]], "TensorRT tensorrt": [[151, "tensorrt-tensorrt"]], "CUDA cuda": [[151, "cuda-cuda"]], "Vendor-Specific Compilers": [[152, "vendor-specific-compilers"], [153, "vendor-specific-compilers"]], "ICC": [[152, "id1"]], "ICX": [[152, "icx"]], "NVCC": [[152, "nvcc"]], "What does Ivy Add?": [[153, "what-does-ivy-add"]], "Wrapper Frameworks": [[153, "wrapper-frameworks"], [154, "wrapper-frameworks"]], "EagerPy eagerpy": [[154, "eagerpy-eagerpy"]], "Keras keras": [[154, "keras-keras"]], "Thinc thinc": [[154, "thinc-thinc"]], "TensorLy tensorly": [[154, "tensorly-tensorly"]], "NeuroPod": [[154, "id1"]]}, "indexentries": {"_arraywithactivations (class in ivy.data_classes.array.activations)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations"]], "_abc_impl (ivy.data_classes.array.activations._arraywithactivations attribute)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations._abc_impl"]], "gelu() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.gelu"]], "ivy.data_classes.array.activations": [[0, "module-ivy.data_classes.array.activations"]], "leaky_relu() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.leaky_relu"]], "log_softmax() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.log_softmax"]], "mish() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.mish"]], "module": [[0, "module-ivy.data_classes.array.activations"], [1, "module-ivy.data_classes.array.conversions"], [2, "module-ivy.data_classes.array.creation"], [3, "module-ivy.data_classes.array.data_type"], [4, "module-ivy.data_classes.array.device"], [5, "module-ivy.data_classes.array.elementwise"], [6, "module-ivy.data_classes.array.experimental"], [6, "module-ivy.data_classes.array.experimental.activations"], [6, "module-ivy.data_classes.array.experimental.conversions"], [6, "module-ivy.data_classes.array.experimental.creation"], [6, "module-ivy.data_classes.array.experimental.data_type"], [6, "module-ivy.data_classes.array.experimental.device"], [6, "module-ivy.data_classes.array.experimental.elementwise"], [6, "module-ivy.data_classes.array.experimental.general"], [6, "module-ivy.data_classes.array.experimental.gradients"], [6, "module-ivy.data_classes.array.experimental.image"], [6, "module-ivy.data_classes.array.experimental.layers"], [6, "module-ivy.data_classes.array.experimental.linear_algebra"], [6, "module-ivy.data_classes.array.experimental.losses"], [6, "module-ivy.data_classes.array.experimental.manipulation"], [6, "module-ivy.data_classes.array.experimental.norms"], [6, "module-ivy.data_classes.array.experimental.random"], [6, "module-ivy.data_classes.array.experimental.searching"], [6, "module-ivy.data_classes.array.experimental.set"], [6, "module-ivy.data_classes.array.experimental.sorting"], [6, "module-ivy.data_classes.array.experimental.statistical"], [6, "module-ivy.data_classes.array.experimental.utility"], [7, "module-ivy.data_classes.array.general"], [8, "module-ivy.data_classes.array.gradients"], [9, "module-ivy.data_classes.array.image"], [10, "module-ivy.data_classes.array.layers"], [11, "module-ivy.data_classes.array.linear_algebra"], [12, "module-ivy.data_classes.array.losses"], [13, "module-ivy.data_classes.array.manipulation"], [14, "module-ivy.data_classes.array.norms"], [15, "module-ivy.data_classes.array.random"], [16, "module-ivy.data_classes.array.searching"], [17, "module-ivy.data_classes.array.set"], [18, "module-ivy.data_classes.array.sorting"], [19, "module-ivy.data_classes.array.statistical"], [20, "module-ivy.data_classes.array.utility"], [21, "module-ivy.data_classes.array.wrapping"], [22, "module-ivy.data_classes.container.activations"], [23, "module-ivy.data_classes.container.base"], [24, "module-ivy.data_classes.container.conversions"], [25, "module-ivy.data_classes.container.creation"], [26, "module-ivy.data_classes.container.data_type"], [27, "module-ivy.data_classes.container.device"], [28, "module-ivy.data_classes.container.elementwise"], [29, "module-ivy.data_classes.container.experimental"], [29, "module-ivy.data_classes.container.experimental.activations"], [29, "module-ivy.data_classes.container.experimental.conversions"], [29, "module-ivy.data_classes.container.experimental.creation"], [29, "module-ivy.data_classes.container.experimental.data_type"], [29, "module-ivy.data_classes.container.experimental.device"], [29, "module-ivy.data_classes.container.experimental.elementwise"], [29, "module-ivy.data_classes.container.experimental.general"], [29, "module-ivy.data_classes.container.experimental.gradients"], [29, "module-ivy.data_classes.container.experimental.image"], [29, "module-ivy.data_classes.container.experimental.layers"], [29, "module-ivy.data_classes.container.experimental.linear_algebra"], [29, "module-ivy.data_classes.container.experimental.losses"], [29, "module-ivy.data_classes.container.experimental.manipulation"], [29, "module-ivy.data_classes.container.experimental.norms"], [29, "module-ivy.data_classes.container.experimental.random"], [29, "module-ivy.data_classes.container.experimental.searching"], [29, "module-ivy.data_classes.container.experimental.set"], [29, "module-ivy.data_classes.container.experimental.sorting"], [29, "module-ivy.data_classes.container.experimental.statistical"], [29, "module-ivy.data_classes.container.experimental.utility"], [30, "module-ivy.data_classes.container.general"], [31, "module-ivy.data_classes.container.gradients"], [32, "module-ivy.data_classes.container.image"], [33, "module-ivy.data_classes.container.layers"], [34, "module-ivy.data_classes.container.linear_algebra"], [35, "module-ivy.data_classes.container.losses"], [36, "module-ivy.data_classes.container.manipulation"], [37, "module-ivy.data_classes.container.norms"], [38, "module-ivy.data_classes.container.random"], [39, "module-ivy.data_classes.container.searching"], [40, "module-ivy.data_classes.container.set"], [41, "module-ivy.data_classes.container.sorting"], [42, "module-ivy.data_classes.container.statistical"], [43, "module-ivy.data_classes.container.utility"], [44, "module-ivy.data_classes.container.wrapping"], [45, "module-ivy.data_classes.array.array"], [46, "module-ivy.data_classes.container.container"], [48, "module-ivy.stateful.activations"], [49, "module-ivy.stateful.converters"], [50, "module-ivy.stateful.helpers"], [51, "module-ivy.stateful.initializers"], [52, "module-ivy.stateful.layers"], [53, "module-ivy.stateful.module"], [54, "module-ivy.stateful.norms"], [55, "module-ivy.stateful.optimizers"], [56, "module-ivy.stateful.sequential"], [58, "module-ivy.functional.ivy.activations"], [59, "module-ivy.functional.ivy.constants"], [60, "module-ivy.functional.ivy.control_flow_ops"], [61, "module-ivy.functional.ivy.creation"], [62, "module-ivy.functional.ivy.data_type"], [63, "module-ivy.functional.ivy.device"], [64, "module-ivy.functional.ivy.elementwise"], [65, "module-ivy.functional.ivy.experimental"], [66, "module-ivy.functional.ivy.general"], [67, "module-ivy.functional.ivy.gradients"], [68, "module-ivy.functional.ivy.layers"], [69, "module-ivy.functional.ivy.linear_algebra"], [70, "module-ivy.functional.ivy.losses"], [71, "module-ivy.functional.ivy.manipulation"], [72, "module-ivy.functional.ivy.meta"], [73, "module-ivy.functional.ivy.nest"], [74, "module-ivy.functional.ivy.norms"], [75, "module-ivy.functional.ivy.random"], [76, "module-ivy.functional.ivy.searching"], [77, "module-ivy.functional.ivy.set"], [78, "module-ivy.functional.ivy.sorting"], [79, "module-ivy.functional.ivy.statistical"], [80, "module-ivy.functional.ivy.utility"], [82, "module-ivy.nested_array.nested_array"], [83, "module-ivy_tests.test_ivy.helpers.assertions"], [84, "module-ivy_tests.test_ivy.helpers.available_frameworks"], [85, "module-ivy_tests.test_ivy.helpers.function_testing"], [86, "module-ivy_tests.test_ivy.helpers.globals"], [87, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"], [88, "module-ivy_tests.test_ivy.helpers.structs"], [89, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"], [90, "module-ivy_tests.test_ivy.helpers.testing_helpers"], [93, "module-ivy.utils.assertions"], [94, "module-ivy.utils.backend"], [95, "module-ivy.utils.dynamic_import"], [96, "module-ivy.utils.exceptions"], [97, "module-ivy.utils.inspection"], [98, "module-ivy.utils.verbosity"]], "relu() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.relu"]], "sigmoid() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.sigmoid"]], "softmax() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.softmax"]], "softplus() (ivy.data_classes.array.activations._arraywithactivations method)": [[0, "ivy.data_classes.array.activations._ArrayWithActivations.softplus"]], "_to_ivy() (in module ivy.data_classes.array.conversions)": [[1, "ivy.data_classes.array.conversions._to_ivy"]], "_to_native() (in module ivy.data_classes.array.conversions)": [[1, "ivy.data_classes.array.conversions._to_native"]], "args_to_ivy() (in module ivy.data_classes.array.conversions)": [[1, "ivy.data_classes.array.conversions.args_to_ivy"]], "args_to_native() (in module ivy.data_classes.array.conversions)": [[1, "ivy.data_classes.array.conversions.args_to_native"]], "ivy.data_classes.array.conversions": [[1, "module-ivy.data_classes.array.conversions"]], "to_ivy() (in module ivy.data_classes.array.conversions)": [[1, "ivy.data_classes.array.conversions.to_ivy"]], "to_native() (in module ivy.data_classes.array.conversions)": [[1, "ivy.data_classes.array.conversions.to_native"]], "_arraywithcreation (class in ivy.data_classes.array.creation)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation"]], "_abc_impl (ivy.data_classes.array.creation._arraywithcreation attribute)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation._abc_impl"]], "asarray() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.asarray"]], "copy_array() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.copy_array"]], "empty_like() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.empty_like"]], "from_dlpack() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.from_dlpack"]], "full_like() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.full_like"]], "ivy.data_classes.array.creation": [[2, "module-ivy.data_classes.array.creation"]], "linspace() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.linspace"]], "logspace() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.logspace"]], "meshgrid() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.meshgrid"]], "native_array() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.native_array"]], "one_hot() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.one_hot"]], "ones_like() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.ones_like"]], "tril() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.tril"]], "triu() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.triu"]], "zeros_like() (ivy.data_classes.array.creation._arraywithcreation method)": [[2, "ivy.data_classes.array.creation._ArrayWithCreation.zeros_like"]], "_arraywithdatatypes (class in ivy.data_classes.array.data_type)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes"]], "_abc_impl (ivy.data_classes.array.data_type._arraywithdatatypes attribute)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes._abc_impl"]], "astype() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.astype"]], "broadcast_arrays() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.broadcast_to"]], "can_cast() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.can_cast"]], "dtype() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.dtype"]], "finfo() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.finfo"]], "iinfo() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.is_bool_dtype"]], "is_float_dtype() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.is_uint_dtype"]], "ivy.data_classes.array.data_type": [[3, "module-ivy.data_classes.array.data_type"]], "result_type() (ivy.data_classes.array.data_type._arraywithdatatypes method)": [[3, "ivy.data_classes.array.data_type._ArrayWithDataTypes.result_type"]], "_arraywithdevice (class in ivy.data_classes.array.device)": [[4, "ivy.data_classes.array.device._ArrayWithDevice"]], "_abc_impl (ivy.data_classes.array.device._arraywithdevice attribute)": [[4, "ivy.data_classes.array.device._ArrayWithDevice._abc_impl"]], "dev() (ivy.data_classes.array.device._arraywithdevice method)": [[4, "ivy.data_classes.array.device._ArrayWithDevice.dev"]], "ivy.data_classes.array.device": [[4, "module-ivy.data_classes.array.device"]], "to_device() (ivy.data_classes.array.device._arraywithdevice method)": [[4, "ivy.data_classes.array.device._ArrayWithDevice.to_device"]], "_arraywithelementwise (class in ivy.data_classes.array.elementwise)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise"]], "_abc_impl (ivy.data_classes.array.elementwise._arraywithelementwise attribute)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise._abc_impl"]], "abs() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.abs"]], "acos() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.acos"]], "acosh() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.acosh"]], "add() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.add"]], "asin() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.asin"]], "asinh() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.asinh"]], "atan() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.atan"]], "atan2() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.atan2"]], "atanh() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.atanh"]], "bitwise_and() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.bitwise_xor"]], "ceil() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.ceil"]], "cos() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.cos"]], "cosh() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.cosh"]], "deg2rad() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.deg2rad"]], "divide() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.divide"]], "equal() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.equal"]], "erf() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.erf"]], "exp() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.exp"]], "expm1() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.expm1"]], "floor() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.floor"]], "floor_divide() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.floor_divide"]], "greater() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.greater"]], "greater_equal() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.greater_equal"]], "isfinite() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.isfinite"]], "isinf() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.isinf"]], "isnan() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.isnan"]], "isreal() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.isreal"]], "ivy.data_classes.array.elementwise": [[5, "module-ivy.data_classes.array.elementwise"]], "less() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.less"]], "less_equal() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.less_equal"]], "log() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.log"]], "log10() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.log10"]], "log1p() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.log1p"]], "log2() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.log2"]], "logaddexp() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.logaddexp"]], "logical_and() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.logical_and"]], "logical_not() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.logical_not"]], "logical_or() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.logical_or"]], "logical_xor() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.logical_xor"]], "maximum() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.maximum"]], "minimum() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.minimum"]], "multiply() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.multiply"]], "negative() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.negative"]], "not_equal() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.not_equal"]], "positive() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.positive"]], "pow() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.pow"]], "rad2deg() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.rad2deg"]], "reciprocal() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.reciprocal"]], "remainder() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.remainder"]], "round() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.round"]], "sign() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.sign"]], "sin() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.sin"]], "sinh() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.sinh"]], "sqrt() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.sqrt"]], "square() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.square"]], "subtract() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.subtract"]], "tan() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.tan"]], "tanh() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.tanh"]], "trunc() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.trunc"]], "trunc_divide() (ivy.data_classes.array.elementwise._arraywithelementwise method)": [[5, "ivy.data_classes.array.elementwise._ArrayWithElementwise.trunc_divide"]], "_arraywithactivationsexperimental (class in ivy.data_classes.array.experimental.activations)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental"]], "_arraywithconversionsexperimental (class in ivy.data_classes.array.experimental.conversions)": [[6, "ivy.data_classes.array.experimental.conversions._ArrayWithConversionsExperimental"]], "_arraywithcreationexperimental (class in ivy.data_classes.array.experimental.creation)": [[6, "ivy.data_classes.array.experimental.creation._ArrayWithCreationExperimental"]], "_arraywithdata_typeexperimental (class in ivy.data_classes.array.experimental.data_type)": [[6, "ivy.data_classes.array.experimental.data_type._ArrayWithData_typeExperimental"]], "_arraywithdeviceexperimental (class in ivy.data_classes.array.experimental.device)": [[6, "ivy.data_classes.array.experimental.device._ArrayWithDeviceExperimental"]], "_arraywithelementwiseexperimental (class in ivy.data_classes.array.experimental.elementwise)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental"]], "_arraywithgeneralexperimental (class in ivy.data_classes.array.experimental.general)": [[6, "ivy.data_classes.array.experimental.general._ArrayWithGeneralExperimental"]], "_arraywithgradientsexperimental (class in ivy.data_classes.array.experimental.gradients)": [[6, "ivy.data_classes.array.experimental.gradients._ArrayWithGradientsExperimental"]], "_arraywithimageexperimental (class in ivy.data_classes.array.experimental.image)": [[6, "ivy.data_classes.array.experimental.image._ArrayWithImageExperimental"]], "_arraywithlayersexperimental (class in ivy.data_classes.array.experimental.layers)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental"]], "_arraywithlinearalgebraexperimental (class in ivy.data_classes.array.experimental.linear_algebra)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental"]], "_arraywithlossesexperimental (class in ivy.data_classes.array.experimental.losses)": [[6, "ivy.data_classes.array.experimental.losses._ArrayWithLossesExperimental"]], "_arraywithmanipulationexperimental (class in ivy.data_classes.array.experimental.manipulation)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental"]], "_arraywithnormsexperimental (class in ivy.data_classes.array.experimental.norms)": [[6, "ivy.data_classes.array.experimental.norms._ArrayWithNormsExperimental"]], "_arraywithrandomexperimental (class in ivy.data_classes.array.experimental.random)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental"]], "_arraywithsearchingexperimental (class in ivy.data_classes.array.experimental.searching)": [[6, "ivy.data_classes.array.experimental.searching._ArrayWithSearchingExperimental"]], "_arraywithsetexperimental (class in ivy.data_classes.array.experimental.set)": [[6, "ivy.data_classes.array.experimental.set._ArrayWithSetExperimental"]], "_arraywithsortingexperimental (class in ivy.data_classes.array.experimental.sorting)": [[6, "ivy.data_classes.array.experimental.sorting._ArrayWithSortingExperimental"]], "_arraywithstatisticalexperimental (class in ivy.data_classes.array.experimental.statistical)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental"]], "_arraywithutilityexperimental (class in ivy.data_classes.array.experimental.utility)": [[6, "ivy.data_classes.array.experimental.utility._ArrayWithUtilityExperimental"]], "_abc_impl (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental attribute)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.conversions._arraywithconversionsexperimental attribute)": [[6, "ivy.data_classes.array.experimental.conversions._ArrayWithConversionsExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.creation._arraywithcreationexperimental attribute)": [[6, "ivy.data_classes.array.experimental.creation._ArrayWithCreationExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.data_type._arraywithdata_typeexperimental attribute)": [[6, "ivy.data_classes.array.experimental.data_type._ArrayWithData_typeExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.device._arraywithdeviceexperimental attribute)": [[6, "ivy.data_classes.array.experimental.device._ArrayWithDeviceExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental attribute)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.general._arraywithgeneralexperimental attribute)": [[6, "ivy.data_classes.array.experimental.general._ArrayWithGeneralExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.gradients._arraywithgradientsexperimental attribute)": [[6, "ivy.data_classes.array.experimental.gradients._ArrayWithGradientsExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.image._arraywithimageexperimental attribute)": [[6, "ivy.data_classes.array.experimental.image._ArrayWithImageExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental attribute)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental attribute)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.losses._arraywithlossesexperimental attribute)": [[6, "ivy.data_classes.array.experimental.losses._ArrayWithLossesExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental attribute)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.norms._arraywithnormsexperimental attribute)": [[6, "ivy.data_classes.array.experimental.norms._ArrayWithNormsExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.random._arraywithrandomexperimental attribute)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.searching._arraywithsearchingexperimental attribute)": [[6, "ivy.data_classes.array.experimental.searching._ArrayWithSearchingExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.set._arraywithsetexperimental attribute)": [[6, "ivy.data_classes.array.experimental.set._ArrayWithSetExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.sorting._arraywithsortingexperimental attribute)": [[6, "ivy.data_classes.array.experimental.sorting._ArrayWithSortingExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental attribute)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.array.experimental.utility._arraywithutilityexperimental attribute)": [[6, "ivy.data_classes.array.experimental.utility._ArrayWithUtilityExperimental._abc_impl"]], "adaptive_avg_pool1d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.adaptive_avg_pool2d"]], "adjoint() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.allclose"]], "angle() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.avg_pool3d"]], "batch_norm() (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental method)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental.batch_norm"]], "bernoulli() (ivy.data_classes.array.experimental.random._arraywithrandomexperimental method)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental.bernoulli"]], "beta() (ivy.data_classes.array.experimental.random._arraywithrandomexperimental method)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental.beta"]], "binarizer() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.binarizer"]], "bincount() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.bincount"]], "cond() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.cond"]], "conj() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.conj"]], "copysign() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.dct"]], "dft() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.dft"]], "diagflat() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.diff"]], "dirichlet() (ivy.data_classes.array.experimental.random._arraywithrandomexperimental method)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental.dirichlet"]], "dsplit() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.dsplit"]], "dstack() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.dstack"]], "eig() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.eig"]], "eigh_tridiagonal() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.eigh_tridiagonal"]], "eigvals() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.embedding"]], "exp2() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.exp2"]], "expand() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.expand"]], "eye_like() (ivy.data_classes.array.experimental.creation._arraywithcreationexperimental method)": [[6, "ivy.data_classes.array.experimental.creation._ArrayWithCreationExperimental.eye_like"]], "fft() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.fft"]], "fix() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.fix"]], "flatten() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.flatten"]], "fliplr() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.fliplr"]], "flipud() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.flipud"]], "float_power() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.float_power"]], "fmax() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.fmax"]], "fmin() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.fmin"]], "fmod() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.fmod"]], "frexp() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.frexp"]], "gamma() (ivy.data_classes.array.experimental.random._arraywithrandomexperimental method)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental.gamma"]], "gcd() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.gcd"]], "gradient() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.gradient"]], "heaviside() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.heaviside"]], "hsplit() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.hsplit"]], "hstack() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.hstack"]], "hypot() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.hypot"]], "i0() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.i0"]], "ifft() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.ifft"]], "imag() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.imag"]], "instance_norm() (ivy.data_classes.array.experimental.norms._arraywithnormsexperimental method)": [[6, "ivy.data_classes.array.experimental.norms._ArrayWithNormsExperimental.instance_norm"]], "interpolate() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.interpolate"]], "isclose() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.isclose"]], "isin() (ivy.data_classes.array.experimental.general._arraywithgeneralexperimental method)": [[6, "ivy.data_classes.array.experimental.general._ArrayWithGeneralExperimental.isin"]], "ivy.data_classes.array.experimental": [[6, "module-ivy.data_classes.array.experimental"]], "ivy.data_classes.array.experimental.activations": [[6, "module-ivy.data_classes.array.experimental.activations"]], "ivy.data_classes.array.experimental.conversions": [[6, "module-ivy.data_classes.array.experimental.conversions"]], "ivy.data_classes.array.experimental.creation": [[6, "module-ivy.data_classes.array.experimental.creation"]], "ivy.data_classes.array.experimental.data_type": [[6, "module-ivy.data_classes.array.experimental.data_type"]], "ivy.data_classes.array.experimental.device": [[6, "module-ivy.data_classes.array.experimental.device"]], "ivy.data_classes.array.experimental.elementwise": [[6, "module-ivy.data_classes.array.experimental.elementwise"]], "ivy.data_classes.array.experimental.general": [[6, "module-ivy.data_classes.array.experimental.general"]], "ivy.data_classes.array.experimental.gradients": [[6, "module-ivy.data_classes.array.experimental.gradients"]], "ivy.data_classes.array.experimental.image": [[6, "module-ivy.data_classes.array.experimental.image"]], "ivy.data_classes.array.experimental.layers": [[6, "module-ivy.data_classes.array.experimental.layers"]], "ivy.data_classes.array.experimental.linear_algebra": [[6, "module-ivy.data_classes.array.experimental.linear_algebra"]], "ivy.data_classes.array.experimental.losses": [[6, "module-ivy.data_classes.array.experimental.losses"]], "ivy.data_classes.array.experimental.manipulation": [[6, "module-ivy.data_classes.array.experimental.manipulation"]], "ivy.data_classes.array.experimental.norms": [[6, "module-ivy.data_classes.array.experimental.norms"]], "ivy.data_classes.array.experimental.random": [[6, "module-ivy.data_classes.array.experimental.random"]], "ivy.data_classes.array.experimental.searching": [[6, "module-ivy.data_classes.array.experimental.searching"]], "ivy.data_classes.array.experimental.set": [[6, "module-ivy.data_classes.array.experimental.set"]], "ivy.data_classes.array.experimental.sorting": [[6, "module-ivy.data_classes.array.experimental.sorting"]], "ivy.data_classes.array.experimental.statistical": [[6, "module-ivy.data_classes.array.experimental.statistical"]], "ivy.data_classes.array.experimental.utility": [[6, "module-ivy.data_classes.array.experimental.utility"]], "kron() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.data_classes.array.experimental.norms._arraywithnormsexperimental method)": [[6, "ivy.data_classes.array.experimental.norms._ArrayWithNormsExperimental.l2_normalize"]], "lcm() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.lcm"]], "ldexp() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.ldexp"]], "lexsort() (ivy.data_classes.array.experimental.sorting._arraywithsortingexperimental method)": [[6, "ivy.data_classes.array.experimental.sorting._ArrayWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental method)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental.logit"]], "logsigmoid() (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental method)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental.logsigmoid"]], "lp_normalize() (ivy.data_classes.array.experimental.norms._arraywithnormsexperimental method)": [[6, "ivy.data_classes.array.experimental.norms._ArrayWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.data_classes.array.experimental.layers._arraywithlayersexperimental method)": [[6, "ivy.data_classes.array.experimental.layers._ArrayWithLayersExperimental.max_pool3d"]], "median() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.median"]], "moveaxis() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.moveaxis"]], "msort() (ivy.data_classes.array.experimental.sorting._arraywithsortingexperimental method)": [[6, "ivy.data_classes.array.experimental.sorting._ArrayWithSortingExperimental.msort"]], "multi_dot() (ivy.data_classes.array.experimental.linear_algebra._arraywithlinearalgebraexperimental method)": [[6, "ivy.data_classes.array.experimental.linear_algebra._ArrayWithLinearAlgebraExperimental.multi_dot"]], "nan_to_num() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.nansum"]], "nextafter() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.nextafter"]], "pad() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.pad"]], "poisson() (ivy.data_classes.array.experimental.random._arraywithrandomexperimental method)": [[6, "ivy.data_classes.array.experimental.random._ArrayWithRandomExperimental.poisson"]], "prelu() (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental method)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental.prelu"]], "quantile() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.quantile"]], "real() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.real"]], "relu6() (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental method)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental.relu6"]], "rot90() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.rot90"]], "signbit() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.signbit"]], "sinc() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.sinc"]], "take_along_axis() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.data_classes.array.experimental.activations._arraywithactivationsexperimental method)": [[6, "ivy.data_classes.array.experimental.activations._ArrayWithActivationsExperimental.thresholded_relu"]], "top_k() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.top_k"]], "trapz() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.trapz"]], "unravel_index() (ivy.data_classes.array.experimental.statistical._arraywithstatisticalexperimental method)": [[6, "ivy.data_classes.array.experimental.statistical._ArrayWithStatisticalExperimental.unravel_index"]], "vsplit() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.vsplit"]], "vstack() (ivy.data_classes.array.experimental.manipulation._arraywithmanipulationexperimental method)": [[6, "ivy.data_classes.array.experimental.manipulation._ArrayWithManipulationExperimental.vstack"]], "xlogy() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.xlogy"]], "zeta() (ivy.data_classes.array.experimental.elementwise._arraywithelementwiseexperimental method)": [[6, "ivy.data_classes.array.experimental.elementwise._ArrayWithElementWiseExperimental.zeta"]], "_arraywithgeneral (class in ivy.data_classes.array.general)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral"]], "_abc_impl (ivy.data_classes.array.general._arraywithgeneral attribute)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral._abc_impl"]], "all_equal() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.all_equal"]], "array_equal() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.clip_vector_norm"]], "default() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.default"]], "einops_rearrange() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.einops_reduce"]], "einops_repeat() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.einops_repeat"]], "exists() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.exists"]], "fourier_encode() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.fourier_encode"]], "gather() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.gather"]], "gather_nd() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.gather_nd"]], "get_num_dims() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.get_num_dims"]], "has_nans() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.has_nans"]], "inplace_decrement() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.inplace_increment"]], "inplace_update() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.inplace_update"]], "is_array() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.is_array"]], "is_ivy_array() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.is_ivy_array"]], "is_ivy_container() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.is_ivy_container"]], "is_native_array() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.is_native_array"]], "ivy.data_classes.array.general": [[7, "module-ivy.data_classes.array.general"]], "scatter_flat() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.scatter_flat"]], "scatter_nd() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.scatter_nd"]], "stable_divide() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.stable_divide"]], "stable_pow() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.stable_pow"]], "supports_inplace_updates() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.supports_inplace_updates"]], "to_list() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.to_list"]], "to_numpy() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.to_numpy"]], "to_scalar() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.to_scalar"]], "value_is_nan() (ivy.data_classes.array.general._arraywithgeneral method)": [[7, "ivy.data_classes.array.general._ArrayWithGeneral.value_is_nan"]], "_arraywithgradients (class in ivy.data_classes.array.gradients)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients"]], "_abc_impl (ivy.data_classes.array.gradients._arraywithgradients attribute)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients._abc_impl"]], "adam_step() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.adam_step"]], "adam_update() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.adam_update"]], "gradient_descent_update() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.gradient_descent_update"]], "ivy.data_classes.array.gradients": [[8, "module-ivy.data_classes.array.gradients"]], "lamb_update() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.lamb_update"]], "lars_update() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.lars_update"]], "optimizer_update() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.optimizer_update"]], "stop_gradient() (ivy.data_classes.array.gradients._arraywithgradients method)": [[8, "ivy.data_classes.array.gradients._ArrayWithGradients.stop_gradient"]], "_arraywithimage (class in ivy.data_classes.array.image)": [[9, "ivy.data_classes.array.image._ArrayWithImage"]], "_abc_impl (ivy.data_classes.array.image._arraywithimage attribute)": [[9, "ivy.data_classes.array.image._ArrayWithImage._abc_impl"]], "ivy.data_classes.array.image": [[9, "module-ivy.data_classes.array.image"]], "_arraywithlayers (class in ivy.data_classes.array.layers)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers"]], "_abc_impl (ivy.data_classes.array.layers._arraywithlayers attribute)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers._abc_impl"]], "conv1d() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.conv1d"]], "conv1d_transpose() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.conv1d_transpose"]], "conv2d() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.conv2d"]], "conv2d_transpose() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.conv2d_transpose"]], "conv3d() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.conv3d"]], "conv3d_transpose() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.depthwise_conv2d"]], "dropout() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.dropout"]], "dropout1d() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.dropout1d"]], "dropout3d() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.dropout3d"]], "ivy.data_classes.array.layers": [[10, "module-ivy.data_classes.array.layers"]], "linear() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.linear"]], "lstm_update() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.lstm_update"]], "multi_head_attention() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.data_classes.array.layers._arraywithlayers method)": [[10, "ivy.data_classes.array.layers._ArrayWithLayers.scaled_dot_product_attention"]], "_arraywithlinearalgebra (class in ivy.data_classes.array.linear_algebra)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra"]], "_abc_impl (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra attribute)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra._abc_impl"]], "cholesky() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.cholesky"]], "cross() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.cross"]], "det() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.det"]], "diag() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.diag"]], "diagonal() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.diagonal"]], "eig() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.eig"]], "eigh() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.eigvalsh"]], "inner() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.inner"]], "inv() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.inv"]], "ivy.data_classes.array.linear_algebra": [[11, "module-ivy.data_classes.array.linear_algebra"]], "matmul() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.outer"]], "pinv() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.pinv"]], "qr() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.qr"]], "slogdet() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.slogdet"]], "solve() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.solve"]], "svd() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.svd"]], "svdvals() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.svdvals"]], "tensordot() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.tensorsolve"]], "trace() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.trace"]], "vander() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.vander"]], "vecdot() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.data_classes.array.linear_algebra._arraywithlinearalgebra method)": [[11, "ivy.data_classes.array.linear_algebra._ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "_arraywithlosses (class in ivy.data_classes.array.losses)": [[12, "ivy.data_classes.array.losses._ArrayWithLosses"]], "_abc_impl (ivy.data_classes.array.losses._arraywithlosses attribute)": [[12, "ivy.data_classes.array.losses._ArrayWithLosses._abc_impl"]], "binary_cross_entropy() (ivy.data_classes.array.losses._arraywithlosses method)": [[12, "ivy.data_classes.array.losses._ArrayWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.data_classes.array.losses._arraywithlosses method)": [[12, "ivy.data_classes.array.losses._ArrayWithLosses.cross_entropy"]], "ivy.data_classes.array.losses": [[12, "module-ivy.data_classes.array.losses"]], "sparse_cross_entropy() (ivy.data_classes.array.losses._arraywithlosses method)": [[12, "ivy.data_classes.array.losses._ArrayWithLosses.sparse_cross_entropy"]], "_arraywithmanipulation (class in ivy.data_classes.array.manipulation)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation"]], "_abc_impl (ivy.data_classes.array.manipulation._arraywithmanipulation attribute)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation._abc_impl"]], "clip() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.clip"]], "concat() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.concat"]], "constant_pad() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.constant_pad"]], "expand_dims() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.expand_dims"]], "flip() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.flip"]], "ivy.data_classes.array.manipulation": [[13, "module-ivy.data_classes.array.manipulation"]], "permute_dims() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.permute_dims"]], "repeat() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.repeat"]], "reshape() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.reshape"]], "roll() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.roll"]], "split() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.split"]], "squeeze() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.squeeze"]], "stack() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.stack"]], "swapaxes() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.swapaxes"]], "tile() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.tile"]], "unstack() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.unstack"]], "view() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.view"]], "zero_pad() (ivy.data_classes.array.manipulation._arraywithmanipulation method)": [[13, "ivy.data_classes.array.manipulation._ArrayWithManipulation.zero_pad"]], "_arraywithnorms (class in ivy.data_classes.array.norms)": [[14, "ivy.data_classes.array.norms._ArrayWithNorms"]], "_abc_impl (ivy.data_classes.array.norms._arraywithnorms attribute)": [[14, "ivy.data_classes.array.norms._ArrayWithNorms._abc_impl"]], "ivy.data_classes.array.norms": [[14, "module-ivy.data_classes.array.norms"]], "layer_norm() (ivy.data_classes.array.norms._arraywithnorms method)": [[14, "ivy.data_classes.array.norms._ArrayWithNorms.layer_norm"]], "_arraywithrandom (class in ivy.data_classes.array.random)": [[15, "ivy.data_classes.array.random._ArrayWithRandom"]], "_abc_impl (ivy.data_classes.array.random._arraywithrandom attribute)": [[15, "ivy.data_classes.array.random._ArrayWithRandom._abc_impl"]], "ivy.data_classes.array.random": [[15, "module-ivy.data_classes.array.random"]], "multinomial() (ivy.data_classes.array.random._arraywithrandom method)": [[15, "ivy.data_classes.array.random._ArrayWithRandom.multinomial"]], "randint() (ivy.data_classes.array.random._arraywithrandom method)": [[15, "ivy.data_classes.array.random._ArrayWithRandom.randint"]], "random_normal() (ivy.data_classes.array.random._arraywithrandom method)": [[15, "ivy.data_classes.array.random._ArrayWithRandom.random_normal"]], "random_uniform() (ivy.data_classes.array.random._arraywithrandom method)": [[15, "ivy.data_classes.array.random._ArrayWithRandom.random_uniform"]], "shuffle() (ivy.data_classes.array.random._arraywithrandom method)": [[15, "ivy.data_classes.array.random._ArrayWithRandom.shuffle"]], "_arraywithsearching (class in ivy.data_classes.array.searching)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching"]], "_abc_impl (ivy.data_classes.array.searching._arraywithsearching attribute)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching._abc_impl"]], "argmax() (ivy.data_classes.array.searching._arraywithsearching method)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching.argmax"]], "argmin() (ivy.data_classes.array.searching._arraywithsearching method)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching.argmin"]], "argwhere() (ivy.data_classes.array.searching._arraywithsearching method)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching.argwhere"]], "ivy.data_classes.array.searching": [[16, "module-ivy.data_classes.array.searching"]], "nonzero() (ivy.data_classes.array.searching._arraywithsearching method)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching.nonzero"]], "where() (ivy.data_classes.array.searching._arraywithsearching method)": [[16, "ivy.data_classes.array.searching._ArrayWithSearching.where"]], "_arraywithset (class in ivy.data_classes.array.set)": [[17, "ivy.data_classes.array.set._ArrayWithSet"]], "_abc_impl (ivy.data_classes.array.set._arraywithset attribute)": [[17, "ivy.data_classes.array.set._ArrayWithSet._abc_impl"]], "ivy.data_classes.array.set": [[17, "module-ivy.data_classes.array.set"]], "unique_all() (ivy.data_classes.array.set._arraywithset method)": [[17, "ivy.data_classes.array.set._ArrayWithSet.unique_all"]], "unique_counts() (ivy.data_classes.array.set._arraywithset method)": [[17, "ivy.data_classes.array.set._ArrayWithSet.unique_counts"]], "unique_inverse() (ivy.data_classes.array.set._arraywithset method)": [[17, "ivy.data_classes.array.set._ArrayWithSet.unique_inverse"]], "unique_values() (ivy.data_classes.array.set._arraywithset method)": [[17, "ivy.data_classes.array.set._ArrayWithSet.unique_values"]], "_arraywithsorting (class in ivy.data_classes.array.sorting)": [[18, "ivy.data_classes.array.sorting._ArrayWithSorting"]], "_abc_impl (ivy.data_classes.array.sorting._arraywithsorting attribute)": [[18, "ivy.data_classes.array.sorting._ArrayWithSorting._abc_impl"]], "argsort() (ivy.data_classes.array.sorting._arraywithsorting method)": [[18, "ivy.data_classes.array.sorting._ArrayWithSorting.argsort"]], "ivy.data_classes.array.sorting": [[18, "module-ivy.data_classes.array.sorting"]], "searchsorted() (ivy.data_classes.array.sorting._arraywithsorting method)": [[18, "ivy.data_classes.array.sorting._ArrayWithSorting.searchsorted"]], "sort() (ivy.data_classes.array.sorting._arraywithsorting method)": [[18, "ivy.data_classes.array.sorting._ArrayWithSorting.sort"]], "_arraywithstatistical (class in ivy.data_classes.array.statistical)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical"]], "_abc_impl (ivy.data_classes.array.statistical._arraywithstatistical attribute)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical._abc_impl"]], "cumprod() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.cumprod"]], "cumsum() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.cumsum"]], "einsum() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.einsum"]], "ivy.data_classes.array.statistical": [[19, "module-ivy.data_classes.array.statistical"]], "max() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.max"]], "mean() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.mean"]], "min() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.min"]], "prod() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.prod"]], "std() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.std"]], "sum() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.sum"]], "var() (ivy.data_classes.array.statistical._arraywithstatistical method)": [[19, "ivy.data_classes.array.statistical._ArrayWithStatistical.var"]], "_arraywithutility (class in ivy.data_classes.array.utility)": [[20, "ivy.data_classes.array.utility._ArrayWithUtility"]], "_abc_impl (ivy.data_classes.array.utility._arraywithutility attribute)": [[20, "ivy.data_classes.array.utility._ArrayWithUtility._abc_impl"]], "all() (ivy.data_classes.array.utility._arraywithutility method)": [[20, "ivy.data_classes.array.utility._ArrayWithUtility.all"]], "any() (ivy.data_classes.array.utility._arraywithutility method)": [[20, "ivy.data_classes.array.utility._ArrayWithUtility.any"]], "ivy.data_classes.array.utility": [[20, "module-ivy.data_classes.array.utility"]], "_wrap_function() (in module ivy.data_classes.array.wrapping)": [[21, "ivy.data_classes.array.wrapping._wrap_function"]], "add_ivy_array_instance_methods() (in module ivy.data_classes.array.wrapping)": [[21, "ivy.data_classes.array.wrapping.add_ivy_array_instance_methods"]], "ivy.data_classes.array.wrapping": [[21, "module-ivy.data_classes.array.wrapping"]], "_containerwithactivations (class in ivy.data_classes.container.activations)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations"]], "_abc_impl (ivy.data_classes.container.activations._containerwithactivations attribute)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations._abc_impl"]], "gelu() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.gelu"]], "ivy.data_classes.container.activations": [[22, "module-ivy.data_classes.container.activations"]], "leaky_relu() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.leaky_relu"]], "log_softmax() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.log_softmax"]], "mish() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.mish"]], "relu() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.relu"]], "sigmoid() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.sigmoid"]], "softmax() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.softmax"]], "softplus() (ivy.data_classes.container.activations._containerwithactivations method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.softplus"]], "static_gelu() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_gelu"]], "static_leaky_relu() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_leaky_relu"]], "static_log_softmax() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_log_softmax"]], "static_mish() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_mish"]], "static_relu() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_relu"]], "static_sigmoid() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_sigmoid"]], "static_softmax() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_softmax"]], "static_softplus() (ivy.data_classes.container.activations._containerwithactivations static method)": [[22, "ivy.data_classes.container.activations._ContainerWithActivations.static_softplus"]], "containerbase (class in ivy.data_classes.container.base)": [[23, "ivy.data_classes.container.base.ContainerBase"]], "__getitem__() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.__getitem__"]], "__init__() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.__init__"]], "__setitem__() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.__setitem__"]], "_abc_impl (ivy.data_classes.container.base.containerbase attribute)": [[23, "ivy.data_classes.container.base.ContainerBase._abc_impl"]], "_cont_at_key_chains_input_as_dict() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_at_key_chains_input_as_dict"]], "_cont_at_key_chains_input_as_seq() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_at_key_chains_input_as_seq"]], "_cont_call_static_method_with_flexible_args() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_call_static_method_with_flexible_args"]], "_cont_concat_unify() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_concat_unify"]], "_cont_get_dev() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_get_dev"]], "_cont_get_shape() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_get_shape"]], "_cont_get_shapes() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_get_shapes"]], "_cont_ivy (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_ivy"]], "_cont_mean_unify() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_mean_unify"]], "_cont_prune_key_chains_input_as_dict() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_prune_key_chains_input_as_dict"]], "_cont_prune_key_chains_input_as_seq() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_prune_key_chains_input_as_seq"]], "_cont_slice_keys() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_slice_keys"]], "_cont_sum_unify() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase._cont_sum_unify"]], "_get_queue_item() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase._get_queue_item"]], "_is_jsonable() (in module ivy.data_classes.container.base)": [[23, "ivy.data_classes.container.base._is_jsonable"]], "_repr() (in module ivy.data_classes.container.base)": [[23, "ivy.data_classes.container.base._repr"]], "cont_all_false() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_all_false"]], "cont_all_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_all_key_chains"]], "cont_all_true() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_all_true"]], "cont_as_bools() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_as_bools"]], "cont_assert_contains_sub_container() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_assert_contains_sub_container"]], "cont_assert_contains_sub_structure() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_assert_contains_sub_structure"]], "cont_assert_identical() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_assert_identical"]], "cont_assert_identical_structure() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_assert_identical_structure"]], "cont_at_key_chain() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_at_key_chain"]], "cont_at_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_at_key_chains"]], "cont_at_keys() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_at_keys"]], "cont_combine() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_combine"]], "cont_common_key_chains() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_common_key_chains"]], "cont_config (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_config"]], "cont_contains_sub_container() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_contains_sub_container"]], "cont_contains_sub_structure() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_contains_sub_structure"]], "cont_copy() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_copy"]], "cont_create_if_absent() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_create_if_absent"]], "cont_cutoff_at_depth() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_cutoff_at_depth"]], "cont_cutoff_at_height() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_cutoff_at_height"]], "cont_deep_copy() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_deep_copy"]], "cont_dev (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_dev"]], "cont_dev_str (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_dev_str"]], "cont_diff() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_diff"]], "cont_duplicate_array_keychains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_duplicate_array_keychains"]], "cont_find_sub_container() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_find_sub_container"]], "cont_find_sub_structure() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_find_sub_structure"]], "cont_flatten_key_chain() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_flatten_key_chain"]], "cont_flatten_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_flatten_key_chains"]], "cont_format_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_format_key_chains"]], "cont_from_disk_as_hdf5() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_from_disk_as_hdf5"]], "cont_from_disk_as_json() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_from_disk_as_json"]], "cont_from_disk_as_pickled() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_from_disk_as_pickled"]], "cont_from_flat_list() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_from_flat_list"]], "cont_handle_inplace() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_handle_inplace"]], "cont_has_key() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_has_key"]], "cont_has_key_chain() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_has_key_chain"]], "cont_identical() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_identical"]], "cont_identical_array_shapes() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_identical_array_shapes"]], "cont_identical_configs() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_identical_configs"]], "cont_identical_structure() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_identical_structure"]], "cont_if_exists() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_if_exists"]], "cont_inplace_update() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_inplace_update"]], "cont_ivy (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_ivy"]], "cont_key_chains_containing() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_key_chains_containing"]], "cont_list_join() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_list_join"]], "cont_list_stack() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_list_stack"]], "cont_map() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_map"]], "cont_map_sub_conts() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_map_sub_conts"]], "cont_max_depth (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_max_depth"]], "cont_multi_map() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_multi_map"]], "cont_multi_map_in_function() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_multi_map_in_function"]], "cont_num_arrays() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_num_arrays"]], "cont_overwrite_at_key_chain() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_overwrite_at_key_chain"]], "cont_overwrite_at_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_overwrite_at_key_chains"]], "cont_prune_empty() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_prune_empty"]], "cont_prune_key_chain() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_prune_key_chain"]], "cont_prune_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_prune_key_chains"]], "cont_prune_key_from_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_prune_key_from_key_chains"]], "cont_prune_keys() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_prune_keys"]], "cont_prune_keys_from_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_prune_keys_from_key_chains"]], "cont_reduce() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_reduce"]], "cont_remove_key_length_limit() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_remove_key_length_limit"]], "cont_remove_print_limit() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_remove_print_limit"]], "cont_reshape_like() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_reshape_like"]], "cont_restructure() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_restructure"]], "cont_restructure_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_restructure_key_chains"]], "cont_set_at_key_chain() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_set_at_key_chain"]], "cont_set_at_key_chains() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_set_at_key_chains"]], "cont_set_at_keys() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_set_at_keys"]], "cont_shape (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_shape"]], "cont_shapes (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_shapes"]], "cont_show() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_show"]], "cont_show_sub_container() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_show_sub_container"]], "cont_size_ordered_arrays() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_size_ordered_arrays"]], "cont_slice_keys() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_slice_keys"]], "cont_slice_via_key() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_slice_via_key"]], "cont_sort_by_key() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_sort_by_key"]], "cont_structural_diff() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_structural_diff"]], "cont_to_dict() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_dict"]], "cont_to_disk_as_hdf5() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_disk_as_hdf5"]], "cont_to_disk_as_json() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_disk_as_json"]], "cont_to_disk_as_pickled() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_disk_as_pickled"]], "cont_to_flat_list() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_flat_list"]], "cont_to_iterator() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_iterator"]], "cont_to_iterator_keys() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_iterator_keys"]], "cont_to_iterator_values() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_iterator_values"]], "cont_to_jsonable() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_jsonable"]], "cont_to_nested_list() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_nested_list"]], "cont_to_raw() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_to_raw"]], "cont_trim_key() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_trim_key"]], "cont_try_kc() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_try_kc"]], "cont_unify() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_unify"]], "cont_unstack_conts() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_unstack_conts"]], "cont_update_config() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_update_config"]], "cont_with_default_key_color() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_default_key_color"]], "cont_with_entries_as_lists() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_entries_as_lists"]], "cont_with_ivy_backend() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_ivy_backend"]], "cont_with_key_length_limit() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_key_length_limit"]], "cont_with_print_indent() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_print_indent"]], "cont_with_print_limit() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_print_limit"]], "cont_with_print_line_spacing() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.cont_with_print_line_spacing"]], "dynamic_backend (ivy.data_classes.container.base.containerbase property)": [[23, "ivy.data_classes.container.base.ContainerBase.dynamic_backend"]], "h5_file_size() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.h5_file_size"]], "ivy.data_classes.container.base": [[23, "module-ivy.data_classes.container.base"]], "shuffle_h5_file() (ivy.data_classes.container.base.containerbase static method)": [[23, "ivy.data_classes.container.base.ContainerBase.shuffle_h5_file"]], "split_conts() (ivy.data_classes.container.base.containerbase method)": [[23, "ivy.data_classes.container.base.ContainerBase.split_conts"]], "_containerwithconversions (class in ivy.data_classes.container.conversions)": [[24, "ivy.data_classes.container.conversions._ContainerWithConversions"]], "_abc_impl (ivy.data_classes.container.conversions._containerwithconversions attribute)": [[24, "ivy.data_classes.container.conversions._ContainerWithConversions._abc_impl"]], "ivy.data_classes.container.conversions": [[24, "module-ivy.data_classes.container.conversions"]], "static_to_ivy() (ivy.data_classes.container.conversions._containerwithconversions static method)": [[24, "ivy.data_classes.container.conversions._ContainerWithConversions.static_to_ivy"]], "static_to_native() (ivy.data_classes.container.conversions._containerwithconversions static method)": [[24, "ivy.data_classes.container.conversions._ContainerWithConversions.static_to_native"]], "to_ivy() (ivy.data_classes.container.conversions._containerwithconversions method)": [[24, "ivy.data_classes.container.conversions._ContainerWithConversions.to_ivy"]], "to_native() (ivy.data_classes.container.conversions._containerwithconversions method)": [[24, "ivy.data_classes.container.conversions._ContainerWithConversions.to_native"]], "_containerwithcreation (class in ivy.data_classes.container.creation)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation"]], "_abc_impl (ivy.data_classes.container.creation._containerwithcreation attribute)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation._abc_impl"]], "empty_like() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.empty_like"]], "from_dlpack() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.from_dlpack"]], "full_like() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.full_like"]], "ivy.data_classes.container.creation": [[25, "module-ivy.data_classes.container.creation"]], "linspace() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.linspace"]], "logspace() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.logspace"]], "meshgrid() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.meshgrid"]], "native_array() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.native_array"]], "one_hot() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.one_hot"]], "ones_like() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.ones_like"]], "static_arange() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_arange"]], "static_asarray() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_asarray"]], "static_empty_like() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_empty_like"]], "static_eye() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_eye"]], "static_from_dlpack() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_from_dlpack"]], "static_full_like() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_full_like"]], "static_linspace() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_linspace"]], "static_logspace() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_logspace"]], "static_meshgrid() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_meshgrid"]], "static_native_array() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_native_array"]], "static_one_hot() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_one_hot"]], "static_ones() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_ones"]], "static_ones_like() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_ones_like"]], "static_tril() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_tril"]], "static_triu() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_triu"]], "static_zeros() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_zeros"]], "static_zeros_like() (ivy.data_classes.container.creation._containerwithcreation static method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.static_zeros_like"]], "tril() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.tril"]], "triu() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.triu"]], "zeros_like() (ivy.data_classes.container.creation._containerwithcreation method)": [[25, "ivy.data_classes.container.creation._ContainerWithCreation.zeros_like"]], "_containerwithdatatypes (class in ivy.data_classes.container.data_type)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes"]], "_abc_impl (ivy.data_classes.container.data_type._containerwithdatatypes attribute)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes._abc_impl"]], "astype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.astype"]], "broadcast_arrays() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.broadcast_to"]], "can_cast() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.can_cast"]], "dtype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.dtype"]], "finfo() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.finfo"]], "iinfo() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.is_bool_dtype"]], "is_complex_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.is_complex_dtype"]], "is_float_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.is_uint_dtype"]], "ivy.data_classes.container.data_type": [[26, "module-ivy.data_classes.container.data_type"]], "result_type() (ivy.data_classes.container.data_type._containerwithdatatypes method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.result_type"]], "static_astype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_astype"]], "static_broadcast_arrays() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_broadcast_arrays"]], "static_broadcast_to() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_broadcast_to"]], "static_can_cast() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_can_cast"]], "static_default_complex_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_default_complex_dtype"]], "static_default_float_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_default_float_dtype"]], "static_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_dtype"]], "static_finfo() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_finfo"]], "static_function_supported_dtypes() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_function_unsupported_dtypes"]], "static_iinfo() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_iinfo"]], "static_is_bool_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_is_bool_dtype"]], "static_is_complex_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_is_complex_dtype"]], "static_is_float_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_is_float_dtype"]], "static_is_int_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_is_int_dtype"]], "static_is_uint_dtype() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_is_uint_dtype"]], "static_result_type() (ivy.data_classes.container.data_type._containerwithdatatypes static method)": [[26, "ivy.data_classes.container.data_type._ContainerWithDataTypes.static_result_type"]], "_containerwithdevice (class in ivy.data_classes.container.device)": [[27, "ivy.data_classes.container.device._ContainerWithDevice"]], "_abc_impl (ivy.data_classes.container.device._containerwithdevice attribute)": [[27, "ivy.data_classes.container.device._ContainerWithDevice._abc_impl"]], "dev() (ivy.data_classes.container.device._containerwithdevice method)": [[27, "ivy.data_classes.container.device._ContainerWithDevice.dev"]], "ivy.data_classes.container.device": [[27, "module-ivy.data_classes.container.device"]], "static_dev() (ivy.data_classes.container.device._containerwithdevice static method)": [[27, "ivy.data_classes.container.device._ContainerWithDevice.static_dev"]], "static_to_device() (ivy.data_classes.container.device._containerwithdevice static method)": [[27, "ivy.data_classes.container.device._ContainerWithDevice.static_to_device"]], "to_device() (ivy.data_classes.container.device._containerwithdevice method)": [[27, "ivy.data_classes.container.device._ContainerWithDevice.to_device"]], "_containerwithelementwise (class in ivy.data_classes.container.elementwise)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise"]], "_abc_impl (ivy.data_classes.container.elementwise._containerwithelementwise attribute)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise._abc_impl"]], "abs() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.abs"]], "acos() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.acos"]], "acosh() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.acosh"]], "add() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.add"]], "asin() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.asin"]], "asinh() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.asinh"]], "atan() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.atan"]], "atan2() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.atan2"]], "atanh() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.atanh"]], "bitwise_and() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.bitwise_xor"]], "ceil() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.ceil"]], "cos() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.cos"]], "cosh() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.cosh"]], "deg2rad() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.deg2rad"]], "divide() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.divide"]], "equal() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.equal"]], "erf() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.erf"]], "exp() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.exp"]], "expm1() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.expm1"]], "floor() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.floor"]], "floor_divide() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.floor_divide"]], "greater() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.greater"]], "greater_equal() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.greater_equal"]], "isfinite() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.isfinite"]], "isinf() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.isinf"]], "isnan() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.isnan"]], "isreal() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.isreal"]], "ivy.data_classes.container.elementwise": [[28, "module-ivy.data_classes.container.elementwise"]], "less() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.less"]], "less_equal() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.less_equal"]], "log() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.log"]], "log10() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.log10"]], "log1p() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.log1p"]], "log2() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.log2"]], "logaddexp() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.logaddexp"]], "logical_and() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.logical_and"]], "logical_not() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.logical_not"]], "logical_or() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.logical_or"]], "logical_xor() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.logical_xor"]], "maximum() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.maximum"]], "minimum() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.minimum"]], "multiply() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.multiply"]], "negative() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.negative"]], "not_equal() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.not_equal"]], "positive() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.positive"]], "pow() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.pow"]], "rad2deg() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.rad2deg"]], "reciprocal() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.reciprocal"]], "remainder() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.remainder"]], "round() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.round"]], "sign() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.sign"]], "sin() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.sin"]], "sinh() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.sinh"]], "sqrt() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.sqrt"]], "square() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.square"]], "static_abs() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_abs"]], "static_acos() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_acos"]], "static_acosh() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_acosh"]], "static_add() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_add"]], "static_asin() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_asin"]], "static_asinh() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_asinh"]], "static_atan() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_atan"]], "static_atan2() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_atan2"]], "static_atanh() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_atanh"]], "static_bitwise_and() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_bitwise_and"]], "static_bitwise_invert() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_bitwise_invert"]], "static_bitwise_left_shift() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_bitwise_left_shift"]], "static_bitwise_or() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_bitwise_or"]], "static_bitwise_right_shift() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_bitwise_right_shift"]], "static_bitwise_xor() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_bitwise_xor"]], "static_ceil() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_ceil"]], "static_cos() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_cos"]], "static_cosh() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_cosh"]], "static_deg2rad() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_deg2rad"]], "static_divide() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_divide"]], "static_equal() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_equal"]], "static_erf() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_erf"]], "static_exp() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_exp"]], "static_expm1() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_expm1"]], "static_floor() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_floor"]], "static_floor_divide() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_floor_divide"]], "static_greater() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_greater"]], "static_greater_equal() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_greater_equal"]], "static_isfinite() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_isfinite"]], "static_isinf() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_isinf"]], "static_isnan() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_isnan"]], "static_isreal() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_isreal"]], "static_less() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_less"]], "static_less_equal() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_less_equal"]], "static_log() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_log"]], "static_log10() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_log10"]], "static_log1p() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_log1p"]], "static_log2() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_log2"]], "static_logaddexp() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_logaddexp"]], "static_logical_and() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_logical_and"]], "static_logical_not() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_logical_not"]], "static_logical_or() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_logical_or"]], "static_logical_xor() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_logical_xor"]], "static_maximum() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_maximum"]], "static_minimum() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_minimum"]], "static_multiply() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_multiply"]], "static_negative() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_negative"]], "static_not_equal() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_not_equal"]], "static_positive() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_positive"]], "static_pow() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_pow"]], "static_rad2deg() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_rad2deg"]], "static_reciprocal() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_reciprocal"]], "static_remainder() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_remainder"]], "static_round() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_round"]], "static_sign() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_sign"]], "static_sin() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_sin"]], "static_sinh() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_sinh"]], "static_sqrt() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_sqrt"]], "static_square() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_square"]], "static_subtract() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_subtract"]], "static_tan() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_tan"]], "static_tanh() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_tanh"]], "static_trapz() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_trapz"]], "static_trunc() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_trunc"]], "static_trunc_divide() (ivy.data_classes.container.elementwise._containerwithelementwise static method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.static_trunc_divide"]], "subtract() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.subtract"]], "tan() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.tan"]], "tanh() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.tanh"]], "trapz() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.trapz"]], "trunc() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.trunc"]], "trunc_divide() (ivy.data_classes.container.elementwise._containerwithelementwise method)": [[28, "ivy.data_classes.container.elementwise._ContainerWithElementwise.trunc_divide"]], "_containerwithactivationexperimental (class in ivy.data_classes.container.experimental.activations)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental"]], "_containerwithconversionexperimental (class in ivy.data_classes.container.experimental.conversions)": [[29, "ivy.data_classes.container.experimental.conversions._ContainerWithConversionExperimental"]], "_containerwithcreationexperimental (class in ivy.data_classes.container.experimental.creation)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental"]], "_containerwithdata_typeexperimental (class in ivy.data_classes.container.experimental.data_type)": [[29, "ivy.data_classes.container.experimental.data_type._ContainerWithData_typeExperimental"]], "_containerwithdeviceexperimental (class in ivy.data_classes.container.experimental.device)": [[29, "ivy.data_classes.container.experimental.device._ContainerWithDeviceExperimental"]], "_containerwithelementwiseexperimental (class in ivy.data_classes.container.experimental.elementwise)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental"]], "_containerwithgeneralexperimental (class in ivy.data_classes.container.experimental.general)": [[29, "ivy.data_classes.container.experimental.general._ContainerWithGeneralExperimental"]], "_containerwithgradientsexperimental (class in ivy.data_classes.container.experimental.gradients)": [[29, "ivy.data_classes.container.experimental.gradients._ContainerWithGradientsExperimental"]], "_containerwithimageexperimental (class in ivy.data_classes.container.experimental.image)": [[29, "ivy.data_classes.container.experimental.image._ContainerWithImageExperimental"]], "_containerwithlayersexperimental (class in ivy.data_classes.container.experimental.layers)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental"]], "_containerwithlinearalgebraexperimental (class in ivy.data_classes.container.experimental.linear_algebra)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental"]], "_containerwithlossesexperimental (class in ivy.data_classes.container.experimental.losses)": [[29, "ivy.data_classes.container.experimental.losses._ContainerWithLossesExperimental"]], "_containerwithmanipulationexperimental (class in ivy.data_classes.container.experimental.manipulation)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental"]], "_containerwithnormsexperimental (class in ivy.data_classes.container.experimental.norms)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental"]], "_containerwithrandomexperimental (class in ivy.data_classes.container.experimental.random)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental"]], "_containerwithsearchingexperimental (class in ivy.data_classes.container.experimental.searching)": [[29, "ivy.data_classes.container.experimental.searching._ContainerWithSearchingExperimental"]], "_containerwithsetexperimental (class in ivy.data_classes.container.experimental.set)": [[29, "ivy.data_classes.container.experimental.set._ContainerWithSetExperimental"]], "_containerwithsortingexperimental (class in ivy.data_classes.container.experimental.sorting)": [[29, "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental"]], "_containerwithstatisticalexperimental (class in ivy.data_classes.container.experimental.statistical)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental"]], "_containerwithutilityexperimental (class in ivy.data_classes.container.experimental.utility)": [[29, "ivy.data_classes.container.experimental.utility._ContainerWithUtilityExperimental"]], "_abc_impl (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental attribute)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.conversions._containerwithconversionexperimental attribute)": [[29, "ivy.data_classes.container.experimental.conversions._ContainerWithConversionExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental attribute)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.data_type._containerwithdata_typeexperimental attribute)": [[29, "ivy.data_classes.container.experimental.data_type._ContainerWithData_typeExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.device._containerwithdeviceexperimental attribute)": [[29, "ivy.data_classes.container.experimental.device._ContainerWithDeviceExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental attribute)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.general._containerwithgeneralexperimental attribute)": [[29, "ivy.data_classes.container.experimental.general._ContainerWithGeneralExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.gradients._containerwithgradientsexperimental attribute)": [[29, "ivy.data_classes.container.experimental.gradients._ContainerWithGradientsExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.image._containerwithimageexperimental attribute)": [[29, "ivy.data_classes.container.experimental.image._ContainerWithImageExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental attribute)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental attribute)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.losses._containerwithlossesexperimental attribute)": [[29, "ivy.data_classes.container.experimental.losses._ContainerWithLossesExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental attribute)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental attribute)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.random._containerwithrandomexperimental attribute)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.searching._containerwithsearchingexperimental attribute)": [[29, "ivy.data_classes.container.experimental.searching._ContainerWithSearchingExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.set._containerwithsetexperimental attribute)": [[29, "ivy.data_classes.container.experimental.set._ContainerWithSetExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.sorting._containerwithsortingexperimental attribute)": [[29, "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental attribute)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental._abc_impl"]], "_abc_impl (ivy.data_classes.container.experimental.utility._containerwithutilityexperimental attribute)": [[29, "ivy.data_classes.container.experimental.utility._ContainerWithUtilityExperimental._abc_impl"]], "adaptive_avg_pool1d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.adaptive_avg_pool2d"]], "adjoint() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.allclose"]], "angle() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.avg_pool3d"]], "batch_norm() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.batch_norm"]], "bernoulli() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.bernoulli"]], "beta() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.beta"]], "binarizer() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.binarizer"]], "binary_cross_entropy_with_logits() (ivy.data_classes.container.experimental.losses._containerwithlossesexperimental method)": [[29, "ivy.data_classes.container.experimental.losses._ContainerWithLossesExperimental.binary_cross_entropy_with_logits"]], "bincount() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.bincount"]], "broadcast_shapes() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.broadcast_shapes"]], "cond() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.cond"]], "conj() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.conj"]], "copysign() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.dct"]], "dft() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.dft"]], "diagflat() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.diff"]], "dirichlet() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.dirichlet"]], "dsplit() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.dsplit"]], "dstack() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.dstack"]], "eig() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.eig"]], "eigh_tridiagonal() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.eigh_tridiagonal"]], "eigvals() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.embedding"]], "exp2() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.exp2"]], "expand() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.expand"]], "eye_like() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.eye_like"]], "fft() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.fft"]], "fix() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.fix"]], "flatten() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.flatten"]], "fliplr() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.fliplr"]], "flipud() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.flipud"]], "float_power() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.float_power"]], "fmax() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.fmax"]], "fmin() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.fmin"]], "fmod() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.fmod"]], "frexp() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.frexp"]], "gcd() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.gcd"]], "gradient() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.gradient"]], "hamming_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.hamming_window"]], "hann_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.hann_window"]], "heaviside() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.heaviside"]], "hsplit() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.hsplit"]], "hstack() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.hstack"]], "hypot() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.hypot"]], "i0() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.i0"]], "ifft() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.ifft"]], "imag() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.imag"]], "instance_norm() (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental method)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental.instance_norm"]], "interpolate() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.interpolate"]], "isclose() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.isclose"]], "isin() (ivy.data_classes.container.experimental.general._containerwithgeneralexperimental method)": [[29, "ivy.data_classes.container.experimental.general._ContainerWithGeneralExperimental.isin"]], "ivy.data_classes.container.experimental": [[29, "module-ivy.data_classes.container.experimental"]], "ivy.data_classes.container.experimental.activations": [[29, "module-ivy.data_classes.container.experimental.activations"]], "ivy.data_classes.container.experimental.conversions": [[29, "module-ivy.data_classes.container.experimental.conversions"]], "ivy.data_classes.container.experimental.creation": [[29, "module-ivy.data_classes.container.experimental.creation"]], "ivy.data_classes.container.experimental.data_type": [[29, "module-ivy.data_classes.container.experimental.data_type"]], "ivy.data_classes.container.experimental.device": [[29, "module-ivy.data_classes.container.experimental.device"]], "ivy.data_classes.container.experimental.elementwise": [[29, "module-ivy.data_classes.container.experimental.elementwise"]], "ivy.data_classes.container.experimental.general": [[29, "module-ivy.data_classes.container.experimental.general"]], "ivy.data_classes.container.experimental.gradients": [[29, "module-ivy.data_classes.container.experimental.gradients"]], "ivy.data_classes.container.experimental.image": [[29, "module-ivy.data_classes.container.experimental.image"]], "ivy.data_classes.container.experimental.layers": [[29, "module-ivy.data_classes.container.experimental.layers"]], "ivy.data_classes.container.experimental.linear_algebra": [[29, "module-ivy.data_classes.container.experimental.linear_algebra"]], "ivy.data_classes.container.experimental.losses": [[29, "module-ivy.data_classes.container.experimental.losses"]], "ivy.data_classes.container.experimental.manipulation": [[29, "module-ivy.data_classes.container.experimental.manipulation"]], "ivy.data_classes.container.experimental.norms": [[29, "module-ivy.data_classes.container.experimental.norms"]], "ivy.data_classes.container.experimental.random": [[29, "module-ivy.data_classes.container.experimental.random"]], "ivy.data_classes.container.experimental.searching": [[29, "module-ivy.data_classes.container.experimental.searching"]], "ivy.data_classes.container.experimental.set": [[29, "module-ivy.data_classes.container.experimental.set"]], "ivy.data_classes.container.experimental.sorting": [[29, "module-ivy.data_classes.container.experimental.sorting"]], "ivy.data_classes.container.experimental.statistical": [[29, "module-ivy.data_classes.container.experimental.statistical"]], "ivy.data_classes.container.experimental.utility": [[29, "module-ivy.data_classes.container.experimental.utility"]], "kaiser_bessel_derived_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.kaiser_bessel_derived_window"]], "kaiser_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.kaiser_window"]], "kron() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental method)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental.l2_normalize"]], "lcm() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.lcm"]], "ldexp() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.ldexp"]], "lexsort() (ivy.data_classes.container.experimental.sorting._containerwithsortingexperimental method)": [[29, "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.logit"]], "logsigmoid() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.logsigmoid"]], "lp_normalize() (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental method)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.max_pool3d"]], "median() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.median"]], "moveaxis() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.moveaxis"]], "msort() (ivy.data_classes.container.experimental.sorting._containerwithsortingexperimental method)": [[29, "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental.msort"]], "multi_dot() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.multi_dot"]], "nan_to_num() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.nansum"]], "nextafter() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.nextafter"]], "pad() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.pad"]], "poisson() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.poisson"]], "prelu() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.prelu"]], "quantile() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.quantile"]], "real() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.real"]], "relu6() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.relu6"]], "rot90() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.rot90"]], "signbit() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.signbit"]], "sinc() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.sinc"]], "static_adaptive_avg_pool1d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_adaptive_avg_pool1d"]], "static_adaptive_avg_pool2d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_adaptive_avg_pool2d"]], "static_adjoint() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_adjoint"]], "static_allclose() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_allclose"]], "static_angle() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_angle"]], "static_atleast_1d() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_atleast_1d"]], "static_atleast_2d() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_atleast_2d"]], "static_atleast_3d() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_atleast_3d"]], "static_avg_pool1d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_avg_pool1d"]], "static_avg_pool2d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_avg_pool2d"]], "static_avg_pool3d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_avg_pool3d"]], "static_batch_norm() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental static method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.static_batch_norm"]], "static_bernoulli() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental static method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.static_bernoulli"]], "static_beta() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental static method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.static_beta"]], "static_binarizer() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_binarizer"]], "static_binary_cross_entropy_with_logits() (ivy.data_classes.container.experimental.losses._containerwithlossesexperimental static method)": [[29, "ivy.data_classes.container.experimental.losses._ContainerWithLossesExperimental.static_binary_cross_entropy_with_logits"]], "static_bincount() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_bincount"]], "static_broadcast_shapes() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_broadcast_shapes"]], "static_cond() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_cond"]], "static_conj() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_conj"]], "static_copysign() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_copysign"]], "static_corrcoef() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_corrcoef"]], "static_count_nonzero() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_count_nonzero"]], "static_dct() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_dct"]], "static_dft() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_dft"]], "static_diagflat() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_diagflat"]], "static_diff() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_diff"]], "static_dirichlet() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental static method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.static_dirichlet"]], "static_dsplit() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_dsplit"]], "static_dstack() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_dstack"]], "static_eig() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_eig"]], "static_eigh_tridiagonal() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_eigh_tridiagonal"]], "static_eigvals() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_eigvals"]], "static_embedding() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_embedding"]], "static_exp2() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_exp2"]], "static_expand() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_expand"]], "static_eye_like() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_eye_like"]], "static_fft() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_fft"]], "static_fix() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_fix"]], "static_flatten() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_flatten"]], "static_fliplr() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_fliplr"]], "static_flipud() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_flipud"]], "static_float_power() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_float_power"]], "static_fmax() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_fmax"]], "static_fmin() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_fmin"]], "static_fmod() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_fmod"]], "static_frexp() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_frexp"]], "static_gcd() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_gcd"]], "static_gradient() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_gradient"]], "static_hamming_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_hamming_window"]], "static_hann_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_hann_window"]], "static_heaviside() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_heaviside"]], "static_hsplit() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_hsplit"]], "static_hstack() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_hstack"]], "static_hypot() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_hypot"]], "static_i0() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_i0"]], "static_ifft() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_ifft"]], "static_imag() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_imag"]], "static_instance_norm() (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental static method)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental.static_instance_norm"]], "static_interpolate() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_interpolate"]], "static_isclose() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_isclose"]], "static_isin() (ivy.data_classes.container.experimental.general._containerwithgeneralexperimental static method)": [[29, "ivy.data_classes.container.experimental.general._ContainerWithGeneralExperimental.static_isin"]], "static_kaiser_bessel_derived_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_kaiser_bessel_derived_window"]], "static_kaiser_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_kaiser_window"]], "static_kron() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_kron"]], "static_l2_normalize() (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental static method)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental.static_l2_normalize"]], "static_lcm() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_lcm"]], "static_ldexp() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_ldexp"]], "static_lexsort() (ivy.data_classes.container.experimental.sorting._containerwithsortingexperimental static method)": [[29, "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental.static_lexsort"]], "static_logaddexp2() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_logaddexp2"]], "static_logit() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental static method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.static_logit"]], "static_logsigmoid() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental static method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.static_logsigmoid"]], "static_lp_normalize() (ivy.data_classes.container.experimental.norms._containerwithnormsexperimental static method)": [[29, "ivy.data_classes.container.experimental.norms._ContainerWithNormsExperimental.static_lp_normalize"]], "static_matrix_exp() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_matrix_exp"]], "static_max_pool1d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_max_pool1d"]], "static_max_pool2d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_max_pool2d"]], "static_max_pool3d() (ivy.data_classes.container.experimental.layers._containerwithlayersexperimental static method)": [[29, "ivy.data_classes.container.experimental.layers._ContainerWithLayersExperimental.static_max_pool3d"]], "static_median() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_median"]], "static_moveaxis() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_moveaxis"]], "static_msort() (ivy.data_classes.container.experimental.sorting._containerwithsortingexperimental static method)": [[29, "ivy.data_classes.container.experimental.sorting._ContainerWithSortingExperimental.static_msort"]], "static_multi_dot() (ivy.data_classes.container.experimental.linear_algebra._containerwithlinearalgebraexperimental static method)": [[29, "ivy.data_classes.container.experimental.linear_algebra._ContainerWithLinearAlgebraExperimental.static_multi_dot"]], "static_nan_to_num() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_nan_to_num"]], "static_nanmean() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_nanmean"]], "static_nanmedian() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_nanmedian"]], "static_nansum() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_nansum"]], "static_nextafter() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_nextafter"]], "static_pad() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_pad"]], "static_poisson() (ivy.data_classes.container.experimental.random._containerwithrandomexperimental static method)": [[29, "ivy.data_classes.container.experimental.random._ContainerWithRandomExperimental.static_poisson"]], "static_prelu() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental static method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.static_prelu"]], "static_quantile() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_quantile"]], "static_real() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_real"]], "static_relu6() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental static method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.static_relu6"]], "static_rot90() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_rot90"]], "static_signbit() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_signbit"]], "static_sinc() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_sinc"]], "static_take_along_axis() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_take_along_axis"]], "static_thresholded_relu() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental static method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.static_thresholded_relu"]], "static_top_k() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_top_k"]], "static_tril_indices() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_tril_indices"]], "static_triu_indices() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_triu_indices"]], "static_unravel_index() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental static method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.static_unravel_index"]], "static_vorbis_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental static method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.static_vorbis_window"]], "static_vsplit() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_vsplit"]], "static_vstack() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental static method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.static_vstack"]], "static_xlogy() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_xlogy"]], "static_zeta() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental static method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.static_zeta"]], "take_along_axis() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.data_classes.container.experimental.activations._containerwithactivationexperimental method)": [[29, "ivy.data_classes.container.experimental.activations._ContainerWithActivationExperimental.thresholded_relu"]], "top_k() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.top_k"]], "tril_indices() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.tril_indices"]], "triu_indices() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.triu_indices"]], "unravel_index() (ivy.data_classes.container.experimental.statistical._containerwithstatisticalexperimental method)": [[29, "ivy.data_classes.container.experimental.statistical._ContainerWithStatisticalExperimental.unravel_index"]], "vorbis_window() (ivy.data_classes.container.experimental.creation._containerwithcreationexperimental method)": [[29, "ivy.data_classes.container.experimental.creation._ContainerWithCreationExperimental.vorbis_window"]], "vsplit() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.vsplit"]], "vstack() (ivy.data_classes.container.experimental.manipulation._containerwithmanipulationexperimental method)": [[29, "ivy.data_classes.container.experimental.manipulation._ContainerWithManipulationExperimental.vstack"]], "xlogy() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.xlogy"]], "zeta() (ivy.data_classes.container.experimental.elementwise._containerwithelementwiseexperimental method)": [[29, "ivy.data_classes.container.experimental.elementwise._ContainerWithElementWiseExperimental.zeta"]], "_containerwithgeneral (class in ivy.data_classes.container.general)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral"]], "_abc_impl (ivy.data_classes.container.general._containerwithgeneral attribute)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral._abc_impl"]], "all_equal() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.all_equal"]], "array_equal() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.clip_vector_norm"]], "einops_rearrange() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.einops_reduce"]], "einops_repeat() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.einops_repeat"]], "fourier_encode() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.fourier_encode"]], "gather() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.gather"]], "gather_nd() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.gather_nd"]], "get_num_dims() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.get_num_dims"]], "has_nans() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.has_nans"]], "inplace_decrement() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.inplace_increment"]], "inplace_update() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.inplace_update"]], "is_array() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.is_array"]], "is_ivy_array() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.is_ivy_array"]], "is_native_array() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.is_native_array"]], "ivy.data_classes.container.general": [[30, "module-ivy.data_classes.container.general"]], "scatter_flat() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.scatter_flat"]], "scatter_nd() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.scatter_nd"]], "stable_divide() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.stable_divide"]], "stable_pow() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.stable_pow"]], "static_all_equal() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_all_equal"]], "static_array_equal() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_array_equal"]], "static_assert_supports_inplace() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_assert_supports_inplace"]], "static_clip_matrix_norm() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_clip_matrix_norm"]], "static_clip_vector_norm() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_clip_vector_norm"]], "static_einops_rearrange() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_einops_rearrange"]], "static_einops_reduce() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_einops_reduce"]], "static_einops_repeat() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_einops_repeat"]], "static_fourier_encode() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_fourier_encode"]], "static_gather() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_gather"]], "static_gather_nd() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_gather_nd"]], "static_get_num_dims() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_get_num_dims"]], "static_has_nans() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_has_nans"]], "static_inplace_decrement() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_inplace_decrement"]], "static_inplace_increment() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_inplace_increment"]], "static_inplace_update() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_inplace_update"]], "static_is_array() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_is_array"]], "static_is_ivy_array() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_is_ivy_array"]], "static_is_native_array() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_is_native_array"]], "static_scatter_flat() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_scatter_flat"]], "static_scatter_nd() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_scatter_nd"]], "static_stable_divide() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_stable_divide"]], "static_stable_pow() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_stable_pow"]], "static_supports_inplace_updates() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_supports_inplace_updates"]], "static_to_list() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_to_list"]], "static_to_numpy() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_to_numpy"]], "static_to_scalar() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_to_scalar"]], "static_value_is_nan() (ivy.data_classes.container.general._containerwithgeneral static method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.static_value_is_nan"]], "supports_inplace_updates() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.supports_inplace_updates"]], "to_list() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.to_list"]], "to_numpy() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.to_numpy"]], "to_scalar() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.to_scalar"]], "value_is_nan() (ivy.data_classes.container.general._containerwithgeneral method)": [[30, "ivy.data_classes.container.general._ContainerWithGeneral.value_is_nan"]], "_containerwithgradients (class in ivy.data_classes.container.gradients)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients"]], "_abc_impl (ivy.data_classes.container.gradients._containerwithgradients attribute)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients._abc_impl"]], "adam_step() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.adam_step"]], "adam_update() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.adam_update"]], "gradient_descent_update() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.gradient_descent_update"]], "ivy.data_classes.container.gradients": [[31, "module-ivy.data_classes.container.gradients"]], "lamb_update() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.lamb_update"]], "lars_update() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.lars_update"]], "optimizer_update() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.optimizer_update"]], "static_stop_gradient() (ivy.data_classes.container.gradients._containerwithgradients static method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.static_stop_gradient"]], "stop_gradient() (ivy.data_classes.container.gradients._containerwithgradients method)": [[31, "ivy.data_classes.container.gradients._ContainerWithGradients.stop_gradient"]], "_containerwithimage (class in ivy.data_classes.container.image)": [[32, "ivy.data_classes.container.image._ContainerWithImage"]], "_abc_impl (ivy.data_classes.container.image._containerwithimage attribute)": [[32, "ivy.data_classes.container.image._ContainerWithImage._abc_impl"]], "ivy.data_classes.container.image": [[32, "module-ivy.data_classes.container.image"]], "_containerwithlayers (class in ivy.data_classes.container.layers)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers"]], "_abc_impl (ivy.data_classes.container.layers._containerwithlayers attribute)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers._abc_impl"]], "conv1d() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.conv1d"]], "conv1d_transpose() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.conv1d_transpose"]], "conv2d() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.conv2d"]], "conv2d_transpose() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.conv2d_transpose"]], "conv3d() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.conv3d"]], "conv3d_transpose() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.depthwise_conv2d"]], "dropout() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.dropout"]], "dropout1d() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.dropout1d"]], "dropout3d() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.dropout3d"]], "ivy.data_classes.container.layers": [[33, "module-ivy.data_classes.container.layers"]], "linear() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.linear"]], "lstm_update() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.lstm_update"]], "multi_head_attention() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.data_classes.container.layers._containerwithlayers method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.scaled_dot_product_attention"]], "static_conv1d() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_conv1d"]], "static_conv1d_transpose() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_conv1d_transpose"]], "static_conv2d() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_conv2d"]], "static_conv2d_transpose() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_conv2d_transpose"]], "static_conv3d() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_conv3d"]], "static_conv3d_transpose() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_conv3d_transpose"]], "static_depthwise_conv2d() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_depthwise_conv2d"]], "static_dropout() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_dropout"]], "static_dropout1d() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_dropout1d"]], "static_dropout3d() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_dropout3d"]], "static_linear() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_linear"]], "static_lstm_update() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_lstm_update"]], "static_multi_head_attention() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_multi_head_attention"]], "static_scaled_dot_product_attention() (ivy.data_classes.container.layers._containerwithlayers static method)": [[33, "ivy.data_classes.container.layers._ContainerWithLayers.static_scaled_dot_product_attention"]], "_containerwithlinearalgebra (class in ivy.data_classes.container.linear_algebra)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra"]], "_abc_impl (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra attribute)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra._abc_impl"]], "cholesky() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.cholesky"]], "cross() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.cross"]], "det() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.det"]], "diag() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.diag"]], "diagonal() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.diagonal"]], "eigh() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.eigvalsh"]], "inner() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.inner"]], "inv() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.inv"]], "ivy.data_classes.container.linear_algebra": [[34, "module-ivy.data_classes.container.linear_algebra"]], "matmul() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.outer"]], "pinv() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.pinv"]], "qr() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.qr"]], "slogdet() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.slogdet"]], "solve() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.solve"]], "static_cholesky() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_cholesky"]], "static_cross() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_cross"]], "static_det() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_det"]], "static_diag() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_diag"]], "static_diagonal() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_diagonal"]], "static_eigh() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_eigh"]], "static_eigvalsh() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_eigvalsh"]], "static_inner() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_inner"]], "static_inv() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_inv"]], "static_matmul() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_matmul"]], "static_matrix_norm() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_matrix_norm"]], "static_matrix_power() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_matrix_power"]], "static_matrix_rank() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_matrix_rank"]], "static_matrix_transpose() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_matrix_transpose"]], "static_outer() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_outer"]], "static_pinv() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_pinv"]], "static_qr() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_qr"]], "static_slogdet() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_slogdet"]], "static_solve() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_solve"]], "static_svd() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_svd"]], "static_svdvals() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_svdvals"]], "static_tensordot() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_tensordot"]], "static_tensorsolve() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_tensorsolve"]], "static_trace() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_trace"]], "static_vander() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_vander"]], "static_vecdot() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_vecdot"]], "static_vector_norm() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_vector_norm"]], "static_vector_to_skew_symmetric_matrix() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra static method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"]], "svd() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.svd"]], "svdvals() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.svdvals"]], "tensordot() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.tensorsolve"]], "trace() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.trace"]], "vander() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.vander"]], "vecdot() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.data_classes.container.linear_algebra._containerwithlinearalgebra method)": [[34, "ivy.data_classes.container.linear_algebra._ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "_containerwithlosses (class in ivy.data_classes.container.losses)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses"]], "_abc_impl (ivy.data_classes.container.losses._containerwithlosses attribute)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses._abc_impl"]], "binary_cross_entropy() (ivy.data_classes.container.losses._containerwithlosses method)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.data_classes.container.losses._containerwithlosses method)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses.cross_entropy"]], "ivy.data_classes.container.losses": [[35, "module-ivy.data_classes.container.losses"]], "sparse_cross_entropy() (ivy.data_classes.container.losses._containerwithlosses method)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses.sparse_cross_entropy"]], "static_binary_cross_entropy() (ivy.data_classes.container.losses._containerwithlosses static method)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses.static_binary_cross_entropy"]], "static_cross_entropy() (ivy.data_classes.container.losses._containerwithlosses static method)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses.static_cross_entropy"]], "static_sparse_cross_entropy() (ivy.data_classes.container.losses._containerwithlosses static method)": [[35, "ivy.data_classes.container.losses._ContainerWithLosses.static_sparse_cross_entropy"]], "_containerwithmanipulation (class in ivy.data_classes.container.manipulation)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation"]], "_abc_impl (ivy.data_classes.container.manipulation._containerwithmanipulation attribute)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation._abc_impl"]], "clip() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.clip"]], "concat() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.concat"]], "constant_pad() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.constant_pad"]], "expand_dims() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.expand_dims"]], "flip() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.flip"]], "ivy.data_classes.container.manipulation": [[36, "module-ivy.data_classes.container.manipulation"]], "permute_dims() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.permute_dims"]], "repeat() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.repeat"]], "reshape() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.reshape"]], "roll() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.roll"]], "split() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.split"]], "squeeze() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.squeeze"]], "stack() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.stack"]], "static_clip() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_clip"]], "static_concat() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_concat"]], "static_constant_pad() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_constant_pad"]], "static_expand_dims() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_expand_dims"]], "static_flip() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_flip"]], "static_permute_dims() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_permute_dims"]], "static_repeat() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_repeat"]], "static_reshape() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_reshape"]], "static_roll() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_roll"]], "static_split() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_split"]], "static_squeeze() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_squeeze"]], "static_stack() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_stack"]], "static_swapaxes() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_swapaxes"]], "static_tile() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_tile"]], "static_unstack() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_unstack"]], "static_zero_pad() (ivy.data_classes.container.manipulation._containerwithmanipulation static method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.static_zero_pad"]], "swapaxes() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.swapaxes"]], "tile() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.tile"]], "unstack() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.unstack"]], "zero_pad() (ivy.data_classes.container.manipulation._containerwithmanipulation method)": [[36, "ivy.data_classes.container.manipulation._ContainerWithManipulation.zero_pad"]], "_containerwithnorms (class in ivy.data_classes.container.norms)": [[37, "ivy.data_classes.container.norms._ContainerWithNorms"]], "_abc_impl (ivy.data_classes.container.norms._containerwithnorms attribute)": [[37, "ivy.data_classes.container.norms._ContainerWithNorms._abc_impl"]], "ivy.data_classes.container.norms": [[37, "module-ivy.data_classes.container.norms"]], "layer_norm() (ivy.data_classes.container.norms._containerwithnorms method)": [[37, "ivy.data_classes.container.norms._ContainerWithNorms.layer_norm"]], "_containerwithrandom (class in ivy.data_classes.container.random)": [[38, "ivy.data_classes.container.random._ContainerWithRandom"]], "_abc_impl (ivy.data_classes.container.random._containerwithrandom attribute)": [[38, "ivy.data_classes.container.random._ContainerWithRandom._abc_impl"]], "ivy.data_classes.container.random": [[38, "module-ivy.data_classes.container.random"]], "multinomial() (ivy.data_classes.container.random._containerwithrandom method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.multinomial"]], "randint() (ivy.data_classes.container.random._containerwithrandom method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.randint"]], "random_normal() (ivy.data_classes.container.random._containerwithrandom method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.random_normal"]], "random_uniform() (ivy.data_classes.container.random._containerwithrandom method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.random_uniform"]], "shuffle() (ivy.data_classes.container.random._containerwithrandom method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.shuffle"]], "static_multinomial() (ivy.data_classes.container.random._containerwithrandom static method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.static_multinomial"]], "static_randint() (ivy.data_classes.container.random._containerwithrandom static method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.static_randint"]], "static_random_normal() (ivy.data_classes.container.random._containerwithrandom static method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.static_random_normal"]], "static_random_uniform() (ivy.data_classes.container.random._containerwithrandom static method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.static_random_uniform"]], "static_shuffle() (ivy.data_classes.container.random._containerwithrandom static method)": [[38, "ivy.data_classes.container.random._ContainerWithRandom.static_shuffle"]], "_containerwithsearching (class in ivy.data_classes.container.searching)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching"]], "_abc_impl (ivy.data_classes.container.searching._containerwithsearching attribute)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching._abc_impl"]], "argmax() (ivy.data_classes.container.searching._containerwithsearching method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.argmax"]], "argmin() (ivy.data_classes.container.searching._containerwithsearching method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.argmin"]], "argwhere() (ivy.data_classes.container.searching._containerwithsearching method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.argwhere"]], "ivy.data_classes.container.searching": [[39, "module-ivy.data_classes.container.searching"]], "nonzero() (ivy.data_classes.container.searching._containerwithsearching method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.nonzero"]], "static_argmax() (ivy.data_classes.container.searching._containerwithsearching static method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.static_argmax"]], "static_argmin() (ivy.data_classes.container.searching._containerwithsearching static method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.static_argmin"]], "static_argwhere() (ivy.data_classes.container.searching._containerwithsearching static method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.static_argwhere"]], "static_nonzero() (ivy.data_classes.container.searching._containerwithsearching static method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.static_nonzero"]], "static_where() (ivy.data_classes.container.searching._containerwithsearching static method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.static_where"]], "where() (ivy.data_classes.container.searching._containerwithsearching method)": [[39, "ivy.data_classes.container.searching._ContainerWithSearching.where"]], "_containerwithset (class in ivy.data_classes.container.set)": [[40, "ivy.data_classes.container.set._ContainerWithSet"]], "_abc_impl (ivy.data_classes.container.set._containerwithset attribute)": [[40, "ivy.data_classes.container.set._ContainerWithSet._abc_impl"]], "ivy.data_classes.container.set": [[40, "module-ivy.data_classes.container.set"]], "static_unique_all() (ivy.data_classes.container.set._containerwithset static method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.static_unique_all"]], "static_unique_counts() (ivy.data_classes.container.set._containerwithset static method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.static_unique_counts"]], "static_unique_inverse() (ivy.data_classes.container.set._containerwithset static method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.static_unique_inverse"]], "static_unique_values() (ivy.data_classes.container.set._containerwithset static method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.static_unique_values"]], "unique_all() (ivy.data_classes.container.set._containerwithset method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.unique_all"]], "unique_counts() (ivy.data_classes.container.set._containerwithset method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.unique_counts"]], "unique_inverse() (ivy.data_classes.container.set._containerwithset method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.unique_inverse"]], "unique_values() (ivy.data_classes.container.set._containerwithset method)": [[40, "ivy.data_classes.container.set._ContainerWithSet.unique_values"]], "_containerwithsorting (class in ivy.data_classes.container.sorting)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting"]], "_abc_impl (ivy.data_classes.container.sorting._containerwithsorting attribute)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting._abc_impl"]], "argsort() (ivy.data_classes.container.sorting._containerwithsorting method)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting.argsort"]], "ivy.data_classes.container.sorting": [[41, "module-ivy.data_classes.container.sorting"]], "searchsorted() (ivy.data_classes.container.sorting._containerwithsorting method)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting.searchsorted"]], "sort() (ivy.data_classes.container.sorting._containerwithsorting method)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting.sort"]], "static_argsort() (ivy.data_classes.container.sorting._containerwithsorting static method)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting.static_argsort"]], "static_searchsorted() (ivy.data_classes.container.sorting._containerwithsorting static method)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting.static_searchsorted"]], "static_sort() (ivy.data_classes.container.sorting._containerwithsorting static method)": [[41, "ivy.data_classes.container.sorting._ContainerWithSorting.static_sort"]], "_containerwithstatistical (class in ivy.data_classes.container.statistical)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical"]], "_abc_impl (ivy.data_classes.container.statistical._containerwithstatistical attribute)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical._abc_impl"]], "cumprod() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.cumprod"]], "cumsum() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.cumsum"]], "einsum() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.einsum"]], "ivy.data_classes.container.statistical": [[42, "module-ivy.data_classes.container.statistical"]], "max() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.max"]], "mean() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.mean"]], "min() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.min"]], "prod() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.prod"]], "static_cumprod() (ivy.data_classes.container.statistical._containerwithstatistical static method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.static_cumprod"]], "static_cumsum() (ivy.data_classes.container.statistical._containerwithstatistical static method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.static_cumsum"]], "static_prod() (ivy.data_classes.container.statistical._containerwithstatistical static method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.static_prod"]], "static_sum() (ivy.data_classes.container.statistical._containerwithstatistical static method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.static_sum"]], "static_var() (ivy.data_classes.container.statistical._containerwithstatistical static method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.static_var"]], "std() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.std"]], "sum() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.sum"]], "var() (ivy.data_classes.container.statistical._containerwithstatistical method)": [[42, "ivy.data_classes.container.statistical._ContainerWithStatistical.var"]], "_containerwithutility (class in ivy.data_classes.container.utility)": [[43, "ivy.data_classes.container.utility._ContainerWithUtility"]], "_abc_impl (ivy.data_classes.container.utility._containerwithutility attribute)": [[43, "ivy.data_classes.container.utility._ContainerWithUtility._abc_impl"]], "all() (ivy.data_classes.container.utility._containerwithutility method)": [[43, "ivy.data_classes.container.utility._ContainerWithUtility.all"]], "any() (ivy.data_classes.container.utility._containerwithutility method)": [[43, "ivy.data_classes.container.utility._ContainerWithUtility.any"]], "ivy.data_classes.container.utility": [[43, "module-ivy.data_classes.container.utility"]], "static_all() (ivy.data_classes.container.utility._containerwithutility static method)": [[43, "ivy.data_classes.container.utility._ContainerWithUtility.static_all"]], "static_any() (ivy.data_classes.container.utility._containerwithutility static method)": [[43, "ivy.data_classes.container.utility._ContainerWithUtility.static_any"]], "_wrap_function() (in module ivy.data_classes.container.wrapping)": [[44, "ivy.data_classes.container.wrapping._wrap_function"]], "add_ivy_container_instance_methods() (in module ivy.data_classes.container.wrapping)": [[44, "ivy.data_classes.container.wrapping.add_ivy_container_instance_methods"]], "ivy.data_classes.container.wrapping": [[44, "module-ivy.data_classes.container.wrapping"]], "array (class in ivy.data_classes.array.array)": [[45, "ivy.data_classes.array.array.Array"]], "t (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.T"]], "__abs__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__abs__"]], "__add__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__add__"]], "__eq__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__eq__"]], "__ge__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__ge__"]], "__gt__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__gt__"]], "__init__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__init__"]], "__le__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__le__"]], "__lt__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__lt__"]], "__ne__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__ne__"]], "__pow__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__pow__"]], "__radd__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__radd__"]], "__rrshift__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__rrshift__"]], "__rshift__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__rshift__"]], "__rsub__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__rsub__"]], "__sub__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__sub__"]], "__truediv__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__truediv__"]], "__xor__() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.__xor__"]], "arange() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.arange"]], "arg_info() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.arg_info"]], "arg_names() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.arg_names"]], "args_to_ivy() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.args_to_ivy"]], "args_to_native() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.args_to_native"]], "array() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.array"]], "as_ivy_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.as_ivy_dev"]], "as_ivy_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.as_ivy_dtype"]], "as_native_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.as_native_dev"]], "as_native_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.as_native_dtype"]], "asarray_handle_nestable() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.asarray_handle_nestable"]], "asarray_infer_device() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.cache_fn"]], "check_float() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.check_float"]], "clear_cached_mem_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.clear_cached_mem_on_dev"]], "closest_valid_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.closest_valid_dtype"]], "container_types() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.container_types"]], "conv() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.conv"]], "conv_general_dilated() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.conv_general_dilated"]], "conv_general_transpose() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.conv_general_transpose"]], "current_backend() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.current_backend"]], "current_backend_str() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.current_backend_str"]], "data (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.data"]], "default_complex_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.default_complex_dtype"]], "default_device() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.default_device"]], "default_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.default_dtype"]], "default_float_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.default_float_dtype"]], "default_int_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.default_int_dtype"]], "default_uint_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.default_uint_dtype"]], "deserialize() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.deserialize"]], "dev_util() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.dev_util"]], "device (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.device"]], "dtype (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.dtype"]], "dtype_bits() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.dtype_bits"]], "dynamic_backend (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.dynamic_backend"]], "empty() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.empty"]], "execute_with_gradients() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.execute_with_gradients"]], "eye() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.eye"]], "full() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.full"]], "function_supported_devices() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.function_supported_dtypes"]], "function_unsupported_devices() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.function_unsupported_dtypes"]], "get() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get"]], "get_all_arrays_in_memory() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_array_mode"]], "get_exception_trace_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_exception_trace_mode"]], "get_item() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_item"]], "get_min_base() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_min_base"]], "get_min_denominator() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_min_denominator"]], "get_nestable_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_nestable_mode"]], "get_queue_timeout() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_queue_timeout"]], "get_referrers_recursive() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.get_tmp_dir"]], "gpu_is_available() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.gpu_is_available"]], "grad() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.grad"]], "handle_array_function() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_array_function"]], "handle_array_like_without_promotion() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_exceptions"]], "handle_nestable() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_nestable"]], "handle_out_argument() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_out_argument"]], "handle_view() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_view"]], "handle_view_indexing() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.handle_view_indexing"]], "infer_default_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.infer_default_dtype"]], "infer_device() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.infer_device"]], "infer_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.infer_dtype"]], "inplace_arrays_supported() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.integer_arrays_to_float"]], "invalid_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.invalid_dtype"]], "is_complex_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.is_complex_dtype"]], "isscalar() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.isscalar"]], "ivy.data_classes.array.array": [[45, "module-ivy.data_classes.array.array"]], "jac() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.jac"]], "lu_factor() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.lu_factor"]], "mt (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.mT"]], "match_kwargs() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.match_kwargs"]], "multiprocessing() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.multiprocessing"]], "ndim (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.ndim"]], "normalize_axis_tuple() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.num_arrays_in_memory"]], "num_cpu_cores() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.num_cpu_cores"]], "num_gpus() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.num_ivy_arrays_on_dev"]], "ones() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.ones"]], "outputs_to_ivy_arrays() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.promote_types"]], "promote_types_of_inputs() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.promote_types_of_inputs"]], "seed() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.seed"]], "set_array_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_array_mode"]], "set_default_complex_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_default_complex_dtype"]], "set_default_device() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_default_device"]], "set_default_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_default_dtype"]], "set_default_float_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_default_float_dtype"]], "set_default_int_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_exception_trace_mode"]], "set_min_base() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_min_base"]], "set_min_denominator() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_min_denominator"]], "set_nestable_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_nestable_mode"]], "set_queue_timeout() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_queue_timeout"]], "set_shape_array_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_split_factor"]], "set_tmp_dir() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_tmp_dir"]], "set_with_grads() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.set_with_grads"]], "shape (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.shape"]], "shape_array_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.shape_array_mode"]], "size (ivy.data_classes.array.array.array property)": [[45, "ivy.data_classes.array.array.Array.size"]], "split_factor() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.split_factor"]], "split_func_call() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.split_func_call"]], "to_ivy() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.to_ivy"]], "to_ivy_shape() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.to_ivy_shape"]], "to_native() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.to_native"]], "to_native_arrays_and_back() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.to_native_arrays_and_back"]], "to_native_shape() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.to_native_shape"]], "total_mem_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.total_mem_on_dev"]], "tpu_is_available() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.tpu_is_available"]], "try_else_none() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.try_else_none"]], "type_promote_arrays() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.type_promote_arrays"]], "unset_array_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_array_mode"]], "unset_default_complex_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_default_complex_dtype"]], "unset_default_device() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_default_device"]], "unset_default_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_default_dtype"]], "unset_default_float_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_nestable_mode"]], "unset_queue_timeout() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.unset_with_grads"]], "used_mem_on_dev() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.used_mem_on_dev"]], "valid_dtype() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.valid_dtype"]], "value_and_grad() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.value_and_grad"]], "vmap() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.vmap"]], "with_grads() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.with_grads"]], "wraps() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.wraps"]], "zeros() (ivy.data_classes.array.array.array method)": [[45, "ivy.data_classes.array.array.Array.zeros"]], "container (class in ivy.data_classes.container.container)": [[46, "ivy.data_classes.container.container.Container"]], "__abs__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__abs__"]], "__add__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__add__"]], "__eq__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__eq__"]], "__ge__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__ge__"]], "__gt__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__gt__"]], "__init__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__init__"]], "__le__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__le__"]], "__lt__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__lt__"]], "__ne__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__ne__"]], "__pow__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__pow__"]], "__radd__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__radd__"]], "__rrshift__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__rrshift__"]], "__rshift__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__rshift__"]], "__rsub__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__rsub__"]], "__sub__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__sub__"]], "__truediv__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__truediv__"]], "__xor__() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.__xor__"]], "arange() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.arange"]], "arg_info() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.arg_info"]], "arg_names() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.arg_names"]], "array() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.array"]], "as_ivy_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.as_ivy_dev"]], "as_ivy_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.as_ivy_dtype"]], "as_native_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.as_native_dev"]], "as_native_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.as_native_dtype"]], "asarray() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.asarray"]], "asarray_handle_nestable() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.asarray_handle_nestable"]], "asarray_infer_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.cache_fn"]], "check_float() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.check_float"]], "clear_cached_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.clear_cached_mem_on_dev"]], "closest_valid_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.closest_valid_dtype"]], "container_types() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.container_types"]], "conv() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.conv"]], "conv_general_dilated() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.conv_general_dilated"]], "conv_general_transpose() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.conv_general_transpose"]], "copy_array() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.copy_array"]], "current_backend() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.current_backend"]], "current_backend_str() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.current_backend_str"]], "default() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default"]], "default_complex_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default_complex_dtype"]], "default_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default_device"]], "default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default_dtype"]], "default_float_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default_float_dtype"]], "default_int_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default_int_dtype"]], "default_uint_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.default_uint_dtype"]], "deserialize() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.deserialize"]], "dev_util() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.dev_util"]], "dtype_bits() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.dtype_bits"]], "empty() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.empty"]], "execute_with_gradients() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.execute_with_gradients"]], "exists() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.exists"]], "eye() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.eye"]], "full() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.full"]], "function_supported_devices() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.function_supported_dtypes"]], "function_unsupported_devices() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.function_unsupported_dtypes"]], "get_all_arrays_in_memory() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_array_mode"]], "get_exception_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_exception_trace_mode"]], "get_item() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_item"]], "get_min_base() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_min_base"]], "get_min_denominator() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_min_denominator"]], "get_nestable_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_nestable_mode"]], "get_queue_timeout() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_queue_timeout"]], "get_referrers_recursive() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.get_tmp_dir"]], "gpu_is_available() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.gpu_is_available"]], "grad() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.grad"]], "handle_array_function() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_array_function"]], "handle_array_like_without_promotion() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_exceptions"]], "handle_nestable() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_nestable"]], "handle_out_argument() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_out_argument"]], "handle_view() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_view"]], "handle_view_indexing() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.handle_view_indexing"]], "infer_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.infer_default_dtype"]], "infer_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.infer_device"]], "infer_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.infer_dtype"]], "inplace_arrays_supported() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.integer_arrays_to_float"]], "invalid_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.invalid_dtype"]], "is_ivy_container() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.is_ivy_container"]], "isscalar() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.isscalar"]], "ivy.data_classes.container.container": [[46, "module-ivy.data_classes.container.container"]], "jac() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.jac"]], "lu_factor() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.lu_factor"]], "match_kwargs() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.match_kwargs"]], "multiprocessing() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.multiprocessing"]], "normalize_axis_tuple() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.num_arrays_in_memory"]], "num_cpu_cores() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.num_cpu_cores"]], "num_gpus() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.num_ivy_arrays_on_dev"]], "ones() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.ones"]], "outputs_to_ivy_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.promote_types"]], "promote_types_of_inputs() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.promote_types_of_inputs"]], "seed() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.seed"]], "set_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_array_mode"]], "set_default_complex_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_default_complex_dtype"]], "set_default_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_default_device"]], "set_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_default_dtype"]], "set_default_float_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_default_float_dtype"]], "set_default_int_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_exception_trace_mode"]], "set_min_base() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_min_base"]], "set_min_denominator() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_min_denominator"]], "set_nestable_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_nestable_mode"]], "set_queue_timeout() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_queue_timeout"]], "set_shape_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_split_factor"]], "set_tmp_dir() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_tmp_dir"]], "set_with_grads() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.set_with_grads"]], "shape_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.shape_array_mode"]], "split_factor() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.split_factor"]], "split_func_call() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.split_func_call"]], "static_adam_step() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_adam_step"]], "static_adam_update() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_adam_update"]], "static_arg_info() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_arg_info"]], "static_arg_names() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_arg_names"]], "static_array() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_array"]], "static_as_ivy_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_as_ivy_dev"]], "static_as_ivy_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_as_ivy_dtype"]], "static_as_native_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_as_native_dev"]], "static_as_native_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_as_native_dtype"]], "static_asarray_handle_nestable() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_asarray_handle_nestable"]], "static_asarray_infer_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_asarray_infer_device"]], "static_asarray_to_native_arrays_and_back() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_asarray_to_native_arrays_and_back"]], "static_cache_fn() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_cache_fn"]], "static_check_float() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_check_float"]], "static_clear_cached_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_clear_cached_mem_on_dev"]], "static_closest_valid_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_closest_valid_dtype"]], "static_container_types() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_container_types"]], "static_conv() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_conv"]], "static_conv_general_dilated() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_conv_general_dilated"]], "static_conv_general_transpose() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_conv_general_transpose"]], "static_copy_array() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_copy_array"]], "static_current_backend() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_current_backend"]], "static_current_backend_str() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_current_backend_str"]], "static_default() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_default"]], "static_default_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_default_device"]], "static_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_default_dtype"]], "static_default_int_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_default_int_dtype"]], "static_default_uint_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_default_uint_dtype"]], "static_deserialize() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_deserialize"]], "static_dev_util() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_dev_util"]], "static_dtype_bits() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_dtype_bits"]], "static_einsum() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_einsum"]], "static_empty() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_empty"]], "static_execute_with_gradients() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_execute_with_gradients"]], "static_exists() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_exists"]], "static_full() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_full"]], "static_function_supported_devices() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_function_supported_devices"]], "static_function_supported_devices_and_dtypes() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_function_supported_devices_and_dtypes"]], "static_function_unsupported_devices() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_function_unsupported_devices"]], "static_function_unsupported_devices_and_dtypes() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_function_unsupported_devices_and_dtypes"]], "static_get() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get"]], "static_get_all_arrays_in_memory() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_all_arrays_in_memory"]], "static_get_all_ivy_arrays_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_all_ivy_arrays_on_dev"]], "static_get_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_array_mode"]], "static_get_exception_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_exception_trace_mode"]], "static_get_item() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_item"]], "static_get_min_base() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_min_base"]], "static_get_min_denominator() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_min_denominator"]], "static_get_nestable_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_nestable_mode"]], "static_get_queue_timeout() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_queue_timeout"]], "static_get_referrers_recursive() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_referrers_recursive"]], "static_get_show_func_wrapper_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_show_func_wrapper_trace_mode"]], "static_get_tmp_dir() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_get_tmp_dir"]], "static_gpu_is_available() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_gpu_is_available"]], "static_grad() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_grad"]], "static_gradient_descent_update() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_gradient_descent_update"]], "static_handle_array_function() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_array_function"]], "static_handle_array_like_without_promotion() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_array_like_without_promotion"]], "static_handle_exceptions() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_exceptions"]], "static_handle_nestable() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_nestable"]], "static_handle_out_argument() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_out_argument"]], "static_handle_view() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_view"]], "static_handle_view_indexing() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_handle_view_indexing"]], "static_infer_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_infer_default_dtype"]], "static_infer_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_infer_device"]], "static_infer_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_infer_dtype"]], "static_inplace_arrays_supported() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_inplace_arrays_supported"]], "static_inplace_variables_supported() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_inplace_variables_supported"]], "static_inputs_to_ivy_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_inputs_to_ivy_arrays"]], "static_inputs_to_native_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_inputs_to_native_arrays"]], "static_integer_arrays_to_float() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_integer_arrays_to_float"]], "static_invalid_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_invalid_dtype"]], "static_is_ivy_container() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_is_ivy_container"]], "static_isscalar() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_isscalar"]], "static_jac() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_jac"]], "static_lamb_update() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_lamb_update"]], "static_lars_update() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_lars_update"]], "static_layer_norm() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_layer_norm"]], "static_lu_factor() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_lu_factor"]], "static_match_kwargs() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_match_kwargs"]], "static_max() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_max"]], "static_mean() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_mean"]], "static_min() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_min"]], "static_multiprocessing() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_multiprocessing"]], "static_normalize_axis_tuple() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_normalize_axis_tuple"]], "static_num_arrays_in_memory() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_num_arrays_in_memory"]], "static_num_cpu_cores() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_num_cpu_cores"]], "static_num_gpus() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_num_gpus"]], "static_num_ivy_arrays_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_num_ivy_arrays_on_dev"]], "static_optimizer_update() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_optimizer_update"]], "static_outputs_to_ivy_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_outputs_to_ivy_arrays"]], "static_percent_used_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_percent_used_mem_on_dev"]], "static_print_all_arrays_in_memory() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_print_all_arrays_in_memory"]], "static_print_all_ivy_arrays_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_print_all_ivy_arrays_on_dev"]], "static_promote_types() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_promote_types"]], "static_promote_types_of_inputs() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_promote_types_of_inputs"]], "static_seed() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_seed"]], "static_set_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_array_mode"]], "static_set_default_complex_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_default_complex_dtype"]], "static_set_default_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_default_device"]], "static_set_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_default_dtype"]], "static_set_default_float_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_default_float_dtype"]], "static_set_default_int_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_default_int_dtype"]], "static_set_default_uint_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_default_uint_dtype"]], "static_set_exception_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_exception_trace_mode"]], "static_set_min_base() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_min_base"]], "static_set_min_denominator() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_min_denominator"]], "static_set_nestable_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_nestable_mode"]], "static_set_queue_timeout() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_queue_timeout"]], "static_set_shape_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_shape_array_mode"]], "static_set_show_func_wrapper_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_show_func_wrapper_trace_mode"]], "static_set_split_factor() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_split_factor"]], "static_set_tmp_dir() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_tmp_dir"]], "static_set_with_grads() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_set_with_grads"]], "static_shape() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_shape"]], "static_shape_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_shape_array_mode"]], "static_split_factor() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_split_factor"]], "static_split_func_call() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_split_func_call"]], "static_std() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_std"]], "static_to_ivy_shape() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_to_ivy_shape"]], "static_to_native_arrays_and_back() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_to_native_arrays_and_back"]], "static_to_native_shape() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_to_native_shape"]], "static_total_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_total_mem_on_dev"]], "static_tpu_is_available() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_tpu_is_available"]], "static_try_else_none() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_try_else_none"]], "static_type_promote_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_type_promote_arrays"]], "static_unset_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_array_mode"]], "static_unset_default_complex_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_default_complex_dtype"]], "static_unset_default_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_default_device"]], "static_unset_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_default_dtype"]], "static_unset_default_float_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_default_float_dtype"]], "static_unset_default_int_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_default_int_dtype"]], "static_unset_default_uint_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_default_uint_dtype"]], "static_unset_exception_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_exception_trace_mode"]], "static_unset_nestable_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_nestable_mode"]], "static_unset_queue_timeout() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_queue_timeout"]], "static_unset_shape_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_shape_array_mode"]], "static_unset_show_func_wrapper_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_show_func_wrapper_trace_mode"]], "static_unset_with_grads() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_unset_with_grads"]], "static_used_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_used_mem_on_dev"]], "static_valid_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_valid_dtype"]], "static_value_and_grad() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_value_and_grad"]], "static_vmap() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_vmap"]], "static_with_grads() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_with_grads"]], "static_wraps() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.static_wraps"]], "to_ivy_shape() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.to_ivy_shape"]], "to_native_arrays_and_back() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.to_native_arrays_and_back"]], "to_native_shape() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.to_native_shape"]], "total_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.total_mem_on_dev"]], "tpu_is_available() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.tpu_is_available"]], "try_else_none() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.try_else_none"]], "type_promote_arrays() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.type_promote_arrays"]], "unset_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_array_mode"]], "unset_default_complex_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_default_complex_dtype"]], "unset_default_device() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_default_device"]], "unset_default_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_default_dtype"]], "unset_default_float_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_nestable_mode"]], "unset_queue_timeout() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.unset_with_grads"]], "used_mem_on_dev() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.used_mem_on_dev"]], "valid_dtype() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.valid_dtype"]], "value_and_grad() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.value_and_grad"]], "vmap() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.vmap"]], "with_grads() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.with_grads"]], "wraps() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.wraps"]], "zeros() (ivy.data_classes.container.container.container method)": [[46, "ivy.data_classes.container.container.Container.zeros"]], "geglu (class in ivy.stateful.activations)": [[48, "ivy.stateful.activations.GEGLU"]], "gelu (class in ivy.stateful.activations)": [[48, "ivy.stateful.activations.GELU"]], "__init__() (ivy.stateful.activations.geglu method)": [[48, "ivy.stateful.activations.GEGLU.__init__"]], "__init__() (ivy.stateful.activations.gelu method)": [[48, "ivy.stateful.activations.GELU.__init__"]], "ivy.stateful.activations": [[48, "module-ivy.stateful.activations"]], "moduleconverters (class in ivy.stateful.converters)": [[49, "ivy.stateful.converters.ModuleConverters"]], "from_haiku_module() (ivy.stateful.converters.moduleconverters static method)": [[49, "ivy.stateful.converters.ModuleConverters.from_haiku_module"]], "from_keras_module() (ivy.stateful.converters.moduleconverters static method)": [[49, "ivy.stateful.converters.ModuleConverters.from_keras_module"]], "from_torch_module() (ivy.stateful.converters.moduleconverters static method)": [[49, "ivy.stateful.converters.ModuleConverters.from_torch_module"]], "ivy.stateful.converters": [[49, "module-ivy.stateful.converters"]], "to_ivy_module() (in module ivy.stateful.converters)": [[49, "ivy.stateful.converters.to_ivy_module"]], "modulehelpers (class in ivy.stateful.helpers)": [[50, "ivy.stateful.helpers.ModuleHelpers"]], "check_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"]], "get_mod_key() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"]], "ivy.stateful.helpers": [[50, "module-ivy.stateful.helpers"]], "mod_depth() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.mod_depth"]], "mod_height() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.mod_height"]], "mod_with_top_mod_key_chain() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"]], "show_mod_in_top_mod() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"]], "show_structure() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.show_structure"]], "show_v_in_top_v() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"]], "sub_mods() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.sub_mods"]], "track_submod_call_order() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"]], "track_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"]], "v_with_top_v_key_chains() (ivy.stateful.helpers.modulehelpers method)": [[50, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"]], "constant (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.Constant"]], "firstlayersiren (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.FirstLayerSiren"]], "glorotuniform (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.GlorotUniform"]], "initializer (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.Initializer"]], "kaimingnormal (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.KaimingNormal"]], "ones (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.Ones"]], "siren (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.Siren"]], "uniform (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.Uniform"]], "zeros (class in ivy.stateful.initializers)": [[51, "ivy.stateful.initializers.Zeros"]], "__init__() (ivy.stateful.initializers.constant method)": [[51, "ivy.stateful.initializers.Constant.__init__"]], "__init__() (ivy.stateful.initializers.firstlayersiren method)": [[51, "ivy.stateful.initializers.FirstLayerSiren.__init__"]], "__init__() (ivy.stateful.initializers.glorotuniform method)": [[51, "ivy.stateful.initializers.GlorotUniform.__init__"]], "__init__() (ivy.stateful.initializers.kaimingnormal method)": [[51, "ivy.stateful.initializers.KaimingNormal.__init__"]], "__init__() (ivy.stateful.initializers.ones method)": [[51, "ivy.stateful.initializers.Ones.__init__"]], "__init__() (ivy.stateful.initializers.siren method)": [[51, "ivy.stateful.initializers.Siren.__init__"]], "__init__() (ivy.stateful.initializers.uniform method)": [[51, "ivy.stateful.initializers.Uniform.__init__"]], "__init__() (ivy.stateful.initializers.zeros method)": [[51, "ivy.stateful.initializers.Zeros.__init__"]], "create_variables() (ivy.stateful.initializers.constant method)": [[51, "ivy.stateful.initializers.Constant.create_variables"]], "create_variables() (ivy.stateful.initializers.initializer method)": [[51, "ivy.stateful.initializers.Initializer.create_variables"]], "create_variables() (ivy.stateful.initializers.kaimingnormal method)": [[51, "ivy.stateful.initializers.KaimingNormal.create_variables"]], "create_variables() (ivy.stateful.initializers.uniform method)": [[51, "ivy.stateful.initializers.Uniform.create_variables"]], "ivy.stateful.initializers": [[51, "module-ivy.stateful.initializers"]], "conv1d (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Conv1D"]], "conv1dtranspose (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Conv1DTranspose"]], "conv2d (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Conv2D"]], "conv2dtranspose (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Conv2DTranspose"]], "conv3d (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Conv3D"]], "conv3dtranspose (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Conv3DTranspose"]], "depthwiseconv2d (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.DepthwiseConv2D"]], "dropout (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Dropout"]], "lstm (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.LSTM"]], "linear (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.Linear"]], "multiheadattention (class in ivy.stateful.layers)": [[52, "ivy.stateful.layers.MultiHeadAttention"]], "__init__() (ivy.stateful.layers.conv1d method)": [[52, "ivy.stateful.layers.Conv1D.__init__"]], "__init__() (ivy.stateful.layers.conv1dtranspose method)": [[52, "ivy.stateful.layers.Conv1DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv2d method)": [[52, "ivy.stateful.layers.Conv2D.__init__"]], "__init__() (ivy.stateful.layers.conv2dtranspose method)": [[52, "ivy.stateful.layers.Conv2DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv3d method)": [[52, "ivy.stateful.layers.Conv3D.__init__"]], "__init__() (ivy.stateful.layers.conv3dtranspose method)": [[52, "ivy.stateful.layers.Conv3DTranspose.__init__"]], "__init__() (ivy.stateful.layers.depthwiseconv2d method)": [[52, "ivy.stateful.layers.DepthwiseConv2D.__init__"]], "__init__() (ivy.stateful.layers.dropout method)": [[52, "ivy.stateful.layers.Dropout.__init__"]], "__init__() (ivy.stateful.layers.lstm method)": [[52, "ivy.stateful.layers.LSTM.__init__"]], "__init__() (ivy.stateful.layers.linear method)": [[52, "ivy.stateful.layers.Linear.__init__"]], "__init__() (ivy.stateful.layers.multiheadattention method)": [[52, "ivy.stateful.layers.MultiHeadAttention.__init__"]], "get_initial_state() (ivy.stateful.layers.lstm method)": [[52, "ivy.stateful.layers.LSTM.get_initial_state"]], "ivy.stateful.layers": [[52, "module-ivy.stateful.layers"]], "module (class in ivy.stateful.module)": [[53, "ivy.stateful.module.Module"]], "__call__() (ivy.stateful.module.module method)": [[53, "ivy.stateful.module.Module.__call__"]], "__init__() (ivy.stateful.module.module method)": [[53, "ivy.stateful.module.Module.__init__"]], "build() (ivy.stateful.module.module method)": [[53, "ivy.stateful.module.Module.build"]], "build_mode (ivy.stateful.module.module property)": [[53, "ivy.stateful.module.Module.build_mode"]], "built_ (ivy.stateful.module.module property)": [[53, "ivy.stateful.module.Module.built_"]], "compile() (ivy.stateful.module.module method)": [[53, "ivy.stateful.module.Module.compile"]], "ivy.stateful.module": [[53, "module-ivy.stateful.module"]], "save_weights() (ivy.stateful.module.module method)": [[53, "ivy.stateful.module.Module.save_weights"]], "show_graph() (ivy.stateful.module.module method)": [[53, "ivy.stateful.module.Module.show_graph"]], "layernorm (class in ivy.stateful.norms)": [[54, "ivy.stateful.norms.LayerNorm"]], "__init__() (ivy.stateful.norms.layernorm method)": [[54, "ivy.stateful.norms.LayerNorm.__init__"]], "ivy.stateful.norms": [[54, "module-ivy.stateful.norms"]], "adam (class in ivy.stateful.optimizers)": [[55, "ivy.stateful.optimizers.Adam"]], "lamb (class in ivy.stateful.optimizers)": [[55, "ivy.stateful.optimizers.LAMB"]], "lars (class in ivy.stateful.optimizers)": [[55, "ivy.stateful.optimizers.LARS"]], "optimizer (class in ivy.stateful.optimizers)": [[55, "ivy.stateful.optimizers.Optimizer"]], "sgd (class in ivy.stateful.optimizers)": [[55, "ivy.stateful.optimizers.SGD"]], "__init__() (ivy.stateful.optimizers.adam method)": [[55, "ivy.stateful.optimizers.Adam.__init__"]], "__init__() (ivy.stateful.optimizers.lamb method)": [[55, "ivy.stateful.optimizers.LAMB.__init__"]], "__init__() (ivy.stateful.optimizers.lars method)": [[55, "ivy.stateful.optimizers.LARS.__init__"]], "__init__() (ivy.stateful.optimizers.optimizer method)": [[55, "ivy.stateful.optimizers.Optimizer.__init__"]], "__init__() (ivy.stateful.optimizers.sgd method)": [[55, "ivy.stateful.optimizers.SGD.__init__"]], "ivy.stateful.optimizers": [[55, "module-ivy.stateful.optimizers"]], "set_state() (ivy.stateful.optimizers.adam method)": [[55, "ivy.stateful.optimizers.Adam.set_state"]], "set_state() (ivy.stateful.optimizers.lamb method)": [[55, "ivy.stateful.optimizers.LAMB.set_state"]], "set_state() (ivy.stateful.optimizers.lars method)": [[55, "ivy.stateful.optimizers.LARS.set_state"]], "set_state() (ivy.stateful.optimizers.optimizer method)": [[55, "ivy.stateful.optimizers.Optimizer.set_state"]], "set_state() (ivy.stateful.optimizers.sgd method)": [[55, "ivy.stateful.optimizers.SGD.set_state"]], "state (ivy.stateful.optimizers.adam property)": [[55, "ivy.stateful.optimizers.Adam.state"]], "state (ivy.stateful.optimizers.lamb property)": [[55, "ivy.stateful.optimizers.LAMB.state"]], "state (ivy.stateful.optimizers.lars property)": [[55, "ivy.stateful.optimizers.LARS.state"]], "state (ivy.stateful.optimizers.sgd property)": [[55, "ivy.stateful.optimizers.SGD.state"]], "step() (ivy.stateful.optimizers.optimizer method)": [[55, "ivy.stateful.optimizers.Optimizer.step"]], "sequential (class in ivy.stateful.sequential)": [[56, "ivy.stateful.sequential.Sequential"]], "__init__() (ivy.stateful.sequential.sequential method)": [[56, "ivy.stateful.sequential.Sequential.__init__"]], "ivy.stateful.sequential": [[56, "module-ivy.stateful.sequential"]], "deserialize() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.deserialize"]], "gelu() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.gelu"]], "get() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.get"]], "ivy.functional.ivy.activations": [[58, "module-ivy.functional.ivy.activations"]], "leaky_relu() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.leaky_relu"]], "log_softmax() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.log_softmax"]], "mish() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.mish"]], "relu() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.relu"]], "sigmoid() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.sigmoid"]], "softmax() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.softmax"]], "softplus() (in module ivy.functional.ivy.activations)": [[58, "ivy.functional.ivy.activations.softplus"]], "e (in module ivy.functional.ivy.constants)": [[59, "ivy.functional.ivy.constants.e"]], "inf (in module ivy.functional.ivy.constants)": [[59, "ivy.functional.ivy.constants.inf"]], "ivy.functional.ivy.constants": [[59, "module-ivy.functional.ivy.constants"]], "nan (in module ivy.functional.ivy.constants)": [[59, "ivy.functional.ivy.constants.nan"]], "newaxis (in module ivy.functional.ivy.constants)": [[59, "ivy.functional.ivy.constants.newaxis"]], "pi (in module ivy.functional.ivy.constants)": [[59, "ivy.functional.ivy.constants.pi"]], "ifelse() (in module ivy.functional.ivy.control_flow_ops)": [[60, "ivy.functional.ivy.control_flow_ops.IfElse"]], "whileloop() (in module ivy.functional.ivy.control_flow_ops)": [[60, "ivy.functional.ivy.control_flow_ops.WhileLoop"]], "if_else() (in module ivy.functional.ivy.control_flow_ops)": [[60, "ivy.functional.ivy.control_flow_ops.if_else"]], "ivy.functional.ivy.control_flow_ops": [[60, "module-ivy.functional.ivy.control_flow_ops"]], "while_loop() (in module ivy.functional.ivy.control_flow_ops)": [[60, "ivy.functional.ivy.control_flow_ops.while_loop"]], "nestedsequence (class in ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.NestedSequence"]], "__init__() (ivy.functional.ivy.creation.nestedsequence method)": [[61, "ivy.functional.ivy.creation.NestedSequence.__init__"]], "arange() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.arange"]], "array() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.array"]], "asarray() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.asarray"]], "asarray_handle_nestable() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.asarray_handle_nestable"]], "asarray_infer_device() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"]], "copy_array() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.copy_array"]], "empty() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.empty"]], "empty_like() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.empty_like"]], "eye() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.eye"]], "from_dlpack() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.from_dlpack"]], "full() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.full"]], "full_like() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.full_like"]], "ivy.functional.ivy.creation": [[61, "module-ivy.functional.ivy.creation"]], "linspace() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.linspace"]], "logspace() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.logspace"]], "meshgrid() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.meshgrid"]], "native_array() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.native_array"]], "one_hot() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.one_hot"]], "ones() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.ones"]], "ones_like() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.ones_like"]], "tril() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.tril"]], "triu() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.triu"]], "zeros() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.zeros"]], "zeros_like() (in module ivy.functional.ivy.creation)": [[61, "ivy.functional.ivy.creation.zeros_like"]], "defaultcomplexdtype (class in ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.DefaultComplexDtype"]], "defaultdtype (class in ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.DefaultDtype"]], "defaultfloatdtype (class in ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.DefaultFloatDtype"]], "defaultintdtype (class in ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.DefaultIntDtype"]], "defaultuintdtype (class in ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.DefaultUintDtype"]], "__init__() (ivy.functional.ivy.data_type.defaultcomplexdtype method)": [[62, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultdtype method)": [[62, "ivy.functional.ivy.data_type.DefaultDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultfloatdtype method)": [[62, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultintdtype method)": [[62, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultuintdtype method)": [[62, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"]], "as_ivy_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.as_ivy_dtype"]], "as_native_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.as_native_dtype"]], "astype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.astype"]], "broadcast_arrays() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.broadcast_arrays"]], "broadcast_to() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.broadcast_to"]], "can_cast() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.can_cast"]], "check_float() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.check_float"]], "closest_valid_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.closest_valid_dtype"]], "default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.default_complex_dtype"]], "default_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.default_dtype"]], "default_float_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.default_float_dtype"]], "default_int_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.default_int_dtype"]], "default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.default_uint_dtype"]], "dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.dtype"]], "dtype_bits() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.dtype_bits"]], "finfo() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.finfo"]], "function_supported_dtypes() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.function_supported_dtypes"]], "function_unsupported_dtypes() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.function_unsupported_dtypes"]], "iinfo() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.iinfo"]], "infer_default_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.infer_default_dtype"]], "invalid_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.invalid_dtype"]], "is_bool_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.is_bool_dtype"]], "is_complex_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.is_complex_dtype"]], "is_float_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.is_float_dtype"]], "is_int_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.is_int_dtype"]], "is_uint_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.is_uint_dtype"]], "ivy.functional.ivy.data_type": [[62, "module-ivy.functional.ivy.data_type"]], "promote_types() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.promote_types"]], "promote_types_of_inputs() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.promote_types_of_inputs"]], "result_type() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.result_type"]], "set_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.set_default_complex_dtype"]], "set_default_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.set_default_dtype"]], "set_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.set_default_float_dtype"]], "set_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.set_default_int_dtype"]], "set_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.set_default_uint_dtype"]], "type_promote_arrays() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.type_promote_arrays"]], "unset_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.unset_default_complex_dtype"]], "unset_default_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.unset_default_dtype"]], "unset_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.unset_default_float_dtype"]], "unset_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.unset_default_int_dtype"]], "unset_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.unset_default_uint_dtype"]], "valid_dtype() (in module ivy.functional.ivy.data_type)": [[62, "ivy.functional.ivy.data_type.valid_dtype"]], "defaultdevice (class in ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.DefaultDevice"]], "profiler (class in ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.Profiler"]], "__enter__() (ivy.functional.ivy.device.defaultdevice method)": [[63, "ivy.functional.ivy.device.DefaultDevice.__enter__"]], "__exit__() (ivy.functional.ivy.device.defaultdevice method)": [[63, "ivy.functional.ivy.device.DefaultDevice.__exit__"]], "__init__() (ivy.functional.ivy.device.defaultdevice method)": [[63, "ivy.functional.ivy.device.DefaultDevice.__init__"]], "__init__() (ivy.functional.ivy.device.profiler method)": [[63, "ivy.functional.ivy.device.Profiler.__init__"]], "as_ivy_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.as_ivy_dev"]], "as_native_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.as_native_dev"]], "clear_cached_mem_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.clear_cached_mem_on_dev"]], "default_device() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.default_device"]], "dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.dev"]], "dev_util() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.dev_util"]], "function_supported_devices() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.function_supported_devices"]], "function_unsupported_devices() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.function_unsupported_devices"]], "get_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"]], "gpu_is_available() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.gpu_is_available"]], "ivy.functional.ivy.device": [[63, "module-ivy.functional.ivy.device"]], "num_cpu_cores() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.num_cpu_cores"]], "num_gpus() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.num_gpus"]], "num_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"]], "percent_used_mem_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.percent_used_mem_on_dev"]], "print_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"]], "set_default_device() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.set_default_device"]], "set_split_factor() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.set_split_factor"]], "split_factor() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.split_factor"]], "split_func_call() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.split_func_call"]], "start() (ivy.functional.ivy.device.profiler method)": [[63, "ivy.functional.ivy.device.Profiler.start"]], "stop() (ivy.functional.ivy.device.profiler method)": [[63, "ivy.functional.ivy.device.Profiler.stop"]], "to_device() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.to_device"]], "total_mem_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.total_mem_on_dev"]], "tpu_is_available() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.tpu_is_available"]], "unset_default_device() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.unset_default_device"]], "used_mem_on_dev() (in module ivy.functional.ivy.device)": [[63, "ivy.functional.ivy.device.used_mem_on_dev"]], "abs() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.abs"]], "acos() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.acos"]], "acosh() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.acosh"]], "add() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.add"]], "asin() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.asin"]], "asinh() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.asinh"]], "atan() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.atan"]], "atan2() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.atan2"]], "atanh() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.atanh"]], "bitwise_and() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.bitwise_and"]], "bitwise_invert() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.bitwise_invert"]], "bitwise_left_shift() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.bitwise_left_shift"]], "bitwise_or() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.bitwise_or"]], "bitwise_right_shift() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.bitwise_right_shift"]], "bitwise_xor() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.bitwise_xor"]], "ceil() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.ceil"]], "cos() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.cos"]], "cosh() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.cosh"]], "deg2rad() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.deg2rad"]], "divide() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.divide"]], "equal() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.equal"]], "erf() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.erf"]], "exp() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.exp"]], "expm1() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.expm1"]], "floor() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.floor"]], "floor_divide() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.floor_divide"]], "greater() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.greater"]], "greater_equal() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.greater_equal"]], "isfinite() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.isfinite"]], "isinf() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.isinf"]], "isnan() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.isnan"]], "isreal() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.isreal"]], "ivy.functional.ivy.elementwise": [[64, "module-ivy.functional.ivy.elementwise"]], "less() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.less"]], "less_equal() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.less_equal"]], "log() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.log"]], "log10() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.log10"]], "log1p() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.log1p"]], "log2() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.log2"]], "logaddexp() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.logaddexp"]], "logical_and() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.logical_and"]], "logical_not() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.logical_not"]], "logical_or() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.logical_or"]], "logical_xor() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.logical_xor"]], "maximum() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.maximum"]], "minimum() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.minimum"]], "multiply() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.multiply"]], "negative() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.negative"]], "not_equal() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.not_equal"]], "positive() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.positive"]], "pow() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.pow"]], "rad2deg() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.rad2deg"]], "reciprocal() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.reciprocal"]], "remainder() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.remainder"]], "round() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.round"]], "sign() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.sign"]], "sin() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.sin"]], "sinh() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.sinh"]], "sqrt() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.sqrt"]], "square() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.square"]], "subtract() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.subtract"]], "tan() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.tan"]], "tanh() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.tanh"]], "trunc() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.trunc"]], "trunc_divide() (in module ivy.functional.ivy.elementwise)": [[64, "ivy.functional.ivy.elementwise.trunc_divide"]], "nativesparsearray (class in ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.NativeSparseArray"]], "number (class in ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.Number"]], "sparsearray (class in ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparsearray method)": [[65, "ivy.functional.ivy.experimental.SparseArray.__init__"]], "adaptive_avg_pool1d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.adaptive_avg_pool2d"]], "adjoint() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.adjoint"]], "allclose() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.allclose"]], "angle() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.angle"]], "atleast_1d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.atleast_1d"]], "atleast_2d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.atleast_2d"]], "atleast_3d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.atleast_3d"]], "avg_pool1d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.avg_pool1d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.avg_pool2d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.avg_pool3d"]], "batch_norm() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.batch_norm"]], "bernoulli() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.bernoulli"]], "beta() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.beta"]], "binarizer() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.binarizer"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"]], "bincount() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.bincount"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.bind_custom_gradient_function"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.broadcast_shapes"]], "ccol_indices (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.col_indices"]], "compute_weight_mat() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.compute_weight_mat"]], "cond() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.cond"]], "conj() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.conj"]], "coo_indices (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.coo_indices"]], "copysign() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.copysign"]], "corrcoef() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.corrcoef"]], "cos() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.cos"]], "count_nonzero() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.count_nonzero"]], "crow_indices (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.crow_indices"]], "current_backend() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.current_backend"]], "data (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.data"]], "dct() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dct"]], "dense_shape (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.dense_shape"]], "dft() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dft"]], "diagflat() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.diagflat"]], "diff() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.diff"]], "dirichlet() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dirichlet"]], "dropout1d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dropout1d"]], "dropout3d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dropout3d"]], "dsplit() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dsplit"]], "dstack() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.dstack"]], "eig() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.eig"]], "eigh_tridiagonal() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.eigh_tridiagonal"]], "eigvals() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.eigvals"]], "embedding() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.embedding"]], "exp2() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.exp2"]], "expand() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.expand"]], "eye_like() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.eye_like"]], "fft() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.fft"]], "fix() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.fix"]], "flatten() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.flatten"]], "fliplr() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.fliplr"]], "flipud() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.flipud"]], "float_power() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.float_power"]], "fmax() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.fmax"]], "fmin() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.fmin"]], "fmod() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.fmod"]], "frexp() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.frexp"]], "gamma() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.gamma"]], "gcd() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.gcd"]], "gradient() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.gradient"]], "hamming_window() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.hamming_window"]], "handle_array_function() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.handle_array_function"]], "handle_array_like_without_promotion() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.handle_array_like_without_promotion"]], "handle_exceptions() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.handle_exceptions"]], "handle_nestable() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.handle_nestable"]], "handle_out_argument() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.handle_out_argument"]], "handle_view() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.handle_view"]], "hann_window() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.hann_window"]], "heaviside() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.heaviside"]], "hsplit() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.hsplit"]], "hstack() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.hstack"]], "hypot() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.hypot"]], "i0() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.i0"]], "ifft() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.ifft"]], "imag() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.imag"]], "infer_device() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.infer_device"]], "infer_dtype() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.infer_dtype"]], "inputs_to_native_arrays() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.inputs_to_native_arrays"]], "instance_norm() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.instance_norm"]], "integer_arrays_to_float() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.integer_arrays_to_float"]], "interp() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.interp"]], "interpolate() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.interpolate"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.is_ivy_sparse_array"]], "is_native_dtype() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.is_native_dtype"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.is_native_sparse_array"]], "isclose() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.isclose"]], "isin() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.isin"]], "ivy.functional.ivy.experimental": [[65, "module-ivy.functional.ivy.experimental"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.kaiser_window"]], "kron() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.kron"]], "l2_normalize() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.l2_normalize"]], "lcm() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.lcm"]], "ldexp() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.ldexp"]], "lexsort() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.lexsort"]], "logaddexp2() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.logaddexp2"]], "logit() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.logit"]], "logsigmoid() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.logsigmoid"]], "lp_normalize() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.lp_normalize"]], "matrix_exp() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.matrix_exp"]], "max_pool1d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.max_pool1d"]], "max_pool2d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.max_pool2d"]], "max_pool3d() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.max_pool3d"]], "median() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.median"]], "moveaxis() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.moveaxis"]], "msort() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.msort"]], "multi_dot() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.multi_dot"]], "nan_to_num() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.nan_to_num"]], "nanmean() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.nanmean"]], "nanmedian() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.nanmedian"]], "nansum() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.nansum"]], "native_sparse_array() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.native_sparse_array_to_indices_values_and_shape"]], "ndenumerate() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.ndindex"]], "nextafter() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.nextafter"]], "outputs_to_ivy_arrays() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.outputs_to_ivy_arrays"]], "pad() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.pad"]], "poisson() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.poisson"]], "prelu() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.prelu"]], "quantile() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.quantile"]], "real() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.real"]], "relu6() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.relu6"]], "rot90() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.rot90"]], "row_indices (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.row_indices"]], "signbit() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.signbit"]], "sinc() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.sinc"]], "sqrt() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.sqrt"]], "take_along_axis() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.take_along_axis"]], "thresholded_relu() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.thresholded_relu"]], "to_dense_array() (ivy.functional.ivy.experimental.sparsearray method)": [[65, "ivy.functional.ivy.experimental.SparseArray.to_dense_array"]], "to_native_arrays_and_back() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.to_native_arrays_and_back"]], "top_k() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.top_k"]], "trapz() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.trapz"]], "tril_indices() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.tril_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.triu_indices"]], "unravel_index() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.unravel_index"]], "values (ivy.functional.ivy.experimental.sparsearray property)": [[65, "ivy.functional.ivy.experimental.SparseArray.values"]], "vorbis_window() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.vorbis_window"]], "vsplit() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.vsplit"]], "vstack() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.vstack"]], "xlogy() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.xlogy"]], "zeta() (in module ivy.functional.ivy.experimental)": [[65, "ivy.functional.ivy.experimental.zeta"]], "arraymode (class in ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.ArrayMode"]], "__init__() (ivy.functional.ivy.general.arraymode method)": [[66, "ivy.functional.ivy.general.ArrayMode.__init__"]], "all_equal() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.all_equal"]], "arg_info() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.arg_info"]], "arg_names() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.arg_names"]], "array_equal() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.array_equal"]], "assert_supports_inplace() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.assert_supports_inplace"]], "cache_fn() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.cache_fn"]], "clip_matrix_norm() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.clip_matrix_norm"]], "clip_vector_norm() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.clip_vector_norm"]], "container_types() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.container_types"]], "current_backend_str() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.current_backend_str"]], "default() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.default"]], "einops_rearrange() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.einops_rearrange"]], "einops_reduce() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.einops_reduce"]], "einops_repeat() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.einops_repeat"]], "exists() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.exists"]], "fourier_encode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.fourier_encode"]], "function_supported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"]], "function_unsupported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"]], "gather() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.gather"]], "gather_nd() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.gather_nd"]], "get_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_all_arrays_in_memory"]], "get_array_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_array_mode"]], "get_exception_trace_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_exception_trace_mode"]], "get_item() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_item"]], "get_min_base() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_min_base"]], "get_min_denominator() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_min_denominator"]], "get_nestable_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_nestable_mode"]], "get_num_dims() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_num_dims"]], "get_queue_timeout() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_queue_timeout"]], "get_referrers_recursive() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.get_tmp_dir"]], "has_nans() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.has_nans"]], "inplace_arrays_supported() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.inplace_arrays_supported"]], "inplace_decrement() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.inplace_decrement"]], "inplace_increment() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.inplace_increment"]], "inplace_update() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.inplace_update"]], "inplace_variables_supported() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.inplace_variables_supported"]], "is_array() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.is_array"]], "is_ivy_array() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.is_ivy_array"]], "is_ivy_container() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.is_ivy_container"]], "is_native_array() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.is_native_array"]], "isscalar() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.isscalar"]], "ivy.functional.ivy.general": [[66, "module-ivy.functional.ivy.general"]], "match_kwargs() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.match_kwargs"]], "multiprocessing() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.multiprocessing"]], "num_arrays_in_memory() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.num_arrays_in_memory"]], "print_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.print_all_arrays_in_memory"]], "scatter_flat() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.scatter_flat"]], "scatter_nd() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.scatter_nd"]], "set_array_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_array_mode"]], "set_exception_trace_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_exception_trace_mode"]], "set_min_base() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_min_base"]], "set_min_denominator() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_min_denominator"]], "set_nestable_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_nestable_mode"]], "set_queue_timeout() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_queue_timeout"]], "set_shape_array_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"]], "set_tmp_dir() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.set_tmp_dir"]], "shape() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.shape"]], "shape_array_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.shape_array_mode"]], "stable_divide() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.stable_divide"]], "stable_pow() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.stable_pow"]], "supports_inplace_updates() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.supports_inplace_updates"]], "to_ivy_shape() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.to_ivy_shape"]], "to_list() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.to_list"]], "to_native_shape() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.to_native_shape"]], "to_numpy() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.to_numpy"]], "to_scalar() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.to_scalar"]], "try_else_none() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.try_else_none"]], "unset_array_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.unset_array_mode"]], "unset_exception_trace_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.unset_exception_trace_mode"]], "unset_nestable_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.unset_nestable_mode"]], "unset_queue_timeout() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.unset_queue_timeout"]], "unset_shape_array_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"]], "value_is_nan() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.value_is_nan"]], "vmap() (in module ivy.functional.ivy.general)": [[66, "ivy.functional.ivy.general.vmap"]], "gradienttracking (class in ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.GradientTracking"]], "__init__() (ivy.functional.ivy.gradients.gradienttracking method)": [[67, "ivy.functional.ivy.gradients.GradientTracking.__init__"]], "adam_step() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.adam_step"]], "adam_update() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.adam_update"]], "execute_with_gradients() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.execute_with_gradients"]], "grad() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.grad"]], "gradient_descent_update() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.gradient_descent_update"]], "ivy.functional.ivy.gradients": [[67, "module-ivy.functional.ivy.gradients"]], "jac() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.jac"]], "lamb_update() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.lamb_update"]], "lars_update() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.lars_update"]], "optimizer_update() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.optimizer_update"]], "set_with_grads() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.set_with_grads"]], "stop_gradient() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.stop_gradient"]], "unset_with_grads() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.unset_with_grads"]], "value_and_grad() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.value_and_grad"]], "with_grads() (in module ivy.functional.ivy.gradients)": [[67, "ivy.functional.ivy.gradients.with_grads"]], "conv() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv"]], "conv1d() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv1d"]], "conv1d_transpose() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv1d_transpose"]], "conv2d() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv2d"]], "conv2d_transpose() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv2d_transpose"]], "conv3d() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv3d"]], "conv3d_transpose() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv3d_transpose"]], "conv_general_dilated() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv_general_dilated"]], "conv_general_transpose() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.conv_general_transpose"]], "depthwise_conv2d() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.depthwise_conv2d"]], "dropout() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.dropout"]], "ivy.functional.ivy.layers": [[68, "module-ivy.functional.ivy.layers"]], "linear() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.linear"]], "lstm_update() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.lstm_update"]], "multi_head_attention() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.functional.ivy.layers)": [[68, "ivy.functional.ivy.layers.scaled_dot_product_attention"]], "cholesky() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.cholesky"]], "cross() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.cross"]], "det() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.det"]], "diag() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.diag"]], "diagonal() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.diagonal"]], "eig() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.eig"]], "eigh() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.eigh"]], "eigvalsh() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.eigvalsh"]], "inner() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.inner"]], "inv() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.inv"]], "ivy.functional.ivy.linear_algebra": [[69, "module-ivy.functional.ivy.linear_algebra"]], "lu_factor() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.lu_factor"]], "matmul() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.matmul"]], "matrix_norm() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.matrix_norm"]], "matrix_power() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.matrix_power"]], "matrix_rank() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.matrix_rank"]], "matrix_transpose() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.matrix_transpose"]], "outer() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.outer"]], "pinv() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.pinv"]], "qr() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.qr"]], "slogdet() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.slogdet"]], "solve() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.solve"]], "svd() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.svd"]], "svdvals() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.svdvals"]], "tensordot() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.tensordot"]], "tensorsolve() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.tensorsolve"]], "trace() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.trace"]], "vander() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.vander"]], "vecdot() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.vecdot"]], "vector_norm() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (in module ivy.functional.ivy.linear_algebra)": [[69, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"]], "binary_cross_entropy() (in module ivy.functional.ivy.losses)": [[70, "ivy.functional.ivy.losses.binary_cross_entropy"]], "cross_entropy() (in module ivy.functional.ivy.losses)": [[70, "ivy.functional.ivy.losses.cross_entropy"]], "ivy.functional.ivy.losses": [[70, "module-ivy.functional.ivy.losses"]], "sparse_cross_entropy() (in module ivy.functional.ivy.losses)": [[70, "ivy.functional.ivy.losses.sparse_cross_entropy"]], "clip() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.clip"]], "concat() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.concat"]], "constant_pad() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.constant_pad"]], "expand_dims() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.expand_dims"]], "flip() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.flip"]], "ivy.functional.ivy.manipulation": [[71, "module-ivy.functional.ivy.manipulation"]], "permute_dims() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.permute_dims"]], "repeat() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.repeat"]], "reshape() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.reshape"]], "roll() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.roll"]], "split() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.split"]], "squeeze() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.squeeze"]], "stack() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.stack"]], "swapaxes() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.swapaxes"]], "tile() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.tile"]], "unstack() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.unstack"]], "zero_pad() (in module ivy.functional.ivy.manipulation)": [[71, "ivy.functional.ivy.manipulation.zero_pad"]], "fomaml_step() (in module ivy.functional.ivy.meta)": [[72, "ivy.functional.ivy.meta.fomaml_step"]], "ivy.functional.ivy.meta": [[72, "module-ivy.functional.ivy.meta"]], "maml_step() (in module ivy.functional.ivy.meta)": [[72, "ivy.functional.ivy.meta.maml_step"]], "reptile_step() (in module ivy.functional.ivy.meta)": [[72, "ivy.functional.ivy.meta.reptile_step"]], "all_nested_indices() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.all_nested_indices"]], "copy_nest() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.copy_nest"]], "duplicate_array_index_chains() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.duplicate_array_index_chains"]], "index_nest() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.index_nest"]], "insert_into_nest_at_index() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.insert_into_nest_at_index"]], "insert_into_nest_at_indices() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.insert_into_nest_at_indices"]], "ivy.functional.ivy.nest": [[73, "module-ivy.functional.ivy.nest"]], "map() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.map"]], "map_nest_at_index() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.map_nest_at_index"]], "map_nest_at_indices() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.map_nest_at_indices"]], "multi_index_nest() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.multi_index_nest"]], "nested_any() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.nested_any"]], "nested_argwhere() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.nested_argwhere"]], "nested_map() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.nested_map"]], "nested_multi_map() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.nested_multi_map"]], "prune_empty() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.prune_empty"]], "prune_nest_at_index() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.prune_nest_at_index"]], "prune_nest_at_indices() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.prune_nest_at_indices"]], "set_nest_at_index() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.set_nest_at_index"]], "set_nest_at_indices() (in module ivy.functional.ivy.nest)": [[73, "ivy.functional.ivy.nest.set_nest_at_indices"]], "ivy.functional.ivy.norms": [[74, "module-ivy.functional.ivy.norms"]], "layer_norm() (in module ivy.functional.ivy.norms)": [[74, "ivy.functional.ivy.norms.layer_norm"]], "ivy.functional.ivy.random": [[75, "module-ivy.functional.ivy.random"]], "multinomial() (in module ivy.functional.ivy.random)": [[75, "ivy.functional.ivy.random.multinomial"]], "randint() (in module ivy.functional.ivy.random)": [[75, "ivy.functional.ivy.random.randint"]], "random_normal() (in module ivy.functional.ivy.random)": [[75, "ivy.functional.ivy.random.random_normal"]], "random_uniform() (in module ivy.functional.ivy.random)": [[75, "ivy.functional.ivy.random.random_uniform"]], "seed() (in module ivy.functional.ivy.random)": [[75, "ivy.functional.ivy.random.seed"]], "shuffle() (in module ivy.functional.ivy.random)": [[75, "ivy.functional.ivy.random.shuffle"]], "argmax() (in module ivy.functional.ivy.searching)": [[76, "ivy.functional.ivy.searching.argmax"]], "argmin() (in module ivy.functional.ivy.searching)": [[76, "ivy.functional.ivy.searching.argmin"]], "argwhere() (in module ivy.functional.ivy.searching)": [[76, "ivy.functional.ivy.searching.argwhere"]], "ivy.functional.ivy.searching": [[76, "module-ivy.functional.ivy.searching"]], "nonzero() (in module ivy.functional.ivy.searching)": [[76, "ivy.functional.ivy.searching.nonzero"]], "where() (in module ivy.functional.ivy.searching)": [[76, "ivy.functional.ivy.searching.where"]], "ivy.functional.ivy.set": [[77, "module-ivy.functional.ivy.set"]], "unique_all() (in module ivy.functional.ivy.set)": [[77, "ivy.functional.ivy.set.unique_all"]], "unique_counts() (in module ivy.functional.ivy.set)": [[77, "ivy.functional.ivy.set.unique_counts"]], "unique_inverse() (in module ivy.functional.ivy.set)": [[77, "ivy.functional.ivy.set.unique_inverse"]], "unique_values() (in module ivy.functional.ivy.set)": [[77, "ivy.functional.ivy.set.unique_values"]], "argsort() (in module ivy.functional.ivy.sorting)": [[78, "ivy.functional.ivy.sorting.argsort"]], "ivy.functional.ivy.sorting": [[78, "module-ivy.functional.ivy.sorting"]], "searchsorted() (in module ivy.functional.ivy.sorting)": [[78, "ivy.functional.ivy.sorting.searchsorted"]], "sort() (in module ivy.functional.ivy.sorting)": [[78, "ivy.functional.ivy.sorting.sort"]], "cumprod() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.cumprod"]], "cumsum() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.cumsum"]], "einsum() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.einsum"]], "ivy.functional.ivy.statistical": [[79, "module-ivy.functional.ivy.statistical"]], "max() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.max"]], "mean() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.mean"]], "min() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.min"]], "prod() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.prod"]], "std() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.std"]], "sum() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.sum"]], "var() (in module ivy.functional.ivy.statistical)": [[79, "ivy.functional.ivy.statistical.var"]], "all() (in module ivy.functional.ivy.utility)": [[80, "ivy.functional.ivy.utility.all"]], "any() (in module ivy.functional.ivy.utility)": [[80, "ivy.functional.ivy.utility.any"]], "ivy.functional.ivy.utility": [[80, "module-ivy.functional.ivy.utility"]], "nestedarray (class in ivy.nested_array.nested_array)": [[82, "ivy.nested_array.nested_array.NestedArray"]], "__init__() (ivy.nested_array.nested_array.nestedarray method)": [[82, "ivy.nested_array.nested_array.NestedArray.__init__"]], "data (ivy.nested_array.nested_array.nestedarray property)": [[82, "ivy.nested_array.nested_array.NestedArray.data"]], "device (ivy.nested_array.nested_array.nestedarray property)": [[82, "ivy.nested_array.nested_array.NestedArray.device"]], "dtype (ivy.nested_array.nested_array.nestedarray property)": [[82, "ivy.nested_array.nested_array.NestedArray.dtype"]], "from_row_lengths() (ivy.nested_array.nested_array.nestedarray class method)": [[82, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"]], "from_row_split() (ivy.nested_array.nested_array.nestedarray class method)": [[82, "ivy.nested_array.nested_array.NestedArray.from_row_split"]], "ivy.nested_array.nested_array": [[82, "module-ivy.nested_array.nested_array"]], "ndim (ivy.nested_array.nested_array.nestedarray property)": [[82, "ivy.nested_array.nested_array.NestedArray.ndim"]], "nested_array() (ivy.nested_array.nested_array.nestedarray class method)": [[82, "ivy.nested_array.nested_array.NestedArray.nested_array"]], "reshape() (ivy.nested_array.nested_array.nestedarray method)": [[82, "ivy.nested_array.nested_array.NestedArray.reshape"]], "shape (ivy.nested_array.nested_array.nestedarray property)": [[82, "ivy.nested_array.nested_array.NestedArray.shape"]], "unbind() (ivy.nested_array.nested_array.nestedarray method)": [[82, "ivy.nested_array.nested_array.NestedArray.unbind"]], "assert_all_close() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"]], "assert_same_type_and_shape() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"]], "check_unsupported_device() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"]], "check_unsupported_device_and_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"]], "check_unsupported_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"]], "ivy_tests.test_ivy.helpers.assertions": [[83, "module-ivy_tests.test_ivy.helpers.assertions"]], "test_unsupported_function() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"]], "value_test() (in module ivy_tests.test_ivy.helpers.assertions)": [[83, "ivy_tests.test_ivy.helpers.assertions.value_test"]], "available_frameworks() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[84, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"]], "ground_truth() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[84, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[84, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "args_to_container() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"]], "as_lists() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.as_lists"]], "compiled_if_required() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.compiled_if_required"]], "convtrue() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.convtrue"]], "create_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"]], "empty_func() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.empty_func"]], "flatten() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.flatten"]], "flatten_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"]], "flatten_fw_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"]], "framework_comparator() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"]], "get_frontend_ret() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"]], "get_ret_and_flattened_np_array() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"]], "gradient_incompatible_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"]], "gradient_test() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"]], "gradient_unsupported_dtypes() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"]], "ivy_tests.test_ivy.helpers.function_testing": [[85, "module-ivy_tests.test_ivy.helpers.function_testing"]], "kwargs_to_args_n_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"]], "make_json_pickable() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"]], "test_frontend_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"]], "test_frontend_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"]], "test_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.test_function"]], "test_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.test_method"]], "var_fn() (in module ivy_tests.test_ivy.helpers.function_testing)": [[85, "ivy_tests.test_ivy.helpers.function_testing.var_fn"]], "interruptedtest": [[86, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "testdata (class in ivy_tests.test_ivy.helpers.globals)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData"]], "__init__() (ivy_tests.test_ivy.helpers.globals.interruptedtest method)": [[86, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.globals.testdata method)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"]], "fn_name (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"]], "fn_tree (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"]], "is_method (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData.is_method"]], "ivy_tests.test_ivy.helpers.globals": [[86, "module-ivy_tests.test_ivy.helpers.globals"]], "remove_all_current_framework() (in module ivy_tests.test_ivy.helpers.globals)": [[86, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"]], "setup_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[86, "ivy_tests.test_ivy.helpers.globals.setup_api_test"]], "setup_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[86, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"]], "supported_device_dtypes (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"]], "teardown_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[86, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"]], "teardown_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[86, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"]], "test_fn (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[86, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[87, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "frontendmethoddata (class in ivy_tests.test_ivy.helpers.structs)": [[88, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"]], "__init__() (ivy_tests.test_ivy.helpers.structs.frontendmethoddata method)": [[88, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"]], "framework_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[88, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"]], "init_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[88, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"]], "ivy_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[88, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"]], "ivy_tests.test_ivy.helpers.structs": [[88, "module-ivy_tests.test_ivy.helpers.structs"]], "method_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[88, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"]], "frontendfunctiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"]], "frontendmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"]], "functiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"]], "initmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags"]], "methodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"]], "testflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.TestFlags"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.initmethodtestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.initmethodtestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.InitMethodTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.apply_flags"]], "apply_flags() (ivy_tests.test_ivy.helpers.test_parameter_flags.testflags method)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.TestFlags.apply_flags"]], "as_cont() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.as_cont"]], "build_flag() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"]], "frontend_function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"]], "frontend_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"]], "function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"]], "init_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.init_method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[89, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[89, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"]], "handle_frontend_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"]], "handle_frontend_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"]], "handle_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"]], "handle_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[90, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "num_positional_args() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"]], "num_positional_args_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"]], "seed() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[90, "ivy_tests.test_ivy.helpers.testing_helpers.seed"]], "check_all() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_all"]], "check_all_or_any_fn() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_all_or_any_fn"]], "check_any() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_any"]], "check_dimensions() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_dimensions"]], "check_elem_in_list() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_elem_in_list"]], "check_equal() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_equal"]], "check_exists() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_exists"]], "check_false() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_false"]], "check_fill_value_and_dtype_are_compatible() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_fill_value_and_dtype_are_compatible"]], "check_gather_input_valid() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_gather_input_valid"]], "check_gather_nd_input_valid() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_gather_nd_input_valid"]], "check_greater() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_greater"]], "check_inplace_sizes_valid() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_inplace_sizes_valid"]], "check_isinstance() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_isinstance"]], "check_kernel_padding_size() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_kernel_padding_size"]], "check_less() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_less"]], "check_one_way_broadcastable() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_one_way_broadcastable"]], "check_same_dtype() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_same_dtype"]], "check_shape() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_shape"]], "check_shapes_broadcastable() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_shapes_broadcastable"]], "check_true() (in module ivy.utils.assertions)": [[93, "ivy.utils.assertions.check_true"]], "ivy.utils.assertions": [[93, "module-ivy.utils.assertions"]], "ivy.utils.backend": [[94, "module-ivy.utils.backend"]], "import_module() (in module ivy.utils.dynamic_import)": [[95, "ivy.utils.dynamic_import.import_module"]], "ivy.utils.dynamic_import": [[95, "module-ivy.utils.dynamic_import"]], "ivybackendexception": [[96, "ivy.utils.exceptions.IvyBackendException"]], "ivyerror": [[96, "ivy.utils.exceptions.IvyError"]], "ivyexception": [[96, "ivy.utils.exceptions.IvyException"]], "ivynotimplementedexception": [[96, "ivy.utils.exceptions.IvyNotImplementedException"]], "__init__() (ivy.utils.exceptions.ivybackendexception method)": [[96, "ivy.utils.exceptions.IvyBackendException.__init__"]], "__init__() (ivy.utils.exceptions.ivyerror method)": [[96, "ivy.utils.exceptions.IvyError.__init__"]], "__init__() (ivy.utils.exceptions.ivyexception method)": [[96, "ivy.utils.exceptions.IvyException.__init__"]], "__init__() (ivy.utils.exceptions.ivynotimplementedexception method)": [[96, "ivy.utils.exceptions.IvyNotImplementedException.__init__"]], "handle_exceptions() (in module ivy.utils.exceptions)": [[96, "ivy.utils.exceptions.handle_exceptions"]], "ivy.utils.exceptions": [[96, "module-ivy.utils.exceptions"]], "add_array_specs() (in module ivy.utils.inspection)": [[97, "ivy.utils.inspection.add_array_specs"]], "fn_array_spec() (in module ivy.utils.inspection)": [[97, "ivy.utils.inspection.fn_array_spec"]], "ivy.utils.inspection": [[97, "module-ivy.utils.inspection"]], "cprint() (in module ivy.utils.verbosity)": [[98, "ivy.utils.verbosity.cprint"]], "ivy.utils.verbosity": [[98, "module-ivy.utils.verbosity"]], "applied libraries": [[142, "term-Applied-Libraries"]], "automatic code conversions": [[142, "term-Automatic-Code-Conversions"]], "backend handler": [[142, "term-Backend-Handler"]], "compositional functions": [[142, "term-Compositional-Functions"]], "convenience functions": [[142, "term-Convenience-Functions"]], "framework": [[142, "term-Framework"]], "framework handler": [[142, "term-Framework-Handler"]], "graph compiler": [[142, "term-Graph-Compiler"]], "ivy array": [[142, "term-Ivy-Array"]], "ivy backends": [[142, "term-Ivy-Backends"]], "ivy builder": [[142, "term-Ivy-Builder"]], "ivy compiler": [[142, "term-Ivy-Compiler"]], "ivy container": [[142, "term-Ivy-Container"]], "ivy frontends": [[142, "term-Ivy-Frontends"]], "ivy functional api": [[142, "term-Ivy-Functional-API"]], "ivy graph compiler": [[142, "term-Ivy-Graph-Compiler"]], "ivy transpiler": [[142, "term-Ivy-Transpiler"]], "mixed functions": [[142, "term-Mixed-Functions"]], "native array": [[142, "term-Native-Array"]], "nestable functions": [[142, "term-Nestable-Functions"]], "pipeline": [[142, "term-Pipeline"]], "primary functions": [[142, "term-Primary-Functions"]], "standalone functions": [[142, "term-Standalone-Functions"]], "submodule helper functions": [[142, "term-Submodule-Helper-Functions"]]}})