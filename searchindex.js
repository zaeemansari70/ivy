Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/15_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/15_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 128, 129, 130, 131, 135, 136, 138, 139, 140, 150, 151, 152, 272, 317, 320, 355, 357, 672, 679, 717, 723, 757, 759, 761, 763, 796, 968, 970, 980, 1004, 1007, 1085, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 169, 174, 179, 184, 189, 194, 199, 200, 201, 202, 203, 206, 210, 211, 216, 219, 224, 225, 230, 233, 236, 241, 246, 249, 254, 259, 264, 267, 272, 277, 278, 279, 284, 289, 294, 299, 300, 301, 302, 303, 304, 309, 310, 315, 316, 317, 322, 323, 328, 333, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384, 385, 386, 387, 388, 389, 394, 399, 404, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 595, 596, 601, 606, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 667, 672, 673, 678, 679, 680, 681, 682, 683, 684, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 751, 752, 753, 754, 755, 756, 757, 759, 764, 768, 771, 775, 780, 784, 788, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 810, 811, 812, 813, 814, 815, 816, 821, 824, 827, 830, 833, 836, 839, 843, 846, 847, 850, 853, 856, 859, 862, 863, 866, 869, 872, 875, 878, 881, 884, 887, 888, 893, 898, 903, 904, 909, 913, 917, 921, 925, 929, 934, 938, 943, 944, 948, 952, 956, 960, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 992, 993, 994, 997, 998, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1015, 1020, 1025, 1030, 1031, 1036, 1041, 1042, 1046, 1050, 1054, 1058, 1062, 1066, 1070, 1074, 1075, 1080, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1085], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 70, 71, 72, 75, 76, 77, 78, 115, 116, 123, 124, 125, 126, 128, 132, 133, 135, 136, 138, 140, 151, 152, 672, 724, 992, 993, 997, 1085, 1093, 1094, 1095, 1096, 1097, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 128, 129, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133], "base": [0, 19, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 127, 129, 135, 151, 202, 233, 234, 235, 272, 355, 357, 388, 494, 497, 549, 552, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 616, 617, 619, 672, 707, 731, 740, 757, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1042, 1045, 1093, 1094, 1095, 1098, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "object": [0, 72, 75, 76, 77, 78, 123, 137, 140, 202, 219, 222, 272, 310, 313, 355, 379, 383, 757, 968, 971, 973, 975, 976, 977, 982, 983, 984, 985, 992, 1003, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1119, 1120], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 72, 75, 76, 77, 78, 118, 126, 130, 135, 137, 138, 139, 140, 272, 273, 274, 275, 276, 355, 356, 357, 757, 758, 992, 993, 997, 1085, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "choose_random_backend": 0, "exclud": [0, 2, 121, 135, 202, 203, 204, 992, 998, 1000], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 121, 123, 124, 125, 129, 130, 131, 132, 133, 135, 137, 139, 140, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 303, 304, 306, 308, 310, 312, 313, 314, 317, 319, 320, 321, 323, 325, 327, 328, 330, 332, 333, 335, 337, 340, 342, 344, 354, 355, 360, 361, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 684, 685, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 711, 713, 714, 718, 724, 726, 729, 730, 731, 732, 733, 735, 739, 740, 746, 747, 749, 752, 753, 754, 757, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 863, 864, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 974, 979, 980, 981, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1097, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 72, 77, 78, 118, 125], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 75, 76, 135, 137, 139, 355, 378, 672, 730, 1096, 1097, 1119, 1120], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 135, 137, 139, 672, 723, 1096, 1097, 1119, 1120], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 978, 979, 980, 981, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1096, 1097, 1107, 1116, 1117, 1123, 1127], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 125, 129, 131, 135, 140, 151, 152, 272, 303, 315, 316, 322, 353, 354, 355, 367, 368, 372, 374, 672, 706, 709, 714, 718, 725, 727, 738, 757, 797, 968, 969, 978, 979, 1085], "prioriti": [0, 4, 19, 75, 76, 132], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 133, 135, 137, 138, 199, 200, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 340, 343, 388, 389, 392, 404, 407, 409, 412, 414, 417, 464, 467, 499, 502, 504, 507, 594, 595, 606, 609, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 672, 678, 679, 683, 693, 700, 723, 730, 798, 801, 805, 808, 814, 815, 816, 819, 827, 829, 903, 938, 941, 968, 974, 986, 987, 990, 1009, 1015, 1019, 1041, 1046, 1049, 1066, 1069, 1074, 1075, 1078, 1088, 1090, 1096, 1097, 1119, 1120], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 32, 33, 34, 35, 75, 76, 117, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 201, 202, 236, 239, 254, 256, 258, 259, 261, 263, 272, 315, 316, 355, 361, 377, 388, 621, 624, 672, 681, 757, 764, 766, 771, 773, 780, 782, 788, 790, 815, 866, 868, 869, 871, 968, 974, 980, 1041, 1062, 1065, 1070, 1073, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "paramet": [0, 4, 5, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 120, 123, 137, 138, 151, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 313, 315, 316, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 340, 343, 345, 346, 347, 348, 349, 354, 355, 358, 359, 360, 361, 362, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 729, 730, 731, 732, 734, 736, 737, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1090, 1096, 1097, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 48, 49, 68, 69, 70, 71, 72, 75, 76, 77, 78, 81, 82, 87, 88, 93, 94, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 202, 203, 204, 206, 207, 208, 211, 212, 214, 219, 222, 224, 225, 226, 228, 236, 239, 241, 242, 244, 249, 250, 252, 267, 269, 271, 272, 294, 295, 296, 297, 298, 340, 343, 355, 361, 368, 372, 377, 378, 388, 514, 517, 646, 649, 672, 693, 700, 701, 702, 703, 704, 705, 744, 757, 764, 766, 780, 782, 798, 805, 806, 807, 808, 809, 810, 813, 815, 827, 829, 866, 868, 878, 880, 903, 921, 924, 934, 937, 944, 947, 964, 965, 966, 967, 968, 970, 980, 981, 992, 993, 994, 995, 996, 997, 998, 1000, 1004, 1008, 1009, 1010, 1014, 1020, 1024, 1041, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1091, 1096, 1097, 1107, 1115, 1118, 1123, 1124, 1125, 1126, 1127, 1128], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 34, 35, 36, 37, 42, 43, 52, 53, 54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 151, 152, 163, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 224, 225, 226, 228, 230, 231, 233, 234, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 294, 295, 296, 297, 298, 299, 304, 307, 310, 313, 317, 320, 322, 354, 355, 362, 365, 368, 372, 374, 376, 377, 378, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 624, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 678, 690, 691, 693, 700, 701, 702, 703, 704, 705, 706, 713, 717, 725, 726, 727, 729, 730, 746, 747, 749, 755, 757, 764, 766, 768, 769, 771, 773, 775, 777, 779, 780, 782, 784, 786, 788, 790, 793, 795, 796, 798, 813, 815, 816, 818, 820, 821, 823, 827, 829, 843, 845, 863, 865, 866, 868, 878, 880, 881, 883, 887, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 912, 921, 924, 929, 932, 938, 939, 940, 941, 942, 943, 948, 951, 968, 973, 974, 975, 976, 981, 982, 983, 984, 985, 987, 989, 991, 992, 993, 994, 995, 996, 998, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1096, 1097, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 75, 76, 128, 129, 133, 137, 152, 672, 752, 1085], "infer": [0, 4, 34, 35, 117, 126, 130, 131, 135, 140, 199, 200, 202, 203, 204, 206, 207, 208, 211, 212, 214, 224, 225, 226, 228, 241, 242, 244, 249, 250, 252, 267, 269, 271, 272, 303, 388, 514, 517, 672, 710, 737, 903, 934, 937], "when": [0, 4, 14, 15, 18, 19, 20, 52, 53, 72, 75, 76, 77, 78, 97, 98, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 152, 272, 279, 282, 388, 404, 407, 499, 502, 616, 619, 672, 683, 717, 740, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 968, 979, 1004, 1005, 1006, 1008, 1041, 1046, 1049, 1054, 1057, 1062, 1065, 1070, 1073, 1085, 1119, 1120], "global": [0, 4, 5, 6, 12, 56, 57, 72, 75, 76, 77, 78, 101, 102, 125, 126, 130, 131, 135, 272, 300, 301, 302, 303, 355, 376, 377, 378, 672, 707, 708, 728, 731, 732, 734, 739, 740, 757, 797, 986, 987, 988, 989, 990, 991, 1121, 1122], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 32, 33, 42, 43, 44, 45, 63, 75, 76, 87, 88, 89, 90, 108, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137, 138, 272, 303, 345, 348, 355, 361, 375, 376, 377, 378, 388, 424, 427, 672, 673, 674, 675, 676, 677, 731, 732, 733, 734, 735, 736, 757, 764, 766, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 815, 821, 823, 843, 845, 847, 849, 856, 858, 863, 865, 968, 969, 978, 979, 980, 984, 985, 992, 1002, 1004, 1005, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1062, 1065, 1070, 1073, 1107, 1116, 1123, 1124, 1125, 1126, 1127, 1128], "ret": [0, 4, 5, 12, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 120, 124, 135, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 304, 307, 309, 310, 313, 315, 316, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 340, 343, 354, 355, 358, 359, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 729, 730, 737, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 978, 979, 980, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1090, 1096, 1097, 1123, 1127], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 224, 225, 228, 236, 239, 246, 247, 249, 252, 264, 266, 267, 271, 272, 279, 282, 294, 295, 296, 297, 298, 303, 304, 307, 310, 313, 315, 316, 333, 336, 338, 345, 348, 353, 354, 355, 361, 362, 365, 367, 368, 369, 370, 371, 372, 375, 376, 377, 379, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 432, 434, 437, 439, 442, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 494, 497, 499, 500, 501, 502, 504, 505, 506, 507, 514, 517, 519, 522, 539, 542, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 680, 681, 689, 690, 697, 700, 701, 702, 703, 704, 705, 708, 709, 720, 722, 733, 735, 737, 738, 744, 746, 747, 748, 749, 750, 751, 753, 754, 757, 759, 760, 761, 762, 763, 775, 776, 777, 778, 779, 797, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 836, 838, 847, 849, 853, 855, 866, 868, 872, 874, 875, 877, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 951, 952, 955, 968, 971, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1062, 1065, 1066, 1069, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 32, 33, 34, 35, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 152, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 202, 203, 204, 210, 211, 212, 214, 216, 217, 224, 225, 226, 228, 236, 239, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 294, 296, 298, 303, 340, 343, 355, 361, 377, 388, 389, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 593, 596, 598, 599, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 675, 677, 701, 703, 705, 717, 746, 747, 749, 757, 764, 766, 771, 773, 775, 777, 779, 780, 782, 784, 786, 788, 790, 797, 815, 816, 817, 818, 819, 820, 821, 823, 843, 845, 847, 849, 856, 858, 859, 861, 863, 865, 866, 868, 878, 880, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 908, 917, 920, 921, 924, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 964, 965, 966, 968, 980, 981, 987, 989, 991, 992, 997, 998, 1000, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "import": [0, 4, 15, 20, 70, 71, 115, 116, 118, 120, 121, 124, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 152, 355, 375, 376, 1085, 1091], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 42, 43, 75, 76, 87, 88, 119, 123, 124, 126, 130, 131, 132, 135, 137, 140, 672, 746, 747, 748, 749, 750, 1041, 1042, 1045, 1085], "np": [0, 4, 119, 123, 128, 130, 131, 132, 137, 138, 140, 1085], "x": [0, 4, 12, 21, 23, 24, 25, 26, 27, 29, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 129, 132, 133, 135, 137, 138, 139, 140, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 206, 208, 209, 211, 214, 215, 219, 222, 223, 225, 228, 229, 236, 239, 241, 244, 245, 249, 252, 253, 254, 255, 258, 259, 260, 263, 264, 266, 267, 268, 271, 272, 279, 282, 283, 289, 292, 293, 294, 295, 296, 297, 298, 303, 304, 307, 308, 310, 313, 333, 336, 355, 361, 362, 365, 366, 368, 372, 377, 379, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 437, 439, 442, 443, 449, 450, 451, 452, 453, 459, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 489, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 514, 517, 519, 522, 524, 527, 528, 529, 532, 533, 534, 537, 538, 539, 542, 544, 547, 549, 552, 553, 554, 557, 558, 559, 562, 563, 564, 567, 568, 579, 582, 583, 594, 595, 601, 604, 605, 611, 614, 615, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 680, 681, 682, 684, 685, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 710, 712, 713, 715, 716, 717, 719, 720, 721, 722, 726, 737, 741, 744, 746, 747, 748, 749, 750, 751, 755, 756, 757, 768, 769, 775, 776, 777, 778, 779, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 843, 845, 846, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 866, 868, 869, 871, 872, 874, 875, 877, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 956, 959, 960, 963, 968, 969, 971, 974, 978, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1029, 1030, 1031, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1118], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 152, 153, 161, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 238, 239, 240, 241, 244, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 279, 282, 284, 286, 287, 288, 289, 292, 294, 296, 297, 298, 303, 304, 307, 310, 313, 317, 320, 323, 326, 328, 331, 333, 336, 338, 340, 343, 349, 355, 361, 362, 365, 368, 372, 374, 378, 379, 383, 388, 389, 391, 392, 393, 394, 397, 398, 399, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 422, 423, 424, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 649, 650, 651, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 671, 672, 673, 675, 676, 677, 680, 681, 682, 684, 685, 687, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 710, 712, 713, 714, 715, 716, 717, 719, 720, 722, 725, 726, 727, 729, 730, 735, 737, 741, 744, 746, 747, 749, 750, 751, 754, 755, 756, 757, 759, 761, 762, 763, 764, 766, 771, 773, 775, 777, 778, 779, 780, 782, 784, 786, 788, 790, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 846, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 904, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 931, 932, 933, 934, 937, 938, 940, 941, 942, 943, 944, 946, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 970, 971, 980, 981, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1088, 1090, 1107, 1115, 1118], "2": [0, 4, 18, 19, 21, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 121, 123, 126, 129, 134, 135, 137, 138, 139, 140, 152, 163, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 187, 194, 195, 196, 197, 198, 201, 202, 224, 225, 228, 236, 239, 246, 247, 249, 252, 267, 271, 272, 279, 282, 294, 295, 296, 297, 298, 304, 307, 310, 313, 333, 336, 355, 361, 362, 365, 367, 368, 370, 372, 376, 379, 383, 388, 389, 390, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 422, 424, 425, 426, 427, 428, 434, 437, 439, 442, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 465, 466, 467, 469, 470, 472, 474, 477, 494, 497, 499, 500, 501, 502, 504, 505, 506, 507, 514, 517, 519, 522, 539, 542, 544, 547, 564, 565, 566, 567, 568, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 680, 681, 684, 685, 687, 690, 697, 700, 701, 702, 703, 704, 705, 720, 722, 737, 744, 757, 759, 760, 761, 762, 763, 775, 776, 777, 778, 779, 798, 801, 802, 803, 804, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 828, 829, 836, 838, 839, 842, 843, 845, 847, 849, 853, 855, 856, 858, 859, 861, 866, 868, 872, 873, 874, 875, 877, 881, 882, 883, 887, 888, 889, 890, 891, 892, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 952, 955, 968, 971, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085], "0": [0, 4, 19, 23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 121, 123, 124, 135, 137, 138, 139, 140, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 216, 217, 218, 230, 231, 233, 234, 235, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 271, 272, 279, 282, 294, 296, 297, 298, 304, 307, 310, 313, 333, 336, 355, 358, 361, 362, 365, 367, 368, 372, 375, 376, 377, 378, 384, 386, 388, 389, 390, 392, 393, 394, 397, 399, 402, 404, 407, 408, 409, 412, 414, 415, 416, 417, 418, 419, 422, 424, 425, 426, 427, 428, 429, 432, 434, 437, 444, 447, 454, 457, 459, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 494, 497, 499, 500, 501, 502, 504, 505, 506, 507, 519, 522, 544, 547, 549, 552, 554, 557, 564, 567, 594, 595, 596, 599, 601, 604, 606, 609, 616, 619, 621, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 675, 676, 677, 680, 681, 684, 685, 687, 689, 690, 691, 697, 700, 701, 702, 703, 704, 705, 711, 720, 722, 726, 729, 730, 737, 744, 746, 747, 748, 749, 750, 751, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 828, 829, 836, 838, 866, 868, 872, 874, 875, 876, 877, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 924, 925, 928, 929, 930, 931, 932, 933, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 960, 962, 968, 971, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1062, 1063, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130], "print": [0, 4, 5, 6, 12, 18, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 121, 123, 129, 135, 137, 138, 139, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 224, 225, 228, 236, 239, 246, 247, 249, 252, 264, 266, 267, 271, 272, 279, 282, 294, 295, 296, 297, 298, 304, 307, 315, 316, 333, 336, 354, 355, 362, 365, 368, 369, 370, 371, 372, 374, 377, 384, 385, 388, 389, 390, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 432, 434, 437, 439, 442, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 494, 497, 499, 500, 501, 504, 505, 506, 507, 514, 517, 519, 522, 539, 542, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 680, 681, 689, 690, 697, 700, 701, 702, 703, 704, 705, 708, 727, 737, 744, 746, 747, 748, 749, 750, 751, 757, 759, 760, 762, 763, 775, 776, 777, 778, 779, 797, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 836, 838, 853, 855, 866, 868, 872, 874, 875, 877, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 917, 920, 921, 924, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 952, 955, 968, 971, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1062, 1065, 1066, 1069, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 128, 132, 133, 134, 136, 137, 138, 139, 150, 151, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 313, 315, 316, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 846, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1093, 1094, 1095, 1123, 1126, 1128], "py": [0, 4, 5, 19, 118, 119, 120, 123, 124, 125, 126, 130, 131, 133, 135, 137, 139, 140, 992, 993, 997, 1123, 1124, 1125, 1126, 1128], "noqa": [0, 4, 5, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 404, 407, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 544, 547, 594, 595, 606, 609, 626, 629, 631, 634, 646, 649, 651, 654, 661, 665, 666, 815, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 1041, 1046, 1049], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 151, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 181, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 219, 222, 233, 234, 254, 256, 258, 259, 261, 263, 272, 277, 278, 279, 282, 294, 296, 298, 299, 309, 315, 316, 322, 328, 331, 338, 339, 348, 349, 354, 355, 358, 359, 360, 361, 367, 368, 372, 373, 374, 375, 376, 377, 378, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 680, 683, 684, 692, 693, 699, 701, 702, 703, 704, 705, 715, 716, 717, 719, 720, 721, 722, 724, 729, 730, 731, 732, 734, 739, 740, 743, 745, 746, 747, 749, 756, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 775, 777, 779, 780, 782, 784, 786, 788, 790, 793, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 940, 942, 943, 956, 959, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127], "set_backend": [0, 4, 5, 12, 125, 126, 127, 130, 272, 315, 316, 355, 375, 376, 1085], "ha": [0, 4, 5, 14, 15, 16, 19, 62, 63, 75, 76, 107, 108, 120, 121, 123, 124, 125, 126, 127, 130, 131, 133, 135, 137, 139, 140, 151, 152, 202, 236, 239, 355, 361, 388, 389, 392, 596, 599, 616, 619, 757, 797, 815, 839, 842, 862, 863, 865, 866, 868, 875, 877, 903, 917, 920, 944, 947, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1041, 1050, 1053, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "over": [0, 4, 14, 16, 18, 68, 69, 70, 71, 75, 76, 113, 114, 115, 116, 120, 121, 123, 126, 132, 137, 152, 815, 843, 845, 872, 874, 878, 880, 881, 883, 986, 987, 990, 992, 998, 1000, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1121, 1122], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 68, 69, 70, 71, 75, 76, 85, 86, 87, 88, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 241, 244, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 355, 379, 383, 388, 389, 392, 404, 407, 409, 412, 414, 417, 464, 467, 484, 485, 486, 487, 488, 499, 502, 504, 507, 519, 522, 544, 547, 594, 595, 606, 607, 608, 609, 610, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 672, 673, 674, 675, 676, 677, 693, 694, 695, 696, 697, 700, 712, 719, 720, 721, 739, 740, 757, 768, 769, 798, 801, 805, 808, 812, 814, 815, 816, 819, 827, 829, 903, 938, 941, 964, 965, 966, 967, 968, 971, 974, 978, 984, 985, 986, 987, 990, 992, 998, 1000, 1009, 1015, 1019, 1041, 1046, 1049, 1074, 1075, 1078, 1084, 1085], "pass": [0, 4, 20, 70, 71, 72, 75, 76, 77, 78, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 137, 152, 272, 299, 355, 378, 388, 424, 427, 672, 683, 717, 757, 796, 964, 965, 966, 1096, 1097, 1119, 1120, 1123, 1127, 1129, 1130], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 44, 45, 89, 90, 119, 123, 124, 126, 130, 131, 132, 135, 137, 140, 152, 757, 775, 776, 777, 778, 779, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1085], "get_backend": [0, 125, 126], "specifi": [0, 5, 34, 35, 52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 97, 98, 99, 100, 113, 114, 117, 119, 123, 124, 125, 130, 131, 132, 135, 138, 139, 140, 169, 171, 173, 202, 203, 204, 210, 224, 230, 231, 233, 234, 246, 247, 254, 256, 258, 259, 261, 263, 264, 266, 272, 279, 282, 289, 292, 355, 368, 372, 374, 377, 378, 379, 383, 388, 621, 624, 672, 678, 690, 700, 701, 704, 712, 755, 815, 827, 829, 843, 845, 872, 874, 875, 877, 878, 880, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 909, 912, 913, 916, 921, 924, 938, 939, 940, 941, 942, 944, 947, 948, 951, 960, 963, 968, 973, 975, 976, 982, 983, 984, 985, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1041, 1042, 1045, 1058, 1061, 1066, 1069, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "isn": [0, 5, 19, 138, 152], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 70, 71, 115, 116, 121, 123, 130, 135, 137, 138, 139, 140, 152, 672, 681, 798, 811, 812], "associ": [0, 5, 19, 123, 125, 127, 152, 388, 404, 407, 596, 599, 815, 847, 849, 856, 858, 884, 886], "option": [0, 5, 18, 19, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 129, 130, 131, 132, 133, 135, 140, 152, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 294, 296, 298, 299, 300, 301, 302, 303, 322, 354, 355, 361, 376, 377, 378, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 684, 685, 687, 690, 691, 692, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 713, 724, 726, 729, 730, 739, 740, 746, 747, 749, 757, 775, 777, 779, 793, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 969, 974, 979, 980, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1015, 1016, 1018, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1123, 1124, 1125, 1127], "str": [0, 5, 29, 30, 31, 48, 49, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 130, 131, 133, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 199, 200, 202, 236, 239, 272, 277, 294, 296, 298, 299, 300, 301, 309, 310, 313, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 345, 346, 347, 348, 354, 355, 358, 378, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 678, 692, 694, 695, 696, 701, 703, 705, 724, 729, 730, 746, 747, 749, 775, 777, 779, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 816, 818, 820, 859, 861, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 964, 965, 966, 967, 968, 974, 984, 987, 989, 994, 996, 1015, 1016, 1018, 1041, 1042, 1045, 1075, 1077, 1079, 1080, 1082, 1084], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 70, 71, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 151, 152, 757, 768, 769, 1085, 1091], "want": [0, 5, 15, 17, 18, 19, 70, 71, 115, 116, 123, 138, 139, 140, 152], "retriev": [0, 5, 19, 672, 678], "i": [0, 5, 19, 21, 117, 123, 135, 138, 140, 202, 203, 204, 236, 239, 388, 389, 392, 424, 427, 444, 447, 454, 457, 464, 467, 504, 507, 509, 512, 524, 527, 594, 595, 601, 604, 616, 619, 621, 624, 672, 680, 681, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 805, 808, 815, 821, 823, 839, 842, 847, 849, 856, 858, 863, 865, 866, 868, 875, 877, 881, 883, 903, 948, 951, 968, 971, 984, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073], "e": [0, 5, 15, 16, 17, 19, 21, 117, 123, 129, 138, 152, 201, 202, 236, 239, 272, 278, 340, 343, 355, 358, 388, 389, 392, 424, 427, 444, 447, 454, 457, 464, 467, 494, 497, 504, 507, 509, 512, 524, 527, 549, 552, 559, 562, 594, 595, 601, 604, 616, 619, 621, 624, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 815, 821, 823, 839, 842, 847, 849, 856, 858, 863, 865, 866, 868, 881, 883, 903, 948, 951, 968, 971, 984, 985, 992, 997, 998, 1000, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 62, 63, 75, 76, 85, 86, 87, 88, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 119, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 137, 138, 140, 152, 202, 203, 204, 236, 239, 272, 284, 287, 294, 297, 355, 378, 388, 404, 408, 449, 453, 594, 595, 672, 673, 675, 676, 677, 701, 705, 723, 726, 729, 730, 746, 747, 749, 815, 816, 820, 839, 842, 843, 845, 853, 855, 859, 861, 878, 880, 881, 883, 903, 904, 908, 917, 920, 921, 924, 938, 941, 942, 944, 947, 986, 987, 989, 990, 991, 994, 996, 1004, 1005, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1041, 1042, 1045, 1085], "default": [0, 5, 19, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 139, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 294, 296, 298, 300, 301, 302, 303, 304, 307, 345, 348, 353, 355, 361, 362, 365, 370, 373, 374, 375, 376, 377, 378, 379, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 684, 685, 687, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 726, 728, 729, 730, 734, 737, 739, 740, 746, 747, 749, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 793, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 969, 970, 974, 978, 979, 980, 981, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1097, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "torch": [0, 5, 12, 19, 118, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 199, 200, 272, 315, 316, 333, 336, 355, 375, 376, 903, 917, 920, 944, 947, 1085], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 119, 123, 124, 130, 131, 132, 135, 140, 152, 1085], "mxnet": [0, 5, 15, 20, 130, 131, 132, 135, 140, 1085], "either": [0, 5, 12, 18, 19, 21, 40, 41, 75, 76, 85, 86, 120, 121, 123, 125, 126, 129, 130, 131, 135, 137, 138, 152, 202, 219, 222, 388, 404, 407, 424, 427, 529, 530, 531, 532, 533, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 621, 624, 631, 634, 636, 639, 661, 665, 672, 693, 719, 723, 724, 815, 839, 842, 964, 965, 966, 967, 1041, 1058, 1061, 1066, 1069, 1107, 1118, 1119, 1120], "doesn": [0, 5, 18, 21, 121, 123, 130, 135, 152], "matter": [0, 5, 14, 121], "been": [0, 5, 19, 119, 120, 123, 125, 126, 129, 130, 131, 133, 135, 151, 152, 355, 361, 672, 694, 695, 696, 992, 993], "ivy_np": [0, 5, 123], "us": [0, 5, 12, 15, 16, 17, 19, 20, 54, 55, 56, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 99, 100, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 151, 152, 163, 164, 166, 168, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 201, 272, 309, 310, 313, 355, 369, 373, 376, 377, 378, 379, 383, 385, 387, 388, 409, 412, 434, 437, 449, 451, 459, 462, 474, 477, 519, 522, 544, 547, 601, 604, 606, 609, 646, 649, 672, 700, 707, 708, 723, 729, 730, 731, 732, 739, 740, 757, 759, 762, 764, 766, 780, 782, 784, 786, 798, 804, 810, 811, 813, 814, 815, 824, 826, 827, 829, 843, 845, 887, 888, 891, 903, 917, 920, 921, 924, 929, 932, 938, 939, 940, 941, 942, 952, 955, 964, 965, 966, 967, 968, 969, 971, 977, 978, 979, 981, 986, 987, 988, 989, 990, 991, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1041, 1042, 1045, 1074, 1075, 1078, 1085, 1107, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 119, 121, 123, 125, 128, 132, 139], "call": [0, 6, 12, 15, 21, 72, 77, 78, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 355, 378, 672, 728, 734, 752, 757, 768, 769, 968, 969, 974, 978, 979, 1107, 1118, 1119, 1120, 1123, 1127], "nativ": [0, 6, 29, 31, 32, 33, 34, 35, 75, 76, 123, 124, 130, 132, 137, 138, 202, 241, 242, 244, 272, 277, 278, 299, 303, 355, 358, 359, 360, 361, 362, 365, 373, 384, 387, 672, 717, 719, 722, 745, 1096, 1097], "native_arrai": [0, 6, 12, 34, 35, 40, 41, 42, 43, 79, 80, 85, 86, 87, 88, 123, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 202, 236, 239, 267, 271, 272, 294, 297, 304, 307, 310, 313, 333, 336, 355, 372, 388, 389, 392, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 499, 502, 504, 507, 519, 522, 544, 547, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 666, 672, 673, 674, 675, 676, 677, 681, 689, 690, 697, 700, 701, 704, 722, 744, 746, 747, 749, 750, 751, 757, 759, 762, 775, 778, 798, 801, 804, 805, 808, 814, 815, 821, 823, 824, 826, 827, 829, 872, 874, 887, 888, 891, 898, 901, 903, 904, 907, 917, 920, 921, 924, 929, 932, 938, 941, 943, 944, 947, 952, 955, 992, 993, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1019, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1078], "1": [0, 6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 121, 123, 124, 125, 129, 132, 133, 134, 135, 137, 138, 139, 140, 152, 163, 164, 165, 166, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 202, 203, 204, 205, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 267, 271, 272, 279, 282, 294, 295, 296, 297, 298, 304, 307, 310, 313, 333, 336, 355, 361, 362, 365, 368, 371, 372, 379, 383, 388, 389, 390, 391, 392, 394, 397, 399, 402, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 434, 437, 439, 442, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 494, 497, 499, 500, 502, 504, 505, 506, 507, 514, 517, 519, 522, 539, 542, 544, 547, 549, 552, 554, 557, 559, 562, 564, 567, 594, 595, 601, 604, 606, 609, 616, 619, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 680, 681, 689, 690, 697, 700, 701, 702, 703, 704, 705, 720, 722, 726, 729, 730, 737, 740, 744, 746, 747, 748, 749, 750, 751, 755, 757, 759, 760, 761, 762, 763, 775, 777, 778, 779, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 836, 838, 847, 849, 853, 855, 863, 865, 866, 868, 872, 874, 875, 877, 878, 879, 880, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 925, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 951, 952, 955, 968, 971, 980, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1049, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 132, 133, 135, 137, 138, 140, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 721, 722, 726, 729, 730, 731, 732, 733, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 767, 771, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 978, 979, 980, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118], "ndarrai": [0, 6, 34, 35, 119, 128, 130, 131, 132, 137, 202, 206, 207, 208, 241, 244, 672, 746, 750], "Or": [0, 6, 138], "jaxlib": [0, 6, 18, 119, 130, 131, 137], "xla_extens": [0, 6, 119, 130, 131, 137], "devicearrai": [0, 6, 137], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 129, 132, 133, 138, 139, 140, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 279, 281, 282, 283, 284, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 310, 312, 314, 317, 319, 321, 323, 325, 326, 327, 328, 330, 332, 333, 335, 336, 337, 338, 340, 342, 344, 354, 355, 361, 362, 365, 369, 370, 373, 378, 385, 387, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 437, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 674, 675, 676, 677, 680, 681, 685, 686, 690, 693, 697, 699, 701, 703, 705, 709, 710, 717, 719, 720, 722, 723, 733, 735, 737, 738, 746, 747, 749, 753, 754, 755, 757, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 797, 815, 816, 817, 818, 819, 820, 839, 841, 843, 844, 845, 866, 868, 881, 882, 883, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 943, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 964, 965, 966, 967, 968, 969, 970, 974, 978, 979, 980, 981, 987, 989, 991, 992, 993, 998, 999, 1001, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1097, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 126], "unset": [0, 12, 126, 135, 137], "adjust": [0, 12, 1041, 1062, 1065, 1070, 1073], "dict": [0, 12, 29, 30, 31, 32, 33, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 124, 129, 133, 138, 139, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 355, 361, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 678, 694, 695, 696, 701, 703, 705, 746, 747, 749, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 968, 970, 971, 974, 977, 980, 981, 984, 985, 987, 989, 994, 996, 1015, 1016, 1018, 1075, 1077, 1079, 1080, 1082, 1084], "previous": [0, 12, 18, 21, 123, 125, 135, 672, 683], "otherwis": [0, 12, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 44, 45, 50, 51, 68, 69, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 119, 123, 128, 129, 130, 131, 135, 137, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 202, 203, 204, 272, 279, 282, 294, 295, 296, 297, 298, 300, 301, 302, 303, 323, 326, 333, 336, 355, 361, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 682, 701, 703, 705, 746, 747, 749, 752, 757, 775, 776, 777, 778, 779, 793, 815, 816, 817, 818, 819, 820, 824, 826, 878, 880, 881, 883, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 964, 965, 966, 968, 981, 987, 989, 991, 1004, 1005, 1006, 1008, 1015, 1016, 1018, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "implement": [0, 12, 20, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 272, 279, 282, 340, 343, 355, 379, 383, 388, 389, 392, 394, 397, 399, 402, 409, 412, 414, 417, 419, 422, 424, 427, 469, 472, 474, 477, 494, 497, 499, 502, 549, 552, 554, 557, 559, 562, 564, 567, 596, 599, 616, 619, 621, 624, 636, 639, 641, 644, 661, 665, 666, 815, 830, 832, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1085], "wa": [0, 12, 15, 68, 69, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 121, 135, 137, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 701, 703, 705, 746, 747, 749, 752, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 968, 981, 987, 989, 991, 1015, 1016, 1018, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "last": [0, 12, 16, 19, 52, 53, 68, 69, 75, 76, 97, 98, 113, 114, 121, 123, 126, 133, 152, 163, 184, 187, 355, 361, 757, 797, 798, 812, 815, 821, 823, 827, 829, 843, 845, 875, 877, 878, 880, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 921, 924, 938, 941, 943, 948, 951, 1030, 1031, 1034, 1036, 1039, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1117], "henc": [0, 12, 123, 129, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "here": [0, 12, 18, 19, 20, 118, 119, 121, 123, 124, 129, 135, 136, 137, 138, 139, 140, 151, 152], "tensor": [0, 12, 14, 75, 76, 118, 119, 124, 125, 126, 128, 130, 131, 132, 135, 137, 138, 139, 140, 152, 202, 230, 231, 233, 234, 272, 304, 307, 388, 434, 437, 594, 595, 672, 726, 729, 730, 798, 810, 812, 815, 872, 874, 903, 917, 920, 934, 937, 943, 992, 993, 1004, 1007, 1085, 1107, 1115, 1117], "howev": [0, 12, 15, 18, 20, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 139, 140, 152], "befor": [0, 12, 18, 19, 20, 75, 76, 120, 123, 128, 130, 131, 132, 135, 138, 152, 355, 378, 388, 667, 671, 798, 813, 814, 964, 965, 966, 968, 980, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1058, 1061, 1066, 1069], "becom": [0, 12, 14, 16, 19, 121, 129, 135, 140, 152, 903, 904, 907], "swap": [0, 12, 903, 952, 955], "python": [0, 12, 13, 14, 15, 18, 19, 21, 123, 133, 135, 137, 138, 152, 202, 203, 204, 355, 373, 387, 388, 621, 624, 1085, 1091], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 122, 124, 125, 126, 127, 128, 131, 134, 137, 140, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1133], "op": [0, 12, 118, 135, 152], "eagertensor": [0, 12], "def": [1, 20, 118, 119, 121, 123, 124, 125, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 273, 274, 275, 276, 356, 758, 1085, 1099, 1102, 1105], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1089, 1090, 1091, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1133], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 31, 33, 75, 76, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 140, 272, 315, 316, 322, 354, 355, 369, 371, 385, 672, 714, 717, 718, 724, 745, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 796, 1085, 1091, 1096, 1097, 1123, 1124, 1125, 1126, 1127, 1128], "ml": [13, 15, 16, 17, 134, 135, 136, 138, 139, 140, 151, 1085, 1091], "explos": [13, 15, 1085], "A": [13, 14, 15, 16, 21, 34, 35, 68, 69, 72, 75, 76, 77, 78, 99, 100, 113, 114, 117, 123, 125, 129, 130, 131, 135, 138, 152, 202, 216, 217, 241, 242, 244, 355, 378, 388, 611, 614, 672, 708, 744, 815, 853, 855, 862, 863, 865, 866, 868, 903, 904, 906, 908, 943, 948, 951, 968, 969, 971, 973, 975, 976, 977, 978, 979, 982, 983, 984, 985, 1041, 1042, 1045, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1129, 1130], "huge": [13, 15, 138, 1085], "number": [13, 14, 18, 23, 26, 27, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 99, 100, 107, 108, 113, 114, 121, 123, 129, 131, 132, 135, 138, 140, 199, 200, 201, 202, 203, 204, 206, 208, 216, 217, 230, 231, 233, 234, 236, 239, 241, 244, 272, 284, 287, 303, 309, 310, 313, 317, 320, 323, 326, 328, 331, 333, 336, 338, 340, 343, 355, 370, 371, 372, 388, 404, 407, 424, 427, 464, 467, 504, 507, 509, 512, 594, 596, 599, 616, 619, 621, 624, 626, 629, 631, 634, 667, 671, 672, 673, 676, 699, 708, 710, 725, 751, 756, 798, 813, 815, 827, 829, 830, 832, 847, 849, 862, 866, 868, 878, 880, 903, 904, 905, 906, 907, 908, 913, 916, 925, 928, 929, 932, 938, 939, 940, 941, 942, 943, 948, 951, 956, 959, 960, 963, 964, 965, 966, 967, 992, 993, 1002, 1004, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118], "tool": [13, 16, 19, 136, 140, 151, 152, 1085], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 151, 152, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 284, 287, 289, 292, 310, 313, 355, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 694, 695, 696, 698, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 775, 776, 777, 778, 779, 793, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "explod": [13, 14, 1085], "onto": [13, 14, 968, 974, 980, 1085], "scene": [13, 14, 117, 134, 136, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 1085], "b": [13, 16, 17, 23, 26, 27, 72, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 121, 125, 126, 129, 134, 135, 136, 138, 139, 140, 150, 194, 195, 197, 202, 267, 271, 272, 294, 296, 297, 298, 304, 307, 333, 336, 388, 389, 391, 392, 393, 404, 406, 407, 408, 409, 412, 414, 416, 417, 418, 424, 426, 427, 428, 434, 437, 449, 451, 452, 453, 459, 462, 464, 466, 467, 469, 471, 472, 473, 474, 477, 499, 501, 502, 504, 506, 507, 519, 522, 544, 547, 594, 595, 601, 604, 606, 609, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 649, 651, 654, 661, 662, 664, 665, 666, 672, 673, 675, 676, 677, 680, 681, 689, 690, 697, 700, 701, 703, 704, 705, 746, 747, 749, 750, 751, 757, 759, 761, 762, 763, 775, 777, 778, 779, 798, 801, 804, 805, 807, 808, 809, 814, 815, 816, 818, 819, 820, 821, 823, 824, 826, 827, 829, 853, 855, 863, 865, 872, 874, 884, 886, 887, 888, 890, 891, 892, 893, 895, 897, 898, 900, 902, 903, 904, 906, 907, 908, 917, 920, 921, 924, 929, 931, 932, 933, 938, 940, 941, 942, 944, 946, 947, 948, 951, 952, 955, 968, 971, 984, 985, 986, 987, 989, 990, 991, 992, 994, 996, 997, 998, 1000, 1004, 1006, 1007, 1008, 1009, 1015, 1016, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1084, 1085, 1091], "why": [13, 15, 19, 119, 129, 132, 137, 1085], "unifi": [13, 15, 75, 76, 128, 135, 152, 355, 378, 1085], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 34, 35, 40, 41, 50, 51, 72, 73, 74, 75, 76, 77, 78, 85, 86, 95, 96, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 184, 186, 188, 194, 195, 196, 197, 199, 200, 202, 236, 239, 254, 256, 258, 259, 261, 263, 272, 289, 292, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 609, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 683, 717, 726, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 836, 838, 839, 842, 847, 849, 853, 855, 856, 858, 859, 861, 863, 865, 866, 868, 872, 874, 875, 877, 878, 880, 881, 883, 903, 934, 937, 992, 1003, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1085], "them": [13, 14, 15, 16, 123, 126, 128, 129, 135, 137, 138, 139, 152, 1085], "c": [13, 15, 16, 17, 44, 45, 85, 86, 89, 90, 103, 104, 117, 121, 125, 129, 134, 135, 136, 138, 152, 272, 310, 313, 388, 606, 609, 631, 633, 634, 672, 680, 681, 689, 751, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 804, 903, 948, 951, 968, 971, 984, 985, 994, 996, 1004, 1007, 1041, 1042, 1045, 1062, 1065, 1070, 1073, 1085, 1091], "standard": [13, 56, 57, 101, 102, 117, 118, 119, 120, 122, 123, 128, 132, 152, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 544, 547, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 815, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 986, 987, 988, 989, 990, 991, 992, 997, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1062, 1065, 1070, 1073, 1074, 1075, 1078, 1085, 1091, 1121, 1122], "re": [13, 14, 15, 17, 18, 19, 20, 21, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 140, 152, 355, 378, 672, 694, 815, 872, 874, 903, 938, 941, 1004, 1008, 1085], "collabor": [13, 14, 15, 1085], "consortium": [13, 15, 1085, 1091], "data": [13, 15, 23, 26, 27, 28, 34, 35, 37, 40, 41, 44, 45, 50, 51, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 82, 85, 86, 89, 90, 95, 96, 99, 100, 107, 108, 113, 114, 117, 118, 119, 120, 125, 127, 129, 131, 132, 137, 194, 195, 196, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 277, 278, 279, 282, 289, 292, 294, 295, 296, 297, 298, 299, 304, 307, 309, 310, 313, 315, 316, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 345, 349, 354, 355, 358, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 680, 681, 719, 720, 722, 741, 757, 775, 776, 777, 778, 779, 796, 798, 811, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 863, 865, 866, 868, 872, 874, 875, 877, 878, 880, 881, 883, 903, 917, 920, 921, 924, 925, 928, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 992, 1003, 1004, 1005, 1006, 1007, 1016, 1017, 1018, 1030, 1031, 1034, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1091, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118], "api": [13, 14, 18, 19, 117, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 134, 136, 138, 152, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 544, 547, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 815, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078, 1085, 1091], "open": [14, 15, 16, 17, 18, 21, 103, 104, 120, 151, 202, 203, 204, 992, 994, 995, 996, 998, 1000, 1085], "project": [14, 15, 16, 18, 19, 21, 118, 123, 126, 137, 139, 151, 152, 992, 993, 997, 1123, 1124, 1125, 1126, 1128], "grown": 14, "consider": [14, 119, 121], "recent": [14, 15, 18, 19, 123], "year": [14, 16, 152, 1085], "especi": [14, 18], "deep": [14, 17, 19, 20, 75, 76, 129, 134, 138, 1085], "learn": [14, 15, 18, 20, 117, 125, 134, 140, 151, 388, 514, 517, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 964, 965, 966, 967, 1085, 1123, 1124, 1125, 1126, 1127, 1128], "can": [14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 81, 82, 103, 104, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 151, 152, 202, 206, 207, 208, 241, 244, 272, 294, 295, 296, 297, 298, 355, 376, 377, 378, 815, 836, 838, 903, 934, 937, 992, 994, 995, 996, 1085, 1091], "seen": [14, 15, 121, 123, 137, 138], "rapidli": 14, "increas": [14, 903, 913, 916, 960, 963, 968, 980], "github": [14, 19, 20, 120, 123], "repo": [14, 15, 16, 18, 19, 122, 135, 137, 138, 139, 140, 151, 1085, 1091], "contain": [14, 18, 19, 20, 21, 23, 26, 27, 29, 32, 33, 34, 35, 40, 41, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 130, 132, 134, 135, 136, 139, 140, 152, 163, 164, 169, 174, 177, 179, 182, 184, 189, 192, 194, 196, 202, 203, 204, 206, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 241, 246, 247, 249, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 271, 272, 279, 284, 289, 294, 297, 304, 307, 310, 313, 317, 323, 326, 328, 333, 336, 340, 355, 362, 368, 372, 379, 388, 389, 390, 392, 394, 395, 397, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 494, 495, 497, 499, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 658, 660, 661, 663, 665, 666, 667, 669, 671, 672, 673, 676, 678, 681, 684, 685, 687, 689, 690, 697, 700, 701, 704, 709, 712, 721, 733, 744, 746, 750, 751, 753, 757, 759, 762, 764, 768, 771, 775, 778, 780, 784, 788, 798, 801, 804, 805, 808, 814, 815, 816, 817, 819, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 887, 888, 889, 891, 893, 894, 896, 898, 899, 901, 903, 904, 905, 907, 909, 913, 917, 920, 921, 924, 925, 928, 929, 932, 934, 938, 941, 943, 944, 947, 948, 952, 955, 956, 960, 964, 965, 966, 967, 968, 981, 984, 986, 987, 990, 992, 993, 994, 997, 998, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1017, 1019, 1020, 1025, 1029, 1030, 1031, 1034, 1036, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1078, 1080, 1081, 1083, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "term": [14, 19, 129, 798, 812, 1107, 1117], "time": [14, 15, 16, 18, 19, 20, 62, 63, 107, 108, 119, 123, 125, 129, 130, 135, 138, 140, 152, 757, 764, 766, 780, 782, 798, 812, 903, 956, 959, 964, 965, 966, 967, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1107, 1118, 1119, 1120], "These": [14, 15, 16, 19, 119, 120, 121, 123, 124, 125, 129, 130, 132, 135, 136, 138, 139, 140, 152, 815, 830, 832, 1085, 1091], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 40, 41, 42, 43, 54, 55, 72, 75, 76, 77, 78, 85, 86, 87, 88, 99, 100, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 153, 161, 202, 203, 204, 355, 368, 372, 374, 378, 388, 469, 470, 471, 472, 473, 579, 582, 584, 587, 626, 629, 636, 637, 638, 639, 640, 661, 662, 663, 664, 665, 672, 673, 674, 675, 676, 677, 680, 681, 682, 706, 709, 713, 714, 718, 725, 727, 733, 741, 753, 757, 797, 798, 811, 815, 821, 823, 839, 842, 843, 845, 847, 849, 856, 858, 866, 868, 869, 871, 878, 880, 903, 904, 905, 906, 907, 908, 921, 924, 938, 939, 940, 941, 942, 968, 970, 974, 980, 992, 997, 998, 1000, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1085, 1129, 1130], "written": [14, 18, 118, 119, 120, 123, 124, 128, 132, 135, 137, 140, 152], "mani": [14, 15, 16, 18, 19, 20, 75, 76, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 152, 903, 943], "differ": [14, 15, 16, 18, 19, 40, 41, 72, 75, 76, 77, 78, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 152, 272, 310, 313, 388, 404, 407, 596, 599, 656, 658, 660, 798, 811, 903, 948, 951, 1041, 1058, 1061, 1066, 1069, 1085], "while": [14, 15, 18, 19, 72, 75, 76, 77, 78, 121, 123, 126, 132, 133, 139, 140, 152, 388, 579, 582, 584, 587, 1009, 1010, 1014, 1041, 1050, 1053], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 294, 295, 296, 297, 298, 310, 313, 323, 326, 333, 336, 355, 362, 363, 364, 366, 373, 378, 379, 380, 381, 382, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 699, 700, 701, 702, 703, 705, 717, 728, 734, 746, 747, 748, 749, 757, 759, 760, 761, 763, 764, 766, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 796, 797, 798, 801, 805, 806, 807, 808, 809, 811, 814, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 843, 845, 862, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 917, 920, 921, 924, 929, 930, 931, 933, 934, 937, 938, 939, 940, 941, 942, 944, 945, 946, 948, 951, 968, 974, 980, 981, 986, 987, 988, 989, 990, 991, 994, 996, 1004, 1005, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1041, 1046, 1049, 1050, 1053, 1062, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1091, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128], "wonder": [14, 16, 137], "thing": [14, 15, 16, 18, 19, 20, 123, 126, 137, 138], "research": [14, 151], "develop": [14, 15, 16, 17, 18, 19, 20, 151, 152, 1085], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 294, 295, 296, 297, 298, 323, 326, 333, 336, 362, 363, 364, 366, 379, 380, 381, 382, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 700, 701, 702, 703, 705, 717, 746, 747, 748, 749, 757, 759, 760, 761, 763, 764, 766, 775, 776, 777, 779, 798, 801, 805, 806, 807, 808, 809, 811, 814, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 917, 920, 921, 924, 929, 930, 931, 933, 938, 939, 940, 941, 942, 944, 945, 946, 964, 965, 966, 967, 968, 969, 970, 978, 979, 980, 986, 987, 988, 989, 990, 991, 994, 996, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1107, 1117], "consid": [14, 15, 75, 76, 118, 125, 136, 137, 138, 388, 579, 582, 584, 587, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "speed": [14, 123], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 40, 41, 72, 75, 76, 77, 78, 89, 90, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 150, 152, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 355, 379, 383, 388, 459, 462, 621, 622, 651, 654, 757, 759, 761, 762, 763, 797, 798, 804, 805, 808, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1085, 1091], "significantli": 14, "hinder": [14, 119], "librari": [14, 15, 16, 23, 26, 27, 124, 135, 140, 150, 152, 355, 379, 383, 388, 499, 502, 579, 582, 584, 587, 815, 830, 832, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1085], "outdat": 14, "month": 14, "rigor": [14, 123], "maintain": [14, 19, 1030, 1031, 1034, 1036, 1039], "against": [14, 75, 76, 123, 152, 272, 284, 287, 815, 839, 842, 843, 845, 847, 849, 856, 858, 1004, 1005], "newest": 14, "version": [14, 15, 16, 18, 120, 124, 130, 135, 137, 815, 830, 832, 1085], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 44, 45, 89, 90, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 202, 203, 204, 236, 239, 388, 389, 392, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 649, 661, 665, 666, 667, 671, 757, 775, 776, 777, 778, 779, 796, 815, 866, 868, 875, 877, 903, 904, 907, 948, 951, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1054, 1057, 1066, 1069, 1096, 1097], "softwar": [14, 15, 18, 19], "pipelin": [14, 128, 140], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 34, 35, 54, 55, 68, 69, 72, 75, 76, 77, 78, 99, 100, 113, 114, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 152, 202, 224, 225, 226, 228, 236, 239, 388, 424, 427, 494, 497, 559, 562, 596, 599, 616, 619, 672, 713, 717, 726, 757, 797, 815, 830, 832, 847, 849, 856, 858, 859, 861, 866, 868, 869, 871, 875, 877, 878, 880, 903, 904, 905, 906, 907, 908, 913, 916, 917, 920, 925, 928, 948, 951, 960, 963, 968, 969, 979, 992, 993, 1004, 1007, 1041, 1062, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 140], "signific": [14, 15, 152], "bottleneck": 14, "As": [14, 19, 70, 71, 115, 116, 119, 123, 124, 125, 128, 129, 130, 131, 132, 135, 137, 138, 139, 152, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 42, 43, 56, 57, 75, 76, 81, 82, 87, 88, 101, 102, 117, 118, 120, 121, 123, 127, 129, 130, 132, 134, 137, 140, 151, 202, 210, 219, 222, 224, 225, 228, 246, 247, 249, 252, 264, 266, 267, 271, 272, 349, 388, 429, 432, 559, 562, 611, 614, 672, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 729, 730, 731, 732, 739, 740, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 903, 917, 920, 934, 937, 948, 951, 968, 973, 984, 985, 986, 987, 988, 989, 990, 991, 1085, 1096, 1097, 1107, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "futur": [14, 16, 18, 19, 137, 152, 815, 830, 832], "avail": [14, 18, 19, 75, 76, 120, 124, 131, 152, 355, 361, 369, 370, 371, 385, 672, 695], "specif": [14, 20, 75, 76, 119, 123, 124, 125, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 151, 152, 272, 340, 343, 355, 376, 379, 383, 388, 579, 582, 584, 587, 672, 694, 695, 696, 724, 815, 830, 832, 872, 874, 903, 948, 951, 964, 965, 966, 967, 992, 993, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1085, 1088, 1090, 1091, 1119, 1120], "quickli": [14, 16, 18, 19, 138, 139], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 117, 123, 124, 126, 129, 132, 134, 152, 1107, 1118, 1119, 1120], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 70, 71, 115, 116, 121, 123, 124, 129, 133, 134, 137, 138, 139, 140, 152, 1085], "desir": [14, 36, 37, 75, 76, 81, 82, 124, 272, 279, 282, 294, 295, 296, 297, 298, 355, 379, 383, 672, 713, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118], "provid": [14, 18, 19, 68, 69, 75, 76, 113, 114, 119, 120, 121, 123, 125, 128, 129, 130, 131, 132, 135, 139, 151, 152, 199, 200, 202, 236, 239, 272, 300, 301, 302, 303, 322, 340, 343, 354, 355, 361, 672, 693, 726, 730, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 815, 878, 880, 903, 921, 924, 948, 951, 1004, 1005, 1041, 1062, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1123, 1124, 1125, 1126, 1127, 1128], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 42, 43, 54, 55, 68, 69, 70, 71, 75, 76, 87, 88, 99, 100, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 151, 152, 153, 161, 199, 200, 202, 203, 204, 254, 256, 258, 259, 261, 263, 355, 368, 374, 672, 673, 676, 680, 681, 706, 727, 746, 747, 748, 749, 750, 798, 812, 815, 863, 865, 872, 874, 881, 883, 903, 921, 924, 938, 939, 940, 941, 942, 964, 965, 966, 967, 968, 969, 970, 979, 980, 981, 992, 993, 998, 1000, 1074, 1079, 1085, 1088, 1090], "modern": [14, 15], "simpl": [14, 18, 19, 118, 120, 121, 123, 125, 128, 129, 130, 131, 132, 135, 137, 139, 140, 152, 672, 697], "scalabl": [14, 135], "manner": [14, 29, 32, 33, 75, 76, 118, 120, 123, 131, 138, 151, 152, 968, 980], "must": [14, 16, 18, 19, 20, 23, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 125, 128, 129, 130, 131, 135, 139, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 284, 287, 289, 292, 355, 378, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 694, 695, 696, 698, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1123, 1127], "determin": [14, 23, 26, 27, 40, 41, 50, 51, 68, 69, 72, 75, 76, 77, 78, 85, 86, 95, 96, 113, 114, 120, 125, 129, 130, 131, 194, 195, 196, 197, 272, 294, 297, 299, 309, 322, 323, 326, 328, 331, 333, 336, 338, 354, 355, 369, 370, 371, 385, 388, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 499, 501, 502, 503, 509, 510, 511, 513, 524, 527, 529, 532, 534, 537, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 589, 592, 596, 597, 598, 599, 600, 616, 617, 618, 619, 620, 621, 622, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 672, 673, 676, 680, 681, 712, 714, 718, 719, 720, 721, 722, 741, 756, 757, 775, 778, 798, 813, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 836, 838, 839, 842, 847, 849, 853, 855, 856, 858, 862, 863, 865, 875, 877, 878, 880, 881, 883, 964, 965, 966, 967, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "exactli": [14, 16, 121, 129, 131, 1085, 1091], "common": [14, 20, 75, 76, 121, 125, 127, 129, 131, 133, 152], "ground": [14, 123], "li": 14, "between": [14, 52, 53, 72, 75, 76, 77, 78, 97, 98, 119, 121, 123, 125, 128, 129, 134, 136, 137, 138, 140, 151, 202, 203, 204, 272, 310, 313, 388, 424, 427, 616, 619, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 917, 920, 948, 951, 968, 974, 992, 994, 995, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1085, 1123, 1125], "find": [14, 18, 19, 75, 76, 123, 135, 138, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1085], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 120, 121, 122, 123, 125, 126, 127, 132, 135, 152, 672, 693, 1123, 1127], "essenti": [14, 15, 20, 121, 125, 131], "order": [14, 18, 19, 21, 72, 75, 76, 77, 78, 119, 120, 121, 124, 126, 128, 129, 130, 131, 137, 138, 140, 152, 388, 424, 427, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 815, 830, 832, 843, 845, 866, 868, 869, 871, 881, 883, 903, 921, 924, 964, 965, 966, 1004, 1007, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1129, 1130], "design": [14, 15, 117, 132, 135, 137, 152], "univers": 14, "abstract": [14, 129, 139, 152, 355, 357, 1123, 1127], "In": [14, 16, 18, 19, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 355, 373, 379, 383, 384, 387, 388, 404, 407, 596, 599, 621, 624, 672, 678, 717, 903, 934, 937, 992, 998, 1000, 1085], "search": [14, 18, 29, 32, 33, 61, 75, 76, 106, 118, 121, 123, 1005, 1006, 1007, 1008], "languag": [14, 16, 135], "first": [14, 15, 18, 19, 21, 23, 26, 27, 40, 41, 62, 63, 72, 77, 78, 85, 86, 107, 108, 119, 121, 123, 125, 128, 129, 135, 137, 138, 140, 199, 200, 202, 230, 231, 233, 234, 272, 339, 349, 355, 361, 388, 404, 405, 406, 407, 408, 424, 425, 426, 428, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 484, 485, 487, 509, 512, 514, 515, 519, 520, 522, 539, 540, 542, 544, 545, 547, 569, 570, 572, 574, 575, 577, 584, 585, 587, 589, 590, 592, 596, 597, 599, 606, 607, 609, 616, 617, 619, 656, 657, 658, 659, 660, 672, 680, 757, 768, 769, 815, 821, 823, 827, 829, 830, 832, 839, 842, 853, 855, 859, 861, 866, 868, 872, 874, 878, 880, 903, 909, 912, 938, 941, 948, 951, 952, 955, 964, 965, 966, 967, 968, 969, 978, 979, 992, 1003, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1107, 1118, 1119, 1120, 1123, 1127], "see": [14, 17, 18, 19, 20, 23, 26, 27, 40, 41, 68, 69, 72, 77, 78, 85, 86, 113, 114, 119, 122, 125, 129, 131, 137, 138, 151, 152, 202, 203, 204, 219, 222, 230, 231, 233, 234, 272, 289, 292, 340, 343, 388, 404, 405, 406, 407, 408, 424, 425, 426, 428, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 479, 480, 481, 482, 483, 484, 485, 486, 488, 499, 502, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 539, 540, 541, 542, 543, 544, 545, 546, 548, 569, 570, 571, 572, 573, 574, 575, 576, 578, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 606, 607, 608, 609, 610, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 656, 657, 658, 659, 660, 815, 847, 849, 856, 858, 863, 865, 878, 880, 881, 883, 1004, 1006, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "clear": [14, 15, 16, 19, 20, 121, 130, 131, 135, 137, 355, 360], "front": [14, 134, 135, 138, 1085, 1091], "runner": 14, "look": [14, 18, 19, 21, 118, 119, 121, 123, 124, 125, 126, 129, 130, 131, 135, 137, 139, 140, 1085], "littl": [14, 137], "deeper": [14, 19, 117, 134, 968, 979, 980], "follow": [14, 15, 18, 19, 20, 21, 75, 76, 118, 120, 121, 123, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 152, 272, 317, 320, 355, 378, 388, 621, 624, 672, 715, 716, 717, 739, 740, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 813, 814, 815, 859, 861, 881, 883, 968, 974, 980, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1085, 1107, 1117, 1123, 1127], "same": [14, 16, 18, 19, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 75, 76, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 107, 108, 118, 119, 121, 123, 124, 125, 128, 129, 131, 132, 133, 135, 137, 139, 140, 202, 203, 204, 211, 212, 214, 225, 226, 228, 236, 239, 249, 250, 252, 254, 256, 258, 259, 261, 263, 267, 269, 271, 272, 279, 282, 284, 287, 289, 292, 355, 378, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 404, 407, 409, 410, 419, 420, 439, 440, 441, 442, 443, 449, 450, 451, 453, 464, 465, 466, 467, 468, 504, 505, 506, 507, 508, 596, 599, 601, 602, 603, 605, 611, 612, 613, 615, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 667, 668, 669, 670, 671, 672, 698, 700, 701, 702, 703, 704, 705, 726, 729, 730, 757, 775, 776, 777, 778, 779, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 850, 852, 856, 858, 859, 861, 863, 865, 866, 868, 875, 877, 878, 880, 903, 909, 912, 921, 924, 925, 928, 938, 939, 940, 941, 942, 944, 947, 948, 951, 964, 965, 966, 968, 981, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1066, 1069, 1070, 1073, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "core": [14, 18, 20, 131, 135, 140, 355, 370, 1085], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 48, 49, 72, 75, 76, 77, 78, 93, 94, 120, 121, 123, 124, 125, 128, 129, 131, 132, 138, 139, 202, 230, 231, 233, 234, 272, 340, 343, 388, 404, 407, 454, 457, 459, 462, 519, 522, 601, 604, 606, 609, 621, 624, 651, 654, 672, 682, 694, 695, 696, 741, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811], "expos": [14, 135, 139, 672, 688], "almost": [14, 19, 129, 136, 138], "ident": [14, 16, 75, 76, 124, 125, 127, 129, 137, 138, 152, 355, 368, 968, 981, 1085], "uniqu": [14, 62, 63, 107, 108, 123, 125, 129, 152, 964, 965, 966, 967, 968, 974, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029], "syntax": [14, 15, 133], "There": [14, 18, 19, 121, 124, 125, 128, 129, 130, 133, 135, 138, 152], "onli": [14, 17, 18, 19, 23, 26, 27, 75, 76, 118, 119, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 150, 152, 355, 374, 388, 579, 582, 584, 587, 815, 839, 842, 859, 861, 903, 921, 924, 968, 969, 970, 978, 979, 1004, 1005, 1006, 1041, 1050, 1053, 1085, 1123, 1124, 1125, 1126, 1127, 1128], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 152, 153, 161, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 294, 295, 296, 298, 362, 363, 364, 366, 379, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 673, 674, 675, 677, 701, 702, 703, 705, 746, 747, 748, 749, 759, 760, 761, 763, 775, 776, 777, 779, 805, 806, 807, 809, 816, 817, 818, 820, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 904, 905, 906, 908, 929, 930, 931, 933, 938, 939, 940, 942, 944, 945, 946, 968, 969, 979, 987, 988, 989, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085], "wai": [14, 15, 18, 123, 126, 132, 137, 138, 139, 140, 152], "manipul": [14, 55, 100, 118, 140, 151, 904, 907, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 941, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963], "unsurprisingli": [14, 121], "fundament": [14, 129, 135], "consist": [14, 75, 76, 128, 130, 132, 815, 830, 832, 1041, 1042, 1045, 1119, 1120], "each": [14, 15, 16, 19, 20, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 62, 63, 72, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 99, 100, 107, 108, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 151, 152, 163, 174, 177, 179, 182, 189, 192, 194, 195, 196, 197, 202, 236, 239, 272, 284, 287, 355, 378, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429, 430, 431, 432, 433, 434, 437, 439, 442, 444, 447, 449, 452, 454, 457, 459, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 484, 487, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 514, 517, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 577, 579, 581, 582, 583, 584, 587, 589, 592, 596, 599, 601, 602, 603, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 619, 621, 622, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 830, 832, 839, 842, 847, 849, 850, 852, 856, 858, 863, 865, 866, 868, 903, 913, 916, 929, 932, 938, 939, 940, 941, 942, 943, 948, 951, 956, 959, 960, 963, 968, 974, 981, 992, 993, 1004, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1041, 1042, 1045, 1085, 1091, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "veri": [14, 15, 18, 19, 118, 119, 121, 123, 125, 129, 131, 132, 136, 138, 139, 140, 152, 1085], "similar": [14, 118, 123, 129, 130, 131, 138, 152, 388, 621, 624, 798, 813, 1107, 1118], "convent": [14, 151, 815, 839, 842, 1041, 1042, 1045], "those": [14, 18, 19, 20, 54, 55, 75, 76, 99, 100, 123, 129, 135, 140, 202, 203, 204, 757, 796, 815, 859, 861, 866, 868, 903, 904, 905, 906, 907, 908], "introduc": [14, 129, 138, 903, 938, 941, 1009, 1010, 1014], "2006": 14, "layer": [14, 49, 56, 57, 94, 101, 102, 118, 120, 135, 136, 139, 799, 800, 801, 802, 803, 804, 805, 808, 810, 811, 812, 813, 814, 986, 987, 988, 989, 990, 991, 1085, 1098, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130], "therefor": [14, 19, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 135, 137, 139, 152, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 464, 467, 499, 502, 504, 507, 594, 595, 606, 609, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 827, 829, 903, 938, 941, 986, 987, 990, 1009, 1015, 1019, 1041, 1046, 1049, 1074, 1075, 1078], "present": [14, 19, 75, 76, 119, 122, 129, 130, 131, 132, 135], "itself": [14, 18, 19, 119, 124, 129, 132, 139, 151, 152, 672, 678, 968, 980], "cut": 14, "cloth": 14, "adher": [14, 15, 120, 122, 135, 140], "semant": [14, 135, 140, 388, 621, 624], "round": [14, 15, 16, 18, 19, 20, 21, 40, 41, 85, 86, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 388, 404, 407, 464, 465, 466, 467, 468, 504, 505, 506, 507, 508, 509, 512, 596, 599, 630, 646, 649, 667, 668, 669, 670, 671, 1085], "up": [14, 15, 16, 17, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 151, 152], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151], "paint": [14, 135], "pictur": [14, 135], "how": [14, 16, 17, 18, 19, 20, 21, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 151, 152, 1085, 1091, 1107, 1118, 1119, 1120], "pleas": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 1085], "check": [14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 44, 45, 75, 76, 89, 90, 123, 129, 134, 135, 137, 138, 139, 140, 151, 272, 299, 315, 316, 322, 328, 331, 338, 354, 355, 373, 387, 672, 682, 697, 709, 712, 719, 720, 721, 722, 733, 741, 753, 756, 757, 775, 776, 777, 778, 779, 815, 830, 832, 968, 969, 978, 979, 980, 1085], "out": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 151, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 304, 306, 308, 355, 379, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 689, 690, 691, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1115], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 1085], "faq": [14, 15, 16, 135, 137, 138, 139, 140, 151], "reach": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 968, 980], "discord": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 1085], "you": [14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 151, 152, 1085, 1091], "question": [14, 15, 16, 18, 19, 121, 123, 135, 137, 138, 139, 140, 151, 152, 1085], "With": [15, 16, 18, 23, 26, 27, 40, 41, 42, 43, 44, 45, 72, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 121, 123, 124, 135, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 202, 236, 239, 267, 271, 272, 294, 297, 304, 307, 310, 313, 333, 336, 345, 355, 372, 388, 389, 392, 404, 407, 408, 409, 412, 414, 417, 424, 427, 434, 437, 449, 452, 453, 459, 462, 464, 467, 469, 470, 471, 472, 473, 474, 477, 499, 502, 504, 507, 519, 522, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 661, 665, 666, 672, 673, 674, 675, 676, 677, 681, 689, 690, 697, 700, 701, 704, 705, 744, 746, 747, 748, 749, 750, 751, 757, 759, 760, 762, 775, 776, 777, 778, 779, 798, 801, 804, 805, 808, 814, 815, 816, 819, 820, 821, 823, 824, 826, 827, 829, 843, 845, 872, 874, 887, 888, 891, 892, 893, 897, 898, 901, 902, 903, 904, 907, 908, 917, 920, 921, 924, 929, 932, 938, 941, 942, 943, 944, 947, 952, 955, 968, 971, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 996, 997, 998, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1078], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 75, 76, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 135, 138, 151, 152, 202, 203, 204, 672, 728, 734, 1009, 1020, 1024, 1085], "would": [15, 18, 19, 21, 117, 119, 120, 121, 123, 126, 127, 128, 129, 132, 134, 135, 137, 139, 140, 152, 163, 184, 187, 355, 379, 383, 1085], "entir": [15, 16, 19, 68, 69, 75, 76, 113, 114, 121, 122, 123, 128, 129, 132, 137, 138, 139, 140, 152, 355, 378, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1116], "forgiven": 15, "rais": [15, 19, 68, 69, 75, 76, 113, 114, 132, 133, 135, 137, 272, 289, 292, 388, 494, 497, 616, 619, 672, 682, 707, 717, 731, 740, 752, 757, 797, 815, 839, 842, 846, 878, 880, 903, 944, 947, 948, 951, 1004, 1007, 1041, 1046, 1049, 1054, 1057, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1119, 1120, 1123, 1127], "an": [15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 32, 33, 34, 35, 40, 41, 44, 45, 50, 51, 54, 55, 62, 63, 68, 69, 70, 71, 75, 76, 85, 86, 89, 90, 99, 100, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 163, 174, 177, 179, 182, 189, 192, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 284, 287, 289, 292, 294, 297, 310, 313, 323, 326, 333, 336, 340, 343, 355, 379, 383, 388, 389, 390, 392, 394, 395, 397, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 487, 489, 490, 494, 495, 497, 499, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 649, 651, 652, 654, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 672, 683, 684, 685, 687, 689, 698, 699, 700, 713, 717, 719, 720, 721, 722, 746, 750, 751, 752, 757, 775, 776, 777, 778, 779, 793, 795, 796, 797, 798, 801, 805, 808, 814, 815, 816, 817, 819, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 846, 847, 849, 850, 852, 856, 858, 859, 861, 862, 863, 865, 866, 868, 875, 877, 878, 880, 881, 883, 903, 904, 905, 907, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 968, 974, 986, 987, 990, 992, 994, 995, 996, 1003, 1004, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1119, 1120, 1123, 1124, 1125, 1127], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 119, 124, 125, 130, 131, 132, 135, 137, 140, 152, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 1085, 1123, 1124, 1125, 1126, 1127, 1128], "other": [15, 18, 19, 23, 26, 27, 42, 43, 72, 75, 76, 77, 78, 87, 88, 118, 120, 121, 123, 124, 125, 128, 129, 132, 133, 135, 137, 139, 140, 150, 151, 152, 199, 200, 202, 203, 204, 388, 499, 502, 672, 673, 674, 675, 676, 677, 678, 757, 768, 769, 992, 998, 1000, 1009, 1020, 1024, 1041, 1062, 1065, 1070, 1073, 1085], "strong": [15, 152], "industri": 15, "back": [15, 128, 134, 135, 137, 152, 1085, 1091, 1119, 1120, 1123, 1127], "momentum": 15, "won": [15, 16, 19, 140], "ad": [15, 18, 19, 20, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 135, 139, 152, 672, 739, 740, 815, 830, 832, 903, 917, 920, 1129, 1130], "just": [15, 16, 18, 19, 120, 121, 123, 124, 125, 132, 135, 137, 138, 152, 1041, 1042, 1045, 1107, 1116], "make": [15, 16, 18, 19, 20, 118, 119, 120, 121, 122, 123, 125, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140], "problem": [15, 19, 128, 137], "even": [15, 16, 18, 19, 119, 120, 125, 130, 131, 137, 138, 139, 140, 152, 388, 616, 619, 626, 629], "wors": 15, "rather": [15, 44, 45, 75, 76, 89, 90, 118, 120, 123, 129, 140, 152, 202, 203, 204, 355, 378, 672, 719, 720, 722, 757, 775, 776, 777, 778, 779], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 125, 129], "feasibl": 15, "space": [15, 202, 203, 204, 230, 231, 233, 234, 672, 699, 757, 797], "case": [15, 18, 19, 20, 29, 32, 33, 72, 75, 76, 77, 78, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 152, 202, 236, 239, 355, 373, 384, 387, 388, 389, 392, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 459, 462, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 665, 666, 667, 671, 672, 717, 729, 730, 815, 843, 845, 903, 934, 937, 968, 971, 977, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073, 1107, 1118, 1119, 1120, 1123, 1127], "unlik": [15, 121, 129], "charger": 15, "charact": [15, 133], "encod": [15, 138, 672, 699], "instant": [15, 1085], "messag": [15, 19, 133, 135, 137, 1132, 1133], "much": [15, 19, 118, 128, 129, 132, 135, 137, 138], "doe": [15, 19, 21, 75, 76, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 132, 135, 137, 138, 152, 388, 459, 462, 672, 717, 903, 943], "mandat": [15, 123, 132], "adopt": [15, 19, 128], "continu": [15, 16, 122, 123, 133, 152], "own": [15, 16, 18, 120, 123, 133, 135, 152], "signatur": [15, 118, 119, 120, 121, 123, 129, 130, 131, 132, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 815, 827, 829, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049], "replac": [15, 19, 21, 54, 55, 75, 76, 99, 100, 121, 123, 127, 129, 130, 131, 135, 137, 140, 152, 672, 729, 730, 903, 904, 905, 906, 907, 908, 992, 993], "your": [15, 16, 17, 18, 20, 21, 118, 120, 138, 139, 152, 1085], "10": [15, 18, 21, 40, 41, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 123, 129, 135, 137, 138, 202, 224, 233, 234, 235, 388, 434, 437, 439, 442, 474, 477, 499, 502, 519, 522, 544, 547, 554, 555, 556, 557, 558, 641, 642, 643, 644, 645, 646, 649, 672, 690, 700, 728, 734, 757, 780, 781, 782, 783, 798, 804, 815, 824, 826, 827, 829, 853, 855, 872, 874, 903, 921, 924, 943, 944, 946, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 1004, 1007, 1009, 1010, 1014, 1041, 1042, 1045, 1046, 1049, 1123, 1125], "100": [15, 16, 103, 104, 123, 138, 139, 140, 152, 388, 646, 649, 994, 996, 1085], "despit": [15, 129, 131], "distinct": [15, 120, 129, 132, 134, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1085], "still": [15, 75, 76, 120, 123, 130, 137, 139, 152, 1085], "believ": [15, 19], "share": [15, 75, 76, 121, 123, 125, 126, 129, 135, 272, 349], "bring": [15, 123, 135, 136], "benefit": [15, 16, 18, 19, 128, 129, 132, 137, 138, 152], "unrel": [15, 19], "what": [15, 16, 19, 117, 119, 120, 121, 123, 127, 129, 133, 134, 135, 137, 138, 139, 140, 151, 152, 1085], "again": [15, 16, 19, 118, 121, 123, 129, 132, 138, 140, 152], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 138], "most": [15, 18, 19, 75, 76, 118, 119, 123, 125, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 152, 815, 830, 832], "technolog": 15, "sector": [15, 40, 41, 85, 86, 388, 399, 400, 401, 402, 403, 414, 415, 416, 417, 418, 429, 430, 431, 432, 433], "full": [15, 16, 19, 23, 26, 27, 72, 77, 78, 119, 120, 123, 130, 135, 152, 202, 272, 310, 313, 388, 519, 522, 544, 547, 798, 804, 815, 859, 861, 863, 865, 866, 868], "success": 15, "reason": [15, 19, 118, 121, 125, 128, 129, 130, 132, 135, 137, 388, 621, 624], "build": [15, 17, 18, 125, 134, 136, 139, 140, 152, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1085, 1107, 1118, 1119, 1120], "custom": [15, 123, 139], "comput": [15, 16, 18, 23, 26, 27, 40, 41, 52, 53, 73, 74, 75, 76, 85, 86, 97, 98, 123, 124, 125, 129, 135, 138, 152, 184, 186, 188, 355, 378, 388, 404, 407, 434, 437, 449, 452, 459, 462, 484, 487, 489, 490, 491, 492, 493, 514, 517, 519, 522, 539, 542, 544, 547, 574, 577, 579, 582, 584, 587, 589, 592, 596, 599, 601, 604, 606, 609, 672, 684, 685, 687, 690, 691, 757, 759, 762, 764, 766, 768, 769, 771, 773, 780, 782, 784, 786, 788, 790, 793, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 811, 813, 815, 816, 819, 821, 823, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 859, 861, 862, 863, 865, 866, 868, 878, 880, 881, 883, 887, 888, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 968, 974, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "thank": [15, 138], "interoper": 15, "compon": [15, 135, 757, 797], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 72, 75, 76, 77, 78, 123, 126, 130, 131, 798, 812, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1123, 1127], "pcie": 15, "interfac": [15, 140, 152], "motherboard": 15, "raid": 15, "storag": [15, 138], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 30, 31, 32, 33, 34, 35, 50, 51, 75, 76, 95, 96, 123, 125, 139, 140, 202, 206, 207, 208, 241, 244, 254, 256, 258, 259, 261, 263, 672, 678, 743, 745, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 847, 849, 850, 852, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877, 968, 970, 980], "factor": [15, 44, 45, 48, 49, 50, 51, 89, 90, 93, 94, 95, 96, 355, 376, 377, 378, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 784, 786, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 816, 817, 818, 819, 820, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1123, 1124, 1125, 1126], "sata": 15, "connect": [15, 18, 139, 140, 1107, 1117, 1118], "host": [15, 152], "bu": 15, "adapt": [15, 757, 784, 786, 1123, 1126], "devic": [15, 19, 23, 26, 27, 34, 35, 39, 42, 43, 75, 76, 79, 80, 84, 87, 88, 103, 104, 117, 118, 125, 127, 130, 137, 138, 152, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 672, 700, 701, 702, 703, 704, 705, 726, 729, 730, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1096, 1097, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "html": [15, 21, 120, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 815, 827, 829, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049], "enabl": [15, 18, 19, 72, 75, 76, 77, 78, 123, 125, 128, 129, 132, 134, 135, 136, 138, 140, 152, 757, 797], "anyon": [15, 17, 152], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 75, 76, 129, 968, 969, 978, 979], "commun": [15, 17, 19, 20, 152, 1085, 1091], "network": [15, 125, 129, 135, 139, 151, 798, 811, 1085, 1093, 1107, 1119, 1120], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 120, 121, 123, 129, 130, 132, 135, 138, 151, 152, 672, 723, 744, 1041, 1046, 1049, 1054, 1057], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 201, 272, 310, 313, 388, 404, 407, 499, 502, 596, 599, 621, 624, 646, 649], "754": [15, 201, 272, 310, 313, 388, 404, 407, 499, 502, 596, 599, 621, 624, 646, 649], "allow": [15, 123, 124, 135, 152, 202, 230, 231, 233, 234, 672, 723, 1119, 1120], "calcul": [15, 52, 53, 72, 75, 76, 77, 78, 97, 98, 120, 388, 389, 392, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 469, 472, 474, 477, 479, 482, 494, 497, 499, 502, 549, 552, 554, 557, 559, 562, 564, 567, 569, 572, 596, 599, 616, 619, 636, 639, 641, 644, 646, 649, 656, 660, 661, 665, 666, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 120, 123, 124, 127, 129, 130, 135, 152, 272, 279, 282, 388, 389, 392, 394, 397, 399, 402, 409, 412, 414, 417, 419, 422, 424, 427, 469, 472, 474, 477, 494, 497, 499, 502, 549, 552, 554, 557, 559, 562, 564, 567, 616, 619, 636, 639, 641, 644, 661, 665, 666, 815, 830, 832, 859, 861, 863, 865, 866, 868, 1004, 1008, 1030, 1031, 1034, 1036, 1039], "did": [15, 20, 140], "aris": [15, 152], "until": [15, 19, 133, 152, 1085], "substanti": [15, 19, 123, 128], "innov": 15, "growth": 15, "usag": [15, 135, 355, 378], "relev": [15, 18, 20, 121, 129, 130, 138, 1123, 1124, 1125, 1126, 1127, 1128], "area": [15, 40, 41, 85, 86, 132, 150, 388, 399, 400, 401, 402, 403, 414, 415, 416, 417, 418, 429, 430, 431, 432, 433, 1085], "necess": 15, "parti": [15, 152], "could": [15, 16, 18, 19, 121, 123, 129, 130, 132, 135, 137, 138, 139, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "easili": [15, 19, 138, 139, 140, 152, 1085], "engag": [15, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "regard": [15, 129], "effect": [15, 119, 120, 128, 129, 152, 202, 236, 239, 757, 788, 790, 1041, 1062, 1065, 1070, 1073], "2015": 15, "sinc": [15, 18, 19, 123, 152], "alongsid": 15, "machin": [15, 18, 125, 151, 272, 310, 313, 317, 320, 388, 514, 517, 815, 847, 849, 856, 858], "given": [15, 16, 18, 19, 20, 21, 42, 43, 52, 53, 54, 55, 75, 76, 87, 88, 97, 98, 99, 100, 103, 104, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 139, 140, 151, 202, 203, 204, 210, 230, 231, 233, 234, 272, 303, 355, 367, 373, 375, 376, 377, 378, 384, 387, 672, 690, 691, 701, 702, 703, 704, 705, 729, 730, 735, 755, 757, 759, 762, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 799, 800, 801, 802, 803, 804, 805, 808, 815, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 917, 920, 921, 924, 929, 932, 938, 939, 940, 941, 942, 943, 956, 959, 968, 975, 976, 992, 994, 995, 996, 997, 998, 1000, 1003, 1030, 1036, 1039, 1096, 1097], "frame": [15, 151], "less": [15, 19, 23, 26, 27, 40, 41, 75, 76, 85, 86, 119, 121, 129, 134, 135, 388, 394, 397, 399, 402, 409, 412, 424, 427, 464, 467, 543, 549, 552, 554, 557, 564, 567, 616, 619, 621, 624, 631, 634, 646, 649, 815, 847, 849, 856, 858, 881, 883, 992, 998, 1000, 1041, 1070, 1073], "matur": [15, 152], "state": [15, 119, 120, 123, 134, 135, 136, 138, 151, 272, 353, 388, 596, 599, 672, 738, 753, 754, 798, 812, 1085, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "than": [15, 19, 23, 26, 27, 44, 45, 62, 63, 75, 76, 89, 90, 107, 108, 118, 121, 123, 129, 132, 135, 138, 139, 140, 152, 202, 203, 204, 272, 310, 313, 355, 378, 388, 394, 397, 399, 402, 409, 412, 424, 427, 444, 447, 454, 457, 464, 467, 504, 507, 509, 512, 549, 552, 554, 557, 564, 567, 594, 616, 619, 621, 624, 631, 634, 646, 649, 667, 671, 672, 719, 720, 722, 757, 775, 776, 777, 778, 779, 815, 821, 823, 839, 842, 847, 849, 856, 858, 881, 883, 903, 904, 907, 921, 924, 944, 947, 992, 998, 1000, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1041, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "preced": [15, 139], "mention": [15, 18, 19, 119, 121, 125, 132], "aros": 15, "70": [15, 815, 853, 855, 1041, 1042, 1045], "80": [15, 815, 853, 855, 1041, 1042, 1045], "90": [15, 85, 86, 103, 104, 388, 459, 462, 626, 628, 629, 630, 815, 853, 855, 994, 996, 1041, 1042, 1045], "effort": [15, 17, 123, 152], "stage": [15, 17, 19, 21, 117, 133, 1085], "complet": [15, 19, 20, 75, 76, 128, 129, 137, 138, 815, 859, 861], "natur": [15, 121, 128, 129, 151, 388, 494, 497, 549, 552, 559, 562, 815, 862], "like": [15, 18, 19, 21, 44, 45, 89, 90, 117, 118, 119, 120, 121, 123, 124, 131, 132, 134, 135, 137, 138, 139, 140, 151, 152, 757, 775, 776, 777, 778, 779, 992, 998, 1000, 1085], "certainli": 15, "mission": [15, 1085], "creat": [15, 17, 18, 19, 21, 34, 35, 42, 43, 75, 76, 87, 88, 103, 104, 123, 124, 130, 131, 132, 135, 136, 139, 150, 151, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 224, 225, 226, 228, 230, 231, 233, 234, 241, 242, 244, 246, 247, 249, 250, 252, 264, 266, 267, 269, 271, 672, 700, 701, 702, 703, 704, 705, 726, 729, 730, 744, 757, 795, 992, 993, 994, 995, 996, 998, 1000, 1085, 1091, 1096, 1097, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 123, 125, 129, 135, 140, 355, 373, 387], "ourselv": 15, "lead": [15, 16, 72, 75, 76, 77, 78, 152, 815, 859, 861, 866, 868], "quansight": 15, "compani": 15, "made": [15, 19, 20, 129, 132, 135, 137], "organ": [15, 118, 125, 128, 129], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 135, 140], "sympi": 15, "rai": [15, 388, 424, 427], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 34, 35, 68, 69, 75, 76, 113, 114, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 151, 152, 202, 203, 204, 206, 207, 208, 241, 244, 672, 712, 756, 815, 881, 883, 968, 969, 992, 998, 1000, 1004, 1006, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1090, 1107, 1117, 1118, 1121, 1122], "member": [15, 19], "googl": [15, 1085], "octoml": 15, "einop": [15, 75, 76, 672, 694, 695, 696], "further": [15, 16, 19, 21, 121, 124, 128, 134, 138, 139, 1085], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 48, 49, 93, 94, 103, 104, 117, 129, 138, 672, 681, 689, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 827, 829, 853, 855, 968, 971, 984, 985, 994, 996, 1085, 1091], "shaw": 15, "co": [15, 40, 41, 85, 86, 135, 151, 388, 473, 672, 699, 1085], "intel": 15, "togeth": [15, 75, 76, 128, 129, 133, 139, 140, 152, 1129, 1130], "major": [15, 123, 124, 130, 131, 152, 1004, 1007], "involv": [15, 17, 21, 117, 130, 140, 272, 340, 343, 388, 404, 407, 596, 599, 1085, 1091], "anoth": [15, 18, 19, 75, 76, 123, 124, 125, 129, 130, 137, 140, 202, 219, 222, 272, 284, 287, 294, 297], "promis": 15, "sign": [15, 18, 40, 41, 85, 86, 136, 140, 202, 203, 204, 388, 389, 392, 404, 407, 424, 427, 454, 457, 596, 599, 621, 622, 623, 624, 625, 635, 815, 862, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1058, 1061, 1066, 1069], "pursuit": 15, "unif": [15, 17, 137, 1085, 1091], "clearli": [15, 20, 121, 123], "lot": [15, 16, 127, 137, 152], "thought": [15, 18, 19, 119], "care": [15, 19, 140], "attent": [15, 19, 128, 129, 798, 813, 814, 1107, 1118], "gone": [15, 134], "simplifi": [15, 135, 136, 137, 139], "compat": [15, 23, 26, 27, 40, 41, 68, 69, 72, 77, 78, 85, 86, 113, 114, 119, 152, 272, 289, 292, 388, 404, 405, 406, 407, 408, 424, 425, 426, 427, 428, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 606, 607, 608, 609, 610, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 656, 657, 658, 659, 660, 815, 847, 849, 856, 858, 863, 865, 872, 874, 878, 880, 881, 883, 903, 934, 937, 1004, 1006, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "excit": [15, 17, 117, 1085], "complianc": 15, "hope": [15, 152], "due": [15, 18, 23, 26, 27, 124, 129, 132, 388, 596, 599], "suit": [15, 18, 117, 122, 123, 138, 151], "some": [15, 16, 18, 19, 20, 75, 76, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 151, 152, 388, 499, 502, 757, 759, 762, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 796, 798, 810, 1085, 1107, 1115], "motiv": [15, 137], "great": [15, 16, 123, 135, 137], "convinc": 15, "celebr": 15, "encourag": [15, 151, 152, 1085, 1091], "foundat": 15, "point": [16, 19, 40, 41, 50, 51, 85, 86, 95, 96, 119, 120, 121, 123, 128, 132, 135, 137, 138, 151, 194, 195, 196, 197, 201, 202, 203, 204, 210, 216, 217, 224, 246, 247, 264, 266, 272, 279, 282, 310, 313, 328, 331, 340, 343, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 459, 462, 464, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 507, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 596, 599, 616, 619, 621, 624, 626, 629, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 661, 662, 663, 664, 665, 666, 667, 671, 815, 816, 817, 818, 819, 820, 824, 826, 830, 832, 833, 835, 836, 838, 847, 849, 856, 858, 859, 861, 863, 865, 866, 868, 881, 883, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "mai": [16, 18, 19, 23, 26, 27, 40, 41, 85, 86, 123, 124, 129, 137, 139, 202, 203, 204, 219, 222, 355, 379, 383, 388, 484, 485, 486, 487, 488, 519, 522, 544, 547, 579, 582, 584, 587, 606, 607, 608, 610, 672, 693, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057], "ask": [16, 135, 137, 152, 1085], "perfectli": 16, "happi": [16, 18, 152], "abund": 16, "better": [16, 117, 124, 133, 134, 137, 138, 139], "ll": [16, 17, 19, 121, 129, 132, 138], "give": [16, 18, 19, 117, 119, 120, 121, 126, 137, 903, 934, 937], "two": [16, 34, 35, 50, 51, 72, 77, 78, 95, 96, 120, 121, 123, 124, 128, 129, 134, 138, 140, 202, 203, 204, 216, 217, 236, 239, 254, 256, 258, 259, 261, 263, 272, 339, 349, 388, 454, 457, 626, 629, 672, 680, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 875, 877, 878, 880, 903, 952, 955, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1029, 1085], "streamlin": 16, "workflow": [16, 19, 138, 150, 1085], "save": [16, 75, 76, 123, 133, 152, 672, 736, 1119, 1120], "week": [16, 19, 20, 1085], "let": [16, 120, 121, 123, 124, 129, 130, 131, 135, 137, 138, 139, 140, 1041, 1050, 1053, 1062, 1065, 1066, 1069, 1070, 1073, 1085], "sai": [16, 18, 127, 137], "deepmind": 16, "releas": [16, 18, 20, 1085], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 132, 138, 1041, 1062, 1065, 1070, 1073], "perceiverio": 16, "happen": [16, 18, 19, 123, 138], "slew": 16, "rush": 16, "f": [16, 21, 117, 123, 129, 133, 135, 138, 140, 388, 514, 517, 672, 714, 718, 968, 971, 984, 985], "g": [16, 117, 129, 152, 272, 278, 340, 343, 355, 358, 968, 971, 984, 992, 997, 998, 1000, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1054, 1057, 1058, 1061, 1066, 1069], "inevit": 16, "deviat": [16, 56, 57, 101, 102, 123, 986, 987, 988, 989, 990, 991, 992, 997, 1041, 1062, 1065, 1121, 1122], "origin": [16, 54, 55, 72, 75, 76, 77, 78, 99, 100, 124, 126, 127, 130, 135, 137, 388, 424, 427, 815, 843, 845, 903, 934, 937, 938, 939, 940, 941, 942], "often": [16, 123, 125, 133, 152], "erron": 16, "train": [16, 44, 45, 89, 90, 125, 129, 131, 138, 139, 140, 150, 151, 152, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1085], "poor": 16, "converg": 16, "perform": [16, 68, 69, 75, 76, 113, 114, 118, 119, 121, 123, 125, 126, 128, 129, 131, 132, 135, 138, 152, 163, 184, 187, 202, 230, 231, 233, 234, 672, 690, 694, 695, 696, 715, 716, 717, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 810, 812, 815, 866, 868, 964, 965, 966, 967, 968, 975, 976, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "issu": [16, 17, 20, 123, 135, 137, 139, 152], "etc": [16, 18, 19, 20, 42, 43, 70, 71, 75, 76, 87, 88, 103, 104, 115, 116, 118, 119, 121, 123, 128, 129, 130, 135, 137, 138, 152, 202, 230, 231, 233, 234, 672, 700, 701, 702, 703, 704, 705, 726, 729, 730, 992, 993, 994, 995, 996, 998, 1000, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "publish": [16, 152], "manag": [16, 17, 132, 152], "get": [16, 17, 18, 20, 75, 76, 117, 123, 125, 130, 131, 132, 135, 136, 137, 138, 139, 272, 304, 307, 309, 310, 313, 317, 320, 355, 361, 362, 365, 367, 368, 373, 377, 384, 387, 672, 679, 706, 707, 708, 709, 728, 738, 1085, 1091, 1107, 1116], "work": [16, 18, 19, 20, 117, 123, 124, 129, 130, 131, 134, 135, 136, 137, 139, 140, 1085, 1091], "repositori": [16, 18, 19, 21, 122, 133], "pull": [16, 17, 18, 21, 118, 152], "request": [16, 17, 118, 355, 370], "confus": [16, 132], "do": [16, 18, 19, 20, 44, 45, 75, 76, 89, 90, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 388, 621, 624, 672, 717, 757, 775, 776, 777, 778, 779, 796, 968, 969, 978, 979, 980], "don": [16, 18, 19, 20, 70, 71, 115, 116, 123, 130, 139, 152], "expect": [16, 123, 152, 672, 679, 1085], "codebas": [16, 17, 117, 118, 132, 134, 355, 376, 377, 1085], "total": [16, 17, 19, 72, 75, 76, 77, 78, 121, 123, 131, 138, 139, 152, 355, 384, 1004, 1007, 1041, 1062, 1065, 1070, 1073], "hour": 16, "spent": 16, "spin": 16, "off": [16, 134, 815, 827, 829, 875, 877], "test": [16, 18, 20, 40, 41, 68, 69, 85, 86, 113, 114, 117, 121, 133, 152, 272, 323, 326, 333, 336, 388, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "error": [16, 18, 40, 41, 75, 76, 85, 86, 119, 121, 123, 128, 131, 133, 137, 152, 163, 164, 167, 388, 489, 490, 491, 492, 493, 1041, 1046, 1049, 1054, 1057, 1119, 1120, 1123, 1127], "iter": [16, 29, 30, 31, 32, 33, 42, 43, 70, 71, 72, 75, 76, 77, 78, 87, 88, 115, 116, 129, 135, 138, 199, 200, 355, 378, 672, 673, 674, 675, 676, 677, 903, 913, 916, 929, 932, 943, 956, 959, 960, 963, 968, 969, 970, 971, 974, 978, 979, 980, 985], "address": [16, 19, 20, 128, 135], "sake": 16, "singl": [16, 19, 75, 76, 118, 119, 121, 123, 125, 127, 129, 132, 135, 138, 139, 140, 152, 672, 751, 756, 992, 997, 998, 1000, 1009, 1010, 1014], "multipl": [16, 19, 56, 57, 68, 69, 75, 76, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 104, 113, 114, 121, 125, 129, 152, 388, 404, 408, 449, 453, 594, 595, 596, 599, 672, 673, 675, 676, 677, 701, 705, 723, 757, 775, 777, 778, 779, 815, 816, 819, 820, 836, 838, 903, 904, 907, 908, 938, 941, 942, 943, 986, 987, 988, 989, 990, 991, 994, 996, 1004, 1005, 1006, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1117], "line": [16, 18, 121, 123, 128, 133, 136, 137, 138, 139, 150, 1085, 1091], "convert": [16, 29, 30, 31, 32, 33, 34, 35, 75, 76, 123, 128, 135, 152, 153, 161, 202, 206, 207, 208, 241, 244, 272, 277, 278, 355, 358, 359, 360, 361, 373, 384, 387, 672, 743, 745, 746, 750, 751, 815, 884, 886, 968, 970, 980, 981, 1097], "directli": [16, 19, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 132, 135, 137, 139, 140, 151, 152, 968, 980], "graph": [16, 23, 26, 27, 125, 129, 136, 152, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1119, 1120], "guarante": [16, 128, 152, 1009, 1010, 1014], "turn": [16, 121, 123, 129], "4": [16, 21, 23, 26, 27, 40, 41, 44, 45, 50, 51, 54, 55, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 123, 126, 129, 135, 137, 138, 139, 140, 163, 169, 172, 174, 177, 184, 187, 194, 195, 197, 202, 225, 228, 236, 239, 249, 252, 267, 271, 272, 294, 296, 297, 298, 304, 307, 310, 313, 333, 336, 355, 367, 372, 376, 388, 389, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 416, 417, 418, 424, 426, 427, 428, 434, 437, 449, 450, 451, 452, 453, 459, 462, 464, 466, 467, 469, 472, 474, 477, 499, 501, 502, 504, 506, 507, 519, 522, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 638, 639, 640, 641, 644, 646, 649, 651, 654, 661, 662, 664, 665, 666, 672, 681, 690, 699, 700, 701, 703, 704, 705, 722, 744, 757, 759, 761, 762, 763, 775, 776, 777, 778, 779, 798, 801, 802, 803, 805, 808, 812, 814, 815, 816, 817, 819, 821, 823, 824, 826, 827, 829, 836, 838, 847, 849, 853, 855, 872, 874, 875, 877, 887, 898, 901, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 929, 931, 932, 933, 934, 937, 938, 940, 941, 942, 943, 944, 947, 952, 955, 968, 971, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 996, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1078, 1085, 1123, 1124, 1125, 1126, 1128], "step": [16, 18, 19, 21, 44, 45, 75, 76, 79, 80, 89, 90, 121, 126, 128, 129, 130, 131, 135, 138, 139, 140, 151, 202, 203, 204, 205, 230, 231, 233, 234, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 771, 773, 780, 781, 782, 783, 784, 786, 788, 790, 964, 965, 966, 967, 1085, 1123, 1124, 1125, 1126, 1127, 1128], "take": [16, 17, 18, 19, 120, 121, 123, 129, 130, 131, 135, 137, 139, 140, 152, 388, 459, 462, 1085, 1091], "few": [16, 19, 20, 123, 125, 129, 130, 131, 132, 133, 136, 137, 138, 139, 150, 1085, 1091], "second": [16, 18, 23, 26, 27, 40, 41, 44, 45, 62, 63, 72, 77, 78, 85, 86, 89, 90, 107, 108, 121, 123, 124, 132, 137, 272, 339, 349, 388, 404, 405, 406, 407, 408, 424, 425, 426, 428, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 484, 485, 487, 509, 512, 514, 515, 519, 520, 522, 539, 540, 542, 544, 545, 547, 569, 570, 572, 574, 575, 577, 584, 585, 587, 589, 590, 592, 596, 597, 599, 606, 607, 609, 616, 617, 619, 656, 657, 658, 659, 660, 672, 680, 728, 734, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 815, 821, 823, 827, 829, 830, 832, 839, 842, 853, 855, 859, 861, 866, 868, 872, 874, 878, 880, 903, 948, 951, 952, 955, 964, 966, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1123, 1124, 1125], "automat": [16, 18, 19, 117, 119, 125, 129, 134, 135, 136, 139, 140, 1085], "convers": [16, 30, 31, 32, 33, 75, 76, 134, 136, 140, 151, 152, 1085, 1091], "everyon": [16, 17, 19, 152], "regardless": [16, 17, 75, 76, 137, 140, 199, 200], "wouldn": 16, "nice": [16, 123], "write": [16, 19, 20, 21, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 75, 76, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 120, 121, 125, 126, 132, 135, 137, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 355, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 691, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1008, 1009, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "onc": [16, 18, 19, 123, 129, 130, 131, 135, 138, 152, 355, 378, 815, 836, 838, 866, 868, 992, 993], "know": [16, 19, 123, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "among": [16, 75, 76, 123], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 125, 135], "understand": [16, 18, 19, 20, 21, 117, 119, 120, 121, 122, 124, 133, 134], "pattern": [16, 75, 76, 120, 130, 672, 694, 695, 696], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 122, 123, 124, 129, 135, 139, 152, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 294, 295, 296, 298, 362, 363, 364, 366, 379, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 673, 674, 675, 677, 701, 702, 703, 705, 746, 747, 748, 749, 759, 760, 761, 763, 775, 776, 777, 779, 805, 806, 807, 809, 815, 816, 817, 818, 820, 821, 823, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 929, 930, 931, 933, 934, 937, 938, 939, 940, 942, 944, 945, 946, 968, 970, 980, 987, 988, 989, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1091], "now": [16, 18, 21, 75, 76, 118, 119, 123, 127, 129, 130, 133, 137, 138, 140, 151, 152, 202, 267, 271, 1107, 1118, 1119, 1120], "spend": 16, "torchvis": 16, "probabl": [16, 123, 798, 810, 992, 993, 1107, 1115], "sonnet": 16, "about": [16, 18, 19, 122, 123, 134, 135, 139, 140, 152, 272, 310, 313, 317, 320], "next": [16, 18, 19, 20, 21, 120, 121, 126, 127, 133, 137, 138, 272, 310, 313, 1085, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128], "everyth": [16, 19, 20, 123, 136, 152], "zero": [16, 23, 26, 27, 34, 35, 40, 41, 44, 45, 68, 69, 72, 75, 76, 77, 78, 85, 86, 89, 90, 113, 114, 119, 121, 123, 128, 129, 130, 131, 135, 138, 139, 163, 169, 172, 174, 177, 202, 210, 216, 217, 236, 239, 254, 256, 258, 259, 261, 263, 267, 269, 271, 272, 279, 282, 388, 404, 407, 409, 412, 414, 417, 424, 427, 444, 447, 469, 470, 472, 474, 477, 499, 502, 504, 507, 579, 582, 584, 587, 594, 595, 596, 599, 601, 604, 606, 609, 616, 619, 621, 624, 626, 629, 636, 639, 641, 642, 643, 645, 646, 649, 651, 654, 661, 665, 666, 672, 690, 726, 729, 730, 757, 759, 760, 761, 762, 763, 764, 766, 775, 778, 780, 782, 784, 786, 798, 810, 815, 816, 819, 824, 826, 839, 842, 847, 849, 856, 858, 878, 880, 881, 883, 903, 917, 920, 921, 924, 938, 941, 960, 963, 986, 987, 990, 992, 994, 995, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1123, 1124, 1125, 1126], "need": [16, 18, 19, 20, 21, 118, 120, 121, 122, 124, 125, 128, 129, 132, 135, 137, 138, 151, 152, 672, 684, 685, 687, 903, 904, 907, 917, 920], "said": 16, "high": [16, 20, 75, 76, 103, 104, 138, 992, 994, 995, 996, 998, 999, 1000, 1001], "level": [16, 17, 20, 125, 134, 135, 138, 139, 140, 152], "optim": [16, 132, 136, 138, 140, 151, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 964, 965, 966, 967, 1085, 1124, 1125, 1126, 1128], "trainer": [16, 150, 152, 1085], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 140], "flax": [16, 140, 152], "trax": [16, 140], "objax": [16, 140], "idea": [16, 124, 133, 151], "fulli": [16, 119, 128, 129, 135, 136, 137, 138, 139, 140, 152, 1107, 1117, 1118], "offer": [16, 139], "strongli": [17, 18, 1085, 1091], "welcom": [17, 18, 19, 1085, 1091], "absolut": [17, 40, 41, 75, 76, 85, 86, 388, 389, 390, 391, 392, 393, 815, 862], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 119, 129, 130, 132, 163, 164, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 199, 200, 272, 279, 282, 294, 296, 298, 303, 304, 307, 322, 323, 326, 328, 331, 333, 336, 338, 354, 355, 361, 362, 365, 369, 370, 373, 374, 378, 385, 387, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 537, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 674, 675, 676, 677, 680, 681, 690, 693, 697, 699, 701, 703, 705, 709, 710, 712, 714, 717, 718, 719, 720, 721, 722, 723, 733, 735, 737, 741, 746, 747, 749, 753, 755, 756, 757, 764, 766, 768, 769, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 793, 797, 798, 810, 815, 816, 818, 820, 830, 832, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 964, 965, 966, 967, 968, 969, 970, 974, 978, 979, 980, 981, 987, 989, 991, 992, 993, 1015, 1016, 1018, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1096, 1097, 1107, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 75, 76, 79, 80, 117, 120, 121, 124, 130, 134, 135, 137, 138, 139, 151, 152, 202, 203, 204, 205, 230, 231, 232, 233, 234, 235, 355, 357], "aspect": [17, 138, 1085], "guid": [17, 18, 19, 133, 1085], "through": [17, 19, 20, 117, 121, 123, 124, 125, 126, 129, 133, 134, 135, 137, 138, 139, 140, 151, 388, 424, 427, 968, 971], "journei": [17, 1085, 1091], "inclusvi": 17, "big": [17, 152], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 134, 1085], "split": [17, 19, 23, 26, 27, 75, 76, 134, 135, 152, 355, 376, 377, 378, 672, 723, 903, 1085], "section": [17, 19, 20, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "below": [17, 18, 20, 21, 34, 35, 117, 118, 121, 123, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 151, 202, 254, 256, 258, 259, 261, 263, 388, 424, 427, 434, 437, 459, 462, 474, 477, 626, 629, 666, 815, 824, 826, 827, 829, 875, 877, 903, 917, 920, 921, 924, 1009, 1010, 1014, 1030, 1031, 1034, 1085], "best": [17, 18, 19, 20, 21, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 672, 723], "go": [17, 18, 19, 20, 117, 118, 121, 124, 129, 134, 138, 152, 968, 979], "finish": [17, 18, 117, 1085], "dive": [17, 19, 20, 129, 134, 137, 138, 152, 1085], "right": [17, 18, 19, 75, 76, 117, 121, 138, 388, 444, 447, 454, 457, 815, 866, 868], "environ": [17, 19, 21, 151], "basic": [17, 20, 21], "fork": [17, 18, 672, 724], "doc": [17, 20, 119, 120, 135, 138, 139, 1085], "document": [17, 19, 123, 124, 136, 138, 140], "local": [17, 18, 21, 125], "task": [17, 19, 151, 964, 965, 966, 967, 1085], "help": [17, 18, 121, 123, 124, 126, 128, 129, 137, 138, 139, 150, 672, 678, 1041, 1066, 1069, 1085], "video": [17, 19, 118, 119, 120, 121, 123, 124, 125, 126], "realli": [18, 129, 152], "contribut": [18, 19, 20, 135, 1091], "toward": [18, 54, 55, 99, 100, 135, 903, 938, 939, 940, 941, 942, 1085, 1091], "page": [18, 19, 136, 140, 150, 1085, 1091], "explain": [18, 19, 20, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 1085, 1091], "main": [18, 21, 34, 35, 127, 129, 202, 216, 217, 254, 256, 258, 259, 261, 263, 815, 827, 829, 875, 877], "prefer": [18, 124, 129], "mode": [18, 50, 51, 75, 76, 121, 129, 152, 199, 200, 355, 378, 388, 404, 407, 596, 599, 672, 709, 733, 735, 753, 754, 815, 859, 860, 861], "git": [18, 19, 123], "recurs": [18, 21, 29, 30, 31, 32, 33, 75, 76, 125, 129, 139, 152, 968, 969, 970, 978, 979, 980], "submodul": [18, 19, 20, 21, 122, 123, 125, 131, 134, 135, 139, 1085, 1121, 1122, 1129, 1130], "com": 18, "unifyai": [18, 21], "http": [18, 120, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 757, 759, 762, 764, 766, 815, 827, 829, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049], "gh": 18, "your_fold": 18, "id": [18, 128, 129, 133, 355, 361, 1119, 1120], "cours": [18, 19, 121, 138, 152], "whatev": [18, 152], "integr": [18, 272, 279, 282], "familiar": [18, 20], "decid": [18, 75, 76, 124, 968, 979], "sure": [18, 20, 122, 123], "elig": 18, "free": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 151, 1085], "student": 18, "licenc": 18, "peopl": [18, 19, 117], "seem": [18, 139, 152], "miss": [18, 121, 123, 128, 129, 133, 1123, 1127], "add": [18, 19, 20, 23, 26, 27, 40, 41, 56, 57, 70, 71, 72, 75, 76, 77, 78, 85, 86, 87, 88, 101, 102, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 135, 137, 152, 388, 389, 392, 408, 594, 595, 673, 677, 757, 797, 986, 987, 988, 989, 990, 991, 1085, 1091, 1121, 1122], "explicit": [18, 21, 129, 130, 132, 135, 152], "remind": 18, "channel": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 672, 699, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117], "pace": 18, "updat": [18, 19, 20, 21, 44, 45, 75, 76, 89, 90, 117, 119, 121, 122, 127, 128, 129, 130, 135, 137, 138, 140, 152, 672, 717, 729, 730, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 812, 964, 965, 966, 968, 975, 976, 984, 985, 1096, 1097, 1123, 1124, 1125, 1126, 1127, 1128], "suggest": [18, 19, 118, 123], "latest": [18, 20, 21, 120, 152, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 815, 827, 829, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1107, 1116], "packag": [18, 21, 124, 133, 152], "ensur": [18, 19, 119, 123, 124, 128, 130, 133, 672, 717], "align": [18, 75, 76, 135, 137, 1085, 1091], "accord": [18, 21, 36, 37, 75, 76, 81, 82, 124, 125, 130, 272, 294, 295, 296, 297, 298, 303, 310, 313, 388, 404, 407, 454, 457, 596, 599, 672, 700, 729, 730, 815, 878, 880, 903, 913, 916, 960, 963, 1041, 1062, 1065, 1070, 1073], "stabl": [18, 64, 65, 109, 110, 135, 152, 672, 707, 708, 731, 732, 739, 740, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040], "pypi": [18, 20, 152], "mayb": [18, 29, 32, 33, 135, 137], "person": [18, 19], "experi": [18, 136, 138, 152], "avoid": [18, 19, 123, 126, 127, 129, 133, 137, 388, 499, 502], "pip": [18, 151, 1085], "instal": [18, 21, 133, 151, 1085], "abil": [18, 136, 152], "certain": [18, 75, 76, 123, 124, 130, 152, 202, 203, 204, 230, 231, 233, 234], "perhap": [18, 137, 138, 139, 152], "keep": [18, 19, 75, 76, 122, 123, 129, 136, 138, 140, 672, 755], "track": [18, 19, 968, 980, 1119, 1120], "termin": [18, 19, 21, 72, 75, 76, 77, 78, 129, 135, 138], "run": [18, 21, 44, 45, 89, 90, 119, 121, 122, 123, 126, 133, 135, 136, 137, 138, 139, 140, 151, 152, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 964, 965, 966, 967, 1107, 1118, 1119, 1120], "command": [18, 21, 1085], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 62, 63, 107, 108, 120, 123, 124, 130, 133, 135, 137, 138, 140, 199, 200, 672, 678, 815, 830, 832, 859, 861, 866, 868, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019], "3": [18, 21, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 72, 73, 74, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 121, 123, 126, 129, 135, 137, 138, 139, 140, 163, 164, 165, 166, 168, 169, 172, 174, 177, 179, 182, 184, 187, 194, 195, 197, 201, 202, 225, 228, 236, 239, 249, 252, 264, 266, 267, 271, 272, 294, 295, 296, 297, 298, 304, 307, 310, 313, 333, 336, 355, 361, 372, 376, 379, 383, 388, 389, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 434, 437, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 466, 467, 469, 470, 472, 474, 477, 494, 497, 499, 500, 501, 502, 504, 505, 506, 507, 514, 517, 519, 522, 539, 542, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 664, 665, 666, 672, 673, 674, 675, 680, 681, 690, 697, 700, 701, 702, 703, 704, 705, 722, 737, 744, 751, 757, 759, 760, 761, 762, 763, 775, 778, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 836, 838, 847, 849, 853, 855, 866, 868, 872, 874, 875, 877, 884, 886, 887, 888, 890, 891, 892, 893, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 929, 931, 932, 933, 934, 937, 938, 940, 941, 942, 943, 944, 947, 952, 955, 968, 971, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1066, 1069, 1074, 1075, 1078, 1085], "8": [18, 21, 23, 26, 27, 40, 41, 52, 53, 54, 55, 72, 77, 78, 85, 86, 89, 90, 97, 98, 103, 104, 121, 123, 129, 134, 138, 163, 179, 182, 202, 267, 271, 272, 303, 310, 313, 355, 367, 384, 388, 404, 407, 408, 414, 417, 418, 434, 437, 464, 467, 474, 477, 519, 522, 544, 547, 594, 595, 621, 622, 626, 628, 629, 630, 631, 632, 633, 634, 635, 646, 649, 651, 654, 666, 672, 681, 700, 722, 757, 759, 762, 775, 777, 778, 779, 798, 805, 808, 815, 821, 823, 824, 826, 827, 829, 853, 855, 872, 874, 887, 888, 889, 890, 891, 892, 893, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 921, 924, 943, 992, 993, 994, 995, 996, 1004, 1008, 1009, 1010, 1014, 1041, 1042, 1045, 1085, 1107, 1118], "activ": [18, 19, 21, 25, 70, 71, 74, 115, 116, 118, 139, 164, 167, 169, 172, 174, 176, 177, 178, 179, 182, 184, 187, 189, 192, 194, 198, 1085, 1094, 1095], "setup": 18, "click": [18, 19, 120, 1085], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 140, 355, 379, 383, 388, 579, 582, 584, 587, 1004, 1008, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057], "left": [18, 19, 75, 76, 121, 130, 388, 444, 447, 815, 830, 832, 843, 845, 866, 868, 1004, 1005, 1085], "panel": 18, "select": [18, 19, 123, 135, 137, 140, 152], "drop": [18, 152], "down": [18, 123, 137], "path": [18, 21], "manual": [18, 19, 123, 139, 968, 969, 978, 979], "builtin": [18, 21, 137, 139], "requir": [18, 21, 118, 119, 120, 121, 123, 127, 128, 130, 131, 137, 152, 199, 200, 388, 646, 649, 815, 830, 832, 903, 948, 951, 1096, 1097], "cmd": [18, 21], "directori": [18, 19, 21, 123, 124, 672, 736], "folder": [18, 19, 21, 118, 122, 123, 125], "file": [18, 19, 21, 75, 76, 118, 120, 123, 125, 126, 128, 129, 133, 135, 138, 672, 736, 1119, 1120], "abov": [18, 19, 21, 34, 35, 103, 104, 119, 120, 121, 123, 124, 125, 126, 128, 129, 132, 133, 137, 138, 139, 140, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 596, 599, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 830, 832, 875, 877, 903, 917, 920, 921, 924, 938, 941, 986, 987, 990, 992, 994, 995, 996, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1058, 1061, 1062, 1065, 1066, 1069, 1074, 1075, 1078], "m": [18, 19, 21, 34, 35, 50, 51, 95, 96, 117, 135, 202, 236, 239, 254, 256, 258, 259, 261, 263, 672, 681, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877, 992, 997, 998, 1000], "python3": [18, 21], "script": [18, 19, 21, 121, 135, 152], "bat": [18, 19, 21], "OR": [18, 19, 21, 68, 69, 113, 114, 388, 449, 452, 584, 587, 1074, 1080, 1081, 1082, 1083, 1084], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 72, 75, 76, 77, 78, 120, 128, 129, 133, 355, 368], "os": 18, "note": [18, 19, 118, 120, 121, 123, 129, 130, 388, 621, 624, 815, 830, 832, 866, 868, 903, 948, 951, 1009, 1015, 1019, 1041, 1050, 1053], "tick": [18, 19], "abl": [18, 19, 75, 76, 125, 130, 132, 133, 137, 140], "To": [18, 121, 123, 125, 129, 133, 138, 139, 140, 1085], "ivy_test": [18, 19], "test_array_api": [18, 19, 122, 123], "cd": [18, 19, 21], "r": [18, 75, 76, 672, 681, 755, 815, 859, 861, 884, 886], "txt": 18, "visual": [18, 133, 152], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 134, 388, 499, 502], "conflict": [18, 19, 138], "addit": [18, 19, 56, 57, 75, 76, 101, 102, 118, 120, 123, 124, 129, 130, 137, 138, 140, 355, 379, 383, 388, 404, 407, 672, 694, 695, 696, 986, 987, 988, 989, 990, 991, 1107, 1117], "yet": [18, 20, 129], "particular": [18, 19, 118, 121, 123, 130, 132, 388, 389, 392], "system": [18, 152, 815, 863, 865], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": [18, 124], "imag": [18, 21, 47, 48, 49, 92, 93, 94, 118, 135, 136, 138, 140, 151, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 1085], "profession": 18, "execut": [18, 21, 129, 132, 135, 137, 140, 152, 672, 752], "deploy": 18, "top": [18, 19, 123, 124, 138, 139, 1085], "press": [18, 138, 1085], "ok": 18, "correctli": [18, 75, 76, 119, 123, 129, 130, 133, 139, 152, 815, 843, 845, 1004, 1005], "caus": [18, 19, 121, 123, 129, 132, 133, 152], "earlier": [18, 19], "might": [18, 19, 118, 123, 127, 130, 135, 137, 138, 672, 693], "necessari": [18, 121, 126, 129, 132], "virtualis": 18, "detail": [18, 19, 20, 118, 119, 122, 123, 125, 126, 127, 129, 138, 139, 202, 219, 222, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 75, 76, 87, 88, 202, 236, 239, 672, 684, 685, 686, 687, 798, 810, 815, 843, 845, 881, 883, 1107, 1115], "keyr": 18, "fssl": 18, "download": [18, 123], "gpg": 18, "dearmor": 18, "o": [18, 117, 135, 672, 681], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 140, 152], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 56, 57, 70, 71, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 121, 123, 124, 129, 130, 131, 133, 135, 138, 139, 140, 152, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 202, 203, 204, 206, 207, 208, 236, 237, 239, 241, 244, 272, 284, 285, 287, 294, 296, 298, 355, 361, 378, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 681, 701, 703, 705, 744, 746, 747, 749, 755, 757, 759, 761, 763, 775, 777, 779, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 816, 818, 820, 872, 874, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 904, 906, 908, 909, 912, 921, 924, 938, 940, 942, 943, 948, 951, 968, 969, 970, 971, 974, 979, 980, 984, 985, 986, 987, 988, 989, 990, 991, 994, 996, 1004, 1007, 1009, 1015, 1016, 1018, 1019, 1075, 1077, 1079, 1080, 1082, 1084, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "dev": [18, 38, 39, 75, 76, 83, 84, 125, 131, 135, 137, 139, 355, 366, 368], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 123, 129, 152], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 123, 133, 151, 355], "post": [18, 56, 57, 101, 102, 140, 986, 987, 988, 989, 990, 991, 1085, 1091], "It": [18, 19, 21, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 120, 121, 123, 124, 126, 128, 129, 130, 132, 135, 137, 138, 139, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 355, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 694, 695, 696, 698, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1008, 1009, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 119, 120, 121, 123, 125, 129, 132, 135, 137, 138, 152], "featur": [18, 118, 119, 138, 1085], "vm": 18, "azur": 18, "cloud": [18, 151], "mean": [18, 19, 66, 67, 75, 76, 111, 112, 115, 116, 117, 121, 123, 125, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 355, 378, 672, 695, 964, 965, 966, 967, 968, 974, 992, 997, 1009, 1010, 1014, 1041, 1085, 1098], "configur": [18, 19, 21, 75, 76, 130, 355, 377, 968, 981], "defin": [18, 20, 103, 104, 118, 119, 120, 123, 130, 137, 139, 152, 388, 596, 599, 621, 624, 672, 726, 815, 821, 823, 830, 832, 863, 865, 992, 994, 995, 996, 1041, 1046, 1049, 1050, 1053, 1054, 1057], "dockerfil": [18, 21], "longer": [18, 123, 130, 132], "worri": 18, "platform": 18, "agnost": [18, 119, 128, 135, 137, 140, 152, 1085], "usual": [18, 123, 124], "studio": 18, "favourit": 18, "extens": [18, 19, 120, 123, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 544, 547, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 815, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078], "theme": 18, "too": [18, 19, 133, 152, 388, 404, 407, 596, 599], "done": [18, 19, 121, 123, 133, 138], "unsupport": [18, 124, 133, 272, 316], "old": [18, 75, 76, 132], "slow": 18, "ipad": 18, "long": [18, 19, 121, 798, 812], "browser": 18, "cool": [18, 118], "requisit": 18, "head": [18, 129, 798, 813, 1085, 1107, 1118], "pane": [18, 19], "readi": [18, 20], "begin": [18, 968, 969, 979], "outlin": [18, 19, 20, 117, 120, 123, 125, 129, 132, 137], "green": [18, 19, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 1132, 1133], "dropdown": 18, "tab": [18, 138, 1085], "master": [18, 19, 129], "vs": [18, 123], "view": [18, 19, 202, 219, 222, 798, 801, 805, 808], "log": [18, 19, 40, 41, 85, 86, 125, 129, 132, 135, 138, 202, 233, 234, 388, 553, 559, 562, 569, 572, 815, 862, 1085], "built": [18, 123, 136, 202, 203, 204, 1107, 1118, 1119, 1120], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 40, 41, 103, 104, 121, 123, 272, 310, 313, 388, 434, 437, 621, 622, 624, 626, 629, 631, 632, 798, 801, 815, 827, 829, 853, 855, 872, 874, 903, 938, 941, 992, 994, 995, 996, 1004, 1007, 1009, 1010, 1014, 1041, 1042, 1045], "minut": 18, "launch": 18, "12": [18, 85, 86, 99, 100, 101, 102, 103, 104, 121, 123, 129, 388, 434, 437, 459, 462, 474, 477, 626, 629, 641, 643, 645, 672, 690, 708, 757, 759, 762, 815, 827, 829, 853, 855, 872, 874, 903, 921, 924, 938, 941, 944, 946, 986, 987, 989, 990, 991, 992, 994, 995, 996, 1004, 1008, 1009, 1010, 1014, 1041, 1042, 1045], "output": [18, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 75, 76, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 119, 120, 121, 123, 125, 128, 129, 131, 132, 135, 137, 139, 140, 152, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 355, 378, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 683, 684, 685, 687, 690, 691, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 768, 769, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 968, 981, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1008, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118], "That": [18, 19, 123, 137, 138, 139, 388, 621, 624], "alreadi": [18, 19, 75, 76, 119, 126, 129, 130, 137, 152, 388, 464, 467, 504, 507, 596, 599, 626, 629, 667, 671, 815, 853, 855, 1085], "refer": [18, 19, 68, 69, 113, 114, 119, 123, 124, 125, 130, 152, 202, 216, 217, 388, 499, 502, 559, 562, 757, 759, 762, 764, 766, 815, 878, 880, 884, 886, 1041, 1062, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1117], "approach": [18, 19, 123, 125, 129, 137, 138, 152], "colour": 18, "applic": [18, 130, 131, 139, 798, 813, 814, 968, 974, 980], "good": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 139], "chanc": 18, "vscode": 18, "show": [18, 19, 75, 76, 121, 123, 132, 151, 152, 1085], "explor": [18, 136, 140, 151], "troubleshoot": 18, "sometim": [18, 19, 123], "ever": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "64": [18, 48, 49, 93, 94, 123, 138, 139, 388, 646, 649, 651, 654, 798, 804, 805, 806, 807, 808, 809, 815, 853, 855, 1041, 1042, 1045, 1085, 1107, 1118], "bit": [18, 121, 123, 125, 129, 137, 272, 309, 310, 313, 317, 320, 388, 439, 442, 444, 447, 454, 457, 1041, 1058, 1061, 1066, 1069], "usr": 18, "more": [18, 19, 20, 23, 26, 27, 62, 63, 107, 108, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 202, 203, 204, 272, 284, 287, 388, 499, 502, 815, 839, 842, 903, 921, 924, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1085], "nutshel": [18, 119], "hook": 18, "lint": 18, "accept": [18, 19, 29, 119, 120, 121, 123, 125, 128, 129, 131, 132, 137, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 579, 582, 584, 587, 594, 595, 606, 609, 621, 624, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 986, 987, 990, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1050, 1053, 1074, 1075, 1078, 1085], "fix": [18, 19], "fail": [18, 20, 122, 123, 133, 135, 137], "attempt": [18, 133, 152], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 120, 121, 123, 125, 127, 129, 130, 131, 132, 135, 137, 138, 139, 140, 150, 152, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 272, 294, 295, 296, 298, 340, 343, 362, 363, 364, 366, 379, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 672, 673, 674, 675, 677, 694, 695, 696, 701, 702, 703, 705, 746, 747, 748, 749, 757, 759, 760, 761, 763, 775, 776, 777, 779, 780, 782, 784, 786, 798, 805, 806, 807, 809, 811, 813, 814, 815, 816, 817, 818, 820, 847, 849, 856, 858, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 929, 930, 931, 933, 938, 939, 940, 942, 944, 945, 946, 948, 951, 964, 965, 966, 968, 974, 977, 980, 981, 986, 987, 988, 989, 990, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1093, 1094, 1095, 1121, 1122], "proce": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "modifi": [18, 19, 120, 125, 130, 131, 133, 135], "properli": [18, 117], "enter": [18, 19, 119, 128, 130, 131, 355, 757, 797], "unsur": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "feel": [18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 1085], "server": [19, 1085], "appropri": [19, 70, 71, 115, 116, 123, 127, 388, 404, 407, 596, 599, 1004, 1005], "context": [19, 121, 123, 129, 130, 131, 355, 672, 724, 798, 813, 1107, 1118], "suitabl": [19, 118, 129], "quick": [19, 117, 139], "alwai": [19, 20, 44, 45, 75, 76, 89, 90, 118, 119, 120, 123, 125, 126, 128, 129, 132, 133, 135, 137, 152, 272, 279, 282, 388, 404, 407, 596, 599, 672, 717, 757, 775, 776, 777, 778, 779, 793], "correct": [19, 20, 66, 67, 111, 112, 117, 119, 125, 129, 130, 131, 133, 272, 349, 903, 904, 907, 1041, 1062, 1063, 1064, 1065, 1070, 1071, 1072, 1073, 1085], "tendenc": 19, "gener": [19, 20, 21, 43, 44, 45, 70, 71, 75, 76, 88, 89, 90, 115, 116, 117, 118, 119, 120, 121, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 151, 152, 199, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 621, 624, 636, 639, 646, 649, 651, 654, 673, 676, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 750, 751, 752, 753, 754, 755, 756, 757, 775, 776, 777, 778, 779, 815, 827, 829, 903, 917, 920, 938, 941, 992, 993, 994, 995, 998, 1000, 1002, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1085, 1123, 1127], "land": 19, "end": [19, 129, 132, 134, 151, 152, 202, 203, 204, 388, 424, 427, 1085, 1091], "world": 19, "come": [19, 20, 123, 139, 150, 1085, 1091], "fly": 19, "hard": [19, 137], "receiv": [19, 123, 130, 131, 672, 679, 723, 1107, 1117], "respons": [19, 21], "internship": 19, "comment": [19, 133], "trigger": 19, "unansw": 19, "label": [19, 52, 53, 97, 98, 135, 136, 140, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902], "respond": 19, "remov": [19, 20, 21, 75, 76, 120, 123, 125, 130, 132, 140, 815, 827, 829, 839, 842, 875, 877, 903, 944, 947, 964, 965, 966], "someon": [19, 152], "els": [19, 20, 118, 125, 126, 132, 135, 137, 139, 140, 152, 272, 303, 672, 682, 693, 697, 968, 978], "strive": [19, 123, 152], "repli": 19, "newli": [19, 123, 132, 199, 200, 272, 279, 282, 672, 683], "place": [19, 34, 35, 54, 55, 75, 76, 99, 100, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 133, 140, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 258, 259, 263, 264, 266, 267, 269, 271, 272, 294, 297, 323, 326, 333, 336, 355, 379, 383, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 715, 716, 717, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 939, 940, 941, 942, 986, 987, 990, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078, 1123, 1124, 1125, 1126, 1127, 1128], "bug": [19, 123], "serv": [19, 119, 123, 125, 128, 129, 134, 1085], "suspect": 19, "behaviour": [19, 119, 120, 123, 124, 128, 129, 132, 137], "observ": 19, "confid": 19, "noth": [19, 75, 76], "wrong": 19, "someth": [19, 118, 138, 139, 152], "bet": 19, "act": [19, 121, 124, 152], "placehold": [19, 119, 128, 133, 968, 980], "sub": [19, 20, 75, 76, 117, 123, 124, 129, 137, 138, 139, 815, 827, 829, 903, 943, 964, 965, 966, 967, 1085], "mark": [19, 123], "ii": [19, 1041, 1042, 1045], "iii": 19, "titl": [19, 1085], "issue_numb": 19, "delet": [19, 21], "No": [19, 135], "wait": [19, 72, 75, 76, 77, 78], "progress": [19, 129, 136, 140], "pr": 19, "soon": [19, 129, 150, 152, 1085, 1091], "partial": [19, 75, 76, 1119, 1120], "solut": [19, 123, 129, 815, 863, 865], "review": [19, 118], "merg": 19, "everi": [19, 20, 21, 34, 35, 42, 43, 87, 88, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 135, 137, 139, 202, 224, 225, 226, 228, 672, 673, 674, 675, 676, 677], "shape": [19, 23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 130, 131, 132, 135, 137, 138, 139, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 246, 247, 248, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 265, 266, 267, 269, 271, 272, 279, 282, 284, 287, 289, 290, 291, 292, 293, 355, 374, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 694, 695, 696, 698, 701, 702, 703, 704, 705, 710, 713, 726, 729, 730, 735, 743, 745, 754, 757, 759, 761, 763, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1003, 1004, 1005, 1007, 1008, 1016, 1017, 1018, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1121, 1122], "move": [19, 75, 76, 118, 355, 379, 383], "within": [19, 29, 32, 33, 123, 139, 152, 202, 203, 204, 992, 998, 1000], "7": [19, 21, 23, 26, 27, 40, 41, 44, 45, 52, 53, 54, 55, 72, 77, 78, 85, 86, 89, 90, 97, 98, 101, 102, 103, 104, 121, 123, 125, 129, 132, 163, 169, 172, 174, 177, 272, 310, 313, 355, 367, 388, 389, 392, 404, 405, 406, 407, 408, 414, 416, 434, 437, 439, 442, 449, 450, 451, 452, 453, 459, 462, 464, 467, 474, 477, 494, 497, 504, 507, 519, 522, 544, 547, 594, 595, 621, 624, 626, 628, 629, 630, 631, 632, 633, 634, 636, 639, 641, 644, 646, 649, 661, 665, 666, 672, 681, 690, 700, 722, 757, 759, 760, 761, 762, 763, 764, 766, 775, 776, 778, 780, 782, 798, 804, 805, 808, 814, 815, 821, 823, 824, 826, 827, 829, 853, 855, 872, 874, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 917, 920, 921, 924, 943, 952, 955, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1004, 1008, 1009, 1010, 1014, 1041, 1042, 1045], "dai": 19, "close": [19, 120, 123, 388, 499, 502, 626, 629, 815, 866, 868], "likewis": [19, 119, 120, 125, 129, 130, 138], "freed": 19, "flag": [19, 44, 45, 75, 76, 89, 90, 130, 132, 137, 355, 361, 757, 775, 776, 777, 778, 779], "purpos": [19, 21, 119, 121, 123, 125, 127, 128, 129, 134, 137, 388, 499, 502, 1085], "remain": [19, 121, 152, 388, 404, 407, 596, 599, 621, 624, 903, 934, 937, 968, 974], "access": [19, 21, 75, 76, 124, 130], "short": [19, 139, 798, 812], "basi": [19, 122, 138], "situat": [19, 140], "alloc": [19, 34, 35, 152, 202, 254, 256, 258, 259, 261, 263, 272, 279, 282], "upon": [19, 121, 123, 132, 152], "period": 19, "prevent": [19, 44, 45, 89, 90, 132, 133, 137, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1041, 1066, 1069, 1123, 1124, 1125], "unabl": 19, "obvious": 19, "never": [19, 123, 129], "reflect": [19, 128], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 137, 140], "becaus": [19, 119, 120, 123, 124, 125, 126, 128, 130, 131, 132, 135, 139, 140, 152], "inact": 19, "limit": [19, 72, 75, 76, 77, 78, 121, 123, 133, 135, 138, 140, 152, 272, 310, 313, 317, 320, 672, 684, 685, 687, 903, 904, 907], "me": 19, "unfairli": 19, "definit": [19, 50, 51, 95, 96, 125, 130, 137, 815, 816, 817, 818, 819, 820, 821, 823], "investig": 19, "Then": [19, 21, 124, 137, 152], "practic": 19, "separ": [19, 123, 128, 129, 133, 135, 137, 138], "branch": [19, 129, 152, 199, 200, 388, 424, 427], "simpli": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 120, 121, 123, 124, 125, 128, 129, 131, 132, 135, 139, 140, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 294, 295, 296, 298, 362, 363, 364, 366, 379, 380, 381, 382, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 673, 674, 675, 677, 701, 702, 703, 705, 746, 747, 748, 749, 759, 760, 761, 763, 775, 776, 777, 779, 805, 806, 807, 809, 816, 817, 818, 820, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 904, 905, 906, 908, 929, 930, 931, 933, 938, 939, 940, 942, 944, 945, 946, 987, 988, 989, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084], "role": [19, 124, 136], "kept": [19, 72, 75, 76, 77, 78, 132, 964, 965, 966], "date": 19, "upstream": [19, 122], "complic": [19, 135], "root": [19, 21, 40, 41, 85, 86, 138, 388, 646, 647, 648, 649, 650, 992, 993, 997, 1123, 1124, 1125, 1126, 1128], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1041, 1058, 1061, 1066, 1069], "clone": [19, 21, 75, 76], "push": [19, 122, 133], "both": [19, 119, 120, 121, 123, 124, 125, 129, 131, 132, 135, 137, 138, 139, 140, 151, 152, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 339, 388, 389, 392, 404, 407, 409, 412, 414, 417, 464, 467, 499, 502, 504, 507, 594, 595, 606, 609, 616, 619, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 672, 700, 757, 759, 762, 798, 801, 805, 808, 814, 815, 816, 819, 821, 823, 827, 829, 839, 842, 878, 880, 903, 938, 941, 986, 987, 990, 1009, 1015, 1019, 1041, 1046, 1049, 1074, 1075, 1078], "abort": 19, "tediou": 19, "resolut": [19, 272, 310, 313], "stash": 19, "reinstat": 19, "correspond": [19, 40, 41, 54, 55, 72, 75, 76, 77, 78, 85, 86, 99, 100, 119, 120, 121, 122, 123, 125, 128, 129, 130, 272, 284, 287, 388, 424, 425, 426, 427, 428, 616, 617, 619, 815, 821, 823, 830, 832, 863, 865, 903, 909, 912, 938, 939, 940, 941, 942, 992, 993, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 119, 120, 124, 129, 137], "atlassian": 19, "tutori": [19, 124], "wrote": 19, "piec": [19, 125, 127, 128, 135], "inform": [19, 123, 129, 133, 272, 310, 313, 317, 320, 672, 678, 757, 793], "tag": 19, "usu": 19, "describ": [19, 123, 136, 140, 1041, 1042, 1045, 1058, 1061, 1062, 1065, 1066, 1069], "navig": [19, 117], "blame": 19, "revis": 19, "author": [19, 1085], "eg": [19, 123], "16": [19, 50, 51, 85, 86, 103, 104, 121, 123, 138, 388, 661, 662, 664, 665, 798, 804, 805, 808, 815, 816, 817, 819, 827, 829, 853, 855, 994, 996, 1004, 1008, 1041, 1042, 1045], "5": [19, 21, 23, 26, 27, 40, 41, 42, 43, 50, 51, 54, 55, 56, 57, 72, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 119, 121, 123, 126, 137, 138, 139, 163, 169, 172, 174, 177, 184, 187, 194, 195, 197, 202, 225, 228, 236, 239, 249, 252, 264, 266, 267, 271, 272, 294, 296, 297, 298, 304, 307, 310, 313, 333, 336, 355, 372, 376, 388, 389, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 416, 417, 418, 424, 425, 426, 427, 428, 429, 432, 434, 437, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 465, 466, 467, 474, 477, 499, 500, 501, 502, 504, 505, 506, 507, 519, 522, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 636, 638, 639, 640, 646, 649, 651, 654, 661, 662, 664, 665, 666, 672, 673, 674, 681, 690, 700, 701, 704, 705, 722, 744, 757, 759, 761, 762, 763, 775, 778, 798, 801, 803, 804, 805, 808, 814, 815, 816, 817, 819, 821, 823, 824, 826, 827, 829, 836, 838, 853, 855, 872, 874, 875, 877, 887, 898, 901, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 929, 931, 932, 933, 934, 937, 938, 940, 941, 942, 943, 944, 947, 952, 955, 968, 971, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1078, 1107, 1118], "past": 19, "l": [19, 50, 51, 95, 96, 117, 815, 816, 817, 818, 819, 820, 830, 832, 839, 842, 875, 877], "filepath": [19, 75, 76], "grep": 19, "v": [19, 135, 138, 139, 140, 798, 814, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1127, 1129, 1130], "commit_id": 19, "handi": [19, 123], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 121], "previou": [19, 119, 123, 124, 140, 152, 272, 353, 672, 753, 754, 757, 764, 766, 780, 782], "shown": [19, 70, 71, 75, 76, 115, 116, 119, 121, 123, 124, 133, 135, 137, 152, 388, 424, 427, 434, 437, 459, 462, 474, 477, 626, 629, 666, 815, 824, 826, 903, 917, 920, 921, 924, 1009, 1010, 1014, 1030, 1031, 1034], "whenev": [19, 123, 137, 138], "think": [19, 121], "interact": [19, 123, 1085], "gain": [19, 134, 139, 1098], "quit": [19, 20, 120, 123, 125, 127, 128], "repeat": [19, 54, 55, 75, 76, 99, 100, 120, 121, 123, 126, 128, 129, 130, 133, 672, 696, 903, 933, 956, 959], "yourself": [19, 20, 123, 151], "simpler": [19, 137], "cannot": [19, 124, 126, 130, 140], "least": [19, 121, 123, 125, 128, 815, 839, 842], "final": [19, 120, 121, 125, 128, 130, 132, 133, 135, 137, 138, 202, 230, 231, 233, 234, 672, 699, 1107, 1118], "tickbox": 19, "lower": [19, 34, 35, 50, 51, 75, 76, 95, 96, 121, 123, 135, 152, 202, 216, 217, 254, 256, 258, 388, 594, 815, 816, 817, 818, 819, 820, 992, 998, 1000], "corner": 19, "without": [19, 75, 76, 118, 119, 121, 124, 125, 128, 129, 131, 133, 135, 137, 138, 139, 151, 152, 672, 728, 734, 903, 934, 937, 968, 970, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "span": 19, "intent": [19, 132], "larg": [19, 138, 388, 404, 407, 596, 599], "discourag": 19, "philosophi": 19, "increment": [19, 672, 716], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1085], "wast": 19, "spot": [19, 125], "mistak": [19, 133], "propos": 19, "mountain": 19, "around": [19, 72, 75, 76, 77, 78, 119, 125, 128, 137, 152], "advoc": [19, 152], "individu": [19, 20, 125], "per": [19, 48, 49, 93, 94, 123, 138, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "style": [19, 1004, 1007], "ve": [19, 134, 137, 992, 993, 1085], "were": [19, 75, 76, 118, 123, 129, 133], "actual": [19, 117, 125, 132, 134, 137, 139, 152], "aim": [19, 134], "part": [19, 34, 35, 118, 122, 123, 125, 135, 136, 140, 151, 152, 202, 254, 256, 258, 259, 261, 263, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 1119, 1120], "subsect": 19, "session": [19, 1085], "block": [19, 123, 125, 133, 134, 136, 140, 152, 355, 757, 797, 1085], "smaller": [19, 54, 55, 99, 100, 135, 140, 903, 904, 907, 938, 939, 940, 941, 942, 1041, 1058, 1061, 1066, 1069], "edit": 19, "exact": [19, 73, 74, 75, 76, 135, 164, 166, 168, 1009, 1010, 1014], "beauti": 19, "particularli": [19, 123, 138, 152], "concern": [19, 117, 121, 129, 132, 134], "effici": [19, 119, 123, 125, 129, 132, 133, 135, 138, 152], "difficult": [19, 123, 152, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "undo": 19, "stress": 19, "frequenc": [19, 672, 699], "pycharm": 19, "pytest": [19, 123], "button": 19, "declar": 19, "insid": [19, 21, 118, 123, 129, 130], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 123], "test_funct": [19, 123], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 75, 76, 81, 82, 123, 272, 300, 301, 302, 346, 347, 672, 688, 692, 711, 757, 792], "q": [19, 152, 798, 814, 815, 830, 832, 859, 861], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "variou": [19, 119, 120, 127, 151], "valu": [19, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 56, 57, 62, 63, 72, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 93, 94, 99, 100, 101, 102, 103, 104, 107, 108, 119, 120, 121, 123, 124, 125, 129, 130, 131, 132, 133, 135, 137, 140, 152, 194, 195, 196, 197, 202, 203, 204, 216, 217, 224, 225, 226, 228, 230, 231, 233, 234, 272, 279, 282, 300, 301, 302, 355, 377, 378, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 407, 409, 410, 411, 412, 413, 419, 420, 421, 422, 423, 424, 425, 426, 428, 464, 467, 479, 480, 481, 483, 484, 487, 489, 492, 494, 496, 498, 499, 501, 503, 504, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 589, 590, 594, 595, 596, 597, 598, 599, 600, 606, 609, 611, 614, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 629, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 688, 693, 699, 700, 701, 702, 703, 704, 705, 711, 714, 718, 728, 729, 730, 731, 732, 734, 756, 757, 759, 760, 761, 762, 763, 764, 766, 768, 769, 780, 782, 793, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 814, 815, 847, 849, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 881, 883, 903, 904, 905, 906, 907, 908, 913, 914, 915, 916, 929, 932, 934, 937, 960, 962, 963, 964, 965, 966, 968, 972, 973, 974, 975, 976, 981, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127], "cpu": [19, 42, 43, 75, 76, 87, 88, 103, 104, 131, 152, 202, 230, 231, 233, 234, 267, 271, 355, 361, 362, 365, 367, 370, 373, 375, 376, 379, 383, 384, 386, 387, 672, 700, 701, 702, 703, 704, 705, 726, 729, 730, 992, 993, 994, 995, 996, 997, 998, 1000, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "gpu": [19, 103, 104, 131, 137, 152, 355, 361, 367, 369, 371, 375, 376, 377, 384, 386, 994, 996], "combin": [19, 72, 75, 76, 77, 78, 121, 123, 125, 128, 129, 140, 815, 821, 823], "wherebi": [20, 129, 968, 980], "broad": 20, "distribut": [20, 52, 53, 75, 76, 97, 98, 103, 104, 123, 131, 152, 798, 810, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 992, 993, 994, 995, 996, 997, 998, 1000, 1107, 1115, 1119, 1120], "across": [20, 75, 76, 119, 121, 123, 125, 129, 130, 355, 376, 377, 672, 680, 681, 968, 974, 1004, 1006], "todo": 20, "commit": [20, 123], "NOT": [20, 388, 579, 582], "static": [20, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 120, 121, 125, 152, 164, 168, 169, 173, 174, 178, 179, 183, 184, 188, 189, 193, 194, 195, 199, 200, 294, 298, 362, 366, 388, 389, 393, 394, 398, 399, 403, 404, 408, 409, 413, 414, 418, 419, 423, 424, 428, 429, 433, 434, 438, 439, 443, 444, 448, 449, 453, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 502, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 583, 584, 588, 589, 593, 596, 600, 601, 605, 606, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 646, 650, 651, 655, 656, 657, 661, 662, 667, 668, 673, 677, 701, 705, 746, 747, 775, 779, 805, 809, 816, 820, 888, 892, 893, 897, 898, 902, 904, 908, 929, 933, 938, 942, 987, 991, 994, 996, 1015, 1016, 1075, 1079, 1080, 1084], "method": [20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 133, 135, 136, 139, 140, 152, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 206, 207, 211, 212, 219, 220, 222, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 271, 272, 294, 295, 296, 298, 304, 307, 310, 313, 362, 363, 364, 366, 379, 380, 381, 382, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 688, 689, 700, 701, 702, 703, 705, 729, 730, 744, 746, 747, 748, 749, 750, 751, 757, 759, 760, 761, 763, 775, 776, 777, 779, 780, 782, 784, 786, 797, 798, 804, 805, 806, 807, 809, 814, 815, 816, 817, 818, 820, 821, 823, 824, 826, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 917, 920, 921, 924, 929, 930, 931, 933, 938, 939, 940, 941, 942, 943, 944, 945, 946, 952, 955, 968, 969, 979, 980, 981, 987, 988, 989, 991, 992, 994, 996, 997, 998, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1107, 1118, 1119, 1120], "instanc": [20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 128, 130, 132, 138, 139, 140, 153, 161, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 294, 295, 296, 297, 304, 307, 310, 313, 323, 326, 333, 336, 355, 362, 363, 364, 375, 379, 380, 381, 382, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 479, 480, 481, 484, 485, 486, 489, 490, 491, 494, 495, 496, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 514, 515, 516, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 534, 535, 536, 539, 540, 541, 544, 545, 546, 547, 549, 550, 551, 554, 555, 556, 559, 560, 561, 564, 565, 566, 569, 570, 571, 574, 575, 576, 579, 580, 581, 584, 585, 586, 589, 590, 591, 594, 595, 596, 597, 598, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 616, 617, 618, 621, 622, 623, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 658, 659, 661, 663, 664, 665, 666, 667, 669, 670, 672, 673, 674, 675, 689, 700, 701, 702, 703, 717, 735, 744, 746, 748, 749, 750, 751, 759, 760, 761, 763, 775, 776, 777, 798, 801, 804, 805, 806, 807, 808, 814, 815, 816, 817, 818, 819, 821, 823, 824, 826, 827, 829, 887, 888, 889, 890, 891, 893, 894, 895, 898, 899, 900, 903, 904, 905, 906, 917, 920, 921, 924, 929, 930, 931, 938, 939, 940, 941, 943, 944, 945, 946, 952, 955, 986, 987, 988, 989, 990, 992, 997, 998, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1096, 1097], "revers": [20, 23, 26, 27, 72, 77, 78, 120, 121, 140, 152, 672, 693, 903, 921, 924], "resourc": 20, "content": [20, 21, 75, 76, 124, 132, 135, 138], "thei": [20, 75, 76, 117, 118, 121, 123, 125, 127, 129, 130, 131, 132, 133, 137, 138, 139, 140, 152, 272, 339, 964, 965, 966, 992, 993, 1085, 1129, 1130], "hypothesi": 20, "cover": [20, 120, 121, 123, 125, 127, 134], "lambda": [20, 135, 138, 1123, 1126, 1128], "direct": [20, 124, 139, 140, 151, 1030, 1036, 1039], "bind": [20, 129], "special": [20, 23, 26, 27, 72, 77, 78, 118, 119, 120, 121, 128, 388, 389, 392, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 459, 462, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 665, 666, 667, 671, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073], "aforement": 20, "categori": [20, 118, 124, 128, 129, 130, 134, 1085], "parent": [20, 137, 757, 797], "arraywithelementwis": [20, 23, 26, 27, 40, 128], "containerwithmanipul": [20, 72, 77, 78, 99], "hint": [20, 118, 119, 120, 125, 128, 132, 133, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 986, 987, 990, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078], "its": [20, 21, 54, 55, 99, 100, 120, 123, 124, 133, 140, 272, 284, 287, 355, 378, 672, 745, 815, 839, 842, 903, 917, 920, 934, 937, 938, 939, 940, 941, 942, 952, 955], "docstr": [20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 125, 129, 133, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 236, 239, 241, 242, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 294, 295, 296, 297, 298, 310, 313, 362, 363, 364, 366, 379, 380, 381, 382, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 675, 677, 701, 702, 703, 705, 746, 747, 748, 749, 759, 760, 761, 763, 775, 776, 777, 779, 805, 806, 807, 809, 815, 816, 817, 818, 820, 824, 826, 827, 829, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 917, 920, 921, 924, 929, 930, 931, 933, 938, 939, 940, 941, 942, 944, 945, 946, 987, 988, 989, 991, 994, 996, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084], "thorough": [20, 119, 120, 123], "transpil": [20, 124, 134, 136, 1085, 1091], "builder": [21, 150, 152, 1085], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 54, 55, 99, 100, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 815, 827, 829, 847, 849, 856, 858, 875, 877, 903, 921, 924, 938, 939, 940, 941, 942, 1030, 1031, 1034, 1036, 1039, 1085], "synchron": 21, "rest": [21, 136, 140], "remove_doc": 21, "_": [21, 40, 41, 85, 86, 120, 123, 129, 132, 137, 138, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 500, 501, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 757, 759, 762, 764, 766, 815, 827, 829, 884, 886, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1030, 1031, 1034, 1041, 1046, 1049], "indic": [21, 42, 43, 48, 49, 54, 55, 56, 57, 75, 76, 87, 88, 93, 94, 99, 100, 101, 102, 124, 133, 136, 140, 163, 184, 187, 388, 631, 634, 672, 700, 701, 702, 703, 704, 705, 713, 726, 729, 730, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 881, 883, 903, 938, 939, 940, 941, 942, 968, 969, 971, 973, 975, 976, 977, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1020, 1024, 1030, 1031, 1034, 1036, 1039, 1085, 1088, 1090, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1119, 1120], "privat": [21, 123, 1123, 1127], "fulfil": [21, 134, 1085], "autogenerated_sourc": 21, "format": [21, 75, 76, 117, 120, 130, 131, 135, 137, 138, 272, 304, 307, 355, 362, 365, 1041, 1042, 1045, 1085], "png": [21, 138], "_imag": 21, "lastli": 21, "structur": [21, 72, 75, 76, 77, 78, 118, 125, 128, 129, 138, 139, 672, 688, 968, 981], "rst": 21, "skip": [21, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 123, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 701, 703, 705, 746, 747, 749, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 968, 981, 987, 989, 991, 1015, 1016, 1018, 1075, 1077, 1079, 1080, 1082, 1084], "read": [21, 75, 76, 1085], "partial_sourc": 21, "conf": 21, "copi": [21, 34, 35, 36, 37, 42, 43, 75, 76, 79, 80, 81, 82, 87, 88, 120, 126, 130, 135, 137, 138, 151, 152, 202, 206, 207, 208, 209, 219, 222, 272, 279, 280, 281, 282, 283, 355, 379, 383, 672, 689, 746, 747, 748, 749, 750, 751, 903, 934, 937, 968, 970, 1030, 1036, 1039], "create_rst_fil": 21, "filter": [21, 48, 49, 93, 94, 123, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "repres": [21, 40, 41, 85, 86, 123, 137, 194, 195, 196, 197, 202, 236, 239, 272, 309, 388, 399, 400, 401, 402, 403, 404, 407, 414, 415, 416, 417, 418, 429, 430, 431, 432, 433, 474, 475, 476, 477, 478, 596, 599, 641, 642, 643, 644, 645, 666, 757, 797, 798, 811, 815, 862, 863, 865], "overal": [21, 120, 129, 130, 131, 140], "markup": 21, "6": [21, 23, 26, 27, 40, 41, 44, 45, 54, 55, 72, 77, 78, 85, 86, 87, 88, 97, 98, 101, 102, 103, 104, 121, 123, 126, 129, 137, 138, 139, 163, 169, 172, 174, 177, 184, 187, 202, 225, 228, 267, 271, 272, 304, 307, 310, 313, 355, 372, 388, 389, 390, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 417, 424, 426, 427, 428, 434, 437, 439, 442, 449, 450, 451, 452, 453, 459, 462, 464, 465, 466, 467, 469, 471, 472, 473, 474, 477, 499, 501, 504, 507, 519, 522, 544, 547, 594, 595, 601, 604, 621, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 646, 649, 651, 654, 661, 665, 666, 672, 681, 690, 700, 701, 704, 705, 722, 744, 757, 759, 760, 762, 798, 801, 804, 805, 808, 814, 815, 821, 823, 824, 826, 827, 829, 853, 855, 866, 868, 872, 874, 887, 888, 890, 891, 892, 893, 895, 897, 898, 900, 901, 902, 903, 904, 905, 907, 909, 912, 917, 920, 921, 924, 929, 932, 934, 937, 938, 941, 943, 944, 947, 952, 955, 968, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 1004, 1005, 1008, 1009, 1010, 1014, 1015, 1019, 1041, 1042, 1045, 1046, 1049], "extract": [21, 118], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 152], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 75, 76, 123, 135, 138, 388, 444, 447, 815, 827, 829, 839, 842], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 40, 41, 44, 45, 54, 55, 72, 77, 78, 85, 86, 89, 90, 103, 104, 121, 123, 138, 139, 272, 303, 310, 313, 388, 404, 405, 406, 407, 408, 414, 417, 434, 437, 439, 442, 594, 595, 626, 628, 629, 630, 631, 634, 646, 649, 651, 654, 672, 700, 722, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 775, 778, 780, 781, 782, 783, 798, 801, 804, 805, 808, 815, 821, 823, 824, 826, 827, 829, 853, 855, 866, 868, 872, 874, 903, 904, 905, 907, 921, 924, 938, 941, 943, 992, 993, 994, 995, 996, 1004, 1008, 1009, 1010, 1014, 1041, 1042, 1045, 1123, 1124, 1125], "index": [21, 34, 35, 42, 43, 62, 63, 75, 76, 79, 80, 87, 88, 107, 108, 125, 129, 137, 201, 202, 216, 217, 236, 237, 238, 239, 240, 355, 375, 672, 678, 700, 701, 702, 703, 704, 705, 903, 948, 951, 968, 971, 972, 975, 976, 977, 982, 984, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1088, 1090], "create_index_rst": 21, "14": [21, 40, 41, 85, 86, 101, 102, 103, 104, 121, 123, 129, 272, 310, 313, 388, 414, 417, 424, 425, 426, 427, 428, 459, 462, 631, 635, 641, 643, 645, 757, 759, 762, 798, 814, 815, 827, 829, 853, 855, 987, 989, 991, 994, 996, 1009, 1010, 1014, 1041, 1042, 1045], "\u03c0": [21, 388, 394, 397, 409, 412, 419, 422, 424, 427], "namespac": [21, 118, 130, 135, 140], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 34], "arraywithdatatyp": [23, 26, 27, 36], "arraywithdevic": [23, 26, 27, 38, 137], "arraywithgener": [23, 26, 27, 42, 137], "arraywithgradi": [23, 26, 27, 44, 137], "arraywithimag": [23, 26, 27, 46, 137], "arraywithlay": [23, 26, 27, 48], "arraywithlinearalgebra": [23, 26, 27, 50], "arraywithloss": [23, 26, 27, 52], "arraywithmanipul": [23, 26, 27, 54], "arraywithnorm": [23, 26, 27, 56], "arraywithrandom": [23, 26, 27, 58, 137], "arraywithsearch": [23, 26, 27, 60], "arraywithset": [23, 26, 27, 62], "arraywithsort": [23, 26, 27, 64], "arraywithstatist": [23, 26, 27, 66], "arraywithutil": [23, 26, 27, 68], "properti": [23, 26, 27, 75, 76, 121, 123, 125, 129, 137, 138, 139, 1119, 1120, 1123, 1124, 1125, 1126, 1128], "__add__": [23, 26, 27, 72, 77, 78, 119, 120, 121, 128, 129, 137], "variant": [23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 121, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 294, 295, 296, 298, 362, 363, 364, 366, 379, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 673, 674, 675, 677, 701, 702, 703, 705, 746, 747, 748, 749, 759, 760, 761, 763, 775, 776, 777, 779, 805, 806, 807, 809, 816, 817, 818, 820, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 904, 905, 906, 908, 929, 930, 931, 933, 938, 939, 940, 942, 944, 945, 946, 987, 988, 989, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084], "wrap": [23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 116, 117, 119, 120, 123, 125, 126, 128, 129, 130, 131, 132, 135, 137, 140, 152, 153, 161, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 294, 295, 296, 298, 362, 363, 364, 366, 379, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 672, 673, 674, 675, 677, 683, 701, 702, 703, 705, 746, 747, 748, 749, 757, 759, 760, 761, 763, 775, 776, 777, 779, 796, 805, 806, 807, 809, 816, 817, 818, 820, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 904, 905, 906, 908, 929, 930, 931, 933, 938, 939, 940, 942, 944, 945, 946, 987, 988, 989, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084], "minim": [23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 132, 135, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 206, 207, 211, 212, 219, 220, 225, 226, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 294, 295, 296, 298, 362, 363, 364, 366, 379, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 673, 674, 675, 677, 701, 702, 703, 705, 746, 747, 748, 749, 759, 760, 761, 763, 775, 776, 777, 779, 805, 806, 807, 809, 816, 817, 818, 820, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 904, 905, 906, 908, 929, 930, 931, 933, 938, 939, 940, 942, 944, 945, 946, 987, 988, 989, 991, 994, 996, 1015, 1016, 1017, 1018, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084], "self": [23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 128, 129, 135, 137, 138, 139, 140, 164, 165, 166, 169, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 186, 189, 190, 191, 194, 196, 197, 206, 207, 211, 212, 213, 219, 220, 221, 225, 226, 227, 236, 237, 238, 241, 242, 243, 249, 250, 251, 254, 256, 257, 259, 261, 262, 267, 269, 270, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 295, 296, 304, 305, 306, 310, 311, 312, 317, 318, 319, 323, 324, 325, 328, 329, 330, 333, 334, 335, 340, 341, 342, 355, 362, 363, 364, 379, 381, 382, 389, 390, 391, 394, 395, 396, 399, 400, 401, 404, 405, 406, 409, 410, 411, 414, 415, 416, 419, 420, 421, 424, 425, 426, 429, 430, 431, 434, 435, 436, 439, 440, 441, 444, 445, 446, 449, 450, 451, 454, 455, 456, 459, 460, 461, 464, 465, 466, 469, 470, 471, 474, 475, 476, 479, 480, 481, 484, 485, 486, 489, 490, 491, 494, 495, 496, 499, 500, 501, 504, 505, 506, 509, 510, 511, 514, 515, 516, 519, 520, 521, 524, 525, 526, 529, 530, 531, 534, 535, 536, 539, 540, 541, 544, 545, 546, 549, 550, 551, 554, 555, 556, 559, 560, 561, 564, 565, 566, 569, 570, 571, 574, 575, 576, 579, 580, 581, 584, 585, 586, 589, 590, 591, 596, 597, 598, 601, 602, 603, 606, 607, 608, 611, 612, 613, 616, 617, 618, 621, 622, 623, 626, 627, 628, 631, 632, 633, 636, 637, 638, 641, 642, 643, 646, 647, 648, 651, 652, 653, 656, 658, 659, 661, 663, 664, 667, 669, 670, 673, 674, 675, 685, 686, 701, 702, 703, 746, 747, 748, 749, 759, 760, 761, 764, 765, 771, 772, 775, 776, 777, 780, 781, 784, 785, 788, 789, 805, 806, 807, 816, 817, 818, 820, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 841, 843, 844, 847, 848, 850, 851, 853, 854, 856, 857, 859, 860, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 878, 879, 881, 882, 884, 885, 888, 889, 890, 893, 894, 895, 898, 899, 900, 904, 905, 906, 909, 910, 911, 913, 914, 915, 917, 918, 919, 921, 922, 923, 925, 926, 927, 929, 930, 931, 934, 935, 936, 938, 939, 940, 944, 945, 946, 948, 949, 950, 952, 953, 954, 956, 957, 958, 960, 961, 962, 987, 988, 989, 998, 999, 1010, 1012, 1013, 1015, 1017, 1018, 1020, 1022, 1023, 1025, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1123, 1127], "input": [23, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 153, 161, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 313, 323, 326, 328, 331, 333, 336, 338, 339, 340, 343, 345, 349, 354, 355, 361, 362, 365, 372, 378, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 684, 685, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 712, 713, 715, 716, 717, 719, 720, 721, 722, 726, 729, 730, 733, 737, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 757, 759, 760, 761, 762, 763, 768, 769, 775, 776, 777, 778, 779, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 971, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122], "numer": [23, 26, 27, 40, 41, 72, 77, 78, 85, 86, 118, 139, 202, 236, 239, 272, 279, 282, 388, 389, 390, 391, 392, 393, 404, 405, 406, 407, 408, 464, 465, 466, 467, 468, 479, 482, 499, 502, 504, 505, 506, 507, 508, 509, 512, 524, 527, 529, 532, 534, 537, 539, 542, 579, 582, 584, 587, 596, 599, 601, 602, 603, 604, 605, 606, 609, 611, 612, 613, 615, 616, 619, 621, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 651, 654, 656, 657, 659, 660, 667, 671, 672, 707, 708, 731, 732, 739, 740, 815, 821, 823, 839, 842, 853, 855, 866, 868, 872, 874, 875, 877, 878, 880, 992, 1003, 1004, 1005, 1006, 1041, 1046, 1049, 1058, 1061, 1066, 1069, 1098], "broadcast": [23, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 120, 121, 123, 129, 130, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 284, 287, 289, 292, 355, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 694, 695, 696, 698, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1025, 1029, 1030, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "element": [23, 26, 27, 34, 35, 40, 41, 42, 43, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 99, 100, 107, 108, 120, 123, 135, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 224, 225, 226, 228, 254, 256, 258, 259, 261, 263, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 680, 681, 684, 685, 687, 690, 691, 698, 713, 746, 747, 748, 749, 750, 751, 757, 797, 798, 810, 815, 821, 823, 830, 832, 839, 842, 859, 861, 866, 868, 903, 904, 905, 906, 907, 908, 921, 924, 929, 932, 938, 939, 940, 941, 942, 943, 944, 947, 968, 971, 992, 993, 1004, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1078, 1080, 1083, 1107, 1115], "wise": [23, 26, 27, 40, 41, 72, 73, 74, 75, 76, 77, 78, 85, 86, 135, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 198, 388, 389, 392, 394, 397, 404, 405, 406, 407, 408, 409, 412, 419, 422, 424, 427, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 606, 607, 608, 609, 610, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 656, 657, 658, 659, 660, 672, 698, 903, 904, 907, 1123, 1126], "sum": [23, 26, 27, 40, 41, 66, 67, 72, 75, 76, 77, 78, 85, 86, 111, 112, 125, 129, 130, 132, 135, 355, 378, 388, 404, 405, 406, 407, 408, 569, 572, 656, 657, 659, 672, 691, 695, 729, 730, 798, 814, 815, 866, 868, 875, 877, 881, 883, 1041, 1042, 1045, 1062, 1065], "promot": [23, 26, 27, 36, 37, 40, 41, 50, 51, 72, 77, 78, 81, 82, 85, 86, 95, 96, 120, 125, 130, 194, 195, 196, 197, 272, 279, 282, 294, 295, 296, 297, 298, 339, 340, 343, 349, 388, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 494, 495, 496, 497, 498, 499, 501, 502, 503, 509, 510, 511, 513, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 589, 592, 596, 597, 598, 599, 600, 616, 617, 618, 619, 620, 621, 622, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 815, 816, 817, 818, 819, 820, 821, 823, 836, 838, 839, 842, 847, 849, 853, 855, 856, 858, 863, 865, 878, 880, 881, 883, 903, 948, 951, 1041, 1050, 1053], "y": [23, 24, 25, 26, 27, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 73, 74, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 113, 114, 118, 121, 124, 126, 129, 135, 137, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 224, 225, 228, 236, 239, 246, 247, 249, 252, 267, 271, 272, 279, 282, 304, 307, 310, 313, 355, 362, 365, 368, 372, 377, 388, 389, 390, 391, 392, 393, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 434, 437, 439, 442, 449, 450, 451, 452, 453, 454, 457, 459, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 494, 497, 499, 500, 501, 502, 504, 505, 506, 507, 519, 522, 544, 547, 594, 595, 601, 604, 606, 609, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 654, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 680, 681, 689, 690, 697, 698, 700, 701, 702, 703, 704, 705, 737, 744, 746, 747, 748, 749, 750, 751, 757, 768, 769, 798, 804, 805, 806, 807, 808, 809, 811, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 836, 838, 853, 855, 872, 874, 875, 877, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 917, 920, 921, 924, 929, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 952, 955, 968, 971, 984, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1041, 1042, 1045, 1046, 1049, 1062, 1065, 1066, 1069, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084], "z": [23, 26, 27, 40, 41, 42, 43, 52, 53, 72, 77, 78, 85, 86, 87, 88, 97, 98, 121, 126, 129, 135, 137, 355, 368, 388, 404, 405, 406, 407, 408, 424, 425, 426, 427, 428, 434, 437, 449, 450, 451, 452, 453, 459, 462, 519, 522, 544, 547, 594, 595, 672, 680, 681, 700, 701, 702, 703, 705, 737, 815, 821, 823, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 907, 968, 971, 984, 1004, 1005, 1041, 1042, 1045, 1046, 1049], "mix": [23, 26, 27, 40, 41, 42, 43, 72, 77, 78, 85, 86, 97, 98, 117, 121, 123, 135, 272, 340, 343, 355, 372, 388, 404, 407, 434, 437, 449, 452, 459, 462, 519, 522, 544, 547, 606, 609, 621, 622, 623, 624, 625, 672, 673, 674, 689, 697, 700, 701, 704, 744, 746, 750, 751, 798, 801, 804, 805, 808, 814, 815, 816, 819, 872, 874, 887, 888, 891, 892, 893, 897, 898, 901, 902, 903, 904, 907, 986, 987, 990, 1004, 1008, 1041, 1042, 1045, 1050, 1053], "__le__": [23, 26, 27], "equal": [23, 26, 27, 34, 35, 40, 41, 42, 43, 75, 76, 85, 86, 87, 88, 121, 129, 130, 202, 216, 217, 224, 225, 226, 228, 272, 279, 282, 388, 444, 447, 454, 457, 488, 524, 527, 529, 532, 616, 619, 626, 629, 672, 673, 674, 675, 676, 677, 680, 681, 815, 827, 829, 847, 849, 856, 858, 903, 904, 907, 913, 916, 943, 960, 963, 992, 998, 1000, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1050, 1053, 1062, 1065, 1066, 1069, 1070, 1073], "result": [23, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 120, 121, 123, 124, 128, 129, 130, 132, 138, 152, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 233, 234, 246, 247, 249, 250, 252, 254, 256, 258, 259, 261, 263, 264, 266, 267, 269, 271, 272, 279, 282, 289, 292, 340, 343, 355, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 687, 690, 691, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 713, 726, 729, 730, 757, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 968, 971, 981, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1014, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "bool": [23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 68, 69, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 121, 129, 130, 132, 133, 140, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 199, 200, 202, 224, 272, 279, 282, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 338, 345, 354, 355, 361, 362, 365, 369, 370, 373, 374, 378, 385, 387, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 448, 449, 451, 452, 453, 454, 456, 458, 459, 461, 462, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 596, 598, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 674, 675, 676, 677, 680, 681, 690, 693, 697, 699, 701, 703, 705, 709, 710, 712, 717, 719, 720, 721, 722, 737, 738, 746, 747, 749, 755, 756, 757, 775, 776, 777, 778, 779, 793, 797, 815, 816, 817, 818, 819, 820, 843, 845, 866, 868, 881, 883, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 904, 906, 908, 938, 940, 942, 943, 964, 965, 966, 967, 968, 969, 970, 974, 978, 979, 980, 987, 989, 992, 993, 1004, 1005, 1006, 1015, 1016, 1018, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1123, 1124, 1125, 1126, 1127, 1128], "true": [23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 125, 129, 130, 132, 133, 135, 137, 138, 139, 140, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 199, 200, 202, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 231, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 279, 280, 281, 282, 283, 284, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 304, 306, 308, 310, 312, 314, 317, 319, 321, 323, 325, 326, 327, 328, 330, 332, 333, 335, 336, 337, 338, 340, 342, 344, 354, 355, 361, 370, 374, 375, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 437, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 462, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 685, 686, 690, 697, 699, 701, 703, 705, 709, 712, 713, 720, 722, 733, 735, 737, 738, 744, 746, 747, 749, 751, 753, 754, 756, 757, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 797, 798, 810, 815, 816, 817, 818, 819, 820, 839, 841, 843, 845, 866, 867, 868, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 943, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 964, 965, 966, 967, 968, 969, 978, 979, 981, 987, 989, 991, 992, 993, 998, 999, 1001, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "__radd__": [23, 26, 27, 72, 77, 78, 120, 121], "adam_upd": [23, 26, 27, 89, 90, 139, 757], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "variabl": [23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 45, 56, 57, 72, 75, 76, 77, 78, 89, 90, 101, 102, 119, 120, 123, 126, 129, 130, 132, 133, 138, 139, 140, 152, 672, 682, 715, 716, 717, 718, 719, 720, 722, 741, 757, 764, 766, 768, 769, 771, 773, 775, 776, 777, 778, 779, 780, 782, 784, 786, 788, 790, 793, 796, 798, 813, 815, 863, 865, 964, 965, 966, 967, 986, 987, 988, 989, 990, 991, 1085, 1096, 1097, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "arang": [23, 26, 27, 72, 77, 78, 130, 202, 230, 231, 233, 234, 1041, 1042, 1045, 1085], "arg_info": [23, 26, 27, 72, 77, 78, 672], "arg_nam": [23, 26, 27, 72, 77, 78, 672], "argmax": [23, 26, 27, 72, 77, 78, 1004, 1085], "argmin": [23, 26, 27, 72, 77, 78, 1004, 1085], "array_equ": [23, 26, 27, 72, 77, 78, 672], "arrays_equ": [23, 26, 27, 72, 75, 76, 77, 78, 672], "as_ivy_dev": [23, 26, 27, 72, 77, 78, 137, 355], "as_ivy_dtyp": [23, 26, 27, 72, 77, 78, 124, 272], "as_native_dev": [23, 26, 27, 72, 77, 78, 355], "as_native_dtyp": [23, 26, 27, 72, 77, 78, 272], "assert_supports_inplac": [23, 26, 27, 72, 77, 78, 672], "cache_fn": [23, 26, 27, 72, 77, 78, 125, 672], "clear_mem_on_dev": [23, 26, 27, 72, 77, 78, 355], "clip_matrix_norm": [23, 26, 27, 72, 77, 78, 672], "clip_vector_norm": [23, 26, 27, 87, 88, 672], "closest_valid_dtyp": [23, 26, 27, 72, 77, 78, 272], "container_typ": [23, 26, 27, 72, 77, 78, 672], "conv1d": [23, 26, 27, 72, 77, 78, 798, 1107], "conv1d_transpos": [23, 26, 27, 72, 77, 78, 798], "conv2d": [23, 26, 27, 72, 77, 78, 798, 1085, 1107], "conv2d_transpos": [23, 26, 27, 72, 77, 78, 798], "conv3d": [23, 26, 27, 72, 77, 78, 798, 1107], "conv3d_transpos": [23, 26, 27, 72, 77, 78, 798], "copy_arrai": [23, 26, 27, 72, 77, 78, 672], "cumprod": [23, 26, 27, 72, 77, 78, 140, 672], "cumsum": [23, 26, 27, 72, 77, 78, 672, 1085], "current_backend_str": [23, 26, 27, 72, 77, 78, 672], "default_devic": [23, 26, 27, 72, 77, 78, 131, 135, 355, 372, 375, 376, 386], "default_dtyp": [23, 26, 27, 72, 77, 78, 125, 130, 272], "default_float_dtyp": [23, 26, 27, 72, 77, 78, 130, 272], "default_int_dtyp": [23, 26, 27, 72, 77, 78, 130, 272], "default_uint_dtyp": [23, 26, 27, 72, 77, 78, 272, 348, 353], "dev_util": [23, 26, 27, 72, 77, 78, 131, 355], "dropout": [23, 26, 27, 72, 77, 78, 138, 798, 1107, 1118], "dtype": [23, 26, 27, 34, 35, 36, 37, 66, 67, 75, 76, 79, 80, 81, 82, 87, 88, 111, 112, 118, 121, 123, 124, 125, 130, 131, 133, 137, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 313, 315, 316, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 340, 341, 343, 345, 346, 347, 348, 353, 354, 355, 374, 388, 454, 457, 672, 680, 681, 726, 746, 747, 749, 750, 798, 810, 903, 917, 920, 992, 998, 1000, 1004, 1005, 1006, 1030, 1036, 1039, 1041, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1069, 1074, 1075, 1078, 1085, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1129, 1130], "dtype_bit": [23, 26, 27, 72, 77, 78, 272], "einops_rearrang": [23, 26, 27, 75, 76, 672], "einops_reduc": [23, 26, 27, 75, 76, 672], "einops_repeat": [23, 26, 27, 75, 76, 672], "empti": [23, 26, 27, 72, 75, 76, 77, 78, 128, 130, 131, 202, 203, 204, 757, 797, 1041, 1062, 1065, 1066, 1069, 1074, 1075, 1078, 1080, 1083], "execute_with_gradi": [23, 26, 27, 72, 77, 78, 129, 138, 139, 140, 152, 757, 1085], "ey": [23, 26, 27, 72, 77, 78, 140, 202, 798, 801, 805, 808], "floormod": [23, 26, 27, 72, 77, 78, 672, 1085], "fourier_encod": [23, 26, 27, 72, 77, 78, 672], "function_supported_dtyp": [23, 26, 27, 72, 77, 78, 272], "function_unsupported_dtyp": [23, 26, 27, 72, 77, 78, 272], "gather": [23, 26, 27, 42, 43, 75, 76, 87, 88, 672, 701, 702, 703, 704, 705], "get_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 672], "get_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 131, 355], "get_min_bas": [23, 26, 27, 72, 77, 78, 672], "get_min_denomin": [23, 26, 27, 72, 77, 78, 672], "get_nestable_mod": [23, 26, 27, 72, 77, 78, 672, 733, 753], "get_num_dim": [23, 26, 27, 72, 77, 78, 672, 1085], "get_referrers_recurs": [23, 26, 27, 72, 77, 78, 672], "gpu_is_avail": [23, 26, 27, 72, 77, 78, 355], "gradient_descent_upd": [23, 26, 27, 89, 90, 757, 964, 965, 966, 967, 1085], "handle_nest": [23, 26, 27, 72, 77, 78, 125, 129, 153], "handle_out_argu": [23, 26, 27, 72, 77, 78, 119, 127, 130, 131, 132, 153], "has_nan": [23, 26, 27, 75, 76, 672], "indices_wher": [23, 26, 27, 72, 77, 78, 133, 672, 1085], "infer_devic": [23, 26, 27, 72, 77, 78, 119, 130, 131, 153], "infer_dtyp": [23, 26, 27, 72, 77, 78, 119, 130, 131, 153], "inplace_arrays_support": [23, 26, 27, 72, 77, 78, 672], "inplace_decr": [23, 26, 27, 72, 77, 78, 672], "inplace_incr": [23, 26, 27, 72, 77, 78, 672], "inplace_upd": [23, 26, 27, 75, 76, 132, 672, 1096, 1097], "inplace_variables_support": [23, 26, 27, 72, 77, 78, 672], "inputs_to_native_arrai": [23, 26, 27, 72, 77, 78, 128, 153], "invalid_dtyp": [23, 26, 27, 72, 77, 78, 130, 272], "is_arrai": [23, 26, 27, 124, 672], "is_ivy_arrai": [23, 26, 27, 132, 137, 672], "is_ivy_contain": [23, 26, 27, 72, 77, 78, 672], "is_native_arrai": [23, 26, 27, 137, 672], "is_uint_dtyp": [23, 26, 27, 72, 77, 78, 272], "is_vari": [23, 26, 27, 44, 45, 89, 90, 132, 757, 779], "boolean": [23, 26, 27, 40, 41, 42, 43, 44, 45, 75, 76, 85, 86, 87, 88, 89, 90, 123, 129, 202, 224, 272, 279, 282, 322, 354, 355, 369, 385, 388, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 672, 673, 674, 675, 676, 677, 680, 681, 712, 713, 714, 718, 719, 720, 721, 722, 733, 735, 741, 756, 757, 775, 776, 777, 778, 779, 797, 964, 965, 966, 968, 978, 1041, 1054, 1057], "trainabl": [23, 26, 27, 44, 45, 89, 90, 120, 136, 138, 139, 757, 775, 776, 777, 778, 779, 1096, 1097, 1119, 1120, 1129], "lamb_upd": [23, 26, 27, 89, 90, 757], "lars_upd": [23, 26, 27, 89, 90, 757], "linear": [23, 26, 27, 72, 73, 74, 77, 78, 120, 135, 138, 139, 140, 163, 164, 167, 169, 172, 174, 176, 177, 178, 672, 699, 798, 810, 863, 865, 1085, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "linspac": [23, 26, 27, 72, 77, 78, 135, 202, 203, 204, 1085], "logspac": [23, 26, 27, 72, 77, 78, 135, 202], "lstm_updat": [23, 26, 27, 72, 77, 78, 135, 798], "mt": [23, 26, 27, 137], "match_kwarg": [23, 26, 27, 72, 77, 78, 672], "matrix_pow": [23, 26, 27, 72, 77, 78, 815], "maximum": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 99, 100, 121, 135, 138, 140, 355, 378, 388, 672, 684, 685, 687, 699, 757, 780, 782, 903, 904, 905, 906, 907, 908, 968, 980, 1004, 1005, 1041, 1046, 1049, 1054, 1057, 1085], "minimum": [23, 26, 27, 54, 55, 75, 76, 99, 100, 135, 140, 388, 389, 392, 672, 707, 708, 731, 732, 739, 740, 903, 904, 905, 906, 907, 908, 1004, 1006, 1041, 1046, 1049, 1054, 1057, 1085], "multi_head_attent": [23, 26, 27, 72, 77, 78, 129, 132, 798], "multinomi": [23, 26, 27, 72, 77, 78, 992], "multiprocess": [23, 26, 27, 72, 75, 76, 77, 78, 138, 152, 672], "ndim": [23, 26, 27, 123, 137, 815, 859, 861, 866, 868], "dimens": [23, 26, 27, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 113, 114, 121, 123, 124, 135, 138, 163, 184, 187, 202, 254, 256, 258, 259, 261, 263, 672, 694, 695, 696, 699, 710, 726, 755, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877, 878, 880, 881, 883, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 909, 912, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 964, 965, 966, 967, 992, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1117, 1118], "ax": [23, 26, 27, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 99, 100, 113, 114, 118, 121, 123, 130, 137, 184, 186, 188, 355, 378, 672, 690, 815, 843, 845, 863, 865, 872, 873, 874, 881, 883, 903, 913, 916, 921, 924, 925, 926, 927, 928, 938, 939, 940, 941, 942, 944, 947, 952, 955, 960, 963, 1004, 1005, 1006, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "nonzero": [23, 26, 27, 72, 77, 78, 388, 404, 407, 596, 599, 1004], "num_arrays_in_memori": [23, 26, 27, 72, 77, 78, 672], "num_cpu_cor": [23, 26, 27, 72, 77, 78, 131, 355], "num_gpu": [23, 26, 27, 72, 77, 78, 123, 131, 355], "num_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 355], "one_hot": [23, 26, 27, 72, 77, 78, 140, 672, 1085], "ones": [23, 26, 27, 34, 35, 72, 75, 76, 77, 78, 123, 135, 137, 138, 202, 216, 217, 249, 250, 252, 267, 271, 388, 464, 467, 672, 726, 1085], "optimizer_upd": [23, 26, 27, 89, 90, 757], "outputs_to_ivy_arrai": [23, 26, 27, 72, 77, 78, 119, 128, 130, 131, 153], "percent_used_mem_on_dev": [23, 26, 27, 72, 77, 78, 355], "print_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 672], "print_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 355], "promote_typ": [23, 26, 27, 72, 77, 78, 272], "queue_timeout": [23, 26, 27, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 672], "randint": [23, 26, 27, 48, 49, 72, 77, 78, 93, 94, 103, 104, 805, 806, 807, 809, 992, 996, 1085], "random_norm": [23, 26, 27, 48, 49, 72, 77, 78, 93, 94, 123, 798, 801, 804, 805, 806, 807, 808, 809, 815, 866, 868, 992, 1009, 1010, 1014], "random_uniform": [23, 26, 27, 103, 104, 123, 131, 139, 992, 1085], "scaled_dot_product_attent": [23, 26, 27, 72, 77, 78, 798], "scatter_flat": [23, 26, 27, 72, 77, 78, 672], "scatter_nd": [23, 26, 27, 72, 77, 78, 137, 672, 1085], "seed": [23, 26, 27, 72, 75, 76, 77, 78, 992, 1085], "set_default_devic": [23, 26, 27, 72, 77, 78, 131, 355, 386], "set_default_dtyp": [23, 26, 27, 72, 77, 78, 125, 130, 272], "set_default_float_dtyp": [23, 26, 27, 72, 77, 78, 130, 272], "set_default_int_dtyp": [23, 26, 27, 72, 77, 78, 130, 272], "set_default_uint_dtyp": [23, 26, 27, 72, 77, 78, 272, 303, 353], "set_min_bas": [23, 26, 27, 72, 77, 78, 672], "set_min_denomin": [23, 26, 27, 72, 77, 78, 672], "set_nestable_mod": [23, 26, 27, 72, 77, 78, 672, 709, 753], "set_queue_timeout": [23, 26, 27, 72, 77, 78, 672], "set_shape_array_mod": [23, 26, 27, 72, 77, 78, 672, 738, 754], "set_split_factor": [23, 26, 27, 72, 77, 78, 355], "set_tmp_dir": [23, 26, 27, 72, 77, 78, 672], "set_with_grad": [23, 26, 27, 72, 77, 78, 757, 797], "shape_array_mod": [23, 26, 27, 72, 77, 78, 672, 735, 754], "shuffl": [23, 26, 27, 75, 76, 992, 1085], "size": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 99, 100, 123, 137, 138, 202, 230, 231, 233, 234, 355, 376, 377, 378, 672, 729, 798, 814, 815, 827, 829, 843, 845, 853, 855, 859, 861, 866, 868, 878, 880, 903, 917, 920, 938, 939, 940, 941, 942, 943, 944, 947, 992, 993, 997, 998, 1000, 1004, 1005, 1007, 1074, 1075, 1078, 1080, 1083, 1107, 1108, 1109], "product": [23, 26, 27, 40, 41, 129, 388, 596, 597, 599, 672, 690, 798, 813, 814, 815, 821, 823, 839, 842, 853, 855, 872, 874, 878, 880, 1041, 1042, 1045, 1058, 1061, 1107, 1118], "unknown": [23, 26, 27], "model": [23, 26, 27, 138, 139, 1085], "slogdet": [23, 26, 27, 72, 77, 78, 815], "split_factor": [23, 26, 27, 72, 77, 78, 355, 376], "split_func_cal": [23, 26, 27, 72, 77, 78, 355], "stable_divid": [23, 26, 27, 72, 77, 78, 125, 672], "stable_pow": [23, 26, 27, 72, 77, 78, 672], "stop_gradi": [23, 26, 27, 72, 75, 76, 77, 78, 89, 90, 139, 355, 378, 757, 764, 765, 766, 767, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 964, 965, 966, 967, 1085, 1123, 1124, 1125, 1126, 1127, 1128], "supports_inplac": [23, 26, 27, 72, 77, 78, 672], "tmp_dir": [23, 26, 27, 72, 77, 78, 672], "to_ivy_shap": [23, 26, 27, 72, 77, 78, 672], "to_list": [23, 26, 27, 75, 76, 672, 1085], "to_native_arrays_and_back": [23, 26, 27, 72, 77, 78, 119, 127, 153], "to_native_shap": [23, 26, 27, 72, 77, 78, 672], "to_scalar": [23, 26, 27, 72, 77, 78, 672], "total_mem_on_dev": [23, 26, 27, 72, 77, 78, 131, 355], "tpu_is_avail": [23, 26, 27, 72, 77, 78, 355], "try_else_non": [23, 26, 27, 72, 77, 78, 672], "type_promote_arrai": [23, 26, 27, 72, 77, 78, 272], "unset_default_devic": [23, 26, 27, 72, 77, 78, 355], "unset_default_dtyp": [23, 26, 27, 72, 77, 78, 272, 345], "unset_default_float_dtyp": [23, 26, 27, 72, 77, 78, 272], "unset_default_int_dtyp": [23, 26, 27, 72, 77, 78, 272], "unset_default_uint_dtyp": [23, 26, 27, 72, 77, 78, 272], "unset_nestable_mod": [23, 26, 27, 72, 77, 78, 672], "unset_shape_array_mod": [23, 26, 27, 72, 77, 78, 672], "unset_with_grad": [23, 26, 27, 72, 77, 78, 757], "unstack": [23, 26, 27, 75, 76, 129, 135, 138, 672, 1085], "used_mem_on_dev": [23, 26, 27, 72, 77, 78, 355], "valid_dtyp": [23, 26, 27, 72, 77, 78, 272], "value_is_nan": [23, 26, 27, 72, 77, 78, 672], "variable_data": [23, 26, 27, 72, 77, 78, 757], "with_grad": [23, 26, 27, 72, 77, 78, 757, 792], "abc": [24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 137, 355, 357, 672, 697, 968, 985, 1119, 1120, 1123, 1127], "gelu": [24, 25, 73, 74, 163, 168, 1093], "approxim": [24, 25, 73, 74, 120, 163, 164, 165, 166, 167, 168, 388, 394, 397, 399, 402, 409, 412, 414, 417, 419, 422, 424, 427, 469, 472, 474, 477, 494, 497, 499, 502, 549, 552, 554, 557, 559, 562, 564, 567, 616, 619, 636, 639, 641, 644, 661, 665, 666, 815, 847, 849, 856, 858], "185": [24, 25, 73, 74, 164, 165, 166, 168], "046": [24, 25, 73, 74, 164, 165, 166, 168], "leaky_relu": [24, 25, 73, 74, 123, 163, 173, 1085], "alpha": [24, 25, 73, 74, 123, 124, 163, 169, 170, 171, 172, 173], "39": [24, 25, 73, 74, 163, 169, 170, 171, 172, 173, 388, 414, 417, 494, 497, 757, 759, 762, 815, 853, 855, 1041, 1042, 1045], "85": [24, 25, 73, 74, 163, 169, 170, 171, 172, 173, 388, 459, 462], "17": [24, 25, 73, 74, 121, 129, 163, 169, 170, 171, 172, 173, 815, 827, 829, 992, 997], "relu": [24, 25, 70, 71, 73, 74, 138, 139, 163, 169, 171, 172, 173, 178, 1085], "sigmoid": [24, 25, 73, 74, 135, 138, 139, 163, 183, 1085], "269": [24, 25, 73, 74, 163, 179, 180, 181, 182, 183], "731": [24, 25, 73, 74, 163, 179, 180, 181, 182, 183], "881": [24, 25, 40, 41, 73, 74, 85, 86, 163, 179, 180, 181, 182, 183, 388, 414, 415, 416, 417], "softmax": [24, 25, 70, 71, 73, 74, 163, 188, 798, 813, 814, 1085], "axi": [24, 25, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 80, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 119, 121, 123, 124, 125, 129, 130, 132, 133, 135, 137, 140, 151, 163, 184, 185, 186, 187, 188, 202, 230, 231, 232, 233, 234, 235, 355, 378, 672, 690, 691, 700, 755, 815, 821, 822, 823, 827, 829, 878, 879, 880, 881, 882, 883, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 909, 910, 911, 912, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 929, 930, 931, 932, 933, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 956, 959, 960, 963, 992, 1003, 1004, 1005, 1006, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "422": [24, 25, 73, 74, 163, 184, 185, 186, 187, 188], "155": [24, 25, 73, 74, 163, 184, 185, 186, 187, 188], "softplu": [24, 25, 73, 74, 163, 193, 1085], "3461": [24, 25, 73, 74, 163, 189, 190, 191, 192, 193], "6491": [24, 25, 73, 74, 163, 189, 190, 191, 192, 193], "535": [24, 25, 73, 74, 163, 189, 190, 191, 192, 193], "42": [24, 25, 73, 74, 101, 102, 103, 104, 140, 163, 189, 190, 191, 192, 193, 757, 759, 762, 815, 853, 855, 987, 989, 991, 992, 994, 996, 1002, 1041, 1042, 1045], "tanh": [24, 25, 40, 41, 73, 74, 85, 86, 135, 163, 195, 388, 1085], "55": [24, 25, 73, 74, 163, 194, 198, 798, 804, 815, 853, 855, 1041, 1042, 1045], "501": [24, 25, 73, 74, 163, 194, 198], "collect": [29, 75, 76, 123, 151, 163, 199, 355, 672, 757, 798, 887, 968, 981, 986, 992, 1093, 1107, 1121, 1123], "args_to_ivi": 29, "include_deriv": [29, 30, 31, 32, 33, 968, 970, 980], "keyword": [29, 30, 31, 72, 75, 76, 77, 78, 118, 119, 123, 124, 130, 131, 132, 138, 202, 236, 239, 672, 679, 723, 968, 974, 1041, 1066, 1069, 1119, 1120], "nest": [29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 118, 123, 125, 128, 129, 137, 138, 139, 152, 672, 744, 757, 797, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128], "unchang": [29, 30, 31, 32, 33], "posit": [29, 30, 31, 40, 41, 50, 51, 54, 55, 85, 86, 95, 96, 99, 100, 119, 123, 124, 138, 151, 201, 202, 216, 217, 272, 310, 313, 388, 389, 392, 524, 527, 529, 530, 531, 532, 533, 596, 599, 615, 621, 624, 672, 699, 815, 816, 817, 818, 819, 820, 903, 917, 920, 938, 939, 940, 941, 942, 992, 1002, 1004, 1007, 1074, 1075, 1078, 1080, 1083, 1096, 1097], "deriv": [29, 30, 31, 32, 33, 34, 35, 44, 45, 89, 90, 130, 131, 137, 139, 202, 211, 212, 214, 225, 226, 228, 249, 250, 252, 267, 269, 271, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 968, 970, 980, 1119, 1123, 1127, 1129], "tupl": [29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 118, 119, 123, 124, 129, 130, 131, 133, 137, 138, 139, 152, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 202, 206, 207, 208, 241, 244, 272, 289, 292, 294, 296, 298, 315, 316, 349, 355, 361, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 699, 701, 703, 705, 746, 747, 749, 775, 777, 779, 798, 801, 804, 805, 806, 807, 808, 809, 812, 815, 816, 818, 820, 847, 849, 856, 858, 866, 867, 868, 872, 874, 881, 883, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 904, 906, 908, 909, 912, 913, 916, 921, 924, 925, 928, 938, 939, 940, 941, 942, 944, 947, 948, 951, 960, 963, 964, 965, 966, 967, 968, 970, 971, 973, 975, 976, 977, 979, 980, 982, 983, 984, 985, 987, 989, 991, 1004, 1007, 1009, 1015, 1016, 1018, 1019, 1020, 1024, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "kei": [29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 123, 129, 133, 138, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 678, 688, 701, 703, 705, 746, 747, 749, 775, 777, 779, 798, 813, 814, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 964, 965, 966, 968, 971, 977, 981, 987, 989, 991, 994, 996, 1015, 1016, 1018, 1075, 1077, 1079, 1080, 1082, 1084, 1096, 1097, 1107, 1118, 1123, 1127], "word": [29, 30, 31, 129, 202, 203, 204, 992, 998, 1000, 1096, 1097], "args_to_n": [29, 132, 137], "to_ivi": [29, 75, 76, 137, 968, 981], "leaf": [29, 32, 33, 75, 76, 125, 129, 138, 968, 969, 978, 979], "union": [29, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 125, 128, 129, 130, 131, 132, 133, 135, 140, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 224, 225, 226, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 258, 259, 263, 264, 266, 267, 269, 271, 272, 277, 278, 279, 282, 284, 287, 289, 292, 294, 296, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 313, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 340, 343, 345, 346, 347, 348, 349, 354, 355, 358, 359, 360, 361, 362, 363, 365, 367, 368, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 680, 681, 684, 685, 687, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 710, 712, 713, 715, 716, 717, 722, 726, 729, 730, 737, 743, 744, 745, 746, 747, 749, 750, 751, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 775, 777, 778, 779, 780, 782, 784, 786, 788, 790, 793, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 814, 815, 816, 818, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 867, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 979, 980, 984, 985, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1123, 1124, 1125, 1127], "nativearrai": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 73, 74, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 113, 114, 118, 119, 121, 125, 128, 129, 132, 133, 135, 137, 140, 153, 161, 163, 164, 167, 168, 169, 172, 173, 174, 177, 178, 179, 182, 183, 184, 187, 188, 189, 192, 193, 194, 198, 202, 203, 204, 206, 208, 211, 214, 225, 228, 230, 231, 233, 234, 236, 239, 241, 242, 244, 249, 252, 254, 258, 259, 263, 267, 271, 272, 279, 282, 284, 287, 289, 292, 294, 297, 304, 307, 310, 313, 317, 320, 323, 326, 328, 331, 333, 336, 338, 340, 343, 349, 355, 361, 362, 365, 372, 378, 379, 383, 388, 389, 392, 393, 394, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 472, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 557, 558, 559, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 634, 635, 636, 639, 641, 644, 646, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 668, 671, 672, 673, 674, 676, 680, 681, 684, 685, 687, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 710, 712, 713, 715, 716, 717, 722, 726, 729, 730, 737, 744, 746, 747, 750, 751, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 775, 778, 779, 780, 782, 784, 786, 788, 790, 793, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 814, 815, 816, 819, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 934, 937, 938, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 968, 970, 971, 980, 984, 985, 986, 987, 990, 992, 993, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1078, 1079, 1080, 1083, 1084], "travers": [29, 32, 33, 75, 76, 129, 135, 137, 968, 980], "lowest": [29, 32, 33, 75, 76, 103, 104, 125, 152, 968, 980, 992, 994, 995, 996], "leav": [29, 32, 33, 72, 75, 76, 77, 78, 119, 120, 121, 123, 125, 129, 130, 132, 138, 139, 903, 948, 951, 968, 969, 970, 978, 979, 980], "to_n": [29, 75, 76], "item": [29, 33, 70, 71, 75, 76, 130, 135, 137, 138, 140, 272, 300, 355, 361, 672, 688, 711, 739, 740, 968, 973, 974, 975, 976, 980, 984, 985, 1085, 1119, 1120], "asarrai": [34, 35, 72, 77, 78, 123, 132, 202, 798, 799, 1009, 1015, 1019], "nativedtyp": [34, 35, 118, 119, 130, 131, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 224, 225, 226, 228, 241, 242, 244, 246, 247, 249, 250, 252, 264, 266, 267, 269, 271, 272, 278, 279, 282, 301, 302, 303, 304, 307, 339, 345, 354, 1041, 1066, 1069], "datatyp": [34, 35, 75, 76, 81, 82, 202, 206, 207, 208, 241, 242, 244, 272, 299, 339, 345], "nativedevic": [34, 35, 38, 39, 103, 104, 118, 119, 130, 131, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 224, 225, 226, 228, 230, 231, 233, 234, 241, 242, 244, 246, 247, 249, 250, 252, 264, 266, 267, 269, 271, 355, 359, 360, 361, 362, 363, 365, 367, 368, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 387, 672, 726, 992, 993, 994, 995, 996, 997, 998, 1000, 1123, 1124, 1125, 1127], "interpret": [34, 35, 202, 206, 207, 208, 241, 242, 244], "empty_lik": [34, 35, 79, 80, 202], "uniniti": [34, 35, 202, 210, 211, 212, 214], "from_dlpack": [34, 35, 79, 80, 202], "full_lik": [34, 35, 79, 80, 202], "fill_valu": [34, 35, 79, 80, 130, 202, 224, 225, 226, 227, 228, 229, 388, 519, 522, 544, 547], "float": [34, 35, 40, 41, 44, 45, 50, 51, 52, 53, 56, 57, 85, 86, 89, 90, 95, 96, 97, 98, 101, 102, 119, 120, 123, 125, 129, 130, 132, 137, 139, 163, 169, 172, 194, 195, 196, 197, 201, 202, 203, 204, 210, 216, 217, 224, 225, 226, 228, 230, 231, 233, 234, 246, 247, 264, 266, 272, 279, 282, 301, 310, 313, 328, 331, 340, 343, 355, 367, 373, 376, 377, 384, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 459, 462, 464, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 484, 487, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 507, 509, 512, 514, 517, 519, 522, 539, 542, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 684, 685, 687, 699, 707, 708, 731, 732, 739, 740, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 801, 805, 808, 814, 815, 816, 817, 818, 819, 820, 824, 826, 830, 832, 833, 835, 836, 838, 847, 849, 856, 858, 859, 861, 863, 865, 866, 868, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 964, 965, 966, 967, 986, 987, 988, 989, 990, 992, 997, 998, 1000, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1123, 1124, 1125, 1126, 1127, 1128], "scalar": [34, 35, 73, 74, 130, 135, 140, 152, 169, 171, 173, 202, 225, 226, 228, 672, 726, 751, 756, 815, 881, 883], "fill": [34, 35, 75, 76, 103, 104, 202, 210, 224, 225, 226, 228, 246, 247, 249, 250, 252, 264, 266, 267, 269, 271, 992, 994, 995, 996], "meshgrid": [34, 35, 79, 80, 202], "xy": [34, 35, 79, 80, 202, 236, 237, 238, 239, 240], "ones_lik": [34, 35, 79, 80, 140, 202, 1085], "tril": [34, 35, 79, 80, 202], "k": [34, 35, 79, 80, 117, 124, 135, 202, 216, 217, 218, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 672, 680, 798, 814, 815, 839, 842, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877, 992, 997, 998, 1000, 1004, 1007], "n": [34, 35, 68, 69, 113, 114, 117, 123, 202, 236, 239, 254, 256, 258, 259, 261, 263, 672, 681, 798, 810, 815, 827, 829, 839, 842, 846, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 866, 868, 869, 871, 875, 877, 878, 880, 881, 883, 884, 886, 903, 913, 916, 917, 920, 925, 928, 948, 951, 960, 963, 992, 997, 998, 1000, 1004, 1007, 1041, 1050, 1053, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "whose": [34, 35, 40, 41, 50, 51, 54, 55, 62, 63, 85, 86, 95, 96, 99, 100, 107, 108, 120, 123, 194, 195, 196, 197, 202, 254, 256, 258, 259, 261, 263, 388, 399, 400, 401, 402, 403, 414, 415, 416, 417, 418, 429, 430, 431, 432, 433, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 616, 617, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 661, 662, 663, 664, 665, 666, 672, 683, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877, 903, 921, 924, 938, 939, 940, 941, 942, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1041, 1042, 1045], "innermost": [34, 35, 50, 51, 95, 96, 202, 254, 256, 258, 259, 261, 263, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 847, 849, 850, 852, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877], "mxn": [34, 35, 202, 254, 256, 258, 259, 261, 263, 815, 827, 829, 847, 849, 850, 852, 856, 858, 859, 861, 869, 871, 875, 877], "matric": [34, 35, 50, 51, 95, 96, 151, 202, 236, 239, 254, 256, 258, 259, 261, 263, 798, 811, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 846, 847, 849, 850, 852, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877], "int": [34, 35, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 68, 69, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 121, 124, 125, 129, 130, 131, 132, 133, 140, 163, 184, 187, 199, 200, 202, 216, 217, 224, 225, 228, 230, 231, 233, 234, 254, 256, 258, 259, 261, 263, 272, 289, 292, 302, 309, 310, 313, 317, 320, 333, 336, 355, 370, 371, 372, 378, 379, 383, 388, 434, 437, 439, 442, 444, 447, 449, 452, 454, 457, 459, 462, 672, 678, 690, 691, 694, 695, 696, 699, 700, 710, 726, 729, 755, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 815, 816, 818, 820, 821, 823, 827, 829, 872, 874, 875, 877, 878, 880, 881, 883, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 909, 912, 913, 916, 917, 920, 921, 924, 925, 928, 929, 932, 938, 939, 940, 941, 942, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 963, 964, 965, 966, 967, 968, 971, 980, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 1002, 1004, 1005, 1006, 1030, 1031, 1034, 1036, 1039, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "diagon": [34, 35, 50, 51, 72, 77, 78, 202, 216, 217, 254, 256, 258, 259, 261, 263, 815, 875, 877], "triangular": [34, 35, 50, 51, 95, 96, 202, 254, 256, 258, 259, 261, 263, 815, 816, 817, 818, 819, 820, 859, 861], "triu": [34, 35, 79, 80, 202], "upper": [34, 35, 50, 51, 75, 76, 95, 96, 123, 202, 216, 217, 259, 261, 263, 815, 816, 817, 818, 819, 820, 859, 861, 992, 998, 1000], "zeros_lik": [34, 35, 79, 80, 124, 202, 798, 805, 808, 903, 904, 907, 1085], "creation": [35, 72, 75, 76, 77, 78, 80, 118, 123, 130, 131, 135, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 241, 244, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271], "data_typ": [36, 37, 81, 82, 118, 123, 130, 272, 277, 278, 279, 282, 284, 287, 289, 292, 294, 297, 299, 300, 301, 302, 303, 304, 307, 309, 310, 313, 315, 316, 317, 320, 322, 323, 326, 328, 331, 333, 336, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "astyp": [36, 37, 48, 49, 81, 82, 93, 94, 124, 130, 132, 272, 805, 806, 807, 809], "broadcast_arrai": [36, 37, 81, 82, 272], "broadcast_to": [36, 37, 81, 82, 130, 272], "can_cast": [36, 37, 81, 82, 125, 130, 272, 298, 310, 313], "cast": [36, 37, 81, 82, 124, 125, 130, 272, 279, 282, 294, 295, 296, 297, 298, 903, 909, 912, 1041, 1058, 1061, 1066, 1069, 1085], "occur": [36, 37, 62, 63, 81, 82, 107, 108, 272, 294, 295, 296, 297, 298, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029], "rule": [36, 37, 50, 51, 81, 82, 95, 96, 121, 123, 125, 128, 129, 130, 133, 272, 279, 282, 294, 295, 296, 297, 298, 340, 343, 388, 429, 432, 454, 457, 479, 482, 596, 599, 621, 624, 815, 816, 817, 818, 819, 820, 821, 823, 853, 855, 863, 865], "float32": [36, 37, 48, 49, 81, 82, 87, 88, 93, 94, 121, 123, 130, 202, 267, 271, 272, 277, 278, 294, 295, 296, 298, 304, 307, 310, 313, 333, 336, 354, 672, 746, 747, 750, 805, 806, 807, 809], "float64": [36, 37, 123, 130, 272, 279, 282, 294, 295, 297, 310, 313, 333, 336, 345, 354], "as_n": [36, 37, 81, 82, 130, 272, 300, 301, 302, 303, 304, 305, 306, 307, 308, 355, 361, 362, 365, 375], "finfo": [36, 37, 81, 82, 272], "iinfo": [36, 37, 81, 82, 133, 272], "is_bool_dtyp": [36, 37, 81, 82, 272], "is_float_dtyp": [36, 37, 81, 82, 272], "is_int_dtyp": [36, 37, 81, 82, 272, 672, 751], "result_typ": [36, 37, 81, 82, 130, 272], "arrays_and_dtyp": [36, 37, 81, 82, 272, 340, 341, 342, 343, 344], "to_devic": [38, 39, 75, 76, 83, 84, 355, 361, 380], "stream": [38, 39, 83, 84, 355, 379, 380, 381, 382, 383], "ab": [40, 41, 85, 86, 123, 127, 388, 393, 616, 619, 815, 881, 883, 1085], "aco": [40, 41, 85, 86, 388, 398, 1085], "real": [40, 41, 85, 86, 194, 195, 196, 197, 388, 394, 395, 396, 398, 399, 400, 409, 410, 411, 413, 419, 420, 421, 423, 424, 425, 426, 428, 479, 480, 481, 483, 494, 496, 498, 499, 501, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 589, 590, 596, 597, 598, 600, 616, 617, 618, 620, 621, 622, 623, 625, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 666, 667, 668, 669, 670], "invers": [40, 41, 85, 86, 137, 151, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 815, 836, 838, 856, 858], "cosin": [40, 41, 85, 86, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "acosh": [40, 41, 85, 86, 272, 315, 316, 388, 1085], "hyperbol": [40, 41, 73, 74, 85, 86, 163, 194, 195, 196, 197, 198, 388, 399, 400, 401, 402, 403, 414, 415, 416, 417, 418, 429, 430, 431, 432, 433, 474, 475, 476, 477, 478, 641, 642, 643, 644, 645, 666], "x2": [40, 41, 42, 43, 50, 51, 75, 76, 85, 86, 87, 88, 95, 96, 119, 121, 124, 202, 267, 271, 272, 349, 355, 372, 388, 404, 405, 406, 407, 408, 424, 425, 426, 427, 428, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 606, 607, 608, 609, 610, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 656, 657, 658, 659, 660, 672, 673, 674, 675, 676, 677, 798, 803, 815, 821, 822, 823, 839, 840, 841, 842, 853, 854, 855, 863, 864, 865, 872, 873, 874, 878, 879, 880, 1004, 1008], "asin": [40, 41, 85, 86, 388, 413, 1085], "sine": [40, 41, 85, 86, 388, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645], "asinh": [40, 41, 85, 86, 388, 418, 1085], "82": [40, 41, 414, 415], "atan": [40, 41, 85, 86, 388, 423, 1085], "tangent": [40, 41, 73, 74, 85, 86, 120, 163, 194, 195, 196, 197, 198, 388, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 661, 662, 663, 664, 665, 666], "atan2": [40, 41, 85, 86, 388, 428, 1085], "coordin": [40, 41, 85, 86, 202, 236, 239, 388, 424, 425, 426, 427, 428], "quotient": [40, 41, 85, 86, 388, 424, 425, 426, 427, 428], "785": [40, 41, 85, 86, 388, 424, 425, 426, 427, 428], "245": [40, 41, 424, 425], "57": [40, 41, 355, 367, 388, 409, 412, 414, 417, 424, 425, 427, 459, 462, 474, 477], "atanh": [40, 41, 85, 86, 388, 433, 1085], "bitwise_and": [40, 41, 85, 86, 388, 438], "integ": [40, 41, 68, 69, 75, 76, 85, 86, 103, 104, 113, 114, 123, 129, 130, 137, 202, 203, 204, 224, 272, 317, 320, 333, 336, 340, 343, 388, 389, 392, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 504, 507, 509, 512, 589, 592, 616, 619, 621, 624, 626, 629, 667, 671, 815, 846, 878, 880, 881, 883, 903, 943, 992, 994, 995, 996, 1002, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "bitwise_invert": [40, 41, 85, 86, 388, 443], "bitiwse_invert": [40, 41, 439, 440], "bitwise_left_shift": [40, 41, 85, 86, 388, 448], "bitwise_or": [40, 41, 85, 86, 388, 453], "bitwise_right_shift": [40, 41, 85, 86, 388, 458], "bitwise_xor": [40, 41, 85, 86, 388, 463], "ceil": [40, 41, 85, 86, 202, 203, 204, 388, 468, 1085], "express": [40, 41, 85, 86, 120, 133, 135, 140, 388, 394, 397, 409, 412, 419, 422, 424, 427, 469, 470, 471, 472, 473, 636, 637, 638, 639, 640, 661, 662, 663, 664, 665], "radian": [40, 41, 85, 86, 120, 388, 394, 397, 409, 412, 419, 422, 424, 427, 469, 470, 471, 472, 473, 636, 637, 638, 639, 640, 661, 662, 663, 664, 665], "54": [40, 41, 85, 86, 101, 102, 121, 388, 469, 470, 471, 472, 473, 474, 477, 646, 649, 798, 814, 815, 853, 855, 987, 989, 991, 992, 997, 1041, 1042, 1045], "416": [40, 41, 388, 469, 470, 472], "99": [40, 41, 388, 414, 417, 469, 470, 1041, 1042, 1045], "cosh": [40, 41, 85, 86, 388, 399, 403, 478, 1085], "angl": [40, 41, 85, 86, 151, 194, 195, 196, 197, 388, 424, 427, 474, 475, 476, 477, 478, 641, 642, 643, 644, 645, 666], "divid": [40, 41, 75, 76, 85, 86, 121, 128, 388, 483, 509, 512, 672, 739, 903, 943], "dividend": [40, 41, 85, 86, 388, 479, 480, 481, 482, 483, 509, 510, 511, 513, 621, 622, 624], "divisor": [40, 41, 44, 45, 85, 86, 89, 90, 388, 479, 480, 481, 482, 483, 509, 510, 511, 513, 514, 516, 518, 621, 622, 624, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1041, 1062, 1065, 1070, 1073, 1123, 1124, 1125], "erf": [40, 41, 85, 86, 388, 493], "exponenti": [40, 41, 85, 86, 388, 489, 490, 491, 492, 493, 494, 495, 497, 569, 572, 616, 617, 619], "gauss": [40, 41, 85, 86, 388, 489, 490, 491, 492, 493], "exp": [40, 41, 85, 86, 388, 498, 499, 502, 569, 572, 1085], "evalu": [40, 41, 75, 76, 85, 86, 129, 388, 494, 495, 496, 497, 498, 499, 501, 502, 503, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 579, 581, 583, 601, 602, 603, 604, 605, 611, 612, 613, 615, 631, 632, 633, 634, 635, 651, 654, 968, 969, 978, 979, 1074, 1075, 1078, 1080, 1083], "expm1": [40, 41, 85, 86, 388, 503], "244": [40, 41, 499, 500], "918": [40, 41, 499, 500], "48": [40, 41, 163, 169, 172, 388, 499, 500, 646, 649, 757, 759, 762, 815, 853, 855, 1041, 1042, 1045], "147": [40, 41, 163, 184, 187, 388, 499, 500, 502], "floor": [40, 41, 85, 86, 388, 454, 457, 508, 672, 698, 1085], "floor_divid": [40, 41, 85, 86, 388, 513], "greater": [40, 41, 75, 76, 85, 86, 388, 394, 397, 409, 412, 424, 427, 444, 447, 454, 457, 504, 507, 509, 512, 518, 616, 619, 621, 624, 631, 634, 667, 671, 815, 821, 823, 903, 944, 947, 992, 998, 1000], "greater_equ": [40, 41, 85, 86, 388, 523, 569, 571, 573], "isfinit": [40, 41, 85, 86, 123, 388, 528], "out_i": [40, 41, 85, 86, 388, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538], "self_i": [40, 41, 85, 86, 524, 525, 526, 529, 530, 531, 534, 535, 536], "finit": [40, 41, 85, 86, 388, 404, 407, 424, 427, 524, 525, 526, 527, 528, 596, 599, 616, 619, 621, 624], "isinf": [40, 41, 85, 86, 388, 533], "neg": [40, 41, 54, 55, 68, 69, 73, 74, 85, 86, 99, 100, 113, 114, 125, 129, 132, 163, 169, 171, 172, 173, 202, 203, 204, 216, 217, 388, 524, 527, 529, 530, 531, 532, 533, 596, 599, 605, 616, 619, 621, 624, 815, 866, 868, 878, 880, 881, 883, 903, 921, 924, 938, 939, 940, 941, 942, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "infin": [40, 41, 85, 86, 120, 201, 272, 279, 282, 388, 389, 392, 399, 402, 404, 407, 414, 417, 419, 422, 424, 427, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 509, 512, 524, 527, 529, 530, 531, 532, 533, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 649, 661, 665, 666, 667, 671, 815, 881, 883, 1041, 1046, 1049, 1054, 1057, 1074, 1075, 1078, 1080, 1083], "isnan": [40, 41, 85, 86, 388, 538], "nan": [40, 41, 75, 76, 85, 86, 118, 120, 123, 201, 272, 279, 282, 388, 389, 392, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 524, 527, 534, 535, 536, 537, 538, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 649, 661, 665, 666, 667, 671, 672, 712, 756, 798, 814, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1078, 1080, 1083], "less_equ": [40, 41, 85, 86, 388, 548], "log10": [40, 41, 85, 86, 388, 558], "logarithm": [40, 41, 85, 86, 388, 494, 497, 549, 552, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 572, 815, 862], "log1p": [40, 41, 85, 86, 388, 563], "log2": [40, 41, 85, 86, 388, 568], "logaddexp": [40, 41, 85, 86, 388], "logical_and": [40, 41, 85, 86, 388, 578, 1085], "logical_not": [40, 41, 85, 86, 388, 583, 1085], "logical_or": [40, 41, 85, 86, 388, 588, 1085], "logical_xor": [40, 41, 85, 86, 388, 593], "multipli": [40, 41, 85, 86, 121, 126, 128, 388, 600, 672, 690], "not_equ": [40, 41, 85, 86, 388, 610], "pow": [40, 41, 85, 86, 388, 620], "expon": [40, 41, 388, 616, 617, 619, 672, 740], "remaind": [40, 41, 75, 76, 85, 86, 388, 625, 672, 698, 903, 943], "respect": [40, 41, 44, 45, 85, 86, 89, 90, 119, 121, 123, 128, 129, 130, 133, 202, 236, 239, 388, 389, 392, 404, 407, 424, 427, 434, 437, 444, 447, 449, 452, 454, 457, 459, 462, 479, 482, 484, 487, 509, 512, 514, 517, 519, 522, 539, 542, 544, 547, 569, 572, 574, 577, 584, 587, 589, 592, 596, 599, 606, 609, 621, 622, 623, 624, 625, 656, 660, 757, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 773, 780, 782, 784, 786, 788, 790, 815, 859, 861, 964, 965, 966, 967], "x2_i": [40, 41, 85, 86, 388, 404, 407, 424, 427, 434, 437, 444, 447, 449, 452, 454, 457, 459, 462, 479, 482, 484, 487, 509, 512, 514, 517, 519, 522, 539, 542, 544, 547, 569, 572, 574, 577, 584, 587, 589, 592, 596, 599, 606, 609, 616, 619, 621, 622, 623, 624, 625, 656, 660], "x1": [40, 41, 42, 43, 85, 86, 87, 88, 119, 121, 124, 202, 267, 271, 272, 304, 307, 349, 355, 372, 388, 404, 407, 408, 424, 427, 428, 434, 437, 438, 444, 447, 448, 449, 452, 453, 454, 457, 458, 459, 462, 463, 479, 482, 483, 484, 486, 487, 488, 509, 511, 512, 513, 514, 517, 518, 519, 522, 523, 539, 542, 543, 544, 547, 548, 569, 572, 573, 574, 577, 578, 584, 587, 588, 589, 592, 593, 594, 595, 596, 599, 600, 606, 609, 610, 616, 619, 620, 621, 622, 623, 624, 625, 656, 657, 660, 672, 673, 674, 675, 676, 677, 680, 798, 803, 815, 821, 823, 839, 842, 853, 855, 863, 865, 872, 874, 878, 880, 1004, 1008], "11": [40, 41, 44, 45, 72, 77, 78, 85, 86, 99, 100, 103, 104, 121, 123, 129, 388, 404, 406, 407, 408, 434, 437, 499, 501, 621, 622, 624, 626, 629, 672, 690, 700, 759, 760, 815, 827, 829, 853, 855, 887, 898, 901, 903, 921, 924, 944, 946, 968, 985, 992, 994, 995, 996, 1004, 1008, 1009, 1010, 1014, 1041, 1042, 1045], "18": [40, 41, 85, 86, 121, 129, 388, 424, 427, 459, 462, 621, 622, 641, 642, 643, 644, 645, 815, 827, 829, 853, 855, 1041, 1042, 1045], "94": [40, 41, 85, 86, 414, 418, 631, 632], "256": [40, 41, 631, 632, 798, 804], "0001": [40, 41, 631, 632, 1123, 1124, 1125], "36": [40, 41, 388, 424, 427, 631, 632, 815, 853, 855, 1041, 1042, 1045], "67": [40, 41, 85, 86, 129, 388, 459, 462, 474, 477, 631, 632, 641, 643, 645], "45": [40, 41, 85, 86, 123, 388, 424, 426, 427, 428, 631, 632, 757, 759, 762, 815, 853, 855, 903, 943, 986, 987, 990, 1041, 1042, 1045], "24": [40, 41, 101, 102, 388, 459, 462, 631, 632, 646, 649, 672, 690, 757, 759, 762, 815, 827, 829, 853, 855, 986, 987, 989, 990, 991, 1041, 1042, 1045], "678": [40, 41, 631, 632], "32": [40, 41, 44, 45, 123, 138, 163, 169, 172, 388, 459, 462, 631, 632, 759, 760, 798, 801, 804, 805, 808, 815, 853, 855, 1004, 1008, 1041, 1042, 1045], "sin": [40, 41, 85, 86, 128, 135, 388, 640, 672, 699, 1085], "841": [40, 41, 85, 86, 388, 636, 637, 638, 639, 640], "909": [40, 41, 85, 86, 388, 636, 637, 638, 639, 640], "141": [40, 41, 85, 86, 388, 636, 637, 638, 639, 640], "sinh": [40, 41, 85, 86, 388, 645, 1085], "63": [40, 41, 44, 45, 85, 86, 95, 96, 388, 641, 642, 643, 644, 645, 646, 649, 759, 760, 815, 816, 818, 819, 820, 853, 855, 1041, 1042, 1045], "23": [40, 41, 85, 86, 388, 424, 427, 459, 462, 621, 624, 631, 634, 641, 642, 643, 644, 645, 798, 804, 815, 827, 829, 1004, 1008], "232": [40, 41, 85, 86, 388, 641, 642, 643, 644, 645], "51": [40, 41, 388, 459, 462, 641, 642, 644], "sqrt": [40, 41, 85, 86, 388, 650, 815, 881, 883], "squar": [40, 41, 50, 51, 85, 86, 95, 96, 123, 388, 646, 647, 648, 649, 650, 655, 798, 801, 815, 816, 817, 818, 819, 820, 824, 826, 830, 832, 833, 835, 836, 838, 846, 862, 863, 865, 866, 868], "subtract": [40, 41, 85, 86, 121, 128, 388, 657], "tan": [40, 41, 85, 86, 119, 120, 124, 125, 129, 132, 135, 388, 409, 412, 414, 417, 662, 815, 827, 829, 1009, 1010, 1014, 1030, 1031, 1034, 1085], "56": [40, 41, 85, 86, 121, 388, 646, 649, 661, 662, 663, 664, 665, 757, 759, 762, 815, 853, 855, 1041, 1042, 1045], "19": [40, 41, 85, 86, 121, 388, 414, 416, 418, 459, 462, 661, 662, 663, 664, 665, 815, 827, 829], "762": [40, 41, 85, 86, 163, 194, 196, 197, 198, 388, 666], "964": [40, 41, 85, 86, 163, 194, 196, 197, 198, 388, 666], "trunc": [40, 41, 85, 86, 388, 668], "elementwis": [41, 75, 76, 86, 118, 125, 135, 140, 389, 392, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 429, 432, 434, 437, 439, 442, 444, 447, 449, 452, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 514, 517, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 557, 559, 562, 564, 567, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 595, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 660, 661, 665, 666, 667, 671], "all_equ": [42, 43, 87, 88, 672, 677], "equality_matrix": [42, 43, 87, 88, 672, 673, 674, 675, 676, 677], "compar": [42, 43, 75, 76, 87, 88, 123, 133, 138, 672, 673, 674, 675, 676, 677, 680, 681, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1030, 1031, 1034, 1036, 1039], "matrix": [42, 43, 50, 51, 75, 76, 87, 88, 95, 96, 202, 236, 239, 254, 258, 259, 263, 672, 673, 674, 675, 676, 677, 684, 798, 811, 815, 816, 817, 818, 819, 820, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 846, 847, 849, 850, 852, 856, 858, 859, 861, 863, 865, 866, 868, 869, 871, 875, 877, 884, 886, 1107, 1117], "gather_nd": [42, 43, 75, 76, 87, 88, 672, 705, 1085], "cuda": [42, 43, 75, 76, 87, 88, 103, 104, 135, 138, 152, 202, 230, 231, 233, 234, 355, 358, 375, 376, 672, 700, 701, 702, 703, 704, 705, 726, 729, 730, 992, 993, 994, 995, 996, 998, 1000, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130], "to_numpi": [42, 43, 75, 76, 87, 88, 138, 672, 747, 1085], "adam_step": [44, 45, 89, 90, 757, 763], "mw": [44, 45, 89, 90, 139, 757, 759, 760, 761, 762, 763, 764, 766], "vw": [44, 45, 89, 90, 139, 757, 759, 760, 761, 762, 763, 764, 766], "beta1": [44, 45, 89, 90, 139, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 780, 781, 782, 783, 1123, 1124, 1125], "beta2": [44, 45, 89, 90, 139, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 780, 781, 782, 783, 1123, 1124, 1125], "999": [44, 45, 85, 86, 89, 90, 139, 194, 195, 197, 388, 666, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 780, 781, 782, 783, 1123, 1124, 1125], "epsilon": [44, 45, 52, 53, 56, 57, 89, 90, 97, 98, 101, 102, 125, 129, 132, 139, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 780, 781, 782, 783, 815, 847, 849, 856, 858, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 986, 987, 988, 989, 990, 991, 1121, 1122, 1123, 1124, 1125], "1e": [44, 45, 52, 53, 56, 57, 89, 90, 97, 98, 101, 102, 125, 129, 132, 139, 140, 272, 310, 313, 672, 708, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 780, 781, 782, 783, 815, 866, 868, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 986, 987, 988, 989, 990, 991, 1085, 1123, 1124, 1125, 1126, 1128], "07": [44, 45, 52, 53, 85, 86, 89, 90, 97, 98, 139, 388, 424, 426, 427, 428, 631, 634, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 780, 781, 782, 783, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 1123, 1124, 1125], "cost": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 964, 965, 966, 967], "weight": [44, 45, 89, 90, 125, 129, 139, 140, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 798, 811, 812, 814, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1119, 1120, 1123, 1125, 1126], "ws": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790], "dc": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790], "dw": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790], "w": [44, 45, 48, 49, 75, 76, 89, 90, 93, 94, 135, 138, 139, 672, 681, 757, 759, 760, 761, 762, 763, 764, 766, 767, 771, 773, 774, 780, 782, 783, 784, 786, 787, 788, 790, 791, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809], "averag": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 964, 965, 966], "moment": [44, 45, 89, 90, 126, 152, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1123, 1124, 1125], "forget": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1123, 1124, 1125], "dure": [44, 45, 75, 76, 89, 90, 125, 129, 130, 131, 132, 152, 199, 200, 355, 379, 383, 672, 752, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 815, 839, 842, 964, 965, 966, 967, 1041, 1062, 1065, 1070, 1073, 1119, 1120, 1123, 1124, 1125, 1127], "adam": [44, 45, 89, 90, 138, 139, 140, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1085, 1123, 1125], "divis": [44, 45, 89, 90, 125, 388, 454, 457, 479, 482, 509, 512, 621, 624, 672, 698, 708, 732, 739, 740, 757, 759, 760, 761, 762, 763, 764, 766, 780, 782, 1123, 1124, 1125], "delta": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763], "dcdw": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787], "adam_step_delta": [44, 45, 89, 90, 757, 759, 760, 761, 762, 763], "639": [44, 45, 757, 759, 760, 762], "00121": [44, 45, 759, 760], "0102": [44, 45, 759, 760], "0397": [44, 45, 759, 760], "exclus": [44, 45, 75, 76, 89, 90, 123, 125, 129, 140, 202, 203, 204, 672, 690, 719, 720, 722, 757, 775, 776, 777, 778, 779, 992, 994, 995], "is_var": [44, 45, 89, 90, 757, 775, 776, 777, 778, 779], "gradient": [45, 75, 76, 90, 118, 129, 138, 139, 151, 152, 355, 378, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 773, 775, 778, 780, 782, 784, 786, 788, 790, 792, 793, 794, 795, 796, 797, 964, 965, 966, 967, 1085, 1123, 1124, 1125, 1126, 1127, 1128], "depthwise_conv2d": [48, 49, 93, 94, 798, 809, 1085], "stride": [48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "pad": [48, 49, 93, 94, 672, 699, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 903, 913, 916, 960, 963, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "data_format": [48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "nhwc": [48, 49, 93, 94, 798, 801, 802, 805, 806, 807, 808, 809, 1107, 1110, 1111, 1114], "dilat": [48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "batch_siz": [48, 49, 93, 94, 138, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 992, 993], "h": [48, 49, 93, 94, 117, 129, 798, 801, 802, 803, 804, 805, 806, 807, 808, 809, 968, 971, 984], "convolut": [48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "fh": [48, 49, 93, 94, 798, 801, 802, 803, 804, 805, 806, 807, 808, 809], "fw": [48, 49, 93, 94, 123, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809], "d_in": [48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809], "slide": [48, 49, 93, 94, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "valid": [48, 49, 68, 69, 93, 94, 113, 114, 123, 124, 130, 135, 272, 299, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 903, 948, 951, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "algorithm": [48, 49, 73, 74, 93, 94, 152, 164, 166, 168, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114], "nchw": [48, 49, 93, 94, 798, 801, 802, 805, 806, 807, 808, 809, 1107, 1110, 1111, 1114], "255": [48, 49, 93, 94, 805, 806, 807, 809], "128": [48, 49, 93, 94, 798, 804, 805, 806, 807, 809, 815, 853, 855], "linear_algebra": [50, 51, 95, 96, 118, 137, 815, 816, 819, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 843, 845, 846, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886], "choleski": [50, 51, 95, 96, 815, 820], "symmetr": [50, 51, 95, 96, 129, 815, 816, 817, 818, 819, 820, 830, 832, 833, 835, 884, 886], "u": [50, 51, 95, 96, 815, 816, 817, 818, 819, 820, 866, 868], "625": [50, 51, 815, 816, 817, 819], "25": [50, 51, 52, 53, 101, 102, 129, 388, 641, 644, 646, 649, 651, 654, 815, 816, 817, 819, 827, 829, 836, 838, 887, 893, 894, 896, 986, 987, 989, 990, 991, 1041, 1042, 1045], "cross": [50, 51, 52, 53, 72, 77, 78, 97, 98, 815, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 1085], "det": [50, 51, 72, 77, 78, 815], "offset": [50, 51, 56, 57, 101, 102, 815, 827, 828, 829, 875, 876, 877, 986, 987, 988, 989, 990, 991], "axis1": [50, 51, 54, 55, 99, 100, 815, 827, 828, 829, 903, 952, 953, 954, 955], "axis2": [50, 51, 815, 827, 828, 829], "eigh": [50, 51, 72, 77, 78, 815], "namedtupl": [50, 51, 62, 63, 107, 108, 815, 830, 831, 832, 859, 860, 861, 866, 868, 1009, 1010, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1024], "eigvalsh": [50, 51, 72, 77, 78, 815], "inv": [50, 51, 72, 77, 78, 137, 815, 1085], "matmul": [50, 51, 95, 96, 118, 123, 126, 135, 815, 866, 868, 1085], "matrix_norm": [50, 51, 75, 76, 815], "ord": [50, 51, 75, 76, 815, 843, 844, 845, 881, 882, 883], "fro": [50, 51, 815, 843, 844, 845], "keepdim": [50, 51, 66, 67, 68, 69, 75, 76, 111, 112, 113, 114, 133, 672, 755, 815, 843, 844, 845, 881, 882, 883, 1004, 1005, 1006, 1041, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "matrix_rank": [50, 51, 72, 77, 78, 815], "rtol": [50, 51, 815, 847, 848, 849, 856, 857, 858], "matrix_transpos": [50, 51, 72, 77, 78, 137, 815], "outer": [50, 51, 72, 77, 78, 815, 964, 965, 966, 967], "pinv": [50, 51, 72, 77, 78, 815, 1085], "qr": [50, 51, 72, 77, 78, 815], "reduc": [50, 51, 68, 69, 75, 76, 113, 114, 137, 355, 378, 672, 695, 815, 859, 860, 861, 1004, 1005, 1006, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "solv": [50, 51, 72, 77, 78, 136, 151, 815], "svd": [50, 51, 72, 77, 78, 815, 1085], "full_matric": [50, 51, 815, 866, 867, 868], "svdval": [50, 51, 72, 77, 78, 815], "tensordot": [50, 51, 72, 77, 78, 815], "trace": [50, 51, 72, 75, 76, 77, 78, 135, 152, 672, 719, 720, 722, 815], "vecdot": [50, 51, 72, 77, 78, 815], "vector_norm": [50, 51, 75, 76, 815], "vector_to_skew_symmetric_matrix": [50, 51, 72, 77, 78, 815, 1085], "binary_cross_entropi": [52, 53, 97, 98, 887, 892], "pred": [52, 53, 97, 98, 125, 129, 132, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902], "predict": [52, 53, 97, 98, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902], "amount": [52, 53, 97, 98, 131, 355, 384, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902], "smooth": [52, 53, 97, 98, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902], "binari": [52, 53, 97, 98, 388, 434, 437, 449, 452, 459, 462, 589, 592, 887, 888, 889, 890, 891, 892], "entropi": [52, 53, 97, 98, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902], "357": [52, 53, 97, 98, 887, 888, 889, 890, 891, 892, 898, 899, 901, 902], "223": [52, 53, 97, 98, 887, 888, 889, 890, 891, 892, 898, 899, 900, 902], "cross_entropi": [52, 53, 97, 98, 125, 129, 132, 887, 897, 898, 901], "along": [52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 97, 98, 99, 100, 113, 114, 118, 132, 184, 186, 188, 202, 230, 231, 233, 234, 355, 378, 672, 690, 691, 700, 755, 815, 843, 845, 875, 877, 878, 880, 881, 883, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 909, 912, 921, 924, 929, 932, 938, 939, 940, 941, 942, 943, 948, 951, 956, 959, 964, 965, 966, 967, 992, 1003, 1004, 1005, 1006, 1030, 1031, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "3862944": [52, 53, 887, 893, 894, 896], "sparse_cross_entropi": [52, 53, 97, 98, 887, 902], "logit": [52, 53, 97, 98, 887, 898, 899, 900, 901, 902], "spars": [52, 53, 97, 98, 887, 898, 899, 900, 901, 902], "loss": [53, 98, 118, 125, 138, 139, 140, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 1085], "clip": [54, 55, 75, 76, 99, 100, 125, 129, 132, 135, 138, 140, 388, 594, 595, 672, 684, 685, 687, 903, 908, 1085], "x_min": [54, 55, 75, 76, 99, 100, 135, 140, 903, 904, 905, 906, 907, 908], "x_max": [54, 55, 75, 76, 99, 100, 135, 140, 903, 904, 905, 906, 907, 908], "roll": [54, 55, 99, 100, 119, 129, 903, 904, 905, 942], "concat": [54, 55, 75, 76, 99, 100, 124, 355, 378, 672, 699, 903, 1085], "xs": [54, 55, 89, 90, 99, 100, 129, 672, 673, 676, 681, 757, 768, 769, 770, 903, 909, 910, 911, 912], "constant_pad": [54, 55, 99, 100, 903], "pad_width": [54, 55, 99, 100, 903, 913, 914, 915, 916, 960, 961, 962, 963], "expand_dim": [54, 55, 99, 100, 135, 138, 903, 1085], "flip": [54, 55, 99, 100, 137, 138, 140, 388, 439, 442, 903, 1085], "permute_dim": [54, 55, 99, 100, 903], "reshap": [54, 55, 75, 76, 99, 100, 123, 132, 135, 137, 140, 903, 1085], "shift": [54, 55, 99, 100, 119, 121, 388, 444, 447, 454, 457, 903, 938, 939, 940, 941, 942], "sequenc": [54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 121, 123, 124, 130, 133, 151, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 199, 200, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 672, 673, 675, 677, 681, 701, 703, 705, 723, 746, 747, 749, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 904, 906, 908, 938, 939, 940, 941, 942, 943, 948, 951, 968, 984, 987, 989, 991, 992, 994, 995, 996, 1015, 1016, 1018, 1041, 1046, 1049, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1107, 1116, 1121, 1122, 1129, 1130], "larger": [54, 55, 99, 100, 123, 135, 140, 272, 310, 313, 903, 904, 907, 938, 939, 940, 941, 942, 1041, 1062, 1065, 1070, 1073], "flatten": [54, 55, 62, 63, 75, 76, 99, 100, 107, 108, 672, 699, 815, 853, 855, 881, 883, 903, 929, 932, 938, 939, 940, 941, 942, 1004, 1005, 1006, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1025, 1029], "restor": [54, 55, 99, 100, 903, 938, 939, 940, 941, 942], "squeez": [54, 55, 99, 100, 903, 1085], "stack": [54, 55, 75, 76, 99, 100, 135, 202, 254, 258, 259, 263, 815, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 842, 846, 847, 849, 850, 852, 856, 858, 859, 861, 866, 868, 869, 871, 875, 877, 903, 968, 969, 978, 979, 1085, 1107, 1116], "swapax": [54, 55, 99, 100, 903], "axis0": [54, 55, 99, 100, 903, 952, 953, 954, 955], "tile": [54, 55, 99, 100, 903, 1085], "rep": [54, 55, 99, 100, 903, 956, 957, 958, 959], "zero_pad": [54, 55, 99, 100, 903, 1085], "layer_norm": [56, 57, 101, 102, 986, 991], "normalized_idx": [56, 57, 101, 102, 986, 987, 988, 989, 990, 991], "05": [56, 57, 101, 102, 123, 757, 759, 762, 986, 987, 988, 989, 990, 991], "scale": [56, 57, 101, 102, 124, 129, 355, 376, 377, 757, 784, 786, 798, 810, 813, 814, 986, 987, 988, 989, 990, 991, 1107, 1115, 1118, 1123, 1126], "new_std": [56, 57, 101, 102, 986, 987, 988, 989, 990, 991, 1121, 1122], "normal": [56, 57, 101, 102, 138, 903, 948, 951, 986, 987, 988, 989, 990, 991, 992, 997, 1121, 1122], "small": [56, 57, 101, 102, 121, 125, 135, 139, 152, 388, 596, 599, 815, 847, 849, 856, 858, 986, 987, 988, 989, 990, 991, 1121, 1122], "constant": [56, 57, 101, 102, 118, 125, 139, 140, 152, 903, 913, 916, 968, 974, 986, 987, 988, 989, 990, 991, 1098, 1099, 1103, 1106, 1119, 1120, 1121, 1122], "denomin": [56, 57, 101, 102, 125, 152, 672, 698, 708, 732, 739, 740, 986, 987, 988, 989, 990, 991, 1121, 1122], "_min_bas": [56, 57, 101, 102, 672, 740, 986, 987, 988, 989, 990, 991, 1121, 1122], "learnabl": [56, 57, 101, 102, 140, 986, 987, 988, 989, 990, 991, 1121, 1122], "gamma": [56, 57, 101, 102, 986, 987, 988, 989, 990, 991], "beta": [56, 57, 101, 102, 986, 987, 988, 989, 990, 991], "after": [56, 57, 75, 76, 101, 102, 121, 123, 124, 129, 130, 134, 272, 349, 355, 388, 646, 649, 757, 764, 766, 768, 769, 771, 773, 780, 782, 784, 786, 788, 790, 986, 987, 988, 989, 990, 991, 1123, 1124, 1125, 1126, 1127, 1128], "0976": [56, 57, 986, 987, 988, 990], "3452": [56, 57, 986, 987, 988, 990], "2740": [56, 57, 986, 987, 988, 990], "1047": [56, 57, 986, 987, 988, 990], "5886": [56, 57, 986, 987, 988, 990], "2732": [56, 57, 986, 987, 988, 990], "7696": [56, 57, 986, 987, 988, 990], "7024": [56, 57, 986, 987, 988, 990], "2518": [56, 57, 986, 987, 988, 990], "001": [56, 57, 138, 139, 272, 310, 313, 388, 631, 634, 757, 759, 762, 986, 987, 988, 990], "576": [56, 57, 986, 987, 988, 990], "292": [56, 57, 986, 987, 988, 990], "33": [56, 57, 85, 86, 414, 416, 815, 853, 855, 968, 985, 986, 987, 988, 990, 1041, 1042, 1045], "581": [56, 57, 757, 759, 762, 986, 987, 988, 990], "891": [56, 57, 163, 179, 182, 986, 987, 988, 990], "01": [56, 57, 140, 388, 626, 629, 631, 634, 986, 987, 988, 990], "579": [56, 57, 986, 987, 988, 990], "931": [56, 57, 986, 987, 988, 990], "norm": [57, 75, 76, 102, 118, 672, 684, 685, 687, 815, 843, 845, 881, 883, 987, 988, 989, 990, 991, 1085, 1122, 1123, 1125], "random": [59, 75, 76, 104, 118, 131, 140, 151, 993, 994, 995, 997, 998, 1000, 1002, 1003, 1085], "unique_al": [62, 63, 107, 108, 1009], "unique_count": [62, 63, 107, 108, 1009, 1016], "count": [62, 63, 68, 69, 107, 108, 113, 114, 121, 138, 355, 372, 815, 878, 880, 903, 921, 924, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "field": [62, 63, 107, 108, 151, 815, 830, 832, 859, 861, 866, 868, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019], "uc": [62, 63, 1015, 1017], "unique_invers": [62, 63, 107, 108, 1009], "unique_valu": [62, 63, 107, 108, 1009], "argsort": [64, 65, 109, 110, 1030], "descend": [64, 65, 109, 110, 815, 866, 868, 869, 871, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040], "sort": [65, 72, 75, 76, 77, 78, 110, 118, 815, 830, 832, 866, 868, 869, 871, 1031, 1034], "einsum": [66, 67, 111, 112, 1041], "equat": [66, 67, 111, 112, 815, 863, 865, 1041, 1042, 1043, 1044, 1045], "max": [66, 67, 75, 76, 111, 112, 272, 310, 313, 317, 320, 388, 594, 672, 684, 685, 687, 695, 729, 730, 815, 847, 849, 856, 858, 1041, 1123, 1125], "min": [66, 67, 75, 76, 111, 112, 272, 310, 313, 317, 320, 388, 595, 672, 695, 729, 730, 739, 815, 859, 861, 866, 868, 869, 871, 881, 883, 1041], "prod": [66, 67, 75, 76, 111, 112, 121, 130, 672, 695, 1041], "std": [66, 67, 111, 112, 121, 992, 997, 1009, 1010, 1014, 1041], "var": [66, 67, 111, 112, 115, 116, 121, 135, 964, 965, 966, 1041], "statist": [67, 112, 115, 116, 118, 123, 130, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073], "logic": [68, 69, 113, 114, 123, 127, 128, 130, 131, 137, 355, 370, 388, 574, 577, 579, 582, 584, 587, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "AND": [68, 69, 113, 114, 388, 434, 437, 574, 577, 1074, 1075, 1076, 1077, 1078, 1079], "reduct": [68, 69, 75, 76, 113, 114, 123, 130, 137, 672, 695, 729, 730, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "By": [68, 69, 113, 114, 121, 124, 125, 129, 132, 139, 140, 672, 690, 691, 815, 878, 880, 903, 929, 932, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "interv": [68, 69, 75, 76, 103, 104, 113, 114, 135, 140, 202, 203, 204, 230, 231, 233, 234, 815, 878, 880, 903, 904, 907, 948, 951, 992, 994, 995, 996, 998, 1000, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "rank": [68, 69, 113, 114, 202, 236, 239, 672, 755, 815, 821, 823, 847, 849, 859, 861, 863, 865, 875, 877, 878, 880, 881, 883, 903, 913, 916, 917, 920, 948, 951, 960, 963, 1004, 1007, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "backward": [68, 69, 113, 114, 152, 388, 621, 624, 815, 878, 880, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "invalid": [68, 69, 113, 114, 124, 130, 133, 815, 878, 880, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "except": [68, 69, 75, 76, 113, 114, 120, 128, 132, 133, 137, 152, 272, 289, 292, 672, 682, 693, 717, 752, 815, 856, 858, 903, 909, 912, 948, 951, 1004, 1007, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "singleton": [68, 69, 113, 114, 815, 881, 883, 903, 944, 947, 1004, 1006, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "accordingli": [68, 69, 113, 114, 124, 133, 202, 236, 239, 388, 499, 502, 815, 881, 883, 1004, 1006, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "dimension": [68, 69, 75, 76, 113, 114, 202, 203, 204, 216, 217, 236, 239, 815, 821, 823, 824, 826, 839, 842, 847, 849, 853, 855, 856, 858, 878, 880, 881, 883, 903, 943, 1004, 1005, 1006, 1007, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "non": [68, 69, 113, 114, 121, 129, 130, 135, 199, 200, 272, 279, 282, 322, 388, 579, 582, 584, 587, 798, 801, 815, 824, 826, 847, 849, 866, 868, 872, 874, 878, 880, 881, 883, 1004, 1005, 1006, 1007, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1119, 1120, 1123, 1127], "util": [69, 114, 118, 131, 355, 367, 1075, 1078, 1080, 1083], "add_ivy_array_instance_method": 70, "cl": [70, 71, 115, 116], "to_ignor": [70, 71, 115, 116, 968, 979], "loop": [70, 71, 115, 116, 126, 133, 152, 964, 965, 966, 967], "_wrap_funct": [70, 71, 115, 116, 125, 127], "toi": [70, 71, 115, 116], "arrayexampl": [70, 71], "hasattr": [70, 71, 115, 116, 137], "dict_in": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "queue": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 138, 672, 728, 734], "queue_load_s": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "container_combine_method": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "list_join": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "key_length_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_ind": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_line_spac": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "ivyh": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "default_key_color": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "keyword_color_dict": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "rebuild_child_contain": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "types_to_iteratively_nest": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "alphabetical_kei": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "containerwithactiv": [72, 73, 77, 78], "containerwithcr": [72, 77, 78, 79], "containerwithdatatyp": [72, 77, 78, 81], "containerwithdevic": [72, 77, 78, 83], "containerwithelementwis": [72, 77, 78, 85, 129], "containerwithgener": [72, 77, 78, 87], "containerwithgradi": [72, 77, 78, 89], "containerwithimag": [72, 77, 78, 91], "containerwithlay": [72, 77, 78, 93], "containerwithlinearalgebra": [72, 77, 78, 95], "containerwithloss": [72, 77, 78, 97], "containerwithnorm": [72, 77, 78, 101], "containerwithrandom": [72, 77, 78, 103], "containerwithsearch": [72, 77, 78, 105], "containerwithset": [72, 77, 78, 107], "containerwithsort": [72, 77, 78, 109], "containerwithstatist": [72, 77, 78, 111], "containerwithutil": [72, 77, 78, 113], "represent": [72, 75, 76, 77, 78, 151, 201, 272, 277, 278, 310, 313, 317, 320, 355, 358, 359, 388, 389, 392, 404, 407, 434, 437, 449, 452, 459, 462, 589, 592, 596, 599, 672, 678, 744], "dictionari": [72, 75, 76, 77, 78, 138, 152, 355, 377], "asynchron": [72, 75, 76, 77, 78], "arriv": [72, 75, 76, 77, 78], "timeout": [72, 75, 76, 77, 78, 672, 728, 734], "length": [72, 75, 76, 77, 78, 123, 133, 138, 202, 203, 204, 236, 239, 815, 866, 868, 869, 871, 903, 934, 937], "whitespac": [72, 75, 76, 77, 78], "indent": [72, 75, 76, 77, 78, 138], "extra": [72, 75, 76, 77, 78, 121, 123, 124, 127, 128, 135, 757, 768, 769], "newlin": [72, 75, 76, 77, 78, 120], "handl": [72, 75, 76, 77, 78, 117, 119, 123, 124, 125, 127, 129, 130, 131, 132, 139, 152, 199, 200, 355, 358, 359, 360, 361, 362, 365, 368, 372, 373, 384, 387, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 1123, 1124, 1125, 1126, 1127, 1128], "color": [72, 75, 76, 77, 78, 1132, 1133], "map": [72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 119, 123, 125, 129, 138, 151, 152, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 701, 703, 705, 746, 747, 749, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 968, 975, 976, 980, 981, 987, 989, 991, 1015, 1016, 1018, 1075, 1077, 1079, 1080, 1082, 1084, 1107, 1118], "termcolor": [72, 75, 76, 77, 78], "rebuild": [72, 75, 76, 77, 78], "constructor": [72, 75, 76, 77, 78, 130, 131, 137, 672, 679, 1129, 1130], "param": [72, 75, 76, 77, 78, 87, 88, 135, 140, 672, 678, 700, 701, 704, 705], "alphabet": [72, 75, 76, 77, 78], "preserv": [72, 75, 76, 77, 78, 123, 140, 152, 757, 793, 903, 921, 924], "key_chain": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 304, 306, 308, 310, 312, 314, 317, 319, 321, 323, 325, 327, 328, 330, 332, 333, 335, 337, 340, 342, 344, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 685, 686, 701, 703, 705, 746, 747, 749, 764, 765, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 783, 784, 785, 787, 788, 789, 791, 816, 818, 820, 839, 841, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 968, 981, 987, 989, 991, 994, 996, 998, 999, 1001, 1010, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1028, 1031, 1033, 1035, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1075, 1077, 1079, 1080, 1082, 1084], "to_appli": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 304, 306, 308, 310, 312, 314, 317, 319, 321, 323, 325, 327, 328, 330, 332, 333, 335, 337, 340, 342, 344, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 685, 686, 701, 703, 705, 746, 747, 749, 764, 765, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 783, 784, 785, 787, 788, 789, 791, 816, 818, 820, 839, 841, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 968, 981, 987, 989, 991, 998, 999, 1001, 1010, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1028, 1031, 1033, 1035, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1075, 1077, 1079, 1080, 1082, 1084], "prune_unappli": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 304, 306, 308, 310, 312, 314, 317, 319, 321, 323, 325, 327, 328, 330, 332, 333, 335, 337, 340, 342, 344, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 685, 686, 701, 703, 705, 746, 747, 749, 764, 765, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 783, 784, 785, 787, 788, 789, 791, 816, 818, 820, 839, 841, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 968, 981, 987, 989, 991, 998, 999, 1001, 1010, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1028, 1031, 1033, 1035, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1075, 1077, 1079, 1080, 1082, 1084], "map_sequ": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 304, 306, 308, 310, 312, 314, 317, 319, 321, 323, 325, 327, 328, 330, 332, 333, 335, 337, 340, 342, 344, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 685, 686, 701, 703, 705, 746, 747, 749, 764, 765, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 783, 784, 785, 787, 788, 789, 791, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 944, 946, 952, 954, 956, 958, 960, 962, 987, 989, 991, 998, 999, 1001, 1010, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1028, 1031, 1033, 1035, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1075, 1077, 1079, 1080, 1082, 1084], "static_arg_info": [72, 77, 78], "static_arg_nam": [72, 77, 78], "static_argmax": [72, 77, 78], "static_argmin": [72, 77, 78], "static_arrai": [72, 77, 78], "static_array_equ": [72, 77, 78], "static_arrays_equ": [72, 77, 78], "static_as_ivy_dev": [72, 77, 78], "static_as_ivy_dtyp": [72, 77, 78], "static_as_native_dev": [72, 77, 78], "static_as_native_dtyp": [72, 77, 78], "static_assert_supports_inplac": [72, 77, 78], "static_cache_fn": [72, 77, 78], "static_clear_mem_on_dev": [72, 77, 78], "static_clip_matrix_norm": [72, 77, 78], "static_clip_vector_norm": [72, 77, 78], "static_closest_valid_dtyp": [72, 77, 78], "static_concat": [72, 77, 78], "static_constant_pad": [72, 77, 78], "static_container_typ": [72, 77, 78], "static_conv1d": [72, 77, 78], "static_conv1d_transpos": [72, 77, 78], "static_conv2d": [72, 77, 78], "static_conv2d_transpos": [72, 77, 78], "static_conv3d": [72, 77, 78], "static_conv3d_transpos": [72, 77, 78], "static_copy_arrai": [72, 77, 78], "static_cross": [72, 77, 78], "static_cumprod": [72, 77, 78], "static_cumsum": [72, 77, 78], "static_current_backend": [72, 77, 78], "static_current_backend_str": [72, 77, 78], "static_default": [72, 77, 78], "static_default_devic": [72, 77, 78], "static_default_dtyp": [72, 77, 78], "static_default_float_dtyp": [72, 77, 78], "static_default_int_dtyp": [72, 77, 78], "static_default_uint_dtyp": [72, 77, 78], "static_det": [72, 77, 78], "static_dev_util": [72, 77, 78], "static_diagon": [72, 77, 78], "static_dropout": [72, 77, 78], "static_dtype_bit": [72, 77, 78], "static_eigh": [72, 77, 78], "static_eigvalsh": [72, 77, 78], "static_einops_rearrang": [72, 77, 78], "static_einops_reduc": [72, 77, 78], "static_einops_repeat": [72, 77, 78], "static_einsum": [72, 77, 78], "static_empti": [72, 77, 78], "static_exist": [72, 77, 78], "static_expand_dim": [72, 77, 78], "static_flip": [72, 77, 78], "static_floormod": [72, 77, 78], "static_fourier_encod": [72, 77, 78], "static_ful": [72, 77, 78], "static_function_supported_dtyp": [72, 77, 78], "static_function_unsupported_dtyp": [72, 77, 78], "static_gath": [72, 77, 78], "static_get_all_arrays_in_memori": [72, 77, 78], "static_get_all_ivy_arrays_on_dev": [72, 77, 78], "static_get_min_bas": [72, 77, 78], "static_get_min_denomin": [72, 77, 78], "static_get_nestable_mod": [72, 77, 78], "static_get_num_dim": [72, 77, 78], "static_get_referrers_recurs": [72, 77, 78], "static_gpu_is_avail": [72, 77, 78], "static_handle_nest": [72, 77, 78], "static_handle_out_argu": [72, 77, 78], "static_has_nan": [72, 77, 78], "static_indices_wher": [72, 77, 78], "static_infer_devic": [72, 77, 78], "static_infer_dtyp": [72, 77, 78], "static_inplace_arrays_support": [72, 77, 78], "static_inplace_decr": [72, 77, 78], "static_inplace_incr": [72, 77, 78], "static_inplace_upd": [72, 77, 78], "static_inplace_variables_support": [72, 77, 78], "static_inputs_to_native_arrai": [72, 77, 78], "static_inv": [72, 77, 78], "static_invalid_dtyp": [72, 77, 78], "static_is_arrai": [72, 77, 78], "static_is_ivy_arrai": [72, 77, 78], "static_is_ivy_contain": [72, 77, 78], "static_is_native_arrai": [72, 77, 78], "static_is_uint_dtyp": [72, 77, 78], "static_linear": [72, 77, 78], "static_lstm_upd": [72, 77, 78], "static_match_kwarg": [72, 77, 78], "static_matmul": [72, 77, 78], "static_matrix_norm": [72, 77, 78], "static_matrix_pow": [72, 77, 78], "static_matrix_rank": [72, 77, 78], "static_matrix_transpos": [72, 77, 78], "static_max": [72, 77, 78], "static_maximum": [72, 77, 78], "static_mean": [72, 77, 78], "static_min": [72, 77, 78], "static_minimum": [72, 77, 78], "static_multi_head_attent": [72, 77, 78], "static_multinomi": [72, 77, 78], "static_multiprocess": [72, 77, 78], "static_nonzero": [72, 77, 78], "static_num_arrays_in_memori": [72, 77, 78], "static_num_cpu_cor": [72, 77, 78], "static_num_gpu": [72, 77, 78], "static_num_ivy_arrays_on_dev": [72, 77, 78], "static_one_hot": [72, 77, 78], "static_out": [72, 77, 78], "static_outputs_to_ivy_arrai": [72, 77, 78], "static_percent_used_mem_on_dev": [72, 77, 78], "static_permute_dim": [72, 77, 78], "static_pinv": [72, 77, 78], "static_print_all_arrays_in_memori": [72, 77, 78], "static_print_all_ivy_arrays_on_dev": [72, 77, 78], "static_prod": [72, 77, 78], "static_promote_typ": [72, 77, 78], "static_qr": [72, 77, 78], "static_queue_timeout": [72, 77, 78], "static_random_norm": [72, 77, 78], "static_reshap": [72, 77, 78], "static_scaled_dot_product_attent": [72, 77, 78], "static_scatter_flat": [72, 77, 78], "static_scatter_nd": [72, 77, 78], "static_se": [72, 77, 78], "static_set_default_devic": [72, 77, 78], "static_set_default_dtyp": [72, 77, 78], "static_set_default_float_dtyp": [72, 77, 78], "static_set_default_int_dtyp": [72, 77, 78], "static_set_default_uint_dtyp": [72, 77, 78], "static_set_min_bas": [72, 77, 78], "static_set_min_denomin": [72, 77, 78], "static_set_nestable_mod": [72, 77, 78], "static_set_queue_timeout": [72, 77, 78], "static_set_shape_array_mod": [72, 77, 78], "static_set_split_factor": [72, 77, 78], "static_set_tmp_dir": [72, 77, 78], "static_set_with_grad": [72, 77, 78], "static_shap": [72, 77, 78], "static_shape_array_mod": [72, 77, 78], "static_shuffl": [72, 77, 78], "static_slogdet": [72, 77, 78], "static_solv": [72, 77, 78], "static_split": [72, 77, 78], "static_split_factor": [72, 77, 78], "static_split_func_cal": [72, 77, 78], "static_squeez": [72, 77, 78], "static_stable_divid": [72, 77, 78], "static_stable_pow": [72, 77, 78], "static_stack": [72, 77, 78], "static_std": [72, 77, 78], "static_stop_gradi": [72, 77, 78], "static_sum": [72, 77, 78], "static_supports_inplac": [72, 77, 78], "static_svd": [72, 77, 78], "static_svdv": [72, 77, 78], "static_swapax": [72, 77, 78], "static_tensordot": [72, 77, 78], "static_til": [72, 77, 78], "static_tmp_dir": [72, 77, 78], "static_to_ivy_shap": [72, 77, 78], "static_to_list": [72, 77, 78], "static_to_native_arrays_and_back": [72, 77, 78], "static_to_native_shap": [72, 77, 78], "static_to_scalar": [72, 77, 78], "static_total_mem_on_dev": [72, 77, 78], "static_tpu_is_avail": [72, 77, 78], "static_trac": [72, 77, 78], "static_try_else_non": [72, 77, 78], "static_type_promote_arrai": [72, 77, 78], "static_unset_default_devic": [72, 77, 78], "static_unset_default_dtyp": [72, 77, 78], "static_unset_default_float_dtyp": [72, 77, 78], "static_unset_default_int_dtyp": [72, 77, 78], "static_unset_default_uint_dtyp": [72, 77, 78], "static_unset_nestable_mod": [72, 77, 78], "static_unset_shape_array_mod": [72, 77, 78], "static_unset_with_grad": [72, 77, 78], "static_unstack": [72, 77, 78], "static_used_mem_on_dev": [72, 77, 78], "static_valid_dtyp": [72, 77, 78], "static_value_is_nan": [72, 77, 78], "static_var": [72, 77, 78], "static_vari": [72, 77, 78], "static_variable_data": [72, 77, 78], "static_vecdot": [72, 77, 78], "static_vector_norm": [72, 77, 78], "static_vector_to_skew_symmetric_matrix": [72, 77, 78], "static_wher": [72, 77, 78], "static_with_grad": [72, 77, 78], "static_zero_pad": [72, 77, 78], "containerbas": [73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 129], "formul": [73, 74, 164, 166, 168], "chain": [73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 128, 129, 139, 140, 152, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 701, 703, 705, 746, 747, 749, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 964, 965, 966, 968, 981, 987, 989, 991, 994, 996, 1015, 1016, 1018, 1075, 1077, 1079, 1080, 1082, 1084, 1129, 1130], "prune": [73, 74, 75, 76, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 294, 296, 298, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 701, 703, 705, 746, 747, 749, 775, 777, 779, 816, 818, 820, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 938, 940, 942, 968, 981, 982, 983, 987, 989, 991, 1015, 1016, 1018, 1075, 1077, 1079, 1080, 1082, 1084], "unit": [73, 74, 122, 123, 152, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193], "slope": [73, 74, 163, 169, 171, 172, 173], "leaki": [73, 74, 163, 169, 171, 172, 173], "rectifi": [73, 74, 163, 169, 172, 174, 176, 177, 178], "static_gelu": [73, 74, 164], "static_leaky_relu": [73, 74, 169], "static_relu": [73, 74, 174], "static_sigmoid": [73, 74, 179], "static_softmax": [73, 74, 184], "static_softplu": [73, 74, 189], "static_tanh": [73, 74, 85, 86, 194], "__getitem__": [75, 76, 129], "queri": [75, 76, 129, 130, 137, 355, 367, 377, 798, 813, 814, 1107, 1118], "slice": [75, 76, 672, 700, 701, 704, 968, 977], "__setitem__": [75, 76, 128, 129, 137], "val": [75, 76, 132, 137, 672, 715, 716, 717, 731, 732], "all_fals": [75, 76], "assert_is_bool": [75, 76], "entri": [75, 76, 202, 230, 231, 233, 234, 903, 943, 968, 981], "assert": [75, 76, 123, 133, 137, 138, 672, 682], "all_key_chain": [75, 76], "include_empti": [75, 76], "all_tru": [75, 76, 129, 138], "arrays_as_list": [75, 76], "intermedi": [75, 76], "as_arrai": [75, 76, 672, 710, 737], "as_bool": [75, 76], "as_on": [75, 76], "as_random_uniform": [75, 76], "low": [75, 76, 103, 104, 135, 992, 994, 995, 996, 998, 999, 1000, 1001], "uniform": [75, 76, 103, 104, 139, 992, 993, 994, 995, 996, 998, 1000, 1098, 1100, 1101, 1104, 1105], "boundari": [75, 76, 992, 998, 1000], "as_vari": [75, 76, 123], "as_zero": [75, 76], "assert_contains_sub_contain": [75, 76], "sub_cont": [75, 76], "diff": [75, 76, 129, 138], "screen": [75, 76, 138], "assert_contains_sub_structur": [75, 76], "check_shap": [75, 76], "assert_ident": [75, 76], "check_typ": [75, 76], "same_arrai": [75, 76, 138], "assert_identical_structur": [75, 76], "at_key_chain": [75, 76], "ignore_key_error": [75, 76], "ignore_non": [75, 76], "at_kei": [75, 76], "ignor": [75, 76, 121, 123, 152, 202, 236, 239, 968, 979, 1123, 1127], "substr": [75, 76], "clip_min": [75, 76], "clip_max": [75, 76], "config": [75, 76, 138, 968, 981], "duplic": [75, 76, 120, 126, 127, 133, 137, 139], "container_rightmost": [75, 76], "common_key_chain": [75, 76, 129], "contains_sub_contain": [75, 76], "match": [75, 76, 129, 272, 279, 282, 388, 621, 624, 672, 723], "contains_sub_structur": [75, 76], "create_if_abs": [75, 76], "inplac": [75, 76, 89, 90, 117, 119, 121, 127, 128, 137, 139, 672, 682, 714, 717, 718, 741, 757, 764, 765, 766, 767, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 1096, 1097, 1123, 1124, 1125, 1126, 1127, 1128], "cutoff_at_depth": [75, 76], "depth_cutoff": [75, 76], "cutoff_at_height": [75, 76], "height_cutoff": [75, 76], "deep_copi": [75, 76, 138], "intern": [75, 76, 120, 123, 128, 129, 131, 132, 757, 796, 968, 969, 978, 979, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1129, 1130], "belong": [75, 76, 139], "dev_clon": [75, 76], "dev_dist": [75, 76], "dev_str": [75, 76], "diff_kei": [75, 76], "detect_key_diff": [75, 76], "detect_value_diff": [75, 76], "detect_shape_diff": [75, 76], "treat": [75, 76, 123, 136, 140, 199, 200], "detect": [75, 76, 119, 123, 129, 133, 138, 139, 968, 969, 979], "container0": [75, 76], "axes_length": [75, 76, 672, 694, 695, 696], "rearrang": [75, 76, 672, 694, 696], "One": [75, 76, 103, 104, 123, 130, 135, 137, 138, 672, 695, 903, 934, 937, 992, 994, 995, 996], "callabl": [75, 76, 123, 129, 135, 153, 154, 155, 156, 157, 158, 159, 160, 161, 199, 200, 272, 315, 316, 355, 378, 672, 678, 683, 693, 695, 964, 965, 966, 967, 968, 974, 978, 979, 980], "find_sub_contain": [75, 76], "sub_cont_to_find": [75, 76], "exsit": [75, 76], "find_sub_structur": [75, 76], "sub_struc_to_find": [75, 76], "flatten_key_chain": [75, 76, 138, 1119, 1120], "__": [75, 76, 121, 138], "above_height": [75, 76, 138], "below_depth": [75, 76, 138], "format_key_chain": [75, 76], "format_fn": [75, 76], "string": [75, 76, 126, 130, 131, 133, 135, 138, 272, 277, 278, 304, 307, 322, 354, 355, 358, 359, 360, 361, 367, 373, 379, 383, 384, 387, 672, 692], "from_disk_as_hdf5": [75, 76, 138], "h5_obj_or_filepath": [75, 76], "slice_obj": [75, 76], "load": [75, 76, 152], "disk": [75, 76, 138], "h5py": [75, 76], "hdf5": [75, 76, 138, 1119, 1120], "h5": [75, 76], "from_disk_as_json": [75, 76, 138], "json_filepath": [75, 76], "json": [75, 76, 138], "from_disk_as_pickl": [75, 76, 138], "pickle_filepath": [75, 76], "pickl": [75, 76, 129, 138], "from_flat_list": [75, 76], "flat_list": [75, 76], "hierarchi": [75, 76, 138], "flat": [75, 76, 672, 729, 903, 929, 932], "popul": [75, 76, 123, 130, 131, 135, 992, 993, 1041, 1062, 1065, 1070, 1073], "from_numpi": [75, 76, 138], "h5_file_s": [75, 76], "batch": [75, 76, 125, 129, 138, 355, 376, 377, 672, 699, 798, 811, 815, 881, 883, 964, 965, 966, 967, 986, 987, 990, 1121, 1122], "handle_inplac": [75, 76], "prime": [75, 76], "overwritten": [75, 76, 126, 128], "has_kei": [75, 76], "query_kei": [75, 76], "somewher": [75, 76], "has_key_chain": [75, 76], "include_inf": [75, 76, 672, 712, 756], "leafwis": [75, 76], "well": [75, 76, 123, 124, 132, 139, 140, 151, 672, 712, 815, 863, 865], "inf": [75, 76, 123, 201, 388, 424, 427, 499, 502, 672, 712, 756, 815, 881, 883], "identical_array_shap": [75, 76], "identical_config": [75, 76], "identical_structur": [75, 76], "if_exist": [75, 76], "key_chains_contain": [75, 76], "sub_str": [75, 76], "join": [75, 76, 903, 909, 912, 948, 951, 1085], "list_stack": [75, 76, 138], "dim": [75, 76, 124, 130, 672, 726, 1107, 1118], "func": [75, 76, 89, 90, 129, 199, 200, 355, 378, 672, 683, 757, 768, 769, 770, 968, 981], "map_cont": [75, 76], "include_self": [75, 76], "possibi": [75, 76], "max_depth": [75, 76, 672, 711, 968, 980], "multi_map": [75, 76, 129], "map_nest": [75, 76, 95, 96, 99, 100, 839, 841, 909, 911, 948, 950], "leftmost": [75, 76, 968, 981], "multi_map_in_static_method": [75, 76, 129], "fn_name": [75, 76], "num_arrai": [75, 76, 123], "overwrite_at_key_chain": [75, 76], "overwrit": [75, 76, 132, 135, 355, 378], "target_dict": [75, 76], "return_dict": [75, 76], "prune_empti": [75, 76], "keep_non": [75, 76], "prune_key_chain": [75, 76], "key1": [75, 76, 139], "key2": [75, 76], "key3": [75, 76], "prune_key_from_key_chain": [75, 76], "prune_kei": [75, 76], "prune_keys_from_key_chain": [75, 76], "remove_key_length_limit": [75, 76], "remove_print_limit": [75, 76], "reshape_lik": [75, 76], "leading_shap": [75, 76], "return_cont": [75, 76], "restructur": [75, 76], "keep_orig": [75, 76], "transpos": [75, 76, 137, 140, 798, 800, 802, 804, 815, 850, 852, 856, 858, 1085, 1107, 1109, 1111, 1113], "restructure_key_chain": [75, 76], "keychain_map": [75, 76], "set_at_key_chain": [75, 76], "set_at_kei": [75, 76], "set_framework": [75, 76, 135, 137, 138, 140], "set_ivy_backend": [75, 76], "ivy_backend": [75, 76], "attribut": [75, 76, 120, 124, 129, 130, 136, 137, 138, 139, 272, 310, 313, 315, 316, 317, 320, 355, 374], "show_sub_contain": [75, 76], "sub_cont_or_keychain": [75, 76], "seed_valu": [75, 76, 992, 1002], "shuffle_h5_fil": [75, 76], "dataset": [75, 76, 138, 150, 1085], "size_ordered_arrai": [75, 76], "keychain": [75, 76], "smallest": [75, 76, 272, 310, 313, 317, 320, 388, 464, 467], "largest": [75, 76, 151, 272, 310, 313, 317, 320, 815, 866, 868], "slice_kei": [75, 76], "key_slic": [75, 76], "all_depth": [75, 76], "slice_via_kei": [75, 76], "sort_by_kei": [75, 76], "num_or_size_split": [75, 76, 135, 903, 943], "with_remaind": [75, 76, 903, 943], "constitu": [75, 76, 140], "evenli": [75, 76, 202, 203, 204, 230, 231, 233, 234, 903, 943], "store": [75, 76, 120, 126, 128, 129, 135, 137, 138, 139, 202, 267, 271, 672, 699, 757, 796, 815, 875, 877, 903, 943, 1119, 1120], "preserve_typ": [75, 76, 757, 793], "stop": [75, 76, 79, 80, 135, 152, 202, 203, 204, 205, 230, 231, 232, 233, 234, 235, 355, 357, 378, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 793, 964, 965, 966, 967, 1123, 1124, 1125, 1126, 1127, 1128], "structural_diff": [75, 76], "target": [75, 76, 117, 134, 138, 139, 140, 355, 360, 1085], "to_dict": [75, 76], "to_disk_as_hdf5": [75, 76, 138], "starting_index": [75, 76], "max_batch_s": [75, 76], "later": [75, 76, 123, 672, 683], "to_disk_as_json": [75, 76, 138], "to_disk_as_pickl": [75, 76, 138], "to_flat_list": [75, 76], "to_iter": [75, 76, 129], "leaf_keys_onli": [75, 76], "to_iterator_kei": [75, 76], "to_iterator_valu": [75, 76], "to_json": [75, 76], "to_multi_dev": [75, 76], "multidevcontain": [75, 76], "distributedarrai": [75, 76], "update_backend": [75, 76], "to_raw": [75, 76], "raw": [75, 76, 120], "trim_kei": [75, 76], "max_length": [75, 76], "try_kc": [75, 76], "tri": [75, 76], "arbitrari": [75, 76, 119, 123, 125, 129, 132, 139, 152, 202, 236, 239, 272, 284, 287, 340, 343], "concatten": [75, 76, 355, 378], "dim_siz": [75, 76], "update_config": [75, 76], "global_norm": [75, 76, 87, 88, 685, 686], "vector": [75, 76, 151, 202, 236, 239, 672, 685, 687, 798, 811, 815, 821, 823, 830, 832, 839, 842, 853, 855, 866, 868, 869, 871, 878, 880, 881, 883, 884, 886, 1107, 1117], "with_default_key_color": [75, 76], "with_entries_as_list": [75, 76], "with_ivy_backend": [75, 76], "with_key_length_limit": [75, 76, 138], "with_print_ind": [75, 76, 138], "with_print_limit": [75, 76, 138], "with_print_line_spac": [75, 76], "static_arang": [79, 80, 203], "static_asarrai": [79, 80, 206], "static_empty_lik": [79, 80, 211], "static_ey": [79, 80, 216], "n_row": [79, 80, 202, 216, 217, 218], "n_col": [79, 80, 202, 216, 217, 218], "static_from_dlpack": [79, 80, 219], "static_full_lik": [79, 80, 225], "static_linspac": [79, 80, 230], "num": [79, 80, 135, 202, 230, 231, 232, 233, 234, 235], "endpoint": [79, 80, 202, 230, 231, 232, 233, 235], "static_logspac": [79, 80, 233], "static_meshgrid": [79, 80, 236], "static_native_arrai": [79, 80, 241], "static_on": [79, 80, 246], "static_ones_lik": [79, 80, 249], "static_tril": [79, 80, 254], "static_triu": [79, 80, 259], "static_zero": [79, 80, 264], "static_zeros_lik": [79, 80, 267], "int32": [81, 82, 87, 88, 123, 130, 202, 267, 271, 272, 294, 296, 297, 298, 304, 307, 333, 336, 345, 672, 746, 747, 749, 750, 903, 917, 920, 1041, 1058, 1061, 1066, 1069], "int64": [81, 82, 123, 130, 272, 294, 296, 297, 298, 338, 354, 388, 454, 457, 1004, 1005, 1006, 1041, 1058, 1061, 1066, 1069], "static_astyp": [81, 82, 279], "static_broadcast_arrai": [81, 82, 284], "static_broadcast_to": [81, 82, 289], "static_can_cast": [81, 82, 294], "from_": [81, 82, 272, 294, 297, 298], "static_dtyp": [81, 82, 304], "static_finfo": [81, 82, 310], "static_iinfo": [81, 82, 317], "static_is_bool_dtyp": [81, 82, 323], "dtype_in": [81, 82, 272, 277, 278, 309, 322, 323, 326, 327, 328, 331, 332, 333, 336, 337, 338, 354], "static_is_float_dtyp": [81, 82, 328], "static_is_int_dtyp": [81, 82, 333], "static_result_typ": [81, 82, 340], "static_dev": [83, 84, 362], "static_to_devic": [83, 84, 379], "02": [85, 86, 414, 416, 757, 759, 762], "21": [85, 86, 388, 414, 416, 424, 426, 427, 428, 459, 462, 672, 690, 815, 827, 829, 853, 855, 887, 898, 901, 1041, 1042, 1045], "61": [85, 86, 97, 98, 388, 414, 416, 651, 654, 798, 805, 808, 887, 888, 890, 891, 892, 898, 900, 902], "915": [85, 86, 388, 424, 426, 427, 428], "29": [85, 86, 388, 424, 426, 427, 428], "983": [85, 86, 388, 424, 426, 427, 428], "75": [85, 86, 388, 414, 417, 418, 424, 426, 427, 428, 815, 836, 838, 853, 855], "35": [85, 86, 388, 424, 426, 427, 428, 646, 649, 798, 814, 815, 821, 823, 1004, 1008, 1041, 1042, 1045], "978": [85, 86, 163, 179, 182, 388, 424, 426, 427, 428], "696": [85, 86, 388, 424, 426, 427, 428], "993": [85, 86, 388, 424, 426, 427, 428], "96": [85, 86, 194, 195, 388, 469, 471, 472, 473, 661, 665, 757, 759, 762, 815, 853, 855, 1041, 1042, 1045], "thefunct": [85, 86, 489, 491, 499, 503, 504, 508], "649": [85, 86, 499, 501], "220": [85, 86, 499, 501], "959": [85, 86, 388, 499, 501, 636, 638, 639, 640], "53": [85, 86, 355, 384, 499, 501], "865": [85, 86, 499, 501], "metho": [85, 86, 519, 521, 564, 566], "20": [85, 86, 103, 104, 137, 388, 459, 462, 494, 497, 499, 502, 626, 628, 629, 630, 646, 649, 815, 827, 829, 853, 855, 872, 874, 992, 994, 995, 996, 1004, 1007, 1008, 1041, 1042, 1045], "300": [85, 86, 123, 388, 626, 628, 629, 630], "527": [85, 86, 388, 626, 628, 629, 630], "301": [85, 86, 388, 626, 628, 629, 630], "757": [85, 86, 388, 636, 638, 639, 640], "279": [85, 86, 388, 636, 638, 639, 640], "76": [85, 86, 194, 195, 388, 474, 477, 641, 643, 645, 757, 759, 762, 815, 872, 874, 1041, 1042, 1045], "37": [85, 86, 103, 104, 388, 414, 417, 418, 641, 643, 645, 661, 665, 994, 996], "835": [85, 86, 641, 643, 645], "34": [85, 86, 388, 459, 462, 641, 643, 645, 646, 649], "98": [85, 86, 388, 459, 462, 641, 643, 645, 815, 853, 855, 1004, 1008, 1041, 1042, 1045], "347": [85, 86, 641, 643, 645], "721": [85, 86, 641, 643, 645], "static_ab": [85, 86, 389], "static_aco": [85, 86, 394], "static_acosh": [85, 86, 399], "static_add": [85, 86, 120, 121, 129, 404], "static_asin": [85, 86, 409], "static_asinh": [85, 86, 414], "97": [85, 86, 388, 414, 417, 418], "static_atan": [85, 86, 419], "static_atan2": [85, 86, 424], "static_atanh": [85, 86, 429], "static_bitwise_and": [85, 86, 434], "static_bitwise_invert": [85, 86, 439], "static_bitwise_left_shift": [85, 86, 444], "static_bitwise_or": [85, 86, 449], "static_bitwise_right_shift": [85, 86, 454], "static_bitwise_xor": [85, 86, 459], "static_ceil": [85, 86, 464], "static_co": [85, 86, 469], "static_cosh": [85, 86, 474], "static_divid": [85, 86, 129, 479], "static_equ": [85, 86, 484], "static_erf": [85, 86, 489], "static_exp": [85, 86, 494], "static_expm1": [85, 86, 388, 499, 502], "areal": [85, 86, 499, 503], "static_floor": [85, 86, 504], "static_floor_divid": [85, 86, 509], "static_great": [85, 86, 514], "static_greater_equ": [85, 86, 519], "static_isfinit": [85, 86, 524], "x_i": [85, 86, 120, 388, 389, 392, 394, 397, 399, 402, 409, 412, 414, 417, 419, 422, 439, 442, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 524, 527, 528, 529, 532, 533, 534, 537, 538, 549, 552, 554, 557, 564, 567, 579, 582, 601, 604, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 661, 665, 666, 667, 671, 1009, 1010, 1014, 1015, 1019, 1025, 1029, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073], "static_isinf": [85, 86, 529], "static_isnan": [85, 86, 534], "static_less": [85, 86, 539], "static_less_equ": [85, 86, 544], "static_log": [85, 86, 549], "static_log10": [85, 86, 554], "static_log1p": [85, 86, 559], "static_log2": [85, 86, 564], "static_logaddexp": [85, 86, 569], "static_logical_and": [85, 86, 574], "static_logical_not": [85, 86, 579], "static_logical_or": [85, 86, 584], "static_logical_xor": [85, 86, 589], "static_multipli": [85, 86, 129, 596], "static_neg": [85, 86, 601], "static_not_equ": [85, 86, 606], "static_posit": [85, 86, 611], "static_pow": [85, 86, 616], "static_remaind": [85, 86, 621], "static_round": [85, 86, 626], "thevfunct": [85, 86, 626, 630], "static_sign": [85, 86, 631], "static_sin": [85, 86, 636], "static_sinh": [85, 86, 641], "static_sqrt": [85, 86, 646], "static_squar": [85, 86, 651], "static_subtract": [85, 86, 129, 656], "static_tan": [85, 86, 121, 129, 661], "143": [85, 86, 121, 388, 661, 662, 664, 665], "38": [85, 86, 121, 272, 310, 313, 388, 661, 662, 664, 665], "995": [85, 86, 194, 195, 197, 388, 666], "9999": [85, 86, 194, 195], "static_trunc": [85, 86, 667], "static_all_equ": [87, 88, 673, 675], "max_norm": [87, 88, 672, 684, 685, 686, 687], "static_gather_nd": [87, 88, 701], "static_to_numpi": [87, 88, 746, 749], "lr": [89, 90, 138, 139, 757, 764, 765, 766, 767, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 1123, 1124, 1125, 1126, 1127, 1128], "mw_tm1": [89, 90, 757, 764, 765, 766, 767, 780, 781, 782, 783], "vw_tm1": [89, 90, 757, 764, 765, 766, 767, 780, 781, 782, 783], "max_trust_ratio": [89, 90, 757, 780, 781, 782, 783, 1123, 1125], "decay_lambda": [89, 90, 757, 780, 781, 782, 783, 784, 785, 786, 787, 1123, 1125, 1126], "effective_grad": [89, 90, 757, 788, 789, 790, 791], "static_adam_step": [89, 90, 759], "87": [89, 90, 103, 104, 757, 759, 762, 763, 994, 996], "976": [89, 90, 388, 666, 757, 759, 762, 763], "static_adam_upd": [89, 90, 764], "static_execute_with_gradi": [89, 90, 768], "retain_grad": [89, 90, 129, 757, 768, 769, 770], "static_gradient_descent_upd": [89, 90, 771], "static_is_vari": [89, 90, 775], "static_lamb_upd": [89, 90, 780], "static_lars_upd": [89, 90, 784], "static_optimizer_upd": [89, 90, 788], "inp": [93, 94, 798, 805, 807, 808, 809], "static_depthwise_conv2d": [93, 94, 805], "73": [95, 96, 123, 388, 646, 649, 815, 816, 818, 819, 820, 986, 987, 990], "577": [95, 96, 815, 816, 818, 819, 820], "41": [95, 96, 137, 388, 459, 462, 646, 649, 815, 816, 818, 819, 820, 1041, 1066, 1069], "707": [95, 96, 815, 816, 818, 819, 820], "static_choleski": [95, 96, 816], "static_rol": [95, 96, 99, 100, 121, 129, 816, 820, 904, 908, 938], "511": [97, 98, 887, 888, 890, 891, 892, 898, 900, 902], "5108256": [97, 98, 893, 895], "609438": [97, 98, 893, 895], "static_binary_cross_entropi": [97, 98, 888], "static_cross_entropi": [97, 98, 893], "20397282": [97, 98, 893, 897], "83258148": [97, 98, 893, 897], "60943794": [97, 98, 893, 897], "static_sparse_cross_entropi": [97, 98, 898], "static_clip": [99, 100, 904], "static_repeat": [99, 100, 929], "658": [101, 102, 986, 987, 989, 990, 991], "04": [101, 102, 272, 310, 313, 388, 499, 502, 798, 814, 986, 987, 989, 990, 991], "759": [101, 102, 986, 987, 989, 990, 991], "403": [101, 102, 987, 989, 991], "62": [101, 102, 103, 104, 388, 641, 644, 987, 989, 991, 994, 996], "static_layer_norm": [101, 102, 987], "static_randint": [103, 104, 994], "drawn": [103, 104, 123, 992, 993, 994, 995, 996, 997, 998, 1000], "highest": [103, 104, 992, 994, 995, 996], "nativeshap": [103, 104, 202, 210, 224, 246, 247, 264, 266, 672, 730, 737, 743, 745, 798, 800, 802, 804, 903, 934, 937, 992, 994, 995, 996, 997, 998, 1000], "half": [103, 104, 202, 203, 204, 992, 994, 995, 996, 998, 1000], "40": [103, 104, 388, 474, 477, 646, 649, 815, 853, 855, 994, 996, 1041, 1042, 1045], "52": [103, 104, 388, 424, 427, 757, 759, 762, 815, 853, 855, 994, 996, 1009, 1010, 1014, 1041, 1042, 1045], "95": [103, 104, 388, 631, 634, 757, 759, 762, 994, 996], "13": [103, 104, 121, 123, 129, 355, 367, 388, 434, 437, 459, 462, 474, 477, 499, 502, 646, 649, 672, 690, 757, 759, 762, 798, 814, 815, 827, 829, 853, 855, 994, 996, 1004, 1008, 1009, 1010, 1014, 1041, 1042, 1045], "static_random_uniform": [103, 104, 998], "static_unique_al": [107, 108, 1010], "static_unique_count": [107, 108, 1015], "classivi": [107, 108, 903, 943, 1009, 1015, 1016, 1018, 1019], "static_unique_invers": [107, 108, 1020], "static_unique_valu": [107, 108, 1025], "static_argsort": [109, 110, 1031], "static_sort": [109, 110, 1036], "static_al": [113, 114, 1075], "static_ani": [113, 114, 1080], "add_ivy_container_instance_method": 115, "containerexampl": [115, 116], "who": [117, 134, 152], "mainli": [117, 136, 138], "under": [117, 120, 121, 122, 123, 124, 125, 129, 134, 135, 138, 140], "hood": [117, 121, 123, 125, 129, 134, 135, 138, 140], "weed": [117, 134], "behind": [117, 123, 134, 136, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790], "tour": 117, "primari": [117, 123, 126, 132, 152], "composit": [117, 123, 126, 128, 129, 132, 135, 139, 140, 152], "nestabl": [117, 120, 121, 123, 132, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 464, 467, 499, 502, 504, 507, 594, 595, 606, 609, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 827, 829, 903, 938, 941, 986, 987, 990, 1009, 1015, 1019, 1041, 1046, 1049, 1074, 1075, 1078], "dynam": [117, 130, 131, 132, 135, 199, 200], "runtim": [117, 123, 355], "j": [117, 672, 680, 681, 815, 875, 877, 1041, 1042, 1045], "borrow": 117, "taken": [118, 133, 140, 815, 827, 829], "compil": [118, 129, 134, 136, 152, 1085, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128], "meta": [118, 128, 965, 966, 967], "overlap": 118, "sever": [118, 152, 815, 836, 838], "judgement": 118, "locat": [118, 123, 126, 131, 992, 993], "some_namespac": 118, "some_backend": 118, "another_backend": 118, "break": [118, 119, 133, 137, 152, 1085], "anyth": [118, 123, 1085], "refactor": 118, "ongo": 118, "subfold": [118, 123], "via": [118, 129, 130, 131, 132, 135, 137, 138, 151, 968, 969, 978, 979], "file_nam": [118, 123], "my_func": [118, 121], "my": 118, "cooler": 118, "produc": [118, 123, 798, 814], "something_cool": 118, "category_nam": [119, 120, 125, 130, 131], "backend_nam": [119, 120, 125, 126, 127, 130, 131], "adress": 119, "conveni": [119, 130, 131, 136, 138, 139], "revisit": [119, 140], "dedic": [119, 137, 139, 757, 796, 1096, 1097], "four": [119, 121, 125, 130, 138], "tf": [119, 124, 128, 130, 131, 132, 135, 140, 152, 1085], "jnp": [119, 130, 131, 132, 140, 1085], "jaxarrai": [119, 130, 131, 132], "wherea": [119, 121, 123, 125, 128, 130, 131, 140], "__sub__": [119, 121, 128, 129, 137], "__mul__": [119, 121, 128, 129, 137], "__div__": 119, "permit": [119, 123, 128], "dicat": 119, "addition": [119, 129, 132], "omit": [119, 132, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "wrapper": [119, 127, 128, 129, 130, 132, 137], "contrast": [119, 120], "futher": 119, "absenc": [119, 129], "pep": 119, "484": 119, "annot": [119, 133], "dictat": [119, 121, 128, 132], "brittl": 119, "intend": [119, 1041, 1066, 1069], "subset": [119, 120, 123, 135], "freeli": 119, "extend": [119, 120, 126], "consum": [119, 123, 129], "inde": [119, 152], "flexibl": 119, "technic": [119, 129, 132, 152], "original_typ": 119, "cumbersom": 119, "readabl": [119, 128, 129, 137, 138], "account": 120, "instanti": 120, "firstli": [120, 121, 125, 128, 130, 132, 138], "templat": [120, 123, 1085], "spec": [120, 121], "api_specif": [120, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 815, 827, 829, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049], "array_api": 120, "preview": 120, "render": 120, "incorrectli": [120, 133], "onlin": [120, 1085], "domain": [120, 388, 394, 397, 399, 402, 409, 412, 414, 417, 419, 422, 424, 427, 469, 472, 474, 477, 494, 497, 499, 502, 549, 552, 554, 557, 564, 567, 636, 639, 641, 644, 646, 649, 661, 665, 666], "codomain": [120, 388, 394, 397, 399, 402, 409, 412, 414, 417, 419, 422, 424, 427, 469, 472, 474, 477, 494, 497, 499, 502, 549, 552, 554, 557, 564, 567, 636, 639, 641, 644, 646, 649, 661, 665, 666], "assum": [120, 123, 126, 130, 137, 138, 152, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 469, 472, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 986, 987, 990, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078], "operand": [120, 124, 388, 394, 397, 399, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 459, 462, 464, 467, 469, 472, 474, 477, 494, 497, 499, 502, 504, 507, 549, 552, 554, 557, 564, 567, 569, 572, 596, 599, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 649, 661, 665, 666, 667, 671, 1041, 1042, 1045, 1046, 1049, 1054, 1057, 1066, 1069], "ref": [120, 388, 454, 457, 539, 542, 596, 599, 606, 609, 621, 624, 656, 660, 903, 948, 951], "But": [120, 129, 140], "needless": 120, "info": [120, 1085], "renam": 120, "conform": [120, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 544, 547, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 815, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078], "org": [120, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 310, 313, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 757, 759, 762, 764, 766, 815, 827, 829, 903, 917, 920, 938, 941, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049], "elementwise_funct": [120, 388, 389, 392, 409, 412, 414, 417, 424, 427, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 636, 639, 646, 649, 651, 654, 815, 827, 829, 903, 938, 941, 1009, 1010, 1014, 1030, 1031, 1034, 1041, 1046, 1049], "descript": [120, 123, 129, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 881, 883, 903, 917, 920, 921, 924, 938, 941, 986, 987, 990, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049, 1074, 1075, 1078], "simplic": [120, 139, 151, 202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 233, 234, 236, 239, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271, 272, 294, 297, 323, 326, 333, 336, 388, 389, 392, 404, 407, 409, 412, 414, 417, 424, 427, 434, 437, 459, 462, 464, 467, 474, 477, 499, 502, 504, 507, 594, 595, 606, 609, 626, 629, 631, 634, 636, 639, 646, 649, 651, 654, 661, 665, 666, 672, 700, 798, 801, 805, 808, 814, 815, 816, 819, 824, 826, 827, 829, 903, 917, 920, 921, 924, 938, 941, 986, 987, 990, 1009, 1010, 1014, 1015, 1019, 1030, 1031, 1034, 1041, 1046, 1049], "judgment": 120, "beyond": [120, 903, 938, 941], "text": 120, "func_nam": [120, 121, 125], "pure": [120, 137, 140, 152], "themselv": [120, 125, 129, 130, 131, 139, 968, 969], "operator_nam": 120, "succinct": 120, "contstructor": 120, "though": [120, 125, 130, 138, 152], "forward": [120, 123, 140, 151, 152, 1119, 1120, 1123, 1127], "_forward": [120, 135, 138, 139, 1085], "former": 120, "explicitli": [120, 125, 126, 128, 129, 132, 135, 152, 815, 830, 832, 1107, 1116, 1118, 1119, 1120], "latter": [120, 126], "implicit": [120, 123, 129, 135], "docst": 120, "eight": 121, "static_": 121, "op_nam": 121, "__r": 121, "__truediv__": [121, 128, 129], "recap": [121, 129, 139], "independ": [121, 122, 127, 129, 135, 140, 815, 821, 823, 863, 865, 992, 993], "combinatorili": 121, "variat": [121, 123], "grid": [121, 123, 151, 202, 236, 239], "vari": [121, 123, 129, 137, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "simplest": [121, 123], "unus": [121, 132, 133, 199, 200], "excess": [121, 126, 137], "okai": [121, 135], "showcas": [121, 151], "demonstr": [121, 137], "replic": [121, 130], "meant": 121, "imaginari": 121, "some_flag": 121, "another_flag": 121, "jointli": 121, "three": [121, 123, 124, 129, 134, 202, 236, 239, 1085], "x0": [121, 672, 680], "procedur": 121, "sens": [121, 129, 137], "5574077": 121, "1850398": 121, "5463025": 121, "8422884": 121, "91601413": 121, "9647598": 121, "3738229": 121, "1597457": 121, "0963247": 121, "9955841": 121, "3278579": 121, "multi": [121, 129, 134, 152, 798, 813, 815, 821, 823, 1085, 1091, 1107, 1118], "seper": [121, 672, 699], "pars": [121, 152], "satisfi": [121, 815, 884, 886], "far": [121, 131, 136, 137, 968, 969, 979], "asid": [121, 151], "irrelev": [121, 130], "increasingli": 121, "complex": [121, 124, 138, 139, 140, 152, 815, 830, 832, 866, 868], "14254655": 121, "1578213": 121, "380515": 121, "trivial": 121, "exlud": 121, "thoroughli": 122, "ci": [122, 123, 152], "failur": 122, "On": [123, 124, 133, 136, 140], "fixtur": 123, "hit": [123, 135], "action": 123, "eleg": 123, "intellig": 123, "sampl": [123, 798, 810, 992, 993, 997, 998, 1000, 1041, 1062, 1065, 1070, 1073, 1107, 1115], "rang": [123, 138, 139, 140, 202, 203, 204, 230, 231, 233, 234, 1009, 1010, 1014, 1041, 1058, 1061, 1066, 1069, 1085], "cach": [123, 125, 355, 360, 672, 683], "unexplor": 123, "known": 123, "repeatedli": [123, 129, 968, 977], "upload": 123, "artifact": 123, "parametr": 123, "statement": [123, 133, 152], "plai": [123, 124, 140], "varieti": [123, 130, 131], "wide": 123, "valid_int_dtyp": 123, "int8": [123, 130, 272, 333, 336, 354], "int16": [123, 130, 272, 294, 297, 333, 336, 1041, 1058, 1061, 1066, 1069], "uint8": [123, 130, 272, 294, 297, 303, 338, 345, 348, 353, 354], "uint16": [123, 130, 272, 303, 316, 338, 1041, 1058, 1061, 1066, 1069], "uint32": [123, 130, 272, 303, 316, 353, 1041, 1058, 1061, 1066, 1069], "uint64": [123, 130, 272, 303, 316, 345, 348, 1041, 1058, 1061, 1066, 1069], "custom_strategi": 123, "st": 123, "sampled_from": 123, "min_siz": 123, "max_siz": 123, "wherein": 123, "referenc": 123, "print_hypothesis_exampl": 123, "searchstrategi": 123, "randomis": 123, "simplist": 123, "intricaci": 123, "briefli": [123, 125, 138], "bound": [123, 135], "mechan": [123, 150, 152, 1085], "power": [123, 137, 138, 139, 388, 454, 457, 494, 497, 616, 619, 672, 707, 731, 740, 815, 846, 1098], "math": [123, 132, 140, 1085], "inclus": [123, 132, 202, 203, 204, 992, 994, 995], "width": 123, "losslessli": 123, "mostli": 123, "one_of": 123, "datum": 123, "pipe": 123, "overload": 123, "shorthand": 123, "draw": [123, 992, 993, 997, 998, 1000], "input_dtyp": 123, "reject": 123, "flatmap": 123, "suppos": 123, "dataobject": 123, "test_argsort": 123, "decor": [123, 125, 127, 129, 130, 131, 132], "initialis": [123, 355], "snippet": 123, "dtype_and_x": 123, "dtype_and_valu": 123, "valid_float_dtyp": 123, "list_of_length": 123, "num_positional_arg": 123, "instance_method": 123, "test_leaky_relu": 123, "float16": [123, 124, 130, 272, 310, 313, 316, 354], "exhaust": 123, "num_posit": 123, "indirectli": 123, "advis": 123, "seri": [123, 124], "9433925": 123, "401298464324817e": 123, "574352379": 123, "99999": 123, "2250738585072014e": 123, "308": [123, 272, 310, 313], "103515625e": 123, "unpack": [123, 133, 672, 755], "seamlessli": 123, "edg": [123, 135, 140, 903, 904, 907, 913, 916, 960, 963, 1085], "encount": 123, "criterion": 123, "straight": [123, 137, 1085], "array_valu": 123, "valid_ax": 123, "hand": [123, 125, 133, 152], "craft": 123, "polici": [123, 151], "hoc": 123, "overview": [123, 134, 151], "array_dtyp": 123, "array_bool": 123, "na": 123, "test_concat": 123, "test_devic": 123, "array_shap": 123, "test_manipul": 123, "common_shap": 123, "test_lay": 123, "size_bound": 123, "precis": [123, 272, 310, 313, 388, 596, 599, 646, 649], "283405296074752": 123, "564049465049088": 123, "0417876997507982e": 123, "min_valu": 123, "max_valu": 123, "allow_inf": 123, "min_num_dim": 123, "wherev": 123, "reshape_shap": 123, "stand": 123, "alon": [123, 355, 373, 387], "fashion": 123, "some_sequ": 123, "06": [123, 272, 310, 313, 757, 759, 762], "allow_subnorm": 123, "exclude_min": 123, "960464477539063e": 123, "08": [123, 388, 414, 417, 499, 502, 798, 814], "coverag": 123, "allow_nan": 123, "Such": 123, "kind": [123, 152, 272, 310, 313, 317, 320, 388, 616, 619, 1041, 1058, 1061, 1066, 1069], "get_shap": 123, "allow_non": 123, "max_num_dim": 123, "min_dim_s": 123, "none_or_list_of_float": 123, "200": 123, "199": [123, 388, 414, 417], "99999999999997": 123, "000000000000002": 123, "125": 123, "43759670925832": 123, "get_mean_std": 123, "probabilist": 123, "811428143185347e": 123, "89": [123, 388, 459, 462, 815, 872, 874, 1041, 1066, 1069], "none_or_list_float": 123, "get_bound": 123, "arrays_valu": 123, "put": [123, 152], "36418": 123, "213": 123, "21716926": 123, "get_prob": 123, "unnorm": [123, 992, 993], "099609375": 123, "get_axi": 123, "number_positional_argu": 123, "mind": [123, 128, 129], "bodi": 123, "test_valu": 123, "enough": [123, 137, 138, 139], "justifi": 123, "unduli": 123, "labori": 123, "straightforward": [123, 138], "scenario": 123, "autom": [123, 1085], "report": 123, "test_demo": 123, "falsifi": 123, "failing_test": 123, "traceback": 123, "123": [123, 672, 697], "assertionerror": [123, 757, 797], "shrink": 123, "prescrib": 123, "behavior": [123, 129, 135, 152, 388, 616, 619, 621, 624, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "identifi": 123, "closest": [123, 272, 299, 388, 464, 467, 504, 507, 509, 512, 626, 629, 667, 671], "checkout": 123, "scratch": 123, "databas": 123, "therebi": 123, "debug": [123, 129, 138], "event": [123, 1085], "test_gelu": 123, "test_fil": 123, "brief": 123, "phase": [123, 152], "reus": 123, "notabl": 123, "displai": [123, 129, 138], "verbos": [123, 135, 1085, 1133], "newer": 123, "max_exampl": 123, "impact": [123, 139], "deadlin": 123, "weird": 123, "verifi": [123, 130, 131, 137, 1085, 1091], "truth": [123, 388, 484, 487, 514, 517, 519, 522, 539, 542, 544, 547, 606, 609], "opt": [123, 126, 132, 137], "defer": [123, 125, 128, 129, 130, 131, 132], "suffic": [123, 127], "catch": [123, 672, 693], "systemat": 123, "safeguard": 123, "inabl": 123, "fact": [123, 138], "lax": [124, 152], "unsupported_dtyp": [124, 130], "bfloat16": [124, 130], "thu": [124, 388, 454, 457, 616, 619, 621, 624, 815, 830, 832], "categoris": 124, "notic": [124, 137], "mathematical_funct": 124, "arithmetic_oper": 124, "same_kind": 124, "subok": 124, "mathemat": [124, 201, 388, 404, 407, 424, 427, 499, 502, 596, 599, 815, 881, 883], "slightli": [124, 129, 135, 139], "recov": 124, "obtain": 124, "trigonometric_funct": 124, "pointwise_op": 124, "concaten": [124, 135, 138, 672, 699, 903, 909, 912, 1085], "manipulation_routin": 124, "joining_arrai": 124, "indexing_slicing_joining_mutating_op": 124, "cat": [124, 135, 140], "grasp": 124, "youtub": 124, "categor": [125, 131], "mutual": [125, 129], "constitut": [125, 135, 1041, 1062, 1065, 1070, 1073], "venn": 125, "diagram": 125, "light": [125, 152], "log_pr": [125, 129, 132], "array_arg": 125, "typic": 125, "whatsoev": [125, 129], "commonli": [125, 1041, 1062, 1065, 1070, 1073], "outsid": [125, 131, 133, 135, 137, 140, 903, 904, 907, 948, 951], "deal": [125, 152], "concurr": [125, 129], "modif": 125, "group": [125, 129], "get_all_arrays_on_dev": 125, "nested_map": [125, 968], "index_nest": [125, 968], "implicit_backend": 126, "unless": [126, 131, 132, 152, 388, 596, 599, 672, 726], "__dict__": [126, 135, 137], "ivy_original_dict": [126, 135], "unmodifi": [126, 130], "fallback": 126, "freedom": [126, 1041, 1062, 1065, 1070, 1073], "recommend": [126, 388, 579, 582, 584, 587, 621, 624, 1041, 1050, 1053], "achiev": [127, 133, 138, 140], "topic": [127, 137], "_data": [128, 137], "organiz": [128, 129], "inherit": [128, 129, 137], "bear": [128, 129, 130], "necessarili": [128, 129], "although": [128, 129], "underpin": [128, 129, 135], "programmat": [128, 129], "backup": [128, 129], "accident": [128, 129], "absent": [128, 129], "perk": [128, 129], "auto": [128, 129, 138], "throw": [128, 137], "imposs": 128, "coupl": [128, 129, 137, 139], "anywai": 128, "secondli": [128, 130], "easier": 128, "five": [129, 138], "decis": [129, 135, 137], "arbitrarili": [129, 138], "__repr__": 129, "control": [129, 130, 132, 137, 138, 151], "__getattr__": 129, "underli": [129, 388, 434, 437, 449, 452, 459, 462, 589, 592], "__setattr__": 129, "__contains__": 129, "__getstate__": 129, "__setstate__": 129, "unpickl": 129, "expand": [129, 672, 699, 903, 917, 920], "counterpart": 129, "irrespect": [129, 132, 137, 272, 279, 282], "presenc": [129, 132], "implicitli": 129, "intuit": [129, 138, 139], "chronolog": 129, "had": [129, 132], "sequenti": [129, 139], "flow": [129, 151], "implic": 129, "eager": [129, 152], "children": 129, "shallowest": 129, "deepest": 129, "22": [129, 388, 459, 462, 815, 827, 829, 853, 855, 968, 985, 1004, 1008, 1041, 1042, 1045], "dy": [129, 757, 768, 769], "dx": [129, 757, 768, 769], "autograd": [129, 152], "grad": [129, 138, 139, 140, 1085, 1123, 1127], "redund": 129, "num_head": [129, 798, 813, 1107, 1118], "mask": [129, 798, 813, 814], "to_q_fn": [129, 798, 813], "to_kv_fn": [129, 798, 813], "to_out_fn": [129, 132, 798, 813], "to_q_v": [129, 798, 813], "to_kv_v": [129, 798, 813], "to_out_v": [129, 798, 813], "measur": [129, 798, 813, 1107, 1118], "dot": [129, 798, 813, 814, 815, 872, 874, 878, 880, 1107, 1118], "all_dtyp": 130, "all_numeric_dtyp": 130, "all_int_dtyp": 130, "all_float_dtyp": 130, "fall": [130, 134, 1085, 1119, 1120, 1123, 1127], "thirdli": 130, "native_float32": [130, 272, 354], "importantli": [130, 137, 140, 151], "arguabl": [130, 131], "compound": 130, "overflow": [130, 388, 404, 407, 1041, 1066, 1069], "arr": [130, 131], "settabl": [130, 131], "mx": [130, 131, 132, 1085], "nd": [130, 131, 132, 135, 140, 1085], "deleg": 130, "shape_to_tupl": 130, "idx": [131, 137, 672, 678], "tpu": [131, 355, 376, 385], "aliv": [131, 355, 368, 372, 374, 672, 706, 725, 727], "memori": [131, 132, 150, 152, 355, 360, 373, 378, 384, 387, 798, 812, 1085], "dual": 131, "thrown": [131, 152, 672, 717], "rare": [131, 152], "program": 132, "strictli": 132, "ration": 132, "speak": 132, "subtli": 132, "ensure_in_backend": [132, 672, 717], "x_nativ": 132, "val_n": 132, "assign": [132, 133, 137], "elif": 132, "unspecifi": [132, 388, 616, 619, 621, 624, 815, 830, 832, 903, 948, 951], "predominantli": [132, 151], "altern": [132, 138], "_wrap_fn": 132, "maxim": [132, 135], "inner": [132, 137, 815, 830, 832, 839, 842, 964, 965, 966, 967], "third": [132, 152, 815, 866, 868, 1009, 1010, 1014], "leverag": 132, "equival": [132, 138, 140, 202, 203, 204, 388, 454, 457, 579, 582, 584, 587, 621, 624, 815, 847, 849, 856, 858, 863, 865, 881, 883], "input_arrai": 132, "clean": [133, 135, 136, 138], "flake8": 133, "undefin": 133, "yield": [133, 1004, 1008], "handler": [133, 134, 136, 140, 1085], "liter": [133, 815, 881, 883], "carri": 133, "star": 133, "byte": 133, "notimpl": 133, "notimplementederror": 133, "unsuccess": 133, "exce": [133, 388, 595], "black": 133, "disobei": 133, "successfulli": 133, "comparison": 133, "sound": 134, "higher": [134, 135, 140, 152, 757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790], "fledg": [135, 136], "syntact": [135, 140], "clip_by_valu": [135, 140], "clamp": [135, 140], "fit": [135, 903, 929, 932], "construct": [135, 136, 139, 140, 903, 956, 959, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "power_seq": 135, "resid": [135, 139], "ml_framework": [135, 140, 202, 203, 204], "current_framework": [135, 140], "furthermor": 135, "framework_handl": 135, "face": 135, "cprint": [135, 1132], "framework_stack": 135, "_determine_framework_from_arg": 135, "valueerror": [135, 903, 944, 947], "get_framework": 135, "neither": [135, 388, 404, 407, 596, 599, 757, 797], "illustr": [135, 151], "un": [135, 272, 322], "nn": [135, 140, 202, 236, 239, 1085], "init_h": [135, 798, 812], "init_c": [135, 798, 812], "kernel": [135, 152, 798, 812], "recurrent_kernel": [135, 798, 812], "bia": [135, 139, 798, 811, 812, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1117], "recurrent_bia": [135, 798, 812], "x_shape": 135, "batch_shap": [135, 137, 140, 202, 216, 217, 672, 726, 798, 812, 813, 814, 815, 884, 886, 992, 993, 1107, 1116], "timestep": [135, 798, 812, 1107, 1116], "input_channel": [135, 139, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1116, 1117], "x_flat": 135, "wi": 135, "wi_x": 135, "wii_x": 135, "wif_x": 135, "wig_x": 135, "wio_x": 135, "recurr": [135, 798, 812], "wh": 135, "lstm": [135, 798, 812, 1107], "ht": 135, "ct": 135, "hts_list": 135, "unrol": [135, 138, 798, 812], "wii_xt": 135, "wif_xt": 135, "wig_xt": 135, "wio_xt": 135, "zip": 135, "htm1": 135, "ctm1": 135, "wh_htm1": 135, "whi_htm1": 135, "whf_htm1": 135, "whg_htm1": 135, "who_htm1": 135, "ft": 135, "gt": 135, "ot": 135, "offici": 135, "reliabl": 135, "sacrific": 135, "hear": 135, "virtu": 135, "pure_ivi": 135, "reduce_mean": [135, 138, 139, 140, 1085], "reduce_sum": [135, 1085], "reduce_var": 135, "compile_graph": [135, 140], "pure_torch": 135, "backbon": [135, 138], "_layer": 135, "super": [135, 138, 139, 140], "random_unifrom": 135, "unclean": 135, "wx": 135, "temp": 135, "torchscript": 135, "fn": [135, 137, 153, 154, 155, 156, 157, 158, 159, 160, 161, 272, 315, 316, 672, 678, 752, 968, 969, 974, 975, 976, 978, 979, 980, 1088, 1090], "example_input": [135, 199, 200], "static_argnum": [135, 199, 200], "static_argnam": [135, 199, 200], "jit": [135, 152], "frontend": 136, "primit": [136, 152], "hierarch": [136, 138, 139], "arraywithlinalg": 137, "arraywithlog": 137, "arraywithmath": 137, "arraywithmeta": 137, "arraywithreduct": 137, "_shape": 137, "_size": 137, "functool": 137, "mul": 137, "len": [137, 140, 202, 236, 239], "_dtype": 137, "_devic": 137, "_dev_str": 137, "_pre_repr": 137, "_post_repr": 137, "answer": [137, 152], "consol": 137, "typeerror": 137, "immut": 137, "behav": 137, "claim": 137, "truli": 137, "_native_wrapp": 137, "attributeerror": 137, "genuin": 137, "some_method": 137, "similarli": [137, 202, 236, 239], "rewritten": 137, "__pow__": 137, "strang": 137, "enforc": 137, "appear": [137, 903, 917, 920], "_wrap_method": 137, "func_wrapp": [137, 153, 154, 155, 156, 157, 158, 159, 160, 161], "__name__": 137, "non_wrapped_method": 137, "_method_wrap": 137, "native_arg": 137, "native_kwarg": 137, "inner_fn": 137, "whist": 137, "unwrap": 137, "transit": 137, "needlessli": 137, "randn": 137, "_unwrap_method": 137, "method_wrap": 137, "compartment": 137, "public": [137, 672, 688], "newshap": 137, "new_shap": 137, "tidi": 137, "shorter": 137, "crystal": 137, "ton": 138, "ado": [138, 139], "incred": [138, 152], "hash": 138, "soup": 138, "walk": [138, 139], "dct": 138, "cnt": 138, "combo": [138, 1085, 1091], "hold": [138, 672, 729, 730], "1000": [138, 388, 646, 649], "uda": 138, "3333": 138, "6667": 138, "178": 138, "new_weight": 138, "0600": 138, "3100": 138, "2400": 138, "6900": 138, "delimit": 138, "autocomplet": 138, "midwai": 138, "agent": 138, "total_spe": 138, "total_height": 138, "total_width": 138, "ag": 138, "tot": 138, "total_": 138, "total_h": 138, "dir": 138, "cnt0": 138, "cnt1": 138, "diff_0": 138, "diff_1": 138, "config0": 138, "config1": 138, "Not": [138, 139, 152, 201], "helper": 138, "decod": 138, "l0": 138, "l1": [138, 815, 881, 883], "depth": [138, 139, 140, 151, 672, 711, 726, 968, 980, 1119, 1120], "clearer": 138, "truncat": 138, "decoder__l0": 138, "decoder__l1": 138, "encoder__l0": 138, "encoder__l1": 138, "height": 138, "l0__b": 138, "l0__w": 138, "l1__b": 138, "l1__w": 138, "printabl": 138, "obviou": 138, "foresight": 138, "untidili": 138, "update_ag": 138, "normalize_img": 138, "img": 138, "img_max": 138, "reduce_max": [138, 1085], "img_min": 138, "reduce_min": [138, 1085], "img_rang": 138, "agent_posit": 138, "agent_veloc": 138, "agent_cam_front_rgb": 138, "agent_cam_front_depth": 138, "agent_cam_rear_rgb": 138, "agent_cam_rear_depth": 138, "agent_cam_lidar": 138, "cleaner": 138, "camera": 138, "front_rgb": 138, "front_depth": 138, "rear_rgb": 138, "rear_depth": 138, "lidar": 138, "rgb": 138, "rear": 138, "veloc": 138, "cam": 138, "cam_max": 138, "cam_min": 138, "cam_rang": 138, "Of": 138, "ideal": 138, "perman": 138, "afterward": 138, "thread": 138, "incorpor": 138, "pretti": 138, "dataload": [138, 150, 1085], "_cnt": 138, "img_": 138, "_dataset_s": 138, "_batch_siz": 138, "_count": [138, 139], "__next__": 138, "filenam": 138, "img_fnam": 138, "fname": 138, "loaded_img": 138, "cv2": 138, "imread": 138, "loader": [138, 152], "batch_slic": 138, "mymodel": [138, 1085], "linear0": [138, 139, 1085], "linear1": [138, 139, 1085], "x_in": [138, 139, 140, 1085], "loss_fn": [138, 139, 140, 1085], "0145": 138, "grad_fn": 138, "addbackward0": 138, "_create_vari": 139, "output_channel": [139, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1116, 1117], "with_bia": [139, 1107, 1117], "_input_channel": 139, "_output_channel": 139, "_w_shape": 139, "_b_shape": 139, "_with_bia": 139, "8979": 139, "3198": 139, "0196": 139, "3126": 139, "3717": 139, "9687": 139, "6958": 139, "5122": 139, "3902": 139, "8800": 139, "5613": 139, "1982": 139, "nightmar": 139, "overcom": 139, "fc": 139, "9563": 139, "v0": 139, "v1": 139, "6440": 139, "key0": 139, "1823": 139, "8075": 139, "linear3": 139, "v2": 139, "2346": 139, "counter": 139, "hidden": [139, 798, 812, 1107, 1116], "fed": [139, 355, 378], "1300": 139, "decoupl": 139, "scheme": 139, "weight_initi": [139, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117], "glorotuniform": [139, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117], "bias_initi": [139, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1117], "_w_init": 139, "_b_init": 139, "create_vari": [139, 1098], "var_shap": [139, 1098], "fan_out": [139, 1098], "fan_in": [139, 1098], "fan_mod": [139, 1098], "fan_sum": 139, "slight": 139, "misnom": 139, "saw": 139, "vanilla": [139, 964, 966], "descent": [139, 757, 771, 773, 1123, 1128], "lar": [139, 757, 780, 782, 784, 786, 1123], "lamb": [139, 757, 780, 782, 1123], "compile_on_next_step": [139, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128], "_beta1": 139, "_beta2": 139, "_epsilon": 139, "_mw": 139, "_vw": 139, "_first_pass": 139, "_should_compil": 139, "_step": [139, 1123, 1127], "new_v": 139, "_lr": 139, "isinst": [139, 140, 672, 744], "_inplac": 139, "_stop_gradi": 139, "set_stat": [139, 1123, 1124, 1125, 1126, 1127, 1128], "pre": [140, 152], "captur": 140, "sparse_funct": 140, "num_class": [140, 992, 993], "num_dim": 140, "new_axi": 140, "_linear": 140, "to_backend": 140, "jax_graph": 140, "to_ivy_modul": [140, 1096], "thinli": 140, "whilst": 140, "to_haiku_modul": 140, "hk": 140, "loss_fn_t": 140, "transform": [140, 151, 798, 810, 811], "without_apply_rng": 140, "rng": 140, "prngkei": 140, "init": 140, "update_rul": 140, "tree_multimap": 140, "vision": [150, 1085], "robot": [150, 1085], "focus": 151, "perfect": 151, "3d": [151, 1107, 1112, 1113], "differenti": 151, "demo": [151, 1085], "orient": 151, "pose": 151, "euler": [151, 201], "quaternion": 151, "rotat": 151, "ivy_mech": 151, "target_facing_rotation_matrix": 151, "polar_to_cartesian_coord": 151, "ordin": [151, 815, 863, 865], "warp": 151, "optic": 151, "voxel": 151, "ivy_vis": 151, "coords_to_voxel_grid": 151, "render_pixel_coord": 151, "neural": [151, 798, 1085, 1093, 1107], "radianc": 151, "nerf": 151, "trajectori": 151, "motion": 151, "plan": [151, 1085], "mobil": 151, "ivy_robot": 151, "sample_spline_path": 151, "rigidmobil": 151, "sample_bodi": 151, "drone": 151, "sample_link": 151, "openai": 151, "swimmer": 151, "cumul": [151, 672, 690, 691], "reward": 151, "supervis": 151, "reinforc": 151, "door": [151, 152], "intersect": 151, "cartpol": 151, "mountain_car": 151, "pendulum": 151, "reacher": 151, "condit": [151, 199, 200, 968, 978, 979, 1004, 1008], "learnt": 151, "ture": 151, "ntm": 151, "egospher": 151, "spatial": 151, "esm": 151, "ivy_memori": 151, "egocentr": 151, "room": 151, "inspir": 151, "doubt": 152, "grate": 152, "probe": 152, "undergo": 152, "remark": 152, "surpris": 152, "lock": 152, "contunu": 152, "minor": 152, "xla": 152, "buffer": 152, "gold": 152, "dex": 152, "scan": 152, "tricki": 152, "predictor": 152, "tight": 152, "driver": 152, "schedul": 152, "dispatch": 152, "Will": 152, "ast": 152, "dynamic": 152, "cond": 152, "jacobian": 152, "checkpoint": 152, "autodiff": 152, "shine": 152, "merci": 152, "superset": 152, "cluster": 152, "compet": 152, "paradigm": 152, "parallelis": 152, "spmd": 152, "mixtur": [152, 757, 759, 762], "expert": 152, "sophist": 152, "depart": 152, "routin": 152, "hundr": 152, "thousand": 152, "deepli": [152, 968, 970], "broadli": 152, "heavili": 152, "supplementari": 152, "Is": 152, "reusabl": 152, "fanci": 152, "fusion": 152, "lose": 152, "vmap": 152, "pmap": 152, "overhead": 152, "ineffici": 152, "eventu": 152, "supplement": 152, "backdoor": 152, "callback": 152, "record": 152, "metric": 152, "somewhat": 152, "outsourc": 152, "inputs_to_ivy_arrai": 153, "gaussian": [163, 164, 167], "88": [163, 169, 172, 388, 459, 462, 815, 853, 855, 1041, 1042, 1045], "214": [163, 179, 182], "0768": [163, 184, 187], "231": [163, 184, 187], "693": [163, 184, 187, 388, 414, 417, 887, 898, 901], "49": [163, 184, 187, 388, 646, 649, 1041, 1042, 1045], "363": [163, 184, 187], "array_method": [164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 196, 206, 207, 211, 212, 219, 220, 225, 226, 236, 237, 241, 242, 249, 250, 254, 256, 259, 261, 267, 269, 279, 280, 284, 285, 289, 290, 294, 295, 304, 305, 310, 311, 317, 318, 323, 324, 328, 329, 333, 334, 340, 341, 362, 363, 379, 381, 389, 390, 394, 395, 399, 400, 404, 405, 409, 410, 414, 415, 419, 420, 424, 425, 429, 430, 434, 435, 439, 440, 444, 445, 449, 450, 454, 455, 459, 460, 464, 465, 469, 470, 474, 475, 479, 480, 484, 485, 489, 490, 494, 495, 499, 500, 504, 505, 509, 510, 514, 515, 519, 520, 524, 525, 529, 530, 534, 535, 539, 540, 544, 545, 549, 550, 554, 555, 559, 560, 564, 565, 569, 570, 574, 575, 579, 580, 584, 585, 589, 590, 596, 597, 601, 602, 606, 607, 611, 612, 616, 617, 621, 622, 626, 627, 631, 632, 636, 637, 641, 642, 646, 647, 651, 652, 656, 658, 661, 663, 667, 669, 673, 674, 701, 702, 746, 748, 759, 760, 775, 776, 805, 806, 816, 817, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 843, 844, 847, 848, 850, 851, 853, 854, 856, 857, 859, 860, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 878, 879, 881, 882, 884, 885, 888, 889, 893, 894, 898, 899, 904, 905, 909, 910, 913, 914, 917, 918, 921, 922, 925, 926, 929, 930, 934, 935, 938, 939, 944, 945, 948, 949, 952, 953, 956, 957, 960, 961, 987, 988, 1010, 1012, 1015, 1017, 1020, 1022, 1025, 1027, 1031, 1032, 1036, 1037, 1042, 1043, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1070, 1071, 1075, 1076, 1080, 1081], "container_method": [164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 209, 211, 213, 215, 216, 218, 219, 221, 223, 225, 227, 229, 230, 232, 233, 235, 236, 238, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 304, 306, 308, 310, 312, 314, 317, 319, 321, 323, 325, 327, 328, 330, 332, 333, 335, 337, 340, 342, 344, 362, 364, 366, 379, 380, 382, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 659, 661, 662, 664, 667, 668, 670, 673, 675, 677, 685, 686, 701, 703, 705, 746, 747, 749, 759, 761, 763, 764, 765, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 783, 784, 785, 787, 788, 789, 791, 805, 807, 809, 816, 818, 820, 839, 841, 888, 890, 892, 893, 895, 897, 898, 900, 902, 904, 906, 908, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 987, 989, 991, 994, 996, 998, 999, 1001, 1010, 1011, 1013, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1026, 1028, 1031, 1033, 1035, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1075, 1077, 1079, 1080, 1082, 1084], "faster": [199, 200], "invoc": [199, 200], "718281828459045": 201, "newaxi": 201, "alia": 201, "pi": 201, "141592653589793": 201, "chosen": [202, 203, 204, 388, 424, 427, 1004, 1008], "distanc": [202, 203, 204], "adjac": [202, 203, 204], "creation_funct": [202, 203, 204, 206, 208, 210, 211, 214, 216, 217, 219, 222, 224, 225, 228, 230, 231, 246, 247, 249, 252, 254, 258, 259, 263, 264, 266, 267, 271], "elsewher": [202, 216, 217, 1004, 1008], "row": [202, 216, 217, 815, 863, 865, 866, 868, 992, 993, 1004, 1007], "column": [202, 216, 217, 815, 830, 832, 859, 861, 863, 865, 866, 868], "__dlpack__": [202, 219, 222, 355, 379, 383], "interchang": [202, 219, 222, 903, 952, 955], "cartesian": [202, 236, 239], "ij": [202, 236, 239, 1041, 1042, 1045], "ni": [202, 236, 239], "xi": [202, 236, 239], "n1": [202, 236, 239], "n2": [202, 236, 239], "n3": [202, 236, 239], "xv": [202, 236, 239], "yv": [202, 236, 239], "y1": [202, 267, 271], "y2": [202, 267, 271], "x3": [202, 267, 271, 355, 372], "y3": [202, 267, 271], "intdtyp": [202, 267, 271, 272, 302, 338], "defaultdtyp": [272, 273], "defaultfloatdtyp": [272, 274], "float_dtyp": [272, 301, 346], "defaultintdtyp": [272, 275], "defaultuintdtyp": [272, 276], "uint_dtyp": [272, 303, 348], "incompat": [272, 289, 292], "data_type_funct": [272, 294, 297, 310, 313], "floatdtyp": [272, 301], "int_dtyp": [272, 302, 347], "uint": [272, 303, 338, 348, 353], "uintdtyp": [272, 303, 338, 348, 353], "defualt": [272, 303], "4294967346": [272, 303], "followng": [272, 310, 313], "occupi": [272, 310, 313, 317, 320, 672, 729, 730], "ep": [272, 310, 313, 815, 847, 849, 856, 858], "smallest_norm": [272, 310, 313], "4028235e": [272, 310, 313], "7976931348623157e": [272, 310, 313], "55040e": [272, 310, 313], "encapsul": [272, 317, 320], "type1": [272, 339], "type2": [272, 339], "default_dtype_stack": [272, 345], "native_int32": [272, 345, 354], "native_bool": [272, 345, 354], "native_uint64": [272, 345, 354], "native_float64": [272, 345, 354], "ret1": [272, 349], "ret2": [272, 349], "reset": [272, 353, 355, 386, 672, 753, 754], "native_float16": [272, 354], "native_int8": [272, 354], "native_int16": [272, 354], "native_int64": [272, 354], "native_uint8": [272, 354], "noinspect": [273, 274, 275, 356, 758], "pyshadowingnam": [273, 274, 275, 356, 758], "defaultdevic": [355, 356], "__enter__": 355, "_dev": 355, "__exit__": 355, "exc_typ": 355, "exc_val": 355, "exc_tb": 355, "exit": 355, "profil": 355, "save_dir": [355, 357], "93": [355, 367, 388, 646, 649], "84": [355, 367, 815, 853, 855, 1041, 1042, 1045], "139740789224448": [355, 368], "physic": [355, 370], "x4": [355, 372], "process_specif": [355, 373, 387], "percentag": [355, 373], "ram": [355, 373, 384, 387], "attr_onli": [355, 374], "chunk": [355, 376, 377, 378], "max_chunk_s": [355, 378], "chunk_siz": [355, 378], "input_ax": [355, 378], "output_ax": [355, 378], "feed": [355, 378], "fist": [355, 378], "caveat": [355, 379, 383], "portabl": [355, 379, 383, 1085], "gb": [355, 384, 387], "66700032": [355, 384], "589934592": [355, 384], "magnitud": [388, 389, 392, 404, 407, 596, 599, 815, 866, 868, 869, 871], "princip": [388, 394, 397, 409, 412, 419, 422], "x1_i": [388, 404, 407, 424, 427, 434, 437, 444, 447, 449, 452, 454, 457, 459, 462, 479, 482, 484, 487, 509, 512, 514, 517, 519, 522, 539, 542, 544, 547, 569, 572, 574, 577, 584, 587, 589, 592, 596, 599, 606, 609, 616, 619, 621, 624, 656, 660], "nor": [388, 404, 407, 596, 599, 757, 797], "nearest": [388, 404, 407, 596, 599, 626, 629], "2019": [388, 404, 407, 499, 502, 596, 599], "commut": [388, 404, 407], "524": [388, 409, 412], "644": [388, 409, 412], "201": [388, 409, 412], "305": [388, 409, 412], "412": [388, 409, 412], "44": [388, 414, 417, 626, 629, 646, 649, 651, 654, 815, 853, 855, 1004, 1008, 1041, 1042, 1045], "809": [388, 414, 417], "569": [388, 414, 417], "733": [388, 414, 417], "68": [388, 414, 417, 424, 427, 986, 987, 990], "notat": [388, 424, 427, 1041, 1042, 1045], "denot": [388, 424, 427, 757, 797], "pair": [388, 424, 427, 798, 814, 815, 821, 823], "quadrant": [388, 424, 427], "3\u03c0": [388, 424, 427], "464": [388, 424, 427], "588": [388, 424, 427], "719": [388, 424, 427], "197": [388, 424, 427], "549": [388, 429, 432], "bitwis": [388, 434, 437, 449, 452, 459, 462, 589, 592], "invert": [388, 439, 442], "arithmet": [388, 454, 457, 1041, 1050, 1053], "propag": [388, 454, 457, 1041, 1046, 1049, 1050, 1053, 1054, 1057, 1062, 1065, 1066, 1069, 1070, 1073], "lh": [388, 454, 457], "rh": [388, 454, 457], "xor": [388, 459, 462, 589, 592], "78": [388, 459, 462, 631, 634, 815, 853, 855, 1041, 1042, 1045], "91": [388, 459, 462, 815, 853, 855, 1041, 1042, 1045], "66": [388, 459, 462, 815, 853, 855, 1041, 1042, 1045], "77": [388, 459, 462, 815, 853, 855, 1041, 1042, 1045], "79": [388, 459, 462], "26": [388, 459, 462, 641, 644, 757, 759, 762, 798, 805, 808, 815, 827, 829, 853, 855, 872, 874, 1041, 1042, 1045], "27": [388, 459, 462, 474, 477, 641, 644, 646, 649, 798, 814, 815, 853, 855, 1041, 1042, 1045], "74": [388, 459, 462], "59": [388, 459, 462], "654": [388, 469, 472], "122": [388, 474, 477], "368": [388, 474, 477], "670": [388, 474, 477], "202": [388, 474, 477], "548": [388, 474, 477, 641, 644], "1490": [388, 474, 477], "72": [388, 494, 497, 499, 502, 757, 759, 762, 815, 853, 855, 1041, 1042, 1045], "accur": [388, 499, 502], "fdlibm": [388, 499, 502], "compliant": [388, 499, 502, 579, 582, 584, 587, 1041, 1046, 1049, 1050, 1053, 1054, 1057], "85e": [388, 499, 502], "632": [388, 499, 502], "20e": [388, 499, 502], "72e": [388, 499, 502], "00": [388, 499, 502], "22000": [388, 499, 502], "442000": [388, 499, 502], "greatest": [388, 504, 507, 509, 512], "threshold": [388, 594, 595], "y_i": [388, 601, 604], "versu": [388, 616, 619], "odd": [388, 616, 619], "modulu": [388, 621, 624], "primarili": [388, 621, 624], "5654": [388, 626, 629], "034": [388, 626, 629], "433": [388, 626, 629], "343": [388, 626, 629], "30": [388, 626, 629, 815, 853, 855, 1041, 1042, 1045, 1098, 1104], "81": [388, 626, 629, 651, 654, 1041, 1042, 1045], "124": [388, 631, 634], "46": [388, 631, 634], "932": [388, 636, 639], "746": [388, 636, 639], "443": [388, 636, 639], "657": [388, 636, 639], "253": [388, 641, 644], "indistinguish": [388, 646, 649], "infinit": [388, 646, 649], "83": [388, 646, 649], "32455532": [388, 646, 649], "89897949": [388, 646, 649], "50": [388, 646, 649, 815, 853, 855, 1004, 1007, 1041, 1042, 1045], "31": [388, 646, 649], "169": [388, 646, 649], "47": [388, 646, 649], "09": [388, 651, 654, 798, 814], "546": [388, 661, 665], "842": [388, 661, 665], "916": [388, 661, 665, 887, 888, 891], "996": [388, 661, 665], "328": [388, 661, 665], "462": [388, 666], "604": [388, 666], "984": [388, 666], "997": [388, 666], "decim": [388, 667, 671], "inspect": [672, 678, 1089, 1090], "downscal": [672, 684, 685, 687], "60": [672, 690, 815, 853, 855, 1041, 1042, 1045], "default_v": [672, 693], "catch_except": [672, 693], "rev": [672, 693], "with_cal": [672, 693], "arrang": [672, 694], "mod": [672, 698], "max_freq": [672, 699], "num_band": [672, 699], "fourier": [672, 699], "band": [672, 699], "linearli": [672, 699, 815, 863, 865], "oppos": [672, 699], "geometr": [672, 699], "seen_set": [672, 711], "local_set": [672, 711], "decrement": [672, 715], "allow_dupl": [672, 723], "forkserv": [672, 724], "spawn": [672, 724], "hot": [672, 726], "scatter": [672, 726, 729, 730], "overrid": [672, 726], "tmp_dr": [672, 736], "temporari": [672, 736], "min_denomin": [672, 739], "stabil": [672, 739, 740, 1030, 1031, 1034, 1036, 1039], "_min_denomin": [672, 739], "min_bas": [672, 740], "100000023841858": [672, 744], "200000047683716": [672, 744], "299999952316284": [672, 744], "400000095367432": [672, 744], "599999904632568": [672, 744], "gradienttrack": [757, 758], "en": [757, 759, 762, 764, 766], "wikipedia": [757, 759, 762, 764, 766], "wiki": [757, 759, 762, 764, 766], "stochastic_gradient_desc": [757, 759, 762, 764, 766], "004": [757, 759, 762], "009": [757, 759, 762], "86": [757, 759, 762], "28": [757, 759, 762, 798, 801, 804, 805, 808, 815, 853, 855, 1041, 1042, 1045], "0125": [757, 759, 762], "601": [757, 759, 762], "025": [757, 759, 762], "992": [757, 759, 762], "209": [757, 759, 762, 1009, 1010, 1014], "271": [757, 759, 762], "0717": [757, 759, 762], "142": [757, 759, 762], "182": [757, 759, 762], "624": [757, 759, 762, 992, 998, 1000], "744": [757, 759, 762], "626": [757, 759, 762], "65": [757, 759, 762, 815, 853, 855, 1041, 1042, 1045], "024": [757, 759, 762], "096": [757, 759, 762], "216": [757, 759, 762], "384": [757, 759, 762], "rate": [757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790, 964, 965, 966, 967, 1107, 1118, 1123, 1124, 1125, 1126, 1127, 1128], "ws_new": [757, 764, 766, 771, 773, 780, 782, 784, 786, 788, 790], "retain": [757, 768, 769], "trust": [757, 780, 782, 1123, 1125], "ratio": [757, 780, 782, 1123, 1125], "decai": [757, 780, 782, 784, 786, 1123, 1125, 1126], "layerwis": [757, 784, 786], "with_grads_stack": [757, 797], "nwc": [798, 799, 800, 1107, 1108, 1109], "d_out": [798, 799, 800, 801, 802, 803, 804], "ncw": [798, 799, 800, 1107, 1108, 1109], "wio": [798, 799], "output_shap": [798, 800, 802, 804, 1107, 1109, 1111, 1113], "hwio": [798, 801], "unequ": [798, 801], "unsqueez": [798, 801, 805, 808], "ndhwc": [798, 803, 804, 1107, 1112, 1113], "volum": [798, 803], "fd": [798, 803, 804], "ncdhw": [798, 803, 804, 1107, 1112, 1113], "dhwio": [798, 803], "258": [798, 804], "depthwis": [798, 805, 808, 1107, 1114], "hwi": [798, 805, 808], "333": [798, 805, 808], "prob": [798, 810, 992, 993, 1107, 1115], "randomli": [798, 810, 1107, 1115], "bernoulli": [798, 810], "out_featur": [798, 810, 811], "incom": [798, 811], "outer_batch_shap": [798, 811], "inner_batch_shap": [798, 811], "in_featur": [798, 811], "cell": [798, 812, 1107, 1116], "num_queri": [798, 813, 814], "x_feat_dim": [798, 813], "num_kei": [798, 813, 814], "cont_feat_dim": [798, 813], "numhead": [798, 813], "feat_dim": [798, 813, 814], "out_feat_dim": [798, 813], "score": [798, 814], "03": [798, 814, 986, 987, 990], "decomposit": [815, 816, 819, 859, 861, 866, 868], "vif": [815, 821, 823], "92": [815, 824, 826], "293": [815, 824, 826], "46997": [815, 824, 826], "eigendecomposit": [815, 830, 832], "qlq\u1d40": [815, 830, 832], "orthogon": [815, 830, 832], "eig": [815, 830, 832], "eigenvalu": [815, 830, 832, 833, 835], "eigenvector": [815, 830, 832], "prepend": [815, 839, 842], "singular": [815, 847, 849, 856, 858, 866, 868, 869, 871], "toler": [815, 847, 849, 856, 858], "largest_singular_valu": [815, 847, 849, 856, 858], "array_lik": [815, 853, 855], "105": [815, 853, 855, 887, 888, 891], "112": [815, 853, 855, 1041, 1042, 1045], "104": [815, 853, 855, 1041, 1042, 1045], "120": [815, 853, 855], "moor": [815, 856, 858], "penros": [815, 856, 858], "pseudo": [815, 856, 858], "orthonorm": [815, 859, 861, 866, 868], "2d": [815, 862, 1107, 1110, 1111, 1114], "logdet": [815, 862], "coeffici": [815, 863, 865], "usvh": [815, 866, 868], "vh": [815, 866, 868], "hermitian": [815, 866, 868], "et": [815, 866, 868], "cetera": [815, 866, 868], "adjoint": [815, 866, 868], "reconstruct": [815, 866, 868, 1009, 1010, 1014, 1020, 1024], "reconstructed_x": [815, 866, 868], "contract": [815, 872, 874, 1041, 1042, 1045], "doubl": [815, 872, 874], "manhattan": [815, 881, 883], "l2": [815, 881, 883], "euclidean": [815, 881, 883], "mathbf": [815, 884, 886], "mathbb": [815, 884, 886], "skew": [815, 884, 886], "discret": [887, 893, 896], "35667497": [887, 893, 896], "793291": [887, 898, 901], "512926": [887, 898, 901], "before_1": [903, 913, 916, 960, 963], "after_1": [903, 913, 916, 960, 963], "before_n": [903, 913, 916, 960, 963], "after_n": [903, 913, 916, 960, 963], "insert": [903, 917, 920, 968, 973, 1004, 1005], "manipulation_funct": [903, 917, 920], "reorder": [903, 921, 924], "permut": [903, 925, 928, 952, 955], "repetit": [903, 929, 932, 956, 959], "famili": [903, 948, 951], "intxx": [903, 948, 951], "floatxx": [903, 948, 951], "fomaml_step": 964, "inner_cost_fn": [964, 965, 966], "outer_cost_fn": [964, 965, 966], "inner_grad_step": [964, 965, 966, 967], "inner_learning_r": [964, 965, 966, 967], "inner_optimization_step": [964, 965, 966, 967], "inner_batch_fn": [964, 965, 966], "outer_batch_fn": [964, 965, 966], "average_across_step": [964, 965, 966], "inner_v": [964, 965, 966], "keep_inner_v": [964, 965, 966], "outer_v": [964, 965, 966], "keep_outer_v": [964, 965, 966], "return_inner_v": [964, 965, 966, 967], "num_task": [964, 965, 966, 967], "maml": [964, 965, 966], "recev": [964, 965, 966], "0x7f3800d51a60": [964, 965, 966, 967], "maml_step": 964, "rece": [964, 966], "reptile_step": 964, "cost_fn": [964, 967], "reptil": [964, 967], "receivng": [964, 967], "all_nested_indic": 968, "include_nest": [968, 969], "_index": [968, 969, 979], "_base": [968, 969, 978, 979], "copy_nest": 968, "to_mut": [968, 970, 980], "mutabl": [968, 970, 980], "insert_into_nest_at_index": 968, "insert_into_nest_at_indic": 968, "map_nest_at_index": 968, "map_nest_at_indic": 968, "multi_index_nest": 968, "nested_ani": 968, "check_nest": [968, 978, 979], "conditon": [968, 978, 979], "nested_indices_wher": 968, "stop_after_n_found": [968, 979], "_depth": [968, 980], "_tuple_check_fn": [968, 980], "_list_check_fn": [968, 980], "_dict_check_fn": [968, 980], "nested_multi_map": 968, "nest0": [968, 981], "ivy_arrai": [968, 981], "funciton": [968, 981], "prune_nest_at_index": 968, "prune_nest_at_indic": 968, "set_nest_at_index": 968, "set_nest_at_indic": 968, "111": [968, 985], "xyz": [968, 985], "pqr": [968, 985], "mini": [986, 987, 990, 1121, 1122], "894": [986, 987, 990], "772": [986, 987, 990], "796": [986, 987, 990], "population_s": [992, 993], "num_sampl": [992, 993], "home": [992, 993, 997, 1123, 1124, 1125, 1126, 1128], "uniformli": [992, 994, 995, 998, 1000], "parameter": [992, 997, 998, 1000], "6444774682897879": [992, 997], "811": [992, 997], "508": [992, 997], "564": [992, 997], "7268672": [992, 997], "968": [992, 997], "175": [992, 997, 1009, 1010, 1014], "064": [992, 997], "40935726": [992, 997], "556": [992, 997], "26431865": [992, 998, 1000], "475": [992, 998, 1000], "878": [992, 998, 1000], "861": [992, 998, 1000], "89150229": [992, 998, 1000], "89629126": [992, 998, 1000], "94198485": [992, 998, 1000], "91405606": [992, 998, 1000], "72848724": [992, 998, 1000], "7550739": [992, 998, 1000], "00109": [992, 998, 1000], "occurr": [1004, 1005, 1006, 1009, 1010, 1014], "43": [1004, 1008], "x_j": [1009, 1010, 1014, 1015, 1019, 1025, 1029], "impli": [1009, 1010, 1014, 1015, 1019, 1025, 1029], "inverse_indic": [1009, 1010, 1014, 1020, 1024], "aggreg": [1009, 1010, 1014], "fourth": [1009, 1010, 1014], "607": [1009, 1010, 1014], "735": [1009, 1010, 1014], "667": [1009, 1010, 1014], "381": [1009, 1010, 1014], "857": [1009, 1010, 1014], "0396": [1009, 1010, 1014], "166": [1009, 1010, 1014], "58": [1009, 1010, 1014], "828": [1009, 1010, 1014], "144": [1009, 1010, 1014], "40501155": [1009, 1010, 1014], "77361575": [1009, 1010, 1014], "97776199": [1009, 1010, 1014], "36831157": [1009, 1010, 1014], "89148434": [1009, 1010, 1014], "9512272": [1009, 1010, 1014], "67542176": [1009, 1010, 1014], "41985657": [1009, 1010, 1014], "23478023": [1009, 1010, 1014], "1141": [1009, 1010, 1014], "8101": [1009, 1010, 1014], "9298": [1009, 1010, 1014], "8460": [1009, 1010, 1014], "2119": [1009, 1010, 1014], "3519": [1009, 1010, 1014], "6252": [1009, 1010, 1014], "4033": [1009, 1010, 1014], "7443": [1009, 1010, 1014], "2577": [1009, 1010, 1014], "3707": [1009, 1010, 1014], "0545": [1009, 1010, 1014], "3238": [1009, 1010, 1014], "5944": [1009, 1010, 1014], "0775": [1009, 1010, 1014], "4327": [1009, 1010, 1014], "176": [1009, 1010, 1014], "889": [1009, 1010, 1014], "763": [1009, 1010, 1014], "071": [1009, 1010, 1014], "262": [1009, 1010, 1014], "456": [1009, 1010, 1014], "114": [1009, 1010, 1014], "349": [1009, 1010, 1014], "615": [1009, 1010, 1014], "594": [1009, 1010, 1014], "335": [1009, 1010, 1014], "212": [1009, 1010, 1014], "457": [1009, 1010, 1014], "827": [1009, 1010, 1014], "set_funct": [1009, 1015, 1019], "ascend": [1030, 1031, 1034], "einstein": [1041, 1042, 1045], "summat": [1041, 1042, 1045], "seq": [1041, 1042, 1045], "jk": [1041, 1042, 1045], "ik": [1041, 1042, 1045], "126": [1041, 1042, 1045], "510": [1041, 1042, 1045], "108": [1041, 1042, 1045], "117": [1041, 1042, 1045], "sentinel": [1041, 1046, 1049, 1054, 1057], "unsign": [1041, 1058, 1061, 1066, 1069], "degre": [1041, 1062, 1065, 1070, 1073], "bessel": [1041, 1062, 1065, 1070, 1073], "8164966": [1041, 1062, 1065], "varianc": [1041, 1070, 1073], "unbias": [1041, 1070, 1073], "simplicit": [1074, 1075, 1078], "grow": 1085, "ai": 1085, "got": 1085, "colab": 1085, "sharp": 1085, "weekli": 1085, "immedi": 1085, "favorit": 1085, "jax_concat": 1085, "tf_concat": 1085, "np_concat": 1085, "mx_concat": 1085, "torch_concat": 1085, "prompt": 1085, "get_devic": 1085, "reduce_prod": 1085, "gradient_imag": 1085, "linalg": 1085, "bilinear_resampl": 1085, "stack_imag": 1085, "neural_net": 1085, "ecosystem": [1085, 1091], "popular": [1085, 1091], "acceler": 1085, "articl": 1085, "lenton2021ivi": 1085, "inter": 1085, "lenton": 1085, "daniel": 1085, "pardo": 1085, "fabio": 1085, "falck": 1085, "fabian": 1085, "jame": 1085, "stephen": 1085, "clark": 1085, "ronald": 1085, "journal": 1085, "arxiv": 1085, "preprint": 1085, "2102": 1085, "02886": 1085, "2021": 1085, "add_array_spec": 1088, "fn_array_spec": 1088, "geglu": 1093, "native_modul": [1096, 1097], "native_module_class": [1096, 1097], "firstlayersiren": 1098, "kaimingnorm": [1098, 1102], "negative_slop": 1098, "Ones": 1098, "siren": 1098, "w0": [1098, 1104], "filter_s": [1107, 1108, 1109], "1d": [1107, 1108, 1109], "conv1dtranspos": 1107, "filter_shap": [1107, 1110, 1111, 1112, 1113, 1114], "conv2dtranspos": 1107, "conv3dtranspos": 1107, "depthwiseconv2d": 1107, "num_channel": [1107, 1114], "bernoul": [1107, 1115], "num_lay": [1107, 1116], "return_sequ": [1107, 1116], "return_st": [1107, 1116], "get_initial_st": [1107, 1116], "dens": [1107, 1117], "multiheadattent": 1107, "query_dim": [1107, 1118], "head_dim": [1107, 1118], "dropout_r": [1107, 1118], "context_dim": [1107, 1118], "with_to_q_fn": [1107, 1118], "with_to_kv_fn": [1107, 1118], "with_to_out_fn": [1107, 1118], "build_mod": [1107, 1118, 1119, 1120], "on_init": [1107, 1118, 1119, 1120], "__call__": [1107, 1118, 1119, 1120], "store_var": [1119, 1120], "arg_stateful_idx": [1119, 1120], "kwarg_stateful_idx": [1119, 1120], "fallback_to_non_compil": [1119, 1120, 1123, 1127], "with_partial_v": [1119, 1120], "initialz": [1119, 1120], "from_cal": [1119, 1120], "check_submod_ret": [1119, 1120], "get_mod_kei": [1119, 1120], "top_mod": [1119, 1120], "mod_depth": [1119, 1120], "mod_height": [1119, 1120], "mod_with_top_mod_key_chain": [1119, 1120], "save_weight": [1119, 1120], "weights_path": [1119, 1120], "show_mod_in_top_mod": [1119, 1120], "upper_depth": [1119, 1120], "lower_depth": [1119, 1120], "show_structur": [1119, 1120], "show_v_in_top_v": [1119, 1120], "sub_mod": [1119, 1120], "show_v": [1119, 1120], "track_submod_call_ord": [1119, 1120], "track_submod_ret": [1119, 1120], "v_with_top_v_key_chain": [1119, 1120], "layernorm": 1121, "normalized_shap": [1121, 1122], "elementwise_affin": [1121, 1122], "trail": [1121, 1122], "affin": [1121, 1122], "0x7f3800ef6280": [1123, 1126], "init_on_first_step": [1123, 1127], "ignore_miss": [1123, 1127], "overridden": [1123, 1127], "sgd": 1123, "stochast": [1123, 1128], "0x7f3800eedf70": [1123, 1128], "sub_modul": [1129, 1130]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [34, 0, 0, "-", "creation"], [36, 0, 0, "-", "data_type"], [38, 0, 0, "-", "device"], [40, 0, 0, "-", "elementwise"], [42, 0, 0, "-", "general"], [44, 0, 0, "-", "gradients"], [46, 0, 0, "-", "image"], [48, 0, 0, "-", "layers"], [50, 0, 0, "-", "linear_algebra"], [52, 0, 0, "-", "losses"], [54, 0, 0, "-", "manipulation"], [56, 0, 0, "-", "norms"], [58, 0, 0, "-", "random"], [60, 0, 0, "-", "searching"], [62, 0, 0, "-", "set"], [64, 0, 0, "-", "sorting"], [66, 0, 0, "-", "statistical"], [68, 0, 0, "-", "utility"], [70, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "clip_vector_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "default_uint_dtype"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "einops_rearrange"], [27, 2, 1, "", "einops_reduce"], [27, 2, 1, "", "einops_repeat"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "gather"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 2, 1, "", "is_uint_dtype"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "randint"], [27, 2, 1, "", "random_normal"], [27, 2, 1, "", "random_uniform"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_default_uint_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_divide"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_default_uint_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[390, 4, 1, "", "abs"], [395, 4, 1, "", "acos"], [400, 4, 1, "", "acosh"], [760, 4, 1, "", "adam_step"], [405, 4, 1, "", "add"], [1076, 4, 1, "", "all"], [674, 4, 1, "", "all_equal"], [1081, 4, 1, "", "any"], [1032, 4, 1, "", "argsort"], [207, 4, 1, "", "asarray"], [410, 4, 1, "", "asin"], [415, 4, 1, "", "asinh"], [280, 4, 1, "", "astype"], [420, 4, 1, "", "atan"], [425, 4, 1, "", "atan2"], [430, 4, 1, "", "atanh"], [889, 4, 1, "", "binary_cross_entropy"], [435, 4, 1, "", "bitwise_and"], [440, 4, 1, "", "bitwise_invert"], [445, 4, 1, "", "bitwise_left_shift"], [450, 4, 1, "", "bitwise_or"], [455, 4, 1, "", "bitwise_right_shift"], [460, 4, 1, "", "bitwise_xor"], [285, 4, 1, "", "broadcast_arrays"], [290, 4, 1, "", "broadcast_to"], [295, 4, 1, "", "can_cast"], [465, 4, 1, "", "ceil"], [817, 4, 1, "", "cholesky"], [905, 4, 1, "", "clip"], [910, 4, 1, "", "concat"], [914, 4, 1, "", "constant_pad"], [470, 4, 1, "", "cos"], [475, 4, 1, "", "cosh"], [822, 4, 1, "", "cross"], [894, 4, 1, "", "cross_entropy"], [806, 4, 1, "", "depthwise_conv2d"], [825, 4, 1, "", "det"], [363, 4, 1, "", "dev"], [828, 4, 1, "", "diagonal"], [480, 4, 1, "", "divide"], [305, 4, 1, "", "dtype"], [831, 4, 1, "", "eigh"], [834, 4, 1, "", "eigvalsh"], [1043, 4, 1, "", "einsum"], [212, 4, 1, "", "empty_like"], [485, 4, 1, "", "equal"], [490, 4, 1, "", "erf"], [495, 4, 1, "", "exp"], [918, 4, 1, "", "expand_dims"], [500, 4, 1, "", "expm1"], [311, 4, 1, "", "finfo"], [922, 4, 1, "", "flip"], [505, 4, 1, "", "floor"], [510, 4, 1, "", "floor_divide"], [220, 4, 1, "", "from_dlpack"], [226, 4, 1, "", "full_like"], [702, 4, 1, "", "gather_nd"], [165, 4, 1, "", "gelu"], [515, 4, 1, "", "greater"], [520, 4, 1, "", "greater_equal"], [318, 4, 1, "", "iinfo"], [837, 4, 1, "", "inv"], [324, 4, 1, "", "is_bool_dtype"], [329, 4, 1, "", "is_float_dtype"], [334, 4, 1, "", "is_int_dtype"], [776, 4, 1, "", "is_variable"], [525, 4, 1, "", "isfinite"], [530, 4, 1, "", "isinf"], [535, 4, 1, "", "isnan"], [988, 4, 1, "", "layer_norm"], [170, 4, 1, "", "leaky_relu"], [540, 4, 1, "", "less"], [545, 4, 1, "", "less_equal"], [550, 4, 1, "", "log"], [555, 4, 1, "", "log10"], [560, 4, 1, "", "log1p"], [565, 4, 1, "", "log2"], [570, 4, 1, "", "logaddexp"], [575, 4, 1, "", "logical_and"], [580, 4, 1, "", "logical_not"], [585, 4, 1, "", "logical_or"], [590, 4, 1, "", "logical_xor"], [840, 4, 1, "", "matmul"], [844, 4, 1, "", "matrix_norm"], [848, 4, 1, "", "matrix_rank"], [851, 4, 1, "", "matrix_transpose"], [1047, 4, 1, "", "max"], [1051, 4, 1, "", "mean"], [237, 4, 1, "", "meshgrid"], [1055, 4, 1, "", "min"], [597, 4, 1, "", "multiply"], [242, 4, 1, "", "native_array"], [602, 4, 1, "", "negative"], [607, 4, 1, "", "not_equal"], [250, 4, 1, "", "ones_like"], [854, 4, 1, "", "outer"], [926, 4, 1, "", "permute_dims"], [857, 4, 1, "", "pinv"], [612, 4, 1, "", "positive"], [617, 4, 1, "", "pow"], [1059, 4, 1, "", "prod"], [860, 4, 1, "", "qr"], [175, 4, 1, "", "relu"], [622, 4, 1, "", "remainder"], [930, 4, 1, "", "repeat"], [935, 4, 1, "", "reshape"], [341, 4, 1, "", "result_type"], [939, 4, 1, "", "roll"], [627, 4, 1, "", "round"], [180, 4, 1, "", "sigmoid"], [632, 4, 1, "", "sign"], [637, 4, 1, "", "sin"], [642, 4, 1, "", "sinh"], [185, 4, 1, "", "softmax"], [190, 4, 1, "", "softplus"], [864, 4, 1, "", "solve"], [1037, 4, 1, "", "sort"], [899, 4, 1, "", "sparse_cross_entropy"], [647, 4, 1, "", "sqrt"], [652, 4, 1, "", "square"], [945, 4, 1, "", "squeeze"], [949, 4, 1, "", "stack"], [1063, 4, 1, "", "std"], [658, 4, 1, "", "subtract"], [1067, 4, 1, "", "sum"], [867, 4, 1, "", "svd"], [870, 4, 1, "", "svdvals"], [953, 4, 1, "", "swapaxes"], [663, 4, 1, "", "tan"], [196, 4, 1, "", "tanh"], [873, 4, 1, "", "tensordot"], [957, 4, 1, "", "tile"], [381, 4, 1, "", "to_device"], [748, 4, 1, "", "to_numpy"], [876, 4, 1, "", "trace"], [256, 4, 1, "", "tril"], [261, 4, 1, "", "triu"], [669, 4, 1, "", "trunc"], [1012, 4, 1, "", "unique_all"], [1017, 4, 1, "", "unique_counts"], [1022, 4, 1, "", "unique_inverse"], [1027, 4, 1, "", "unique_values"], [1071, 4, 1, "", "var"], [879, 4, 1, "", "vecdot"], [882, 4, 1, "", "vector_norm"], [885, 4, 1, "", "vector_to_skew_symmetric_matrix"], [961, 4, 1, "", "zero_pad"], [269, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_ivy"], [31, 4, 1, "", "args_to_native"], [32, 4, 1, "", "to_ivy"], [33, 4, 1, "", "to_native"]], "ivy.array.creation": [[35, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[35, 2, 1, "", "asarray"], [35, 2, 1, "", "empty_like"], [35, 2, 1, "", "from_dlpack"], [35, 2, 1, "", "full_like"], [35, 2, 1, "", "meshgrid"], [35, 2, 1, "", "native_array"], [35, 2, 1, "", "ones_like"], [35, 2, 1, "", "tril"], [35, 2, 1, "", "triu"], [35, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[37, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[37, 2, 1, "", "astype"], [37, 2, 1, "", "broadcast_arrays"], [37, 2, 1, "", "broadcast_to"], [37, 2, 1, "", "can_cast"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "finfo"], [37, 2, 1, "", "iinfo"], [37, 2, 1, "", "is_bool_dtype"], [37, 2, 1, "", "is_float_dtype"], [37, 2, 1, "", "is_int_dtype"], [37, 2, 1, "", "result_type"]], "ivy.array.device": [[39, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[39, 2, 1, "", "dev"], [39, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[41, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[41, 2, 1, "", "abs"], [41, 2, 1, "", "acos"], [41, 2, 1, "", "acosh"], [41, 2, 1, "", "add"], [41, 2, 1, "", "asin"], [41, 2, 1, "", "asinh"], [41, 2, 1, "", "atan"], [41, 2, 1, "", "atan2"], [41, 2, 1, "", "atanh"], [41, 2, 1, "", "bitwise_and"], [41, 2, 1, "", "bitwise_invert"], [41, 2, 1, "", "bitwise_left_shift"], [41, 2, 1, "", "bitwise_or"], [41, 2, 1, "", "bitwise_right_shift"], [41, 2, 1, "", "bitwise_xor"], [41, 2, 1, "", "ceil"], [41, 2, 1, "", "cos"], [41, 2, 1, "", "cosh"], [41, 2, 1, "", "divide"], [41, 2, 1, "", "equal"], [41, 2, 1, "", "erf"], [41, 2, 1, "", "exp"], [41, 2, 1, "", "expm1"], [41, 2, 1, "", "floor"], [41, 2, 1, "", "floor_divide"], [41, 2, 1, "", "greater"], [41, 2, 1, "", "greater_equal"], [41, 2, 1, "", "isfinite"], [41, 2, 1, "", "isinf"], [41, 2, 1, "", "isnan"], [41, 2, 1, "", "less"], [41, 2, 1, "", "less_equal"], [41, 2, 1, "", "log"], [41, 2, 1, "", "log10"], [41, 2, 1, "", "log1p"], [41, 2, 1, "", "log2"], [41, 2, 1, "", "logaddexp"], [41, 2, 1, "", "logical_and"], [41, 2, 1, "", "logical_not"], [41, 2, 1, "", "logical_or"], [41, 2, 1, "", "logical_xor"], [41, 2, 1, "", "multiply"], [41, 2, 1, "", "negative"], [41, 2, 1, "", "not_equal"], [41, 2, 1, "", "positive"], [41, 2, 1, "", "pow"], [41, 2, 1, "", "remainder"], [41, 2, 1, "", "round"], [41, 2, 1, "", "sign"], [41, 2, 1, "", "sin"], [41, 2, 1, "", "sinh"], [41, 2, 1, "", "sqrt"], [41, 2, 1, "", "square"], [41, 2, 1, "", "subtract"], [41, 2, 1, "", "tan"], [41, 2, 1, "", "tanh"], [41, 2, 1, "", "trunc"]], "ivy.array.general": [[43, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[43, 2, 1, "", "all_equal"], [43, 2, 1, "", "gather_nd"], [43, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[45, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[45, 2, 1, "", "adam_step"], [45, 2, 1, "", "is_variable"]], "ivy.array.image": [[47, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[49, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[49, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[51, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[51, 2, 1, "", "cholesky"], [51, 2, 1, "", "cross"], [51, 2, 1, "", "det"], [51, 2, 1, "", "diagonal"], [51, 2, 1, "", "eigh"], [51, 2, 1, "", "eigvalsh"], [51, 2, 1, "", "inv"], [51, 2, 1, "", "matmul"], [51, 2, 1, "", "matrix_norm"], [51, 2, 1, "", "matrix_rank"], [51, 2, 1, "", "matrix_transpose"], [51, 2, 1, "", "outer"], [51, 2, 1, "", "pinv"], [51, 2, 1, "", "qr"], [51, 2, 1, "", "solve"], [51, 2, 1, "", "svd"], [51, 2, 1, "", "svdvals"], [51, 2, 1, "", "tensordot"], [51, 2, 1, "", "trace"], [51, 2, 1, "", "vecdot"], [51, 2, 1, "", "vector_norm"], [51, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[53, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[53, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "cross_entropy"], [53, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[55, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[55, 2, 1, "", "clip"], [55, 2, 1, "", "concat"], [55, 2, 1, "", "constant_pad"], [55, 2, 1, "", "expand_dims"], [55, 2, 1, "", "flip"], [55, 2, 1, "", "permute_dims"], [55, 2, 1, "", "repeat"], [55, 2, 1, "", "reshape"], [55, 2, 1, "", "roll"], [55, 2, 1, "", "squeeze"], [55, 2, 1, "", "stack"], [55, 2, 1, "", "swapaxes"], [55, 2, 1, "", "tile"], [55, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[57, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[57, 2, 1, "", "layer_norm"]], "ivy.array.random": [[59, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[61, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[63, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[63, 2, 1, "", "unique_all"], [63, 2, 1, "", "unique_counts"], [63, 2, 1, "", "unique_inverse"], [63, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[65, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[65, 2, 1, "", "argsort"], [65, 2, 1, "", "sort"]], "ivy.array.statistical": [[67, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[67, 2, 1, "", "einsum"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "min"], [67, 2, 1, "", "prod"], [67, 2, 1, "", "std"], [67, 2, 1, "", "sum"], [67, 2, 1, "", "var"]], "ivy.array.utility": [[69, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[69, 2, 1, "", "all"], [69, 2, 1, "", "any"]], "ivy.array.wrapping": [[71, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [153, 0, 0, "-", "func_wrapper"], [1088, 0, 0, "-", "inspection"], [1092, 0, 0, "-", "stateful"], [1132, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[73, 0, 0, "-", "activations"], [75, 0, 0, "-", "base"], [77, 0, 0, "-", "container"], [79, 0, 0, "-", "creation"], [81, 0, 0, "-", "data_type"], [83, 0, 0, "-", "device"], [85, 0, 0, "-", "elementwise"], [87, 0, 0, "-", "general"], [89, 0, 0, "-", "gradients"], [91, 0, 0, "-", "image"], [93, 0, 0, "-", "layers"], [95, 0, 0, "-", "linear_algebra"], [97, 0, 0, "-", "losses"], [99, 0, 0, "-", "manipulation"], [101, 0, 0, "-", "norms"], [103, 0, 0, "-", "random"], [105, 0, 0, "-", "searching"], [107, 0, 0, "-", "set"], [109, 0, 0, "-", "sorting"], [111, 0, 0, "-", "statistical"], [113, 0, 0, "-", "utility"], [115, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[74, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[74, 2, 1, "", "gelu"], [74, 2, 1, "", "leaky_relu"], [74, 2, 1, "", "relu"], [74, 2, 1, "", "sigmoid"], [74, 2, 1, "", "softmax"], [74, 2, 1, "", "softplus"], [74, 2, 1, "", "static_gelu"], [74, 2, 1, "", "static_leaky_relu"], [74, 2, 1, "", "static_relu"], [74, 2, 1, "", "static_sigmoid"], [74, 2, 1, "", "static_softmax"], [74, 2, 1, "", "static_softplus"], [74, 2, 1, "", "static_tanh"], [74, 2, 1, "", "tanh"]], "ivy.container.base": [[76, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[76, 2, 1, "", "__getitem__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__setitem__"], [76, 2, 1, "", "all_false"], [76, 2, 1, "", "all_key_chains"], [76, 2, 1, "", "all_true"], [76, 2, 1, "", "arrays_as_lists"], [76, 2, 1, "", "as_arrays"], [76, 2, 1, "", "as_bools"], [76, 2, 1, "", "as_ones"], [76, 2, 1, "", "as_random_uniform"], [76, 2, 1, "", "as_variables"], [76, 2, 1, "", "as_zeros"], [76, 2, 1, "", "assert_contains_sub_container"], [76, 2, 1, "", "assert_contains_sub_structure"], [76, 2, 1, "", "assert_identical"], [76, 2, 1, "", "assert_identical_structure"], [76, 2, 1, "", "at_key_chain"], [76, 2, 1, "", "at_key_chains"], [76, 2, 1, "", "at_keys"], [76, 2, 1, "", "clip"], [76, 2, 1, "", "combine"], [76, 2, 1, "", "common_key_chains"], [76, 3, 1, "", "config"], [76, 2, 1, "", "contains_sub_container"], [76, 2, 1, "", "contains_sub_structure"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "create_if_absent"], [76, 2, 1, "", "cutoff_at_depth"], [76, 2, 1, "", "cutoff_at_height"], [76, 2, 1, "", "deep_copy"], [76, 3, 1, "", "dev"], [76, 2, 1, "", "dev_clone"], [76, 2, 1, "", "dev_dist"], [76, 3, 1, "", "dev_str"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "dtype"], [76, 2, 1, "", "einops_rearrange"], [76, 2, 1, "", "einops_reduce"], [76, 2, 1, "", "einops_repeat"], [76, 2, 1, "", "find_sub_container"], [76, 2, 1, "", "find_sub_structure"], [76, 2, 1, "", "flatten_key_chain"], [76, 2, 1, "", "flatten_key_chains"], [76, 2, 1, "", "format_key_chains"], [76, 2, 1, "", "from_disk_as_hdf5"], [76, 2, 1, "", "from_disk_as_json"], [76, 2, 1, "", "from_disk_as_pickled"], [76, 2, 1, "", "from_flat_list"], [76, 2, 1, "", "from_numpy"], [76, 2, 1, "", "gather"], [76, 2, 1, "", "gather_nd"], [76, 2, 1, "", "h5_file_size"], [76, 2, 1, "", "handle_inplace"], [76, 2, 1, "", "has_key"], [76, 2, 1, "", "has_key_chain"], [76, 2, 1, "", "has_nans"], [76, 2, 1, "", "identical"], [76, 2, 1, "", "identical_array_shapes"], [76, 2, 1, "", "identical_configs"], [76, 2, 1, "", "identical_structure"], [76, 2, 1, "", "if_exists"], [76, 2, 1, "", "inplace_update"], [76, 3, 1, "", "ivy"], [76, 2, 1, "", "key_chains_containing"], [76, 2, 1, "", "list_join"], [76, 2, 1, "", "list_stack"], [76, 2, 1, "", "map"], [76, 2, 1, "", "map_conts"], [76, 2, 1, "", "matrix_norm"], [76, 3, 1, "", "max_depth"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "minimum"], [76, 2, 1, "", "multi_map"], [76, 2, 1, "", "multi_map_in_static_method"], [76, 2, 1, "", "num_arrays"], [76, 2, 1, "", "overwrite_at_key_chain"], [76, 2, 1, "", "overwrite_at_key_chains"], [76, 2, 1, "", "prune_empty"], [76, 2, 1, "", "prune_key_chain"], [76, 2, 1, "", "prune_key_chains"], [76, 2, 1, "", "prune_key_from_key_chains"], [76, 2, 1, "", "prune_keys"], [76, 2, 1, "", "prune_keys_from_key_chains"], [76, 2, 1, "", "reduce"], [76, 2, 1, "", "remove_key_length_limit"], [76, 2, 1, "", "remove_print_limit"], [76, 2, 1, "", "reshape_like"], [76, 2, 1, "", "restructure"], [76, 2, 1, "", "restructure_key_chains"], [76, 2, 1, "", "set_at_key_chain"], [76, 2, 1, "", "set_at_key_chains"], [76, 2, 1, "", "set_at_keys"], [76, 2, 1, "", "set_framework"], [76, 2, 1, "", "set_ivy_backend"], [76, 3, 1, "", "shape"], [76, 3, 1, "", "shapes"], [76, 2, 1, "", "show"], [76, 2, 1, "", "show_sub_container"], [76, 2, 1, "", "shuffle"], [76, 2, 1, "", "shuffle_h5_file"], [76, 2, 1, "", "size_ordered_arrays"], [76, 2, 1, "", "slice_keys"], [76, 2, 1, "", "slice_via_key"], [76, 2, 1, "", "sort_by_key"], [76, 2, 1, "", "split"], [76, 2, 1, "", "stop_gradients"], [76, 2, 1, "", "structural_diff"], [76, 2, 1, "", "to_device"], [76, 2, 1, "", "to_dict"], [76, 2, 1, "", "to_disk_as_hdf5"], [76, 2, 1, "", "to_disk_as_json"], [76, 2, 1, "", "to_disk_as_pickled"], [76, 2, 1, "", "to_flat_list"], [76, 2, 1, "", "to_iterator"], [76, 2, 1, "", "to_iterator_keys"], [76, 2, 1, "", "to_iterator_values"], [76, 2, 1, "", "to_ivy"], [76, 2, 1, "", "to_jsonable"], [76, 2, 1, "", "to_list"], [76, 2, 1, "", "to_multi_dev"], [76, 2, 1, "", "to_native"], [76, 2, 1, "", "to_numpy"], [76, 2, 1, "", "to_raw"], [76, 2, 1, "", "trim_key"], [76, 2, 1, "", "try_kc"], [76, 2, 1, "", "unify"], [76, 2, 1, "", "unstack"], [76, 2, 1, "", "update_config"], [76, 2, 1, "", "vector_norm"], [76, 2, 1, "", "with_default_key_color"], [76, 2, 1, "", "with_entries_as_lists"], [76, 2, 1, "", "with_ivy_backend"], [76, 2, 1, "", "with_key_length_limit"], [76, 2, 1, "", "with_print_indent"], [76, 2, 1, "", "with_print_limit"], [76, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[78, 1, 1, "", "Container"]], "ivy.container.container.Container": [[78, 2, 1, "", "__add__"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "__radd__"], [78, 2, 1, "", "arange"], [78, 2, 1, "", "arg_info"], [78, 2, 1, "", "arg_names"], [78, 2, 1, "", "argmax"], [78, 2, 1, "", "argmin"], [78, 2, 1, "", "array"], [78, 2, 1, "", "array_equal"], [78, 2, 1, "", "arrays_equal"], [78, 2, 1, "", "as_ivy_dev"], [78, 2, 1, "", "as_ivy_dtype"], [78, 2, 1, "", "as_native_dev"], [78, 2, 1, "", "as_native_dtype"], [78, 2, 1, "", "asarray"], [78, 2, 1, "", "assert_supports_inplace"], [78, 2, 1, "", "cache_fn"], [78, 2, 1, "", "clear_mem_on_dev"], [78, 2, 1, "", "clip_matrix_norm"], [78, 2, 1, "", "closest_valid_dtype"], [78, 2, 1, "", "container_types"], [78, 2, 1, "", "conv1d"], [78, 2, 1, "", "conv1d_transpose"], [78, 2, 1, "", "conv2d"], [78, 2, 1, "", "conv2d_transpose"], [78, 2, 1, "", "conv3d"], [78, 2, 1, "", "conv3d_transpose"], [78, 2, 1, "", "copy_array"], [78, 2, 1, "", "cross"], [78, 2, 1, "", "cumprod"], [78, 2, 1, "", "cumsum"], [78, 2, 1, "", "current_backend"], [78, 2, 1, "", "current_backend_str"], [78, 2, 1, "", "default"], [78, 2, 1, "", "default_device"], [78, 2, 1, "", "default_dtype"], [78, 2, 1, "", "default_float_dtype"], [78, 2, 1, "", "default_int_dtype"], [78, 2, 1, "", "default_uint_dtype"], [78, 2, 1, "", "det"], [78, 2, 1, "", "dev_util"], [78, 2, 1, "", "diagonal"], [78, 2, 1, "", "dropout"], [78, 2, 1, "", "dtype_bits"], [78, 2, 1, "", "eigh"], [78, 2, 1, "", "eigvalsh"], [78, 2, 1, "", "empty"], [78, 2, 1, "", "execute_with_gradients"], [78, 2, 1, "", "exists"], [78, 2, 1, "", "eye"], [78, 2, 1, "", "floormod"], [78, 2, 1, "", "fourier_encode"], [78, 2, 1, "", "full"], [78, 2, 1, "", "function_supported_dtypes"], [78, 2, 1, "", "function_unsupported_dtypes"], [78, 2, 1, "", "get_all_arrays_in_memory"], [78, 2, 1, "", "get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "get_min_base"], [78, 2, 1, "", "get_min_denominator"], [78, 2, 1, "", "get_nestable_mode"], [78, 2, 1, "", "get_num_dims"], [78, 2, 1, "", "get_referrers_recursive"], [78, 2, 1, "", "gpu_is_available"], [78, 2, 1, "", "handle_nestable"], [78, 2, 1, "", "handle_out_argument"], [78, 2, 1, "", "indices_where"], [78, 2, 1, "", "infer_device"], [78, 2, 1, "", "infer_dtype"], [78, 2, 1, "", "inplace_arrays_supported"], [78, 2, 1, "", "inplace_decrement"], [78, 2, 1, "", "inplace_increment"], [78, 2, 1, "", "inplace_variables_supported"], [78, 2, 1, "", "inputs_to_native_arrays"], [78, 2, 1, "", "inv"], [78, 2, 1, "", "invalid_dtype"], [78, 2, 1, "", "is_ivy_container"], [78, 2, 1, "", "is_uint_dtype"], [78, 2, 1, "", "linear"], [78, 2, 1, "", "linspace"], [78, 2, 1, "", "logspace"], [78, 2, 1, "", "lstm_update"], [78, 2, 1, "", "match_kwargs"], [78, 2, 1, "", "matrix_power"], [78, 2, 1, "", "matrix_rank"], [78, 2, 1, "", "matrix_transpose"], [78, 2, 1, "", "multi_head_attention"], [78, 2, 1, "", "multinomial"], [78, 2, 1, "", "multiprocessing"], [78, 2, 1, "", "nonzero"], [78, 2, 1, "", "num_arrays_in_memory"], [78, 2, 1, "", "num_cpu_cores"], [78, 2, 1, "", "num_gpus"], [78, 2, 1, "", "num_ivy_arrays_on_dev"], [78, 2, 1, "", "one_hot"], [78, 2, 1, "", "ones"], [78, 2, 1, "", "outer"], [78, 2, 1, "", "outputs_to_ivy_arrays"], [78, 2, 1, "", "percent_used_mem_on_dev"], [78, 2, 1, "", "pinv"], [78, 2, 1, "", "print_all_arrays_in_memory"], [78, 2, 1, "", "print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "promote_types"], [78, 2, 1, "", "qr"], [78, 2, 1, "", "queue_timeout"], [78, 2, 1, "", "randint"], [78, 2, 1, "", "random_normal"], [78, 2, 1, "", "scaled_dot_product_attention"], [78, 2, 1, "", "scatter_flat"], [78, 2, 1, "", "scatter_nd"], [78, 2, 1, "", "seed"], [78, 2, 1, "", "set_default_device"], [78, 2, 1, "", "set_default_dtype"], [78, 2, 1, "", "set_default_float_dtype"], [78, 2, 1, "", "set_default_int_dtype"], [78, 2, 1, "", "set_default_uint_dtype"], [78, 2, 1, "", "set_min_base"], [78, 2, 1, "", "set_min_denominator"], [78, 2, 1, "", "set_nestable_mode"], [78, 2, 1, "", "set_queue_timeout"], [78, 2, 1, "", "set_shape_array_mode"], [78, 2, 1, "", "set_split_factor"], [78, 2, 1, "", "set_tmp_dir"], [78, 2, 1, "", "set_with_grads"], [78, 2, 1, "", "shape_array_mode"], [78, 2, 1, "", "slogdet"], [78, 2, 1, "", "solve"], [78, 2, 1, "", "split_factor"], [78, 2, 1, "", "split_func_call"], [78, 2, 1, "", "stable_divide"], [78, 2, 1, "", "stable_pow"], [78, 2, 1, "", "static_arg_info"], [78, 2, 1, "", "static_arg_names"], [78, 2, 1, "", "static_argmax"], [78, 2, 1, "", "static_argmin"], [78, 2, 1, "", "static_array"], [78, 2, 1, "", "static_array_equal"], [78, 2, 1, "", "static_arrays_equal"], [78, 2, 1, "", "static_as_ivy_dev"], [78, 2, 1, "", "static_as_ivy_dtype"], [78, 2, 1, "", "static_as_native_dev"], [78, 2, 1, "", "static_as_native_dtype"], [78, 2, 1, "", "static_assert_supports_inplace"], [78, 2, 1, "", "static_cache_fn"], [78, 2, 1, "", "static_clear_mem_on_dev"], [78, 2, 1, "", "static_clip_matrix_norm"], [78, 2, 1, "", "static_clip_vector_norm"], [78, 2, 1, "", "static_closest_valid_dtype"], [78, 2, 1, "", "static_concat"], [78, 2, 1, "", "static_constant_pad"], [78, 2, 1, "", "static_container_types"], [78, 2, 1, "", "static_conv1d"], [78, 2, 1, "", "static_conv1d_transpose"], [78, 2, 1, "", "static_conv2d"], [78, 2, 1, "", "static_conv2d_transpose"], [78, 2, 1, "", "static_conv3d"], [78, 2, 1, "", "static_conv3d_transpose"], [78, 2, 1, "", "static_copy_array"], [78, 2, 1, "", "static_cross"], [78, 2, 1, "", "static_cumprod"], [78, 2, 1, "", "static_cumsum"], [78, 2, 1, "", "static_current_backend"], [78, 2, 1, "", "static_current_backend_str"], [78, 2, 1, "", "static_default"], [78, 2, 1, "", "static_default_device"], [78, 2, 1, "", "static_default_dtype"], [78, 2, 1, "", "static_default_float_dtype"], [78, 2, 1, "", "static_default_int_dtype"], [78, 2, 1, "", "static_default_uint_dtype"], [78, 2, 1, "", "static_det"], [78, 2, 1, "", "static_dev_util"], [78, 2, 1, "", "static_diagonal"], [78, 2, 1, "", "static_dropout"], [78, 2, 1, "", "static_dtype_bits"], [78, 2, 1, "", "static_eigh"], [78, 2, 1, "", "static_eigvalsh"], [78, 2, 1, "", "static_einops_rearrange"], [78, 2, 1, "", "static_einops_reduce"], [78, 2, 1, "", "static_einops_repeat"], [78, 2, 1, "", "static_einsum"], [78, 2, 1, "", "static_empty"], [78, 2, 1, "", "static_exists"], [78, 2, 1, "", "static_expand_dims"], [78, 2, 1, "", "static_flip"], [78, 2, 1, "", "static_floormod"], [78, 2, 1, "", "static_fourier_encode"], [78, 2, 1, "", "static_full"], [78, 2, 1, "", "static_function_supported_dtypes"], [78, 2, 1, "", "static_function_unsupported_dtypes"], [78, 2, 1, "", "static_gather"], [78, 2, 1, "", "static_get_all_arrays_in_memory"], [78, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_get_min_base"], [78, 2, 1, "", "static_get_min_denominator"], [78, 2, 1, "", "static_get_nestable_mode"], [78, 2, 1, "", "static_get_num_dims"], [78, 2, 1, "", "static_get_referrers_recursive"], [78, 2, 1, "", "static_gpu_is_available"], [78, 2, 1, "", "static_handle_nestable"], [78, 2, 1, "", "static_handle_out_argument"], [78, 2, 1, "", "static_has_nans"], [78, 2, 1, "", "static_indices_where"], [78, 2, 1, "", "static_infer_device"], [78, 2, 1, "", "static_infer_dtype"], [78, 2, 1, "", "static_inplace_arrays_supported"], [78, 2, 1, "", "static_inplace_decrement"], [78, 2, 1, "", "static_inplace_increment"], [78, 2, 1, "", "static_inplace_update"], [78, 2, 1, "", "static_inplace_variables_supported"], [78, 2, 1, "", "static_inputs_to_native_arrays"], [78, 2, 1, "", "static_inv"], [78, 2, 1, "", "static_invalid_dtype"], [78, 2, 1, "", "static_is_array"], [78, 2, 1, "", "static_is_ivy_array"], [78, 2, 1, "", "static_is_ivy_container"], [78, 2, 1, "", "static_is_native_array"], [78, 2, 1, "", "static_is_uint_dtype"], [78, 2, 1, "", "static_linear"], [78, 2, 1, "", "static_lstm_update"], [78, 2, 1, "", "static_match_kwargs"], [78, 2, 1, "", "static_matmul"], [78, 2, 1, "", "static_matrix_norm"], [78, 2, 1, "", "static_matrix_power"], [78, 2, 1, "", "static_matrix_rank"], [78, 2, 1, "", "static_matrix_transpose"], [78, 2, 1, "", "static_max"], [78, 2, 1, "", "static_maximum"], [78, 2, 1, "", "static_mean"], [78, 2, 1, "", "static_min"], [78, 2, 1, "", "static_minimum"], [78, 2, 1, "", "static_multi_head_attention"], [78, 2, 1, "", "static_multinomial"], [78, 2, 1, "", "static_multiprocessing"], [78, 2, 1, "", "static_nonzero"], [78, 2, 1, "", "static_num_arrays_in_memory"], [78, 2, 1, "", "static_num_cpu_cores"], [78, 2, 1, "", "static_num_gpus"], [78, 2, 1, "", "static_num_ivy_arrays_on_dev"], [78, 2, 1, "", "static_one_hot"], [78, 2, 1, "", "static_outer"], [78, 2, 1, "", "static_outputs_to_ivy_arrays"], [78, 2, 1, "", "static_percent_used_mem_on_dev"], [78, 2, 1, "", "static_permute_dims"], [78, 2, 1, "", "static_pinv"], [78, 2, 1, "", "static_print_all_arrays_in_memory"], [78, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_prod"], [78, 2, 1, "", "static_promote_types"], [78, 2, 1, "", "static_qr"], [78, 2, 1, "", "static_queue_timeout"], [78, 2, 1, "", "static_random_normal"], [78, 2, 1, "", "static_reshape"], [78, 2, 1, "", "static_scaled_dot_product_attention"], [78, 2, 1, "", "static_scatter_flat"], [78, 2, 1, "", "static_scatter_nd"], [78, 2, 1, "", "static_seed"], [78, 2, 1, "", "static_set_default_device"], [78, 2, 1, "", "static_set_default_dtype"], [78, 2, 1, "", "static_set_default_float_dtype"], [78, 2, 1, "", "static_set_default_int_dtype"], [78, 2, 1, "", "static_set_default_uint_dtype"], [78, 2, 1, "", "static_set_min_base"], [78, 2, 1, "", "static_set_min_denominator"], [78, 2, 1, "", "static_set_nestable_mode"], [78, 2, 1, "", "static_set_queue_timeout"], [78, 2, 1, "", "static_set_shape_array_mode"], [78, 2, 1, "", "static_set_split_factor"], [78, 2, 1, "", "static_set_tmp_dir"], [78, 2, 1, "", "static_set_with_grads"], [78, 2, 1, "", "static_shape"], [78, 2, 1, "", "static_shape_array_mode"], [78, 2, 1, "", "static_shuffle"], [78, 2, 1, "", "static_slogdet"], [78, 2, 1, "", "static_solve"], [78, 2, 1, "", "static_split"], [78, 2, 1, "", "static_split_factor"], [78, 2, 1, "", "static_split_func_call"], [78, 2, 1, "", "static_squeeze"], [78, 2, 1, "", "static_stable_divide"], [78, 2, 1, "", "static_stable_pow"], [78, 2, 1, "", "static_stack"], [78, 2, 1, "", "static_std"], [78, 2, 1, "", "static_stop_gradient"], [78, 2, 1, "", "static_sum"], [78, 2, 1, "", "static_supports_inplace"], [78, 2, 1, "", "static_svd"], [78, 2, 1, "", "static_svdvals"], [78, 2, 1, "", "static_swapaxes"], [78, 2, 1, "", "static_tensordot"], [78, 2, 1, "", "static_tile"], [78, 2, 1, "", "static_tmp_dir"], [78, 2, 1, "", "static_to_ivy_shape"], [78, 2, 1, "", "static_to_list"], [78, 2, 1, "", "static_to_native_arrays_and_back"], [78, 2, 1, "", "static_to_native_shape"], [78, 2, 1, "", "static_to_scalar"], [78, 2, 1, "", "static_total_mem_on_dev"], [78, 2, 1, "", "static_tpu_is_available"], [78, 2, 1, "", "static_trace"], [78, 2, 1, "", "static_try_else_none"], [78, 2, 1, "", "static_type_promote_arrays"], [78, 2, 1, "", "static_unset_default_device"], [78, 2, 1, "", "static_unset_default_dtype"], [78, 2, 1, "", "static_unset_default_float_dtype"], [78, 2, 1, "", "static_unset_default_int_dtype"], [78, 2, 1, "", "static_unset_default_uint_dtype"], [78, 2, 1, "", "static_unset_nestable_mode"], [78, 2, 1, "", "static_unset_shape_array_mode"], [78, 2, 1, "", "static_unset_with_grads"], [78, 2, 1, "", "static_unstack"], [78, 2, 1, "", "static_used_mem_on_dev"], [78, 2, 1, "", "static_valid_dtype"], [78, 2, 1, "", "static_value_is_nan"], [78, 2, 1, "", "static_var"], [78, 2, 1, "", "static_variable"], [78, 2, 1, "", "static_variable_data"], [78, 2, 1, "", "static_vecdot"], [78, 2, 1, "", "static_vector_norm"], [78, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [78, 2, 1, "", "static_where"], [78, 2, 1, "", "static_with_grads"], [78, 2, 1, "", "static_zero_pad"], [78, 2, 1, "", "stop_gradient"], [78, 2, 1, "", "supports_inplace"], [78, 2, 1, "", "svd"], [78, 2, 1, "", "svdvals"], [78, 2, 1, "", "tensordot"], [78, 2, 1, "", "tmp_dir"], [78, 2, 1, "", "to_ivy_shape"], [78, 2, 1, "", "to_native_arrays_and_back"], [78, 2, 1, "", "to_native_shape"], [78, 2, 1, "", "to_scalar"], [78, 2, 1, "", "total_mem_on_dev"], [78, 2, 1, "", "tpu_is_available"], [78, 2, 1, "", "trace"], [78, 2, 1, "", "try_else_none"], [78, 2, 1, "", "type_promote_arrays"], [78, 2, 1, "", "unset_default_device"], [78, 2, 1, "", "unset_default_dtype"], [78, 2, 1, "", "unset_default_float_dtype"], [78, 2, 1, "", "unset_default_int_dtype"], [78, 2, 1, "", "unset_default_uint_dtype"], [78, 2, 1, "", "unset_nestable_mode"], [78, 2, 1, "", "unset_shape_array_mode"], [78, 2, 1, "", "unset_with_grads"], [78, 2, 1, "", "used_mem_on_dev"], [78, 2, 1, "", "valid_dtype"], [78, 2, 1, "", "value_is_nan"], [78, 2, 1, "", "variable"], [78, 2, 1, "", "variable_data"], [78, 2, 1, "", "vecdot"], [78, 2, 1, "", "vector_to_skew_symmetric_matrix"], [78, 2, 1, "", "where"], [78, 2, 1, "", "with_grads"], [78, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[391, 4, 1, "", "abs"], [396, 4, 1, "", "acos"], [401, 4, 1, "", "acosh"], [761, 4, 1, "", "adam_step"], [765, 4, 1, "", "adam_update"], [406, 4, 1, "", "add"], [1077, 4, 1, "", "all"], [675, 4, 1, "", "all_equal"], [1082, 4, 1, "", "any"], [1033, 4, 1, "", "argsort"], [411, 4, 1, "", "asin"], [416, 4, 1, "", "asinh"], [281, 4, 1, "", "astype"], [421, 4, 1, "", "atan"], [426, 4, 1, "", "atan2"], [431, 4, 1, "", "atanh"], [890, 4, 1, "", "binary_cross_entropy"], [436, 4, 1, "", "bitwise_and"], [441, 4, 1, "", "bitwise_invert"], [446, 4, 1, "", "bitwise_left_shift"], [451, 4, 1, "", "bitwise_or"], [456, 4, 1, "", "bitwise_right_shift"], [461, 4, 1, "", "bitwise_xor"], [286, 4, 1, "", "broadcast_arrays"], [291, 4, 1, "", "broadcast_to"], [296, 4, 1, "", "can_cast"], [466, 4, 1, "", "ceil"], [818, 4, 1, "", "cholesky"], [906, 4, 1, "", "clip"], [686, 4, 1, "", "clip_vector_norm"], [911, 4, 1, "", "concat"], [915, 4, 1, "", "constant_pad"], [471, 4, 1, "", "cos"], [476, 4, 1, "", "cosh"], [895, 4, 1, "", "cross_entropy"], [807, 4, 1, "", "depthwise_conv2d"], [364, 4, 1, "", "dev"], [481, 4, 1, "", "divide"], [306, 4, 1, "", "dtype"], [1044, 4, 1, "", "einsum"], [213, 4, 1, "", "empty_like"], [486, 4, 1, "", "equal"], [491, 4, 1, "", "erf"], [496, 4, 1, "", "exp"], [919, 4, 1, "", "expand_dims"], [501, 4, 1, "", "expm1"], [312, 4, 1, "", "finfo"], [923, 4, 1, "", "flip"], [506, 4, 1, "", "floor"], [511, 4, 1, "", "floor_divide"], [221, 4, 1, "", "from_dlpack"], [227, 4, 1, "", "full_like"], [703, 4, 1, "", "gather_nd"], [166, 4, 1, "", "gelu"], [772, 4, 1, "", "gradient_descent_update"], [516, 4, 1, "", "greater"], [521, 4, 1, "", "greater_equal"], [319, 4, 1, "", "iinfo"], [325, 4, 1, "", "is_bool_dtype"], [330, 4, 1, "", "is_float_dtype"], [335, 4, 1, "", "is_int_dtype"], [777, 4, 1, "", "is_variable"], [526, 4, 1, "", "isfinite"], [531, 4, 1, "", "isinf"], [536, 4, 1, "", "isnan"], [781, 4, 1, "", "lamb_update"], [785, 4, 1, "", "lars_update"], [989, 4, 1, "", "layer_norm"], [171, 4, 1, "", "leaky_relu"], [541, 4, 1, "", "less"], [546, 4, 1, "", "less_equal"], [551, 4, 1, "", "log"], [556, 4, 1, "", "log10"], [561, 4, 1, "", "log1p"], [566, 4, 1, "", "log2"], [571, 4, 1, "", "logaddexp"], [576, 4, 1, "", "logical_and"], [581, 4, 1, "", "logical_not"], [586, 4, 1, "", "logical_or"], [591, 4, 1, "", "logical_xor"], [841, 4, 1, "", "matmul"], [1048, 4, 1, "", "max"], [1052, 4, 1, "", "mean"], [238, 4, 1, "", "meshgrid"], [1056, 4, 1, "", "min"], [598, 4, 1, "", "multiply"], [243, 4, 1, "", "native_array"], [603, 4, 1, "", "negative"], [608, 4, 1, "", "not_equal"], [251, 4, 1, "", "ones_like"], [789, 4, 1, "", "optimizer_update"], [927, 4, 1, "", "permute_dims"], [613, 4, 1, "", "positive"], [618, 4, 1, "", "pow"], [1060, 4, 1, "", "prod"], [999, 4, 1, "", "random_uniform"], [176, 4, 1, "", "relu"], [623, 4, 1, "", "remainder"], [931, 4, 1, "", "repeat"], [936, 4, 1, "", "reshape"], [342, 4, 1, "", "result_type"], [940, 4, 1, "", "roll"], [628, 4, 1, "", "round"], [181, 4, 1, "", "sigmoid"], [633, 4, 1, "", "sign"], [638, 4, 1, "", "sin"], [643, 4, 1, "", "sinh"], [186, 4, 1, "", "softmax"], [191, 4, 1, "", "softplus"], [1038, 4, 1, "", "sort"], [900, 4, 1, "", "sparse_cross_entropy"], [648, 4, 1, "", "sqrt"], [653, 4, 1, "", "square"], [946, 4, 1, "", "squeeze"], [950, 4, 1, "", "stack"], [393, 4, 1, "", "static_abs"], [398, 4, 1, "", "static_acos"], [403, 4, 1, "", "static_acosh"], [763, 4, 1, "", "static_adam_step"], [767, 4, 1, "", "static_adam_update"], [408, 4, 1, "", "static_add"], [1079, 4, 1, "", "static_all"], [677, 4, 1, "", "static_all_equal"], [1084, 4, 1, "", "static_any"], [205, 4, 1, "", "static_arange"], [1035, 4, 1, "", "static_argsort"], [209, 4, 1, "", "static_asarray"], [413, 4, 1, "", "static_asin"], [418, 4, 1, "", "static_asinh"], [283, 4, 1, "", "static_astype"], [423, 4, 1, "", "static_atan"], [428, 4, 1, "", "static_atan2"], [433, 4, 1, "", "static_atanh"], [892, 4, 1, "", "static_binary_cross_entropy"], [438, 4, 1, "", "static_bitwise_and"], [443, 4, 1, "", "static_bitwise_invert"], [448, 4, 1, "", "static_bitwise_left_shift"], [453, 4, 1, "", "static_bitwise_or"], [458, 4, 1, "", "static_bitwise_right_shift"], [463, 4, 1, "", "static_bitwise_xor"], [288, 4, 1, "", "static_broadcast_arrays"], [293, 4, 1, "", "static_broadcast_to"], [298, 4, 1, "", "static_can_cast"], [468, 4, 1, "", "static_ceil"], [820, 4, 1, "", "static_cholesky"], [908, 4, 1, "", "static_clip"], [473, 4, 1, "", "static_cos"], [478, 4, 1, "", "static_cosh"], [897, 4, 1, "", "static_cross_entropy"], [809, 4, 1, "", "static_depthwise_conv2d"], [366, 4, 1, "", "static_dev"], [483, 4, 1, "", "static_divide"], [308, 4, 1, "", "static_dtype"], [215, 4, 1, "", "static_empty_like"], [488, 4, 1, "", "static_equal"], [493, 4, 1, "", "static_erf"], [770, 4, 1, "", "static_execute_with_gradients"], [498, 4, 1, "", "static_exp"], [503, 4, 1, "", "static_expm1"], [218, 4, 1, "", "static_eye"], [314, 4, 1, "", "static_finfo"], [508, 4, 1, "", "static_floor"], [513, 4, 1, "", "static_floor_divide"], [223, 4, 1, "", "static_from_dlpack"], [229, 4, 1, "", "static_full_like"], [705, 4, 1, "", "static_gather_nd"], [168, 4, 1, "", "static_gelu"], [774, 4, 1, "", "static_gradient_descent_update"], [518, 4, 1, "", "static_greater"], [523, 4, 1, "", "static_greater_equal"], [321, 4, 1, "", "static_iinfo"], [327, 4, 1, "", "static_is_bool_dtype"], [332, 4, 1, "", "static_is_float_dtype"], [337, 4, 1, "", "static_is_int_dtype"], [779, 4, 1, "", "static_is_variable"], [528, 4, 1, "", "static_isfinite"], [533, 4, 1, "", "static_isinf"], [538, 4, 1, "", "static_isnan"], [783, 4, 1, "", "static_lamb_update"], [787, 4, 1, "", "static_lars_update"], [991, 4, 1, "", "static_layer_norm"], [173, 4, 1, "", "static_leaky_relu"], [543, 4, 1, "", "static_less"], [548, 4, 1, "", "static_less_equal"], [232, 4, 1, "", "static_linspace"], [553, 4, 1, "", "static_log"], [558, 4, 1, "", "static_log10"], [563, 4, 1, "", "static_log1p"], [568, 4, 1, "", "static_log2"], [573, 4, 1, "", "static_logaddexp"], [578, 4, 1, "", "static_logical_and"], [583, 4, 1, "", "static_logical_not"], [588, 4, 1, "", "static_logical_or"], [593, 4, 1, "", "static_logical_xor"], [235, 4, 1, "", "static_logspace"], [240, 4, 1, "", "static_meshgrid"], [600, 4, 1, "", "static_multiply"], [245, 4, 1, "", "static_native_array"], [605, 4, 1, "", "static_negative"], [610, 4, 1, "", "static_not_equal"], [248, 4, 1, "", "static_ones"], [253, 4, 1, "", "static_ones_like"], [791, 4, 1, "", "static_optimizer_update"], [615, 4, 1, "", "static_positive"], [620, 4, 1, "", "static_pow"], [996, 4, 1, "", "static_randint"], [1001, 4, 1, "", "static_random_uniform"], [178, 4, 1, "", "static_relu"], [625, 4, 1, "", "static_remainder"], [933, 4, 1, "", "static_repeat"], [344, 4, 1, "", "static_result_type"], [942, 4, 1, "", "static_roll"], [630, 4, 1, "", "static_round"], [183, 4, 1, "", "static_sigmoid"], [635, 4, 1, "", "static_sign"], [640, 4, 1, "", "static_sin"], [645, 4, 1, "", "static_sinh"], [188, 4, 1, "", "static_softmax"], [193, 4, 1, "", "static_softplus"], [1040, 4, 1, "", "static_sort"], [902, 4, 1, "", "static_sparse_cross_entropy"], [650, 4, 1, "", "static_sqrt"], [655, 4, 1, "", "static_square"], [657, 4, 1, "", "static_subtract"], [662, 4, 1, "", "static_tan"], [195, 4, 1, "", "static_tanh"], [380, 4, 1, "", "static_to_device"], [747, 4, 1, "", "static_to_numpy"], [255, 4, 1, "", "static_tril"], [260, 4, 1, "", "static_triu"], [668, 4, 1, "", "static_trunc"], [1011, 4, 1, "", "static_unique_all"], [1016, 4, 1, "", "static_unique_counts"], [1021, 4, 1, "", "static_unique_inverse"], [1026, 4, 1, "", "static_unique_values"], [265, 4, 1, "", "static_zeros"], [268, 4, 1, "", "static_zeros_like"], [1064, 4, 1, "", "std"], [659, 4, 1, "", "subtract"], [1068, 4, 1, "", "sum"], [954, 4, 1, "", "swapaxes"], [664, 4, 1, "", "tan"], [197, 4, 1, "", "tanh"], [958, 4, 1, "", "tile"], [382, 4, 1, "", "to_device"], [749, 4, 1, "", "to_numpy"], [257, 4, 1, "", "tril"], [262, 4, 1, "", "triu"], [670, 4, 1, "", "trunc"], [1013, 4, 1, "", "unique_all"], [1018, 4, 1, "", "unique_counts"], [1023, 4, 1, "", "unique_inverse"], [1028, 4, 1, "", "unique_values"], [1072, 4, 1, "", "var"], [962, 4, 1, "", "zero_pad"], [270, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[80, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[80, 2, 1, "", "empty_like"], [80, 2, 1, "", "from_dlpack"], [80, 2, 1, "", "full_like"], [80, 2, 1, "", "meshgrid"], [80, 2, 1, "", "native_array"], [80, 2, 1, "", "ones_like"], [80, 2, 1, "", "static_arange"], [80, 2, 1, "", "static_asarray"], [80, 2, 1, "", "static_empty_like"], [80, 2, 1, "", "static_eye"], [80, 2, 1, "", "static_from_dlpack"], [80, 2, 1, "", "static_full_like"], [80, 2, 1, "", "static_linspace"], [80, 2, 1, "", "static_logspace"], [80, 2, 1, "", "static_meshgrid"], [80, 2, 1, "", "static_native_array"], [80, 2, 1, "", "static_ones"], [80, 2, 1, "", "static_ones_like"], [80, 2, 1, "", "static_tril"], [80, 2, 1, "", "static_triu"], [80, 2, 1, "", "static_zeros"], [80, 2, 1, "", "static_zeros_like"], [80, 2, 1, "", "tril"], [80, 2, 1, "", "triu"], [80, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[82, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[82, 2, 1, "", "astype"], [82, 2, 1, "", "broadcast_arrays"], [82, 2, 1, "", "broadcast_to"], [82, 2, 1, "", "can_cast"], [82, 2, 1, "", "dtype"], [82, 2, 1, "", "finfo"], [82, 2, 1, "", "iinfo"], [82, 2, 1, "", "is_bool_dtype"], [82, 2, 1, "", "is_float_dtype"], [82, 2, 1, "", "is_int_dtype"], [82, 2, 1, "", "result_type"], [82, 2, 1, "", "static_astype"], [82, 2, 1, "", "static_broadcast_arrays"], [82, 2, 1, "", "static_broadcast_to"], [82, 2, 1, "", "static_can_cast"], [82, 2, 1, "", "static_dtype"], [82, 2, 1, "", "static_finfo"], [82, 2, 1, "", "static_iinfo"], [82, 2, 1, "", "static_is_bool_dtype"], [82, 2, 1, "", "static_is_float_dtype"], [82, 2, 1, "", "static_is_int_dtype"], [82, 2, 1, "", "static_result_type"]], "ivy.container.device": [[84, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[84, 2, 1, "", "dev"], [84, 2, 1, "", "static_dev"], [84, 2, 1, "", "static_to_device"], [84, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[86, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[86, 2, 1, "", "abs"], [86, 2, 1, "", "acos"], [86, 2, 1, "", "acosh"], [86, 2, 1, "", "add"], [86, 2, 1, "", "asin"], [86, 2, 1, "", "asinh"], [86, 2, 1, "", "atan"], [86, 2, 1, "", "atan2"], [86, 2, 1, "", "atanh"], [86, 2, 1, "", "bitwise_and"], [86, 2, 1, "", "bitwise_invert"], [86, 2, 1, "", "bitwise_left_shift"], [86, 2, 1, "", "bitwise_or"], [86, 2, 1, "", "bitwise_right_shift"], [86, 2, 1, "", "bitwise_xor"], [86, 2, 1, "", "ceil"], [86, 2, 1, "", "cos"], [86, 2, 1, "", "cosh"], [86, 2, 1, "", "divide"], [86, 2, 1, "", "equal"], [86, 2, 1, "", "erf"], [86, 2, 1, "", "exp"], [86, 2, 1, "", "expm1"], [86, 2, 1, "", "floor"], [86, 2, 1, "", "floor_divide"], [86, 2, 1, "", "greater"], [86, 2, 1, "", "greater_equal"], [86, 2, 1, "", "isfinite"], [86, 2, 1, "", "isinf"], [86, 2, 1, "", "isnan"], [86, 2, 1, "", "less"], [86, 2, 1, "", "less_equal"], [86, 2, 1, "", "log"], [86, 2, 1, "", "log10"], [86, 2, 1, "", "log1p"], [86, 2, 1, "", "log2"], [86, 2, 1, "", "logaddexp"], [86, 2, 1, "", "logical_and"], [86, 2, 1, "", "logical_not"], [86, 2, 1, "", "logical_or"], [86, 2, 1, "", "logical_xor"], [86, 2, 1, "", "multiply"], [86, 2, 1, "", "negative"], [86, 2, 1, "", "not_equal"], [86, 2, 1, "", "positive"], [86, 2, 1, "", "pow"], [86, 2, 1, "", "remainder"], [86, 2, 1, "", "round"], [86, 2, 1, "", "sign"], [86, 2, 1, "", "sin"], [86, 2, 1, "", "sinh"], [86, 2, 1, "", "sqrt"], [86, 2, 1, "", "square"], [86, 2, 1, "", "static_abs"], [86, 2, 1, "", "static_acos"], [86, 2, 1, "", "static_acosh"], [86, 2, 1, "", "static_add"], [86, 2, 1, "", "static_asin"], [86, 2, 1, "", "static_asinh"], [86, 2, 1, "", "static_atan"], [86, 2, 1, "", "static_atan2"], [86, 2, 1, "", "static_atanh"], [86, 2, 1, "", "static_bitwise_and"], [86, 2, 1, "", "static_bitwise_invert"], [86, 2, 1, "", "static_bitwise_left_shift"], [86, 2, 1, "", "static_bitwise_or"], [86, 2, 1, "", "static_bitwise_right_shift"], [86, 2, 1, "", "static_bitwise_xor"], [86, 2, 1, "", "static_ceil"], [86, 2, 1, "", "static_cos"], [86, 2, 1, "", "static_cosh"], [86, 2, 1, "", "static_divide"], [86, 2, 1, "", "static_equal"], [86, 2, 1, "", "static_erf"], [86, 2, 1, "", "static_exp"], [86, 2, 1, "", "static_expm1"], [86, 2, 1, "", "static_floor"], [86, 2, 1, "", "static_floor_divide"], [86, 2, 1, "", "static_greater"], [86, 2, 1, "", "static_greater_equal"], [86, 2, 1, "", "static_isfinite"], [86, 2, 1, "", "static_isinf"], [86, 2, 1, "", "static_isnan"], [86, 2, 1, "", "static_less"], [86, 2, 1, "", "static_less_equal"], [86, 2, 1, "", "static_log"], [86, 2, 1, "", "static_log10"], [86, 2, 1, "", "static_log1p"], [86, 2, 1, "", "static_log2"], [86, 2, 1, "", "static_logaddexp"], [86, 2, 1, "", "static_logical_and"], [86, 2, 1, "", "static_logical_not"], [86, 2, 1, "", "static_logical_or"], [86, 2, 1, "", "static_logical_xor"], [86, 2, 1, "", "static_multiply"], [86, 2, 1, "", "static_negative"], [86, 2, 1, "", "static_not_equal"], [86, 2, 1, "", "static_positive"], [86, 2, 1, "", "static_pow"], [86, 2, 1, "", "static_remainder"], [86, 2, 1, "", "static_round"], [86, 2, 1, "", "static_sign"], [86, 2, 1, "", "static_sin"], [86, 2, 1, "", "static_sinh"], [86, 2, 1, "", "static_sqrt"], [86, 2, 1, "", "static_square"], [86, 2, 1, "", "static_subtract"], [86, 2, 1, "", "static_tan"], [86, 2, 1, "", "static_tanh"], [86, 2, 1, "", "static_trunc"], [86, 2, 1, "", "subtract"], [86, 2, 1, "", "tan"], [86, 2, 1, "", "tanh"], [86, 2, 1, "", "trunc"]], "ivy.container.general": [[88, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[88, 2, 1, "", "all_equal"], [88, 2, 1, "", "clip_vector_norm"], [88, 2, 1, "", "gather_nd"], [88, 2, 1, "", "static_all_equal"], [88, 2, 1, "", "static_gather_nd"], [88, 2, 1, "", "static_to_numpy"], [88, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[90, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[90, 2, 1, "", "adam_step"], [90, 2, 1, "", "adam_update"], [90, 2, 1, "", "gradient_descent_update"], [90, 2, 1, "", "is_variable"], [90, 2, 1, "", "lamb_update"], [90, 2, 1, "", "lars_update"], [90, 2, 1, "", "optimizer_update"], [90, 2, 1, "", "static_adam_step"], [90, 2, 1, "", "static_adam_update"], [90, 2, 1, "", "static_execute_with_gradients"], [90, 2, 1, "", "static_gradient_descent_update"], [90, 2, 1, "", "static_is_variable"], [90, 2, 1, "", "static_lamb_update"], [90, 2, 1, "", "static_lars_update"], [90, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[92, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[94, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[94, 2, 1, "", "depthwise_conv2d"], [94, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[96, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[96, 2, 1, "", "cholesky"], [96, 2, 1, "", "matmul"], [96, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[98, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[98, 2, 1, "", "binary_cross_entropy"], [98, 2, 1, "", "cross_entropy"], [98, 2, 1, "", "sparse_cross_entropy"], [98, 2, 1, "", "static_binary_cross_entropy"], [98, 2, 1, "", "static_cross_entropy"], [98, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[100, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[100, 2, 1, "", "clip"], [100, 2, 1, "", "concat"], [100, 2, 1, "", "constant_pad"], [100, 2, 1, "", "expand_dims"], [100, 2, 1, "", "flip"], [100, 2, 1, "", "permute_dims"], [100, 2, 1, "", "repeat"], [100, 2, 1, "", "reshape"], [100, 2, 1, "", "roll"], [100, 2, 1, "", "squeeze"], [100, 2, 1, "", "stack"], [100, 2, 1, "", "static_clip"], [100, 2, 1, "", "static_repeat"], [100, 2, 1, "", "static_roll"], [100, 2, 1, "", "swapaxes"], [100, 2, 1, "", "tile"], [100, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[102, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[102, 2, 1, "", "layer_norm"], [102, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[104, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[104, 2, 1, "", "random_uniform"], [104, 2, 1, "", "static_randint"], [104, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[106, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[108, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[108, 2, 1, "", "static_unique_all"], [108, 2, 1, "", "static_unique_counts"], [108, 2, 1, "", "static_unique_inverse"], [108, 2, 1, "", "static_unique_values"], [108, 2, 1, "", "unique_all"], [108, 2, 1, "", "unique_counts"], [108, 2, 1, "", "unique_inverse"], [108, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[110, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[110, 2, 1, "", "argsort"], [110, 2, 1, "", "sort"], [110, 2, 1, "", "static_argsort"], [110, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[112, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[112, 2, 1, "", "einsum"], [112, 2, 1, "", "max"], [112, 2, 1, "", "mean"], [112, 2, 1, "", "min"], [112, 2, 1, "", "prod"], [112, 2, 1, "", "std"], [112, 2, 1, "", "sum"], [112, 2, 1, "", "var"]], "ivy.container.utility": [[114, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[114, 2, 1, "", "all"], [114, 2, 1, "", "any"], [114, 2, 1, "", "static_all"], [114, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[116, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[154, 4, 1, "", "handle_nestable"], [155, 4, 1, "", "handle_out_argument"], [156, 4, 1, "", "infer_device"], [157, 4, 1, "", "infer_dtype"], [158, 4, 1, "", "inputs_to_ivy_arrays"], [159, 4, 1, "", "inputs_to_native_arrays"], [160, 4, 1, "", "outputs_to_ivy_arrays"], [161, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[163, 0, 0, "-", "activations"], [199, 0, 0, "-", "compilation"], [201, 0, 0, "-", "constants"], [202, 0, 0, "-", "creation"], [272, 0, 0, "-", "data_type"], [355, 0, 0, "-", "device"], [388, 0, 0, "-", "elementwise"], [672, 0, 0, "-", "general"], [757, 0, 0, "-", "gradients"], [798, 0, 0, "-", "layers"], [815, 0, 0, "-", "linear_algebra"], [887, 0, 0, "-", "losses"], [903, 0, 0, "-", "manipulation"], [964, 0, 0, "-", "meta"], [968, 0, 0, "-", "nest"], [986, 0, 0, "-", "norms"], [992, 0, 0, "-", "random"], [1004, 0, 0, "-", "searching"], [1009, 0, 0, "-", "set"], [1030, 0, 0, "-", "sorting"], [1041, 0, 0, "-", "statistical"], [1074, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[167, 4, 1, "", "gelu"], [172, 4, 1, "", "leaky_relu"], [177, 4, 1, "", "relu"], [182, 4, 1, "", "sigmoid"], [187, 4, 1, "", "softmax"], [192, 4, 1, "", "softplus"], [198, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[200, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[201, 5, 1, "", "e"], [201, 5, 1, "", "inf"], [201, 5, 1, "", "nan"], [201, 5, 1, "", "newaxis"], [201, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[204, 4, 1, "", "arange"], [202, 4, 1, "", "array"], [208, 4, 1, "", "asarray"], [210, 4, 1, "", "empty"], [214, 4, 1, "", "empty_like"], [217, 4, 1, "", "eye"], [222, 4, 1, "", "from_dlpack"], [224, 4, 1, "", "full"], [228, 4, 1, "", "full_like"], [231, 4, 1, "", "linspace"], [234, 4, 1, "", "logspace"], [239, 4, 1, "", "meshgrid"], [244, 4, 1, "", "native_array"], [247, 4, 1, "", "ones"], [252, 4, 1, "", "ones_like"], [258, 4, 1, "", "tril"], [263, 4, 1, "", "triu"], [266, 4, 1, "", "zeros"], [271, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[272, 1, 1, "", "DefaultDtype"], [272, 1, 1, "", "DefaultFloatDtype"], [272, 1, 1, "", "DefaultIntDtype"], [272, 1, 1, "", "DefaultUintDtype"], [277, 4, 1, "", "as_ivy_dtype"], [278, 4, 1, "", "as_native_dtype"], [282, 4, 1, "", "astype"], [287, 4, 1, "", "broadcast_arrays"], [292, 4, 1, "", "broadcast_to"], [297, 4, 1, "", "can_cast"], [299, 4, 1, "", "closest_valid_dtype"], [300, 4, 1, "", "default_dtype"], [301, 4, 1, "", "default_float_dtype"], [302, 4, 1, "", "default_int_dtype"], [303, 4, 1, "", "default_uint_dtype"], [307, 4, 1, "", "dtype"], [309, 4, 1, "", "dtype_bits"], [313, 4, 1, "", "finfo"], [315, 4, 1, "", "function_supported_dtypes"], [316, 4, 1, "", "function_unsupported_dtypes"], [320, 4, 1, "", "iinfo"], [322, 4, 1, "", "invalid_dtype"], [326, 4, 1, "", "is_bool_dtype"], [331, 4, 1, "", "is_float_dtype"], [336, 4, 1, "", "is_int_dtype"], [338, 4, 1, "", "is_uint_dtype"], [339, 4, 1, "", "promote_types"], [343, 4, 1, "", "result_type"], [345, 4, 1, "", "set_default_dtype"], [346, 4, 1, "", "set_default_float_dtype"], [347, 4, 1, "", "set_default_int_dtype"], [348, 4, 1, "", "set_default_uint_dtype"], [349, 4, 1, "", "type_promote_arrays"], [350, 4, 1, "", "unset_default_dtype"], [351, 4, 1, "", "unset_default_float_dtype"], [352, 4, 1, "", "unset_default_int_dtype"], [353, 4, 1, "", "unset_default_uint_dtype"], [354, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[272, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[272, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[272, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[272, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[355, 1, 1, "", "DefaultDevice"], [357, 1, 1, "", "Profiler"], [358, 4, 1, "", "as_ivy_dev"], [359, 4, 1, "", "as_native_dev"], [360, 4, 1, "", "clear_mem_on_dev"], [361, 4, 1, "", "default_device"], [365, 4, 1, "", "dev"], [367, 4, 1, "", "dev_util"], [368, 4, 1, "", "get_all_ivy_arrays_on_dev"], [369, 4, 1, "", "gpu_is_available"], [370, 4, 1, "", "num_cpu_cores"], [371, 4, 1, "", "num_gpus"], [372, 4, 1, "", "num_ivy_arrays_on_dev"], [373, 4, 1, "", "percent_used_mem_on_dev"], [374, 4, 1, "", "print_all_ivy_arrays_on_dev"], [375, 4, 1, "", "set_default_device"], [376, 4, 1, "", "set_split_factor"], [377, 4, 1, "", "split_factor"], [378, 4, 1, "", "split_func_call"], [383, 4, 1, "", "to_device"], [384, 4, 1, "", "total_mem_on_dev"], [385, 4, 1, "", "tpu_is_available"], [386, 4, 1, "", "unset_default_device"], [387, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[355, 2, 1, "", "__enter__"], [355, 2, 1, "", "__exit__"], [355, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[357, 2, 1, "", "__init__"], [357, 2, 1, "", "start"], [357, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[392, 4, 1, "", "abs"], [397, 4, 1, "", "acos"], [402, 4, 1, "", "acosh"], [407, 4, 1, "", "add"], [412, 4, 1, "", "asin"], [417, 4, 1, "", "asinh"], [422, 4, 1, "", "atan"], [427, 4, 1, "", "atan2"], [432, 4, 1, "", "atanh"], [437, 4, 1, "", "bitwise_and"], [442, 4, 1, "", "bitwise_invert"], [447, 4, 1, "", "bitwise_left_shift"], [452, 4, 1, "", "bitwise_or"], [457, 4, 1, "", "bitwise_right_shift"], [462, 4, 1, "", "bitwise_xor"], [467, 4, 1, "", "ceil"], [472, 4, 1, "", "cos"], [477, 4, 1, "", "cosh"], [482, 4, 1, "", "divide"], [487, 4, 1, "", "equal"], [492, 4, 1, "", "erf"], [497, 4, 1, "", "exp"], [502, 4, 1, "", "expm1"], [507, 4, 1, "", "floor"], [512, 4, 1, "", "floor_divide"], [517, 4, 1, "", "greater"], [522, 4, 1, "", "greater_equal"], [527, 4, 1, "", "isfinite"], [532, 4, 1, "", "isinf"], [537, 4, 1, "", "isnan"], [542, 4, 1, "", "less"], [547, 4, 1, "", "less_equal"], [552, 4, 1, "", "log"], [557, 4, 1, "", "log10"], [562, 4, 1, "", "log1p"], [567, 4, 1, "", "log2"], [572, 4, 1, "", "logaddexp"], [577, 4, 1, "", "logical_and"], [582, 4, 1, "", "logical_not"], [587, 4, 1, "", "logical_or"], [592, 4, 1, "", "logical_xor"], [594, 4, 1, "", "maximum"], [595, 4, 1, "", "minimum"], [599, 4, 1, "", "multiply"], [604, 4, 1, "", "negative"], [609, 4, 1, "", "not_equal"], [614, 4, 1, "", "positive"], [619, 4, 1, "", "pow"], [624, 4, 1, "", "remainder"], [629, 4, 1, "", "round"], [634, 4, 1, "", "sign"], [639, 4, 1, "", "sin"], [644, 4, 1, "", "sinh"], [649, 4, 1, "", "sqrt"], [654, 4, 1, "", "square"], [660, 4, 1, "", "subtract"], [665, 4, 1, "", "tan"], [666, 4, 1, "", "tanh"], [671, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[676, 4, 1, "", "all_equal"], [678, 4, 1, "", "arg_info"], [679, 4, 1, "", "arg_names"], [680, 4, 1, "", "array_equal"], [681, 4, 1, "", "arrays_equal"], [682, 4, 1, "", "assert_supports_inplace"], [683, 4, 1, "", "cache_fn"], [684, 4, 1, "", "clip_matrix_norm"], [687, 4, 1, "", "clip_vector_norm"], [688, 4, 1, "", "container_types"], [689, 4, 1, "", "copy_array"], [690, 4, 1, "", "cumprod"], [691, 4, 1, "", "cumsum"], [692, 4, 1, "", "current_backend_str"], [693, 4, 1, "", "default"], [694, 4, 1, "", "einops_rearrange"], [695, 4, 1, "", "einops_reduce"], [696, 4, 1, "", "einops_repeat"], [697, 4, 1, "", "exists"], [698, 4, 1, "", "floormod"], [699, 4, 1, "", "fourier_encode"], [700, 4, 1, "", "gather"], [704, 4, 1, "", "gather_nd"], [706, 4, 1, "", "get_all_arrays_in_memory"], [707, 4, 1, "", "get_min_base"], [708, 4, 1, "", "get_min_denominator"], [709, 4, 1, "", "get_nestable_mode"], [710, 4, 1, "", "get_num_dims"], [711, 4, 1, "", "get_referrers_recursive"], [712, 4, 1, "", "has_nans"], [713, 4, 1, "", "indices_where"], [714, 4, 1, "", "inplace_arrays_supported"], [715, 4, 1, "", "inplace_decrement"], [716, 4, 1, "", "inplace_increment"], [717, 4, 1, "", "inplace_update"], [718, 4, 1, "", "inplace_variables_supported"], [719, 4, 1, "", "is_array"], [720, 4, 1, "", "is_ivy_array"], [721, 4, 1, "", "is_ivy_container"], [722, 4, 1, "", "is_native_array"], [723, 4, 1, "", "match_kwargs"], [724, 4, 1, "", "multiprocessing"], [725, 4, 1, "", "num_arrays_in_memory"], [726, 4, 1, "", "one_hot"], [727, 4, 1, "", "print_all_arrays_in_memory"], [728, 4, 1, "", "queue_timeout"], [729, 4, 1, "", "scatter_flat"], [730, 4, 1, "", "scatter_nd"], [731, 4, 1, "", "set_min_base"], [732, 4, 1, "", "set_min_denominator"], [733, 4, 1, "", "set_nestable_mode"], [734, 4, 1, "", "set_queue_timeout"], [735, 4, 1, "", "set_shape_array_mode"], [736, 4, 1, "", "set_tmp_dir"], [737, 4, 1, "", "shape"], [738, 4, 1, "", "shape_array_mode"], [739, 4, 1, "", "stable_divide"], [740, 4, 1, "", "stable_pow"], [741, 4, 1, "", "supports_inplace"], [742, 4, 1, "", "tmp_dir"], [743, 4, 1, "", "to_ivy_shape"], [744, 4, 1, "", "to_list"], [745, 4, 1, "", "to_native_shape"], [750, 4, 1, "", "to_numpy"], [751, 4, 1, "", "to_scalar"], [752, 4, 1, "", "try_else_none"], [753, 4, 1, "", "unset_nestable_mode"], [754, 4, 1, "", "unset_shape_array_mode"], [755, 4, 1, "", "unstack"], [756, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[757, 1, 1, "", "GradientTracking"], [762, 4, 1, "", "adam_step"], [766, 4, 1, "", "adam_update"], [769, 4, 1, "", "execute_with_gradients"], [773, 4, 1, "", "gradient_descent_update"], [778, 4, 1, "", "is_variable"], [782, 4, 1, "", "lamb_update"], [786, 4, 1, "", "lars_update"], [790, 4, 1, "", "optimizer_update"], [792, 4, 1, "", "set_with_grads"], [793, 4, 1, "", "stop_gradient"], [794, 4, 1, "", "unset_with_grads"], [795, 4, 1, "", "variable"], [796, 4, 1, "", "variable_data"], [797, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[757, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[799, 4, 1, "", "conv1d"], [800, 4, 1, "", "conv1d_transpose"], [801, 4, 1, "", "conv2d"], [802, 4, 1, "", "conv2d_transpose"], [803, 4, 1, "", "conv3d"], [804, 4, 1, "", "conv3d_transpose"], [808, 4, 1, "", "depthwise_conv2d"], [810, 4, 1, "", "dropout"], [811, 4, 1, "", "linear"], [812, 4, 1, "", "lstm_update"], [813, 4, 1, "", "multi_head_attention"], [814, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[819, 4, 1, "", "cholesky"], [823, 4, 1, "", "cross"], [826, 4, 1, "", "det"], [829, 4, 1, "", "diagonal"], [832, 4, 1, "", "eigh"], [835, 4, 1, "", "eigvalsh"], [838, 4, 1, "", "inv"], [842, 4, 1, "", "matmul"], [845, 4, 1, "", "matrix_norm"], [846, 4, 1, "", "matrix_power"], [849, 4, 1, "", "matrix_rank"], [852, 4, 1, "", "matrix_transpose"], [855, 4, 1, "", "outer"], [858, 4, 1, "", "pinv"], [861, 4, 1, "", "qr"], [862, 4, 1, "", "slogdet"], [865, 4, 1, "", "solve"], [868, 4, 1, "", "svd"], [871, 4, 1, "", "svdvals"], [874, 4, 1, "", "tensordot"], [877, 4, 1, "", "trace"], [880, 4, 1, "", "vecdot"], [883, 4, 1, "", "vector_norm"], [886, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[891, 4, 1, "", "binary_cross_entropy"], [896, 4, 1, "", "cross_entropy"], [901, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[907, 4, 1, "", "clip"], [912, 4, 1, "", "concat"], [916, 4, 1, "", "constant_pad"], [920, 4, 1, "", "expand_dims"], [924, 4, 1, "", "flip"], [928, 4, 1, "", "permute_dims"], [932, 4, 1, "", "repeat"], [937, 4, 1, "", "reshape"], [941, 4, 1, "", "roll"], [943, 4, 1, "", "split"], [947, 4, 1, "", "squeeze"], [951, 4, 1, "", "stack"], [955, 4, 1, "", "swapaxes"], [959, 4, 1, "", "tile"], [963, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[965, 4, 1, "", "fomaml_step"], [966, 4, 1, "", "maml_step"], [967, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[969, 4, 1, "", "all_nested_indices"], [970, 4, 1, "", "copy_nest"], [971, 4, 1, "", "index_nest"], [972, 4, 1, "", "insert_into_nest_at_index"], [973, 4, 1, "", "insert_into_nest_at_indices"], [974, 4, 1, "", "map"], [975, 4, 1, "", "map_nest_at_index"], [976, 4, 1, "", "map_nest_at_indices"], [977, 4, 1, "", "multi_index_nest"], [978, 4, 1, "", "nested_any"], [979, 4, 1, "", "nested_indices_where"], [980, 4, 1, "", "nested_map"], [981, 4, 1, "", "nested_multi_map"], [982, 4, 1, "", "prune_nest_at_index"], [983, 4, 1, "", "prune_nest_at_indices"], [984, 4, 1, "", "set_nest_at_index"], [985, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[990, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[993, 4, 1, "", "multinomial"], [995, 4, 1, "", "randint"], [997, 4, 1, "", "random_normal"], [1000, 4, 1, "", "random_uniform"], [1002, 4, 1, "", "seed"], [1003, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1005, 4, 1, "", "argmax"], [1006, 4, 1, "", "argmin"], [1007, 4, 1, "", "nonzero"], [1008, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1014, 4, 1, "", "unique_all"], [1019, 4, 1, "", "unique_counts"], [1024, 4, 1, "", "unique_inverse"], [1029, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1034, 4, 1, "", "argsort"], [1039, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1045, 4, 1, "", "einsum"], [1049, 4, 1, "", "max"], [1053, 4, 1, "", "mean"], [1057, 4, 1, "", "min"], [1061, 4, 1, "", "prod"], [1065, 4, 1, "", "std"], [1069, 4, 1, "", "sum"], [1073, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1078, 4, 1, "", "all"], [1083, 4, 1, "", "any"]], "ivy.inspection": [[1089, 4, 1, "", "add_array_specs"], [1090, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1093, 0, 0, "-", "activations"], [1096, 0, 0, "-", "converters"], [1098, 0, 0, "-", "initializers"], [1107, 0, 0, "-", "layers"], [1119, 0, 0, "-", "module"], [1121, 0, 0, "-", "norms"], [1123, 0, 0, "-", "optimizers"], [1129, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1094, 1, 1, "", "GEGLU"], [1095, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1094, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1095, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1097, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1098, 1, 1, "", "Constant"], [1100, 1, 1, "", "FirstLayerSiren"], [1101, 1, 1, "", "GlorotUniform"], [1098, 1, 1, "", "KaimingNormal"], [1103, 1, 1, "", "Ones"], [1104, 1, 1, "", "Siren"], [1098, 1, 1, "", "Uniform"], [1106, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1098, 2, 1, "", "__init__"], [1098, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1100, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1101, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1098, 2, 1, "", "__init__"], [1098, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1103, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1104, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1098, 2, 1, "", "__init__"], [1098, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1106, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1108, 1, 1, "", "Conv1D"], [1109, 1, 1, "", "Conv1DTranspose"], [1110, 1, 1, "", "Conv2D"], [1111, 1, 1, "", "Conv2DTranspose"], [1112, 1, 1, "", "Conv3D"], [1113, 1, 1, "", "Conv3DTranspose"], [1114, 1, 1, "", "DepthwiseConv2D"], [1115, 1, 1, "", "Dropout"], [1116, 1, 1, "", "LSTM"], [1117, 1, 1, "", "Linear"], [1118, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1108, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1109, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1110, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1111, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1112, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1113, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1114, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1115, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1116, 2, 1, "", "__init__"], [1116, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1117, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1118, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1120, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1120, 2, 1, "", "__init__"], [1120, 2, 1, "", "build"], [1120, 3, 1, "", "build_mode"], [1120, 3, 1, "", "built"], [1120, 2, 1, "", "check_submod_rets"], [1120, 2, 1, "", "get_mod_key"], [1120, 2, 1, "", "mod_depth"], [1120, 2, 1, "", "mod_height"], [1120, 2, 1, "", "mod_with_top_mod_key_chain"], [1120, 2, 1, "", "save_weights"], [1120, 2, 1, "", "show_mod_in_top_mod"], [1120, 2, 1, "", "show_structure"], [1120, 2, 1, "", "show_v_in_top_v"], [1120, 2, 1, "", "sub_mods"], [1120, 2, 1, "", "track_submod_call_order"], [1120, 2, 1, "", "track_submod_rets"], [1120, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1122, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1122, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1124, 1, 1, "", "Adam"], [1125, 1, 1, "", "LAMB"], [1126, 1, 1, "", "LARS"], [1127, 1, 1, "", "Optimizer"], [1128, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1124, 2, 1, "", "__init__"], [1124, 2, 1, "", "set_state"], [1124, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1125, 2, 1, "", "__init__"], [1125, 2, 1, "", "set_state"], [1125, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1126, 2, 1, "", "__init__"], [1126, 2, 1, "", "set_state"], [1126, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1127, 2, 1, "", "__init__"], [1127, 2, 1, "", "set_state"], [1127, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1128, 2, 1, "", "__init__"], [1128, 2, 1, "", "set_state"], [1128, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1130, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1130, 2, 1, "", "__init__"]], "ivy.verbosity": [[1133, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 118, 126, 135, 152], "handler": [0, 135], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1085], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 152], "competit": 15, "do": [15, 123], "work": [15, 21], "The": [15, 19, 137, 152], "arrai": [15, 23, 26, 119, 122, 128, 137, 165, 170, 175, 180, 185, 190, 196, 207, 212, 220, 226, 237, 242, 250, 256, 261, 269, 280, 285, 290, 295, 305, 311, 318, 324, 329, 334, 341, 363, 381, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 658, 663, 669, 674, 702, 748, 760, 776, 806, 817, 822, 825, 828, 831, 834, 837, 840, 844, 848, 851, 854, 857, 860, 864, 867, 870, 873, 876, 879, 882, 885, 889, 894, 899, 905, 910, 914, 918, 922, 926, 930, 935, 939, 945, 949, 953, 957, 961, 988, 1012, 1017, 1022, 1027, 1032, 1037, 1043, 1047, 1051, 1055, 1059, 1063, 1067, 1071, 1076, 1081], "api": [15, 20, 118, 122, 129, 135, 137, 139, 140], "why": [16, 123], "unifi": [16, 137], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1085], "set": [18, 62, 107, 126, 1009], "up": 18, "clone": 18, "ivi": [18, 118, 121, 123, 124, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 204, 205, 207, 208, 209, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 305, 306, 307, 308, 311, 312, 313, 314, 318, 319, 320, 321, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 341, 342, 343, 344, 363, 364, 365, 366, 380, 381, 382, 383, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 668, 669, 670, 671, 674, 675, 676, 677, 686, 687, 702, 703, 704, 705, 747, 748, 749, 750, 760, 761, 762, 763, 765, 766, 767, 769, 770, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 785, 786, 787, 789, 790, 791, 806, 807, 808, 809, 817, 818, 819, 820, 822, 823, 825, 826, 828, 829, 831, 832, 834, 835, 837, 838, 840, 841, 842, 844, 845, 848, 849, 851, 852, 854, 855, 857, 858, 860, 861, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 889, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 902, 905, 906, 907, 908, 910, 911, 912, 914, 915, 916, 918, 919, 920, 922, 923, 924, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 939, 940, 941, 942, 945, 946, 947, 949, 950, 951, 953, 954, 955, 957, 958, 959, 961, 962, 963, 988, 989, 990, 991, 995, 996, 999, 1000, 1001, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 138], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 133], "commit": [18, 19, 133], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 122, 123], "local": 19, "open": 20, "task": 20, "function": [20, 119, 123, 125, 127, 129, 130, 131, 135, 140, 152], "format": [20, 133], "frontend": [20, 124, 140], "build": [21, 135], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 152], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 36, 81, 123, 130, 138, 152, 272, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "class": [22, 137, 1092], "activ": [24, 73, 163, 1093], "arraywithactiv": 25, "convers": 29, "args_to_ivi": 30, "args_to_n": 31, "to_ivi": 32, "to_n": 33, "creation": [34, 79, 202], "arraywithcr": 35, "type": [36, 81, 125, 130, 152, 272], "arraywithdatatyp": 37, "devic": [38, 83, 119, 131, 355], "arraywithdevic": 39, "elementwis": [40, 85, 388], "arraywithelementwis": 41, "gener": [42, 87, 123, 672], "arraywithgener": 43, "gradient": [44, 89, 757], "arraywithgradi": 45, "imag": [46, 91], "arraywithimag": 47, "layer": [48, 93, 798, 1107], "arraywithlay": 49, "linear": [50, 95, 811, 815, 1117], "algebra": [50, 95, 815], "arraywithlinearalgebra": 51, "loss": [52, 97, 887], "arraywithloss": 53, "manipul": [54, 99, 903], "arraywithmanipul": 55, "norm": [56, 101, 986, 1121], "arraywithnorm": 57, "random": [58, 103, 992], "arraywithrandom": 59, "search": [60, 105, 1004], "arraywithsearch": 61, "arraywithset": 63, "sort": [64, 109, 1030, 1036, 1037, 1038, 1039], "arraywithsort": 65, "statist": [66, 111, 1041], "arraywithstatist": 67, "util": [68, 113, 1074], "arraywithutil": 69, "wrap": [70, 115, 127], "add_ivy_array_instance_method": 71, "contain": [72, 77, 129, 138, 166, 168, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 195, 197, 205, 209, 213, 215, 218, 221, 223, 227, 229, 232, 235, 238, 240, 243, 245, 248, 251, 253, 255, 257, 260, 262, 265, 268, 270, 281, 283, 286, 288, 291, 293, 296, 298, 306, 308, 312, 314, 319, 321, 325, 327, 330, 332, 335, 337, 342, 344, 364, 366, 380, 382, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 657, 659, 662, 664, 668, 670, 675, 677, 686, 703, 705, 747, 749, 761, 763, 765, 767, 770, 772, 774, 777, 779, 781, 783, 785, 787, 789, 791, 807, 809, 818, 820, 841, 890, 892, 895, 897, 900, 902, 906, 908, 911, 915, 919, 923, 927, 931, 933, 936, 940, 942, 946, 950, 954, 958, 962, 989, 991, 996, 999, 1001, 1011, 1013, 1016, 1018, 1021, 1023, 1026, 1028, 1033, 1035, 1038, 1040, 1044, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1077, 1079, 1082, 1084], "containerwithactiv": 74, "base": 75, "containerbas": 76, "containerwithcr": 80, "containerwithdatatyp": 82, "containerwithdevic": 84, "containerwithelementwis": 86, "containerwithgener": 88, "containerwithgradi": 90, "containerwithimag": 92, "containerwithlay": 94, "containerwithlinearalgebra": 96, "containerwithloss": 98, "containerwithmanipul": 100, "containerwithnorm": 102, "containerwithrandom": 104, "containerwithsearch": 106, "containerwithset": 108, "containerwithsort": 110, "containerwithstatist": 112, "containerwithutil": 114, "add_ivy_container_instance_method": 116, "deep": 117, "dive": 117, "navig": 118, "code": 118, "categor": 118, "submodul": 118, "design": [118, 134, 1085], "argument": [119, 130, 131, 132], "exampl": [119, 121, 124, 133], "out": [119, 132], "dtype": [119, 304, 305, 306, 307], "number": 119, "oper": [119, 137, 152], "integ": 119, "sequenc": 119, "nestabl": [119, 125, 129], "docstr": [120, 121], "tan": [121, 661, 663, 664, 665], "roll": [121, 938, 939, 940, 941], "add": [121, 404, 405, 406, 407], "hypothesi": 123, "import": 123, "strategi": 123, "integr": 123, "we": 123, "need": 123, "helper": 123, "how": 123, "write": 123, "effect": 123, "bonu": 123, "extend": 123, "featur": 123, "self": 123, "consist": 123, "explicit": 123, "test_array_funct": 123, "introduct": 124, "primari": 125, "composit": 125, "mix": 125, "standalon": 125, "conveni": 125, "nativ": 128, "handl": 128, "instanc": [129, 137], "method": [129, 137, 138], "static": 129, "special": 129, "modul": [130, 131, 139, 1119, 1120], "other": [130, 131], "unsupport": 130, "inplac": 132, "updat": 132, "copi": 132, "lint": 133, "check": [133, 152], "hook": 133, "automat": 133, "reformat": 133, "befor": 133, "block": 135, "framework": [135, 136, 1092], "graph": [135, 140], "compil": [135, 140, 199, 200], "monkei": 137, "patch": 137, "construct": 138, "represent": 138, "recurs": 138, "built": 138, "ins": 138, "access": 138, "save": 138, "load": 138, "comparison": 138, "custom": [138, 152], "case": 138, "compartment": 138, "configur": 138, "network": [138, 140], "weight": 138, "state": [139, 152], "initi": [139, 1098], "optim": [139, 1123, 1127], "transpil": 140, "role": 140, "convert": [140, 1096], "model": [140, 147, 152], "builder": 142, "ecosystem": 143, "gym": [144, 151], "mech": 145, "memori": [146, 151], "robot": [148, 151], "vision": [149, 151], "extens": [150, 1085], "appli": 151, "librari": 151, "mechan": 151, "faq": 152, "maintain": 152, "version": 152, "dynam": 152, "size": 152, "shape": [152, 737, 1009, 1010, 1014, 1015, 1019, 1025, 1029], "control": 152, "flow": 152, "auto": 152, "differenti": 152, "replica": 152, "parallel": 152, "support": 152, "altern": 152, "structur": 152, "func": 153, "wrapper": 153, "handle_nest": 154, "handle_out_argu": 155, "infer_devic": 156, "infer_dtyp": 157, "inputs_to_ivy_arrai": 158, "inputs_to_native_arrai": 159, "outputs_to_ivy_arrai": 160, "to_native_arrays_and_back": 161, "gelu": [164, 165, 166, 167, 1095], "static_gelu": 168, "leaky_relu": [169, 170, 171, 172], "static_leaky_relu": 173, "relu": [174, 175, 176, 177], "static_relu": 178, "sigmoid": [179, 180, 181, 182], "static_sigmoid": 183, "softmax": [184, 185, 186, 187], "static_softmax": 188, "softplu": [189, 190, 191, 192], "static_softplu": 193, "tanh": [194, 196, 197, 198, 666], "static_tanh": 195, "constant": 201, "note": [202, 219, 222], "arang": [203, 204], "static_arang": 205, "asarrai": [206, 207, 208], "static_asarrai": 209, "empti": 210, "empty_lik": [211, 212, 213, 214], "static_empty_lik": 215, "ey": [216, 217], "static_ey": 218, "from_dlpack": [219, 220, 221, 222], "static_from_dlpack": 223, "full": 224, "full_lik": [225, 226, 227, 228], "static_full_lik": 229, "linspac": [230, 231], "static_linspac": 232, "logspac": [233, 234], "static_logspac": 235, "meshgrid": [236, 237, 238, 239], "static_meshgrid": 240, "native_arrai": [241, 242, 243, 244], "static_native_arrai": 245, "ones": [246, 247], "static_on": 248, "ones_lik": [249, 250, 251, 252], "static_ones_lik": 253, "tril": [254, 256, 257, 258], "static_tril": 255, "triu": [259, 261, 262, 263], "static_triu": 260, "zero": [264, 266, 1106], "static_zero": 265, "zeros_lik": [267, 269, 270, 271], "static_zeros_lik": 268, "as_ivy_dtyp": 277, "as_native_dtyp": 278, "astyp": [279, 280, 281, 282], "static_astyp": 283, "broadcast_arrai": [284, 285, 286, 287], "static_broadcast_arrai": 288, "broadcast_to": [289, 290, 291, 292], "static_broadcast_to": 293, "can_cast": [294, 295, 296, 297], "static_can_cast": 298, "closest_valid_dtyp": 299, "default_dtyp": 300, "default_float_dtyp": 301, "default_int_dtyp": 302, "default_uint_dtyp": 303, "static_dtyp": 308, "dtype_bit": 309, "finfo": [310, 311, 312, 313], "static_finfo": 314, "function_supported_dtyp": 315, "function_unsupported_dtyp": 316, "iinfo": [317, 318, 319, 320], "static_iinfo": 321, "invalid_dtyp": 322, "is_bool_dtyp": [323, 324, 325, 326], "static_is_bool_dtyp": 327, "is_float_dtyp": [328, 329, 330, 331], "static_is_float_dtyp": 332, "is_int_dtyp": [333, 334, 335, 336], "static_is_int_dtyp": 337, "is_uint_dtyp": 338, "promote_typ": 339, "result_typ": [340, 341, 342, 343], "static_result_typ": 344, "set_default_dtyp": 345, "set_default_float_dtyp": 346, "set_default_int_dtyp": 347, "set_default_uint_dtyp": 348, "type_promote_arrai": 349, "unset_default_dtyp": 350, "unset_default_float_dtyp": 351, "unset_default_int_dtyp": 352, "unset_default_uint_dtyp": 353, "valid_dtyp": 354, "profil": 357, "as_ivy_dev": 358, "as_native_dev": 359, "clear_mem_on_dev": 360, "default_devic": 361, "dev": [362, 363, 364, 365], "static_dev": 366, "dev_util": 367, "get_all_ivy_arrays_on_dev": 368, "gpu_is_avail": 369, "num_cpu_cor": 370, "num_gpu": 371, "num_ivy_arrays_on_dev": 372, "percent_used_mem_on_dev": 373, "print_all_ivy_arrays_on_dev": 374, "set_default_devic": 375, "set_split_factor": 376, "split_factor": 377, "split_func_cal": 378, "to_devic": [379, 381, 382, 383], "static_to_devic": 380, "total_mem_on_dev": 384, "tpu_is_avail": 385, "unset_default_devic": 386, "used_mem_on_dev": 387, "ab": [389, 390, 391, 392], "static_ab": 393, "aco": [394, 395, 396, 397], "static_aco": 398, "acosh": [399, 400, 401, 402], "static_acosh": 403, "static_add": 408, "asin": [409, 410, 411, 412], "static_asin": 413, "asinh": [414, 415, 416, 417], "static_asinh": 418, "atan": [419, 420, 421, 422], "static_atan": 423, "atan2": [424, 425, 426, 427], "static_atan2": 428, "atanh": [429, 430, 431, 432], "static_atanh": 433, "bitwise_and": [434, 435, 436, 437], "static_bitwise_and": 438, "bitwise_invert": [439, 440, 441, 442], "static_bitwise_invert": 443, "bitwise_left_shift": [444, 445, 446, 447], "static_bitwise_left_shift": 448, "bitwise_or": [449, 450, 451, 452], "static_bitwise_or": 453, "bitwise_right_shift": [454, 455, 456, 457], "static_bitwise_right_shift": 458, "bitwise_xor": [459, 460, 461, 462], "static_bitwise_xor": 463, "ceil": [464, 465, 466, 467], "static_ceil": 468, "co": [469, 470, 471, 472], "static_co": 473, "cosh": [474, 475, 476, 477], "static_cosh": 478, "divid": [479, 480, 481, 482], "static_divid": 483, "equal": [484, 485, 486, 487], "static_equ": 488, "erf": [489, 490, 491, 492], "static_erf": 493, "exp": [494, 495, 496, 497], "static_exp": 498, "expm1": [499, 500, 501, 502], "static_expm1": 503, "floor": [504, 505, 506, 507], "static_floor": 508, "floor_divid": [509, 510, 511, 512], "static_floor_divid": 513, "greater": [514, 515, 516, 517], "static_great": 518, "greater_equ": [519, 520, 521, 522], "static_greater_equ": 523, "isfinit": [524, 525, 526, 527], "static_isfinit": 528, "isinf": [529, 530, 531, 532], "static_isinf": 533, "isnan": [534, 535, 536, 537], "static_isnan": 538, "less": [539, 540, 541, 542], "static_less": 543, "less_equ": [544, 545, 546, 547], "static_less_equ": 548, "log": [549, 550, 551, 552], "static_log": 553, "log10": [554, 555, 556, 557], "static_log10": 558, "log1p": [559, 560, 561, 562], "static_log1p": 563, "log2": [564, 565, 566, 567], "static_log2": 568, "logaddexp": [569, 570, 571, 572], "static_logaddexp": 573, "logical_and": [574, 575, 576, 577], "static_logical_and": 578, "logical_not": [579, 580, 581, 582], "static_logical_not": 583, "logical_or": [584, 585, 586, 587], "static_logical_or": 588, "logical_xor": [589, 590, 591, 592], "static_logical_xor": 593, "maximum": 594, "minimum": 595, "multipli": [596, 597, 598, 599], "static_multipli": 600, "neg": [601, 602, 603, 604], "static_neg": 605, "not_equ": [606, 607, 608, 609], "static_not_equ": 610, "posit": [611, 612, 613, 614], "static_posit": 615, "pow": [616, 617, 618, 619], "static_pow": 620, "remaind": [621, 622, 623, 624], "static_remaind": 625, "round": [626, 627, 628, 629], "static_round": 630, "sign": [631, 632, 633, 634], "static_sign": 635, "sin": [636, 637, 638, 639], "static_sin": 640, "sinh": [641, 642, 643, 644], "static_sinh": 645, "sqrt": [646, 647, 648, 649], "static_sqrt": 650, "squar": [651, 652, 653, 654], "static_squar": 655, "subtract": [656, 658, 659, 660], "static_subtract": 657, "static_tan": 662, "trunc": [667, 669, 670, 671], "static_trunc": 668, "all_equ": [673, 674, 675, 676], "static_all_equ": 677, "arg_info": 678, "arg_nam": 679, "array_equ": 680, "arrays_equ": 681, "assert_supports_inplac": 682, "cache_fn": 683, "clip_matrix_norm": 684, "clip_vector_norm": [685, 686, 687], "container_typ": 688, "copy_arrai": 689, "cumprod": 690, "cumsum": 691, "current_backend_str": 692, "default": 693, "einops_rearrang": 694, "einops_reduc": 695, "einops_repeat": 696, "exist": 697, "floormod": 698, "fourier_encod": 699, "gather": 700, "gather_nd": [701, 702, 703, 704], "static_gather_nd": 705, "get_all_arrays_in_memori": 706, "get_min_bas": 707, "get_min_denomin": 708, "get_nestable_mod": 709, "get_num_dim": 710, "get_referrers_recurs": 711, "has_nan": 712, "indices_wher": 713, "inplace_arrays_support": 714, "inplace_decr": 715, "inplace_incr": 716, "inplace_upd": 717, "inplace_variables_support": 718, "is_arrai": 719, "is_ivy_arrai": 720, "is_ivy_contain": 721, "is_native_arrai": 722, "match_kwarg": 723, "multiprocess": 724, "num_arrays_in_memori": 725, "one_hot": 726, "print_all_arrays_in_memori": 727, "queue_timeout": 728, "scatter_flat": 729, "scatter_nd": 730, "set_min_bas": 731, "set_min_denomin": 732, "set_nestable_mod": 733, "set_queue_timeout": 734, "set_shape_array_mod": 735, "set_tmp_dir": 736, "shape_array_mod": 738, "stable_divid": 739, "stable_pow": 740, "supports_inplac": 741, "tmp_dir": 742, "to_ivy_shap": 743, "to_list": 744, "to_native_shap": 745, "to_numpi": [746, 748, 749, 750], "static_to_numpi": 747, "to_scalar": 751, "try_else_non": 752, "unset_nestable_mod": 753, "unset_shape_array_mod": 754, "unstack": 755, "value_is_nan": 756, "adam_step": [759, 760, 761, 762], "static_adam_step": 763, "adam_upd": [764, 765, 766], "static_adam_upd": 767, "execute_with_gradi": [768, 769], "static_execute_with_gradi": 770, "gradient_descent_upd": [771, 772, 773], "static_gradient_descent_upd": 774, "is_vari": [775, 776, 777, 778], "static_is_vari": 779, "lamb_upd": [780, 781, 782], "static_lamb_upd": 783, "lars_upd": [784, 785, 786], "static_lars_upd": 787, "optimizer_upd": [788, 789, 790], "static_optimizer_upd": 791, "set_with_grad": 792, "stop_gradi": 793, "unset_with_grad": 794, "variabl": 795, "variable_data": 796, "with_grad": 797, "conv1d": [799, 1108], "conv1d_transpos": 800, "conv2d": [801, 1110], "conv2d_transpos": 802, "conv3d": [803, 1112], "conv3d_transpos": 804, "depthwise_conv2d": [805, 806, 807, 808], "static_depthwise_conv2d": 809, "dropout": [810, 1115], "lstm_updat": 812, "multi_head_attent": 813, "scaled_dot_product_attent": 814, "choleski": [816, 817, 818, 819], "static_choleski": 820, "cross": [821, 822, 823], "det": [824, 825, 826], "diagon": [827, 828, 829], "eigh": [830, 831, 832], "eigvalsh": [833, 834, 835], "inv": [836, 837, 838], "matmul": [839, 840, 841, 842], "matrix_norm": [843, 844, 845], "matrix_pow": 846, "matrix_rank": [847, 848, 849], "matrix_transpos": [850, 851, 852], "outer": [853, 854, 855], "pinv": [856, 857, 858], "qr": [859, 860, 861], "slogdet": 862, "solv": [863, 864, 865], "svd": [866, 867, 868], "svdval": [869, 870, 871], "tensordot": [872, 873, 874], "trace": [875, 876, 877], "vecdot": [878, 879, 880], "vector_norm": [881, 882, 883], "vector_to_skew_symmetric_matrix": [884, 885, 886], "binary_cross_entropi": [888, 889, 890, 891], "static_binary_cross_entropi": 892, "cross_entropi": [893, 894, 895, 896], "static_cross_entropi": 897, "sparse_cross_entropi": [898, 899, 900, 901], "static_sparse_cross_entropi": 902, "clip": [904, 905, 906, 907], "static_clip": 908, "concat": [909, 910, 911, 912], "constant_pad": [913, 914, 915, 916], "expand_dim": [917, 918, 919, 920], "flip": [921, 922, 923, 924], "permute_dim": [925, 926, 927, 928], "repeat": [929, 930, 931, 932], "static_repeat": 933, "reshap": [934, 935, 936, 937], "static_rol": 942, "split": 943, "squeez": [944, 945, 946, 947], "stack": [948, 949, 950, 951], "swapax": [952, 953, 954, 955], "tile": [956, 957, 958, 959], "zero_pad": [960, 961, 962, 963], "meta": 964, "fomaml_step": 965, "maml_step": 966, "reptile_step": 967, "nest": 968, "all_nested_indic": 969, "copy_nest": 970, "index_nest": 971, "insert_into_nest_at_index": 972, "insert_into_nest_at_indic": 973, "map": 974, "map_nest_at_index": 975, "map_nest_at_indic": 976, "multi_index_nest": 977, "nested_ani": 978, "nested_indices_wher": 979, "nested_map": 980, "nested_multi_map": 981, "prune_nest_at_index": 982, "prune_nest_at_indic": 983, "set_nest_at_index": 984, "set_nest_at_indic": 985, "layer_norm": [987, 988, 989, 990], "static_layer_norm": 991, "multinomi": 993, "randint": [994, 995], "static_randint": 996, "random_norm": 997, "random_uniform": [998, 999, 1000], "static_random_uniform": 1001, "seed": 1002, "shuffl": 1003, "argmax": 1005, "argmin": 1006, "nonzero": 1007, "where": 1008, "depend": [1009, 1010, 1014, 1015, 1019, 1025, 1029], "output": [1009, 1010, 1014, 1015, 1019, 1025, 1029], "unique_al": [1010, 1012, 1013, 1014], "static_unique_al": 1011, "unique_count": [1015, 1017, 1018, 1019], "static_unique_count": 1016, "unique_invers": [1020, 1022, 1023, 1024], "static_unique_invers": 1021, "unique_valu": [1025, 1027, 1028, 1029], "static_unique_valu": 1026, "argsort": [1031, 1032, 1033, 1034], "static_argsort": 1035, "static_sort": 1040, "einsum": [1042, 1043, 1044, 1045], "max": [1046, 1047, 1048, 1049], "mean": [1050, 1051, 1052, 1053], "min": [1054, 1055, 1056, 1057], "prod": [1058, 1059, 1060, 1061], "std": [1062, 1063, 1064, 1065], "sum": [1066, 1067, 1068, 1069], "var": [1070, 1071, 1072, 1073], "all": [1075, 1076, 1077, 1078], "static_al": 1079, "ani": [1080, 1081, 1082, 1083], "static_ani": 1084, "content": 1085, "overview": 1085, "quick": 1085, "start": 1085, "roadmap": [1085, 1091], "citat": 1085, "inspect": 1088, "add_array_spec": 1089, "fn_array_spec": 1090, "geglu": 1094, "to_ivy_modul": 1097, "firstlayersiren": 1100, "glorotuniform": 1101, "Ones": 1103, "siren": 1104, "conv1dtranspos": 1109, "conv2dtranspos": 1111, "conv3dtranspos": 1113, "depthwiseconv2d": 1114, "lstm": 1116, "multiheadattent": 1118, "layernorm": 1122, "adam": 1124, "lamb": 1125, "lar": 1126, "sgd": 1128, "sequenti": [1129, 1130], "verbos": 1132, "cprint": 1133}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})